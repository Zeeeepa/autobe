[{"id":"b51adde4-9e1e-4412-9641-df0869e3ab12","type":"userMessage","contents":[{"type":"text","text":"I want to create a political/economic discussion board. Since I'm not familiar with programming, please write a requirements analysis report as you see fit. The report should be approximately 5 pages long.\n"}],"created_at":"2025-06-09T05:49:50.474Z"},{"id":"41a9ba88-e261-4c82-bdf6-3e55a10f5ea4","type":"userMessage","contents":[{"type":"text","text":"I want to create a political/economic discussion board. Since I'm not familiar with programming, please write a requirements analysis report as you see fit. The report should be approximately 5 pages long.\n"}],"created_at":"2025-07-22T13:29:36.553Z"},{"id":"0ce7f33c-9853-4d7c-a9c9-b135fff907d8","type":"analyze","reason":"The user has clearly delegated the requirements analysis planning to me and requested a comprehensive, approximately 5-page requirements analysis report for a political/economic discussion board, specifying they are not familiar with programming and want the planning to be handled as I see fit.","prefix":"discussionboard","roles":[{"name":"admin","description":"Has full control over board management, user moderation, and content regulation. Can manage user roles, remove posts/comments, and oversee overall platform activity."},{"name":"moderator","description":"Can monitor content, handle reports, moderate discussions, remove inappropriate posts/comments, and assist with enforcing community guidelines."},{"name":"member","description":"Registered user who can create posts, comment, like/dislike content, and participate in all discussions."},{"name":"guest","description":"Unauthenticated user who can view public content but cannot participate or post until registering."}],"files":{"00_discussionboard_toc.md":"# Discussion Board Requirements Analysis – Table of Contents\n\nThis document outlines the structure and navigational index for the Discussion Board system's requirements analysis. Each entry links to a detailed specification, supporting a clear and actionable development process.\n\n---\n\n## Table of Contents\n\n1. [Business Overview & Objectives](./01_discussionboard_business_overview.md)\n   - Purpose, vision, and strategic objectives of launching the discussion board.\n   - Problem statement, KPIs, and baseline metrics.\n\n2. [User Roles, Personas, and Journeys](./02_discussionboard_user_roles_and_journeys.md)\n   - Detailed breakdown of user types: Admin, Moderator, Member, Guest\n   - User personas and usage scenarios\n   - Typical user journeys and key workflows\n\n3. [Functional & Non-Functional Requirements](./03_discussionboard_functional_and_nonfunctional_requirements.md)\n   - Core features, permission matrix, and constraints\n   - Usability, security, performance, and compliance requirements\n\n4. [Service Rules and High-level API Specification](./04_discussionboard_rules_and_api_spec.md)\n   - Community guidelines, moderation policies, escalation procedures\n   - Role-based access control (RBAC) matrix\n   - Overview of key endpoints and request/response patterns\n\n---\n\n### How to Use This Document\n- Each section is directly linked for easy access—click to navigate to detailed requirements and specification pages.\n- Documents are organized to support iterative review and clear stakeholder communication.\n- For best results, stakeholders should review sections in sequence, progressing from business context through to implementation specifics.\n\n---","01_discussionboard_business_overview.md":"# Business Overview: Political/Economic Discussion Board\n\n## 1. Purpose & Vision\nThe Political/Economic Discussion Board aims to provide a transparent, inclusive, and engaging online platform for civil discourse on political and economic issues. In a rapidly changing information ecosystem, our objective is to support informed debate, fact-based discussions, and educational content sharing among diverse user groups. The board aspires to become a trusted resource for community members, where respectful exchange and diverse perspectives foster growth and learning.\n\n## 2. Business Objectives\n- **Cultivate Informed Discourse:** Foster a culture of fact-based analysis and respectful dialogue to increase the quality of user contributions.\n- **Community Growth and Engagement:** Grow an active community by lowering barriers to entry while promoting meaningful participation.\n- **Trust and Safety:** Maintain a safe environment through effective moderation, robust policies, and clear user guidelines to reduce harmful or low-quality content.\n- **Content Diversity:** Encourage a wide array of content types (articles, reactions, polls, Q&A) to address user needs and drive ongoing engagement.\n- **Sustainable Expansion:** Lay groundwork for scalable growth (additional topics, internationalization, partnerships) and future monetization through premium features or content partnerships.\n\n## 3. Product Scope\nThe discussion board will initially support:\n- Thematic Boards (e.g., elections, global markets, public policy)\n- Posting & Commenting with multimedia support\n- Voting (Like/Dislike) on posts and comments\n- User Roles: Admins, Moderators, Members, Guests\n- Reporting/Moderation tools\n- Guidelines & Community Rules\n- Notification & Subscription features for content tracking\n- Responsive design for web and mobile web access\n\nFurther functionality and APIs will be summarized in dedicated requirements documentation ([see requirements](./03_discussionboard_functional_and_nonfunctional_requirements.md)).\n\n## 4. Target Users & Stakeholders\n- **Informed Citizens:** Individuals interested in current affairs who seek to learn and contribute.\n- **Avid Debaters:** Users passionate about advocacy, policy, and peer engagement.\n- **Observers & Guests:** Newcomers or casual browsers who may later become contributors.\n- **Moderators/Admins:** Trusted users and staff who safeguard platform integrity.\n- **Partner Organizations:** Media or educational bodies interested in collaboration or knowledge dissemination.\n\n## 5. Success Criteria & KPIs\n- Community size and daily/weekly active users\n- Volume and quality of posts/comments (measured through engagement metrics)\n- Low incidence of content violations and timely moderation actions\n- Growth of registered users and transition rate from guests to members\n\n## 6. Risks & Mitigation\n- **Toxicity & Abuse:** Minimized via robust community guidelines and timely moderation\n- **Low Engagement:** Addressed by proactive content seeding, incentives, and regular feature improvements\n- **Misinformation:** Countered with fact-checking features and community reporting\n\nThis overview sets the context for detailed planning in following documents.","02_discussionboard_user_roles_and_journeys.md":"# User Roles and Journeys in the Discussion Board\n\n## Overview\nThis document outlines the user roles, their permissions, registration/authentication processes, and diverse user journeys within the Discussion Board platform. Adhering to these profiles and flows ensures a cohesive experience, clarity in feature design, and efficient platform management by role.\n\n---\n\n## 1. User Roles & Permissions\n\n| Role       | Description                                                                                      | Key Permissions                                                    |\n|------------|--------------------------------------------------------------------------------------------------|--------------------------------------------------------------------|\n| **Admin**      | Full platform authority, oversees content, users, rules, and moderation                   | Manage users, configure settings, remove/restore content, audit    |\n| **Moderator**  | Enforces community guidelines and content quality                                           | Remove posts/comments, handle reports, support admins              |\n| **Member**     | Registered users; primary content creators and interactors                                 | Create/edit/delete own posts/comments, react, report content       |\n| **Guest**      | Unauthenticated visitors; limited to viewing public content                                | View public content only                                           |\n\n\n---\n\n## 2. Registration, Authentication, & Role Assignment\n\n### 2.1 Guest → Member Flow\n1. Guest visits the discussion board, browses topics and posts.\n2. On attempting to post, comment, or react, the guest is prompted to register.\n3. Registration collects essential information (username, password, email, agreement to terms).\n4. Upon successful registration and (optional) email verification, the user is authenticated as a member.\n\n### 2.2 Role Elevation (Member → Moderator → Admin)\n- Promotion or demotion is performed by an admin via the platform’s management interface.\n- Moderators may be promoted from members based on community standing; admin roles are tightly controlled.\n\n### 2.3 Authentication\n- Users authenticate via login (credentials: username/email + password or federated SSO if enabled).\n- Session management follows industry standards (token/cookie-based auth).\n\n---\n\n## 3. User Journeys\n\n### 3.1 Admin Journey\n- Reviews platform analytics and moderation queue.\n- Appoints moderators, adjusts permissions, or handles escalated incidents.\n- Updates content policy, removes abusive users, and oversees technical configurations.\n\n### 3.2 Moderator Journey\n- Monitors flagged content, reviews reports from members.\n- Uses moderation tools to remove or edit posts/comments violating policies.\n- Communicates resolution outcomes to users and escalates complex cases to admins.\n\n### 3.3 Member Journey\n- Registers and customizes profile.\n- Participates by posting, commenting, or reacting to content.\n- Reports inappropriate material and engages in votes or discussions.\n\n### 3.4 Guest Journey\n- Explores categories and reads public discussions.\n- Sees clear calls-to-action encouraging registration to join and contribute.\n\n---\n\n## 4. Permissions Matrix (by Role and Action)\n\n| Action                  | Admin | Moderator | Member | Guest |\n|-------------------------|:-----:|:---------:|:------:|:-----:|\n| View Topics/Posts       |  ✔   |     ✔     |   ✔    |   ✔   |\n| Create Posts/Comments   |  ✔   |     ✔     |   ✔    |   ✖   |\n| Edit Own Posts/Comments |  ✔   |     ✔     |   ✔    |   ✖   |\n| Remove Any Content      |  ✔   |     ✔     |   ✖    |   ✖   |\n| Moderate Reports        |  ✔   |     ✔     |   ✖    |   ✖   |\n| Manage Users/Roles      |  ✔   |     ✖     |   ✖    |   ✖   |\n| Report Content          |  ✔   |     ✔     |   ✔    |   ✖   |\n| Access Admin Tools      |  ✔   |     ✖     |   ✖    |   ✖   |\n| Like/Dislike Content    |  ✔   |     ✔     |   ✔    |   ✖   |\n\n---\n\n## 5. User Role Transitions Diagram\n\n```mermaid\nflowchart TD\n  Guest-->|Registers|Member\n  Member-->|Admin Promotes|Moderator\n  Moderator-->|Admin Promotes|Admin\n  Admin-->|Demotes|Moderator\n  Moderator-->|Demotes|Member\n  Member-->|Deactivates|Guest\n```\n\n---\n\n## 6. Summary\n- The platform’s user experience is driven by a clearly articulated role structure, secure authentication, and defined permissions for action.\n- Journeys and permissions matrices enable scoping, onboarding, and content safety measures for each role while supporting platform growth and healthy community interaction.\n\n[Return to Table of Contents](./00_discussionboard_toc.md)\n","03_discussionboard_functional_and_nonfunctional_requirements.md":"# Discussion Board Functional & Non-Functional Requirements\n\n---\n\n## 1. Overview\nThis document outlines the detailed functional and non-functional requirements for the Discussion Board system. It provides precise direction for developers, product managers, and stakeholders to ensure a robust, secure, and scalable platform supporting vibrant user-driven conversations and effective moderation.\n\n---\n\n## 2. Functional Requirements\n\n### 2.1 User Authentication & Roles\n- **Role-based Access Control:**\n    - Four defined roles: admin, moderator, member, guest.\n    - Role-specific permissions strictly enforced via authentication middleware for all APIs.\n- **Registration & Login:**\n    - Members register, verify email, and log in securely.\n    - Guest users may browse public content but must register to interact.\n\n### 2.2 Posting & Commenting\n- **Create/Read/Update/Delete (CRUD):**\n    - Members can create, edit, and delete their own posts and comments.\n    - Admins and moderators can edit/delete any post or comment for moderation purposes.\n    - Post editing logs visible to admins and moderators.\n- **Threaded Discussions:**\n    - Support for nested replies to enable structured conversations.\n\n### 2.3 Content Discovery & Interaction\n- **Search & Filter:**\n    - Keyword search and filtering by author, tags, date, popularity, or post status.\n- **Like/Dislike & Engagement:**\n    - Members can like/dislike posts and comments; total counts displayed.\n    - View counters incremented for each unique visit.\n\n### 2.4 Moderation & Community Guidelines\n- **Flag/Report Functionality:**\n    - Members can report posts/comments for review using descriptive reasons.\n- **Moderation Dashboards:**\n    - Admins/moderators access to flagged content, action history, and resolution tools.\n- **Content Policies:**\n    - System-level profanity filtering and automated spam detection.\n- **User Management:**\n    - Admins can ban/mute users, edit user roles, and enforce warnings.\n\n### 2.5 Notification System\n- **Event-driven Alerts:**\n    - Members receive email or in-app notifications for replies, likes, mentions, and moderation actions.\n- **Settings:**\n    - Users manage notification preferences (on/off by type).\n\n### 2.6 Audit & Logging\n- **Action Audit Trail:**\n    - All critical actions logged for accountability, especially those by admins and moderators.\n\n---\n\n## 3. Non-Functional Requirements\n\n### 3.1 Security\n- **Data Protection:**\n    - Passwords encrypted with strong hashing algorithms.\n    - Protection against CSRF, XSS, and injection attacks.\n- **Role Enforcement:**\n    - APIs require strict authentication and permissions checks aligned to each role.\n\n### 3.2 Performance & Scalability\n- **Load Handling:**\n    - Support thousands of concurrent users and dynamic content updates.\n    - Optimized database queries for listing, searching, and sorting.\n- **Availability:**\n    - 99.9% uptime goal, leveraging scalable backend and redundant systems.\n\n### 3.3 Usability\n- **Accessibility:**\n    - Platform adheres to WCAG standards, enabling usage by people with disabilities.\n- **Responsiveness:**\n    - User interface supports all mainstream devices and browsers, including mobile and desktop.\n\n### 3.4 Compliance & Data Retention\n- **Data Privacy:**\n    - User data is handled as per regional privacy laws (e.g., GDPR, CCPA as required).\n- **Retention Policy:**\n    - Log and user content retention policy established and configurable by admin.\n\n### 3.5 Localization\n- **Multi-language support:**\n    - UI and notifications adaptable to multiple locales, starting with English as default.\n\n---\n\n## 4. Acceptance Criteria\n- All features must align with defined user roles and flows.\n- Moderation actions must be logged and reviewable.\n- Response time for all user actions (posting, search, moderation) under 2 seconds under normal load.\n- System demonstrates no critical vulnerabilities by completion of penetration testing.\n\n[Return to TOC](./00_discussionboard_toc.md)","04_discussionboard_rules_and_api_spec.md":"# 04. Discussion Board Rules and API Specification\n\n## 1. Community Rules & Guidelines\n\n### 1.1 General Principles\n- Maintain respectful and constructive communication.\n- No discrimination, hate speech, personal attacks, or harassment.\n- No posting of illegal, explicit, or offensive material.\n- Respect privacy: Do not share personal information of others.\n\n### 1.2 Posting Guidelines\n- Stick to the relevant topic for each board.\n- Use clear, descriptive titles and appropriate tags.\n- Duplicate posts, spamming, and excessive self-promotion are not allowed.\n- Content must not infringe on copyrights or intellectual property.\n\n### 1.3 Commenting Etiquette\n- Constructive criticism only; avoid rudeness or hostility.\n- Avoid derailing discussions or posting unrelated commentary.\n- Refrain from flooding comment threads.\n\n### 1.4 Prohibited Activities\n- Plagiarized or stolen content\n- Attempts to circumvent moderation or technical restrictions\n- Automated or scripted posting without permission\n- Manipulating likes/dislikes or user reputation\n\n## 2. Moderation Policy\n\n### 2.1 Moderation Roles & Powers\n- **Admin:** Full moderation, edit/delete any content, manage user roles and access, oversee moderator actions.\n- **Moderator:** Remove inappropriate content, handle reports, warn or temporarily ban users, enforce community guidelines.\n\n### 2.2 Reporting & Content Review\n- Users can report inappropriate posts or comments via a reporting feature.\n- Moderators review reports within 24 hours and decide on actions: warning, removal, suspension, or referral to admins.\n- Major policy violations are escalated to admins for possible permanent bans.\n\n## 3. API Specification\n\n### 3.1 Authentication & Authorization\n- **Admin/Moderator:** JWT-based authentication required; elevated API privileges enforced server-side.\n- **Member:** JWT required; access limited to posting, editing/deleting own content, and participating in discussions.\n- **Guest:** No authentication; read-only API access to public content.\n\n### 3.2 Core API Endpoints\n| Method | Endpoint                    | Roles           | Description                                    |\n|--------|-----------------------------|-----------------|------------------------------------------------|\n| GET    | /api/boards                 | All             | Retrieve list of boards                        |\n| POST   | /api/boards                 | Admin           | Create a new board                             |\n| DELETE | /api/boards/{boardId}       | Admin           | Delete a board                                 |\n| GET    | /api/posts?board={id}       | All             | List posts in board                            |\n| POST   | /api/posts                  | Member          | Create a new post                              |\n| GET    | /api/posts/{postId}         | All             | View a specific post                           |\n| PATCH  | /api/posts/{postId}         | Admin, Moderator, Author | Edit post                         |\n| DELETE | /api/posts/{postId}         | Admin, Moderator, Author | Delete post                     |\n| POST   | /api/posts/{postId}/like    | Member          | Like or dislike a post                         |\n| POST   | /api/comments               | Member          | Add comment to a post                          |\n| PATCH  | /api/comments/{commentId}   | Admin, Moderator, Author | Edit comment                    |\n| DELETE | /api/comments/{commentId}   | Admin, Moderator, Author | Delete comment                  |\n| POST   | /api/reports                | Member          | Report inappropriate content                   |\n\n### 3.3 Rate Limiting & Abuse Prevention\n- Per-user rate limits on posting, commenting, liking to deter spam/bots.\n- All write actions logged for audit purposes.\n- Automated IP blocks on repeated abuse or brute force attempts.\n\n### 3.4 Error Handling\n- Standardized error responses. E.g., 401 Unauthorized, 403 Forbidden, 404 Not Found, 429 Too Many Requests, 422 Validation Error.\n- Validation errors return field-specific messages.\n\n\n## 4. Acceptance Criteria\n- All user actions conform to the rules and moderation policies above.\n- API requests are authenticated/authorized according to user role.\n- Moderators can efficiently review and resolve reports within defined SLAs.\n\n[← Back to ToC](./00_discussionboard_toc.md)"},"step":0,"created_at":"2025-07-22T13:29:38.382Z","completed_at":"2025-07-22T13:30:19.885Z"},{"type":"prisma","id":"b1956ca3-800c-400b-bdb7-a54c68503a85","created_at":"2025-07-22T13:30:41.642Z","completed_at":"2025-07-22T13:32:46.423Z","reason":"Step to the Prisma DB schema generation after requirements analysis","description":"","result":{"success":true,"data":{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"discussionboard_sections","description":"Board Section entity - This implements the requirement for organizing multiple boards into logical sections/category headings as described in the requirements (see Business Overview and Board API). \n\nProvides top-level grouping for boards (e.g., 'Politics', 'Economy'). Each section contains multiple boards but supports explicit sorting and labeling for easy discovery. Maintains 3NF by storing only section-specific data and referencing boards elsewhere. \n\nExample: Used for filtering the board list UI, and configuring board display order in admin settings.\nKey relationships: One section to many boards (referenced from discussionboard_boards). \nSpecial behaviors: Deletions should be restricted if boards exist within a section.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for a section."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Section name - Implements the section/categorization requirement. Human-readable name to display to users (e.g., 'Politics'). 3NF maintained by storing only the atomic label here. Example: Section dropdown in UI.","nullable":false},{"name":"description","type":"string","description":"Section description - Short text clarifying purpose or scope. 3NF compliant atomic text. Example: 'For regional and national issues.'","nullable":true},{"name":"sort_order","type":"int","description":"Explicit sort order for UI display - Allows admin-defined ordering of sections. Maintains 3NF by only storing atomic order number. Example: Integer used for section sorting.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp - Implements audit and data retention requirement. 3NF as an atomic date-time value. Example: used for sorting/recently added filter.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp - Used for audits and last-modified displays. Example: UI 'last updated' column.","nullable":false}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["sort_order"]}],"ginIndexes":[]},{"name":"discussionboard_boards","description":"Board entity - Implements the requirement for multiple thematic boards within the platform (see Business Overview, API spec). \n\nRepresents a specific discussion board (e.g., 'Elections 2025'). Each board belongs to a section and can have subscriptions, tags, settings, etc. Maintains 3NF by separating board details from posts/content, and referencing only the relevant section. \n\nExample: Used for displaying board list, posting endpoints, and enforcing board-level settings.\nKey relationships: Many-to-one with discussionboard_sections (foreign key); referenced by other tables for posts, subscriptions, and tags.\nSpecial behaviors: Section deletion/renaming cascades/updates needed; cannot delete section if boards exist.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for a board."},"foreignFields":[{"name":"discussionboard_section_id","type":"uuid","description":"Belonged section's {@link discussionboard_sections.id} - Links board to its section for groupings. Required to ensure boards are organized. Maintains referential integrity and 3NF.","relation":{"name":"fk_discussionboard_boards_section","targetModel":"discussionboard_sections","field":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Board name - Implements the logical board separation requirement. Human-readable board title (e.g., 'Elections 2025'). Strictly atomic per 3NF. Example: Board selector UI.","nullable":false},{"name":"description","type":"string","description":"Board description - Explanatory text for users to understand board's focus. Enforces 3NF by storing only description here. Example: Board hover tooltip.","nullable":true},{"name":"rules","type":"string","description":"Custom board-specific rules (markdown/plaintext) - Implements requirement for community rules per board. Maintains 3NF. Example: Board custom code of conduct.","nullable":true},{"name":"is_active","type":"boolean","description":"Active/inactive flag - Used by admins to hide inactive/archived boards. Follows 3NF by being an atomic status indicator. Example: Board visibility toggle.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for the board - For audits, logs, and recency filters. 3NF atomic timestamp. Example: Used in new board creation tracking.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated time - For audit trail and change tracking. Example: UI listing.","nullable":false}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[{"fieldNames":["discussionboard_section_id"]}],"ginIndexes":[]},{"name":"discussionboard_tags","description":"Tag entity - Implements the requirement for tagging boards and enabling filtered search/discovery (see Functional Requirements and API spec). \n\nStores tag definitions for use on boards or posts. Tags can be assigned to boards (via M:N relationship implemented in other domain if needed). Maintains 3NF as a definition-only table; actual assignments are managed elsewhere. \n\nExample: Used for board tag suggestions, filtering board/post lists. \nKey relationships: Used in tag-board mappings but maintains strict normalization here.\nSpecial behaviors: Only atomic data stored; all application-side assignment linked elsewhere.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique tag identifier."},"foreignFields":[],"plainFields":[{"name":"tag","type":"string","description":"Tag value - Human-friendly tag (e.g., 'policy', 'economy'). Implements tag definition requirement. Enforces normalization by keeping atomic labels only here. Example: Tag chips in UI.","nullable":false},{"name":"description","type":"string","description":"Tag description - Explains scope/purpose of tag for admin and users. Enforces 3NF. Example: Tag hover info.","nullable":true},{"name":"created_at","type":"datetime","description":"Tag creation timestamp - Required for record keeping. Maintains 3NF. Example: Used for sorting tags by newest.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last tag update time - For audit logs and change history in admin UI. 3NF compliant.","nullable":false}],"uniqueIndexes":[{"fieldNames":["tag"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"discussionboard_board_subscriptions","description":"Board subscription entity - Implements the board subscription/notification feature (see Notification System and Functional Requirements). \n\nTracks which members are subscribed to which boards, to drive notifications and update feeds. Maintains 3NF as a pure M:N/junction entity: each record (subscription) is atomic, linking a single user to a single board. \n\nExample: Used for fast lookup of a member's subscribed boards, or when sending board notifications. \nKey relationships: Foreign keys to boards (this file) and discussionboard_members (external Actors component). \nSpecial behaviors: Unsubscribe (soft delete or remove record); composite uniqueness enforced.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique subscription ID."},"foreignFields":[{"name":"discussionboard_board_id","type":"uuid","description":"Subscribed board's {@link discussionboard_boards.id} - Enforces which board is subscribed. Enforces 3NF as atomic foreign key. Example: All subscriptions for a board.","relation":{"name":"fk_db_board_subs_board","targetModel":"discussionboard_boards","field":"id"},"unique":false,"nullable":false},{"name":"discussionboard_member_id","type":"uuid","description":"Subscribed member's {@link discussionboard_members.id} (from Actors component) - Links subscription to member (ALREADY CREATED in Actors schema). 3NF: purely as a foreign key. Example: All user subscriptions.","relation":{"name":"fk_db_board_subs_member","targetModel":"discussionboard_members","field":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"created_at","type":"datetime","description":"Time of subscription - For audit/logging, 3NF as single timestamp. Example: Recent subscriber statistics.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussionboard_board_id","discussionboard_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["discussionboard_member_id"]}],"ginIndexes":[]},{"name":"discussionboard_board_settings","description":"Board settings entity - Implements requirement for customizable settings per board (see Functional Requirements and Board API). \n\nStores various administrative or feature settings per board (e.g., allow images, require moderator approval). Maintains 3NF: atomic settings per board, without computed fields; extensible. \n\nExample: Used to toggle features for specific boards or override defaults.\nKey relationships: Unique per board (1:1 with boards). \nSpecial behaviors: Board can have only one settings record; model extensible for future settings.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for board settings."},"foreignFields":[{"name":"discussionboard_board_id","type":"uuid","description":"Target board's {@link discussionboard_boards.id} - Settings apply to this board. Enforced unique for 1:1. Example: Feature toggle lookup for a specific board.","relation":{"name":"fk_db_board_settings_board","targetModel":"discussionboard_boards","field":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"allow_images","type":"boolean","description":"Allow image uploads - Implements toggle for image posting. 3NF: atomic flag only, actual images handled elsewhere. Example: Image post permissions UI.","nullable":false},{"name":"require_moderator_approval","type":"boolean","description":"Require moderator approval for new posts - Supports moderation flow requirement. 3NF flag only. Example: Restricted board setup.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit/history. 3NF as atomic timestamp. Example: For admin settings log.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated time for settings, for auditing. Example: Settings history tracking.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussionboard_board_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"discussionboard_notification_settings","description":"User notification setting entity - Implements user preference storage for receiving board/content notifications (see Notification System and Functional Requirements). \n\nStores per-user notification toggles/preferences for the Discussion Board domain. Maintains 3NF by keeping atomic preference values per user. Used to configure which types of notifications are received (thread activity, announcements, etc). \n\nExample: Used when sending notification emails, or rendering notification settings UI. \nKey relationships: Linked to members (via discussionboard_member_id from Actors component).\nSpecial behaviors: Unique-per-user enforced, 1:1 with member record.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique notification setting ID."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Belonged member's {@link discussionboard_members.id} (from Actors component) - Which member these preferences apply to. Unique for 1:1. Example: Editing notification preferences for logged-in member.","relation":{"name":"fk_db_notification_settings_member","targetModel":"discussionboard_members","field":"id"},"unique":true,"nullable":false}],"plainFields":[{"name":"receive_board_notifications","type":"boolean","description":"Receive notifications for new board activity/posts - Implements the core notification toggle. 3NF as atomic preference. Example: User settings UI toggle.","nullable":false},{"name":"receive_mention_notifications","type":"boolean","description":"Receive mention notifications - Controls alerts for mentions/replies. 3NF flag. Example: Mention alert switch on settings page.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for notification prefs history/audit. 3NF.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last prefs update timestamp, for audit/history. 3NF.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussionboard_member_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"discussionboard_admins","description":"Platform administrator role assignment - Implements the functional requirement for privileged admin accounts as found in the requirements (see: User Roles & Permissions). \n\nAdministrators oversee content and user moderation at the highest level; this table records accounts with full platform control and is central for RBAC enforcement. Maintains strict 3NF normalization by storing only direct attributes of the admin role, referencing user membership via foreign key. For example, promotes a member to admin role or demotes. \n\nKey relationships: links to discussionboard_members (user basis), may be referenced in audit logs or moderation actions.  Special behaviors: Granting this role cascades full access; must be auditable.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique admin role record identifier."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Belonged member's {@link discussionboard_members.id}. Assigns admin privileges to a registered member.","relation":{"name":"discussionboard_admins_member","fields":["discussionboard_member_id"],"references":["id"],"targetModel":"discussionboard_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Datetime when admin role was granted. Implements temporal auditability as per action trail requirements. For example, captures promotion time.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Datetime when admin role was revoked (if applicable). Null unless admin privileges are removed. Supports audit and compliance.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussionboard_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["granted_at"]}],"ginIndexes":[]},{"name":"discussionboard_moderators","description":"Moderator role assignment - Implements the requirement for a moderation role to enforce community guidelines (see: Moderation Roles & Policies, Permissions Matrix).\n\nThis table records which members serve as moderators. It maintains strict normalization by referencing user membership while tracking assignment and revocation dates. Used for permission elevation, logging, and audit trails. For example, a user promoted from member to moderator.\n\nKey relationships: References discussionboard_members. Special behaviors: Can be demoted; actions logged for accountability.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique moderator assignment record."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Belonged member's {@link discussionboard_members.id} - the member elevated to moderator role.","relation":{"name":"discussionboard_moderators_member","fields":["discussionboard_member_id"],"references":["id"],"targetModel":"discussionboard_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"granted_at","type":"datetime","description":"Datetime when moderator role was granted. Implements temporal audit trail for promotions. For example, captures elevation to moderator.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Datetime when moderator role was revoked (null if active). Supports demotion/historical queries.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussionboard_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["granted_at"]}],"ginIndexes":[]},{"name":"discussionboard_members","description":"Registered discussion board user accounts (members) - Implements registration/authentication requirements (User Authentication & Roles, CRUD Permissions).\n\nThis table represents all registered, authenticated users. It enforces 3NF by storing only per-user, non-derived data. For example, account creation, activation status, ban integration and role assignment references.\n\nKey relationships: Referenced by admin, moderator, profile, and user email tables. Special behaviors: Used for primary ownership of posts/comments.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique member account identifier."},"foreignFields":[],"plainFields":[{"name":"username","type":"string","description":"Account username - unique member login handle fulfilling the registration requirement; not case-sensitive and normalized for identity mapping. Ensures user uniqueness at platform level. Example: johndoe.","nullable":false},{"name":"password_hash","type":"string","description":"Hashed password for secure authentication (never raw password), per non-functional security requirement. Complies with encryption policy and data protection. Example: bcrypt or Argon2 hash string.","nullable":false},{"name":"created_at","type":"datetime","description":"Datetime when member account was created. Implements registration audit trail and supports search/sorting. Example: upon sign up.","nullable":false},{"name":"activated_at","type":"datetime","description":"Datetime when account was activated/completed verification. Null if not verified yet. Example: after email confirmation workflow.","nullable":true},{"name":"deactivated_at","type":"datetime","description":"Datetime of account deactivation (soft delete or permanent). Null if active. Supports retention policy and reactivation scenarios.","nullable":true}],"uniqueIndexes":[{"fieldNames":["username"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussionboard_guests","description":"Guest user visitation - Implements guest journey tracking for unauthenticated users (see: User Roles & Journeys, Audit Trail).\n\nThis table stores guest/browser sessions for analytics, restrictions, and future up-sell. Maintains normalized structure by storing atomic session info only, not mixing with registered user data. For example, may log guest page views or promote registration.\n\nKey relationships: May later link to discussionboard_members if guest converts to member.\nSpecial behaviors: Short-lived; can be joined to logs for traffic analysis.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique guest session identifier."},"foreignFields":[],"plainFields":[{"name":"session_token","type":"string","description":"Opaque session cookie or token identifying the guest browser. Supports uniqueness and privacy tracking. For example: UUID or secure random token.","nullable":false},{"name":"created_at","type":"datetime","description":"Datetime guest session was initiated. Implements guest activity timeline; supports reporting and session expiry logic.","nullable":false}],"uniqueIndexes":[{"fieldNames":["session_token"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussionboard_user_profiles","description":"Extended member profile details - Implements profile customization as per member/user journey requirements.\n\nThis table holds profile metadata (bio, display name, avatar, etc.), referencing the core member account. Maintains normalization by separating profile from core authentication/role. Example: user changes display name or avatar; updates here without affecting core login.\n\nKey relationships: Foreign key to discussionboard_members. Special behaviors: all fields except member linkage are nullable, allowing partial profiles.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique profile record identifier."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Belonged member's {@link discussionboard_members.id}. One-to-one mapping from member to user profile.","relation":{"name":"discussionboard_user_profiles_member","fields":["discussionboard_member_id"],"references":["id"],"targetModel":"discussionboard_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"display_name","type":"string","description":"Public display name or nickname for the user (not required to match username). Implements customization requirement as per usability guideline. Example: John R.","nullable":true},{"name":"bio","type":"string","description":"Short user biography or introduction, as per personalization feature. Maintains normalized structure; null if not set.","nullable":true},{"name":"avatar_url","type":"uri","description":"Profile image/avatar URI, facilitating multimedia enhancement and personalization. Null if not provided; stored as URI string. Example: https://cdn.site/avatar/123.","nullable":true},{"name":"created_at","type":"datetime","description":"Datetime profile was created. Implements audit trail for customization events.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime profile was last updated, supports version awareness for profile changes. Enables profile history tracking.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussionboard_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"discussionboard_user_emails","description":"Email addresses associated with member accounts - Implements requirements for registration, verification, contact and notification preferences (Functional: Registration & Email Verification).\n\nMaintains one-to-many normalized mapping for supporting multiple verified emails per account, anti-abuse, and notification flexibility. Only stores atomic email info, never cached tokens or codes. Example: primary and backup email tracking; supports search, notification, verification workflows.\n\nKey relationships: Foreign key to discussionboard_members. Special behaviors: unique constraint on (discussionboard_member_id, email), optional verification per email.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique email record identifier."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Belonged member's {@link discussionboard_members.id}. Each email mapped to a registered user.","relation":{"name":"discussionboard_user_emails_member","fields":["discussionboard_member_id"],"references":["id"],"targetModel":"discussionboard_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"email","type":"string","description":"Email address string associated with the account. Implements registration, notification, and recovery flows - separate from core username for flexibility. Ensures normalization. Example: jane@host.com.","nullable":false},{"name":"is_verified","type":"boolean","description":"Whether the email has passed verification (registration, notification, etc). Implements email confirmation flow; only verified addresses are used for key system functions. Defaults to false until confirmation.","nullable":false},{"name":"is_primary","type":"boolean","description":"Whether this email is the primary contact address for the member (UI and system requirement). Each account can have at most one primary email. For example: used for login, password reset.","nullable":false},{"name":"added_at","type":"datetime","description":"Datetime this email address was added or linked. Supports registration, change tracking, and reporting requirements.","nullable":false},{"name":"verified_at","type":"datetime","description":"Datetime when verification was completed. Nullable to allow in-progress or failed verifications. Maintains normalization; no denormalized workflow states.","nullable":true}],"uniqueIndexes":[{"fieldNames":["discussionboard_member_id","email"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["added_at"]}],"ginIndexes":[]},{"name":"discussionboard_user_auths","description":"External/federated authentication records - Implements secure multi-provider authentication flows per non-functional requirements (Authentication API & Security).\n\nNormalizes all external auth connections (OAuth, SSO) for each account, supporting identity linking, revocation, and RBAC; stores only atomic data and references. Example: Google/Facebook/Twitter/SSO logins mapped to a user. Key relationships: Foreign key to discussionboard_members. Special behaviors: Composite uniqueness (member, provider, provider_user_id).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique external authentication record."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Belonged member's {@link discussionboard_members.id} - the member holding this external auth.","relation":{"name":"discussionboard_user_auths_member","fields":["discussionboard_member_id"],"references":["id"],"targetModel":"discussionboard_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"provider","type":"string","description":"Authentication provider/service name (e.g., google, facebook, github). Implements SSO/federated auth requirement. Normalized string, never contains secrets. Example: 'google'.","nullable":false},{"name":"provider_user_id","type":"string","description":"User identifier from auth provider (not internal ID). Used for provider-based account merging and uniqueness/lookup. Example: OAuth subject ID.","nullable":false},{"name":"linked_at","type":"datetime","description":"Datetime this external auth connection was established. For sign-on/audit purposes; always required.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Datetime external auth was revoked/unlinked (null if active). Implements revocation/idle account closure workflows.","nullable":true}],"uniqueIndexes":[{"fieldNames":["provider","provider_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["linked_at"]}],"ginIndexes":[]},{"name":"discussionboard_user_sessions","description":"Active and historical login sessions for members - Implements authentication, auditing, session management, and inactivity/logout flows (see: Authentication & Security)\n\nEach record represents one signed-in session for a member, using opaque tokens. Maintains security by avoiding caching sensitive credentials; stores only atomic values (tokens, validity timestamps), never pre-calculated or denormalized status. For example, used for login expiration, forced logout, device management.\n\nKey relationships: Foreign key to discussionboard_members. Special behaviors: Tokens unique, support session trace/logs.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique session record identifier."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Referenced member's {@link discussionboard_members.id}. Each session is associated with a single member.","relation":{"name":"discussionboard_user_sessions_member","fields":["discussionboard_member_id"],"references":["id"],"targetModel":"discussionboard_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"session_token","type":"string","description":"Opaque authentication token for this session. Used client-side for identifying login state. Uniqueness enforced; never stores raw credentials. Example: random UUID or JWT value.","nullable":false},{"name":"created_at","type":"datetime","description":"Datetime session was created. Enables security/audit trace, expiry/refresh handling.","nullable":false},{"name":"expires_at","type":"datetime","description":"Datetime when the session token will expire. Supports session timeout and security policies. Example: set per login policy or on grant.","nullable":false},{"name":"revoked_at","type":"datetime","description":"Datetime session was revoked/invalidated (e.g., logout, idle timeout, forced admin action). Null if still valid. Maintains data integrity and audit trail.","nullable":true}],"uniqueIndexes":[{"fieldNames":["session_token"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"name":"discussionboard_posts","description":"Discussion Board Posts - This implements the core posting requirement from the requirements document (sections 2.2, 2.3). Represents top-level user posts within boards, tracking authorship, timestamps, and relation to board. Strict 3NF: all aggregate data (like counts, view counts) are handled in separate tables or materialized views. Links to edits, likes, views, comments. Example usage: a member or moderator creates a new discussion topic under a board.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"board_id","type":"uuid","description":"Belonged board's {@link discussionboard_boards.id}","relation":{"name":"board","targetModel":"discussionboard_boards","targetField":"id"},"unique":false,"nullable":false},{"name":"author_id","type":"uuid","description":"Author user's {@link discussionboard_members.id} (or moderator/admin).","relation":{"name":"author","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the post. Atomic for search and filter.","nullable":false},{"name":"body","type":"string","description":"Full body/content of post. No derived or calculated fields.","nullable":false},{"name":"created_at","type":"datetime","description":"Created timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Nullable soft-deletion timestamp if deleted by moderation.","nullable":true}],"uniqueIndexes":[{"fieldNames":["board_id","id"],"unique":true}],"plainIndexes":[{"fieldNames":["author_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"discussionboard_post_edits","description":"Discussion Board Post Edit Log - Implements snapshot pattern for edit/audit trail compliance. Each row records an edit event for a post, including editor identity and timestamp. No aggregation. Used for edit history, moderation transparency (3NF).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Edited post's {@link discussionboard_posts.id}","relation":{"name":"post","targetModel":"discussionboard_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"editor_id","type":"uuid","description":"User who made the edit, references member/mod/admin.","relation":{"name":"editor","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"edit_summary","type":"string","description":"Optional description of what changed.","nullable":true},{"name":"edited_at","type":"datetime","description":"Timestamp of edit event.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["edited_at"]}],"ginIndexes":[]},{"name":"discussionboard_post_likes","description":"Discussion Board Post Likes/Dislikes - Each row is a user's like/dislike for a specific post (3NF-compliant; no aggregates). Used for engagement analytics, anti-abuse, audit trail. Unique per (post_id, user_id).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Liked/disliked post's {@link discussionboard_posts.id}","relation":{"name":"post","targetModel":"discussionboard_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"user_id","type":"uuid","description":"Expressing user id (member/mod/admin) {@link discussionboard_members.id}","relation":{"name":"user","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"is_like","type":"boolean","description":"True if like, false if dislike.","nullable":false},{"name":"created_at","type":"datetime","description":"Event timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["post_id","user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussionboard_post_views","description":"Discussion Board Post Views - Each row is a tracked viewing event, atomic and 3NF. No aggregated view counts stored. References viewer (nullable if anonymous/guest), post, and session. Example usage: user/visitor views a post; a row is logged for analytics and anti-abuse purposes.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Viewed post's {@link discussionboard_posts.id}","relation":{"name":"post","targetModel":"discussionboard_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"user_id","type":"uuid","description":"Viewer id (nullable for unauthenticated/guest view) {@link discussionboard_members.id}","relation":{"name":"user","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"session_id","type":"uuid","description":"Session id for anonymous/guest view tracking; useful for analytics. Nullable.","nullable":true},{"name":"viewed_at","type":"datetime","description":"Timestamp view occurred.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id","viewed_at"]}],"ginIndexes":[]},{"name":"discussionboard_comments","description":"Discussion Board Comments (Replies) - Implements comment/nested reply feature. Each row is an atomic comment (not aggregate or summary); threaded/reply-to is enabled via parent_id. Relates to a post, optional parent comment, and has author and timestamps. Example: a reply to a comment will set parent_id; a reply to post will keep parent_id null.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"The post this comment is on {@link discussionboard_posts.id}","relation":{"name":"post","targetModel":"discussionboard_posts","targetField":"id"},"unique":false,"nullable":false},{"name":"author_id","type":"uuid","description":"Comment author's user id (member/mod/admin) {@link discussionboard_members.id}","relation":{"name":"author","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":false},{"name":"parent_id","type":"uuid","description":"Optional recursive parent for a reply chain (refers to this table's id). Nullable for top-level replies.","relation":{"name":"parent","targetModel":"discussionboard_comments","targetField":"id","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"body","type":"string","description":"Comment text (atomic, not computed).","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp for moderation/audit purposes.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["author_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"discussionboard_comment_likes","description":"Likes/Dislikes for Discussion Board Comments - 3NF: one row per user per comment liking or disliking. No aggregate or summary fields. Used for engagement analytics, anti-abuse. Unique per (comment_id, user_id).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"comment_id","type":"uuid","description":"Liked/disliked comment id {@link discussionboard_comments.id}","relation":{"name":"comment","targetModel":"discussionboard_comments","targetField":"id"},"unique":false,"nullable":false},{"name":"user_id","type":"uuid","description":"Reacting user id (member/mod/admin) {@link discussionboard_members.id}","relation":{"name":"user","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"is_like","type":"boolean","description":"True if like, false if dislike.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp like/dislike event was created.","nullable":false}],"uniqueIndexes":[{"fieldNames":["comment_id","user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"discussionboard_comment_edits","description":"Discussion Board Comment Edit Log - Each row is an atomic edit event for a comment (snapshot audit pattern). Tracks which comment was edited, who did it, and when. Used for audit transparency in moderation context (3NF).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"comment_id","type":"uuid","description":"Edited comment's {@link discussionboard_comments.id}","relation":{"name":"comment","targetModel":"discussionboard_comments","targetField":"id"},"unique":false,"nullable":false},{"name":"editor_id","type":"uuid","description":"User who edited the comment {@link discussionboard_members.id}","relation":{"name":"editor","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"edit_summary","type":"string","description":"Optional brief note on edit reason or summary.","nullable":true},{"name":"edited_at","type":"datetime","description":"Edit event timestamp.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["comment_id"]},{"fieldNames":["edited_at"]}],"ginIndexes":[]},{"name":"discussionboard_comment_views","description":"Unique view/read tracking for comments (analytics, engagement). Atomic: one row per (comment, user/session); no aggregates. Relates to comment, viewing user (nullable/guest), and session. Used for analytics/reporting (never pre-calculated).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"comment_id","type":"uuid","description":"Viewed comment's {@link discussionboard_comments.id}","relation":{"name":"comment","targetModel":"discussionboard_comments","targetField":"id"},"unique":false,"nullable":false},{"name":"user_id","type":"uuid","description":"User id of viewer (nullable/guest) {@link discussionboard_members.id}","relation":{"name":"user","targetModel":"discussionboard_members","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"session_id","type":"uuid","description":"Nullable session id to support anonymous/guest visitor analytics.","nullable":true},{"name":"viewed_at","type":"datetime","description":"Timestamp of view event.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["comment_id","viewed_at"]}],"ginIndexes":[]}]},{"filename":"schema-04-moderation.prisma","namespace":"Moderation","models":[{"name":"discussionboard_reports","description":"User-generated content reports - This implements requirements from 'Moderation & Community Guidelines' and 'Functional Requirements: Flag/Report Functionality'. \nAllows members to report inappropriate posts or comments for moderator/admin review. Maintains 3NF compliance by storing one report per row with foreign keys linking to reporting member and target content. For example, when a member reports a comment, a record is created with details about the report and the referenced comment. \nKey relationships: References reporter (discussionboard_members), content type (post/comment), and target content.\nSpecial behaviors: Only one active report per content per reporting member is allowed until resolution.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for each report."},"foreignFields":[{"name":"reporting_member_id","type":"uuid","description":"Referencing the member who filed the report: {@link discussionboard_members.id}.","relation":{"name":"fk_reports_reporting_member","targetModel":"discussionboard_members"},"unique":false,"nullable":false},{"name":"target_post_id","type":"uuid","description":"Referenced post if report concerns a post: {@link discussionboard_posts.id}. Nullable if report is for a comment.","relation":{"name":"fk_reports_target_post","targetModel":"discussionboard_posts"},"unique":false,"nullable":true},{"name":"target_comment_id","type":"uuid","description":"Referenced comment if report concerns a comment: {@link discussionboard_comments.id}. Nullable if report is for a post.","relation":{"name":"fk_reports_target_comment","targetModel":"discussionboard_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"reason","type":"string","description":"Reason for reporting - Implements the 'report reason' requirement. \nDescribes why the member has flagged the content. Ensures normalization by storing descriptive report reasons. For example, 'hate speech', 'spam', 'off-topic'.","nullable":false},{"name":"status","type":"string","description":"Status of the report (e.g., pending, reviewed, resolved, rejected). Implements 'moderation workflow' requirements. Only controlled values allowed through app logic.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of when the report was filed. Supports moderation audit trails and reporting flow. Always required.","nullable":false},{"name":"reviewed_at","type":"datetime","description":"Timestamp of when moderators reviewed the report. Nullable until review occurs.","nullable":true},{"name":"resolved_at","type":"datetime","description":"Timestamp when action was taken or report was closed. Nullable until resolved.","nullable":true},{"name":"moderation_note","type":"string","description":"Moderator/admin remarks/comments for this report. Implements 'reviewer comment' requirement. Nullable if moderators did not leave notes.","nullable":true}],"uniqueIndexes":[{"fieldNames":["reporting_member_id","target_post_id"],"unique":true},{"fieldNames":["reporting_member_id","target_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"reason"}]},{"name":"discussionboard_moderation_actions","description":"Moderator or admin actions taken during moderation - Implements the 'Moderation Dashboards' and 'Action Audit Trail' requirements.\nTracks all key actions performed by moderators/admins (e.g., content removal, warning issued, ban applied). Maintains 3NF compliance by recording one action per row linked to the actor and the relevant report/content. For example, when a moderator removes a violating post, the action is logged with actor ID, action type, timestamp, and optional notes.\nKey relationships: Links to actor (admin/moderator/member), the related report, and optionally, the target post or comment. Supports auditability and moderation transparency.\nSpecial behaviors: Serialized log for moderation actions for full traceability.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for moderation action record."},"foreignFields":[{"name":"actor_admin_id","type":"uuid","description":"Actor if admin performed the action: {@link discussionboard_admins.id}. Nullable if actor is moderator/member.","relation":{"name":"fk_moderationactions_actor_admin","targetModel":"discussionboard_admins"},"unique":false,"nullable":true},{"name":"actor_moderator_id","type":"uuid","description":"Actor if moderator performed the action: {@link discussionboard_moderators.id}. Nullable if actor is admin/member.","relation":{"name":"fk_moderationactions_actor_moderator","targetModel":"discussionboard_moderators"},"unique":false,"nullable":true},{"name":"actor_member_id","type":"uuid","description":"Actor if member performed the action: {@link discussionboard_members.id}. Nullable if actor is admin/moderator. For transparency, in case members can self-resolve or retract reports.","relation":{"name":"fk_moderationactions_actor_member","targetModel":"discussionboard_members"},"unique":false,"nullable":true},{"name":"related_report_id","type":"uuid","description":"Linked report this action addresses: {@link discussionboard_reports.id}. Nullable if not directly linked.","relation":{"name":"fk_moderationactions_related_report","targetModel":"discussionboard_reports"},"unique":false,"nullable":true},{"name":"target_post_id","type":"uuid","description":"Target post acted upon (if applicable): {@link discussionboard_posts.id}.","relation":{"name":"fk_moderationactions_target_post","targetModel":"discussionboard_posts"},"unique":false,"nullable":true},{"name":"target_comment_id","type":"uuid","description":"Target comment acted upon (if applicable): {@link discussionboard_comments.id}.","relation":{"name":"fk_moderationactions_target_comment","targetModel":"discussionboard_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of moderation action (e.g. warn, ban, content removal, close report).\nImplements moderation workflow requirements. Only controlled values allowed.","nullable":false},{"name":"action_reason","type":"string","description":"Details or reason for the moderation action. Implements 'audit and rationale' requirements. Example: 'Repeated violations', 'Spam content'.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of when the moderation action was performed. Supports audit trails and workflow sequencing. Required for every action.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["action_type"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"action_reason"}]},{"name":"discussionboard_bans","description":"User bans from the platform - Implements business requirements in 'Moderation & Community Guidelines' and 'User Management'.\nRepresents temporary or permanent user bans imposed by admins or moderators. Maintains 3NF compliance with a table per ban event, linking to the banned user (admin, moderator, or member) and the actor imposing the ban. For example, when a moderator bans a user for policy violation, the record logs the target user, actor, period, reason, and status.\nKey relationships: References the banned user (any role) and the actor.\nSpecial behaviors: Only one active ban at a time per user. Ban status updates tracked by action logs.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for ban record."},"foreignFields":[{"name":"target_admin_id","type":"uuid","description":"Target if banned user was an admin: {@link discussionboard_admins.id}. Nullable if target is not an admin.","relation":{"name":"fk_bans_target_admin","targetModel":"discussionboard_admins","mappingName":"discussionboard_bans_of_target_admin_id"},"unique":false,"nullable":true},{"name":"target_moderator_id","type":"uuid","description":"Target if banned user was a moderator: {@link discussionboard_moderators.id}. Nullable if target is not moderator.","relation":{"name":"fk_bans_target_moderator","targetModel":"discussionboard_moderators","mappingName":"discussionboard_bans_of_target_moderator_id"},"unique":false,"nullable":true},{"name":"target_member_id","type":"uuid","description":"Target if banned user was a member: {@link discussionboard_members.id}. Nullable if not member.","relation":{"name":"fk_bans_target_member","targetModel":"discussionboard_members"},"unique":false,"nullable":true},{"name":"actor_admin_id","type":"uuid","description":"Admin who imposed the ban: {@link discussionboard_admins.id}. Nullable unless ban imposed by admin.","relation":{"name":"fk_bans_actor_admin","targetModel":"discussionboard_admins","mappingName":"discussionboard_bans_of_actor_admin_id"},"unique":false,"nullable":true},{"name":"actor_moderator_id","type":"uuid","description":"Moderator who imposed the ban: {@link discussionboard_moderators.id}. Nullable unless ban imposed by moderator.","relation":{"name":"fk_bans_actor_moderator","targetModel":"discussionboard_moderators","mappingName":"discussionboard_bans_of_actor_moderator_id"},"unique":false,"nullable":true}],"plainFields":[{"name":"ban_reason","type":"string","description":"Reason for ban - Implements explicit rationale requirement. Describes why user was banned. Ensures normalization. E.g. 'Severe harassment', 'Repeated spam'.","nullable":false},{"name":"ban_start_at","type":"datetime","description":"When ban starts. Implements requirement for configurable ban durations. Prevents premature enforcement on the record.","nullable":false},{"name":"ban_end_at","type":"datetime","description":"When ban ends (nullable if permanent). Enforces temporal normalization. E.g. 30-day ban, permanent if null.","nullable":true},{"name":"status","type":"string","description":"Ban status (e.g. active, expired, lifted, scheduled). Controls enforcement by application logic. Implements status audit requirement.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of ban record creation. Supports timeline and reporting.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp for last update to ban record. Audits changes, supports compliance requirements.","nullable":false}],"uniqueIndexes":[{"fieldNames":["target_admin_id"],"unique":true},{"fieldNames":["target_moderator_id"],"unique":true},{"fieldNames":["target_member_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["ban_start_at"]},{"fieldNames":["ban_end_at"]}],"ginIndexes":[{"fieldName":"ban_reason"}]},{"name":"discussionboard_warnings","description":"Warnings issued to users for infractions - Implements requirements under 'User Management' and 'Moderation Dashboards'.\nRepresents warnings (as opposed to bans) issued by moderators/admins to users for lesser violations. Maintains 3NF normalization: Each warning is linked to the warned user and the actor. Useful for progressive discipline enforcement. For example, members with repeated warnings may escalate to a ban.\nKey relationships: Links to the warned user (admin/mod/member) and the actor (admin/mod). \nSpecial behaviors: Track number and reason for warnings for each user; escalation rules handled externally by application logic.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for warning record."},"foreignFields":[{"name":"target_admin_id","type":"uuid","description":"Warned admin (rare): {@link discussionboard_admins.id}. Nullable if not admin.","relation":{"name":"fk_warnings_target_admin","targetModel":"discussionboard_admins","mappingName":"discussionboard_warnings_of_target_admin_id"},"unique":false,"nullable":true},{"name":"target_moderator_id","type":"uuid","description":"Warned moderator (rare): {@link discussionboard_moderators.id}. Nullable if not moderator.","relation":{"name":"fk_warnings_target_moderator","targetModel":"discussionboard_moderators","mappingName":"discussionboard_warnings_of_target_moderator_id"},"unique":false,"nullable":true},{"name":"target_member_id","type":"uuid","description":"Warned member: {@link discussionboard_members.id}. Nullable if not member.","relation":{"name":"fk_warnings_target_member","targetModel":"discussionboard_members"},"unique":false,"nullable":true},{"name":"actor_admin_id","type":"uuid","description":"Admin issuing warning: {@link discussionboard_admins.id}. Nullable unless admin issued.","relation":{"name":"fk_warnings_actor_admin","targetModel":"discussionboard_admins","mappingName":"discussionboard_warnings_of_actor_admin_id"},"unique":false,"nullable":true},{"name":"actor_moderator_id","type":"uuid","description":"Moderator issuing warning: {@link discussionboard_moderators.id}. Nullable unless moderator issued.","relation":{"name":"fk_warnings_actor_moderator","targetModel":"discussionboard_moderators","mappingName":"discussionboard_warnings_of_actor_moderator_id"},"unique":false,"nullable":true},{"name":"related_report_id","type":"uuid","description":"Related report (if warning is result of a report): {@link discussionboard_reports.id}. Nullable if warning is not report-triggered.","relation":{"name":"fk_warnings_related_report","targetModel":"discussionboard_reports"},"unique":false,"nullable":true}],"plainFields":[{"name":"reason","type":"string","description":"Reason for issuing warning - Implements rationale requirement. E.g. 'Minor profanity', 'Off-topic'. Required for context audit.","nullable":false},{"name":"created_at","type":"datetime","description":"When warning was issued. For audit and escalation flows. Required for every warning.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"reason"}]},{"name":"discussionboard_audit_logs","description":"Detailed audit logs for moderation events - Implements all audit and logging requirements outlined under 'Audit & Logging' and referenced throughout Moderation functional requirements. \nStores granular logs about all moderation events, including state changes, permission elevation, and sensitive moderation actions. Maintains 3NF: All fields are atomic, and each log references the related action, actor, and event time. For example, when a moderator changes the status of a report, an audit log is added with actor ID, event type, event detail, and when it occurred.\nKey relationships: Links to actor (admin/mod/member) and optionally to related moderation action or report.\nSpecial behaviors: Immutable by application design - supports regulatory and policy audit needs.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for audit log entry."},"foreignFields":[{"name":"actor_admin_id","type":"uuid","description":"Admin actor (if applicable): {@link discussionboard_admins.id}. Null if not admin.","relation":{"name":"fk_auditlogs_actor_admin","targetModel":"discussionboard_admins"},"unique":false,"nullable":true},{"name":"actor_moderator_id","type":"uuid","description":"Moderator actor (if applicable): {@link discussionboard_moderators.id}. Null if not moderator.","relation":{"name":"fk_auditlogs_actor_moderator","targetModel":"discussionboard_moderators"},"unique":false,"nullable":true},{"name":"actor_member_id","type":"uuid","description":"Member actor (if applicable): {@link discussionboard_members.id}. Null if not member.","relation":{"name":"fk_auditlogs_actor_member","targetModel":"discussionboard_members"},"unique":false,"nullable":true},{"name":"related_report_id","type":"uuid","description":"Related report (if log is for a report event): {@link discussionboard_reports.id}. Nullable if not report-related.","relation":{"name":"fk_auditlogs_related_report","targetModel":"discussionboard_reports"},"unique":false,"nullable":true},{"name":"related_moderation_action_id","type":"uuid","description":"Related moderation action (if log is for an action event): {@link discussionboard_moderation_actions.id}. Nullable if not related to an action.","relation":{"name":"fk_auditlogs_related_moderation_action","targetModel":"discussionboard_moderation_actions"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of event (e.g., permission_change, status_update, ban_imposed). Controlled by business logic for audit classification. Only allowed values accepted.","nullable":false},{"name":"event_detail","type":"string","description":"Detail about the event - Implements requirement for detailed traceability. Example: 'Report status changed from pending to resolved by moderator.'","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp for the logged event. For compliance and sequencing. Required on every audit entry.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["event_type"]}],"ginIndexes":[{"fieldName":"event_detail"}]}]},{"filename":"schema-05-guidelines.prisma","namespace":"Guidelines","models":[{"name":"discussionboard_community_guidelines","description":"Community Guidelines entity - This implements the clear community rule and code-of-conduct requirements as detailed in the Discussion Board Requirements section 1 (Community Rules & 01 Business Objectives). \n\nBusiness explanation: Stores guideline sections and texts in a normalized form, allowing updates and auditability for evolving community standards. Maintains 3NF compliance by separating each guideline entry, allowing references in moderation and user notifications. For example, guidelines about hate speech, constructive criticism, and post etiquette are stored here, referenced for automated onboarding or user display.\n\nKey relationships: May be referenced by moderation or notification components for contextual messaging. Special behaviors: Only admins can create or update guidelines; each entry is versioned by created_at/updated_at for audit trail.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for this guideline entry."},"foreignFields":[],"plainFields":[{"name":"title","type":"string","description":"Title of the guideline section - Implements requirement for clear, organized guideline presentation to users. For example, 'Posting Etiquette' or 'Prohibited Conduct.' Ensures normalization by storing as an atomic value.","nullable":false},{"name":"body","type":"string","description":"Full content text of the guideline - Implements detailed community rule requirements. For example, 'Do not post personal attacks or hate speech.' Normalized 3NF, no derived/consolidated data.","nullable":false},{"name":"order_index","type":"int","description":"Display order for this guideline - Required for user experience sequencing in guideline displays. Ensures atomicity and flexibility, supports updates without data duplication.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this guideline is currently enforced - Implements admin control of active/inactive statuses for evolving policy. For example, deactivating outdated rules. Ensures compliance with requirement to support updates and changes.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when guideline was created - Supports audit logging (requirement 2.6), and helps track policy evolution over time. Atomic value, part of full normalization.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when guideline was last updated. Ensures full auditability of content changes. 3NF compliance.","nullable":false}],"uniqueIndexes":[{"fieldNames":["title"],"unique":true}],"plainIndexes":[{"fieldNames":["order_index"]}],"ginIndexes":[]},{"name":"discussionboard_content_policies","description":"Content Policy entity - Implements the explicit, system-level policy and moderation documentation requirements as detailed in requirements section 3 (Content Policies & Moderation Policy).\n\nBusiness purpose: Stores specific, enforceable policy rules that apply to user-generated content (e.g. 'No hate speech', 'No plagiarism'). Maintains normalization by handling each policy as a distinct, queryable record. Can be referenced during automated content checking or manual moderation. For example, policy text on 'Profanity' or 'Spam' detection is kept here.\n\nKey relationships: May be referenced when determining sanction actions. Special behaviors: Only admins can add/update/delete policy entries. Supports audit trail with timestamps.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for this content policy rule."},"foreignFields":[],"plainFields":[{"name":"policy_code","type":"string","description":"Short code or name for this content policy - Implements requirement for structured policy documentation and reference. Enables quick lookup and enforcement. For example, 'NO_HATE_SPEECH', 'NO_SPAM'.","nullable":false},{"name":"description","type":"string","description":"Detailed description of the content policy - Implements policy communication and moderator clarity requirements. For example, 'Any content promoting violence is strictly prohibited.' 3NF.","nullable":false},{"name":"category","type":"string","description":"Category or policy group - Implements requirement to organize content policies by type, e.g., 'Spam', 'Abuse', 'Copyright'. Ensures normalization by avoiding transitive dependencies.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this policy is active/enforced - Needed for content policy versioning and update flows. For example, deactivating obsolete policies. Ensures atomicity.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this policy was created. Required for audit trails and rollback scenarios (requirements 2.6, 4).","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this policy was last updated - Ensures full auditability and supports policy review schedules.","nullable":false}],"uniqueIndexes":[{"fieldNames":["policy_code"],"unique":true}],"plainIndexes":[{"fieldNames":["category"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"discussionboard_profanity_filters","description":"Profanity Filter entity - Implements the system-level requirement for profanity filtering as outlined in requirements section 3.4 (Content Policies, Moderation).\n\nBusiness purpose: Contains normalized words/phrases that trigger system profanity detection on posts and comments. Maintains 3NF by storing each profane word or phrase as a single record, linked to activation status and audit fields. For example, the word 'foobar' or a list of banned words.\n\nKey relationships: May be referenced by automated moderation or content creation APIs. Special behaviors: Admins update/add words as needed, all events are timestamped.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique ID for this profanity filter entry."},"foreignFields":[],"plainFields":[{"name":"word","type":"string","description":"Word or phrase to be filtered - Implements requirement for configurable, updatable profanity filtering. Ensures normalized storage. For example, 'badword'.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether this word is currently being filtered - Required for admin update flexibility. For example, suspending words from filter lists. Atomic value.","nullable":false},{"name":"created_at","type":"datetime","description":"When this filter entry was created - For auditability and policy management. 3NF value.","nullable":false},{"name":"updated_at","type":"datetime","description":"When this filter entry was last updated - Needed for rollbacks or removals in system logs, part of full normalization.","nullable":false}],"uniqueIndexes":[{"fieldNames":["word"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"discussionboard_automated_spam_rules","description":"Automated Spam Rule entity - Implements the automated spam rule detection policies required by Functional Requirements 3.3.4 and Moderation Policy.\n\nBusiness purpose: Stores configurable, versioned rules or patterns that the platform's automated spam detector references. Maintains 3NF by separating each spam rule (regex, expression, or keyword) as an atomic record. For example, an entry could define regex matching repeated links or banned spam phrases.\n\nKey relationships: May be consumed by content creation or moderation APIs. Special behaviors: Rule activation handled by admins, all updates tracked in audit logs.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for this spam rule entry."},"foreignFields":[],"plainFields":[{"name":"rule_pattern","type":"string","description":"Pattern or expression for spam detection - Implements flexible, updatable automated spam pattern detection. 3NF compliance. For example, regex for repeated links or specific spam syntax.","nullable":false},{"name":"description","type":"string","description":"Explanation of what this rule detects - Implements clarity and auditability. For example, 'Detects repeated posting of phishing URLs.' Atomic, not derived.","nullable":false},{"name":"is_active","type":"boolean","description":"Whether the rule is currently active - Allows admins to enable/disable detection flexibly for evolving spam tactics. Ensures policy agility.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when this spam rule was created - Required for audit logging and rule review processes.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this spam rule was last updated - Ensures full auditability of rule changes. 3NF compliance.","nullable":false}],"uniqueIndexes":[{"fieldNames":["rule_pattern"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-06-notifications.prisma","namespace":"Notifications","models":[{"name":"discussionboard_notifications","description":"Discussion Board Notification Entity - Implements the notification delivery requirement from the Notification System and Audit & Logging sections. \n\nThis model stores each notification event (such as replies, likes, mentions, moderation actions) sent to users. It allows tracking, delivery status, and historic audit for every notification generated by system events across the discussion board.\n\nMaintains 3NF compliance by separating notification records from user profiles and alert preferences (notification delivery configuration is stored in a separate table). For example, when a user receives a reply to their post, a notification record is created here, referencing the recipient, event details, and delivery state.\n\nKey relationships: Links to recipients (discussionboard_members) via foreign key. Optionally relates to specific posts, comments, or moderation events stored in other domains.\nSpecial behaviors: Notifications can be marked as read/unread. Supports expirable and persistent notification types.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for each notification."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Recipient's {@link discussionboard_members.id} - The user who receives this notification. Fulfills the requirement for per-user notification tracking and targeting.","relation":{"type":"1:N","targetModel":"discussionboard_members","targetField":"id","name":"discussionboard_notifications_recipient"},"unique":false,"nullable":false}],"plainFields":[{"name":"type","type":"string","description":"Notification type - Implements the Notification System requirement specifying kind of event (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system'). Defines the user event that triggered notification delivery. Ensures normalization by recording type as a code, not a computed string. Example: 'reply'.","nullable":false},{"name":"related_entity_id","type":"uuid","description":"Reference ID of the related entity (e.g., post, comment, moderation action) - Implements the Notification System's requirement for contextual notification. Stores the target object relevant to the notification for audit/logging. Can be null if event is generic. Ensures normalization by storing only the ID. Example: the comment being replied to.","nullable":true},{"name":"related_entity_type","type":"string","description":"Type of related entity referenced (e.g., 'post', 'comment', 'moderation_action') - Implements requirement to allow notifications on multiple kinds of entities. Ensures normalization by specifying entity type in a discrete field, not by using polymorphic joins. Example: 'post'.","nullable":true},{"name":"content","type":"string","description":"Notification message content - Implements requirement for human-readable notification body. Stores the message shown to the user. Example: 'Alice replied to your post.' Field is atomic and normalized. No computed values here.","nullable":false},{"name":"is_read","type":"boolean","description":"Flag indicating whether the notification has been read. Supports UI requirements for marking notifications as read/unread. Ensures normalization by only storing a boolean flag. Example: false (unread).","nullable":false},{"name":"delivered_at","type":"datetime","description":"Timestamp when notification was delivered to the user. Implements audit/logging requirements for notification delivery history and sequencing. Normalization: Each delivery occurrence is atomic. Example: 2024-06-17T12:00:00Z.","nullable":false},{"name":"expires_at","type":"datetime","description":"Timestamp when notification expires - Implements event-driven notification expiry (for temporary/scheduled alerts). Ensures normalization by storing expiry per notification, not per user. Example: 2024-07-01T00:00:00Z. May be null if notification does not expire.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["discussionboard_member_id"]},{"fieldNames":["is_read"]},{"fieldNames":["delivered_at"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"discussionboard_alert_preferences","description":"Discussion Board Alert Preference Entity - Implements the notification preferences requirement from the Notification System and Settings functionality sections. \n\nThis model stores each user's per-type notification delivery preferences (e.g., email, push, in-app, or off). Fulfills the requirement to provide members with fine-grained control over which notification types they receive and how they are delivered.\n\nMaintains 3NF compliance by separating user notification configuration from actual notification data and user profile records. For example, a user may choose in-app alerts for replies but email notifications for moderation actions, which is configured here.\n\nKey relationships: References the user (discussionboard_members) as the owner of these preferences. No denormalized or computed fields.\nSpecial behaviors: Only one set of preferences per (user, notification type) enforced by unique index constraint.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for each alert preference record."},"foreignFields":[{"name":"discussionboard_member_id","type":"uuid","description":"Owner's {@link discussionboard_members.id} - The user who owns this alert preference set. Implements per-user preference requirement for notification delivery.","relation":{"type":"N:1","targetModel":"discussionboard_members","targetField":"id","name":"discussionboard_alert_preferences_owner"},"unique":false,"nullable":false}],"plainFields":[{"name":"notification_type","type":"string","description":"Notification type for which this preference applies (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system') - Implements the Notification System and Settings requirements for configurable per-type delivery. Ensures normalization by storing type as atomic value. Example: 'moderation_action'.","nullable":false},{"name":"delivery_channel","type":"string","description":"Delivery channel preference (e.g., 'email', 'push', 'in_app', 'none') - Implements requirement for per-type delivery method configuration by user. Ensures normalization by storing as atomic value, not as calculated field. Example: 'email'.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when these preferences were last updated. Supports audit/logging for settings changes. Ensures atomic history of preference changes. Example: 2024-06-18T13:31:21Z.","nullable":false}],"uniqueIndexes":[{"fieldNames":["discussionboard_member_id","notification_type"],"unique":true}],"plainIndexes":[{"fieldNames":["discussionboard_member_id"]},{"fieldNames":["notification_type"]}],"ginIndexes":[]}]},{"filename":"schema-07-logs.prisma","namespace":"Logs","models":[{"name":"discussionboard_action_logs","description":"[Discussion Board Action Logs] - This implements the audit trail, accountability, and compliance requirements from the requirements document (including 2.6 Audit & Logging, moderation, and transparency mandates).\n\nRecords every critical user or system action, especially for admin/moderator-level events. Maintains 3NF (fully normalized) by separating actor ID, event types, and contextual entity references, supports extensible metadata, and avoids denormalization. Example: logs a moderator deleting a post or editing a comment.\n\nKey relationships: Connects to user tables such as {@link discussionboard_admins.id}, {@link discussionboard_moderators.id}, or other actors by \"actor_id\" field.\nSpecial behaviors: Immutable log entries, supports efficient filtering by actor/event/time; forms basis for compliance reporting and root-cause investigation.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for each log entry."},"foreignFields":[{"name":"actor_id","type":"uuid","description":"Actor's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related user type associated with this action. This ties each log entry to the user responsible for the action, supporting auditability and cross-user queries.","relation":{"name":"fk_action_log_actor","targetModel":"discussionboard_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"event_type","type":"string","description":"Type of action performed. Implements event categorization (e.g., POST_CREATED, COMMENT_DELETED, MODERATOR_BAN). Enables filtering and auditing by action nature. Ensures normalization by not encoding rules in single fields. Example: 'POST_DELETED'.","nullable":false},{"name":"event_target_id","type":"uuid","description":"Associated entity ID for this action (e.g., post, comment, report), implements requirement for contextual event reference. Maintains normalized design by storing IDs only. Example: The comment or post UUID affected. Nullable if event affects no entity.","nullable":true},{"name":"metadata","type":"string","description":"Additional JSON metadata for extensibility (e.g., IP address, device, moderation reason). Implements extensibility and normalization by not hardcoding new columns for rare event data. Example: '{\"reason\":\"Spam\",\"ip\":\"10.1.2.3\"}'.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the action occurred. Implements mandatory audit resolution and helps support sorting/filtering by time. Example: '2025-07-22T13:30:45.969+09:00'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["actor_id","event_type","created_at"]}],"ginIndexes":[]},{"name":"discussionboard_error_logs","description":"[Error Logging Table] - This implements requirements from 3.1 Security, 3.2 Performance, and 3.5 Compliance regarding platform and API error capture for diagnostics and resilience.\n\nCaptures and audits all system or application errors and exceptions in a normalized, traceable log. 3NF compliance by completely separating error details from business records, with reference context available via \"context_id\". Used in debugging, incident response, or platform monitoring. Example: logs database faults, uncaught exceptions, and failed external API calls.\n\nKey relationships: No direct foreign keys (for privacy and decoupling from actor data).\nSpecial behaviors: Immutable, full-text searchable, supports quick triage by error code and time.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"error_code","type":"string","description":"Application-defined error or exception code. Enables quick error categorization and system monitoring. Example: 'API_TIMEOUT', 'UNCAUGHT_EXCEPTION'.","nullable":false},{"name":"error_message","type":"string","description":"Human-readable error message for reporting and debugging. Meets compliance for log clarity. Example: 'Failed to fetch posts due to network timeout.'","nullable":false},{"name":"stack_trace","type":"string","description":"Full stack trace or technical details for debugging. Fulfills non-functional requirements for detailed auditing; normalized by isolating trace info from other data. Nullable if unavailable. Example: JavaScript stack trace or error object.","nullable":true},{"name":"context_id","type":"uuid","description":"Arbitrary context entity (e.g., API request ID or related entity UUID). Supports linking errors to request or entity. Nullable if not applicable.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp the error was recorded, allows sequencing and SLA tracking. Example: '2025-07-22T13:30:45.969+09:00'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["error_code","created_at"]}],"ginIndexes":[{"fieldName":"error_message"}]},{"name":"discussionboard_api_access_logs","description":"[API Access Logs] - Implements non-functional requirements 3.1 Security, 3.2 Performance, and 2.6 Audit by tracing all API interactions for security review, rate-limiting enforcement, and usage analytics.\n\nLogs all API calls, including the user (if authenticated), endpoint, HTTP method, and result. Maintains normalization (3NF) with user linkage by actor_id (nullable for guests), never storing denormalized request payloads. Used for monitoring abuse and generating analytics. Example: logs a member's GET to /api/posts or a failed POST to /api/comments.\n\nKey relationships: May reference the user by actor_id (nullable for guest requests). No other foreign keys.\nSpecial behaviors: Massive write-optimized; may be purged for data retention compliance.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"actor_id","type":"uuid","description":"Authenticated user's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related role. Null if guest/public API. Enables audit and correlation to users.","relation":{"name":"fk_access_log_actor","targetModel":"discussionboard_members"},"unique":false,"nullable":true}],"plainFields":[{"name":"method","type":"string","description":"HTTP method used for this API call (GET, POST, PATCH, DELETE, etc). Implements API audit detail. Example: 'GET'.","nullable":false},{"name":"endpoint","type":"string","description":"API endpoint path or resource accessed. Enables fine-grained analytics. Example: '/api/comments/12345'.","nullable":false},{"name":"status_code","type":"int","description":"Returned HTTP status code. Allows compliance and diagnostics on failed/successful calls. Example: 200, 403, 404.","nullable":false},{"name":"ip_address","type":"string","description":"IP address of the client for this call. Supports abuse monitoring and incident forensics. Example: '203.0.113.5'.","nullable":false},{"name":"user_agent","type":"string","description":"Client user-agent for context in debugging or device profiling. Nullable if unavailable. Example: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X)'.","nullable":true},{"name":"response_time_ms","type":"int","description":"Request processing latency in milliseconds. Enables API performance monitoring. Example: 163.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of the API call. Supports retention and incident analysis. Example: '2025-07-22T13:30:45.969+09:00'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["actor_id","endpoint","created_at"]}],"ginIndexes":[{"fieldName":"endpoint"}]}]}]}},"schemas":{"schema-01-systematic.prisma":"/// Board Section entity - This implements the requirement for organizing multiple boards into logical sections/category headings as described in the requirements (see Business Overview and Board API). \n///\n/// Provides top-level grouping for boards (e.g., 'Politics', 'Economy'). Each section contains multiple boards but supports explicit sorting and labeling for easy discovery. Maintains 3NF by storing only section-specific data and referencing boards elsewhere. \n///\n/// Example: Used for filtering the board list UI, and configuring board display order in admin settings.\n/// Key relationships: One section to many boards (referenced from discussionboard_boards). \n/// Special behaviors: Deletions should be restricted if boards exist within a section.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_sections {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for a section.\n  id String @id @db.Uuid\n  \n  /// Section name - Implements the section/categorization requirement. Human-readable name to display to users (e.g., 'Politics'). 3NF maintained by storing only the atomic label here. Example: Section dropdown in UI.\n  name String\n  \n  /// Section description - Short text clarifying purpose or scope. 3NF compliant atomic text. Example: 'For regional and national issues.'\n  description String?\n  \n  /// Explicit sort order for UI display - Allows admin-defined ordering of sections. Maintains 3NF by only storing atomic order number. Example: Integer used for section sorting.\n  sort_order Int @db.Integer\n  \n  /// Creation timestamp - Implements audit and data retention requirement. 3NF as an atomic date-time value. Example: used for sorting/recently added filter.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last update timestamp - Used for audits and last-modified displays. Example: UI 'last updated' column.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_boards discussionboard_boards[]\n  \n  @@unique([name])\n  @@index([sort_order])\n}\n\n/// Board entity - Implements the requirement for multiple thematic boards within the platform (see Business Overview, API spec). \n///\n/// Represents a specific discussion board (e.g., 'Elections 2025'). Each board belongs to a section and can have subscriptions, tags, settings, etc. Maintains 3NF by separating board details from posts/content, and referencing only the relevant section. \n///\n/// Example: Used for displaying board list, posting endpoints, and enforcing board-level settings.\n/// Key relationships: Many-to-one with discussionboard_sections (foreign key); referenced by other tables for posts, subscriptions, and tags.\n/// Special behaviors: Section deletion/renaming cascades/updates needed; cannot delete section if boards exist.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_boards {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for a board.\n  id String @id @db.Uuid\n  \n  /// Belonged section's {@link discussionboard_sections.id} - Links board to its section for groupings. Required to ensure boards are organized. Maintains referential integrity and 3NF.\n  discussionboard_section_id String @db.Uuid\n  \n  /// Board name - Implements the logical board separation requirement. Human-readable board title (e.g., 'Elections 2025'). Strictly atomic per 3NF. Example: Board selector UI.\n  name String\n  \n  /// Board description - Explanatory text for users to understand board's focus. Enforces 3NF by storing only description here. Example: Board hover tooltip.\n  description String?\n  \n  /// Custom board-specific rules (markdown/plaintext) - Implements requirement for community rules per board. Maintains 3NF. Example: Board custom code of conduct.\n  rules String?\n  \n  /// Active/inactive flag - Used by admins to hide inactive/archived boards. Follows 3NF by being an atomic status indicator. Example: Board visibility toggle.\n  is_active Boolean\n  \n  /// Creation timestamp for the board - For audits, logs, and recency filters. 3NF atomic timestamp. Example: Used in new board creation tracking.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last updated time - For audit trail and change tracking. Example: UI listing.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_discussionboard_boards_section discussionboard_sections @relation(fields: [discussionboard_section_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_board_subscriptions discussionboard_board_subscriptions[]\n  discussionboard_board_settings discussionboard_board_settings?\n  discussionboard_posts discussionboard_posts[]\n  \n  @@unique([name])\n  @@index([discussionboard_section_id])\n}\n\n/// Tag entity - Implements the requirement for tagging boards and enabling filtered search/discovery (see Functional Requirements and API spec). \n///\n/// Stores tag definitions for use on boards or posts. Tags can be assigned to boards (via M:N relationship implemented in other domain if needed). Maintains 3NF as a definition-only table; actual assignments are managed elsewhere. \n///\n/// Example: Used for board tag suggestions, filtering board/post lists. \n/// Key relationships: Used in tag-board mappings but maintains strict normalization here.\n/// Special behaviors: Only atomic data stored; all application-side assignment linked elsewhere.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_tags {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique tag identifier.\n  id String @id @db.Uuid\n  \n  /// Tag value - Human-friendly tag (e.g., 'policy', 'economy'). Implements tag definition requirement. Enforces normalization by keeping atomic labels only here. Example: Tag chips in UI.\n  tag String\n  \n  /// Tag description - Explains scope/purpose of tag for admin and users. Enforces 3NF. Example: Tag hover info.\n  description String?\n  \n  /// Tag creation timestamp - Required for record keeping. Maintains 3NF. Example: Used for sorting tags by newest.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last tag update time - For audit logs and change history in admin UI. 3NF compliant.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([tag])\n}\n\n/// Board subscription entity - Implements the board subscription/notification feature (see Notification System and Functional Requirements). \n///\n/// Tracks which members are subscribed to which boards, to drive notifications and update feeds. Maintains 3NF as a pure M:N/junction entity: each record (subscription) is atomic, linking a single user to a single board. \n///\n/// Example: Used for fast lookup of a member's subscribed boards, or when sending board notifications. \n/// Key relationships: Foreign keys to boards (this file) and discussionboard_members (external Actors component). \n/// Special behaviors: Unsubscribe (soft delete or remove record); composite uniqueness enforced.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_board_subscriptions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique subscription ID.\n  id String @id @db.Uuid\n  \n  /// Subscribed board's {@link discussionboard_boards.id} - Enforces which board is subscribed. Enforces 3NF as atomic foreign key. Example: All subscriptions for a board.\n  discussionboard_board_id String @db.Uuid\n  \n  /// Subscribed member's {@link discussionboard_members.id} (from Actors component) - Links subscription to member (ALREADY CREATED in Actors schema). 3NF: purely as a foreign key. Example: All user subscriptions.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Time of subscription - For audit/logging, 3NF as single timestamp. Example: Recent subscriber statistics.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_db_board_subs_board discussionboard_boards @relation(fields: [discussionboard_board_id], references: [id], onDelete: Cascade)\n  fk_db_board_subs_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussionboard_board_id, discussionboard_member_id])\n  @@index([discussionboard_member_id])\n}\n\n/// Board settings entity - Implements requirement for customizable settings per board (see Functional Requirements and Board API). \n///\n/// Stores various administrative or feature settings per board (e.g., allow images, require moderator approval). Maintains 3NF: atomic settings per board, without computed fields; extensible. \n///\n/// Example: Used to toggle features for specific boards or override defaults.\n/// Key relationships: Unique per board (1:1 with boards). \n/// Special behaviors: Board can have only one settings record; model extensible for future settings.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_board_settings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for board settings.\n  id String @id @db.Uuid\n  \n  /// Target board's {@link discussionboard_boards.id} - Settings apply to this board. Enforced unique for 1:1. Example: Feature toggle lookup for a specific board.\n  discussionboard_board_id String @db.Uuid\n  \n  /// Allow image uploads - Implements toggle for image posting. 3NF: atomic flag only, actual images handled elsewhere. Example: Image post permissions UI.\n  allow_images Boolean\n  \n  /// Require moderator approval for new posts - Supports moderation flow requirement. 3NF flag only. Example: Restricted board setup.\n  require_moderator_approval Boolean\n  \n  /// Creation timestamp for audit/history. 3NF as atomic timestamp. Example: For admin settings log.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last updated time for settings, for auditing. Example: Settings history tracking.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_db_board_settings_board discussionboard_boards @relation(fields: [discussionboard_board_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussionboard_board_id])\n}\n\n/// User notification setting entity - Implements user preference storage for receiving board/content notifications (see Notification System and Functional Requirements). \n///\n/// Stores per-user notification toggles/preferences for the Discussion Board domain. Maintains 3NF by keeping atomic preference values per user. Used to configure which types of notifications are received (thread activity, announcements, etc). \n///\n/// Example: Used when sending notification emails, or rendering notification settings UI. \n/// Key relationships: Linked to members (via discussionboard_member_id from Actors component).\n/// Special behaviors: Unique-per-user enforced, 1:1 with member record.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notification_settings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique notification setting ID.\n  id String @id @db.Uuid\n  \n  /// Belonged member's {@link discussionboard_members.id} (from Actors component) - Which member these preferences apply to. Unique for 1:1. Example: Editing notification preferences for logged-in member.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Receive notifications for new board activity/posts - Implements the core notification toggle. 3NF as atomic preference. Example: User settings UI toggle.\n  receive_board_notifications Boolean\n  \n  /// Receive mention notifications - Controls alerts for mentions/replies. 3NF flag. Example: Mention alert switch on settings page.\n  receive_mention_notifications Boolean\n  \n  /// Creation timestamp for notification prefs history/audit. 3NF.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last prefs update timestamp, for audit/history. 3NF.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_db_notification_settings_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussionboard_member_id])\n}","schema-02-actors.prisma":"/// Platform administrator role assignment - Implements the functional requirement for privileged admin accounts as found in the requirements (see: User Roles & Permissions). \n///\n/// Administrators oversee content and user moderation at the highest level; this table records accounts with full platform control and is central for RBAC enforcement. Maintains strict 3NF normalization by storing only direct attributes of the admin role, referencing user membership via foreign key. For example, promotes a member to admin role or demotes. \n///\n/// Key relationships: links to discussionboard_members (user basis), may be referenced in audit logs or moderation actions.  Special behaviors: Granting this role cascades full access; must be auditable.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_admins {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique admin role record identifier.\n  id String @id @db.Uuid\n  \n  /// Belonged member's {@link discussionboard_members.id}. Assigns admin privileges to a registered member.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Datetime when admin role was granted. Implements temporal auditability as per action trail requirements. For example, captures promotion time.\n  granted_at DateTime @db.Timestamptz\n  \n  /// Datetime when admin role was revoked (if applicable). Null unless admin privileges are removed. Supports audit and compliance.\n  revoked_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_admins_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  discussionboard_bans_of_target_admin_id discussionboard_bans[] @relation(\"discussionboard_bans_of_target_admin_id\")\n  discussionboard_bans_of_actor_admin_id discussionboard_bans[] @relation(\"discussionboard_bans_of_actor_admin_id\")\n  discussionboard_warnings_of_target_admin_id discussionboard_warnings[] @relation(\"discussionboard_warnings_of_target_admin_id\")\n  discussionboard_warnings_of_actor_admin_id discussionboard_warnings[] @relation(\"discussionboard_warnings_of_actor_admin_id\")\n  discussionboard_audit_logs discussionboard_audit_logs[]\n  \n  @@unique([discussionboard_member_id])\n  @@index([granted_at])\n}\n\n/// Moderator role assignment - Implements the requirement for a moderation role to enforce community guidelines (see: Moderation Roles & Policies, Permissions Matrix).\n///\n/// This table records which members serve as moderators. It maintains strict normalization by referencing user membership while tracking assignment and revocation dates. Used for permission elevation, logging, and audit trails. For example, a user promoted from member to moderator.\n///\n/// Key relationships: References discussionboard_members. Special behaviors: Can be demoted; actions logged for accountability.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderators {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique moderator assignment record.\n  id String @id @db.Uuid\n  \n  /// Belonged member's {@link discussionboard_members.id} - the member elevated to moderator role.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Datetime when moderator role was granted. Implements temporal audit trail for promotions. For example, captures elevation to moderator.\n  granted_at DateTime @db.Timestamptz\n  \n  /// Datetime when moderator role was revoked (null if active). Supports demotion/historical queries.\n  revoked_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_moderators_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  discussionboard_bans_of_target_moderator_id discussionboard_bans[] @relation(\"discussionboard_bans_of_target_moderator_id\")\n  discussionboard_bans_of_actor_moderator_id discussionboard_bans[] @relation(\"discussionboard_bans_of_actor_moderator_id\")\n  discussionboard_warnings_of_target_moderator_id discussionboard_warnings[] @relation(\"discussionboard_warnings_of_target_moderator_id\")\n  discussionboard_warnings_of_actor_moderator_id discussionboard_warnings[] @relation(\"discussionboard_warnings_of_actor_moderator_id\")\n  discussionboard_audit_logs discussionboard_audit_logs[]\n  \n  @@unique([discussionboard_member_id])\n  @@index([granted_at])\n}\n\n/// Registered discussion board user accounts (members) - Implements registration/authentication requirements (User Authentication & Roles, CRUD Permissions).\n///\n/// This table represents all registered, authenticated users. It enforces 3NF by storing only per-user, non-derived data. For example, account creation, activation status, ban integration and role assignment references.\n///\n/// Key relationships: Referenced by admin, moderator, profile, and user email tables. Special behaviors: Used for primary ownership of posts/comments.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_members {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique member account identifier.\n  id String @id @db.Uuid\n  \n  /// Account username - unique member login handle fulfilling the registration requirement; not case-sensitive and normalized for identity mapping. Ensures user uniqueness at platform level. Example: johndoe.\n  username String\n  \n  /// Hashed password for secure authentication (never raw password), per non-functional security requirement. Complies with encryption policy and data protection. Example: bcrypt or Argon2 hash string.\n  password_hash String\n  \n  /// Datetime when member account was created. Implements registration audit trail and supports search/sorting. Example: upon sign up.\n  created_at DateTime @db.Timestamptz\n  \n  /// Datetime when account was activated/completed verification. Null if not verified yet. Example: after email confirmation workflow.\n  activated_at DateTime? @db.Timestamptz\n  \n  /// Datetime of account deactivation (soft delete or permanent). Null if active. Supports retention policy and reactivation scenarios.\n  deactivated_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_board_subscriptions discussionboard_board_subscriptions[]\n  discussionboard_notification_settings discussionboard_notification_settings?\n  discussionboard_admins discussionboard_admins?\n  discussionboard_moderators discussionboard_moderators?\n  discussionboard_user_profiles discussionboard_user_profiles?\n  discussionboard_user_emails discussionboard_user_emails[]\n  discussionboard_user_auths discussionboard_user_auths[]\n  discussionboard_user_sessions discussionboard_user_sessions[]\n  discussionboard_posts discussionboard_posts[]\n  discussionboard_post_edits discussionboard_post_edits[]\n  discussionboard_post_likes discussionboard_post_likes[]\n  discussionboard_post_views discussionboard_post_views[]\n  discussionboard_comments discussionboard_comments[]\n  discussionboard_comment_likes discussionboard_comment_likes[]\n  discussionboard_comment_edits discussionboard_comment_edits[]\n  discussionboard_comment_views discussionboard_comment_views[]\n  discussionboard_reports discussionboard_reports[]\n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  discussionboard_bans discussionboard_bans[]\n  discussionboard_warnings discussionboard_warnings[]\n  discussionboard_audit_logs discussionboard_audit_logs[]\n  discussionboard_notifications discussionboard_notifications[]\n  discussionboard_alert_preferences discussionboard_alert_preferences[]\n  discussionboard_action_logs discussionboard_action_logs[]\n  discussionboard_api_access_logs discussionboard_api_access_logs[]\n  \n  @@unique([username])\n  @@index([created_at])\n}\n\n/// Guest user visitation - Implements guest journey tracking for unauthenticated users (see: User Roles & Journeys, Audit Trail).\n///\n/// This table stores guest/browser sessions for analytics, restrictions, and future up-sell. Maintains normalized structure by storing atomic session info only, not mixing with registered user data. For example, may log guest page views or promote registration.\n///\n/// Key relationships: May later link to discussionboard_members if guest converts to member.\n/// Special behaviors: Short-lived; can be joined to logs for traffic analysis.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_guests {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique guest session identifier.\n  id String @id @db.Uuid\n  \n  /// Opaque session cookie or token identifying the guest browser. Supports uniqueness and privacy tracking. For example: UUID or secure random token.\n  session_token String\n  \n  /// Datetime guest session was initiated. Implements guest activity timeline; supports reporting and session expiry logic.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([session_token])\n  @@index([created_at])\n}\n\n/// Extended member profile details - Implements profile customization as per member/user journey requirements.\n///\n/// This table holds profile metadata (bio, display name, avatar, etc.), referencing the core member account. Maintains normalization by separating profile from core authentication/role. Example: user changes display name or avatar; updates here without affecting core login.\n///\n/// Key relationships: Foreign key to discussionboard_members. Special behaviors: all fields except member linkage are nullable, allowing partial profiles.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_profiles {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique profile record identifier.\n  id String @id @db.Uuid\n  \n  /// Belonged member's {@link discussionboard_members.id}. One-to-one mapping from member to user profile.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Public display name or nickname for the user (not required to match username). Implements customization requirement as per usability guideline. Example: John R.\n  display_name String?\n  \n  /// Short user biography or introduction, as per personalization feature. Maintains normalized structure; null if not set.\n  bio String?\n  \n  /// Profile image/avatar URI, facilitating multimedia enhancement and personalization. Null if not provided; stored as URI string. Example: https://cdn.site/avatar/123.\n  avatar_url String? @db.VarChar(80000)\n  \n  /// Datetime profile was created. Implements audit trail for customization events.\n  created_at DateTime @db.Timestamptz\n  \n  /// Datetime profile was last updated, supports version awareness for profile changes. Enables profile history tracking.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_profiles_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussionboard_member_id])\n  @@index([created_at])\n  @@index([display_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Email addresses associated with member accounts - Implements requirements for registration, verification, contact and notification preferences (Functional: Registration & Email Verification).\n///\n/// Maintains one-to-many normalized mapping for supporting multiple verified emails per account, anti-abuse, and notification flexibility. Only stores atomic email info, never cached tokens or codes. Example: primary and backup email tracking; supports search, notification, verification workflows.\n///\n/// Key relationships: Foreign key to discussionboard_members. Special behaviors: unique constraint on (discussionboard_member_id, email), optional verification per email.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_emails {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique email record identifier.\n  id String @id @db.Uuid\n  \n  /// Belonged member's {@link discussionboard_members.id}. Each email mapped to a registered user.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Email address string associated with the account. Implements registration, notification, and recovery flows - separate from core username for flexibility. Ensures normalization. Example: jane@host.com.\n  email String\n  \n  /// Whether the email has passed verification (registration, notification, etc). Implements email confirmation flow; only verified addresses are used for key system functions. Defaults to false until confirmation.\n  is_verified Boolean\n  \n  /// Whether this email is the primary contact address for the member (UI and system requirement). Each account can have at most one primary email. For example: used for login, password reset.\n  is_primary Boolean\n  \n  /// Datetime this email address was added or linked. Supports registration, change tracking, and reporting requirements.\n  added_at DateTime @db.Timestamptz\n  \n  /// Datetime when verification was completed. Nullable to allow in-progress or failed verifications. Maintains normalization; no denormalized workflow states.\n  verified_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_emails_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussionboard_member_id, email])\n  @@unique([email])\n  @@index([added_at])\n}\n\n/// External/federated authentication records - Implements secure multi-provider authentication flows per non-functional requirements (Authentication API & Security).\n///\n/// Normalizes all external auth connections (OAuth, SSO) for each account, supporting identity linking, revocation, and RBAC; stores only atomic data and references. Example: Google/Facebook/Twitter/SSO logins mapped to a user. Key relationships: Foreign key to discussionboard_members. Special behaviors: Composite uniqueness (member, provider, provider_user_id).\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_auths {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique external authentication record.\n  id String @id @db.Uuid\n  \n  /// Belonged member's {@link discussionboard_members.id} - the member holding this external auth.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Authentication provider/service name (e.g., google, facebook, github). Implements SSO/federated auth requirement. Normalized string, never contains secrets. Example: 'google'.\n  provider String\n  \n  /// User identifier from auth provider (not internal ID). Used for provider-based account merging and uniqueness/lookup. Example: OAuth subject ID.\n  provider_user_id String\n  \n  /// Datetime this external auth connection was established. For sign-on/audit purposes; always required.\n  linked_at DateTime @db.Timestamptz\n  \n  /// Datetime external auth was revoked/unlinked (null if active). Implements revocation/idle account closure workflows.\n  revoked_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_auths_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@index([discussionboard_member_id])\n  \n  @@unique([provider, provider_user_id])\n  @@index([linked_at])\n}\n\n/// Active and historical login sessions for members - Implements authentication, auditing, session management, and inactivity/logout flows (see: Authentication & Security)\n///\n/// Each record represents one signed-in session for a member, using opaque tokens. Maintains security by avoiding caching sensitive credentials; stores only atomic values (tokens, validity timestamps), never pre-calculated or denormalized status. For example, used for login expiration, forced logout, device management.\n///\n/// Key relationships: Foreign key to discussionboard_members. Special behaviors: Tokens unique, support session trace/logs.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_sessions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique session record identifier.\n  id String @id @db.Uuid\n  \n  /// Referenced member's {@link discussionboard_members.id}. Each session is associated with a single member.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Opaque authentication token for this session. Used client-side for identifying login state. Uniqueness enforced; never stores raw credentials. Example: random UUID or JWT value.\n  session_token String\n  \n  /// Datetime session was created. Enables security/audit trace, expiry/refresh handling.\n  created_at DateTime @db.Timestamptz\n  \n  /// Datetime when the session token will expire. Supports session timeout and security policies. Example: set per login policy or on grant.\n  expires_at DateTime @db.Timestamptz\n  \n  /// Datetime session was revoked/invalidated (e.g., logout, idle timeout, forced admin action). Null if still valid. Maintains data integrity and audit trail.\n  revoked_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_sessions_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@index([discussionboard_member_id])\n  \n  @@unique([session_token])\n  @@index([created_at])\n}","schema-03-content.prisma":"/// Discussion Board Posts - This implements the core posting requirement from the requirements document (sections 2.2, 2.3). Represents top-level user posts within boards, tracking authorship, timestamps, and relation to board. Strict 3NF: all aggregate data (like counts, view counts) are handled in separate tables or materialized views. Links to edits, likes, views, comments. Example usage: a member or moderator creates a new discussion topic under a board.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_posts {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged board's {@link discussionboard_boards.id}\n  board_id String @db.Uuid\n  \n  /// Author user's {@link discussionboard_members.id} (or moderator/admin).\n  author_id String @db.Uuid\n  \n  /// Title of the post. Atomic for search and filter.\n  title String\n  \n  /// Full body/content of post. No derived or calculated fields.\n  body String\n  \n  /// Created timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last updated timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Nullable soft-deletion timestamp if deleted by moderation.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  board discussionboard_boards @relation(fields: [board_id], references: [id], onDelete: Cascade)\n  author discussionboard_members @relation(fields: [author_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_post_edits discussionboard_post_edits[]\n  discussionboard_post_likes discussionboard_post_likes[]\n  discussionboard_post_views discussionboard_post_views[]\n  discussionboard_comments discussionboard_comments[]\n  discussionboard_reports discussionboard_reports[]\n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  \n  @@unique([board_id, id])\n  @@index([author_id])\n  @@index([created_at])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Discussion Board Post Edit Log - Implements snapshot pattern for edit/audit trail compliance. Each row records an edit event for a post, including editor identity and timestamp. No aggregation. Used for edit history, moderation transparency (3NF).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_edits {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Edited post's {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n  \n  /// User who made the edit, references member/mod/admin.\n  editor_id String @db.Uuid\n  \n  /// Optional description of what changed.\n  edit_summary String?\n  \n  /// Timestamp of edit event.\n  edited_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussionboard_posts @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  editor discussionboard_members @relation(fields: [editor_id], references: [id], onDelete: Cascade)\n  \n  @@index([editor_id])\n  \n  @@index([post_id])\n  @@index([edited_at])\n}\n\n/// Discussion Board Post Likes/Dislikes - Each row is a user's like/dislike for a specific post (3NF-compliant; no aggregates). Used for engagement analytics, anti-abuse, audit trail. Unique per (post_id, user_id).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_likes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Liked/disliked post's {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n  \n  /// Expressing user id (member/mod/admin) {@link discussionboard_members.id}\n  user_id String @db.Uuid\n  \n  /// True if like, false if dislike.\n  is_like Boolean\n  \n  /// Event timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussionboard_posts @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user discussionboard_members @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@index([user_id])\n  \n  @@unique([post_id, user_id])\n  @@index([created_at])\n}\n\n/// Discussion Board Post Views - Each row is a tracked viewing event, atomic and 3NF. No aggregated view counts stored. References viewer (nullable if anonymous/guest), post, and session. Example usage: user/visitor views a post; a row is logged for analytics and anti-abuse purposes.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_views {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Viewed post's {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n  \n  /// Viewer id (nullable for unauthenticated/guest view) {@link discussionboard_members.id}\n  user_id String? @db.Uuid\n  \n  /// Session id for anonymous/guest view tracking; useful for analytics. Nullable.\n  session_id String? @db.Uuid\n  \n  /// Timestamp view occurred.\n  viewed_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussionboard_posts @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user discussionboard_members? @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@index([user_id])\n  \n  @@index([post_id, viewed_at])\n}\n\n/// Discussion Board Comments (Replies) - Implements comment/nested reply feature. Each row is an atomic comment (not aggregate or summary); threaded/reply-to is enabled via parent_id. Relates to a post, optional parent comment, and has author and timestamps. Example: a reply to a comment will set parent_id; a reply to post will keep parent_id null.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// The post this comment is on {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n  \n  /// Comment author's user id (member/mod/admin) {@link discussionboard_members.id}\n  author_id String @db.Uuid\n  \n  /// Optional recursive parent for a reply chain (refers to this table's id). Nullable for top-level replies.\n  parent_id String? @db.Uuid\n  \n  /// Comment text (atomic, not computed).\n  body String\n  \n  /// Timestamp created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft deletion timestamp for moderation/audit purposes.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  post discussionboard_posts @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  author discussionboard_members @relation(fields: [author_id], references: [id], onDelete: Cascade)\n  parent discussionboard_comments? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n  \n  recursive discussionboard_comments[] @relation(\"recursive\")\n  discussionboard_comment_likes discussionboard_comment_likes[]\n  discussionboard_comment_edits discussionboard_comment_edits[]\n  discussionboard_comment_views discussionboard_comment_views[]\n  discussionboard_reports discussionboard_reports[]\n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  \n  @@index([parent_id])\n  \n  @@index([post_id])\n  @@index([author_id])\n  @@index([created_at])\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Likes/Dislikes for Discussion Board Comments - 3NF: one row per user per comment liking or disliking. No aggregate or summary fields. Used for engagement analytics, anti-abuse. Unique per (comment_id, user_id).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comment_likes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Liked/disliked comment id {@link discussionboard_comments.id}\n  comment_id String @db.Uuid\n  \n  /// Reacting user id (member/mod/admin) {@link discussionboard_members.id}\n  user_id String @db.Uuid\n  \n  /// True if like, false if dislike.\n  is_like Boolean\n  \n  /// Timestamp like/dislike event was created.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  comment discussionboard_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user discussionboard_members @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@index([user_id])\n  \n  @@unique([comment_id, user_id])\n  @@index([created_at])\n}\n\n/// Discussion Board Comment Edit Log - Each row is an atomic edit event for a comment (snapshot audit pattern). Tracks which comment was edited, who did it, and when. Used for audit transparency in moderation context (3NF).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comment_edits {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Edited comment's {@link discussionboard_comments.id}\n  comment_id String @db.Uuid\n  \n  /// User who edited the comment {@link discussionboard_members.id}\n  editor_id String @db.Uuid\n  \n  /// Optional brief note on edit reason or summary.\n  edit_summary String?\n  \n  /// Edit event timestamp.\n  edited_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  comment discussionboard_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  editor discussionboard_members @relation(fields: [editor_id], references: [id], onDelete: Cascade)\n  \n  @@index([editor_id])\n  \n  @@index([comment_id])\n  @@index([edited_at])\n}\n\n/// Unique view/read tracking for comments (analytics, engagement). Atomic: one row per (comment, user/session); no aggregates. Relates to comment, viewing user (nullable/guest), and session. Used for analytics/reporting (never pre-calculated).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comment_views {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Viewed comment's {@link discussionboard_comments.id}\n  comment_id String @db.Uuid\n  \n  /// User id of viewer (nullable/guest) {@link discussionboard_members.id}\n  user_id String? @db.Uuid\n  \n  /// Nullable session id to support anonymous/guest visitor analytics.\n  session_id String? @db.Uuid\n  \n  /// Timestamp of view event.\n  viewed_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  comment discussionboard_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user discussionboard_members? @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  \n  @@index([user_id])\n  \n  @@index([comment_id, viewed_at])\n}","schema-04-moderation.prisma":"/// User-generated content reports - This implements requirements from 'Moderation & Community Guidelines' and 'Functional Requirements: Flag/Report Functionality'. \n/// Allows members to report inappropriate posts or comments for moderator/admin review. Maintains 3NF compliance by storing one report per row with foreign keys linking to reporting member and target content. For example, when a member reports a comment, a record is created with details about the report and the referenced comment. \n/// Key relationships: References reporter (discussionboard_members), content type (post/comment), and target content.\n/// Special behaviors: Only one active report per content per reporting member is allowed until resolution.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each report.\n  id String @id @db.Uuid\n  \n  /// Referencing the member who filed the report: {@link discussionboard_members.id}.\n  reporting_member_id String @db.Uuid\n  \n  /// Referenced post if report concerns a post: {@link discussionboard_posts.id}. Nullable if report is for a comment.\n  target_post_id String? @db.Uuid\n  \n  /// Referenced comment if report concerns a comment: {@link discussionboard_comments.id}. Nullable if report is for a post.\n  target_comment_id String? @db.Uuid\n  \n  /// Reason for reporting - Implements the 'report reason' requirement. \n  /// Describes why the member has flagged the content. Ensures normalization by storing descriptive report reasons. For example, 'hate speech', 'spam', 'off-topic'.\n  reason String\n  \n  /// Status of the report (e.g., pending, reviewed, resolved, rejected). Implements 'moderation workflow' requirements. Only controlled values allowed through app logic.\n  status String\n  \n  /// Timestamp of when the report was filed. Supports moderation audit trails and reporting flow. Always required.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of when moderators reviewed the report. Nullable until review occurs.\n  reviewed_at DateTime? @db.Timestamptz\n  \n  /// Timestamp when action was taken or report was closed. Nullable until resolved.\n  resolved_at DateTime? @db.Timestamptz\n  \n  /// Moderator/admin remarks/comments for this report. Implements 'reviewer comment' requirement. Nullable if moderators did not leave notes.\n  moderation_note String?\n  \n  //----\n  // RELATIONS\n  //----\n  fk_reports_reporting_member discussionboard_members @relation(fields: [reporting_member_id], references: [id], onDelete: Cascade)\n  fk_reports_target_post discussionboard_posts? @relation(fields: [target_post_id], references: [id], onDelete: Cascade)\n  fk_reports_target_comment discussionboard_comments? @relation(fields: [target_comment_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  discussionboard_warnings discussionboard_warnings[]\n  discussionboard_audit_logs discussionboard_audit_logs[]\n  \n  @@index([target_post_id])\n  @@index([target_comment_id])\n  \n  @@unique([reporting_member_id, target_post_id])\n  @@unique([reporting_member_id, target_comment_id])\n  @@index([status])\n  @@index([created_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Moderator or admin actions taken during moderation - Implements the 'Moderation Dashboards' and 'Action Audit Trail' requirements.\n/// Tracks all key actions performed by moderators/admins (e.g., content removal, warning issued, ban applied). Maintains 3NF compliance by recording one action per row linked to the actor and the relevant report/content. For example, when a moderator removes a violating post, the action is logged with actor ID, action type, timestamp, and optional notes.\n/// Key relationships: Links to actor (admin/moderator/member), the related report, and optionally, the target post or comment. Supports auditability and moderation transparency.\n/// Special behaviors: Serialized log for moderation actions for full traceability.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderation_actions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for moderation action record.\n  id String @id @db.Uuid\n  \n  /// Actor if admin performed the action: {@link discussionboard_admins.id}. Nullable if actor is moderator/member.\n  actor_admin_id String? @db.Uuid\n  \n  /// Actor if moderator performed the action: {@link discussionboard_moderators.id}. Nullable if actor is admin/member.\n  actor_moderator_id String? @db.Uuid\n  \n  /// Actor if member performed the action: {@link discussionboard_members.id}. Nullable if actor is admin/moderator. For transparency, in case members can self-resolve or retract reports.\n  actor_member_id String? @db.Uuid\n  \n  /// Linked report this action addresses: {@link discussionboard_reports.id}. Nullable if not directly linked.\n  related_report_id String? @db.Uuid\n  \n  /// Target post acted upon (if applicable): {@link discussionboard_posts.id}.\n  target_post_id String? @db.Uuid\n  \n  /// Target comment acted upon (if applicable): {@link discussionboard_comments.id}.\n  target_comment_id String? @db.Uuid\n  \n  /// Type of moderation action (e.g. warn, ban, content removal, close report).\n  /// Implements moderation workflow requirements. Only controlled values allowed.\n  action_type String\n  \n  /// Details or reason for the moderation action. Implements 'audit and rationale' requirements. Example: 'Repeated violations', 'Spam content'.\n  action_reason String?\n  \n  /// Timestamp of when the moderation action was performed. Supports audit trails and workflow sequencing. Required for every action.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_moderationactions_actor_admin discussionboard_admins? @relation(fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_actor_moderator discussionboard_moderators? @relation(fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_actor_member discussionboard_members? @relation(fields: [actor_member_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_related_report discussionboard_reports? @relation(fields: [related_report_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_target_post discussionboard_posts? @relation(fields: [target_post_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_target_comment discussionboard_comments? @relation(fields: [target_comment_id], references: [id], onDelete: Cascade)\n  \n  discussionboard_audit_logs discussionboard_audit_logs[]\n  \n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([actor_member_id])\n  @@index([related_report_id])\n  @@index([target_post_id])\n  @@index([target_comment_id])\n  \n  @@index([action_type])\n  @@index([created_at])\n  @@index([action_reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// User bans from the platform - Implements business requirements in 'Moderation & Community Guidelines' and 'User Management'.\n/// Represents temporary or permanent user bans imposed by admins or moderators. Maintains 3NF compliance with a table per ban event, linking to the banned user (admin, moderator, or member) and the actor imposing the ban. For example, when a moderator bans a user for policy violation, the record logs the target user, actor, period, reason, and status.\n/// Key relationships: References the banned user (any role) and the actor.\n/// Special behaviors: Only one active ban at a time per user. Ban status updates tracked by action logs.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_bans {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for ban record.\n  id String @id @db.Uuid\n  \n  /// Target if banned user was an admin: {@link discussionboard_admins.id}. Nullable if target is not an admin.\n  target_admin_id String? @db.Uuid\n  \n  /// Target if banned user was a moderator: {@link discussionboard_moderators.id}. Nullable if target is not moderator.\n  target_moderator_id String? @db.Uuid\n  \n  /// Target if banned user was a member: {@link discussionboard_members.id}. Nullable if not member.\n  target_member_id String? @db.Uuid\n  \n  /// Admin who imposed the ban: {@link discussionboard_admins.id}. Nullable unless ban imposed by admin.\n  actor_admin_id String? @db.Uuid\n  \n  /// Moderator who imposed the ban: {@link discussionboard_moderators.id}. Nullable unless ban imposed by moderator.\n  actor_moderator_id String? @db.Uuid\n  \n  /// Reason for ban - Implements explicit rationale requirement. Describes why user was banned. Ensures normalization. E.g. 'Severe harassment', 'Repeated spam'.\n  ban_reason String\n  \n  /// When ban starts. Implements requirement for configurable ban durations. Prevents premature enforcement on the record.\n  ban_start_at DateTime @db.Timestamptz\n  \n  /// When ban ends (nullable if permanent). Enforces temporal normalization. E.g. 30-day ban, permanent if null.\n  ban_end_at DateTime? @db.Timestamptz\n  \n  /// Ban status (e.g. active, expired, lifted, scheduled). Controls enforcement by application logic. Implements status audit requirement.\n  status String\n  \n  /// Timestamp of ban record creation. Supports timeline and reporting.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp for last update to ban record. Audits changes, supports compliance requirements.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_bans_target_admin discussionboard_admins? @relation(\"discussionboard_bans_of_target_admin_id\", fields: [target_admin_id], references: [id], onDelete: Cascade)\n  fk_bans_target_moderator discussionboard_moderators? @relation(\"discussionboard_bans_of_target_moderator_id\", fields: [target_moderator_id], references: [id], onDelete: Cascade)\n  fk_bans_target_member discussionboard_members? @relation(fields: [target_member_id], references: [id], onDelete: Cascade)\n  fk_bans_actor_admin discussionboard_admins? @relation(\"discussionboard_bans_of_actor_admin_id\", fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_bans_actor_moderator discussionboard_moderators? @relation(\"discussionboard_bans_of_actor_moderator_id\", fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  \n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  \n  @@unique([target_admin_id])\n  @@unique([target_moderator_id])\n  @@unique([target_member_id])\n  @@index([status])\n  @@index([ban_start_at])\n  @@index([ban_end_at])\n  @@index([ban_reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Warnings issued to users for infractions - Implements requirements under 'User Management' and 'Moderation Dashboards'.\n/// Represents warnings (as opposed to bans) issued by moderators/admins to users for lesser violations. Maintains 3NF normalization: Each warning is linked to the warned user and the actor. Useful for progressive discipline enforcement. For example, members with repeated warnings may escalate to a ban.\n/// Key relationships: Links to the warned user (admin/mod/member) and the actor (admin/mod). \n/// Special behaviors: Track number and reason for warnings for each user; escalation rules handled externally by application logic.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_warnings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for warning record.\n  id String @id @db.Uuid\n  \n  /// Warned admin (rare): {@link discussionboard_admins.id}. Nullable if not admin.\n  target_admin_id String? @db.Uuid\n  \n  /// Warned moderator (rare): {@link discussionboard_moderators.id}. Nullable if not moderator.\n  target_moderator_id String? @db.Uuid\n  \n  /// Warned member: {@link discussionboard_members.id}. Nullable if not member.\n  target_member_id String? @db.Uuid\n  \n  /// Admin issuing warning: {@link discussionboard_admins.id}. Nullable unless admin issued.\n  actor_admin_id String? @db.Uuid\n  \n  /// Moderator issuing warning: {@link discussionboard_moderators.id}. Nullable unless moderator issued.\n  actor_moderator_id String? @db.Uuid\n  \n  /// Related report (if warning is result of a report): {@link discussionboard_reports.id}. Nullable if warning is not report-triggered.\n  related_report_id String? @db.Uuid\n  \n  /// Reason for issuing warning - Implements rationale requirement. E.g. 'Minor profanity', 'Off-topic'. Required for context audit.\n  reason String\n  \n  /// When warning was issued. For audit and escalation flows. Required for every warning.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_warnings_target_admin discussionboard_admins? @relation(\"discussionboard_warnings_of_target_admin_id\", fields: [target_admin_id], references: [id], onDelete: Cascade)\n  fk_warnings_target_moderator discussionboard_moderators? @relation(\"discussionboard_warnings_of_target_moderator_id\", fields: [target_moderator_id], references: [id], onDelete: Cascade)\n  fk_warnings_target_member discussionboard_members? @relation(fields: [target_member_id], references: [id], onDelete: Cascade)\n  fk_warnings_actor_admin discussionboard_admins? @relation(\"discussionboard_warnings_of_actor_admin_id\", fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_warnings_actor_moderator discussionboard_moderators? @relation(\"discussionboard_warnings_of_actor_moderator_id\", fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  fk_warnings_related_report discussionboard_reports? @relation(fields: [related_report_id], references: [id], onDelete: Cascade)\n  \n  @@index([target_admin_id])\n  @@index([target_moderator_id])\n  @@index([target_member_id])\n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([related_report_id])\n  \n  @@index([created_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Detailed audit logs for moderation events - Implements all audit and logging requirements outlined under 'Audit & Logging' and referenced throughout Moderation functional requirements. \n/// Stores granular logs about all moderation events, including state changes, permission elevation, and sensitive moderation actions. Maintains 3NF: All fields are atomic, and each log references the related action, actor, and event time. For example, when a moderator changes the status of a report, an audit log is added with actor ID, event type, event detail, and when it occurred.\n/// Key relationships: Links to actor (admin/mod/member) and optionally to related moderation action or report.\n/// Special behaviors: Immutable by application design - supports regulatory and policy audit needs.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_audit_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for audit log entry.\n  id String @id @db.Uuid\n  \n  /// Admin actor (if applicable): {@link discussionboard_admins.id}. Null if not admin.\n  actor_admin_id String? @db.Uuid\n  \n  /// Moderator actor (if applicable): {@link discussionboard_moderators.id}. Null if not moderator.\n  actor_moderator_id String? @db.Uuid\n  \n  /// Member actor (if applicable): {@link discussionboard_members.id}. Null if not member.\n  actor_member_id String? @db.Uuid\n  \n  /// Related report (if log is for a report event): {@link discussionboard_reports.id}. Nullable if not report-related.\n  related_report_id String? @db.Uuid\n  \n  /// Related moderation action (if log is for an action event): {@link discussionboard_moderation_actions.id}. Nullable if not related to an action.\n  related_moderation_action_id String? @db.Uuid\n  \n  /// Type of event (e.g., permission_change, status_update, ban_imposed). Controlled by business logic for audit classification. Only allowed values accepted.\n  event_type String\n  \n  /// Detail about the event - Implements requirement for detailed traceability. Example: 'Report status changed from pending to resolved by moderator.'\n  event_detail String\n  \n  /// Timestamp for the logged event. For compliance and sequencing. Required on every audit entry.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_auditlogs_actor_admin discussionboard_admins? @relation(fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_actor_moderator discussionboard_moderators? @relation(fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_actor_member discussionboard_members? @relation(fields: [actor_member_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_related_report discussionboard_reports? @relation(fields: [related_report_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_related_moderation_action discussionboard_moderation_actions? @relation(fields: [related_moderation_action_id], references: [id], onDelete: Cascade)\n  \n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([actor_member_id])\n  @@index([related_report_id])\n  @@index([related_moderation_action_id])\n  \n  @@index([created_at])\n  @@index([event_type])\n  @@index([event_detail(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-05-guidelines.prisma":"/// Community Guidelines entity - This implements the clear community rule and code-of-conduct requirements as detailed in the Discussion Board Requirements section 1 (Community Rules & 01 Business Objectives). \n///\n/// Business explanation: Stores guideline sections and texts in a normalized form, allowing updates and auditability for evolving community standards. Maintains 3NF compliance by separating each guideline entry, allowing references in moderation and user notifications. For example, guidelines about hate speech, constructive criticism, and post etiquette are stored here, referenced for automated onboarding or user display.\n///\n/// Key relationships: May be referenced by moderation or notification components for contextual messaging. Special behaviors: Only admins can create or update guidelines; each entry is versioned by created_at/updated_at for audit trail.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_community_guidelines {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for this guideline entry.\n  id String @id @db.Uuid\n  \n  /// Title of the guideline section - Implements requirement for clear, organized guideline presentation to users. For example, 'Posting Etiquette' or 'Prohibited Conduct.' Ensures normalization by storing as an atomic value.\n  title String\n  \n  /// Full content text of the guideline - Implements detailed community rule requirements. For example, 'Do not post personal attacks or hate speech.' Normalized 3NF, no derived/consolidated data.\n  body String\n  \n  /// Display order for this guideline - Required for user experience sequencing in guideline displays. Ensures atomicity and flexibility, supports updates without data duplication.\n  order_index Int @db.Integer\n  \n  /// Whether this guideline is currently enforced - Implements admin control of active/inactive statuses for evolving policy. For example, deactivating outdated rules. Ensures compliance with requirement to support updates and changes.\n  is_active Boolean\n  \n  /// Timestamp when guideline was created - Supports audit logging (requirement 2.6), and helps track policy evolution over time. Atomic value, part of full normalization.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when guideline was last updated. Ensures full auditability of content changes. 3NF compliance.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([title])\n  @@index([order_index])\n}\n\n/// Content Policy entity - Implements the explicit, system-level policy and moderation documentation requirements as detailed in requirements section 3 (Content Policies & Moderation Policy).\n///\n/// Business purpose: Stores specific, enforceable policy rules that apply to user-generated content (e.g. 'No hate speech', 'No plagiarism'). Maintains normalization by handling each policy as a distinct, queryable record. Can be referenced during automated content checking or manual moderation. For example, policy text on 'Profanity' or 'Spam' detection is kept here.\n///\n/// Key relationships: May be referenced when determining sanction actions. Special behaviors: Only admins can add/update/delete policy entries. Supports audit trail with timestamps.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_content_policies {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for this content policy rule.\n  id String @id @db.Uuid\n  \n  /// Short code or name for this content policy - Implements requirement for structured policy documentation and reference. Enables quick lookup and enforcement. For example, 'NO_HATE_SPEECH', 'NO_SPAM'.\n  policy_code String\n  \n  /// Detailed description of the content policy - Implements policy communication and moderator clarity requirements. For example, 'Any content promoting violence is strictly prohibited.' 3NF.\n  description String\n  \n  /// Category or policy group - Implements requirement to organize content policies by type, e.g., 'Spam', 'Abuse', 'Copyright'. Ensures normalization by avoiding transitive dependencies.\n  category String\n  \n  /// Whether this policy is active/enforced - Needed for content policy versioning and update flows. For example, deactivating obsolete policies. Ensures atomicity.\n  is_active Boolean\n  \n  /// Timestamp when this policy was created. Required for audit trails and rollback scenarios (requirements 2.6, 4).\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when this policy was last updated - Ensures full auditability and supports policy review schedules.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([policy_code])\n  @@index([category])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Profanity Filter entity - Implements the system-level requirement for profanity filtering as outlined in requirements section 3.4 (Content Policies, Moderation).\n///\n/// Business purpose: Contains normalized words/phrases that trigger system profanity detection on posts and comments. Maintains 3NF by storing each profane word or phrase as a single record, linked to activation status and audit fields. For example, the word 'foobar' or a list of banned words.\n///\n/// Key relationships: May be referenced by automated moderation or content creation APIs. Special behaviors: Admins update/add words as needed, all events are timestamped.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_profanity_filters {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique ID for this profanity filter entry.\n  id String @id @db.Uuid\n  \n  /// Word or phrase to be filtered - Implements requirement for configurable, updatable profanity filtering. Ensures normalized storage. For example, 'badword'.\n  word String\n  \n  /// Whether this word is currently being filtered - Required for admin update flexibility. For example, suspending words from filter lists. Atomic value.\n  is_active Boolean\n  \n  /// When this filter entry was created - For auditability and policy management. 3NF value.\n  created_at DateTime @db.Timestamptz\n  \n  /// When this filter entry was last updated - Needed for rollbacks or removals in system logs, part of full normalization.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([word])\n}\n\n/// Automated Spam Rule entity - Implements the automated spam rule detection policies required by Functional Requirements 3.3.4 and Moderation Policy.\n///\n/// Business purpose: Stores configurable, versioned rules or patterns that the platform's automated spam detector references. Maintains 3NF by separating each spam rule (regex, expression, or keyword) as an atomic record. For example, an entry could define regex matching repeated links or banned spam phrases.\n///\n/// Key relationships: May be consumed by content creation or moderation APIs. Special behaviors: Rule activation handled by admins, all updates tracked in audit logs.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_automated_spam_rules {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for this spam rule entry.\n  id String @id @db.Uuid\n  \n  /// Pattern or expression for spam detection - Implements flexible, updatable automated spam pattern detection. 3NF compliance. For example, regex for repeated links or specific spam syntax.\n  rule_pattern String\n  \n  /// Explanation of what this rule detects - Implements clarity and auditability. For example, 'Detects repeated posting of phishing URLs.' Atomic, not derived.\n  description String\n  \n  /// Whether the rule is currently active - Allows admins to enable/disable detection flexibly for evolving spam tactics. Ensures policy agility.\n  is_active Boolean\n  \n  /// Timestamp when this spam rule was created - Required for audit logging and rule review processes.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when this spam rule was last updated - Ensures full auditability of rule changes. 3NF compliance.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@unique([rule_pattern])\n}","schema-06-notifications.prisma":"/// Discussion Board Notification Entity - Implements the notification delivery requirement from the Notification System and Audit & Logging sections. \n///\n/// This model stores each notification event (such as replies, likes, mentions, moderation actions) sent to users. It allows tracking, delivery status, and historic audit for every notification generated by system events across the discussion board.\n///\n/// Maintains 3NF compliance by separating notification records from user profiles and alert preferences (notification delivery configuration is stored in a separate table). For example, when a user receives a reply to their post, a notification record is created here, referencing the recipient, event details, and delivery state.\n///\n/// Key relationships: Links to recipients (discussionboard_members) via foreign key. Optionally relates to specific posts, comments, or moderation events stored in other domains.\n/// Special behaviors: Notifications can be marked as read/unread. Supports expirable and persistent notification types.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notifications {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each notification.\n  id String @id @db.Uuid\n  \n  /// Recipient's {@link discussionboard_members.id} - The user who receives this notification. Fulfills the requirement for per-user notification tracking and targeting.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Notification type - Implements the Notification System requirement specifying kind of event (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system'). Defines the user event that triggered notification delivery. Ensures normalization by recording type as a code, not a computed string. Example: 'reply'.\n  type String\n  \n  /// Reference ID of the related entity (e.g., post, comment, moderation action) - Implements the Notification System's requirement for contextual notification. Stores the target object relevant to the notification for audit/logging. Can be null if event is generic. Ensures normalization by storing only the ID. Example: the comment being replied to.\n  related_entity_id String? @db.Uuid\n  \n  /// Type of related entity referenced (e.g., 'post', 'comment', 'moderation_action') - Implements requirement to allow notifications on multiple kinds of entities. Ensures normalization by specifying entity type in a discrete field, not by using polymorphic joins. Example: 'post'.\n  related_entity_type String?\n  \n  /// Notification message content - Implements requirement for human-readable notification body. Stores the message shown to the user. Example: 'Alice replied to your post.' Field is atomic and normalized. No computed values here.\n  content String\n  \n  /// Flag indicating whether the notification has been read. Supports UI requirements for marking notifications as read/unread. Ensures normalization by only storing a boolean flag. Example: false (unread).\n  is_read Boolean\n  \n  /// Timestamp when notification was delivered to the user. Implements audit/logging requirements for notification delivery history and sequencing. Normalization: Each delivery occurrence is atomic. Example: 2024-06-17T12:00:00Z.\n  delivered_at DateTime @db.Timestamptz\n  \n  /// Timestamp when notification expires - Implements event-driven notification expiry (for temporary/scheduled alerts). Ensures normalization by storing expiry per notification, not per user. Example: 2024-07-01T00:00:00Z. May be null if notification does not expire.\n  expires_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_notifications_recipient discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@index([discussionboard_member_id])\n  @@index([is_read])\n  @@index([delivered_at])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Discussion Board Alert Preference Entity - Implements the notification preferences requirement from the Notification System and Settings functionality sections. \n///\n/// This model stores each user's per-type notification delivery preferences (e.g., email, push, in-app, or off). Fulfills the requirement to provide members with fine-grained control over which notification types they receive and how they are delivered.\n///\n/// Maintains 3NF compliance by separating user notification configuration from actual notification data and user profile records. For example, a user may choose in-app alerts for replies but email notifications for moderation actions, which is configured here.\n///\n/// Key relationships: References the user (discussionboard_members) as the owner of these preferences. No denormalized or computed fields.\n/// Special behaviors: Only one set of preferences per (user, notification type) enforced by unique index constraint.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_alert_preferences {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each alert preference record.\n  id String @id @db.Uuid\n  \n  /// Owner's {@link discussionboard_members.id} - The user who owns this alert preference set. Implements per-user preference requirement for notification delivery.\n  discussionboard_member_id String @db.Uuid\n  \n  /// Notification type for which this preference applies (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system') - Implements the Notification System and Settings requirements for configurable per-type delivery. Ensures normalization by storing type as atomic value. Example: 'moderation_action'.\n  notification_type String\n  \n  /// Delivery channel preference (e.g., 'email', 'push', 'in_app', 'none') - Implements requirement for per-type delivery method configuration by user. Ensures normalization by storing as atomic value, not as calculated field. Example: 'email'.\n  delivery_channel String\n  \n  /// Timestamp when these preferences were last updated. Supports audit/logging for settings changes. Ensures atomic history of preference changes. Example: 2024-06-18T13:31:21Z.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  discussionboard_alert_preferences_owner discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n  \n  @@unique([discussionboard_member_id, notification_type])\n  @@index([discussionboard_member_id])\n  @@index([notification_type])\n}","schema-07-logs.prisma":"/// [Discussion Board Action Logs] - This implements the audit trail, accountability, and compliance requirements from the requirements document (including 2.6 Audit & Logging, moderation, and transparency mandates).\n///\n/// Records every critical user or system action, especially for admin/moderator-level events. Maintains 3NF (fully normalized) by separating actor ID, event types, and contextual entity references, supports extensible metadata, and avoids denormalization. Example: logs a moderator deleting a post or editing a comment.\n///\n/// Key relationships: Connects to user tables such as {@link discussionboard_admins.id}, {@link discussionboard_moderators.id}, or other actors by \"actor_id\" field.\n/// Special behaviors: Immutable log entries, supports efficient filtering by actor/event/time; forms basis for compliance reporting and root-cause investigation.\n///\n/// @namespace Logs\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_action_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each log entry.\n  id String @id @db.Uuid\n  \n  /// Actor's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related user type associated with this action. This ties each log entry to the user responsible for the action, supporting auditability and cross-user queries.\n  actor_id String @db.Uuid\n  \n  /// Type of action performed. Implements event categorization (e.g., POST_CREATED, COMMENT_DELETED, MODERATOR_BAN). Enables filtering and auditing by action nature. Ensures normalization by not encoding rules in single fields. Example: 'POST_DELETED'.\n  event_type String\n  \n  /// Associated entity ID for this action (e.g., post, comment, report), implements requirement for contextual event reference. Maintains normalized design by storing IDs only. Example: The comment or post UUID affected. Nullable if event affects no entity.\n  event_target_id String? @db.Uuid\n  \n  /// Additional JSON metadata for extensibility (e.g., IP address, device, moderation reason). Implements extensibility and normalization by not hardcoding new columns for rare event data. Example: '{\"reason\":\"Spam\",\"ip\":\"10.1.2.3\"}'.\n  metadata String?\n  \n  /// Timestamp when the action occurred. Implements mandatory audit resolution and helps support sorting/filtering by time. Example: '2025-07-22T13:30:45.969+09:00'.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_action_log_actor discussionboard_members @relation(fields: [actor_id], references: [id], onDelete: Cascade)\n  \n  @@index([actor_id, event_type, created_at])\n}\n\n/// [Error Logging Table] - This implements requirements from 3.1 Security, 3.2 Performance, and 3.5 Compliance regarding platform and API error capture for diagnostics and resilience.\n///\n/// Captures and audits all system or application errors and exceptions in a normalized, traceable log. 3NF compliance by completely separating error details from business records, with reference context available via \"context_id\". Used in debugging, incident response, or platform monitoring. Example: logs database faults, uncaught exceptions, and failed external API calls.\n///\n/// Key relationships: No direct foreign keys (for privacy and decoupling from actor data).\n/// Special behaviors: Immutable, full-text searchable, supports quick triage by error code and time.\n///\n/// @namespace Logs\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_error_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Application-defined error or exception code. Enables quick error categorization and system monitoring. Example: 'API_TIMEOUT', 'UNCAUGHT_EXCEPTION'.\n  error_code String\n  \n  /// Human-readable error message for reporting and debugging. Meets compliance for log clarity. Example: 'Failed to fetch posts due to network timeout.'\n  error_message String\n  \n  /// Full stack trace or technical details for debugging. Fulfills non-functional requirements for detailed auditing; normalized by isolating trace info from other data. Nullable if unavailable. Example: JavaScript stack trace or error object.\n  stack_trace String?\n  \n  /// Arbitrary context entity (e.g., API request ID or related entity UUID). Supports linking errors to request or entity. Nullable if not applicable.\n  context_id String? @db.Uuid\n  \n  /// Timestamp the error was recorded, allows sequencing and SLA tracking. Example: '2025-07-22T13:30:45.969+09:00'.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  @@index([error_code, created_at])\n  @@index([error_message(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [API Access Logs] - Implements non-functional requirements 3.1 Security, 3.2 Performance, and 2.6 Audit by tracing all API interactions for security review, rate-limiting enforcement, and usage analytics.\n///\n/// Logs all API calls, including the user (if authenticated), endpoint, HTTP method, and result. Maintains normalization (3NF) with user linkage by actor_id (nullable for guests), never storing denormalized request payloads. Used for monitoring abuse and generating analytics. Example: logs a member's GET to /api/posts or a failed POST to /api/comments.\n///\n/// Key relationships: May reference the user by actor_id (nullable for guest requests). No other foreign keys.\n/// Special behaviors: Massive write-optimized; may be purged for data retention compliance.\n///\n/// @namespace Logs\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_api_access_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Authenticated user's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related role. Null if guest/public API. Enables audit and correlation to users.\n  actor_id String? @db.Uuid\n  \n  /// HTTP method used for this API call (GET, POST, PATCH, DELETE, etc). Implements API audit detail. Example: 'GET'.\n  method String\n  \n  /// API endpoint path or resource accessed. Enables fine-grained analytics. Example: '/api/comments/12345'.\n  endpoint String\n  \n  /// Returned HTTP status code. Allows compliance and diagnostics on failed/successful calls. Example: 200, 403, 404.\n  status_code Int @db.Integer\n  \n  /// IP address of the client for this call. Supports abuse monitoring and incident forensics. Example: '203.0.113.5'.\n  ip_address String\n  \n  /// Client user-agent for context in debugging or device profiling. Nullable if unavailable. Example: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X)'.\n  user_agent String?\n  \n  /// Request processing latency in milliseconds. Enables API performance monitoring. Example: 163.\n  response_time_ms Int @db.Integer\n  \n  /// Timestamp of the API call. Supports retention and incident analysis. Example: '2025-07-22T13:30:45.969+09:00'.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  fk_access_log_actor discussionboard_members? @relation(fields: [actor_id], references: [id], onDelete: Cascade)\n  \n  @@index([actor_id, endpoint, created_at])\n  @@index([endpoint(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = []\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../docs/ERD.md\"\n}"},"compiled":{"type":"success","schemas":{"schema-01-systematic.prisma":"/// Board Section entity - This implements the requirement for organizing multiple boards into logical sections/category headings as described in the requirements (see Business Overview and Board API). \n///\n/// Provides top-level grouping for boards (e.g., 'Politics', 'Economy'). Each section contains multiple boards but supports explicit sorting and labeling for easy discovery. Maintains 3NF by storing only section-specific data and referencing boards elsewhere. \n///\n/// Example: Used for filtering the board list UI, and configuring board display order in admin settings.\n/// Key relationships: One section to many boards (referenced from discussionboard_boards). \n/// Special behaviors: Deletions should be restricted if boards exist within a section.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_sections {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for a section.\n  id String @id @db.Uuid\n\n  /// Section name - Implements the section/categorization requirement. Human-readable name to display to users (e.g., 'Politics'). 3NF maintained by storing only the atomic label here. Example: Section dropdown in UI.\n  name String\n\n  /// Section description - Short text clarifying purpose or scope. 3NF compliant atomic text. Example: 'For regional and national issues.'\n  description String?\n\n  /// Explicit sort order for UI display - Allows admin-defined ordering of sections. Maintains 3NF by only storing atomic order number. Example: Integer used for section sorting.\n  sort_order Int @db.Integer\n\n  /// Creation timestamp - Implements audit and data retention requirement. 3NF as an atomic date-time value. Example: used for sorting/recently added filter.\n  created_at DateTime @db.Timestamptz\n\n  /// Last update timestamp - Used for audits and last-modified displays. Example: UI 'last updated' column.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_boards discussionboard_boards[]\n\n  @@unique([name])\n  @@index([sort_order])\n}\n\n/// Board entity - Implements the requirement for multiple thematic boards within the platform (see Business Overview, API spec). \n///\n/// Represents a specific discussion board (e.g., 'Elections 2025'). Each board belongs to a section and can have subscriptions, tags, settings, etc. Maintains 3NF by separating board details from posts/content, and referencing only the relevant section. \n///\n/// Example: Used for displaying board list, posting endpoints, and enforcing board-level settings.\n/// Key relationships: Many-to-one with discussionboard_sections (foreign key); referenced by other tables for posts, subscriptions, and tags.\n/// Special behaviors: Section deletion/renaming cascades/updates needed; cannot delete section if boards exist.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_boards {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for a board.\n  id String @id @db.Uuid\n\n  /// Belonged section's {@link discussionboard_sections.id} - Links board to its section for groupings. Required to ensure boards are organized. Maintains referential integrity and 3NF.\n  discussionboard_section_id String @db.Uuid\n\n  /// Board name - Implements the logical board separation requirement. Human-readable board title (e.g., 'Elections 2025'). Strictly atomic per 3NF. Example: Board selector UI.\n  name String\n\n  /// Board description - Explanatory text for users to understand board's focus. Enforces 3NF by storing only description here. Example: Board hover tooltip.\n  description String?\n\n  /// Custom board-specific rules (markdown/plaintext) - Implements requirement for community rules per board. Maintains 3NF. Example: Board custom code of conduct.\n  rules String?\n\n  /// Active/inactive flag - Used by admins to hide inactive/archived boards. Follows 3NF by being an atomic status indicator. Example: Board visibility toggle.\n  is_active Boolean\n\n  /// Creation timestamp for the board - For audits, logs, and recency filters. 3NF atomic timestamp. Example: Used in new board creation tracking.\n  created_at DateTime @db.Timestamptz\n\n  /// Last updated time - For audit trail and change tracking. Example: UI listing.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_discussionboard_boards_section discussionboard_sections @relation(fields: [discussionboard_section_id], references: [id], onDelete: Cascade)\n\n  discussionboard_board_subscriptions discussionboard_board_subscriptions[]\n  discussionboard_board_settings      discussionboard_board_settings?\n  discussionboard_posts               discussionboard_posts[]\n\n  @@unique([name])\n  @@index([discussionboard_section_id])\n}\n\n/// Tag entity - Implements the requirement for tagging boards and enabling filtered search/discovery (see Functional Requirements and API spec). \n///\n/// Stores tag definitions for use on boards or posts. Tags can be assigned to boards (via M:N relationship implemented in other domain if needed). Maintains 3NF as a definition-only table; actual assignments are managed elsewhere. \n///\n/// Example: Used for board tag suggestions, filtering board/post lists. \n/// Key relationships: Used in tag-board mappings but maintains strict normalization here.\n/// Special behaviors: Only atomic data stored; all application-side assignment linked elsewhere.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_tags {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique tag identifier.\n  id String @id @db.Uuid\n\n  /// Tag value - Human-friendly tag (e.g., 'policy', 'economy'). Implements tag definition requirement. Enforces normalization by keeping atomic labels only here. Example: Tag chips in UI.\n  tag String\n\n  /// Tag description - Explains scope/purpose of tag for admin and users. Enforces 3NF. Example: Tag hover info.\n  description String?\n\n  /// Tag creation timestamp - Required for record keeping. Maintains 3NF. Example: Used for sorting tags by newest.\n  created_at DateTime @db.Timestamptz\n\n  /// Last tag update time - For audit logs and change history in admin UI. 3NF compliant.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([tag])\n}\n\n/// Board subscription entity - Implements the board subscription/notification feature (see Notification System and Functional Requirements). \n///\n/// Tracks which members are subscribed to which boards, to drive notifications and update feeds. Maintains 3NF as a pure M:N/junction entity: each record (subscription) is atomic, linking a single user to a single board. \n///\n/// Example: Used for fast lookup of a member's subscribed boards, or when sending board notifications. \n/// Key relationships: Foreign keys to boards (this file) and discussionboard_members (external Actors component). \n/// Special behaviors: Unsubscribe (soft delete or remove record); composite uniqueness enforced.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_board_subscriptions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique subscription ID.\n  id String @id @db.Uuid\n\n  /// Subscribed board's {@link discussionboard_boards.id} - Enforces which board is subscribed. Enforces 3NF as atomic foreign key. Example: All subscriptions for a board.\n  discussionboard_board_id String @db.Uuid\n\n  /// Subscribed member's {@link discussionboard_members.id} (from Actors component) - Links subscription to member (ALREADY CREATED in Actors schema). 3NF: purely as a foreign key. Example: All user subscriptions.\n  discussionboard_member_id String @db.Uuid\n\n  /// Time of subscription - For audit/logging, 3NF as single timestamp. Example: Recent subscriber statistics.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_db_board_subs_board  discussionboard_boards  @relation(fields: [discussionboard_board_id], references: [id], onDelete: Cascade)\n  fk_db_board_subs_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussionboard_board_id, discussionboard_member_id])\n  @@index([discussionboard_member_id])\n}\n\n/// Board settings entity - Implements requirement for customizable settings per board (see Functional Requirements and Board API). \n///\n/// Stores various administrative or feature settings per board (e.g., allow images, require moderator approval). Maintains 3NF: atomic settings per board, without computed fields; extensible. \n///\n/// Example: Used to toggle features for specific boards or override defaults.\n/// Key relationships: Unique per board (1:1 with boards). \n/// Special behaviors: Board can have only one settings record; model extensible for future settings.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_board_settings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for board settings.\n  id String @id @db.Uuid\n\n  /// Target board's {@link discussionboard_boards.id} - Settings apply to this board. Enforced unique for 1:1. Example: Feature toggle lookup for a specific board.\n  discussionboard_board_id String @db.Uuid\n\n  /// Allow image uploads - Implements toggle for image posting. 3NF: atomic flag only, actual images handled elsewhere. Example: Image post permissions UI.\n  allow_images Boolean\n\n  /// Require moderator approval for new posts - Supports moderation flow requirement. 3NF flag only. Example: Restricted board setup.\n  require_moderator_approval Boolean\n\n  /// Creation timestamp for audit/history. 3NF as atomic timestamp. Example: For admin settings log.\n  created_at DateTime @db.Timestamptz\n\n  /// Last updated time for settings, for auditing. Example: Settings history tracking.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_db_board_settings_board discussionboard_boards @relation(fields: [discussionboard_board_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussionboard_board_id])\n}\n\n/// User notification setting entity - Implements user preference storage for receiving board/content notifications (see Notification System and Functional Requirements). \n///\n/// Stores per-user notification toggles/preferences for the Discussion Board domain. Maintains 3NF by keeping atomic preference values per user. Used to configure which types of notifications are received (thread activity, announcements, etc). \n///\n/// Example: Used when sending notification emails, or rendering notification settings UI. \n/// Key relationships: Linked to members (via discussionboard_member_id from Actors component).\n/// Special behaviors: Unique-per-user enforced, 1:1 with member record.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notification_settings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique notification setting ID.\n  id String @id @db.Uuid\n\n  /// Belonged member's {@link discussionboard_members.id} (from Actors component) - Which member these preferences apply to. Unique for 1:1. Example: Editing notification preferences for logged-in member.\n  discussionboard_member_id String @db.Uuid\n\n  /// Receive notifications for new board activity/posts - Implements the core notification toggle. 3NF as atomic preference. Example: User settings UI toggle.\n  receive_board_notifications Boolean\n\n  /// Receive mention notifications - Controls alerts for mentions/replies. 3NF flag. Example: Mention alert switch on settings page.\n  receive_mention_notifications Boolean\n\n  /// Creation timestamp for notification prefs history/audit. 3NF.\n  created_at DateTime @db.Timestamptz\n\n  /// Last prefs update timestamp, for audit/history. 3NF.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_db_notification_settings_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussionboard_member_id])\n}\n","schema-02-actors.prisma":"/// Platform administrator role assignment - Implements the functional requirement for privileged admin accounts as found in the requirements (see: User Roles & Permissions). \n///\n/// Administrators oversee content and user moderation at the highest level; this table records accounts with full platform control and is central for RBAC enforcement. Maintains strict 3NF normalization by storing only direct attributes of the admin role, referencing user membership via foreign key. For example, promotes a member to admin role or demotes. \n///\n/// Key relationships: links to discussionboard_members (user basis), may be referenced in audit logs or moderation actions.  Special behaviors: Granting this role cascades full access; must be auditable.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_admins {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique admin role record identifier.\n  id String @id @db.Uuid\n\n  /// Belonged member's {@link discussionboard_members.id}. Assigns admin privileges to a registered member.\n  discussionboard_member_id String @db.Uuid\n\n  /// Datetime when admin role was granted. Implements temporal auditability as per action trail requirements. For example, captures promotion time.\n  granted_at DateTime @db.Timestamptz\n\n  /// Datetime when admin role was revoked (if applicable). Null unless admin privileges are removed. Supports audit and compliance.\n  revoked_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_admins_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  discussionboard_moderation_actions          discussionboard_moderation_actions[]\n  discussionboard_bans_of_target_admin_id     discussionboard_bans[]               @relation(\"discussionboard_bans_of_target_admin_id\")\n  discussionboard_bans_of_actor_admin_id      discussionboard_bans[]               @relation(\"discussionboard_bans_of_actor_admin_id\")\n  discussionboard_warnings_of_target_admin_id discussionboard_warnings[]           @relation(\"discussionboard_warnings_of_target_admin_id\")\n  discussionboard_warnings_of_actor_admin_id  discussionboard_warnings[]           @relation(\"discussionboard_warnings_of_actor_admin_id\")\n  discussionboard_audit_logs                  discussionboard_audit_logs[]\n\n  @@unique([discussionboard_member_id])\n  @@index([granted_at])\n}\n\n/// Moderator role assignment - Implements the requirement for a moderation role to enforce community guidelines (see: Moderation Roles & Policies, Permissions Matrix).\n///\n/// This table records which members serve as moderators. It maintains strict normalization by referencing user membership while tracking assignment and revocation dates. Used for permission elevation, logging, and audit trails. For example, a user promoted from member to moderator.\n///\n/// Key relationships: References discussionboard_members. Special behaviors: Can be demoted; actions logged for accountability.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderators {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique moderator assignment record.\n  id String @id @db.Uuid\n\n  /// Belonged member's {@link discussionboard_members.id} - the member elevated to moderator role.\n  discussionboard_member_id String @db.Uuid\n\n  /// Datetime when moderator role was granted. Implements temporal audit trail for promotions. For example, captures elevation to moderator.\n  granted_at DateTime @db.Timestamptz\n\n  /// Datetime when moderator role was revoked (null if active). Supports demotion/historical queries.\n  revoked_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_moderators_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  discussionboard_moderation_actions              discussionboard_moderation_actions[]\n  discussionboard_bans_of_target_moderator_id     discussionboard_bans[]               @relation(\"discussionboard_bans_of_target_moderator_id\")\n  discussionboard_bans_of_actor_moderator_id      discussionboard_bans[]               @relation(\"discussionboard_bans_of_actor_moderator_id\")\n  discussionboard_warnings_of_target_moderator_id discussionboard_warnings[]           @relation(\"discussionboard_warnings_of_target_moderator_id\")\n  discussionboard_warnings_of_actor_moderator_id  discussionboard_warnings[]           @relation(\"discussionboard_warnings_of_actor_moderator_id\")\n  discussionboard_audit_logs                      discussionboard_audit_logs[]\n\n  @@unique([discussionboard_member_id])\n  @@index([granted_at])\n}\n\n/// Registered discussion board user accounts (members) - Implements registration/authentication requirements (User Authentication & Roles, CRUD Permissions).\n///\n/// This table represents all registered, authenticated users. It enforces 3NF by storing only per-user, non-derived data. For example, account creation, activation status, ban integration and role assignment references.\n///\n/// Key relationships: Referenced by admin, moderator, profile, and user email tables. Special behaviors: Used for primary ownership of posts/comments.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_members {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique member account identifier.\n  id String @id @db.Uuid\n\n  /// Account username - unique member login handle fulfilling the registration requirement; not case-sensitive and normalized for identity mapping. Ensures user uniqueness at platform level. Example: johndoe.\n  username String\n\n  /// Hashed password for secure authentication (never raw password), per non-functional security requirement. Complies with encryption policy and data protection. Example: bcrypt or Argon2 hash string.\n  password_hash String\n\n  /// Datetime when member account was created. Implements registration audit trail and supports search/sorting. Example: upon sign up.\n  created_at DateTime @db.Timestamptz\n\n  /// Datetime when account was activated/completed verification. Null if not verified yet. Example: after email confirmation workflow.\n  activated_at DateTime? @db.Timestamptz\n\n  /// Datetime of account deactivation (soft delete or permanent). Null if active. Supports retention policy and reactivation scenarios.\n  deactivated_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_board_subscriptions   discussionboard_board_subscriptions[]\n  discussionboard_notification_settings discussionboard_notification_settings?\n  discussionboard_admins                discussionboard_admins?\n  discussionboard_moderators            discussionboard_moderators?\n  discussionboard_user_profiles         discussionboard_user_profiles?\n  discussionboard_user_emails           discussionboard_user_emails[]\n  discussionboard_user_auths            discussionboard_user_auths[]\n  discussionboard_user_sessions         discussionboard_user_sessions[]\n  discussionboard_posts                 discussionboard_posts[]\n  discussionboard_post_edits            discussionboard_post_edits[]\n  discussionboard_post_likes            discussionboard_post_likes[]\n  discussionboard_post_views            discussionboard_post_views[]\n  discussionboard_comments              discussionboard_comments[]\n  discussionboard_comment_likes         discussionboard_comment_likes[]\n  discussionboard_comment_edits         discussionboard_comment_edits[]\n  discussionboard_comment_views         discussionboard_comment_views[]\n  discussionboard_reports               discussionboard_reports[]\n  discussionboard_moderation_actions    discussionboard_moderation_actions[]\n  discussionboard_bans                  discussionboard_bans[]\n  discussionboard_warnings              discussionboard_warnings[]\n  discussionboard_audit_logs            discussionboard_audit_logs[]\n  discussionboard_notifications         discussionboard_notifications[]\n  discussionboard_alert_preferences     discussionboard_alert_preferences[]\n  discussionboard_action_logs           discussionboard_action_logs[]\n  discussionboard_api_access_logs       discussionboard_api_access_logs[]\n\n  @@unique([username])\n  @@index([created_at])\n}\n\n/// Guest user visitation - Implements guest journey tracking for unauthenticated users (see: User Roles & Journeys, Audit Trail).\n///\n/// This table stores guest/browser sessions for analytics, restrictions, and future up-sell. Maintains normalized structure by storing atomic session info only, not mixing with registered user data. For example, may log guest page views or promote registration.\n///\n/// Key relationships: May later link to discussionboard_members if guest converts to member.\n/// Special behaviors: Short-lived; can be joined to logs for traffic analysis.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_guests {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique guest session identifier.\n  id String @id @db.Uuid\n\n  /// Opaque session cookie or token identifying the guest browser. Supports uniqueness and privacy tracking. For example: UUID or secure random token.\n  session_token String\n\n  /// Datetime guest session was initiated. Implements guest activity timeline; supports reporting and session expiry logic.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([session_token])\n  @@index([created_at])\n}\n\n/// Extended member profile details - Implements profile customization as per member/user journey requirements.\n///\n/// This table holds profile metadata (bio, display name, avatar, etc.), referencing the core member account. Maintains normalization by separating profile from core authentication/role. Example: user changes display name or avatar; updates here without affecting core login.\n///\n/// Key relationships: Foreign key to discussionboard_members. Special behaviors: all fields except member linkage are nullable, allowing partial profiles.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_profiles {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique profile record identifier.\n  id String @id @db.Uuid\n\n  /// Belonged member's {@link discussionboard_members.id}. One-to-one mapping from member to user profile.\n  discussionboard_member_id String @db.Uuid\n\n  /// Public display name or nickname for the user (not required to match username). Implements customization requirement as per usability guideline. Example: John R.\n  display_name String?\n\n  /// Short user biography or introduction, as per personalization feature. Maintains normalized structure; null if not set.\n  bio String?\n\n  /// Profile image/avatar URI, facilitating multimedia enhancement and personalization. Null if not provided; stored as URI string. Example: https://cdn.site/avatar/123.\n  avatar_url String? @db.VarChar(80000)\n\n  /// Datetime profile was created. Implements audit trail for customization events.\n  created_at DateTime @db.Timestamptz\n\n  /// Datetime profile was last updated, supports version awareness for profile changes. Enables profile history tracking.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_profiles_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussionboard_member_id])\n  @@index([created_at])\n  @@index([display_name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Email addresses associated with member accounts - Implements requirements for registration, verification, contact and notification preferences (Functional: Registration & Email Verification).\n///\n/// Maintains one-to-many normalized mapping for supporting multiple verified emails per account, anti-abuse, and notification flexibility. Only stores atomic email info, never cached tokens or codes. Example: primary and backup email tracking; supports search, notification, verification workflows.\n///\n/// Key relationships: Foreign key to discussionboard_members. Special behaviors: unique constraint on (discussionboard_member_id, email), optional verification per email.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_emails {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique email record identifier.\n  id String @id @db.Uuid\n\n  /// Belonged member's {@link discussionboard_members.id}. Each email mapped to a registered user.\n  discussionboard_member_id String @db.Uuid\n\n  /// Email address string associated with the account. Implements registration, notification, and recovery flows - separate from core username for flexibility. Ensures normalization. Example: jane@host.com.\n  email String\n\n  /// Whether the email has passed verification (registration, notification, etc). Implements email confirmation flow; only verified addresses are used for key system functions. Defaults to false until confirmation.\n  is_verified Boolean\n\n  /// Whether this email is the primary contact address for the member (UI and system requirement). Each account can have at most one primary email. For example: used for login, password reset.\n  is_primary Boolean\n\n  /// Datetime this email address was added or linked. Supports registration, change tracking, and reporting requirements.\n  added_at DateTime @db.Timestamptz\n\n  /// Datetime when verification was completed. Nullable to allow in-progress or failed verifications. Maintains normalization; no denormalized workflow states.\n  verified_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_emails_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussionboard_member_id, email])\n  @@unique([email])\n  @@index([added_at])\n}\n\n/// External/federated authentication records - Implements secure multi-provider authentication flows per non-functional requirements (Authentication API & Security).\n///\n/// Normalizes all external auth connections (OAuth, SSO) for each account, supporting identity linking, revocation, and RBAC; stores only atomic data and references. Example: Google/Facebook/Twitter/SSO logins mapped to a user. Key relationships: Foreign key to discussionboard_members. Special behaviors: Composite uniqueness (member, provider, provider_user_id).\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_auths {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique external authentication record.\n  id String @id @db.Uuid\n\n  /// Belonged member's {@link discussionboard_members.id} - the member holding this external auth.\n  discussionboard_member_id String @db.Uuid\n\n  /// Authentication provider/service name (e.g., google, facebook, github). Implements SSO/federated auth requirement. Normalized string, never contains secrets. Example: 'google'.\n  provider String\n\n  /// User identifier from auth provider (not internal ID). Used for provider-based account merging and uniqueness/lookup. Example: OAuth subject ID.\n  provider_user_id String\n\n  /// Datetime this external auth connection was established. For sign-on/audit purposes; always required.\n  linked_at DateTime @db.Timestamptz\n\n  /// Datetime external auth was revoked/unlinked (null if active). Implements revocation/idle account closure workflows.\n  revoked_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_auths_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([provider, provider_user_id])\n  @@index([discussionboard_member_id])\n  @@index([linked_at])\n}\n\n/// Active and historical login sessions for members - Implements authentication, auditing, session management, and inactivity/logout flows (see: Authentication & Security)\n///\n/// Each record represents one signed-in session for a member, using opaque tokens. Maintains security by avoiding caching sensitive credentials; stores only atomic values (tokens, validity timestamps), never pre-calculated or denormalized status. For example, used for login expiration, forced logout, device management.\n///\n/// Key relationships: Foreign key to discussionboard_members. Special behaviors: Tokens unique, support session trace/logs.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_user_sessions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique session record identifier.\n  id String @id @db.Uuid\n\n  /// Referenced member's {@link discussionboard_members.id}. Each session is associated with a single member.\n  discussionboard_member_id String @db.Uuid\n\n  /// Opaque authentication token for this session. Used client-side for identifying login state. Uniqueness enforced; never stores raw credentials. Example: random UUID or JWT value.\n  session_token String\n\n  /// Datetime session was created. Enables security/audit trace, expiry/refresh handling.\n  created_at DateTime @db.Timestamptz\n\n  /// Datetime when the session token will expire. Supports session timeout and security policies. Example: set per login policy or on grant.\n  expires_at DateTime @db.Timestamptz\n\n  /// Datetime session was revoked/invalidated (e.g., logout, idle timeout, forced admin action). Null if still valid. Maintains data integrity and audit trail.\n  revoked_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_user_sessions_member discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([session_token])\n  @@index([discussionboard_member_id])\n  @@index([created_at])\n}\n","schema-03-content.prisma":"/// Discussion Board Posts - This implements the core posting requirement from the requirements document (sections 2.2, 2.3). Represents top-level user posts within boards, tracking authorship, timestamps, and relation to board. Strict 3NF: all aggregate data (like counts, view counts) are handled in separate tables or materialized views. Links to edits, likes, views, comments. Example usage: a member or moderator creates a new discussion topic under a board.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_posts {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged board's {@link discussionboard_boards.id}\n  board_id String @db.Uuid\n\n  /// Author user's {@link discussionboard_members.id} (or moderator/admin).\n  author_id String @db.Uuid\n\n  /// Title of the post. Atomic for search and filter.\n  title String\n\n  /// Full body/content of post. No derived or calculated fields.\n  body String\n\n  /// Created timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Last updated timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  /// Nullable soft-deletion timestamp if deleted by moderation.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  board  discussionboard_boards  @relation(fields: [board_id], references: [id], onDelete: Cascade)\n  author discussionboard_members @relation(fields: [author_id], references: [id], onDelete: Cascade)\n\n  discussionboard_post_edits         discussionboard_post_edits[]\n  discussionboard_post_likes         discussionboard_post_likes[]\n  discussionboard_post_views         discussionboard_post_views[]\n  discussionboard_comments           discussionboard_comments[]\n  discussionboard_reports            discussionboard_reports[]\n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n\n  @@unique([board_id, id])\n  @@index([author_id])\n  @@index([created_at])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Discussion Board Post Edit Log - Implements snapshot pattern for edit/audit trail compliance. Each row records an edit event for a post, including editor identity and timestamp. No aggregation. Used for edit history, moderation transparency (3NF).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_edits {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Edited post's {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n\n  /// User who made the edit, references member/mod/admin.\n  editor_id String @db.Uuid\n\n  /// Optional description of what changed.\n  edit_summary String?\n\n  /// Timestamp of edit event.\n  edited_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post   discussionboard_posts   @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  editor discussionboard_members @relation(fields: [editor_id], references: [id], onDelete: Cascade)\n\n  @@index([editor_id])\n  @@index([post_id])\n  @@index([edited_at])\n}\n\n/// Discussion Board Post Likes/Dislikes - Each row is a user's like/dislike for a specific post (3NF-compliant; no aggregates). Used for engagement analytics, anti-abuse, audit trail. Unique per (post_id, user_id).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_likes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Liked/disliked post's {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n\n  /// Expressing user id (member/mod/admin) {@link discussionboard_members.id}\n  user_id String @db.Uuid\n\n  /// True if like, false if dislike.\n  is_like Boolean\n\n  /// Event timestamp.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post discussionboard_posts   @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user discussionboard_members @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([post_id, user_id])\n  @@index([user_id])\n  @@index([created_at])\n}\n\n/// Discussion Board Post Views - Each row is a tracked viewing event, atomic and 3NF. No aggregated view counts stored. References viewer (nullable if anonymous/guest), post, and session. Example usage: user/visitor views a post; a row is logged for analytics and anti-abuse purposes.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_post_views {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Viewed post's {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n\n  /// Viewer id (nullable for unauthenticated/guest view) {@link discussionboard_members.id}\n  user_id String? @db.Uuid\n\n  /// Session id for anonymous/guest view tracking; useful for analytics. Nullable.\n  session_id String? @db.Uuid\n\n  /// Timestamp view occurred.\n  viewed_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post discussionboard_posts    @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  user discussionboard_members? @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([post_id, viewed_at])\n}\n\n/// Discussion Board Comments (Replies) - Implements comment/nested reply feature. Each row is an atomic comment (not aggregate or summary); threaded/reply-to is enabled via parent_id. Relates to a post, optional parent comment, and has author and timestamps. Example: a reply to a comment will set parent_id; a reply to post will keep parent_id null.\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// The post this comment is on {@link discussionboard_posts.id}\n  post_id String @db.Uuid\n\n  /// Comment author's user id (member/mod/admin) {@link discussionboard_members.id}\n  author_id String @db.Uuid\n\n  /// Optional recursive parent for a reply chain (refers to this table's id). Nullable for top-level replies.\n  parent_id String? @db.Uuid\n\n  /// Comment text (atomic, not computed).\n  body String\n\n  /// Timestamp created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft deletion timestamp for moderation/audit purposes.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  post   discussionboard_posts     @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  author discussionboard_members   @relation(fields: [author_id], references: [id], onDelete: Cascade)\n  parent discussionboard_comments? @relation(\"recursive\", fields: [parent_id], references: [id], onDelete: Cascade)\n\n  recursive                          discussionboard_comments[]           @relation(\"recursive\")\n  discussionboard_comment_likes      discussionboard_comment_likes[]\n  discussionboard_comment_edits      discussionboard_comment_edits[]\n  discussionboard_comment_views      discussionboard_comment_views[]\n  discussionboard_reports            discussionboard_reports[]\n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n\n  @@index([parent_id])\n  @@index([post_id])\n  @@index([author_id])\n  @@index([created_at])\n  @@index([body(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Likes/Dislikes for Discussion Board Comments - 3NF: one row per user per comment liking or disliking. No aggregate or summary fields. Used for engagement analytics, anti-abuse. Unique per (comment_id, user_id).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comment_likes {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Liked/disliked comment id {@link discussionboard_comments.id}\n  comment_id String @db.Uuid\n\n  /// Reacting user id (member/mod/admin) {@link discussionboard_members.id}\n  user_id String @db.Uuid\n\n  /// True if like, false if dislike.\n  is_like Boolean\n\n  /// Timestamp like/dislike event was created.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  comment discussionboard_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user    discussionboard_members  @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([comment_id, user_id])\n  @@index([user_id])\n  @@index([created_at])\n}\n\n/// Discussion Board Comment Edit Log - Each row is an atomic edit event for a comment (snapshot audit pattern). Tracks which comment was edited, who did it, and when. Used for audit transparency in moderation context (3NF).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comment_edits {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Edited comment's {@link discussionboard_comments.id}\n  comment_id String @db.Uuid\n\n  /// User who edited the comment {@link discussionboard_members.id}\n  editor_id String @db.Uuid\n\n  /// Optional brief note on edit reason or summary.\n  edit_summary String?\n\n  /// Edit event timestamp.\n  edited_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  comment discussionboard_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  editor  discussionboard_members  @relation(fields: [editor_id], references: [id], onDelete: Cascade)\n\n  @@index([editor_id])\n  @@index([comment_id])\n  @@index([edited_at])\n}\n\n/// Unique view/read tracking for comments (analytics, engagement). Atomic: one row per (comment, user/session); no aggregates. Relates to comment, viewing user (nullable/guest), and session. Used for analytics/reporting (never pre-calculated).\n///\n/// @namespace Content\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_comment_views {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Viewed comment's {@link discussionboard_comments.id}\n  comment_id String @db.Uuid\n\n  /// User id of viewer (nullable/guest) {@link discussionboard_members.id}\n  user_id String? @db.Uuid\n\n  /// Nullable session id to support anonymous/guest visitor analytics.\n  session_id String? @db.Uuid\n\n  /// Timestamp of view event.\n  viewed_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  comment discussionboard_comments @relation(fields: [comment_id], references: [id], onDelete: Cascade)\n  user    discussionboard_members? @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([comment_id, viewed_at])\n}\n","schema-04-moderation.prisma":"/// User-generated content reports - This implements requirements from 'Moderation & Community Guidelines' and 'Functional Requirements: Flag/Report Functionality'. \n/// Allows members to report inappropriate posts or comments for moderator/admin review. Maintains 3NF compliance by storing one report per row with foreign keys linking to reporting member and target content. For example, when a member reports a comment, a record is created with details about the report and the referenced comment. \n/// Key relationships: References reporter (discussionboard_members), content type (post/comment), and target content.\n/// Special behaviors: Only one active report per content per reporting member is allowed until resolution.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_reports {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each report.\n  id String @id @db.Uuid\n\n  /// Referencing the member who filed the report: {@link discussionboard_members.id}.\n  reporting_member_id String @db.Uuid\n\n  /// Referenced post if report concerns a post: {@link discussionboard_posts.id}. Nullable if report is for a comment.\n  target_post_id String? @db.Uuid\n\n  /// Referenced comment if report concerns a comment: {@link discussionboard_comments.id}. Nullable if report is for a post.\n  target_comment_id String? @db.Uuid\n\n  /// Reason for reporting - Implements the 'report reason' requirement. \n  /// Describes why the member has flagged the content. Ensures normalization by storing descriptive report reasons. For example, 'hate speech', 'spam', 'off-topic'.\n  reason String\n\n  /// Status of the report (e.g., pending, reviewed, resolved, rejected). Implements 'moderation workflow' requirements. Only controlled values allowed through app logic.\n  status String\n\n  /// Timestamp of when the report was filed. Supports moderation audit trails and reporting flow. Always required.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of when moderators reviewed the report. Nullable until review occurs.\n  reviewed_at DateTime? @db.Timestamptz\n\n  /// Timestamp when action was taken or report was closed. Nullable until resolved.\n  resolved_at DateTime? @db.Timestamptz\n\n  /// Moderator/admin remarks/comments for this report. Implements 'reviewer comment' requirement. Nullable if moderators did not leave notes.\n  moderation_note String?\n\n  //----\n  // RELATIONS\n  //----\n  fk_reports_reporting_member discussionboard_members   @relation(fields: [reporting_member_id], references: [id], onDelete: Cascade)\n  fk_reports_target_post      discussionboard_posts?    @relation(fields: [target_post_id], references: [id], onDelete: Cascade)\n  fk_reports_target_comment   discussionboard_comments? @relation(fields: [target_comment_id], references: [id], onDelete: Cascade)\n\n  discussionboard_moderation_actions discussionboard_moderation_actions[]\n  discussionboard_warnings           discussionboard_warnings[]\n  discussionboard_audit_logs         discussionboard_audit_logs[]\n\n  @@unique([reporting_member_id, target_post_id])\n  @@unique([reporting_member_id, target_comment_id])\n  @@index([target_post_id])\n  @@index([target_comment_id])\n  @@index([status])\n  @@index([created_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Moderator or admin actions taken during moderation - Implements the 'Moderation Dashboards' and 'Action Audit Trail' requirements.\n/// Tracks all key actions performed by moderators/admins (e.g., content removal, warning issued, ban applied). Maintains 3NF compliance by recording one action per row linked to the actor and the relevant report/content. For example, when a moderator removes a violating post, the action is logged with actor ID, action type, timestamp, and optional notes.\n/// Key relationships: Links to actor (admin/moderator/member), the related report, and optionally, the target post or comment. Supports auditability and moderation transparency.\n/// Special behaviors: Serialized log for moderation actions for full traceability.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_moderation_actions {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for moderation action record.\n  id String @id @db.Uuid\n\n  /// Actor if admin performed the action: {@link discussionboard_admins.id}. Nullable if actor is moderator/member.\n  actor_admin_id String? @db.Uuid\n\n  /// Actor if moderator performed the action: {@link discussionboard_moderators.id}. Nullable if actor is admin/member.\n  actor_moderator_id String? @db.Uuid\n\n  /// Actor if member performed the action: {@link discussionboard_members.id}. Nullable if actor is admin/moderator. For transparency, in case members can self-resolve or retract reports.\n  actor_member_id String? @db.Uuid\n\n  /// Linked report this action addresses: {@link discussionboard_reports.id}. Nullable if not directly linked.\n  related_report_id String? @db.Uuid\n\n  /// Target post acted upon (if applicable): {@link discussionboard_posts.id}.\n  target_post_id String? @db.Uuid\n\n  /// Target comment acted upon (if applicable): {@link discussionboard_comments.id}.\n  target_comment_id String? @db.Uuid\n\n  /// Type of moderation action (e.g. warn, ban, content removal, close report).\n  /// Implements moderation workflow requirements. Only controlled values allowed.\n  action_type String\n\n  /// Details or reason for the moderation action. Implements 'audit and rationale' requirements. Example: 'Repeated violations', 'Spam content'.\n  action_reason String?\n\n  /// Timestamp of when the moderation action was performed. Supports audit trails and workflow sequencing. Required for every action.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_moderationactions_actor_admin     discussionboard_admins?     @relation(fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_actor_moderator discussionboard_moderators? @relation(fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_actor_member    discussionboard_members?    @relation(fields: [actor_member_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_related_report  discussionboard_reports?    @relation(fields: [related_report_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_target_post     discussionboard_posts?      @relation(fields: [target_post_id], references: [id], onDelete: Cascade)\n  fk_moderationactions_target_comment  discussionboard_comments?   @relation(fields: [target_comment_id], references: [id], onDelete: Cascade)\n\n  discussionboard_audit_logs discussionboard_audit_logs[]\n\n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([actor_member_id])\n  @@index([related_report_id])\n  @@index([target_post_id])\n  @@index([target_comment_id])\n  @@index([action_type])\n  @@index([created_at])\n  @@index([action_reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// User bans from the platform - Implements business requirements in 'Moderation & Community Guidelines' and 'User Management'.\n/// Represents temporary or permanent user bans imposed by admins or moderators. Maintains 3NF compliance with a table per ban event, linking to the banned user (admin, moderator, or member) and the actor imposing the ban. For example, when a moderator bans a user for policy violation, the record logs the target user, actor, period, reason, and status.\n/// Key relationships: References the banned user (any role) and the actor.\n/// Special behaviors: Only one active ban at a time per user. Ban status updates tracked by action logs.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_bans {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for ban record.\n  id String @id @db.Uuid\n\n  /// Target if banned user was an admin: {@link discussionboard_admins.id}. Nullable if target is not an admin.\n  target_admin_id String? @db.Uuid\n\n  /// Target if banned user was a moderator: {@link discussionboard_moderators.id}. Nullable if target is not moderator.\n  target_moderator_id String? @db.Uuid\n\n  /// Target if banned user was a member: {@link discussionboard_members.id}. Nullable if not member.\n  target_member_id String? @db.Uuid\n\n  /// Admin who imposed the ban: {@link discussionboard_admins.id}. Nullable unless ban imposed by admin.\n  actor_admin_id String? @db.Uuid\n\n  /// Moderator who imposed the ban: {@link discussionboard_moderators.id}. Nullable unless ban imposed by moderator.\n  actor_moderator_id String? @db.Uuid\n\n  /// Reason for ban - Implements explicit rationale requirement. Describes why user was banned. Ensures normalization. E.g. 'Severe harassment', 'Repeated spam'.\n  ban_reason String\n\n  /// When ban starts. Implements requirement for configurable ban durations. Prevents premature enforcement on the record.\n  ban_start_at DateTime @db.Timestamptz\n\n  /// When ban ends (nullable if permanent). Enforces temporal normalization. E.g. 30-day ban, permanent if null.\n  ban_end_at DateTime? @db.Timestamptz\n\n  /// Ban status (e.g. active, expired, lifted, scheduled). Controls enforcement by application logic. Implements status audit requirement.\n  status String\n\n  /// Timestamp of ban record creation. Supports timeline and reporting.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp for last update to ban record. Audits changes, supports compliance requirements.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_bans_target_admin     discussionboard_admins?     @relation(\"discussionboard_bans_of_target_admin_id\", fields: [target_admin_id], references: [id], onDelete: Cascade)\n  fk_bans_target_moderator discussionboard_moderators? @relation(\"discussionboard_bans_of_target_moderator_id\", fields: [target_moderator_id], references: [id], onDelete: Cascade)\n  fk_bans_target_member    discussionboard_members?    @relation(fields: [target_member_id], references: [id], onDelete: Cascade)\n  fk_bans_actor_admin      discussionboard_admins?     @relation(\"discussionboard_bans_of_actor_admin_id\", fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_bans_actor_moderator  discussionboard_moderators? @relation(\"discussionboard_bans_of_actor_moderator_id\", fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n\n  @@unique([target_admin_id])\n  @@unique([target_moderator_id])\n  @@unique([target_member_id])\n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([status])\n  @@index([ban_start_at])\n  @@index([ban_end_at])\n  @@index([ban_reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Warnings issued to users for infractions - Implements requirements under 'User Management' and 'Moderation Dashboards'.\n/// Represents warnings (as opposed to bans) issued by moderators/admins to users for lesser violations. Maintains 3NF normalization: Each warning is linked to the warned user and the actor. Useful for progressive discipline enforcement. For example, members with repeated warnings may escalate to a ban.\n/// Key relationships: Links to the warned user (admin/mod/member) and the actor (admin/mod). \n/// Special behaviors: Track number and reason for warnings for each user; escalation rules handled externally by application logic.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_warnings {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for warning record.\n  id String @id @db.Uuid\n\n  /// Warned admin (rare): {@link discussionboard_admins.id}. Nullable if not admin.\n  target_admin_id String? @db.Uuid\n\n  /// Warned moderator (rare): {@link discussionboard_moderators.id}. Nullable if not moderator.\n  target_moderator_id String? @db.Uuid\n\n  /// Warned member: {@link discussionboard_members.id}. Nullable if not member.\n  target_member_id String? @db.Uuid\n\n  /// Admin issuing warning: {@link discussionboard_admins.id}. Nullable unless admin issued.\n  actor_admin_id String? @db.Uuid\n\n  /// Moderator issuing warning: {@link discussionboard_moderators.id}. Nullable unless moderator issued.\n  actor_moderator_id String? @db.Uuid\n\n  /// Related report (if warning is result of a report): {@link discussionboard_reports.id}. Nullable if warning is not report-triggered.\n  related_report_id String? @db.Uuid\n\n  /// Reason for issuing warning - Implements rationale requirement. E.g. 'Minor profanity', 'Off-topic'. Required for context audit.\n  reason String\n\n  /// When warning was issued. For audit and escalation flows. Required for every warning.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_warnings_target_admin     discussionboard_admins?     @relation(\"discussionboard_warnings_of_target_admin_id\", fields: [target_admin_id], references: [id], onDelete: Cascade)\n  fk_warnings_target_moderator discussionboard_moderators? @relation(\"discussionboard_warnings_of_target_moderator_id\", fields: [target_moderator_id], references: [id], onDelete: Cascade)\n  fk_warnings_target_member    discussionboard_members?    @relation(fields: [target_member_id], references: [id], onDelete: Cascade)\n  fk_warnings_actor_admin      discussionboard_admins?     @relation(\"discussionboard_warnings_of_actor_admin_id\", fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_warnings_actor_moderator  discussionboard_moderators? @relation(\"discussionboard_warnings_of_actor_moderator_id\", fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  fk_warnings_related_report   discussionboard_reports?    @relation(fields: [related_report_id], references: [id], onDelete: Cascade)\n\n  @@index([target_admin_id])\n  @@index([target_moderator_id])\n  @@index([target_member_id])\n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([related_report_id])\n  @@index([created_at])\n  @@index([reason(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Detailed audit logs for moderation events - Implements all audit and logging requirements outlined under 'Audit & Logging' and referenced throughout Moderation functional requirements. \n/// Stores granular logs about all moderation events, including state changes, permission elevation, and sensitive moderation actions. Maintains 3NF: All fields are atomic, and each log references the related action, actor, and event time. For example, when a moderator changes the status of a report, an audit log is added with actor ID, event type, event detail, and when it occurred.\n/// Key relationships: Links to actor (admin/mod/member) and optionally to related moderation action or report.\n/// Special behaviors: Immutable by application design - supports regulatory and policy audit needs.\n///\n/// @namespace Moderation\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_audit_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for audit log entry.\n  id String @id @db.Uuid\n\n  /// Admin actor (if applicable): {@link discussionboard_admins.id}. Null if not admin.\n  actor_admin_id String? @db.Uuid\n\n  /// Moderator actor (if applicable): {@link discussionboard_moderators.id}. Null if not moderator.\n  actor_moderator_id String? @db.Uuid\n\n  /// Member actor (if applicable): {@link discussionboard_members.id}. Null if not member.\n  actor_member_id String? @db.Uuid\n\n  /// Related report (if log is for a report event): {@link discussionboard_reports.id}. Nullable if not report-related.\n  related_report_id String? @db.Uuid\n\n  /// Related moderation action (if log is for an action event): {@link discussionboard_moderation_actions.id}. Nullable if not related to an action.\n  related_moderation_action_id String? @db.Uuid\n\n  /// Type of event (e.g., permission_change, status_update, ban_imposed). Controlled by business logic for audit classification. Only allowed values accepted.\n  event_type String\n\n  /// Detail about the event - Implements requirement for detailed traceability. Example: 'Report status changed from pending to resolved by moderator.'\n  event_detail String\n\n  /// Timestamp for the logged event. For compliance and sequencing. Required on every audit entry.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_auditlogs_actor_admin               discussionboard_admins?             @relation(fields: [actor_admin_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_actor_moderator           discussionboard_moderators?         @relation(fields: [actor_moderator_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_actor_member              discussionboard_members?            @relation(fields: [actor_member_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_related_report            discussionboard_reports?            @relation(fields: [related_report_id], references: [id], onDelete: Cascade)\n  fk_auditlogs_related_moderation_action discussionboard_moderation_actions? @relation(fields: [related_moderation_action_id], references: [id], onDelete: Cascade)\n\n  @@index([actor_admin_id])\n  @@index([actor_moderator_id])\n  @@index([actor_member_id])\n  @@index([related_report_id])\n  @@index([related_moderation_action_id])\n  @@index([created_at])\n  @@index([event_type])\n  @@index([event_detail(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-05-guidelines.prisma":"/// Community Guidelines entity - This implements the clear community rule and code-of-conduct requirements as detailed in the Discussion Board Requirements section 1 (Community Rules & 01 Business Objectives). \n///\n/// Business explanation: Stores guideline sections and texts in a normalized form, allowing updates and auditability for evolving community standards. Maintains 3NF compliance by separating each guideline entry, allowing references in moderation and user notifications. For example, guidelines about hate speech, constructive criticism, and post etiquette are stored here, referenced for automated onboarding or user display.\n///\n/// Key relationships: May be referenced by moderation or notification components for contextual messaging. Special behaviors: Only admins can create or update guidelines; each entry is versioned by created_at/updated_at for audit trail.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_community_guidelines {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for this guideline entry.\n  id String @id @db.Uuid\n\n  /// Title of the guideline section - Implements requirement for clear, organized guideline presentation to users. For example, 'Posting Etiquette' or 'Prohibited Conduct.' Ensures normalization by storing as an atomic value.\n  title String\n\n  /// Full content text of the guideline - Implements detailed community rule requirements. For example, 'Do not post personal attacks or hate speech.' Normalized 3NF, no derived/consolidated data.\n  body String\n\n  /// Display order for this guideline - Required for user experience sequencing in guideline displays. Ensures atomicity and flexibility, supports updates without data duplication.\n  order_index Int @db.Integer\n\n  /// Whether this guideline is currently enforced - Implements admin control of active/inactive statuses for evolving policy. For example, deactivating outdated rules. Ensures compliance with requirement to support updates and changes.\n  is_active Boolean\n\n  /// Timestamp when guideline was created - Supports audit logging (requirement 2.6), and helps track policy evolution over time. Atomic value, part of full normalization.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when guideline was last updated. Ensures full auditability of content changes. 3NF compliance.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([title])\n  @@index([order_index])\n}\n\n/// Content Policy entity - Implements the explicit, system-level policy and moderation documentation requirements as detailed in requirements section 3 (Content Policies & Moderation Policy).\n///\n/// Business purpose: Stores specific, enforceable policy rules that apply to user-generated content (e.g. 'No hate speech', 'No plagiarism'). Maintains normalization by handling each policy as a distinct, queryable record. Can be referenced during automated content checking or manual moderation. For example, policy text on 'Profanity' or 'Spam' detection is kept here.\n///\n/// Key relationships: May be referenced when determining sanction actions. Special behaviors: Only admins can add/update/delete policy entries. Supports audit trail with timestamps.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_content_policies {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for this content policy rule.\n  id String @id @db.Uuid\n\n  /// Short code or name for this content policy - Implements requirement for structured policy documentation and reference. Enables quick lookup and enforcement. For example, 'NO_HATE_SPEECH', 'NO_SPAM'.\n  policy_code String\n\n  /// Detailed description of the content policy - Implements policy communication and moderator clarity requirements. For example, 'Any content promoting violence is strictly prohibited.' 3NF.\n  description String\n\n  /// Category or policy group - Implements requirement to organize content policies by type, e.g., 'Spam', 'Abuse', 'Copyright'. Ensures normalization by avoiding transitive dependencies.\n  category String\n\n  /// Whether this policy is active/enforced - Needed for content policy versioning and update flows. For example, deactivating obsolete policies. Ensures atomicity.\n  is_active Boolean\n\n  /// Timestamp when this policy was created. Required for audit trails and rollback scenarios (requirements 2.6, 4).\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when this policy was last updated - Ensures full auditability and supports policy review schedules.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([policy_code])\n  @@index([category])\n  @@index([description(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Profanity Filter entity - Implements the system-level requirement for profanity filtering as outlined in requirements section 3.4 (Content Policies, Moderation).\n///\n/// Business purpose: Contains normalized words/phrases that trigger system profanity detection on posts and comments. Maintains 3NF by storing each profane word or phrase as a single record, linked to activation status and audit fields. For example, the word 'foobar' or a list of banned words.\n///\n/// Key relationships: May be referenced by automated moderation or content creation APIs. Special behaviors: Admins update/add words as needed, all events are timestamped.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_profanity_filters {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique ID for this profanity filter entry.\n  id String @id @db.Uuid\n\n  /// Word or phrase to be filtered - Implements requirement for configurable, updatable profanity filtering. Ensures normalized storage. For example, 'badword'.\n  word String\n\n  /// Whether this word is currently being filtered - Required for admin update flexibility. For example, suspending words from filter lists. Atomic value.\n  is_active Boolean\n\n  /// When this filter entry was created - For auditability and policy management. 3NF value.\n  created_at DateTime @db.Timestamptz\n\n  /// When this filter entry was last updated - Needed for rollbacks or removals in system logs, part of full normalization.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([word])\n}\n\n/// Automated Spam Rule entity - Implements the automated spam rule detection policies required by Functional Requirements 3.3.4 and Moderation Policy.\n///\n/// Business purpose: Stores configurable, versioned rules or patterns that the platform's automated spam detector references. Maintains 3NF by separating each spam rule (regex, expression, or keyword) as an atomic record. For example, an entry could define regex matching repeated links or banned spam phrases.\n///\n/// Key relationships: May be consumed by content creation or moderation APIs. Special behaviors: Rule activation handled by admins, all updates tracked in audit logs.\n///\n/// @namespace Guidelines\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_automated_spam_rules {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for this spam rule entry.\n  id String @id @db.Uuid\n\n  /// Pattern or expression for spam detection - Implements flexible, updatable automated spam pattern detection. 3NF compliance. For example, regex for repeated links or specific spam syntax.\n  rule_pattern String\n\n  /// Explanation of what this rule detects - Implements clarity and auditability. For example, 'Detects repeated posting of phishing URLs.' Atomic, not derived.\n  description String\n\n  /// Whether the rule is currently active - Allows admins to enable/disable detection flexibly for evolving spam tactics. Ensures policy agility.\n  is_active Boolean\n\n  /// Timestamp when this spam rule was created - Required for audit logging and rule review processes.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when this spam rule was last updated - Ensures full auditability of rule changes. 3NF compliance.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@unique([rule_pattern])\n}\n","schema-06-notifications.prisma":"/// Discussion Board Notification Entity - Implements the notification delivery requirement from the Notification System and Audit & Logging sections. \n///\n/// This model stores each notification event (such as replies, likes, mentions, moderation actions) sent to users. It allows tracking, delivery status, and historic audit for every notification generated by system events across the discussion board.\n///\n/// Maintains 3NF compliance by separating notification records from user profiles and alert preferences (notification delivery configuration is stored in a separate table). For example, when a user receives a reply to their post, a notification record is created here, referencing the recipient, event details, and delivery state.\n///\n/// Key relationships: Links to recipients (discussionboard_members) via foreign key. Optionally relates to specific posts, comments, or moderation events stored in other domains.\n/// Special behaviors: Notifications can be marked as read/unread. Supports expirable and persistent notification types.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_notifications {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each notification.\n  id String @id @db.Uuid\n\n  /// Recipient's {@link discussionboard_members.id} - The user who receives this notification. Fulfills the requirement for per-user notification tracking and targeting.\n  discussionboard_member_id String @db.Uuid\n\n  /// Notification type - Implements the Notification System requirement specifying kind of event (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system'). Defines the user event that triggered notification delivery. Ensures normalization by recording type as a code, not a computed string. Example: 'reply'.\n  type String\n\n  /// Reference ID of the related entity (e.g., post, comment, moderation action) - Implements the Notification System's requirement for contextual notification. Stores the target object relevant to the notification for audit/logging. Can be null if event is generic. Ensures normalization by storing only the ID. Example: the comment being replied to.\n  related_entity_id String? @db.Uuid\n\n  /// Type of related entity referenced (e.g., 'post', 'comment', 'moderation_action') - Implements requirement to allow notifications on multiple kinds of entities. Ensures normalization by specifying entity type in a discrete field, not by using polymorphic joins. Example: 'post'.\n  related_entity_type String?\n\n  /// Notification message content - Implements requirement for human-readable notification body. Stores the message shown to the user. Example: 'Alice replied to your post.' Field is atomic and normalized. No computed values here.\n  content String\n\n  /// Flag indicating whether the notification has been read. Supports UI requirements for marking notifications as read/unread. Ensures normalization by only storing a boolean flag. Example: false (unread).\n  is_read Boolean\n\n  /// Timestamp when notification was delivered to the user. Implements audit/logging requirements for notification delivery history and sequencing. Normalization: Each delivery occurrence is atomic. Example: 2024-06-17T12:00:00Z.\n  delivered_at DateTime @db.Timestamptz\n\n  /// Timestamp when notification expires - Implements event-driven notification expiry (for temporary/scheduled alerts). Ensures normalization by storing expiry per notification, not per user. Example: 2024-07-01T00:00:00Z. May be null if notification does not expire.\n  expires_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_notifications_recipient discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@index([discussionboard_member_id])\n  @@index([is_read])\n  @@index([delivered_at])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Discussion Board Alert Preference Entity - Implements the notification preferences requirement from the Notification System and Settings functionality sections. \n///\n/// This model stores each user's per-type notification delivery preferences (e.g., email, push, in-app, or off). Fulfills the requirement to provide members with fine-grained control over which notification types they receive and how they are delivered.\n///\n/// Maintains 3NF compliance by separating user notification configuration from actual notification data and user profile records. For example, a user may choose in-app alerts for replies but email notifications for moderation actions, which is configured here.\n///\n/// Key relationships: References the user (discussionboard_members) as the owner of these preferences. No denormalized or computed fields.\n/// Special behaviors: Only one set of preferences per (user, notification type) enforced by unique index constraint.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_alert_preferences {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each alert preference record.\n  id String @id @db.Uuid\n\n  /// Owner's {@link discussionboard_members.id} - The user who owns this alert preference set. Implements per-user preference requirement for notification delivery.\n  discussionboard_member_id String @db.Uuid\n\n  /// Notification type for which this preference applies (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system') - Implements the Notification System and Settings requirements for configurable per-type delivery. Ensures normalization by storing type as atomic value. Example: 'moderation_action'.\n  notification_type String\n\n  /// Delivery channel preference (e.g., 'email', 'push', 'in_app', 'none') - Implements requirement for per-type delivery method configuration by user. Ensures normalization by storing as atomic value, not as calculated field. Example: 'email'.\n  delivery_channel String\n\n  /// Timestamp when these preferences were last updated. Supports audit/logging for settings changes. Ensures atomic history of preference changes. Example: 2024-06-18T13:31:21Z.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  discussionboard_alert_preferences_owner discussionboard_members @relation(fields: [discussionboard_member_id], references: [id], onDelete: Cascade)\n\n  @@unique([discussionboard_member_id, notification_type])\n  @@index([discussionboard_member_id])\n  @@index([notification_type])\n}\n","schema-07-logs.prisma":"/// [Discussion Board Action Logs] - This implements the audit trail, accountability, and compliance requirements from the requirements document (including 2.6 Audit & Logging, moderation, and transparency mandates).\n///\n/// Records every critical user or system action, especially for admin/moderator-level events. Maintains 3NF (fully normalized) by separating actor ID, event types, and contextual entity references, supports extensible metadata, and avoids denormalization. Example: logs a moderator deleting a post or editing a comment.\n///\n/// Key relationships: Connects to user tables such as {@link discussionboard_admins.id}, {@link discussionboard_moderators.id}, or other actors by \"actor_id\" field.\n/// Special behaviors: Immutable log entries, supports efficient filtering by actor/event/time; forms basis for compliance reporting and root-cause investigation.\n///\n/// @namespace Logs\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_action_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key. Unique identifier for each log entry.\n  id String @id @db.Uuid\n\n  /// Actor's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related user type associated with this action. This ties each log entry to the user responsible for the action, supporting auditability and cross-user queries.\n  actor_id String @db.Uuid\n\n  /// Type of action performed. Implements event categorization (e.g., POST_CREATED, COMMENT_DELETED, MODERATOR_BAN). Enables filtering and auditing by action nature. Ensures normalization by not encoding rules in single fields. Example: 'POST_DELETED'.\n  event_type String\n\n  /// Associated entity ID for this action (e.g., post, comment, report), implements requirement for contextual event reference. Maintains normalized design by storing IDs only. Example: The comment or post UUID affected. Nullable if event affects no entity.\n  event_target_id String? @db.Uuid\n\n  /// Additional JSON metadata for extensibility (e.g., IP address, device, moderation reason). Implements extensibility and normalization by not hardcoding new columns for rare event data. Example: '{\"reason\":\"Spam\",\"ip\":\"10.1.2.3\"}'.\n  metadata String?\n\n  /// Timestamp when the action occurred. Implements mandatory audit resolution and helps support sorting/filtering by time. Example: '2025-07-22T13:30:45.969+09:00'.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_action_log_actor discussionboard_members @relation(fields: [actor_id], references: [id], onDelete: Cascade)\n\n  @@index([actor_id, event_type, created_at])\n}\n\n/// [Error Logging Table] - This implements requirements from 3.1 Security, 3.2 Performance, and 3.5 Compliance regarding platform and API error capture for diagnostics and resilience.\n///\n/// Captures and audits all system or application errors and exceptions in a normalized, traceable log. 3NF compliance by completely separating error details from business records, with reference context available via \"context_id\". Used in debugging, incident response, or platform monitoring. Example: logs database faults, uncaught exceptions, and failed external API calls.\n///\n/// Key relationships: No direct foreign keys (for privacy and decoupling from actor data).\n/// Special behaviors: Immutable, full-text searchable, supports quick triage by error code and time.\n///\n/// @namespace Logs\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_error_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Application-defined error or exception code. Enables quick error categorization and system monitoring. Example: 'API_TIMEOUT', 'UNCAUGHT_EXCEPTION'.\n  error_code String\n\n  /// Human-readable error message for reporting and debugging. Meets compliance for log clarity. Example: 'Failed to fetch posts due to network timeout.'\n  error_message String\n\n  /// Full stack trace or technical details for debugging. Fulfills non-functional requirements for detailed auditing; normalized by isolating trace info from other data. Nullable if unavailable. Example: JavaScript stack trace or error object.\n  stack_trace String?\n\n  /// Arbitrary context entity (e.g., API request ID or related entity UUID). Supports linking errors to request or entity. Nullable if not applicable.\n  context_id String? @db.Uuid\n\n  /// Timestamp the error was recorded, allows sequencing and SLA tracking. Example: '2025-07-22T13:30:45.969+09:00'.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  @@index([error_code, created_at])\n  @@index([error_message(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// [API Access Logs] - Implements non-functional requirements 3.1 Security, 3.2 Performance, and 2.6 Audit by tracing all API interactions for security review, rate-limiting enforcement, and usage analytics.\n///\n/// Logs all API calls, including the user (if authenticated), endpoint, HTTP method, and result. Maintains normalization (3NF) with user linkage by actor_id (nullable for guests), never storing denormalized request payloads. Used for monitoring abuse and generating analytics. Example: logs a member's GET to /api/posts or a failed POST to /api/comments.\n///\n/// Key relationships: May reference the user by actor_id (nullable for guest requests). No other foreign keys.\n/// Special behaviors: Massive write-optimized; may be purged for data retention compliance.\n///\n/// @namespace Logs\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel discussionboard_api_access_logs {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Authenticated user's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related role. Null if guest/public API. Enables audit and correlation to users.\n  actor_id String? @db.Uuid\n\n  /// HTTP method used for this API call (GET, POST, PATCH, DELETE, etc). Implements API audit detail. Example: 'GET'.\n  method String\n\n  /// API endpoint path or resource accessed. Enables fine-grained analytics. Example: '/api/comments/12345'.\n  endpoint String\n\n  /// Returned HTTP status code. Allows compliance and diagnostics on failed/successful calls. Example: 200, 403, 404.\n  status_code Int @db.Integer\n\n  /// IP address of the client for this call. Supports abuse monitoring and incident forensics. Example: '203.0.113.5'.\n  ip_address String\n\n  /// Client user-agent for context in debugging or device profiling. Nullable if unavailable. Example: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X)'.\n  user_agent String?\n\n  /// Request processing latency in milliseconds. Enables API performance monitoring. Example: 163.\n  response_time_ms Int @db.Integer\n\n  /// Timestamp of the API call. Supports retention and incident analysis. Example: '2025-07-22T13:30:45.969+09:00'.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  fk_access_log_actor discussionboard_members? @relation(fields: [actor_id], references: [id], onDelete: Cascade)\n\n  @@index([actor_id, endpoint, created_at])\n  @@index([endpoint(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = []\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../docs/ERD.md\"\n}\n"},"nodeModules":{"node_modules/.prisma/client/client.d.ts":"export * from \"./index\"","node_modules/.prisma/client/default.d.ts":"export * from \"./index\"","node_modules/.prisma/client/edge.d.ts":"export * from \"./default\"","node_modules/.prisma/client/index.d.ts":"\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/library.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model discussionboard_sections\n * Board Section entity - This implements the requirement for organizing multiple boards into logical sections/category headings as described in the requirements (see Business Overview and Board API). \n * \n * Provides top-level grouping for boards (e.g., 'Politics', 'Economy'). Each section contains multiple boards but supports explicit sorting and labeling for easy discovery. Maintains 3NF by storing only section-specific data and referencing boards elsewhere. \n * \n * Example: Used for filtering the board list UI, and configuring board display order in admin settings.\n * Key relationships: One section to many boards (referenced from discussionboard_boards). \n * Special behaviors: Deletions should be restricted if boards exist within a section.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_sections = $Result.DefaultSelection<Prisma.$discussionboard_sectionsPayload>\n/**\n * Model discussionboard_boards\n * Board entity - Implements the requirement for multiple thematic boards within the platform (see Business Overview, API spec). \n * \n * Represents a specific discussion board (e.g., 'Elections 2025'). Each board belongs to a section and can have subscriptions, tags, settings, etc. Maintains 3NF by separating board details from posts/content, and referencing only the relevant section. \n * \n * Example: Used for displaying board list, posting endpoints, and enforcing board-level settings.\n * Key relationships: Many-to-one with discussionboard_sections (foreign key); referenced by other tables for posts, subscriptions, and tags.\n * Special behaviors: Section deletion/renaming cascades/updates needed; cannot delete section if boards exist.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_boards = $Result.DefaultSelection<Prisma.$discussionboard_boardsPayload>\n/**\n * Model discussionboard_tags\n * Tag entity - Implements the requirement for tagging boards and enabling filtered search/discovery (see Functional Requirements and API spec). \n * \n * Stores tag definitions for use on boards or posts. Tags can be assigned to boards (via M:N relationship implemented in other domain if needed). Maintains 3NF as a definition-only table; actual assignments are managed elsewhere. \n * \n * Example: Used for board tag suggestions, filtering board/post lists. \n * Key relationships: Used in tag-board mappings but maintains strict normalization here.\n * Special behaviors: Only atomic data stored; all application-side assignment linked elsewhere.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_tags = $Result.DefaultSelection<Prisma.$discussionboard_tagsPayload>\n/**\n * Model discussionboard_board_subscriptions\n * Board subscription entity - Implements the board subscription/notification feature (see Notification System and Functional Requirements). \n * \n * Tracks which members are subscribed to which boards, to drive notifications and update feeds. Maintains 3NF as a pure M:N/junction entity: each record (subscription) is atomic, linking a single user to a single board. \n * \n * Example: Used for fast lookup of a member's subscribed boards, or when sending board notifications. \n * Key relationships: Foreign keys to boards (this file) and discussionboard_members (external Actors component). \n * Special behaviors: Unsubscribe (soft delete or remove record); composite uniqueness enforced.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_board_subscriptions = $Result.DefaultSelection<Prisma.$discussionboard_board_subscriptionsPayload>\n/**\n * Model discussionboard_board_settings\n * Board settings entity - Implements requirement for customizable settings per board (see Functional Requirements and Board API). \n * \n * Stores various administrative or feature settings per board (e.g., allow images, require moderator approval). Maintains 3NF: atomic settings per board, without computed fields; extensible. \n * \n * Example: Used to toggle features for specific boards or override defaults.\n * Key relationships: Unique per board (1:1 with boards). \n * Special behaviors: Board can have only one settings record; model extensible for future settings.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_board_settings = $Result.DefaultSelection<Prisma.$discussionboard_board_settingsPayload>\n/**\n * Model discussionboard_notification_settings\n * User notification setting entity - Implements user preference storage for receiving board/content notifications (see Notification System and Functional Requirements). \n * \n * Stores per-user notification toggles/preferences for the Discussion Board domain. Maintains 3NF by keeping atomic preference values per user. Used to configure which types of notifications are received (thread activity, announcements, etc). \n * \n * Example: Used when sending notification emails, or rendering notification settings UI. \n * Key relationships: Linked to members (via discussionboard_member_id from Actors component).\n * Special behaviors: Unique-per-user enforced, 1:1 with member record.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_notification_settings = $Result.DefaultSelection<Prisma.$discussionboard_notification_settingsPayload>\n/**\n * Model discussionboard_admins\n * Platform administrator role assignment - Implements the functional requirement for privileged admin accounts as found in the requirements (see: User Roles & Permissions). \n * \n * Administrators oversee content and user moderation at the highest level; this table records accounts with full platform control and is central for RBAC enforcement. Maintains strict 3NF normalization by storing only direct attributes of the admin role, referencing user membership via foreign key. For example, promotes a member to admin role or demotes. \n * \n * Key relationships: links to discussionboard_members (user basis), may be referenced in audit logs or moderation actions.  Special behaviors: Granting this role cascades full access; must be auditable.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_admins = $Result.DefaultSelection<Prisma.$discussionboard_adminsPayload>\n/**\n * Model discussionboard_moderators\n * Moderator role assignment - Implements the requirement for a moderation role to enforce community guidelines (see: Moderation Roles & Policies, Permissions Matrix).\n * \n * This table records which members serve as moderators. It maintains strict normalization by referencing user membership while tracking assignment and revocation dates. Used for permission elevation, logging, and audit trails. For example, a user promoted from member to moderator.\n * \n * Key relationships: References discussionboard_members. Special behaviors: Can be demoted; actions logged for accountability.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_moderators = $Result.DefaultSelection<Prisma.$discussionboard_moderatorsPayload>\n/**\n * Model discussionboard_members\n * Registered discussion board user accounts (members) - Implements registration/authentication requirements (User Authentication & Roles, CRUD Permissions).\n * \n * This table represents all registered, authenticated users. It enforces 3NF by storing only per-user, non-derived data. For example, account creation, activation status, ban integration and role assignment references.\n * \n * Key relationships: Referenced by admin, moderator, profile, and user email tables. Special behaviors: Used for primary ownership of posts/comments.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_members = $Result.DefaultSelection<Prisma.$discussionboard_membersPayload>\n/**\n * Model discussionboard_guests\n * Guest user visitation - Implements guest journey tracking for unauthenticated users (see: User Roles & Journeys, Audit Trail).\n * \n * This table stores guest/browser sessions for analytics, restrictions, and future up-sell. Maintains normalized structure by storing atomic session info only, not mixing with registered user data. For example, may log guest page views or promote registration.\n * \n * Key relationships: May later link to discussionboard_members if guest converts to member.\n * Special behaviors: Short-lived; can be joined to logs for traffic analysis.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_guests = $Result.DefaultSelection<Prisma.$discussionboard_guestsPayload>\n/**\n * Model discussionboard_user_profiles\n * Extended member profile details - Implements profile customization as per member/user journey requirements.\n * \n * This table holds profile metadata (bio, display name, avatar, etc.), referencing the core member account. Maintains normalization by separating profile from core authentication/role. Example: user changes display name or avatar; updates here without affecting core login.\n * \n * Key relationships: Foreign key to discussionboard_members. Special behaviors: all fields except member linkage are nullable, allowing partial profiles.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_user_profiles = $Result.DefaultSelection<Prisma.$discussionboard_user_profilesPayload>\n/**\n * Model discussionboard_user_emails\n * Email addresses associated with member accounts - Implements requirements for registration, verification, contact and notification preferences (Functional: Registration & Email Verification).\n * \n * Maintains one-to-many normalized mapping for supporting multiple verified emails per account, anti-abuse, and notification flexibility. Only stores atomic email info, never cached tokens or codes. Example: primary and backup email tracking; supports search, notification, verification workflows.\n * \n * Key relationships: Foreign key to discussionboard_members. Special behaviors: unique constraint on (discussionboard_member_id, email), optional verification per email.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_user_emails = $Result.DefaultSelection<Prisma.$discussionboard_user_emailsPayload>\n/**\n * Model discussionboard_user_auths\n * External/federated authentication records - Implements secure multi-provider authentication flows per non-functional requirements (Authentication API & Security).\n * \n * Normalizes all external auth connections (OAuth, SSO) for each account, supporting identity linking, revocation, and RBAC; stores only atomic data and references. Example: Google/Facebook/Twitter/SSO logins mapped to a user. Key relationships: Foreign key to discussionboard_members. Special behaviors: Composite uniqueness (member, provider, provider_user_id).\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_user_auths = $Result.DefaultSelection<Prisma.$discussionboard_user_authsPayload>\n/**\n * Model discussionboard_user_sessions\n * Active and historical login sessions for members - Implements authentication, auditing, session management, and inactivity/logout flows (see: Authentication & Security)\n * \n * Each record represents one signed-in session for a member, using opaque tokens. Maintains security by avoiding caching sensitive credentials; stores only atomic values (tokens, validity timestamps), never pre-calculated or denormalized status. For example, used for login expiration, forced logout, device management.\n * \n * Key relationships: Foreign key to discussionboard_members. Special behaviors: Tokens unique, support session trace/logs.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_user_sessions = $Result.DefaultSelection<Prisma.$discussionboard_user_sessionsPayload>\n/**\n * Model discussionboard_posts\n * Discussion Board Posts - This implements the core posting requirement from the requirements document (sections 2.2, 2.3). Represents top-level user posts within boards, tracking authorship, timestamps, and relation to board. Strict 3NF: all aggregate data (like counts, view counts) are handled in separate tables or materialized views. Links to edits, likes, views, comments. Example usage: a member or moderator creates a new discussion topic under a board.\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_posts = $Result.DefaultSelection<Prisma.$discussionboard_postsPayload>\n/**\n * Model discussionboard_post_edits\n * Discussion Board Post Edit Log - Implements snapshot pattern for edit/audit trail compliance. Each row records an edit event for a post, including editor identity and timestamp. No aggregation. Used for edit history, moderation transparency (3NF).\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post_edits = $Result.DefaultSelection<Prisma.$discussionboard_post_editsPayload>\n/**\n * Model discussionboard_post_likes\n * Discussion Board Post Likes/Dislikes - Each row is a user's like/dislike for a specific post (3NF-compliant; no aggregates). Used for engagement analytics, anti-abuse, audit trail. Unique per (post_id, user_id).\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post_likes = $Result.DefaultSelection<Prisma.$discussionboard_post_likesPayload>\n/**\n * Model discussionboard_post_views\n * Discussion Board Post Views - Each row is a tracked viewing event, atomic and 3NF. No aggregated view counts stored. References viewer (nullable if anonymous/guest), post, and session. Example usage: user/visitor views a post; a row is logged for analytics and anti-abuse purposes.\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_post_views = $Result.DefaultSelection<Prisma.$discussionboard_post_viewsPayload>\n/**\n * Model discussionboard_comments\n * Discussion Board Comments (Replies) - Implements comment/nested reply feature. Each row is an atomic comment (not aggregate or summary); threaded/reply-to is enabled via parent_id. Relates to a post, optional parent comment, and has author and timestamps. Example: a reply to a comment will set parent_id; a reply to post will keep parent_id null.\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_comments = $Result.DefaultSelection<Prisma.$discussionboard_commentsPayload>\n/**\n * Model discussionboard_comment_likes\n * Likes/Dislikes for Discussion Board Comments - 3NF: one row per user per comment liking or disliking. No aggregate or summary fields. Used for engagement analytics, anti-abuse. Unique per (comment_id, user_id).\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_comment_likes = $Result.DefaultSelection<Prisma.$discussionboard_comment_likesPayload>\n/**\n * Model discussionboard_comment_edits\n * Discussion Board Comment Edit Log - Each row is an atomic edit event for a comment (snapshot audit pattern). Tracks which comment was edited, who did it, and when. Used for audit transparency in moderation context (3NF).\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_comment_edits = $Result.DefaultSelection<Prisma.$discussionboard_comment_editsPayload>\n/**\n * Model discussionboard_comment_views\n * Unique view/read tracking for comments (analytics, engagement). Atomic: one row per (comment, user/session); no aggregates. Relates to comment, viewing user (nullable/guest), and session. Used for analytics/reporting (never pre-calculated).\n * \n * @namespace Content\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_comment_views = $Result.DefaultSelection<Prisma.$discussionboard_comment_viewsPayload>\n/**\n * Model discussionboard_reports\n * User-generated content reports - This implements requirements from 'Moderation & Community Guidelines' and 'Functional Requirements: Flag/Report Functionality'. \n * Allows members to report inappropriate posts or comments for moderator/admin review. Maintains 3NF compliance by storing one report per row with foreign keys linking to reporting member and target content. For example, when a member reports a comment, a record is created with details about the report and the referenced comment. \n * Key relationships: References reporter (discussionboard_members), content type (post/comment), and target content.\n * Special behaviors: Only one active report per content per reporting member is allowed until resolution.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_reports = $Result.DefaultSelection<Prisma.$discussionboard_reportsPayload>\n/**\n * Model discussionboard_moderation_actions\n * Moderator or admin actions taken during moderation - Implements the 'Moderation Dashboards' and 'Action Audit Trail' requirements.\n * Tracks all key actions performed by moderators/admins (e.g., content removal, warning issued, ban applied). Maintains 3NF compliance by recording one action per row linked to the actor and the relevant report/content. For example, when a moderator removes a violating post, the action is logged with actor ID, action type, timestamp, and optional notes.\n * Key relationships: Links to actor (admin/moderator/member), the related report, and optionally, the target post or comment. Supports auditability and moderation transparency.\n * Special behaviors: Serialized log for moderation actions for full traceability.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_moderation_actions = $Result.DefaultSelection<Prisma.$discussionboard_moderation_actionsPayload>\n/**\n * Model discussionboard_bans\n * User bans from the platform - Implements business requirements in 'Moderation & Community Guidelines' and 'User Management'.\n * Represents temporary or permanent user bans imposed by admins or moderators. Maintains 3NF compliance with a table per ban event, linking to the banned user (admin, moderator, or member) and the actor imposing the ban. For example, when a moderator bans a user for policy violation, the record logs the target user, actor, period, reason, and status.\n * Key relationships: References the banned user (any role) and the actor.\n * Special behaviors: Only one active ban at a time per user. Ban status updates tracked by action logs.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_bans = $Result.DefaultSelection<Prisma.$discussionboard_bansPayload>\n/**\n * Model discussionboard_warnings\n * Warnings issued to users for infractions - Implements requirements under 'User Management' and 'Moderation Dashboards'.\n * Represents warnings (as opposed to bans) issued by moderators/admins to users for lesser violations. Maintains 3NF normalization: Each warning is linked to the warned user and the actor. Useful for progressive discipline enforcement. For example, members with repeated warnings may escalate to a ban.\n * Key relationships: Links to the warned user (admin/mod/member) and the actor (admin/mod). \n * Special behaviors: Track number and reason for warnings for each user; escalation rules handled externally by application logic.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_warnings = $Result.DefaultSelection<Prisma.$discussionboard_warningsPayload>\n/**\n * Model discussionboard_audit_logs\n * Detailed audit logs for moderation events - Implements all audit and logging requirements outlined under 'Audit & Logging' and referenced throughout Moderation functional requirements. \n * Stores granular logs about all moderation events, including state changes, permission elevation, and sensitive moderation actions. Maintains 3NF: All fields are atomic, and each log references the related action, actor, and event time. For example, when a moderator changes the status of a report, an audit log is added with actor ID, event type, event detail, and when it occurred.\n * Key relationships: Links to actor (admin/mod/member) and optionally to related moderation action or report.\n * Special behaviors: Immutable by application design - supports regulatory and policy audit needs.\n * \n * @namespace Moderation\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_audit_logs = $Result.DefaultSelection<Prisma.$discussionboard_audit_logsPayload>\n/**\n * Model discussionboard_community_guidelines\n * Community Guidelines entity - This implements the clear community rule and code-of-conduct requirements as detailed in the Discussion Board Requirements section 1 (Community Rules & 01 Business Objectives). \n * \n * Business explanation: Stores guideline sections and texts in a normalized form, allowing updates and auditability for evolving community standards. Maintains 3NF compliance by separating each guideline entry, allowing references in moderation and user notifications. For example, guidelines about hate speech, constructive criticism, and post etiquette are stored here, referenced for automated onboarding or user display.\n * \n * Key relationships: May be referenced by moderation or notification components for contextual messaging. Special behaviors: Only admins can create or update guidelines; each entry is versioned by created_at/updated_at for audit trail.\n * \n * @namespace Guidelines\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_community_guidelines = $Result.DefaultSelection<Prisma.$discussionboard_community_guidelinesPayload>\n/**\n * Model discussionboard_content_policies\n * Content Policy entity - Implements the explicit, system-level policy and moderation documentation requirements as detailed in requirements section 3 (Content Policies & Moderation Policy).\n * \n * Business purpose: Stores specific, enforceable policy rules that apply to user-generated content (e.g. 'No hate speech', 'No plagiarism'). Maintains normalization by handling each policy as a distinct, queryable record. Can be referenced during automated content checking or manual moderation. For example, policy text on 'Profanity' or 'Spam' detection is kept here.\n * \n * Key relationships: May be referenced when determining sanction actions. Special behaviors: Only admins can add/update/delete policy entries. Supports audit trail with timestamps.\n * \n * @namespace Guidelines\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_content_policies = $Result.DefaultSelection<Prisma.$discussionboard_content_policiesPayload>\n/**\n * Model discussionboard_profanity_filters\n * Profanity Filter entity - Implements the system-level requirement for profanity filtering as outlined in requirements section 3.4 (Content Policies, Moderation).\n * \n * Business purpose: Contains normalized words/phrases that trigger system profanity detection on posts and comments. Maintains 3NF by storing each profane word or phrase as a single record, linked to activation status and audit fields. For example, the word 'foobar' or a list of banned words.\n * \n * Key relationships: May be referenced by automated moderation or content creation APIs. Special behaviors: Admins update/add words as needed, all events are timestamped.\n * \n * @namespace Guidelines\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_profanity_filters = $Result.DefaultSelection<Prisma.$discussionboard_profanity_filtersPayload>\n/**\n * Model discussionboard_automated_spam_rules\n * Automated Spam Rule entity - Implements the automated spam rule detection policies required by Functional Requirements 3.3.4 and Moderation Policy.\n * \n * Business purpose: Stores configurable, versioned rules or patterns that the platform's automated spam detector references. Maintains 3NF by separating each spam rule (regex, expression, or keyword) as an atomic record. For example, an entry could define regex matching repeated links or banned spam phrases.\n * \n * Key relationships: May be consumed by content creation or moderation APIs. Special behaviors: Rule activation handled by admins, all updates tracked in audit logs.\n * \n * @namespace Guidelines\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_automated_spam_rules = $Result.DefaultSelection<Prisma.$discussionboard_automated_spam_rulesPayload>\n/**\n * Model discussionboard_notifications\n * Discussion Board Notification Entity - Implements the notification delivery requirement from the Notification System and Audit & Logging sections. \n * \n * This model stores each notification event (such as replies, likes, mentions, moderation actions) sent to users. It allows tracking, delivery status, and historic audit for every notification generated by system events across the discussion board.\n * \n * Maintains 3NF compliance by separating notification records from user profiles and alert preferences (notification delivery configuration is stored in a separate table). For example, when a user receives a reply to their post, a notification record is created here, referencing the recipient, event details, and delivery state.\n * \n * Key relationships: Links to recipients (discussionboard_members) via foreign key. Optionally relates to specific posts, comments, or moderation events stored in other domains.\n * Special behaviors: Notifications can be marked as read/unread. Supports expirable and persistent notification types.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_notifications = $Result.DefaultSelection<Prisma.$discussionboard_notificationsPayload>\n/**\n * Model discussionboard_alert_preferences\n * Discussion Board Alert Preference Entity - Implements the notification preferences requirement from the Notification System and Settings functionality sections. \n * \n * This model stores each user's per-type notification delivery preferences (e.g., email, push, in-app, or off). Fulfills the requirement to provide members with fine-grained control over which notification types they receive and how they are delivered.\n * \n * Maintains 3NF compliance by separating user notification configuration from actual notification data and user profile records. For example, a user may choose in-app alerts for replies but email notifications for moderation actions, which is configured here.\n * \n * Key relationships: References the user (discussionboard_members) as the owner of these preferences. No denormalized or computed fields.\n * Special behaviors: Only one set of preferences per (user, notification type) enforced by unique index constraint.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_alert_preferences = $Result.DefaultSelection<Prisma.$discussionboard_alert_preferencesPayload>\n/**\n * Model discussionboard_action_logs\n * [Discussion Board Action Logs] - This implements the audit trail, accountability, and compliance requirements from the requirements document (including 2.6 Audit & Logging, moderation, and transparency mandates).\n * \n * Records every critical user or system action, especially for admin/moderator-level events. Maintains 3NF (fully normalized) by separating actor ID, event types, and contextual entity references, supports extensible metadata, and avoids denormalization. Example: logs a moderator deleting a post or editing a comment.\n * \n * Key relationships: Connects to user tables such as {@link discussionboard_admins.id}, {@link discussionboard_moderators.id}, or other actors by \"actor_id\" field.\n * Special behaviors: Immutable log entries, supports efficient filtering by actor/event/time; forms basis for compliance reporting and root-cause investigation.\n * \n * @namespace Logs\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_action_logs = $Result.DefaultSelection<Prisma.$discussionboard_action_logsPayload>\n/**\n * Model discussionboard_error_logs\n * [Error Logging Table] - This implements requirements from 3.1 Security, 3.2 Performance, and 3.5 Compliance regarding platform and API error capture for diagnostics and resilience.\n * \n * Captures and audits all system or application errors and exceptions in a normalized, traceable log. 3NF compliance by completely separating error details from business records, with reference context available via \"context_id\". Used in debugging, incident response, or platform monitoring. Example: logs database faults, uncaught exceptions, and failed external API calls.\n * \n * Key relationships: No direct foreign keys (for privacy and decoupling from actor data).\n * Special behaviors: Immutable, full-text searchable, supports quick triage by error code and time.\n * \n * @namespace Logs\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_error_logs = $Result.DefaultSelection<Prisma.$discussionboard_error_logsPayload>\n/**\n * Model discussionboard_api_access_logs\n * [API Access Logs] - Implements non-functional requirements 3.1 Security, 3.2 Performance, and 2.6 Audit by tracing all API interactions for security review, rate-limiting enforcement, and usage analytics.\n * \n * Logs all API calls, including the user (if authenticated), endpoint, HTTP method, and result. Maintains normalization (3NF) with user linkage by actor_id (nullable for guests), never storing denormalized request payloads. Used for monitoring abuse and generating analytics. Example: logs a member's GET to /api/posts or a failed POST to /api/comments.\n * \n * Key relationships: May reference the user by actor_id (nullable for guest requests). No other foreign keys.\n * Special behaviors: Massive write-optimized; may be purged for data retention compliance.\n * \n * @namespace Logs\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type discussionboard_api_access_logs = $Result.DefaultSelection<Prisma.$discussionboard_api_access_logsPayload>\n\n/**\n * ##  Prisma Client ʲˢ\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Discussionboard_sections\n * const discussionboard_sections = await prisma.discussionboard_sections.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client ʲˢ\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Discussionboard_sections\n   * const discussionboard_sections = await prisma.discussionboard_sections.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n  /**\n   * Add a middleware\n   * @deprecated since 4.16.0. For new code, prefer client extensions instead.\n   * @see https://pris.ly/d/extensions\n   */\n  $use(cb: Prisma.Middleware): void\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.discussionboard_sections`: Exposes CRUD operations for the **discussionboard_sections** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_sections\n    * const discussionboard_sections = await prisma.discussionboard_sections.findMany()\n    * ```\n    */\n  get discussionboard_sections(): Prisma.discussionboard_sectionsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_boards`: Exposes CRUD operations for the **discussionboard_boards** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_boards\n    * const discussionboard_boards = await prisma.discussionboard_boards.findMany()\n    * ```\n    */\n  get discussionboard_boards(): Prisma.discussionboard_boardsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_tags`: Exposes CRUD operations for the **discussionboard_tags** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_tags\n    * const discussionboard_tags = await prisma.discussionboard_tags.findMany()\n    * ```\n    */\n  get discussionboard_tags(): Prisma.discussionboard_tagsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_board_subscriptions`: Exposes CRUD operations for the **discussionboard_board_subscriptions** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_board_subscriptions\n    * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findMany()\n    * ```\n    */\n  get discussionboard_board_subscriptions(): Prisma.discussionboard_board_subscriptionsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_board_settings`: Exposes CRUD operations for the **discussionboard_board_settings** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_board_settings\n    * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findMany()\n    * ```\n    */\n  get discussionboard_board_settings(): Prisma.discussionboard_board_settingsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_notification_settings`: Exposes CRUD operations for the **discussionboard_notification_settings** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_notification_settings\n    * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findMany()\n    * ```\n    */\n  get discussionboard_notification_settings(): Prisma.discussionboard_notification_settingsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_admins`: Exposes CRUD operations for the **discussionboard_admins** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_admins\n    * const discussionboard_admins = await prisma.discussionboard_admins.findMany()\n    * ```\n    */\n  get discussionboard_admins(): Prisma.discussionboard_adminsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_moderators`: Exposes CRUD operations for the **discussionboard_moderators** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_moderators\n    * const discussionboard_moderators = await prisma.discussionboard_moderators.findMany()\n    * ```\n    */\n  get discussionboard_moderators(): Prisma.discussionboard_moderatorsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_members`: Exposes CRUD operations for the **discussionboard_members** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_members\n    * const discussionboard_members = await prisma.discussionboard_members.findMany()\n    * ```\n    */\n  get discussionboard_members(): Prisma.discussionboard_membersDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_guests`: Exposes CRUD operations for the **discussionboard_guests** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_guests\n    * const discussionboard_guests = await prisma.discussionboard_guests.findMany()\n    * ```\n    */\n  get discussionboard_guests(): Prisma.discussionboard_guestsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_user_profiles`: Exposes CRUD operations for the **discussionboard_user_profiles** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_user_profiles\n    * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findMany()\n    * ```\n    */\n  get discussionboard_user_profiles(): Prisma.discussionboard_user_profilesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_user_emails`: Exposes CRUD operations for the **discussionboard_user_emails** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_user_emails\n    * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findMany()\n    * ```\n    */\n  get discussionboard_user_emails(): Prisma.discussionboard_user_emailsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_user_auths`: Exposes CRUD operations for the **discussionboard_user_auths** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_user_auths\n    * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findMany()\n    * ```\n    */\n  get discussionboard_user_auths(): Prisma.discussionboard_user_authsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_user_sessions`: Exposes CRUD operations for the **discussionboard_user_sessions** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_user_sessions\n    * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findMany()\n    * ```\n    */\n  get discussionboard_user_sessions(): Prisma.discussionboard_user_sessionsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_posts`: Exposes CRUD operations for the **discussionboard_posts** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_posts\n    * const discussionboard_posts = await prisma.discussionboard_posts.findMany()\n    * ```\n    */\n  get discussionboard_posts(): Prisma.discussionboard_postsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post_edits`: Exposes CRUD operations for the **discussionboard_post_edits** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_post_edits\n    * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findMany()\n    * ```\n    */\n  get discussionboard_post_edits(): Prisma.discussionboard_post_editsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post_likes`: Exposes CRUD operations for the **discussionboard_post_likes** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_post_likes\n    * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findMany()\n    * ```\n    */\n  get discussionboard_post_likes(): Prisma.discussionboard_post_likesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_post_views`: Exposes CRUD operations for the **discussionboard_post_views** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_post_views\n    * const discussionboard_post_views = await prisma.discussionboard_post_views.findMany()\n    * ```\n    */\n  get discussionboard_post_views(): Prisma.discussionboard_post_viewsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_comments`: Exposes CRUD operations for the **discussionboard_comments** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_comments\n    * const discussionboard_comments = await prisma.discussionboard_comments.findMany()\n    * ```\n    */\n  get discussionboard_comments(): Prisma.discussionboard_commentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_comment_likes`: Exposes CRUD operations for the **discussionboard_comment_likes** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_comment_likes\n    * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findMany()\n    * ```\n    */\n  get discussionboard_comment_likes(): Prisma.discussionboard_comment_likesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_comment_edits`: Exposes CRUD operations for the **discussionboard_comment_edits** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_comment_edits\n    * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findMany()\n    * ```\n    */\n  get discussionboard_comment_edits(): Prisma.discussionboard_comment_editsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_comment_views`: Exposes CRUD operations for the **discussionboard_comment_views** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_comment_views\n    * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findMany()\n    * ```\n    */\n  get discussionboard_comment_views(): Prisma.discussionboard_comment_viewsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_reports`: Exposes CRUD operations for the **discussionboard_reports** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_reports\n    * const discussionboard_reports = await prisma.discussionboard_reports.findMany()\n    * ```\n    */\n  get discussionboard_reports(): Prisma.discussionboard_reportsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_moderation_actions`: Exposes CRUD operations for the **discussionboard_moderation_actions** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_moderation_actions\n    * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findMany()\n    * ```\n    */\n  get discussionboard_moderation_actions(): Prisma.discussionboard_moderation_actionsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_bans`: Exposes CRUD operations for the **discussionboard_bans** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_bans\n    * const discussionboard_bans = await prisma.discussionboard_bans.findMany()\n    * ```\n    */\n  get discussionboard_bans(): Prisma.discussionboard_bansDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_warnings`: Exposes CRUD operations for the **discussionboard_warnings** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_warnings\n    * const discussionboard_warnings = await prisma.discussionboard_warnings.findMany()\n    * ```\n    */\n  get discussionboard_warnings(): Prisma.discussionboard_warningsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_audit_logs`: Exposes CRUD operations for the **discussionboard_audit_logs** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_audit_logs\n    * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findMany()\n    * ```\n    */\n  get discussionboard_audit_logs(): Prisma.discussionboard_audit_logsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_community_guidelines`: Exposes CRUD operations for the **discussionboard_community_guidelines** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_community_guidelines\n    * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findMany()\n    * ```\n    */\n  get discussionboard_community_guidelines(): Prisma.discussionboard_community_guidelinesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_content_policies`: Exposes CRUD operations for the **discussionboard_content_policies** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_content_policies\n    * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findMany()\n    * ```\n    */\n  get discussionboard_content_policies(): Prisma.discussionboard_content_policiesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_profanity_filters`: Exposes CRUD operations for the **discussionboard_profanity_filters** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_profanity_filters\n    * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findMany()\n    * ```\n    */\n  get discussionboard_profanity_filters(): Prisma.discussionboard_profanity_filtersDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_automated_spam_rules`: Exposes CRUD operations for the **discussionboard_automated_spam_rules** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_automated_spam_rules\n    * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findMany()\n    * ```\n    */\n  get discussionboard_automated_spam_rules(): Prisma.discussionboard_automated_spam_rulesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_notifications`: Exposes CRUD operations for the **discussionboard_notifications** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_notifications\n    * const discussionboard_notifications = await prisma.discussionboard_notifications.findMany()\n    * ```\n    */\n  get discussionboard_notifications(): Prisma.discussionboard_notificationsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_alert_preferences`: Exposes CRUD operations for the **discussionboard_alert_preferences** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_alert_preferences\n    * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findMany()\n    * ```\n    */\n  get discussionboard_alert_preferences(): Prisma.discussionboard_alert_preferencesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_action_logs`: Exposes CRUD operations for the **discussionboard_action_logs** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_action_logs\n    * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findMany()\n    * ```\n    */\n  get discussionboard_action_logs(): Prisma.discussionboard_action_logsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_error_logs`: Exposes CRUD operations for the **discussionboard_error_logs** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_error_logs\n    * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findMany()\n    * ```\n    */\n  get discussionboard_error_logs(): Prisma.discussionboard_error_logsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.discussionboard_api_access_logs`: Exposes CRUD operations for the **discussionboard_api_access_logs** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Discussionboard_api_access_logs\n    * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findMany()\n    * ```\n    */\n  get discussionboard_api_access_logs(): Prisma.discussionboard_api_access_logsDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    discussionboard_sections: 'discussionboard_sections',\n    discussionboard_boards: 'discussionboard_boards',\n    discussionboard_tags: 'discussionboard_tags',\n    discussionboard_board_subscriptions: 'discussionboard_board_subscriptions',\n    discussionboard_board_settings: 'discussionboard_board_settings',\n    discussionboard_notification_settings: 'discussionboard_notification_settings',\n    discussionboard_admins: 'discussionboard_admins',\n    discussionboard_moderators: 'discussionboard_moderators',\n    discussionboard_members: 'discussionboard_members',\n    discussionboard_guests: 'discussionboard_guests',\n    discussionboard_user_profiles: 'discussionboard_user_profiles',\n    discussionboard_user_emails: 'discussionboard_user_emails',\n    discussionboard_user_auths: 'discussionboard_user_auths',\n    discussionboard_user_sessions: 'discussionboard_user_sessions',\n    discussionboard_posts: 'discussionboard_posts',\n    discussionboard_post_edits: 'discussionboard_post_edits',\n    discussionboard_post_likes: 'discussionboard_post_likes',\n    discussionboard_post_views: 'discussionboard_post_views',\n    discussionboard_comments: 'discussionboard_comments',\n    discussionboard_comment_likes: 'discussionboard_comment_likes',\n    discussionboard_comment_edits: 'discussionboard_comment_edits',\n    discussionboard_comment_views: 'discussionboard_comment_views',\n    discussionboard_reports: 'discussionboard_reports',\n    discussionboard_moderation_actions: 'discussionboard_moderation_actions',\n    discussionboard_bans: 'discussionboard_bans',\n    discussionboard_warnings: 'discussionboard_warnings',\n    discussionboard_audit_logs: 'discussionboard_audit_logs',\n    discussionboard_community_guidelines: 'discussionboard_community_guidelines',\n    discussionboard_content_policies: 'discussionboard_content_policies',\n    discussionboard_profanity_filters: 'discussionboard_profanity_filters',\n    discussionboard_automated_spam_rules: 'discussionboard_automated_spam_rules',\n    discussionboard_notifications: 'discussionboard_notifications',\n    discussionboard_alert_preferences: 'discussionboard_alert_preferences',\n    discussionboard_action_logs: 'discussionboard_action_logs',\n    discussionboard_error_logs: 'discussionboard_error_logs',\n    discussionboard_api_access_logs: 'discussionboard_api_access_logs'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"discussionboard_sections\" | \"discussionboard_boards\" | \"discussionboard_tags\" | \"discussionboard_board_subscriptions\" | \"discussionboard_board_settings\" | \"discussionboard_notification_settings\" | \"discussionboard_admins\" | \"discussionboard_moderators\" | \"discussionboard_members\" | \"discussionboard_guests\" | \"discussionboard_user_profiles\" | \"discussionboard_user_emails\" | \"discussionboard_user_auths\" | \"discussionboard_user_sessions\" | \"discussionboard_posts\" | \"discussionboard_post_edits\" | \"discussionboard_post_likes\" | \"discussionboard_post_views\" | \"discussionboard_comments\" | \"discussionboard_comment_likes\" | \"discussionboard_comment_edits\" | \"discussionboard_comment_views\" | \"discussionboard_reports\" | \"discussionboard_moderation_actions\" | \"discussionboard_bans\" | \"discussionboard_warnings\" | \"discussionboard_audit_logs\" | \"discussionboard_community_guidelines\" | \"discussionboard_content_policies\" | \"discussionboard_profanity_filters\" | \"discussionboard_automated_spam_rules\" | \"discussionboard_notifications\" | \"discussionboard_alert_preferences\" | \"discussionboard_action_logs\" | \"discussionboard_error_logs\" | \"discussionboard_api_access_logs\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      discussionboard_sections: {\n        payload: Prisma.$discussionboard_sectionsPayload<ExtArgs>\n        fields: Prisma.discussionboard_sectionsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_sectionsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_sectionsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_sectionsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_sectionsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_sectionsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_sectionsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_sectionsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_sectionsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_sectionsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_sectionsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_sectionsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_sectionsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_sectionsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_sectionsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_sectionsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_sectionsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_sections>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_sectionsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_sectionsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_sectionsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_sectionsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_boards: {\n        payload: Prisma.$discussionboard_boardsPayload<ExtArgs>\n        fields: Prisma.discussionboard_boardsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_boardsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_boardsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_boardsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_boardsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_boardsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_boardsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_boardsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_boardsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_boardsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_boardsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_boardsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_boardsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_boardsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_boardsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_boardsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_boardsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_boards>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_boardsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_boardsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_boardsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_boardsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_tags: {\n        payload: Prisma.$discussionboard_tagsPayload<ExtArgs>\n        fields: Prisma.discussionboard_tagsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_tagsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_tagsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_tagsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_tagsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_tagsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_tagsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_tagsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_tagsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_tagsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_tagsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_tagsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_tagsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_tagsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_tagsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_tagsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_tagsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_tags>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_tagsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_tagsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_tagsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_tagsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_board_subscriptions: {\n        payload: Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>\n        fields: Prisma.discussionboard_board_subscriptionsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_board_subscriptionsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_board_subscriptionsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_board_subscriptionsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_board_subscriptionsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_board_subscriptionsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_board_subscriptionsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_board_subscriptionsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_board_subscriptionsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_board_subscriptionsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_board_subscriptionsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_board_subscriptionsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_board_subscriptionsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_board_subscriptionsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_board_subscriptionsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_subscriptionsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_board_subscriptionsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_board_subscriptions>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_board_subscriptionsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_board_subscriptionsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_board_subscriptionsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_board_subscriptionsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_board_settings: {\n        payload: Prisma.$discussionboard_board_settingsPayload<ExtArgs>\n        fields: Prisma.discussionboard_board_settingsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_board_settingsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_board_settingsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_board_settingsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_board_settingsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_board_settingsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_board_settingsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_board_settingsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_board_settingsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_board_settingsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_board_settingsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_board_settingsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_board_settingsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_board_settingsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_board_settingsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_board_settingsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_board_settingsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_board_settings>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_board_settingsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_board_settingsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_board_settingsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_board_settingsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_notification_settings: {\n        payload: Prisma.$discussionboard_notification_settingsPayload<ExtArgs>\n        fields: Prisma.discussionboard_notification_settingsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_notification_settingsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_notification_settingsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_notification_settingsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_notification_settingsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_notification_settingsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_notification_settingsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_notification_settingsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_notification_settingsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_notification_settingsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_notification_settingsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_notification_settingsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_notification_settingsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_notification_settingsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_notification_settingsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notification_settingsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_notification_settingsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_notification_settings>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_notification_settingsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notification_settingsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_notification_settingsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notification_settingsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_admins: {\n        payload: Prisma.$discussionboard_adminsPayload<ExtArgs>\n        fields: Prisma.discussionboard_adminsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_adminsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_adminsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_adminsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_adminsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_adminsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_adminsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_adminsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_adminsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_adminsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_adminsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_adminsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_adminsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_adminsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_adminsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_adminsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_adminsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_admins>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_adminsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_adminsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_adminsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_adminsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_moderators: {\n        payload: Prisma.$discussionboard_moderatorsPayload<ExtArgs>\n        fields: Prisma.discussionboard_moderatorsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_moderatorsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_moderatorsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_moderatorsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_moderatorsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_moderatorsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_moderatorsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_moderatorsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_moderatorsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_moderatorsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_moderatorsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_moderatorsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_moderatorsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_moderatorsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_moderatorsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderatorsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_moderatorsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_moderators>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_moderatorsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderatorsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_moderatorsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderatorsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_members: {\n        payload: Prisma.$discussionboard_membersPayload<ExtArgs>\n        fields: Prisma.discussionboard_membersFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_membersFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_membersFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_membersFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_membersFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_membersFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_membersCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_membersCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_membersCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_membersDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_membersUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_membersDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_membersUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_membersUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_membersUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_membersPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_membersAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_members>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_membersGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_membersGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_membersCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_membersCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_guests: {\n        payload: Prisma.$discussionboard_guestsPayload<ExtArgs>\n        fields: Prisma.discussionboard_guestsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_guestsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_guestsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_guestsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_guestsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_guestsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_guestsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_guestsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_guestsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_guestsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_guestsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_guestsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_guestsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_guestsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_guestsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_guestsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_guestsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_guests>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_guestsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_guestsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_guestsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_guestsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_user_profiles: {\n        payload: Prisma.$discussionboard_user_profilesPayload<ExtArgs>\n        fields: Prisma.discussionboard_user_profilesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_user_profilesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_user_profilesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_user_profilesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_user_profilesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_user_profilesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_user_profilesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_user_profilesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_user_profilesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_user_profilesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_user_profilesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_user_profilesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_user_profilesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_user_profilesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_user_profilesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_profilesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_user_profilesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_user_profiles>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_user_profilesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_profilesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_user_profilesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_profilesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_user_emails: {\n        payload: Prisma.$discussionboard_user_emailsPayload<ExtArgs>\n        fields: Prisma.discussionboard_user_emailsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_user_emailsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_user_emailsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_user_emailsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_user_emailsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_user_emailsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_user_emailsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_user_emailsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_user_emailsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_user_emailsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_user_emailsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_user_emailsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_user_emailsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_user_emailsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_user_emailsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_emailsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_user_emailsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_user_emails>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_user_emailsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_emailsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_user_emailsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_emailsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_user_auths: {\n        payload: Prisma.$discussionboard_user_authsPayload<ExtArgs>\n        fields: Prisma.discussionboard_user_authsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_user_authsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_user_authsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_user_authsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_user_authsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_user_authsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_user_authsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_user_authsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_user_authsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_user_authsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_user_authsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_user_authsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_user_authsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_user_authsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_user_authsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_authsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_user_authsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_user_auths>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_user_authsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_authsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_user_authsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_authsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_user_sessions: {\n        payload: Prisma.$discussionboard_user_sessionsPayload<ExtArgs>\n        fields: Prisma.discussionboard_user_sessionsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_user_sessionsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_user_sessionsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_user_sessionsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_user_sessionsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_user_sessionsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_user_sessionsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_user_sessionsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_user_sessionsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_user_sessionsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_user_sessionsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_user_sessionsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_user_sessionsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_user_sessionsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_user_sessionsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_user_sessionsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_user_sessionsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_user_sessions>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_user_sessionsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_sessionsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_user_sessionsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_user_sessionsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_posts: {\n        payload: Prisma.$discussionboard_postsPayload<ExtArgs>\n        fields: Prisma.discussionboard_postsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_postsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_postsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_postsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_postsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_postsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_postsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_postsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_postsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_postsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_postsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_postsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_postsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_postsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_postsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_postsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_postsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_posts>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_postsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_postsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_postsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_postsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post_edits: {\n        payload: Prisma.$discussionboard_post_editsPayload<ExtArgs>\n        fields: Prisma.discussionboard_post_editsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_post_editsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_post_editsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_post_editsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_post_editsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_post_editsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_post_editsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_post_editsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_post_editsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_post_editsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_post_editsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_post_editsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_post_editsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_post_editsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_post_editsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_editsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_post_editsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post_edits>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_post_editsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_editsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_post_editsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_editsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post_likes: {\n        payload: Prisma.$discussionboard_post_likesPayload<ExtArgs>\n        fields: Prisma.discussionboard_post_likesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_post_likesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_post_likesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_post_likesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_post_likesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_post_likesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_post_likesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_post_likesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_post_likesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_post_likesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_post_likesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_post_likesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_post_likesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_post_likesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_post_likesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_likesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_post_likesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post_likes>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_post_likesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_likesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_post_likesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_likesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_post_views: {\n        payload: Prisma.$discussionboard_post_viewsPayload<ExtArgs>\n        fields: Prisma.discussionboard_post_viewsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_post_viewsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_post_viewsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_post_viewsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_post_viewsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_post_viewsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_post_viewsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_post_viewsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_post_viewsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_post_viewsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_post_viewsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_post_viewsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_post_viewsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_post_viewsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_post_viewsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_post_viewsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_post_viewsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_post_views>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_post_viewsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_viewsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_post_viewsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_post_viewsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_comments: {\n        payload: Prisma.$discussionboard_commentsPayload<ExtArgs>\n        fields: Prisma.discussionboard_commentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_commentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_commentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_commentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_commentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_commentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_commentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_commentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_commentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_commentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_commentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_commentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_commentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_commentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_commentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_commentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_commentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_comments>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_commentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_commentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_commentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_commentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_comment_likes: {\n        payload: Prisma.$discussionboard_comment_likesPayload<ExtArgs>\n        fields: Prisma.discussionboard_comment_likesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_comment_likesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_comment_likesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_comment_likesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_comment_likesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_comment_likesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_comment_likesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_comment_likesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_comment_likesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_comment_likesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_comment_likesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_comment_likesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_comment_likesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_comment_likesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_comment_likesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_likesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_comment_likesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_comment_likes>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_comment_likesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_comment_likesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_comment_likesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_comment_likesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_comment_edits: {\n        payload: Prisma.$discussionboard_comment_editsPayload<ExtArgs>\n        fields: Prisma.discussionboard_comment_editsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_comment_editsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_comment_editsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_comment_editsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_comment_editsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_comment_editsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_comment_editsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_comment_editsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_comment_editsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_comment_editsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_comment_editsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_comment_editsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_comment_editsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_comment_editsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_comment_editsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_editsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_comment_editsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_comment_edits>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_comment_editsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_comment_editsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_comment_editsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_comment_editsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_comment_views: {\n        payload: Prisma.$discussionboard_comment_viewsPayload<ExtArgs>\n        fields: Prisma.discussionboard_comment_viewsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_comment_viewsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_comment_viewsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_comment_viewsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_comment_viewsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_comment_viewsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_comment_viewsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_comment_viewsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_comment_viewsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_comment_viewsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_comment_viewsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_comment_viewsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_comment_viewsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_comment_viewsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_comment_viewsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_comment_viewsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_comment_viewsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_comment_views>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_comment_viewsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_comment_viewsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_comment_viewsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_comment_viewsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_reports: {\n        payload: Prisma.$discussionboard_reportsPayload<ExtArgs>\n        fields: Prisma.discussionboard_reportsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_reportsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_reportsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_reportsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_reportsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_reportsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_reportsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_reportsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_reportsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_reportsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_reportsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_reportsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_reportsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_reportsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_reportsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_reportsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_reportsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_reports>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_reportsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_reportsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_reportsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_reportsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_moderation_actions: {\n        payload: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>\n        fields: Prisma.discussionboard_moderation_actionsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_moderation_actionsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_moderation_actionsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_moderation_actionsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_moderation_actionsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_moderation_actionsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_moderation_actionsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_moderation_actionsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_moderation_actionsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_moderation_actionsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_moderation_actionsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_moderation_actionsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_moderation_actionsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_moderation_actionsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_moderation_actionsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_moderation_actionsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_moderation_actionsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_moderation_actions>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_moderation_actionsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderation_actionsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_moderation_actionsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_moderation_actionsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_bans: {\n        payload: Prisma.$discussionboard_bansPayload<ExtArgs>\n        fields: Prisma.discussionboard_bansFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_bansFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_bansFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_bansFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_bansFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_bansFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_bansCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_bansCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_bansCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_bansDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_bansUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_bansDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_bansUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_bansUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_bansUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_bansPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_bansAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_bans>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_bansGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_bansGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_bansCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_bansCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_warnings: {\n        payload: Prisma.$discussionboard_warningsPayload<ExtArgs>\n        fields: Prisma.discussionboard_warningsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_warningsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_warningsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_warningsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_warningsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_warningsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_warningsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_warningsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_warningsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_warningsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_warningsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_warningsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_warningsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_warningsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_warningsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_warningsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_warningsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_warnings>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_warningsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_warningsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_warningsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_warningsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_audit_logs: {\n        payload: Prisma.$discussionboard_audit_logsPayload<ExtArgs>\n        fields: Prisma.discussionboard_audit_logsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_audit_logsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_audit_logsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_audit_logsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_audit_logsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_audit_logsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_audit_logsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_audit_logsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_audit_logsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_audit_logsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_audit_logsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_audit_logsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_audit_logsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_audit_logsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_audit_logsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_audit_logsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_audit_logsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_audit_logs>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_audit_logsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_audit_logsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_audit_logsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_audit_logsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_community_guidelines: {\n        payload: Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>\n        fields: Prisma.discussionboard_community_guidelinesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_community_guidelinesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_community_guidelinesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_community_guidelinesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_community_guidelinesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_community_guidelinesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_community_guidelinesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_community_guidelinesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_community_guidelinesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_community_guidelinesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_community_guidelinesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_community_guidelinesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_community_guidelinesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_community_guidelinesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_community_guidelinesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_community_guidelinesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_community_guidelinesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_community_guidelines>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_community_guidelinesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_community_guidelinesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_community_guidelinesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_community_guidelinesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_content_policies: {\n        payload: Prisma.$discussionboard_content_policiesPayload<ExtArgs>\n        fields: Prisma.discussionboard_content_policiesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_content_policiesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_content_policiesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_content_policiesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_content_policiesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_content_policiesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_content_policiesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_content_policiesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_content_policiesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_content_policiesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_content_policiesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_content_policiesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_content_policiesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_content_policiesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_content_policiesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_content_policiesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_content_policiesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_content_policies>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_content_policiesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_content_policiesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_content_policiesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_content_policiesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_profanity_filters: {\n        payload: Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>\n        fields: Prisma.discussionboard_profanity_filtersFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_profanity_filtersFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_profanity_filtersFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_profanity_filtersFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_profanity_filtersFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_profanity_filtersFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_profanity_filtersCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_profanity_filtersCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_profanity_filtersCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_profanity_filtersDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_profanity_filtersUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_profanity_filtersDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_profanity_filtersUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_profanity_filtersUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_profanity_filtersUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_profanity_filtersPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_profanity_filtersAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_profanity_filters>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_profanity_filtersGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_profanity_filtersGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_profanity_filtersCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_profanity_filtersCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_automated_spam_rules: {\n        payload: Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>\n        fields: Prisma.discussionboard_automated_spam_rulesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_automated_spam_rulesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_automated_spam_rulesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_automated_spam_rulesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_automated_spam_rulesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_automated_spam_rulesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_automated_spam_rulesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_automated_spam_rulesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_automated_spam_rulesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_automated_spam_rulesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_automated_spam_rulesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_automated_spam_rulesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_automated_spam_rulesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_automated_spam_rulesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_automated_spam_rulesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_automated_spam_rulesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_automated_spam_rulesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_automated_spam_rules>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_automated_spam_rulesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_automated_spam_rulesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_automated_spam_rulesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_automated_spam_rulesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_notifications: {\n        payload: Prisma.$discussionboard_notificationsPayload<ExtArgs>\n        fields: Prisma.discussionboard_notificationsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_notificationsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_notificationsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_notificationsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_notificationsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_notificationsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_notificationsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_notificationsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_notificationsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_notificationsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_notificationsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_notificationsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_notificationsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_notificationsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_notificationsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_notificationsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_notificationsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_notifications>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_notificationsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notificationsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_notificationsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_notificationsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_alert_preferences: {\n        payload: Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>\n        fields: Prisma.discussionboard_alert_preferencesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_alert_preferencesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_alert_preferencesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_alert_preferencesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_alert_preferencesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_alert_preferencesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_alert_preferencesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_alert_preferencesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_alert_preferencesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_alert_preferencesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_alert_preferencesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_alert_preferencesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_alert_preferencesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_alert_preferencesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_alert_preferencesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_alert_preferencesPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_alert_preferencesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_alert_preferences>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_alert_preferencesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_alert_preferencesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_alert_preferencesCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_alert_preferencesCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_action_logs: {\n        payload: Prisma.$discussionboard_action_logsPayload<ExtArgs>\n        fields: Prisma.discussionboard_action_logsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_action_logsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_action_logsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_action_logsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_action_logsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_action_logsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_action_logsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_action_logsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_action_logsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_action_logsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_action_logsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_action_logsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_action_logsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_action_logsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_action_logsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_action_logsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_action_logsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_action_logs>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_action_logsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_action_logsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_action_logsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_action_logsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_error_logs: {\n        payload: Prisma.$discussionboard_error_logsPayload<ExtArgs>\n        fields: Prisma.discussionboard_error_logsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_error_logsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_error_logsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_error_logsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_error_logsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_error_logsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_error_logsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_error_logsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_error_logsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_error_logsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_error_logsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_error_logsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_error_logsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_error_logsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_error_logsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_error_logsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_error_logsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_error_logs>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_error_logsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_error_logsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_error_logsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_error_logsCountAggregateOutputType> | number\n          }\n        }\n      }\n      discussionboard_api_access_logs: {\n        payload: Prisma.$discussionboard_api_access_logsPayload<ExtArgs>\n        fields: Prisma.discussionboard_api_access_logsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.discussionboard_api_access_logsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.discussionboard_api_access_logsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>\n          }\n          findFirst: {\n            args: Prisma.discussionboard_api_access_logsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.discussionboard_api_access_logsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>\n          }\n          findMany: {\n            args: Prisma.discussionboard_api_access_logsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>[]\n          }\n          create: {\n            args: Prisma.discussionboard_api_access_logsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>\n          }\n          createMany: {\n            args: Prisma.discussionboard_api_access_logsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.discussionboard_api_access_logsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>[]\n          }\n          delete: {\n            args: Prisma.discussionboard_api_access_logsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>\n          }\n          update: {\n            args: Prisma.discussionboard_api_access_logsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>\n          }\n          deleteMany: {\n            args: Prisma.discussionboard_api_access_logsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.discussionboard_api_access_logsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.discussionboard_api_access_logsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>[]\n          }\n          upsert: {\n            args: Prisma.discussionboard_api_access_logsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$discussionboard_api_access_logsPayload>\n          }\n          aggregate: {\n            args: Prisma.Discussionboard_api_access_logsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateDiscussionboard_api_access_logs>\n          }\n          groupBy: {\n            args: Prisma.discussionboard_api_access_logsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_api_access_logsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.discussionboard_api_access_logsCountArgs<ExtArgs>\n            result: $Utils.Optional<Discussionboard_api_access_logsCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Defaults to stdout\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events\n     * log: [\n     *   { emit: 'stdout', level: 'query' },\n     *   { emit: 'stdout', level: 'info' },\n     *   { emit: 'stdout', level: 'warn' }\n     *   { emit: 'stdout', level: 'error' }\n     * ]\n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    discussionboard_sections?: discussionboard_sectionsOmit\n    discussionboard_boards?: discussionboard_boardsOmit\n    discussionboard_tags?: discussionboard_tagsOmit\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsOmit\n    discussionboard_board_settings?: discussionboard_board_settingsOmit\n    discussionboard_notification_settings?: discussionboard_notification_settingsOmit\n    discussionboard_admins?: discussionboard_adminsOmit\n    discussionboard_moderators?: discussionboard_moderatorsOmit\n    discussionboard_members?: discussionboard_membersOmit\n    discussionboard_guests?: discussionboard_guestsOmit\n    discussionboard_user_profiles?: discussionboard_user_profilesOmit\n    discussionboard_user_emails?: discussionboard_user_emailsOmit\n    discussionboard_user_auths?: discussionboard_user_authsOmit\n    discussionboard_user_sessions?: discussionboard_user_sessionsOmit\n    discussionboard_posts?: discussionboard_postsOmit\n    discussionboard_post_edits?: discussionboard_post_editsOmit\n    discussionboard_post_likes?: discussionboard_post_likesOmit\n    discussionboard_post_views?: discussionboard_post_viewsOmit\n    discussionboard_comments?: discussionboard_commentsOmit\n    discussionboard_comment_likes?: discussionboard_comment_likesOmit\n    discussionboard_comment_edits?: discussionboard_comment_editsOmit\n    discussionboard_comment_views?: discussionboard_comment_viewsOmit\n    discussionboard_reports?: discussionboard_reportsOmit\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOmit\n    discussionboard_bans?: discussionboard_bansOmit\n    discussionboard_warnings?: discussionboard_warningsOmit\n    discussionboard_audit_logs?: discussionboard_audit_logsOmit\n    discussionboard_community_guidelines?: discussionboard_community_guidelinesOmit\n    discussionboard_content_policies?: discussionboard_content_policiesOmit\n    discussionboard_profanity_filters?: discussionboard_profanity_filtersOmit\n    discussionboard_automated_spam_rules?: discussionboard_automated_spam_rulesOmit\n    discussionboard_notifications?: discussionboard_notificationsOmit\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesOmit\n    discussionboard_action_logs?: discussionboard_action_logsOmit\n    discussionboard_error_logs?: discussionboard_error_logsOmit\n    discussionboard_api_access_logs?: discussionboard_api_access_logsOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never\n  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?\n    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>\n    : never\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  /**\n   * These options are being passed into the middleware as \"params\"\n   */\n  export type MiddlewareParams = {\n    model?: ModelName\n    action: PrismaAction\n    args: any\n    dataPath: string[]\n    runInTransaction: boolean\n  }\n\n  /**\n   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation\n   */\n  export type Middleware<T = any> = (\n    params: MiddlewareParams,\n    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,\n  ) => $Utils.JsPromise<T>\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Discussionboard_sectionsCountOutputType\n   */\n\n  export type Discussionboard_sectionsCountOutputType = {\n    discussionboard_boards: number\n  }\n\n  export type Discussionboard_sectionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_boards?: boolean | Discussionboard_sectionsCountOutputTypeCountDiscussionboard_boardsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_sectionsCountOutputType without action\n   */\n  export type Discussionboard_sectionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_sectionsCountOutputType\n     */\n    select?: Discussionboard_sectionsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_sectionsCountOutputType without action\n   */\n  export type Discussionboard_sectionsCountOutputTypeCountDiscussionboard_boardsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_boardsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_boardsCountOutputType\n   */\n\n  export type Discussionboard_boardsCountOutputType = {\n    discussionboard_board_subscriptions: number\n    discussionboard_posts: number\n  }\n\n  export type Discussionboard_boardsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_board_subscriptions?: boolean | Discussionboard_boardsCountOutputTypeCountDiscussionboard_board_subscriptionsArgs\n    discussionboard_posts?: boolean | Discussionboard_boardsCountOutputTypeCountDiscussionboard_postsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_boardsCountOutputType without action\n   */\n  export type Discussionboard_boardsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_boardsCountOutputType\n     */\n    select?: Discussionboard_boardsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_boardsCountOutputType without action\n   */\n  export type Discussionboard_boardsCountOutputTypeCountDiscussionboard_board_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_board_subscriptionsWhereInput\n  }\n\n  /**\n   * Discussionboard_boardsCountOutputType without action\n   */\n  export type Discussionboard_boardsCountOutputTypeCountDiscussionboard_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_postsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_adminsCountOutputType\n   */\n\n  export type Discussionboard_adminsCountOutputType = {\n    discussionboard_moderation_actions: number\n    discussionboard_bans_of_target_admin_id: number\n    discussionboard_bans_of_actor_admin_id: number\n    discussionboard_warnings_of_target_admin_id: number\n    discussionboard_warnings_of_actor_admin_id: number\n    discussionboard_audit_logs: number\n  }\n\n  export type Discussionboard_adminsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_moderation_actions?: boolean | Discussionboard_adminsCountOutputTypeCountDiscussionboard_moderation_actionsArgs\n    discussionboard_bans_of_target_admin_id?: boolean | Discussionboard_adminsCountOutputTypeCountDiscussionboard_bans_of_target_admin_idArgs\n    discussionboard_bans_of_actor_admin_id?: boolean | Discussionboard_adminsCountOutputTypeCountDiscussionboard_bans_of_actor_admin_idArgs\n    discussionboard_warnings_of_target_admin_id?: boolean | Discussionboard_adminsCountOutputTypeCountDiscussionboard_warnings_of_target_admin_idArgs\n    discussionboard_warnings_of_actor_admin_id?: boolean | Discussionboard_adminsCountOutputTypeCountDiscussionboard_warnings_of_actor_admin_idArgs\n    discussionboard_audit_logs?: boolean | Discussionboard_adminsCountOutputTypeCountDiscussionboard_audit_logsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_adminsCountOutputType\n     */\n    select?: Discussionboard_adminsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeCountDiscussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeCountDiscussionboard_bans_of_target_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_bansWhereInput\n  }\n\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeCountDiscussionboard_bans_of_actor_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_bansWhereInput\n  }\n\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeCountDiscussionboard_warnings_of_target_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n  }\n\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeCountDiscussionboard_warnings_of_actor_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n  }\n\n  /**\n   * Discussionboard_adminsCountOutputType without action\n   */\n  export type Discussionboard_adminsCountOutputTypeCountDiscussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_moderatorsCountOutputType\n   */\n\n  export type Discussionboard_moderatorsCountOutputType = {\n    discussionboard_moderation_actions: number\n    discussionboard_bans_of_target_moderator_id: number\n    discussionboard_bans_of_actor_moderator_id: number\n    discussionboard_warnings_of_target_moderator_id: number\n    discussionboard_warnings_of_actor_moderator_id: number\n    discussionboard_audit_logs: number\n  }\n\n  export type Discussionboard_moderatorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_moderation_actions?: boolean | Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_moderation_actionsArgs\n    discussionboard_bans_of_target_moderator_id?: boolean | Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_bans_of_target_moderator_idArgs\n    discussionboard_bans_of_actor_moderator_id?: boolean | Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_bans_of_actor_moderator_idArgs\n    discussionboard_warnings_of_target_moderator_id?: boolean | Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_warnings_of_target_moderator_idArgs\n    discussionboard_warnings_of_actor_moderator_id?: boolean | Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_warnings_of_actor_moderator_idArgs\n    discussionboard_audit_logs?: boolean | Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_audit_logsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_moderatorsCountOutputType\n     */\n    select?: Discussionboard_moderatorsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_bans_of_target_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_bansWhereInput\n  }\n\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_bans_of_actor_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_bansWhereInput\n  }\n\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_warnings_of_target_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n  }\n\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_warnings_of_actor_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n  }\n\n  /**\n   * Discussionboard_moderatorsCountOutputType without action\n   */\n  export type Discussionboard_moderatorsCountOutputTypeCountDiscussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_membersCountOutputType\n   */\n\n  export type Discussionboard_membersCountOutputType = {\n    discussionboard_board_subscriptions: number\n    discussionboard_user_emails: number\n    discussionboard_user_auths: number\n    discussionboard_user_sessions: number\n    discussionboard_posts: number\n    discussionboard_post_edits: number\n    discussionboard_post_likes: number\n    discussionboard_post_views: number\n    discussionboard_comments: number\n    discussionboard_comment_likes: number\n    discussionboard_comment_edits: number\n    discussionboard_comment_views: number\n    discussionboard_reports: number\n    discussionboard_moderation_actions: number\n    discussionboard_bans: number\n    discussionboard_warnings: number\n    discussionboard_audit_logs: number\n    discussionboard_notifications: number\n    discussionboard_alert_preferences: number\n    discussionboard_action_logs: number\n    discussionboard_api_access_logs: number\n  }\n\n  export type Discussionboard_membersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_board_subscriptions?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_board_subscriptionsArgs\n    discussionboard_user_emails?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_user_emailsArgs\n    discussionboard_user_auths?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_user_authsArgs\n    discussionboard_user_sessions?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_user_sessionsArgs\n    discussionboard_posts?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_postsArgs\n    discussionboard_post_edits?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_post_editsArgs\n    discussionboard_post_likes?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_post_likesArgs\n    discussionboard_post_views?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_post_viewsArgs\n    discussionboard_comments?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_commentsArgs\n    discussionboard_comment_likes?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_comment_likesArgs\n    discussionboard_comment_edits?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_comment_editsArgs\n    discussionboard_comment_views?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_comment_viewsArgs\n    discussionboard_reports?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_reportsArgs\n    discussionboard_moderation_actions?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_moderation_actionsArgs\n    discussionboard_bans?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_bansArgs\n    discussionboard_warnings?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_warningsArgs\n    discussionboard_audit_logs?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_audit_logsArgs\n    discussionboard_notifications?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_notificationsArgs\n    discussionboard_alert_preferences?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_alert_preferencesArgs\n    discussionboard_action_logs?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_action_logsArgs\n    discussionboard_api_access_logs?: boolean | Discussionboard_membersCountOutputTypeCountDiscussionboard_api_access_logsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_membersCountOutputType\n     */\n    select?: Discussionboard_membersCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_board_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_board_subscriptionsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_user_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_emailsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_user_authsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_authsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_user_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_sessionsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_postsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_post_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_editsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_post_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_post_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_viewsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_comment_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_comment_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_editsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_comment_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_viewsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_bansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_bansWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_warningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_alert_preferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_alert_preferencesWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_action_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_action_logsWhereInput\n  }\n\n  /**\n   * Discussionboard_membersCountOutputType without action\n   */\n  export type Discussionboard_membersCountOutputTypeCountDiscussionboard_api_access_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_api_access_logsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_postsCountOutputType\n   */\n\n  export type Discussionboard_postsCountOutputType = {\n    discussionboard_post_edits: number\n    discussionboard_post_likes: number\n    discussionboard_post_views: number\n    discussionboard_comments: number\n    discussionboard_reports: number\n    discussionboard_moderation_actions: number\n  }\n\n  export type Discussionboard_postsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_post_edits?: boolean | Discussionboard_postsCountOutputTypeCountDiscussionboard_post_editsArgs\n    discussionboard_post_likes?: boolean | Discussionboard_postsCountOutputTypeCountDiscussionboard_post_likesArgs\n    discussionboard_post_views?: boolean | Discussionboard_postsCountOutputTypeCountDiscussionboard_post_viewsArgs\n    discussionboard_comments?: boolean | Discussionboard_postsCountOutputTypeCountDiscussionboard_commentsArgs\n    discussionboard_reports?: boolean | Discussionboard_postsCountOutputTypeCountDiscussionboard_reportsArgs\n    discussionboard_moderation_actions?: boolean | Discussionboard_postsCountOutputTypeCountDiscussionboard_moderation_actionsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_postsCountOutputType\n     */\n    select?: Discussionboard_postsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeCountDiscussionboard_post_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_editsWhereInput\n  }\n\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeCountDiscussionboard_post_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeCountDiscussionboard_post_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_viewsWhereInput\n  }\n\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeCountDiscussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeCountDiscussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * Discussionboard_postsCountOutputType without action\n   */\n  export type Discussionboard_postsCountOutputTypeCountDiscussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_commentsCountOutputType\n   */\n\n  export type Discussionboard_commentsCountOutputType = {\n    recursive: number\n    discussionboard_comment_likes: number\n    discussionboard_comment_edits: number\n    discussionboard_comment_views: number\n    discussionboard_reports: number\n    discussionboard_moderation_actions: number\n  }\n\n  export type Discussionboard_commentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recursive?: boolean | Discussionboard_commentsCountOutputTypeCountRecursiveArgs\n    discussionboard_comment_likes?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_comment_likesArgs\n    discussionboard_comment_edits?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_comment_editsArgs\n    discussionboard_comment_views?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_comment_viewsArgs\n    discussionboard_reports?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_reportsArgs\n    discussionboard_moderation_actions?: boolean | Discussionboard_commentsCountOutputTypeCountDiscussionboard_moderation_actionsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_commentsCountOutputType\n     */\n    select?: Discussionboard_commentsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountRecursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_comment_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_likesWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_comment_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_editsWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_comment_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_viewsWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * Discussionboard_commentsCountOutputType without action\n   */\n  export type Discussionboard_commentsCountOutputTypeCountDiscussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_reportsCountOutputType\n   */\n\n  export type Discussionboard_reportsCountOutputType = {\n    discussionboard_moderation_actions: number\n    discussionboard_warnings: number\n    discussionboard_audit_logs: number\n  }\n\n  export type Discussionboard_reportsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_moderation_actions?: boolean | Discussionboard_reportsCountOutputTypeCountDiscussionboard_moderation_actionsArgs\n    discussionboard_warnings?: boolean | Discussionboard_reportsCountOutputTypeCountDiscussionboard_warningsArgs\n    discussionboard_audit_logs?: boolean | Discussionboard_reportsCountOutputTypeCountDiscussionboard_audit_logsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_reportsCountOutputType without action\n   */\n  export type Discussionboard_reportsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_reportsCountOutputType\n     */\n    select?: Discussionboard_reportsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_reportsCountOutputType without action\n   */\n  export type Discussionboard_reportsCountOutputTypeCountDiscussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n  /**\n   * Discussionboard_reportsCountOutputType without action\n   */\n  export type Discussionboard_reportsCountOutputTypeCountDiscussionboard_warningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n  }\n\n  /**\n   * Discussionboard_reportsCountOutputType without action\n   */\n  export type Discussionboard_reportsCountOutputTypeCountDiscussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logsWhereInput\n  }\n\n\n  /**\n   * Count Type Discussionboard_moderation_actionsCountOutputType\n   */\n\n  export type Discussionboard_moderation_actionsCountOutputType = {\n    discussionboard_audit_logs: number\n  }\n\n  export type Discussionboard_moderation_actionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_audit_logs?: boolean | Discussionboard_moderation_actionsCountOutputTypeCountDiscussionboard_audit_logsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Discussionboard_moderation_actionsCountOutputType without action\n   */\n  export type Discussionboard_moderation_actionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Discussionboard_moderation_actionsCountOutputType\n     */\n    select?: Discussionboard_moderation_actionsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Discussionboard_moderation_actionsCountOutputType without action\n   */\n  export type Discussionboard_moderation_actionsCountOutputTypeCountDiscussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logsWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model discussionboard_sections\n   */\n\n  export type AggregateDiscussionboard_sections = {\n    _count: Discussionboard_sectionsCountAggregateOutputType | null\n    _avg: Discussionboard_sectionsAvgAggregateOutputType | null\n    _sum: Discussionboard_sectionsSumAggregateOutputType | null\n    _min: Discussionboard_sectionsMinAggregateOutputType | null\n    _max: Discussionboard_sectionsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_sectionsAvgAggregateOutputType = {\n    sort_order: number | null\n  }\n\n  export type Discussionboard_sectionsSumAggregateOutputType = {\n    sort_order: number | null\n  }\n\n  export type Discussionboard_sectionsMinAggregateOutputType = {\n    id: string | null\n    name: string | null\n    description: string | null\n    sort_order: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_sectionsMaxAggregateOutputType = {\n    id: string | null\n    name: string | null\n    description: string | null\n    sort_order: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_sectionsCountAggregateOutputType = {\n    id: number\n    name: number\n    description: number\n    sort_order: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_sectionsAvgAggregateInputType = {\n    sort_order?: true\n  }\n\n  export type Discussionboard_sectionsSumAggregateInputType = {\n    sort_order?: true\n  }\n\n  export type Discussionboard_sectionsMinAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    sort_order?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_sectionsMaxAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    sort_order?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_sectionsCountAggregateInputType = {\n    id?: true\n    name?: true\n    description?: true\n    sort_order?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_sectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_sections to aggregate.\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_sections to fetch.\n     */\n    orderBy?: discussionboard_sectionsOrderByWithRelationInput | discussionboard_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_sections.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_sections\n    **/\n    _count?: true | Discussionboard_sectionsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Discussionboard_sectionsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Discussionboard_sectionsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_sectionsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_sectionsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_sectionsAggregateType<T extends Discussionboard_sectionsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_sections]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_sections[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_sections[P]>\n  }\n\n\n\n\n  export type discussionboard_sectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_sectionsWhereInput\n    orderBy?: discussionboard_sectionsOrderByWithAggregationInput | discussionboard_sectionsOrderByWithAggregationInput[]\n    by: Discussionboard_sectionsScalarFieldEnum[] | Discussionboard_sectionsScalarFieldEnum\n    having?: discussionboard_sectionsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_sectionsCountAggregateInputType | true\n    _avg?: Discussionboard_sectionsAvgAggregateInputType\n    _sum?: Discussionboard_sectionsSumAggregateInputType\n    _min?: Discussionboard_sectionsMinAggregateInputType\n    _max?: Discussionboard_sectionsMaxAggregateInputType\n  }\n\n  export type Discussionboard_sectionsGroupByOutputType = {\n    id: string\n    name: string\n    description: string | null\n    sort_order: number\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_sectionsCountAggregateOutputType | null\n    _avg: Discussionboard_sectionsAvgAggregateOutputType | null\n    _sum: Discussionboard_sectionsSumAggregateOutputType | null\n    _min: Discussionboard_sectionsMinAggregateOutputType | null\n    _max: Discussionboard_sectionsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_sectionsGroupByPayload<T extends discussionboard_sectionsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_sectionsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_sectionsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_sectionsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_sectionsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_sectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    sort_order?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussionboard_boards?: boolean | discussionboard_sections$discussionboard_boardsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_sectionsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_sections\"]>\n\n  export type discussionboard_sectionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    sort_order?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_sections\"]>\n\n  export type discussionboard_sectionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    sort_order?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_sections\"]>\n\n  export type discussionboard_sectionsSelectScalar = {\n    id?: boolean\n    name?: boolean\n    description?: boolean\n    sort_order?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_sectionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"name\" | \"description\" | \"sort_order\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_sections\"]>\n  export type discussionboard_sectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_boards?: boolean | discussionboard_sections$discussionboard_boardsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_sectionsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_sectionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussionboard_sectionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussionboard_sectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_sections\"\n    objects: {\n      discussionboard_boards: Prisma.$discussionboard_boardsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for a section.\n       */\n      id: string\n      /**\n       * Section name - Implements the section/categorization requirement. Human-readable name to display to users (e.g., 'Politics'). 3NF maintained by storing only the atomic label here. Example: Section dropdown in UI.\n       */\n      name: string\n      /**\n       * Section description - Short text clarifying purpose or scope. 3NF compliant atomic text. Example: 'For regional and national issues.'\n       */\n      description: string | null\n      /**\n       * Explicit sort order for UI display - Allows admin-defined ordering of sections. Maintains 3NF by only storing atomic order number. Example: Integer used for section sorting.\n       */\n      sort_order: number\n      /**\n       * Creation timestamp - Implements audit and data retention requirement. 3NF as an atomic date-time value. Example: used for sorting/recently added filter.\n       */\n      created_at: Date\n      /**\n       * Last update timestamp - Used for audits and last-modified displays. Example: UI 'last updated' column.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_sections\"]>\n    composites: {}\n  }\n\n  type discussionboard_sectionsGetPayload<S extends boolean | null | undefined | discussionboard_sectionsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_sectionsPayload, S>\n\n  type discussionboard_sectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_sectionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_sectionsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_sectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_sections'], meta: { name: 'discussionboard_sections' } }\n    /**\n     * Find zero or one Discussionboard_sections that matches the filter.\n     * @param {discussionboard_sectionsFindUniqueArgs} args - Arguments to find a Discussionboard_sections\n     * @example\n     * // Get one Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_sectionsFindUniqueArgs>(args: SelectSubset<T, discussionboard_sectionsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_sections that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_sectionsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_sections\n     * @example\n     * // Get one Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_sectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_sectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_sections that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_sectionsFindFirstArgs} args - Arguments to find a Discussionboard_sections\n     * @example\n     * // Get one Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_sectionsFindFirstArgs>(args?: SelectSubset<T, discussionboard_sectionsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_sections that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_sectionsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_sections\n     * @example\n     * // Get one Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_sectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_sectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_sections that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_sectionsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.findMany()\n     * \n     * // Get first 10 Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_sectionsWithIdOnly = await prisma.discussionboard_sections.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_sectionsFindManyArgs>(args?: SelectSubset<T, discussionboard_sectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_sections.\n     * @param {discussionboard_sectionsCreateArgs} args - Arguments to create a Discussionboard_sections.\n     * @example\n     * // Create one Discussionboard_sections\n     * const Discussionboard_sections = await prisma.discussionboard_sections.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_sections\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_sectionsCreateArgs>(args: SelectSubset<T, discussionboard_sectionsCreateArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_sections.\n     * @param {discussionboard_sectionsCreateManyArgs} args - Arguments to create many Discussionboard_sections.\n     * @example\n     * // Create many Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_sectionsCreateManyArgs>(args?: SelectSubset<T, discussionboard_sectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_sections and returns the data saved in the database.\n     * @param {discussionboard_sectionsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_sections.\n     * @example\n     * // Create many Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_sections and only return the `id`\n     * const discussionboard_sectionsWithIdOnly = await prisma.discussionboard_sections.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_sectionsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_sectionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_sections.\n     * @param {discussionboard_sectionsDeleteArgs} args - Arguments to delete one Discussionboard_sections.\n     * @example\n     * // Delete one Discussionboard_sections\n     * const Discussionboard_sections = await prisma.discussionboard_sections.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_sections\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_sectionsDeleteArgs>(args: SelectSubset<T, discussionboard_sectionsDeleteArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_sections.\n     * @param {discussionboard_sectionsUpdateArgs} args - Arguments to update one Discussionboard_sections.\n     * @example\n     * // Update one Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_sectionsUpdateArgs>(args: SelectSubset<T, discussionboard_sectionsUpdateArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_sections.\n     * @param {discussionboard_sectionsDeleteManyArgs} args - Arguments to filter Discussionboard_sections to delete.\n     * @example\n     * // Delete a few Discussionboard_sections\n     * const { count } = await prisma.discussionboard_sections.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_sectionsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_sectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_sectionsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_sectionsUpdateManyArgs>(args: SelectSubset<T, discussionboard_sectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_sections and returns the data updated in the database.\n     * @param {discussionboard_sectionsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_sections.\n     * @example\n     * // Update many Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_sections and only return the `id`\n     * const discussionboard_sectionsWithIdOnly = await prisma.discussionboard_sections.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_sectionsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_sectionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_sections.\n     * @param {discussionboard_sectionsUpsertArgs} args - Arguments to update or create a Discussionboard_sections.\n     * @example\n     * // Update or create a Discussionboard_sections\n     * const discussionboard_sections = await prisma.discussionboard_sections.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_sections\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_sections we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_sectionsUpsertArgs>(args: SelectSubset<T, discussionboard_sectionsUpsertArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_sectionsCountArgs} args - Arguments to filter Discussionboard_sections to count.\n     * @example\n     * // Count the number of Discussionboard_sections\n     * const count = await prisma.discussionboard_sections.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_sections we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_sectionsCountArgs>(\n      args?: Subset<T, discussionboard_sectionsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_sectionsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_sectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_sectionsAggregateArgs>(args: Subset<T, Discussionboard_sectionsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_sectionsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_sections.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_sectionsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_sectionsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_sectionsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_sectionsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_sectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_sectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_sections model\n   */\n  readonly fields: discussionboard_sectionsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_sections.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_sectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_boards<T extends discussionboard_sections$discussionboard_boardsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_sections$discussionboard_boardsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_sections model\n   */\n  interface discussionboard_sectionsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_sections\", 'String'>\n    readonly name: FieldRef<\"discussionboard_sections\", 'String'>\n    readonly description: FieldRef<\"discussionboard_sections\", 'String'>\n    readonly sort_order: FieldRef<\"discussionboard_sections\", 'Int'>\n    readonly created_at: FieldRef<\"discussionboard_sections\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_sections\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_sections findUnique\n   */\n  export type discussionboard_sectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_sections to fetch.\n     */\n    where: discussionboard_sectionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_sections findUniqueOrThrow\n   */\n  export type discussionboard_sectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_sections to fetch.\n     */\n    where: discussionboard_sectionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_sections findFirst\n   */\n  export type discussionboard_sectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_sections to fetch.\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_sections to fetch.\n     */\n    orderBy?: discussionboard_sectionsOrderByWithRelationInput | discussionboard_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_sections.\n     */\n    cursor?: discussionboard_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_sections.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_sections.\n     */\n    distinct?: Discussionboard_sectionsScalarFieldEnum | Discussionboard_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_sections findFirstOrThrow\n   */\n  export type discussionboard_sectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_sections to fetch.\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_sections to fetch.\n     */\n    orderBy?: discussionboard_sectionsOrderByWithRelationInput | discussionboard_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_sections.\n     */\n    cursor?: discussionboard_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_sections.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_sections.\n     */\n    distinct?: Discussionboard_sectionsScalarFieldEnum | Discussionboard_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_sections findMany\n   */\n  export type discussionboard_sectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_sections to fetch.\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_sections to fetch.\n     */\n    orderBy?: discussionboard_sectionsOrderByWithRelationInput | discussionboard_sectionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_sections.\n     */\n    cursor?: discussionboard_sectionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_sections from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_sections.\n     */\n    skip?: number\n    distinct?: Discussionboard_sectionsScalarFieldEnum | Discussionboard_sectionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_sections create\n   */\n  export type discussionboard_sectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_sections.\n     */\n    data: XOR<discussionboard_sectionsCreateInput, discussionboard_sectionsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_sections createMany\n   */\n  export type discussionboard_sectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_sections.\n     */\n    data: discussionboard_sectionsCreateManyInput | discussionboard_sectionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_sections createManyAndReturn\n   */\n  export type discussionboard_sectionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_sections.\n     */\n    data: discussionboard_sectionsCreateManyInput | discussionboard_sectionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_sections update\n   */\n  export type discussionboard_sectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_sections.\n     */\n    data: XOR<discussionboard_sectionsUpdateInput, discussionboard_sectionsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_sections to update.\n     */\n    where: discussionboard_sectionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_sections updateMany\n   */\n  export type discussionboard_sectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_sections.\n     */\n    data: XOR<discussionboard_sectionsUpdateManyMutationInput, discussionboard_sectionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_sections to update\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * Limit how many discussionboard_sections to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_sections updateManyAndReturn\n   */\n  export type discussionboard_sectionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_sections.\n     */\n    data: XOR<discussionboard_sectionsUpdateManyMutationInput, discussionboard_sectionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_sections to update\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * Limit how many discussionboard_sections to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_sections upsert\n   */\n  export type discussionboard_sectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_sections to update in case it exists.\n     */\n    where: discussionboard_sectionsWhereUniqueInput\n    /**\n     * In case the discussionboard_sections found by the `where` argument doesn't exist, create a new discussionboard_sections with this data.\n     */\n    create: XOR<discussionboard_sectionsCreateInput, discussionboard_sectionsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_sections was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_sectionsUpdateInput, discussionboard_sectionsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_sections delete\n   */\n  export type discussionboard_sectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_sections to delete.\n     */\n    where: discussionboard_sectionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_sections deleteMany\n   */\n  export type discussionboard_sectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_sections to delete\n     */\n    where?: discussionboard_sectionsWhereInput\n    /**\n     * Limit how many discussionboard_sections to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_sections.discussionboard_boards\n   */\n  export type discussionboard_sections$discussionboard_boardsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    where?: discussionboard_boardsWhereInput\n    orderBy?: discussionboard_boardsOrderByWithRelationInput | discussionboard_boardsOrderByWithRelationInput[]\n    cursor?: discussionboard_boardsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_boardsScalarFieldEnum | Discussionboard_boardsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_sections without action\n   */\n  export type discussionboard_sectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_sections\n     */\n    select?: discussionboard_sectionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_sections\n     */\n    omit?: discussionboard_sectionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_sectionsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_boards\n   */\n\n  export type AggregateDiscussionboard_boards = {\n    _count: Discussionboard_boardsCountAggregateOutputType | null\n    _min: Discussionboard_boardsMinAggregateOutputType | null\n    _max: Discussionboard_boardsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_boardsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_section_id: string | null\n    name: string | null\n    description: string | null\n    rules: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_boardsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_section_id: string | null\n    name: string | null\n    description: string | null\n    rules: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_boardsCountAggregateOutputType = {\n    id: number\n    discussionboard_section_id: number\n    name: number\n    description: number\n    rules: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_boardsMinAggregateInputType = {\n    id?: true\n    discussionboard_section_id?: true\n    name?: true\n    description?: true\n    rules?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_boardsMaxAggregateInputType = {\n    id?: true\n    discussionboard_section_id?: true\n    name?: true\n    description?: true\n    rules?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_boardsCountAggregateInputType = {\n    id?: true\n    discussionboard_section_id?: true\n    name?: true\n    description?: true\n    rules?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_boardsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_boards to aggregate.\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_boards to fetch.\n     */\n    orderBy?: discussionboard_boardsOrderByWithRelationInput | discussionboard_boardsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_boardsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_boards from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_boards.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_boards\n    **/\n    _count?: true | Discussionboard_boardsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_boardsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_boardsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_boardsAggregateType<T extends Discussionboard_boardsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_boards]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_boards[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_boards[P]>\n  }\n\n\n\n\n  export type discussionboard_boardsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_boardsWhereInput\n    orderBy?: discussionboard_boardsOrderByWithAggregationInput | discussionboard_boardsOrderByWithAggregationInput[]\n    by: Discussionboard_boardsScalarFieldEnum[] | Discussionboard_boardsScalarFieldEnum\n    having?: discussionboard_boardsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_boardsCountAggregateInputType | true\n    _min?: Discussionboard_boardsMinAggregateInputType\n    _max?: Discussionboard_boardsMaxAggregateInputType\n  }\n\n  export type Discussionboard_boardsGroupByOutputType = {\n    id: string\n    discussionboard_section_id: string\n    name: string\n    description: string | null\n    rules: string | null\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_boardsCountAggregateOutputType | null\n    _min: Discussionboard_boardsMinAggregateOutputType | null\n    _max: Discussionboard_boardsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_boardsGroupByPayload<T extends discussionboard_boardsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_boardsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_boardsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_boardsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_boardsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_boardsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    rules?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_discussionboard_boards_section?: boolean | discussionboard_sectionsDefaultArgs<ExtArgs>\n    discussionboard_board_subscriptions?: boolean | discussionboard_boards$discussionboard_board_subscriptionsArgs<ExtArgs>\n    discussionboard_board_settings?: boolean | discussionboard_boards$discussionboard_board_settingsArgs<ExtArgs>\n    discussionboard_posts?: boolean | discussionboard_boards$discussionboard_postsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_boardsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_boards\"]>\n\n  export type discussionboard_boardsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    rules?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_discussionboard_boards_section?: boolean | discussionboard_sectionsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_boards\"]>\n\n  export type discussionboard_boardsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    rules?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_discussionboard_boards_section?: boolean | discussionboard_sectionsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_boards\"]>\n\n  export type discussionboard_boardsSelectScalar = {\n    id?: boolean\n    discussionboard_section_id?: boolean\n    name?: boolean\n    description?: boolean\n    rules?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_boardsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_section_id\" | \"name\" | \"description\" | \"rules\" | \"is_active\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_boards\"]>\n  export type discussionboard_boardsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussionboard_boards_section?: boolean | discussionboard_sectionsDefaultArgs<ExtArgs>\n    discussionboard_board_subscriptions?: boolean | discussionboard_boards$discussionboard_board_subscriptionsArgs<ExtArgs>\n    discussionboard_board_settings?: boolean | discussionboard_boards$discussionboard_board_settingsArgs<ExtArgs>\n    discussionboard_posts?: boolean | discussionboard_boards$discussionboard_postsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_boardsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_boardsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussionboard_boards_section?: boolean | discussionboard_sectionsDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_boardsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_discussionboard_boards_section?: boolean | discussionboard_sectionsDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_boardsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_boards\"\n    objects: {\n      fk_discussionboard_boards_section: Prisma.$discussionboard_sectionsPayload<ExtArgs>\n      discussionboard_board_subscriptions: Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>[]\n      discussionboard_board_settings: Prisma.$discussionboard_board_settingsPayload<ExtArgs> | null\n      discussionboard_posts: Prisma.$discussionboard_postsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for a board.\n       */\n      id: string\n      /**\n       * Belonged section's {@link discussionboard_sections.id} - Links board to its section for groupings. Required to ensure boards are organized. Maintains referential integrity and 3NF.\n       */\n      discussionboard_section_id: string\n      /**\n       * Board name - Implements the logical board separation requirement. Human-readable board title (e.g., 'Elections 2025'). Strictly atomic per 3NF. Example: Board selector UI.\n       */\n      name: string\n      /**\n       * Board description - Explanatory text for users to understand board's focus. Enforces 3NF by storing only description here. Example: Board hover tooltip.\n       */\n      description: string | null\n      /**\n       * Custom board-specific rules (markdown/plaintext) - Implements requirement for community rules per board. Maintains 3NF. Example: Board custom code of conduct.\n       */\n      rules: string | null\n      /**\n       * Active/inactive flag - Used by admins to hide inactive/archived boards. Follows 3NF by being an atomic status indicator. Example: Board visibility toggle.\n       */\n      is_active: boolean\n      /**\n       * Creation timestamp for the board - For audits, logs, and recency filters. 3NF atomic timestamp. Example: Used in new board creation tracking.\n       */\n      created_at: Date\n      /**\n       * Last updated time - For audit trail and change tracking. Example: UI listing.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_boards\"]>\n    composites: {}\n  }\n\n  type discussionboard_boardsGetPayload<S extends boolean | null | undefined | discussionboard_boardsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_boardsPayload, S>\n\n  type discussionboard_boardsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_boardsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_boardsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_boardsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_boards'], meta: { name: 'discussionboard_boards' } }\n    /**\n     * Find zero or one Discussionboard_boards that matches the filter.\n     * @param {discussionboard_boardsFindUniqueArgs} args - Arguments to find a Discussionboard_boards\n     * @example\n     * // Get one Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_boardsFindUniqueArgs>(args: SelectSubset<T, discussionboard_boardsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_boards that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_boardsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_boards\n     * @example\n     * // Get one Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_boardsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_boardsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_boards that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_boardsFindFirstArgs} args - Arguments to find a Discussionboard_boards\n     * @example\n     * // Get one Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_boardsFindFirstArgs>(args?: SelectSubset<T, discussionboard_boardsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_boards that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_boardsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_boards\n     * @example\n     * // Get one Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_boardsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_boardsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_boards that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_boardsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.findMany()\n     * \n     * // Get first 10 Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_boardsWithIdOnly = await prisma.discussionboard_boards.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_boardsFindManyArgs>(args?: SelectSubset<T, discussionboard_boardsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_boards.\n     * @param {discussionboard_boardsCreateArgs} args - Arguments to create a Discussionboard_boards.\n     * @example\n     * // Create one Discussionboard_boards\n     * const Discussionboard_boards = await prisma.discussionboard_boards.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_boards\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_boardsCreateArgs>(args: SelectSubset<T, discussionboard_boardsCreateArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_boards.\n     * @param {discussionboard_boardsCreateManyArgs} args - Arguments to create many Discussionboard_boards.\n     * @example\n     * // Create many Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_boardsCreateManyArgs>(args?: SelectSubset<T, discussionboard_boardsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_boards and returns the data saved in the database.\n     * @param {discussionboard_boardsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_boards.\n     * @example\n     * // Create many Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_boards and only return the `id`\n     * const discussionboard_boardsWithIdOnly = await prisma.discussionboard_boards.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_boardsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_boardsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_boards.\n     * @param {discussionboard_boardsDeleteArgs} args - Arguments to delete one Discussionboard_boards.\n     * @example\n     * // Delete one Discussionboard_boards\n     * const Discussionboard_boards = await prisma.discussionboard_boards.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_boards\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_boardsDeleteArgs>(args: SelectSubset<T, discussionboard_boardsDeleteArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_boards.\n     * @param {discussionboard_boardsUpdateArgs} args - Arguments to update one Discussionboard_boards.\n     * @example\n     * // Update one Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_boardsUpdateArgs>(args: SelectSubset<T, discussionboard_boardsUpdateArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_boards.\n     * @param {discussionboard_boardsDeleteManyArgs} args - Arguments to filter Discussionboard_boards to delete.\n     * @example\n     * // Delete a few Discussionboard_boards\n     * const { count } = await prisma.discussionboard_boards.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_boardsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_boardsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_boards.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_boardsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_boardsUpdateManyArgs>(args: SelectSubset<T, discussionboard_boardsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_boards and returns the data updated in the database.\n     * @param {discussionboard_boardsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_boards.\n     * @example\n     * // Update many Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_boards and only return the `id`\n     * const discussionboard_boardsWithIdOnly = await prisma.discussionboard_boards.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_boardsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_boardsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_boards.\n     * @param {discussionboard_boardsUpsertArgs} args - Arguments to update or create a Discussionboard_boards.\n     * @example\n     * // Update or create a Discussionboard_boards\n     * const discussionboard_boards = await prisma.discussionboard_boards.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_boards\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_boards we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_boardsUpsertArgs>(args: SelectSubset<T, discussionboard_boardsUpsertArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_boards.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_boardsCountArgs} args - Arguments to filter Discussionboard_boards to count.\n     * @example\n     * // Count the number of Discussionboard_boards\n     * const count = await prisma.discussionboard_boards.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_boards we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_boardsCountArgs>(\n      args?: Subset<T, discussionboard_boardsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_boardsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_boards.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_boardsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_boardsAggregateArgs>(args: Subset<T, Discussionboard_boardsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_boardsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_boards.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_boardsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_boardsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_boardsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_boardsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_boardsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_boardsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_boards model\n   */\n  readonly fields: discussionboard_boardsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_boards.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_boardsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_discussionboard_boards_section<T extends discussionboard_sectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_sectionsDefaultArgs<ExtArgs>>): Prisma__discussionboard_sectionsClient<$Result.GetResult<Prisma.$discussionboard_sectionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussionboard_board_subscriptions<T extends discussionboard_boards$discussionboard_board_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_boards$discussionboard_board_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_board_settings<T extends discussionboard_boards$discussionboard_board_settingsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_boards$discussionboard_board_settingsArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_posts<T extends discussionboard_boards$discussionboard_postsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_boards$discussionboard_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_boards model\n   */\n  interface discussionboard_boardsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_boards\", 'String'>\n    readonly discussionboard_section_id: FieldRef<\"discussionboard_boards\", 'String'>\n    readonly name: FieldRef<\"discussionboard_boards\", 'String'>\n    readonly description: FieldRef<\"discussionboard_boards\", 'String'>\n    readonly rules: FieldRef<\"discussionboard_boards\", 'String'>\n    readonly is_active: FieldRef<\"discussionboard_boards\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_boards\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_boards\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_boards findUnique\n   */\n  export type discussionboard_boardsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_boards to fetch.\n     */\n    where: discussionboard_boardsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_boards findUniqueOrThrow\n   */\n  export type discussionboard_boardsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_boards to fetch.\n     */\n    where: discussionboard_boardsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_boards findFirst\n   */\n  export type discussionboard_boardsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_boards to fetch.\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_boards to fetch.\n     */\n    orderBy?: discussionboard_boardsOrderByWithRelationInput | discussionboard_boardsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_boards.\n     */\n    cursor?: discussionboard_boardsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_boards from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_boards.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_boards.\n     */\n    distinct?: Discussionboard_boardsScalarFieldEnum | Discussionboard_boardsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_boards findFirstOrThrow\n   */\n  export type discussionboard_boardsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_boards to fetch.\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_boards to fetch.\n     */\n    orderBy?: discussionboard_boardsOrderByWithRelationInput | discussionboard_boardsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_boards.\n     */\n    cursor?: discussionboard_boardsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_boards from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_boards.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_boards.\n     */\n    distinct?: Discussionboard_boardsScalarFieldEnum | Discussionboard_boardsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_boards findMany\n   */\n  export type discussionboard_boardsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_boards to fetch.\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_boards to fetch.\n     */\n    orderBy?: discussionboard_boardsOrderByWithRelationInput | discussionboard_boardsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_boards.\n     */\n    cursor?: discussionboard_boardsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_boards from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_boards.\n     */\n    skip?: number\n    distinct?: Discussionboard_boardsScalarFieldEnum | Discussionboard_boardsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_boards create\n   */\n  export type discussionboard_boardsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_boards.\n     */\n    data: XOR<discussionboard_boardsCreateInput, discussionboard_boardsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_boards createMany\n   */\n  export type discussionboard_boardsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_boards.\n     */\n    data: discussionboard_boardsCreateManyInput | discussionboard_boardsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_boards createManyAndReturn\n   */\n  export type discussionboard_boardsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_boards.\n     */\n    data: discussionboard_boardsCreateManyInput | discussionboard_boardsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_boards update\n   */\n  export type discussionboard_boardsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_boards.\n     */\n    data: XOR<discussionboard_boardsUpdateInput, discussionboard_boardsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_boards to update.\n     */\n    where: discussionboard_boardsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_boards updateMany\n   */\n  export type discussionboard_boardsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_boards.\n     */\n    data: XOR<discussionboard_boardsUpdateManyMutationInput, discussionboard_boardsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_boards to update\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * Limit how many discussionboard_boards to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_boards updateManyAndReturn\n   */\n  export type discussionboard_boardsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_boards.\n     */\n    data: XOR<discussionboard_boardsUpdateManyMutationInput, discussionboard_boardsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_boards to update\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * Limit how many discussionboard_boards to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_boards upsert\n   */\n  export type discussionboard_boardsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_boards to update in case it exists.\n     */\n    where: discussionboard_boardsWhereUniqueInput\n    /**\n     * In case the discussionboard_boards found by the `where` argument doesn't exist, create a new discussionboard_boards with this data.\n     */\n    create: XOR<discussionboard_boardsCreateInput, discussionboard_boardsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_boards was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_boardsUpdateInput, discussionboard_boardsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_boards delete\n   */\n  export type discussionboard_boardsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_boards to delete.\n     */\n    where: discussionboard_boardsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_boards deleteMany\n   */\n  export type discussionboard_boardsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_boards to delete\n     */\n    where?: discussionboard_boardsWhereInput\n    /**\n     * Limit how many discussionboard_boards to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_boards.discussionboard_board_subscriptions\n   */\n  export type discussionboard_boards$discussionboard_board_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    where?: discussionboard_board_subscriptionsWhereInput\n    orderBy?: discussionboard_board_subscriptionsOrderByWithRelationInput | discussionboard_board_subscriptionsOrderByWithRelationInput[]\n    cursor?: discussionboard_board_subscriptionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_board_subscriptionsScalarFieldEnum | Discussionboard_board_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_boards.discussionboard_board_settings\n   */\n  export type discussionboard_boards$discussionboard_board_settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    where?: discussionboard_board_settingsWhereInput\n  }\n\n  /**\n   * discussionboard_boards.discussionboard_posts\n   */\n  export type discussionboard_boards$discussionboard_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    where?: discussionboard_postsWhereInput\n    orderBy?: discussionboard_postsOrderByWithRelationInput | discussionboard_postsOrderByWithRelationInput[]\n    cursor?: discussionboard_postsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_postsScalarFieldEnum | Discussionboard_postsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_boards without action\n   */\n  export type discussionboard_boardsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_boards\n     */\n    select?: discussionboard_boardsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_boards\n     */\n    omit?: discussionboard_boardsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_boardsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_tags\n   */\n\n  export type AggregateDiscussionboard_tags = {\n    _count: Discussionboard_tagsCountAggregateOutputType | null\n    _min: Discussionboard_tagsMinAggregateOutputType | null\n    _max: Discussionboard_tagsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_tagsMinAggregateOutputType = {\n    id: string | null\n    tag: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_tagsMaxAggregateOutputType = {\n    id: string | null\n    tag: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_tagsCountAggregateOutputType = {\n    id: number\n    tag: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_tagsMinAggregateInputType = {\n    id?: true\n    tag?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_tagsMaxAggregateInputType = {\n    id?: true\n    tag?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_tagsCountAggregateInputType = {\n    id?: true\n    tag?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_tagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_tags to aggregate.\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_tags to fetch.\n     */\n    orderBy?: discussionboard_tagsOrderByWithRelationInput | discussionboard_tagsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_tagsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_tags\n    **/\n    _count?: true | Discussionboard_tagsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_tagsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_tagsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_tagsAggregateType<T extends Discussionboard_tagsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_tags]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_tags[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_tags[P]>\n  }\n\n\n\n\n  export type discussionboard_tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_tagsWhereInput\n    orderBy?: discussionboard_tagsOrderByWithAggregationInput | discussionboard_tagsOrderByWithAggregationInput[]\n    by: Discussionboard_tagsScalarFieldEnum[] | Discussionboard_tagsScalarFieldEnum\n    having?: discussionboard_tagsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_tagsCountAggregateInputType | true\n    _min?: Discussionboard_tagsMinAggregateInputType\n    _max?: Discussionboard_tagsMaxAggregateInputType\n  }\n\n  export type Discussionboard_tagsGroupByOutputType = {\n    id: string\n    tag: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_tagsCountAggregateOutputType | null\n    _min: Discussionboard_tagsMinAggregateOutputType | null\n    _max: Discussionboard_tagsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_tagsGroupByPayload<T extends discussionboard_tagsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_tagsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_tagsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_tagsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_tagsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    tag?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_tags\"]>\n\n  export type discussionboard_tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    tag?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_tags\"]>\n\n  export type discussionboard_tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    tag?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_tags\"]>\n\n  export type discussionboard_tagsSelectScalar = {\n    id?: boolean\n    tag?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"tag\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_tags\"]>\n\n  export type $discussionboard_tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_tags\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique tag identifier.\n       */\n      id: string\n      /**\n       * Tag value - Human-friendly tag (e.g., 'policy', 'economy'). Implements tag definition requirement. Enforces normalization by keeping atomic labels only here. Example: Tag chips in UI.\n       */\n      tag: string\n      /**\n       * Tag description - Explains scope/purpose of tag for admin and users. Enforces 3NF. Example: Tag hover info.\n       */\n      description: string | null\n      /**\n       * Tag creation timestamp - Required for record keeping. Maintains 3NF. Example: Used for sorting tags by newest.\n       */\n      created_at: Date\n      /**\n       * Last tag update time - For audit logs and change history in admin UI. 3NF compliant.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_tags\"]>\n    composites: {}\n  }\n\n  type discussionboard_tagsGetPayload<S extends boolean | null | undefined | discussionboard_tagsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_tagsPayload, S>\n\n  type discussionboard_tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_tagsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_tags'], meta: { name: 'discussionboard_tags' } }\n    /**\n     * Find zero or one Discussionboard_tags that matches the filter.\n     * @param {discussionboard_tagsFindUniqueArgs} args - Arguments to find a Discussionboard_tags\n     * @example\n     * // Get one Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_tagsFindUniqueArgs>(args: SelectSubset<T, discussionboard_tagsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_tags that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_tagsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_tags\n     * @example\n     * // Get one Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_tags that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_tagsFindFirstArgs} args - Arguments to find a Discussionboard_tags\n     * @example\n     * // Get one Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_tagsFindFirstArgs>(args?: SelectSubset<T, discussionboard_tagsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_tags that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_tagsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_tags\n     * @example\n     * // Get one Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_tags that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_tagsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.findMany()\n     * \n     * // Get first 10 Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_tagsWithIdOnly = await prisma.discussionboard_tags.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_tagsFindManyArgs>(args?: SelectSubset<T, discussionboard_tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_tags.\n     * @param {discussionboard_tagsCreateArgs} args - Arguments to create a Discussionboard_tags.\n     * @example\n     * // Create one Discussionboard_tags\n     * const Discussionboard_tags = await prisma.discussionboard_tags.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_tags\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_tagsCreateArgs>(args: SelectSubset<T, discussionboard_tagsCreateArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_tags.\n     * @param {discussionboard_tagsCreateManyArgs} args - Arguments to create many Discussionboard_tags.\n     * @example\n     * // Create many Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_tagsCreateManyArgs>(args?: SelectSubset<T, discussionboard_tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_tags and returns the data saved in the database.\n     * @param {discussionboard_tagsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_tags.\n     * @example\n     * // Create many Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_tags and only return the `id`\n     * const discussionboard_tagsWithIdOnly = await prisma.discussionboard_tags.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_tags.\n     * @param {discussionboard_tagsDeleteArgs} args - Arguments to delete one Discussionboard_tags.\n     * @example\n     * // Delete one Discussionboard_tags\n     * const Discussionboard_tags = await prisma.discussionboard_tags.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_tags\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_tagsDeleteArgs>(args: SelectSubset<T, discussionboard_tagsDeleteArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_tags.\n     * @param {discussionboard_tagsUpdateArgs} args - Arguments to update one Discussionboard_tags.\n     * @example\n     * // Update one Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_tagsUpdateArgs>(args: SelectSubset<T, discussionboard_tagsUpdateArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_tags.\n     * @param {discussionboard_tagsDeleteManyArgs} args - Arguments to filter Discussionboard_tags to delete.\n     * @example\n     * // Delete a few Discussionboard_tags\n     * const { count } = await prisma.discussionboard_tags.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_tagsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_tagsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_tagsUpdateManyArgs>(args: SelectSubset<T, discussionboard_tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_tags and returns the data updated in the database.\n     * @param {discussionboard_tagsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_tags.\n     * @example\n     * // Update many Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_tags and only return the `id`\n     * const discussionboard_tagsWithIdOnly = await prisma.discussionboard_tags.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_tags.\n     * @param {discussionboard_tagsUpsertArgs} args - Arguments to update or create a Discussionboard_tags.\n     * @example\n     * // Update or create a Discussionboard_tags\n     * const discussionboard_tags = await prisma.discussionboard_tags.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_tags\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_tags we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_tagsUpsertArgs>(args: SelectSubset<T, discussionboard_tagsUpsertArgs<ExtArgs>>): Prisma__discussionboard_tagsClient<$Result.GetResult<Prisma.$discussionboard_tagsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_tagsCountArgs} args - Arguments to filter Discussionboard_tags to count.\n     * @example\n     * // Count the number of Discussionboard_tags\n     * const count = await prisma.discussionboard_tags.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_tags we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_tagsCountArgs>(\n      args?: Subset<T, discussionboard_tagsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_tagsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_tagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_tagsAggregateArgs>(args: Subset<T, Discussionboard_tagsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_tagsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_tags.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_tagsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_tagsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_tagsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_tagsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_tagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_tags model\n   */\n  readonly fields: discussionboard_tagsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_tags.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_tags model\n   */\n  interface discussionboard_tagsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_tags\", 'String'>\n    readonly tag: FieldRef<\"discussionboard_tags\", 'String'>\n    readonly description: FieldRef<\"discussionboard_tags\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_tags\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_tags\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_tags findUnique\n   */\n  export type discussionboard_tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_tags to fetch.\n     */\n    where: discussionboard_tagsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_tags findUniqueOrThrow\n   */\n  export type discussionboard_tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_tags to fetch.\n     */\n    where: discussionboard_tagsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_tags findFirst\n   */\n  export type discussionboard_tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_tags to fetch.\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_tags to fetch.\n     */\n    orderBy?: discussionboard_tagsOrderByWithRelationInput | discussionboard_tagsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_tags.\n     */\n    cursor?: discussionboard_tagsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_tags.\n     */\n    distinct?: Discussionboard_tagsScalarFieldEnum | Discussionboard_tagsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_tags findFirstOrThrow\n   */\n  export type discussionboard_tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_tags to fetch.\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_tags to fetch.\n     */\n    orderBy?: discussionboard_tagsOrderByWithRelationInput | discussionboard_tagsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_tags.\n     */\n    cursor?: discussionboard_tagsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_tags.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_tags.\n     */\n    distinct?: Discussionboard_tagsScalarFieldEnum | Discussionboard_tagsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_tags findMany\n   */\n  export type discussionboard_tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_tags to fetch.\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_tags to fetch.\n     */\n    orderBy?: discussionboard_tagsOrderByWithRelationInput | discussionboard_tagsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_tags.\n     */\n    cursor?: discussionboard_tagsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_tags from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_tags.\n     */\n    skip?: number\n    distinct?: Discussionboard_tagsScalarFieldEnum | Discussionboard_tagsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_tags create\n   */\n  export type discussionboard_tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_tags.\n     */\n    data: XOR<discussionboard_tagsCreateInput, discussionboard_tagsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_tags createMany\n   */\n  export type discussionboard_tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_tags.\n     */\n    data: discussionboard_tagsCreateManyInput | discussionboard_tagsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_tags createManyAndReturn\n   */\n  export type discussionboard_tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_tags.\n     */\n    data: discussionboard_tagsCreateManyInput | discussionboard_tagsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_tags update\n   */\n  export type discussionboard_tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_tags.\n     */\n    data: XOR<discussionboard_tagsUpdateInput, discussionboard_tagsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_tags to update.\n     */\n    where: discussionboard_tagsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_tags updateMany\n   */\n  export type discussionboard_tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_tags.\n     */\n    data: XOR<discussionboard_tagsUpdateManyMutationInput, discussionboard_tagsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_tags to update\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * Limit how many discussionboard_tags to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_tags updateManyAndReturn\n   */\n  export type discussionboard_tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_tags.\n     */\n    data: XOR<discussionboard_tagsUpdateManyMutationInput, discussionboard_tagsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_tags to update\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * Limit how many discussionboard_tags to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_tags upsert\n   */\n  export type discussionboard_tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_tags to update in case it exists.\n     */\n    where: discussionboard_tagsWhereUniqueInput\n    /**\n     * In case the discussionboard_tags found by the `where` argument doesn't exist, create a new discussionboard_tags with this data.\n     */\n    create: XOR<discussionboard_tagsCreateInput, discussionboard_tagsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_tags was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_tagsUpdateInput, discussionboard_tagsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_tags delete\n   */\n  export type discussionboard_tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_tags to delete.\n     */\n    where: discussionboard_tagsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_tags deleteMany\n   */\n  export type discussionboard_tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_tags to delete\n     */\n    where?: discussionboard_tagsWhereInput\n    /**\n     * Limit how many discussionboard_tags to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_tags without action\n   */\n  export type discussionboard_tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_tags\n     */\n    select?: discussionboard_tagsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_tags\n     */\n    omit?: discussionboard_tagsOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_board_subscriptions\n   */\n\n  export type AggregateDiscussionboard_board_subscriptions = {\n    _count: Discussionboard_board_subscriptionsCountAggregateOutputType | null\n    _min: Discussionboard_board_subscriptionsMinAggregateOutputType | null\n    _max: Discussionboard_board_subscriptionsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_board_subscriptionsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_board_id: string | null\n    discussionboard_member_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_board_subscriptionsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_board_id: string | null\n    discussionboard_member_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_board_subscriptionsCountAggregateOutputType = {\n    id: number\n    discussionboard_board_id: number\n    discussionboard_member_id: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_board_subscriptionsMinAggregateInputType = {\n    id?: true\n    discussionboard_board_id?: true\n    discussionboard_member_id?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_board_subscriptionsMaxAggregateInputType = {\n    id?: true\n    discussionboard_board_id?: true\n    discussionboard_member_id?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_board_subscriptionsCountAggregateInputType = {\n    id?: true\n    discussionboard_board_id?: true\n    discussionboard_member_id?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_board_subscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_board_subscriptions to aggregate.\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_subscriptions to fetch.\n     */\n    orderBy?: discussionboard_board_subscriptionsOrderByWithRelationInput | discussionboard_board_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_board_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_board_subscriptions\n    **/\n    _count?: true | Discussionboard_board_subscriptionsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_board_subscriptionsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_board_subscriptionsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_board_subscriptionsAggregateType<T extends Discussionboard_board_subscriptionsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_board_subscriptions]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_board_subscriptions[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_board_subscriptions[P]>\n  }\n\n\n\n\n  export type discussionboard_board_subscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_board_subscriptionsWhereInput\n    orderBy?: discussionboard_board_subscriptionsOrderByWithAggregationInput | discussionboard_board_subscriptionsOrderByWithAggregationInput[]\n    by: Discussionboard_board_subscriptionsScalarFieldEnum[] | Discussionboard_board_subscriptionsScalarFieldEnum\n    having?: discussionboard_board_subscriptionsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_board_subscriptionsCountAggregateInputType | true\n    _min?: Discussionboard_board_subscriptionsMinAggregateInputType\n    _max?: Discussionboard_board_subscriptionsMaxAggregateInputType\n  }\n\n  export type Discussionboard_board_subscriptionsGroupByOutputType = {\n    id: string\n    discussionboard_board_id: string\n    discussionboard_member_id: string\n    created_at: Date\n    _count: Discussionboard_board_subscriptionsCountAggregateOutputType | null\n    _min: Discussionboard_board_subscriptionsMinAggregateOutputType | null\n    _max: Discussionboard_board_subscriptionsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_board_subscriptionsGroupByPayload<T extends discussionboard_board_subscriptionsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_board_subscriptionsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_board_subscriptionsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_board_subscriptionsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_board_subscriptionsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_board_subscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_board_id?: boolean\n    discussionboard_member_id?: boolean\n    created_at?: boolean\n    fk_db_board_subs_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    fk_db_board_subs_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_board_subscriptions\"]>\n\n  export type discussionboard_board_subscriptionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_board_id?: boolean\n    discussionboard_member_id?: boolean\n    created_at?: boolean\n    fk_db_board_subs_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    fk_db_board_subs_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_board_subscriptions\"]>\n\n  export type discussionboard_board_subscriptionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_board_id?: boolean\n    discussionboard_member_id?: boolean\n    created_at?: boolean\n    fk_db_board_subs_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    fk_db_board_subs_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_board_subscriptions\"]>\n\n  export type discussionboard_board_subscriptionsSelectScalar = {\n    id?: boolean\n    discussionboard_board_id?: boolean\n    discussionboard_member_id?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_board_subscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_board_id\" | \"discussionboard_member_id\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_board_subscriptions\"]>\n  export type discussionboard_board_subscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_board_subs_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    fk_db_board_subs_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_board_subscriptionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_board_subs_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    fk_db_board_subs_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_board_subscriptionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_board_subs_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    fk_db_board_subs_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_board_subscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_board_subscriptions\"\n    objects: {\n      fk_db_board_subs_board: Prisma.$discussionboard_boardsPayload<ExtArgs>\n      fk_db_board_subs_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique subscription ID.\n       */\n      id: string\n      /**\n       * Subscribed board's {@link discussionboard_boards.id} - Enforces which board is subscribed. Enforces 3NF as atomic foreign key. Example: All subscriptions for a board.\n       */\n      discussionboard_board_id: string\n      /**\n       * Subscribed member's {@link discussionboard_members.id} (from Actors component) - Links subscription to member (ALREADY CREATED in Actors schema). 3NF: purely as a foreign key. Example: All user subscriptions.\n       */\n      discussionboard_member_id: string\n      /**\n       * Time of subscription - For audit/logging, 3NF as single timestamp. Example: Recent subscriber statistics.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_board_subscriptions\"]>\n    composites: {}\n  }\n\n  type discussionboard_board_subscriptionsGetPayload<S extends boolean | null | undefined | discussionboard_board_subscriptionsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload, S>\n\n  type discussionboard_board_subscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_board_subscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_board_subscriptionsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_board_subscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_board_subscriptions'], meta: { name: 'discussionboard_board_subscriptions' } }\n    /**\n     * Find zero or one Discussionboard_board_subscriptions that matches the filter.\n     * @param {discussionboard_board_subscriptionsFindUniqueArgs} args - Arguments to find a Discussionboard_board_subscriptions\n     * @example\n     * // Get one Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_board_subscriptionsFindUniqueArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_board_subscriptions that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_board_subscriptionsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_board_subscriptions\n     * @example\n     * // Get one Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_board_subscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_board_subscriptions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_subscriptionsFindFirstArgs} args - Arguments to find a Discussionboard_board_subscriptions\n     * @example\n     * // Get one Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_board_subscriptionsFindFirstArgs>(args?: SelectSubset<T, discussionboard_board_subscriptionsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_board_subscriptions that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_subscriptionsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_board_subscriptions\n     * @example\n     * // Get one Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_board_subscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_board_subscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_board_subscriptions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_subscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findMany()\n     * \n     * // Get first 10 Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_board_subscriptionsWithIdOnly = await prisma.discussionboard_board_subscriptions.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_board_subscriptionsFindManyArgs>(args?: SelectSubset<T, discussionboard_board_subscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_board_subscriptions.\n     * @param {discussionboard_board_subscriptionsCreateArgs} args - Arguments to create a Discussionboard_board_subscriptions.\n     * @example\n     * // Create one Discussionboard_board_subscriptions\n     * const Discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_board_subscriptions\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_board_subscriptionsCreateArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsCreateArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_board_subscriptions.\n     * @param {discussionboard_board_subscriptionsCreateManyArgs} args - Arguments to create many Discussionboard_board_subscriptions.\n     * @example\n     * // Create many Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_board_subscriptionsCreateManyArgs>(args?: SelectSubset<T, discussionboard_board_subscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_board_subscriptions and returns the data saved in the database.\n     * @param {discussionboard_board_subscriptionsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_board_subscriptions.\n     * @example\n     * // Create many Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_board_subscriptions and only return the `id`\n     * const discussionboard_board_subscriptionsWithIdOnly = await prisma.discussionboard_board_subscriptions.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_board_subscriptionsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_board_subscriptionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_board_subscriptions.\n     * @param {discussionboard_board_subscriptionsDeleteArgs} args - Arguments to delete one Discussionboard_board_subscriptions.\n     * @example\n     * // Delete one Discussionboard_board_subscriptions\n     * const Discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_board_subscriptions\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_board_subscriptionsDeleteArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsDeleteArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_board_subscriptions.\n     * @param {discussionboard_board_subscriptionsUpdateArgs} args - Arguments to update one Discussionboard_board_subscriptions.\n     * @example\n     * // Update one Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_board_subscriptionsUpdateArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsUpdateArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_board_subscriptions.\n     * @param {discussionboard_board_subscriptionsDeleteManyArgs} args - Arguments to filter Discussionboard_board_subscriptions to delete.\n     * @example\n     * // Delete a few Discussionboard_board_subscriptions\n     * const { count } = await prisma.discussionboard_board_subscriptions.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_board_subscriptionsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_board_subscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_board_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_subscriptionsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_board_subscriptionsUpdateManyArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_board_subscriptions and returns the data updated in the database.\n     * @param {discussionboard_board_subscriptionsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_board_subscriptions.\n     * @example\n     * // Update many Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_board_subscriptions and only return the `id`\n     * const discussionboard_board_subscriptionsWithIdOnly = await prisma.discussionboard_board_subscriptions.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_board_subscriptionsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_board_subscriptions.\n     * @param {discussionboard_board_subscriptionsUpsertArgs} args - Arguments to update or create a Discussionboard_board_subscriptions.\n     * @example\n     * // Update or create a Discussionboard_board_subscriptions\n     * const discussionboard_board_subscriptions = await prisma.discussionboard_board_subscriptions.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_board_subscriptions\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_board_subscriptions we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_board_subscriptionsUpsertArgs>(args: SelectSubset<T, discussionboard_board_subscriptionsUpsertArgs<ExtArgs>>): Prisma__discussionboard_board_subscriptionsClient<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_board_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_subscriptionsCountArgs} args - Arguments to filter Discussionboard_board_subscriptions to count.\n     * @example\n     * // Count the number of Discussionboard_board_subscriptions\n     * const count = await prisma.discussionboard_board_subscriptions.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_board_subscriptions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_board_subscriptionsCountArgs>(\n      args?: Subset<T, discussionboard_board_subscriptionsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_board_subscriptionsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_board_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_board_subscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_board_subscriptionsAggregateArgs>(args: Subset<T, Discussionboard_board_subscriptionsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_board_subscriptionsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_board_subscriptions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_subscriptionsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_board_subscriptionsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_board_subscriptionsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_board_subscriptionsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_board_subscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_board_subscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_board_subscriptions model\n   */\n  readonly fields: discussionboard_board_subscriptionsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_board_subscriptions.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_board_subscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_db_board_subs_board<T extends discussionboard_boardsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_boardsDefaultArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    fk_db_board_subs_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_board_subscriptions model\n   */\n  interface discussionboard_board_subscriptionsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_board_subscriptions\", 'String'>\n    readonly discussionboard_board_id: FieldRef<\"discussionboard_board_subscriptions\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_board_subscriptions\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_board_subscriptions\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_board_subscriptions findUnique\n   */\n  export type discussionboard_board_subscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_subscriptions to fetch.\n     */\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_subscriptions findUniqueOrThrow\n   */\n  export type discussionboard_board_subscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_subscriptions to fetch.\n     */\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_subscriptions findFirst\n   */\n  export type discussionboard_board_subscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_subscriptions to fetch.\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_subscriptions to fetch.\n     */\n    orderBy?: discussionboard_board_subscriptionsOrderByWithRelationInput | discussionboard_board_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_board_subscriptions.\n     */\n    cursor?: discussionboard_board_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_board_subscriptions.\n     */\n    distinct?: Discussionboard_board_subscriptionsScalarFieldEnum | Discussionboard_board_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_board_subscriptions findFirstOrThrow\n   */\n  export type discussionboard_board_subscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_subscriptions to fetch.\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_subscriptions to fetch.\n     */\n    orderBy?: discussionboard_board_subscriptionsOrderByWithRelationInput | discussionboard_board_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_board_subscriptions.\n     */\n    cursor?: discussionboard_board_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_subscriptions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_board_subscriptions.\n     */\n    distinct?: Discussionboard_board_subscriptionsScalarFieldEnum | Discussionboard_board_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_board_subscriptions findMany\n   */\n  export type discussionboard_board_subscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_subscriptions to fetch.\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_subscriptions to fetch.\n     */\n    orderBy?: discussionboard_board_subscriptionsOrderByWithRelationInput | discussionboard_board_subscriptionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_board_subscriptions.\n     */\n    cursor?: discussionboard_board_subscriptionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_subscriptions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_subscriptions.\n     */\n    skip?: number\n    distinct?: Discussionboard_board_subscriptionsScalarFieldEnum | Discussionboard_board_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_board_subscriptions create\n   */\n  export type discussionboard_board_subscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_board_subscriptions.\n     */\n    data: XOR<discussionboard_board_subscriptionsCreateInput, discussionboard_board_subscriptionsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_board_subscriptions createMany\n   */\n  export type discussionboard_board_subscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_board_subscriptions.\n     */\n    data: discussionboard_board_subscriptionsCreateManyInput | discussionboard_board_subscriptionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_board_subscriptions createManyAndReturn\n   */\n  export type discussionboard_board_subscriptionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_board_subscriptions.\n     */\n    data: discussionboard_board_subscriptionsCreateManyInput | discussionboard_board_subscriptionsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_board_subscriptions update\n   */\n  export type discussionboard_board_subscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_board_subscriptions.\n     */\n    data: XOR<discussionboard_board_subscriptionsUpdateInput, discussionboard_board_subscriptionsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_board_subscriptions to update.\n     */\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_subscriptions updateMany\n   */\n  export type discussionboard_board_subscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_board_subscriptions.\n     */\n    data: XOR<discussionboard_board_subscriptionsUpdateManyMutationInput, discussionboard_board_subscriptionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_board_subscriptions to update\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * Limit how many discussionboard_board_subscriptions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_board_subscriptions updateManyAndReturn\n   */\n  export type discussionboard_board_subscriptionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_board_subscriptions.\n     */\n    data: XOR<discussionboard_board_subscriptionsUpdateManyMutationInput, discussionboard_board_subscriptionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_board_subscriptions to update\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * Limit how many discussionboard_board_subscriptions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_board_subscriptions upsert\n   */\n  export type discussionboard_board_subscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_board_subscriptions to update in case it exists.\n     */\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    /**\n     * In case the discussionboard_board_subscriptions found by the `where` argument doesn't exist, create a new discussionboard_board_subscriptions with this data.\n     */\n    create: XOR<discussionboard_board_subscriptionsCreateInput, discussionboard_board_subscriptionsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_board_subscriptions was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_board_subscriptionsUpdateInput, discussionboard_board_subscriptionsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_board_subscriptions delete\n   */\n  export type discussionboard_board_subscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_board_subscriptions to delete.\n     */\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_subscriptions deleteMany\n   */\n  export type discussionboard_board_subscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_board_subscriptions to delete\n     */\n    where?: discussionboard_board_subscriptionsWhereInput\n    /**\n     * Limit how many discussionboard_board_subscriptions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_board_subscriptions without action\n   */\n  export type discussionboard_board_subscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_board_settings\n   */\n\n  export type AggregateDiscussionboard_board_settings = {\n    _count: Discussionboard_board_settingsCountAggregateOutputType | null\n    _min: Discussionboard_board_settingsMinAggregateOutputType | null\n    _max: Discussionboard_board_settingsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_board_settingsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_board_id: string | null\n    allow_images: boolean | null\n    require_moderator_approval: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_board_settingsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_board_id: string | null\n    allow_images: boolean | null\n    require_moderator_approval: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_board_settingsCountAggregateOutputType = {\n    id: number\n    discussionboard_board_id: number\n    allow_images: number\n    require_moderator_approval: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_board_settingsMinAggregateInputType = {\n    id?: true\n    discussionboard_board_id?: true\n    allow_images?: true\n    require_moderator_approval?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_board_settingsMaxAggregateInputType = {\n    id?: true\n    discussionboard_board_id?: true\n    allow_images?: true\n    require_moderator_approval?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_board_settingsCountAggregateInputType = {\n    id?: true\n    discussionboard_board_id?: true\n    allow_images?: true\n    require_moderator_approval?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_board_settingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_board_settings to aggregate.\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_settings to fetch.\n     */\n    orderBy?: discussionboard_board_settingsOrderByWithRelationInput | discussionboard_board_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_board_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_board_settings\n    **/\n    _count?: true | Discussionboard_board_settingsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_board_settingsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_board_settingsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_board_settingsAggregateType<T extends Discussionboard_board_settingsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_board_settings]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_board_settings[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_board_settings[P]>\n  }\n\n\n\n\n  export type discussionboard_board_settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_board_settingsWhereInput\n    orderBy?: discussionboard_board_settingsOrderByWithAggregationInput | discussionboard_board_settingsOrderByWithAggregationInput[]\n    by: Discussionboard_board_settingsScalarFieldEnum[] | Discussionboard_board_settingsScalarFieldEnum\n    having?: discussionboard_board_settingsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_board_settingsCountAggregateInputType | true\n    _min?: Discussionboard_board_settingsMinAggregateInputType\n    _max?: Discussionboard_board_settingsMaxAggregateInputType\n  }\n\n  export type Discussionboard_board_settingsGroupByOutputType = {\n    id: string\n    discussionboard_board_id: string\n    allow_images: boolean\n    require_moderator_approval: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_board_settingsCountAggregateOutputType | null\n    _min: Discussionboard_board_settingsMinAggregateOutputType | null\n    _max: Discussionboard_board_settingsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_board_settingsGroupByPayload<T extends discussionboard_board_settingsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_board_settingsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_board_settingsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_board_settingsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_board_settingsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_board_settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_board_id?: boolean\n    allow_images?: boolean\n    require_moderator_approval?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_db_board_settings_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_board_settings\"]>\n\n  export type discussionboard_board_settingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_board_id?: boolean\n    allow_images?: boolean\n    require_moderator_approval?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_db_board_settings_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_board_settings\"]>\n\n  export type discussionboard_board_settingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_board_id?: boolean\n    allow_images?: boolean\n    require_moderator_approval?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_db_board_settings_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_board_settings\"]>\n\n  export type discussionboard_board_settingsSelectScalar = {\n    id?: boolean\n    discussionboard_board_id?: boolean\n    allow_images?: boolean\n    require_moderator_approval?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_board_settingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_board_id\" | \"allow_images\" | \"require_moderator_approval\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_board_settings\"]>\n  export type discussionboard_board_settingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_board_settings_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_board_settingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_board_settings_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_board_settingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_board_settings_board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_board_settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_board_settings\"\n    objects: {\n      fk_db_board_settings_board: Prisma.$discussionboard_boardsPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for board settings.\n       */\n      id: string\n      /**\n       * Target board's {@link discussionboard_boards.id} - Settings apply to this board. Enforced unique for 1:1. Example: Feature toggle lookup for a specific board.\n       */\n      discussionboard_board_id: string\n      /**\n       * Allow image uploads - Implements toggle for image posting. 3NF: atomic flag only, actual images handled elsewhere. Example: Image post permissions UI.\n       */\n      allow_images: boolean\n      /**\n       * Require moderator approval for new posts - Supports moderation flow requirement. 3NF flag only. Example: Restricted board setup.\n       */\n      require_moderator_approval: boolean\n      /**\n       * Creation timestamp for audit/history. 3NF as atomic timestamp. Example: For admin settings log.\n       */\n      created_at: Date\n      /**\n       * Last updated time for settings, for auditing. Example: Settings history tracking.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_board_settings\"]>\n    composites: {}\n  }\n\n  type discussionboard_board_settingsGetPayload<S extends boolean | null | undefined | discussionboard_board_settingsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_board_settingsPayload, S>\n\n  type discussionboard_board_settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_board_settingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_board_settingsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_board_settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_board_settings'], meta: { name: 'discussionboard_board_settings' } }\n    /**\n     * Find zero or one Discussionboard_board_settings that matches the filter.\n     * @param {discussionboard_board_settingsFindUniqueArgs} args - Arguments to find a Discussionboard_board_settings\n     * @example\n     * // Get one Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_board_settingsFindUniqueArgs>(args: SelectSubset<T, discussionboard_board_settingsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_board_settings that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_board_settingsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_board_settings\n     * @example\n     * // Get one Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_board_settingsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_board_settingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_board_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_settingsFindFirstArgs} args - Arguments to find a Discussionboard_board_settings\n     * @example\n     * // Get one Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_board_settingsFindFirstArgs>(args?: SelectSubset<T, discussionboard_board_settingsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_board_settings that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_settingsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_board_settings\n     * @example\n     * // Get one Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_board_settingsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_board_settingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_board_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_settingsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findMany()\n     * \n     * // Get first 10 Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_board_settingsWithIdOnly = await prisma.discussionboard_board_settings.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_board_settingsFindManyArgs>(args?: SelectSubset<T, discussionboard_board_settingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_board_settings.\n     * @param {discussionboard_board_settingsCreateArgs} args - Arguments to create a Discussionboard_board_settings.\n     * @example\n     * // Create one Discussionboard_board_settings\n     * const Discussionboard_board_settings = await prisma.discussionboard_board_settings.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_board_settings\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_board_settingsCreateArgs>(args: SelectSubset<T, discussionboard_board_settingsCreateArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_board_settings.\n     * @param {discussionboard_board_settingsCreateManyArgs} args - Arguments to create many Discussionboard_board_settings.\n     * @example\n     * // Create many Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_board_settingsCreateManyArgs>(args?: SelectSubset<T, discussionboard_board_settingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_board_settings and returns the data saved in the database.\n     * @param {discussionboard_board_settingsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_board_settings.\n     * @example\n     * // Create many Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_board_settings and only return the `id`\n     * const discussionboard_board_settingsWithIdOnly = await prisma.discussionboard_board_settings.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_board_settingsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_board_settingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_board_settings.\n     * @param {discussionboard_board_settingsDeleteArgs} args - Arguments to delete one Discussionboard_board_settings.\n     * @example\n     * // Delete one Discussionboard_board_settings\n     * const Discussionboard_board_settings = await prisma.discussionboard_board_settings.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_board_settings\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_board_settingsDeleteArgs>(args: SelectSubset<T, discussionboard_board_settingsDeleteArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_board_settings.\n     * @param {discussionboard_board_settingsUpdateArgs} args - Arguments to update one Discussionboard_board_settings.\n     * @example\n     * // Update one Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_board_settingsUpdateArgs>(args: SelectSubset<T, discussionboard_board_settingsUpdateArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_board_settings.\n     * @param {discussionboard_board_settingsDeleteManyArgs} args - Arguments to filter Discussionboard_board_settings to delete.\n     * @example\n     * // Delete a few Discussionboard_board_settings\n     * const { count } = await prisma.discussionboard_board_settings.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_board_settingsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_board_settingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_board_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_settingsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_board_settingsUpdateManyArgs>(args: SelectSubset<T, discussionboard_board_settingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_board_settings and returns the data updated in the database.\n     * @param {discussionboard_board_settingsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_board_settings.\n     * @example\n     * // Update many Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_board_settings and only return the `id`\n     * const discussionboard_board_settingsWithIdOnly = await prisma.discussionboard_board_settings.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_board_settingsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_board_settingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_board_settings.\n     * @param {discussionboard_board_settingsUpsertArgs} args - Arguments to update or create a Discussionboard_board_settings.\n     * @example\n     * // Update or create a Discussionboard_board_settings\n     * const discussionboard_board_settings = await prisma.discussionboard_board_settings.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_board_settings\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_board_settings we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_board_settingsUpsertArgs>(args: SelectSubset<T, discussionboard_board_settingsUpsertArgs<ExtArgs>>): Prisma__discussionboard_board_settingsClient<$Result.GetResult<Prisma.$discussionboard_board_settingsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_board_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_settingsCountArgs} args - Arguments to filter Discussionboard_board_settings to count.\n     * @example\n     * // Count the number of Discussionboard_board_settings\n     * const count = await prisma.discussionboard_board_settings.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_board_settings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_board_settingsCountArgs>(\n      args?: Subset<T, discussionboard_board_settingsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_board_settingsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_board_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_board_settingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_board_settingsAggregateArgs>(args: Subset<T, Discussionboard_board_settingsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_board_settingsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_board_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_board_settingsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_board_settingsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_board_settingsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_board_settingsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_board_settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_board_settingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_board_settings model\n   */\n  readonly fields: discussionboard_board_settingsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_board_settings.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_board_settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_db_board_settings_board<T extends discussionboard_boardsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_boardsDefaultArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_board_settings model\n   */\n  interface discussionboard_board_settingsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_board_settings\", 'String'>\n    readonly discussionboard_board_id: FieldRef<\"discussionboard_board_settings\", 'String'>\n    readonly allow_images: FieldRef<\"discussionboard_board_settings\", 'Boolean'>\n    readonly require_moderator_approval: FieldRef<\"discussionboard_board_settings\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_board_settings\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_board_settings\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_board_settings findUnique\n   */\n  export type discussionboard_board_settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_settings to fetch.\n     */\n    where: discussionboard_board_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_settings findUniqueOrThrow\n   */\n  export type discussionboard_board_settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_settings to fetch.\n     */\n    where: discussionboard_board_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_settings findFirst\n   */\n  export type discussionboard_board_settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_settings to fetch.\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_settings to fetch.\n     */\n    orderBy?: discussionboard_board_settingsOrderByWithRelationInput | discussionboard_board_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_board_settings.\n     */\n    cursor?: discussionboard_board_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_board_settings.\n     */\n    distinct?: Discussionboard_board_settingsScalarFieldEnum | Discussionboard_board_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_board_settings findFirstOrThrow\n   */\n  export type discussionboard_board_settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_settings to fetch.\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_settings to fetch.\n     */\n    orderBy?: discussionboard_board_settingsOrderByWithRelationInput | discussionboard_board_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_board_settings.\n     */\n    cursor?: discussionboard_board_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_board_settings.\n     */\n    distinct?: Discussionboard_board_settingsScalarFieldEnum | Discussionboard_board_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_board_settings findMany\n   */\n  export type discussionboard_board_settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_board_settings to fetch.\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_board_settings to fetch.\n     */\n    orderBy?: discussionboard_board_settingsOrderByWithRelationInput | discussionboard_board_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_board_settings.\n     */\n    cursor?: discussionboard_board_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_board_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_board_settings.\n     */\n    skip?: number\n    distinct?: Discussionboard_board_settingsScalarFieldEnum | Discussionboard_board_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_board_settings create\n   */\n  export type discussionboard_board_settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_board_settings.\n     */\n    data: XOR<discussionboard_board_settingsCreateInput, discussionboard_board_settingsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_board_settings createMany\n   */\n  export type discussionboard_board_settingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_board_settings.\n     */\n    data: discussionboard_board_settingsCreateManyInput | discussionboard_board_settingsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_board_settings createManyAndReturn\n   */\n  export type discussionboard_board_settingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_board_settings.\n     */\n    data: discussionboard_board_settingsCreateManyInput | discussionboard_board_settingsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_board_settings update\n   */\n  export type discussionboard_board_settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_board_settings.\n     */\n    data: XOR<discussionboard_board_settingsUpdateInput, discussionboard_board_settingsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_board_settings to update.\n     */\n    where: discussionboard_board_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_settings updateMany\n   */\n  export type discussionboard_board_settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_board_settings.\n     */\n    data: XOR<discussionboard_board_settingsUpdateManyMutationInput, discussionboard_board_settingsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_board_settings to update\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * Limit how many discussionboard_board_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_board_settings updateManyAndReturn\n   */\n  export type discussionboard_board_settingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_board_settings.\n     */\n    data: XOR<discussionboard_board_settingsUpdateManyMutationInput, discussionboard_board_settingsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_board_settings to update\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * Limit how many discussionboard_board_settings to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_board_settings upsert\n   */\n  export type discussionboard_board_settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_board_settings to update in case it exists.\n     */\n    where: discussionboard_board_settingsWhereUniqueInput\n    /**\n     * In case the discussionboard_board_settings found by the `where` argument doesn't exist, create a new discussionboard_board_settings with this data.\n     */\n    create: XOR<discussionboard_board_settingsCreateInput, discussionboard_board_settingsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_board_settings was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_board_settingsUpdateInput, discussionboard_board_settingsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_board_settings delete\n   */\n  export type discussionboard_board_settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_board_settings to delete.\n     */\n    where: discussionboard_board_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_board_settings deleteMany\n   */\n  export type discussionboard_board_settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_board_settings to delete\n     */\n    where?: discussionboard_board_settingsWhereInput\n    /**\n     * Limit how many discussionboard_board_settings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_board_settings without action\n   */\n  export type discussionboard_board_settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_settings\n     */\n    select?: discussionboard_board_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_settings\n     */\n    omit?: discussionboard_board_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_settingsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_notification_settings\n   */\n\n  export type AggregateDiscussionboard_notification_settings = {\n    _count: Discussionboard_notification_settingsCountAggregateOutputType | null\n    _min: Discussionboard_notification_settingsMinAggregateOutputType | null\n    _max: Discussionboard_notification_settingsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_notification_settingsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    receive_board_notifications: boolean | null\n    receive_mention_notifications: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_notification_settingsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    receive_board_notifications: boolean | null\n    receive_mention_notifications: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_notification_settingsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    receive_board_notifications: number\n    receive_mention_notifications: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_notification_settingsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    receive_board_notifications?: true\n    receive_mention_notifications?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_notification_settingsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    receive_board_notifications?: true\n    receive_mention_notifications?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_notification_settingsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    receive_board_notifications?: true\n    receive_mention_notifications?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_notification_settingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notification_settings to aggregate.\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_settings to fetch.\n     */\n    orderBy?: discussionboard_notification_settingsOrderByWithRelationInput | discussionboard_notification_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_notification_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_notification_settings\n    **/\n    _count?: true | Discussionboard_notification_settingsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_notification_settingsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_notification_settingsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_notification_settingsAggregateType<T extends Discussionboard_notification_settingsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_notification_settings]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_notification_settings[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_notification_settings[P]>\n  }\n\n\n\n\n  export type discussionboard_notification_settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notification_settingsWhereInput\n    orderBy?: discussionboard_notification_settingsOrderByWithAggregationInput | discussionboard_notification_settingsOrderByWithAggregationInput[]\n    by: Discussionboard_notification_settingsScalarFieldEnum[] | Discussionboard_notification_settingsScalarFieldEnum\n    having?: discussionboard_notification_settingsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_notification_settingsCountAggregateInputType | true\n    _min?: Discussionboard_notification_settingsMinAggregateInputType\n    _max?: Discussionboard_notification_settingsMaxAggregateInputType\n  }\n\n  export type Discussionboard_notification_settingsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    receive_board_notifications: boolean\n    receive_mention_notifications: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_notification_settingsCountAggregateOutputType | null\n    _min: Discussionboard_notification_settingsMinAggregateOutputType | null\n    _max: Discussionboard_notification_settingsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_notification_settingsGroupByPayload<T extends discussionboard_notification_settingsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_notification_settingsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_notification_settingsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_notification_settingsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_notification_settingsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_notification_settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    receive_board_notifications?: boolean\n    receive_mention_notifications?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_db_notification_settings_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification_settings\"]>\n\n  export type discussionboard_notification_settingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    receive_board_notifications?: boolean\n    receive_mention_notifications?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_db_notification_settings_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification_settings\"]>\n\n  export type discussionboard_notification_settingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    receive_board_notifications?: boolean\n    receive_mention_notifications?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_db_notification_settings_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notification_settings\"]>\n\n  export type discussionboard_notification_settingsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    receive_board_notifications?: boolean\n    receive_mention_notifications?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_notification_settingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"receive_board_notifications\" | \"receive_mention_notifications\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_notification_settings\"]>\n  export type discussionboard_notification_settingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_notification_settings_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_notification_settingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_notification_settings_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_notification_settingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_db_notification_settings_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_notification_settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_notification_settings\"\n    objects: {\n      fk_db_notification_settings_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique notification setting ID.\n       */\n      id: string\n      /**\n       * Belonged member's {@link discussionboard_members.id} (from Actors component) - Which member these preferences apply to. Unique for 1:1. Example: Editing notification preferences for logged-in member.\n       */\n      discussionboard_member_id: string\n      /**\n       * Receive notifications for new board activity/posts - Implements the core notification toggle. 3NF as atomic preference. Example: User settings UI toggle.\n       */\n      receive_board_notifications: boolean\n      /**\n       * Receive mention notifications - Controls alerts for mentions/replies. 3NF flag. Example: Mention alert switch on settings page.\n       */\n      receive_mention_notifications: boolean\n      /**\n       * Creation timestamp for notification prefs history/audit. 3NF.\n       */\n      created_at: Date\n      /**\n       * Last prefs update timestamp, for audit/history. 3NF.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_notification_settings\"]>\n    composites: {}\n  }\n\n  type discussionboard_notification_settingsGetPayload<S extends boolean | null | undefined | discussionboard_notification_settingsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_notification_settingsPayload, S>\n\n  type discussionboard_notification_settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_notification_settingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_notification_settingsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_notification_settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_notification_settings'], meta: { name: 'discussionboard_notification_settings' } }\n    /**\n     * Find zero or one Discussionboard_notification_settings that matches the filter.\n     * @param {discussionboard_notification_settingsFindUniqueArgs} args - Arguments to find a Discussionboard_notification_settings\n     * @example\n     * // Get one Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_notification_settingsFindUniqueArgs>(args: SelectSubset<T, discussionboard_notification_settingsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_notification_settings that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_notification_settingsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_notification_settings\n     * @example\n     * // Get one Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_notification_settingsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_notification_settingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notification_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_settingsFindFirstArgs} args - Arguments to find a Discussionboard_notification_settings\n     * @example\n     * // Get one Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_notification_settingsFindFirstArgs>(args?: SelectSubset<T, discussionboard_notification_settingsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notification_settings that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_settingsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_notification_settings\n     * @example\n     * // Get one Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_notification_settingsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_notification_settingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_notification_settings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_settingsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findMany()\n     * \n     * // Get first 10 Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_notification_settingsWithIdOnly = await prisma.discussionboard_notification_settings.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_notification_settingsFindManyArgs>(args?: SelectSubset<T, discussionboard_notification_settingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_notification_settings.\n     * @param {discussionboard_notification_settingsCreateArgs} args - Arguments to create a Discussionboard_notification_settings.\n     * @example\n     * // Create one Discussionboard_notification_settings\n     * const Discussionboard_notification_settings = await prisma.discussionboard_notification_settings.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_notification_settings\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_notification_settingsCreateArgs>(args: SelectSubset<T, discussionboard_notification_settingsCreateArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_notification_settings.\n     * @param {discussionboard_notification_settingsCreateManyArgs} args - Arguments to create many Discussionboard_notification_settings.\n     * @example\n     * // Create many Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_notification_settingsCreateManyArgs>(args?: SelectSubset<T, discussionboard_notification_settingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_notification_settings and returns the data saved in the database.\n     * @param {discussionboard_notification_settingsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_notification_settings.\n     * @example\n     * // Create many Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_notification_settings and only return the `id`\n     * const discussionboard_notification_settingsWithIdOnly = await prisma.discussionboard_notification_settings.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_notification_settingsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_notification_settingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_notification_settings.\n     * @param {discussionboard_notification_settingsDeleteArgs} args - Arguments to delete one Discussionboard_notification_settings.\n     * @example\n     * // Delete one Discussionboard_notification_settings\n     * const Discussionboard_notification_settings = await prisma.discussionboard_notification_settings.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_notification_settings\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_notification_settingsDeleteArgs>(args: SelectSubset<T, discussionboard_notification_settingsDeleteArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_notification_settings.\n     * @param {discussionboard_notification_settingsUpdateArgs} args - Arguments to update one Discussionboard_notification_settings.\n     * @example\n     * // Update one Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_notification_settingsUpdateArgs>(args: SelectSubset<T, discussionboard_notification_settingsUpdateArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_notification_settings.\n     * @param {discussionboard_notification_settingsDeleteManyArgs} args - Arguments to filter Discussionboard_notification_settings to delete.\n     * @example\n     * // Delete a few Discussionboard_notification_settings\n     * const { count } = await prisma.discussionboard_notification_settings.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_notification_settingsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_notification_settingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notification_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_settingsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_notification_settingsUpdateManyArgs>(args: SelectSubset<T, discussionboard_notification_settingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notification_settings and returns the data updated in the database.\n     * @param {discussionboard_notification_settingsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_notification_settings.\n     * @example\n     * // Update many Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_notification_settings and only return the `id`\n     * const discussionboard_notification_settingsWithIdOnly = await prisma.discussionboard_notification_settings.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_notification_settingsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_notification_settingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_notification_settings.\n     * @param {discussionboard_notification_settingsUpsertArgs} args - Arguments to update or create a Discussionboard_notification_settings.\n     * @example\n     * // Update or create a Discussionboard_notification_settings\n     * const discussionboard_notification_settings = await prisma.discussionboard_notification_settings.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_notification_settings\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_notification_settings we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_notification_settingsUpsertArgs>(args: SelectSubset<T, discussionboard_notification_settingsUpsertArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_notification_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_settingsCountArgs} args - Arguments to filter Discussionboard_notification_settings to count.\n     * @example\n     * // Count the number of Discussionboard_notification_settings\n     * const count = await prisma.discussionboard_notification_settings.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_notification_settings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_notification_settingsCountArgs>(\n      args?: Subset<T, discussionboard_notification_settingsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_notification_settingsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_notification_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_notification_settingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_notification_settingsAggregateArgs>(args: Subset<T, Discussionboard_notification_settingsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_notification_settingsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_notification_settings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notification_settingsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_notification_settingsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_notification_settingsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_notification_settingsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_notification_settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_notification_settingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_notification_settings model\n   */\n  readonly fields: discussionboard_notification_settingsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_notification_settings.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_notification_settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_db_notification_settings_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_notification_settings model\n   */\n  interface discussionboard_notification_settingsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_notification_settings\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_notification_settings\", 'String'>\n    readonly receive_board_notifications: FieldRef<\"discussionboard_notification_settings\", 'Boolean'>\n    readonly receive_mention_notifications: FieldRef<\"discussionboard_notification_settings\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_notification_settings\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_notification_settings\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_notification_settings findUnique\n   */\n  export type discussionboard_notification_settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_settings to fetch.\n     */\n    where: discussionboard_notification_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_settings findUniqueOrThrow\n   */\n  export type discussionboard_notification_settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_settings to fetch.\n     */\n    where: discussionboard_notification_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_settings findFirst\n   */\n  export type discussionboard_notification_settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_settings to fetch.\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_settings to fetch.\n     */\n    orderBy?: discussionboard_notification_settingsOrderByWithRelationInput | discussionboard_notification_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notification_settings.\n     */\n    cursor?: discussionboard_notification_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notification_settings.\n     */\n    distinct?: Discussionboard_notification_settingsScalarFieldEnum | Discussionboard_notification_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification_settings findFirstOrThrow\n   */\n  export type discussionboard_notification_settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_settings to fetch.\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_settings to fetch.\n     */\n    orderBy?: discussionboard_notification_settingsOrderByWithRelationInput | discussionboard_notification_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notification_settings.\n     */\n    cursor?: discussionboard_notification_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_settings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notification_settings.\n     */\n    distinct?: Discussionboard_notification_settingsScalarFieldEnum | Discussionboard_notification_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification_settings findMany\n   */\n  export type discussionboard_notification_settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notification_settings to fetch.\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notification_settings to fetch.\n     */\n    orderBy?: discussionboard_notification_settingsOrderByWithRelationInput | discussionboard_notification_settingsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_notification_settings.\n     */\n    cursor?: discussionboard_notification_settingsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notification_settings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notification_settings.\n     */\n    skip?: number\n    distinct?: Discussionboard_notification_settingsScalarFieldEnum | Discussionboard_notification_settingsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notification_settings create\n   */\n  export type discussionboard_notification_settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_notification_settings.\n     */\n    data: XOR<discussionboard_notification_settingsCreateInput, discussionboard_notification_settingsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_notification_settings createMany\n   */\n  export type discussionboard_notification_settingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_notification_settings.\n     */\n    data: discussionboard_notification_settingsCreateManyInput | discussionboard_notification_settingsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_notification_settings createManyAndReturn\n   */\n  export type discussionboard_notification_settingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_notification_settings.\n     */\n    data: discussionboard_notification_settingsCreateManyInput | discussionboard_notification_settingsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notification_settings update\n   */\n  export type discussionboard_notification_settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_notification_settings.\n     */\n    data: XOR<discussionboard_notification_settingsUpdateInput, discussionboard_notification_settingsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_notification_settings to update.\n     */\n    where: discussionboard_notification_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_settings updateMany\n   */\n  export type discussionboard_notification_settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_notification_settings.\n     */\n    data: XOR<discussionboard_notification_settingsUpdateManyMutationInput, discussionboard_notification_settingsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notification_settings to update\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * Limit how many discussionboard_notification_settings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notification_settings updateManyAndReturn\n   */\n  export type discussionboard_notification_settingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_notification_settings.\n     */\n    data: XOR<discussionboard_notification_settingsUpdateManyMutationInput, discussionboard_notification_settingsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notification_settings to update\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * Limit how many discussionboard_notification_settings to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notification_settings upsert\n   */\n  export type discussionboard_notification_settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_notification_settings to update in case it exists.\n     */\n    where: discussionboard_notification_settingsWhereUniqueInput\n    /**\n     * In case the discussionboard_notification_settings found by the `where` argument doesn't exist, create a new discussionboard_notification_settings with this data.\n     */\n    create: XOR<discussionboard_notification_settingsCreateInput, discussionboard_notification_settingsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_notification_settings was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_notification_settingsUpdateInput, discussionboard_notification_settingsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_notification_settings delete\n   */\n  export type discussionboard_notification_settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_notification_settings to delete.\n     */\n    where: discussionboard_notification_settingsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notification_settings deleteMany\n   */\n  export type discussionboard_notification_settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notification_settings to delete\n     */\n    where?: discussionboard_notification_settingsWhereInput\n    /**\n     * Limit how many discussionboard_notification_settings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notification_settings without action\n   */\n  export type discussionboard_notification_settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_admins\n   */\n\n  export type AggregateDiscussionboard_admins = {\n    _count: Discussionboard_adminsCountAggregateOutputType | null\n    _min: Discussionboard_adminsMinAggregateOutputType | null\n    _max: Discussionboard_adminsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_adminsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    granted_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_adminsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    granted_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_adminsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    granted_at: number\n    revoked_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_adminsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    granted_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_adminsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    granted_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_adminsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    granted_at?: true\n    revoked_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_adminsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_admins to aggregate.\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminsOrderByWithRelationInput | discussionboard_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_admins\n    **/\n    _count?: true | Discussionboard_adminsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_adminsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_adminsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_adminsAggregateType<T extends Discussionboard_adminsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_admins]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_admins[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_admins[P]>\n  }\n\n\n\n\n  export type discussionboard_adminsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_adminsWhereInput\n    orderBy?: discussionboard_adminsOrderByWithAggregationInput | discussionboard_adminsOrderByWithAggregationInput[]\n    by: Discussionboard_adminsScalarFieldEnum[] | Discussionboard_adminsScalarFieldEnum\n    having?: discussionboard_adminsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_adminsCountAggregateInputType | true\n    _min?: Discussionboard_adminsMinAggregateInputType\n    _max?: Discussionboard_adminsMaxAggregateInputType\n  }\n\n  export type Discussionboard_adminsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date\n    revoked_at: Date | null\n    _count: Discussionboard_adminsCountAggregateOutputType | null\n    _min: Discussionboard_adminsMinAggregateOutputType | null\n    _max: Discussionboard_adminsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_adminsGroupByPayload<T extends discussionboard_adminsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_adminsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_adminsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_adminsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_adminsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_adminsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n    discussionboard_admins_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_admins$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_bans_of_target_admin_id?: boolean | discussionboard_admins$discussionboard_bans_of_target_admin_idArgs<ExtArgs>\n    discussionboard_bans_of_actor_admin_id?: boolean | discussionboard_admins$discussionboard_bans_of_actor_admin_idArgs<ExtArgs>\n    discussionboard_warnings_of_target_admin_id?: boolean | discussionboard_admins$discussionboard_warnings_of_target_admin_idArgs<ExtArgs>\n    discussionboard_warnings_of_actor_admin_id?: boolean | discussionboard_admins$discussionboard_warnings_of_actor_admin_idArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_admins$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_adminsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_admins\"]>\n\n  export type discussionboard_adminsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n    discussionboard_admins_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_admins\"]>\n\n  export type discussionboard_adminsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n    discussionboard_admins_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_admins\"]>\n\n  export type discussionboard_adminsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n  }\n\n  export type discussionboard_adminsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"granted_at\" | \"revoked_at\", ExtArgs[\"result\"][\"discussionboard_admins\"]>\n  export type discussionboard_adminsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_admins_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_admins$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_bans_of_target_admin_id?: boolean | discussionboard_admins$discussionboard_bans_of_target_admin_idArgs<ExtArgs>\n    discussionboard_bans_of_actor_admin_id?: boolean | discussionboard_admins$discussionboard_bans_of_actor_admin_idArgs<ExtArgs>\n    discussionboard_warnings_of_target_admin_id?: boolean | discussionboard_admins$discussionboard_warnings_of_target_admin_idArgs<ExtArgs>\n    discussionboard_warnings_of_actor_admin_id?: boolean | discussionboard_admins$discussionboard_warnings_of_actor_admin_idArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_admins$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_adminsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_adminsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_admins_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_adminsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_admins_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_adminsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_admins\"\n    objects: {\n      discussionboard_admins_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n      discussionboard_moderation_actions: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>[]\n      discussionboard_bans_of_target_admin_id: Prisma.$discussionboard_bansPayload<ExtArgs>[]\n      discussionboard_bans_of_actor_admin_id: Prisma.$discussionboard_bansPayload<ExtArgs>[]\n      discussionboard_warnings_of_target_admin_id: Prisma.$discussionboard_warningsPayload<ExtArgs>[]\n      discussionboard_warnings_of_actor_admin_id: Prisma.$discussionboard_warningsPayload<ExtArgs>[]\n      discussionboard_audit_logs: Prisma.$discussionboard_audit_logsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique admin role record identifier.\n       */\n      id: string\n      /**\n       * Belonged member's {@link discussionboard_members.id}. Assigns admin privileges to a registered member.\n       */\n      discussionboard_member_id: string\n      /**\n       * Datetime when admin role was granted. Implements temporal auditability as per action trail requirements. For example, captures promotion time.\n       */\n      granted_at: Date\n      /**\n       * Datetime when admin role was revoked (if applicable). Null unless admin privileges are removed. Supports audit and compliance.\n       */\n      revoked_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_admins\"]>\n    composites: {}\n  }\n\n  type discussionboard_adminsGetPayload<S extends boolean | null | undefined | discussionboard_adminsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_adminsPayload, S>\n\n  type discussionboard_adminsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_adminsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_adminsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_adminsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_admins'], meta: { name: 'discussionboard_admins' } }\n    /**\n     * Find zero or one Discussionboard_admins that matches the filter.\n     * @param {discussionboard_adminsFindUniqueArgs} args - Arguments to find a Discussionboard_admins\n     * @example\n     * // Get one Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_adminsFindUniqueArgs>(args: SelectSubset<T, discussionboard_adminsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_admins that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_adminsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_admins\n     * @example\n     * // Get one Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_adminsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_adminsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_admins that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminsFindFirstArgs} args - Arguments to find a Discussionboard_admins\n     * @example\n     * // Get one Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_adminsFindFirstArgs>(args?: SelectSubset<T, discussionboard_adminsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_admins that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_admins\n     * @example\n     * // Get one Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_adminsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_adminsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_admins that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.findMany()\n     * \n     * // Get first 10 Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_adminsWithIdOnly = await prisma.discussionboard_admins.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_adminsFindManyArgs>(args?: SelectSubset<T, discussionboard_adminsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_admins.\n     * @param {discussionboard_adminsCreateArgs} args - Arguments to create a Discussionboard_admins.\n     * @example\n     * // Create one Discussionboard_admins\n     * const Discussionboard_admins = await prisma.discussionboard_admins.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_admins\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_adminsCreateArgs>(args: SelectSubset<T, discussionboard_adminsCreateArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_admins.\n     * @param {discussionboard_adminsCreateManyArgs} args - Arguments to create many Discussionboard_admins.\n     * @example\n     * // Create many Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_adminsCreateManyArgs>(args?: SelectSubset<T, discussionboard_adminsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_admins and returns the data saved in the database.\n     * @param {discussionboard_adminsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_admins.\n     * @example\n     * // Create many Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_admins and only return the `id`\n     * const discussionboard_adminsWithIdOnly = await prisma.discussionboard_admins.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_adminsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_adminsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_admins.\n     * @param {discussionboard_adminsDeleteArgs} args - Arguments to delete one Discussionboard_admins.\n     * @example\n     * // Delete one Discussionboard_admins\n     * const Discussionboard_admins = await prisma.discussionboard_admins.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_admins\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_adminsDeleteArgs>(args: SelectSubset<T, discussionboard_adminsDeleteArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_admins.\n     * @param {discussionboard_adminsUpdateArgs} args - Arguments to update one Discussionboard_admins.\n     * @example\n     * // Update one Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_adminsUpdateArgs>(args: SelectSubset<T, discussionboard_adminsUpdateArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_admins.\n     * @param {discussionboard_adminsDeleteManyArgs} args - Arguments to filter Discussionboard_admins to delete.\n     * @example\n     * // Delete a few Discussionboard_admins\n     * const { count } = await prisma.discussionboard_admins.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_adminsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_adminsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_adminsUpdateManyArgs>(args: SelectSubset<T, discussionboard_adminsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_admins and returns the data updated in the database.\n     * @param {discussionboard_adminsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_admins.\n     * @example\n     * // Update many Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_admins and only return the `id`\n     * const discussionboard_adminsWithIdOnly = await prisma.discussionboard_admins.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_adminsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_adminsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_admins.\n     * @param {discussionboard_adminsUpsertArgs} args - Arguments to update or create a Discussionboard_admins.\n     * @example\n     * // Update or create a Discussionboard_admins\n     * const discussionboard_admins = await prisma.discussionboard_admins.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_admins\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_admins we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_adminsUpsertArgs>(args: SelectSubset<T, discussionboard_adminsUpsertArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminsCountArgs} args - Arguments to filter Discussionboard_admins to count.\n     * @example\n     * // Count the number of Discussionboard_admins\n     * const count = await prisma.discussionboard_admins.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_admins we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_adminsCountArgs>(\n      args?: Subset<T, discussionboard_adminsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_adminsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_adminsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_adminsAggregateArgs>(args: Subset<T, Discussionboard_adminsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_adminsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_admins.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_adminsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_adminsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_adminsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_adminsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_adminsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_adminsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_admins model\n   */\n  readonly fields: discussionboard_adminsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_admins.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_adminsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_admins_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussionboard_moderation_actions<T extends discussionboard_admins$discussionboard_moderation_actionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_admins$discussionboard_moderation_actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_bans_of_target_admin_id<T extends discussionboard_admins$discussionboard_bans_of_target_admin_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_admins$discussionboard_bans_of_target_admin_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_bans_of_actor_admin_id<T extends discussionboard_admins$discussionboard_bans_of_actor_admin_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_admins$discussionboard_bans_of_actor_admin_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warnings_of_target_admin_id<T extends discussionboard_admins$discussionboard_warnings_of_target_admin_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_admins$discussionboard_warnings_of_target_admin_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warnings_of_actor_admin_id<T extends discussionboard_admins$discussionboard_warnings_of_actor_admin_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_admins$discussionboard_warnings_of_actor_admin_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_audit_logs<T extends discussionboard_admins$discussionboard_audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_admins$discussionboard_audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_admins model\n   */\n  interface discussionboard_adminsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_admins\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_admins\", 'String'>\n    readonly granted_at: FieldRef<\"discussionboard_admins\", 'DateTime'>\n    readonly revoked_at: FieldRef<\"discussionboard_admins\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_admins findUnique\n   */\n  export type discussionboard_adminsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admins to fetch.\n     */\n    where: discussionboard_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admins findUniqueOrThrow\n   */\n  export type discussionboard_adminsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admins to fetch.\n     */\n    where: discussionboard_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admins findFirst\n   */\n  export type discussionboard_adminsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admins to fetch.\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminsOrderByWithRelationInput | discussionboard_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_admins.\n     */\n    cursor?: discussionboard_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_admins.\n     */\n    distinct?: Discussionboard_adminsScalarFieldEnum | Discussionboard_adminsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins findFirstOrThrow\n   */\n  export type discussionboard_adminsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admins to fetch.\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminsOrderByWithRelationInput | discussionboard_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_admins.\n     */\n    cursor?: discussionboard_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_admins.\n     */\n    distinct?: Discussionboard_adminsScalarFieldEnum | Discussionboard_adminsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins findMany\n   */\n  export type discussionboard_adminsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_admins to fetch.\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_admins to fetch.\n     */\n    orderBy?: discussionboard_adminsOrderByWithRelationInput | discussionboard_adminsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_admins.\n     */\n    cursor?: discussionboard_adminsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_admins from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_admins.\n     */\n    skip?: number\n    distinct?: Discussionboard_adminsScalarFieldEnum | Discussionboard_adminsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins create\n   */\n  export type discussionboard_adminsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_admins.\n     */\n    data: XOR<discussionboard_adminsCreateInput, discussionboard_adminsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_admins createMany\n   */\n  export type discussionboard_adminsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_admins.\n     */\n    data: discussionboard_adminsCreateManyInput | discussionboard_adminsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_admins createManyAndReturn\n   */\n  export type discussionboard_adminsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_admins.\n     */\n    data: discussionboard_adminsCreateManyInput | discussionboard_adminsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_admins update\n   */\n  export type discussionboard_adminsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_admins.\n     */\n    data: XOR<discussionboard_adminsUpdateInput, discussionboard_adminsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_admins to update.\n     */\n    where: discussionboard_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admins updateMany\n   */\n  export type discussionboard_adminsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_admins.\n     */\n    data: XOR<discussionboard_adminsUpdateManyMutationInput, discussionboard_adminsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_admins to update\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * Limit how many discussionboard_admins to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_admins updateManyAndReturn\n   */\n  export type discussionboard_adminsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_admins.\n     */\n    data: XOR<discussionboard_adminsUpdateManyMutationInput, discussionboard_adminsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_admins to update\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * Limit how many discussionboard_admins to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_admins upsert\n   */\n  export type discussionboard_adminsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_admins to update in case it exists.\n     */\n    where: discussionboard_adminsWhereUniqueInput\n    /**\n     * In case the discussionboard_admins found by the `where` argument doesn't exist, create a new discussionboard_admins with this data.\n     */\n    create: XOR<discussionboard_adminsCreateInput, discussionboard_adminsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_admins was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_adminsUpdateInput, discussionboard_adminsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_admins delete\n   */\n  export type discussionboard_adminsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_admins to delete.\n     */\n    where: discussionboard_adminsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_admins deleteMany\n   */\n  export type discussionboard_adminsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_admins to delete\n     */\n    where?: discussionboard_adminsWhereInput\n    /**\n     * Limit how many discussionboard_admins to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_admins.discussionboard_moderation_actions\n   */\n  export type discussionboard_admins$discussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins.discussionboard_bans_of_target_admin_id\n   */\n  export type discussionboard_admins$discussionboard_bans_of_target_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    where?: discussionboard_bansWhereInput\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    cursor?: discussionboard_bansWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins.discussionboard_bans_of_actor_admin_id\n   */\n  export type discussionboard_admins$discussionboard_bans_of_actor_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    where?: discussionboard_bansWhereInput\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    cursor?: discussionboard_bansWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins.discussionboard_warnings_of_target_admin_id\n   */\n  export type discussionboard_admins$discussionboard_warnings_of_target_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    cursor?: discussionboard_warningsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins.discussionboard_warnings_of_actor_admin_id\n   */\n  export type discussionboard_admins$discussionboard_warnings_of_actor_admin_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    cursor?: discussionboard_warningsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins.discussionboard_audit_logs\n   */\n  export type discussionboard_admins$discussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    where?: discussionboard_audit_logsWhereInput\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_admins without action\n   */\n  export type discussionboard_adminsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_moderators\n   */\n\n  export type AggregateDiscussionboard_moderators = {\n    _count: Discussionboard_moderatorsCountAggregateOutputType | null\n    _min: Discussionboard_moderatorsMinAggregateOutputType | null\n    _max: Discussionboard_moderatorsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_moderatorsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    granted_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_moderatorsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    granted_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_moderatorsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    granted_at: number\n    revoked_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_moderatorsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    granted_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_moderatorsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    granted_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_moderatorsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    granted_at?: true\n    revoked_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_moderatorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderators to aggregate.\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorsOrderByWithRelationInput | discussionboard_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_moderators\n    **/\n    _count?: true | Discussionboard_moderatorsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_moderatorsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_moderatorsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_moderatorsAggregateType<T extends Discussionboard_moderatorsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_moderators]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_moderators[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_moderators[P]>\n  }\n\n\n\n\n  export type discussionboard_moderatorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderatorsWhereInput\n    orderBy?: discussionboard_moderatorsOrderByWithAggregationInput | discussionboard_moderatorsOrderByWithAggregationInput[]\n    by: Discussionboard_moderatorsScalarFieldEnum[] | Discussionboard_moderatorsScalarFieldEnum\n    having?: discussionboard_moderatorsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_moderatorsCountAggregateInputType | true\n    _min?: Discussionboard_moderatorsMinAggregateInputType\n    _max?: Discussionboard_moderatorsMaxAggregateInputType\n  }\n\n  export type Discussionboard_moderatorsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date\n    revoked_at: Date | null\n    _count: Discussionboard_moderatorsCountAggregateOutputType | null\n    _min: Discussionboard_moderatorsMinAggregateOutputType | null\n    _max: Discussionboard_moderatorsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_moderatorsGroupByPayload<T extends discussionboard_moderatorsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_moderatorsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_moderatorsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_moderatorsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_moderatorsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_moderatorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n    discussionboard_moderators_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_moderators$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_bans_of_target_moderator_id?: boolean | discussionboard_moderators$discussionboard_bans_of_target_moderator_idArgs<ExtArgs>\n    discussionboard_bans_of_actor_moderator_id?: boolean | discussionboard_moderators$discussionboard_bans_of_actor_moderator_idArgs<ExtArgs>\n    discussionboard_warnings_of_target_moderator_id?: boolean | discussionboard_moderators$discussionboard_warnings_of_target_moderator_idArgs<ExtArgs>\n    discussionboard_warnings_of_actor_moderator_id?: boolean | discussionboard_moderators$discussionboard_warnings_of_actor_moderator_idArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_moderators$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_moderatorsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderators\"]>\n\n  export type discussionboard_moderatorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n    discussionboard_moderators_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderators\"]>\n\n  export type discussionboard_moderatorsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n    discussionboard_moderators_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderators\"]>\n\n  export type discussionboard_moderatorsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    granted_at?: boolean\n    revoked_at?: boolean\n  }\n\n  export type discussionboard_moderatorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"granted_at\" | \"revoked_at\", ExtArgs[\"result\"][\"discussionboard_moderators\"]>\n  export type discussionboard_moderatorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_moderators_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_moderators$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_bans_of_target_moderator_id?: boolean | discussionboard_moderators$discussionboard_bans_of_target_moderator_idArgs<ExtArgs>\n    discussionboard_bans_of_actor_moderator_id?: boolean | discussionboard_moderators$discussionboard_bans_of_actor_moderator_idArgs<ExtArgs>\n    discussionboard_warnings_of_target_moderator_id?: boolean | discussionboard_moderators$discussionboard_warnings_of_target_moderator_idArgs<ExtArgs>\n    discussionboard_warnings_of_actor_moderator_id?: boolean | discussionboard_moderators$discussionboard_warnings_of_actor_moderator_idArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_moderators$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_moderatorsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_moderatorsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_moderators_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_moderatorsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_moderators_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_moderatorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_moderators\"\n    objects: {\n      discussionboard_moderators_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n      discussionboard_moderation_actions: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>[]\n      discussionboard_bans_of_target_moderator_id: Prisma.$discussionboard_bansPayload<ExtArgs>[]\n      discussionboard_bans_of_actor_moderator_id: Prisma.$discussionboard_bansPayload<ExtArgs>[]\n      discussionboard_warnings_of_target_moderator_id: Prisma.$discussionboard_warningsPayload<ExtArgs>[]\n      discussionboard_warnings_of_actor_moderator_id: Prisma.$discussionboard_warningsPayload<ExtArgs>[]\n      discussionboard_audit_logs: Prisma.$discussionboard_audit_logsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique moderator assignment record.\n       */\n      id: string\n      /**\n       * Belonged member's {@link discussionboard_members.id} - the member elevated to moderator role.\n       */\n      discussionboard_member_id: string\n      /**\n       * Datetime when moderator role was granted. Implements temporal audit trail for promotions. For example, captures elevation to moderator.\n       */\n      granted_at: Date\n      /**\n       * Datetime when moderator role was revoked (null if active). Supports demotion/historical queries.\n       */\n      revoked_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_moderators\"]>\n    composites: {}\n  }\n\n  type discussionboard_moderatorsGetPayload<S extends boolean | null | undefined | discussionboard_moderatorsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_moderatorsPayload, S>\n\n  type discussionboard_moderatorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_moderatorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_moderatorsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_moderatorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_moderators'], meta: { name: 'discussionboard_moderators' } }\n    /**\n     * Find zero or one Discussionboard_moderators that matches the filter.\n     * @param {discussionboard_moderatorsFindUniqueArgs} args - Arguments to find a Discussionboard_moderators\n     * @example\n     * // Get one Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_moderatorsFindUniqueArgs>(args: SelectSubset<T, discussionboard_moderatorsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_moderators that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_moderatorsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_moderators\n     * @example\n     * // Get one Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_moderatorsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_moderatorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorsFindFirstArgs} args - Arguments to find a Discussionboard_moderators\n     * @example\n     * // Get one Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_moderatorsFindFirstArgs>(args?: SelectSubset<T, discussionboard_moderatorsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderators that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_moderators\n     * @example\n     * // Get one Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_moderatorsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_moderatorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_moderators that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.findMany()\n     * \n     * // Get first 10 Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_moderatorsWithIdOnly = await prisma.discussionboard_moderators.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_moderatorsFindManyArgs>(args?: SelectSubset<T, discussionboard_moderatorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_moderators.\n     * @param {discussionboard_moderatorsCreateArgs} args - Arguments to create a Discussionboard_moderators.\n     * @example\n     * // Create one Discussionboard_moderators\n     * const Discussionboard_moderators = await prisma.discussionboard_moderators.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_moderators\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_moderatorsCreateArgs>(args: SelectSubset<T, discussionboard_moderatorsCreateArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_moderators.\n     * @param {discussionboard_moderatorsCreateManyArgs} args - Arguments to create many Discussionboard_moderators.\n     * @example\n     * // Create many Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_moderatorsCreateManyArgs>(args?: SelectSubset<T, discussionboard_moderatorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_moderators and returns the data saved in the database.\n     * @param {discussionboard_moderatorsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_moderators.\n     * @example\n     * // Create many Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_moderators and only return the `id`\n     * const discussionboard_moderatorsWithIdOnly = await prisma.discussionboard_moderators.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_moderatorsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_moderatorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_moderators.\n     * @param {discussionboard_moderatorsDeleteArgs} args - Arguments to delete one Discussionboard_moderators.\n     * @example\n     * // Delete one Discussionboard_moderators\n     * const Discussionboard_moderators = await prisma.discussionboard_moderators.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_moderators\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_moderatorsDeleteArgs>(args: SelectSubset<T, discussionboard_moderatorsDeleteArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_moderators.\n     * @param {discussionboard_moderatorsUpdateArgs} args - Arguments to update one Discussionboard_moderators.\n     * @example\n     * // Update one Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_moderatorsUpdateArgs>(args: SelectSubset<T, discussionboard_moderatorsUpdateArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_moderators.\n     * @param {discussionboard_moderatorsDeleteManyArgs} args - Arguments to filter Discussionboard_moderators to delete.\n     * @example\n     * // Delete a few Discussionboard_moderators\n     * const { count } = await prisma.discussionboard_moderators.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_moderatorsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_moderatorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_moderatorsUpdateManyArgs>(args: SelectSubset<T, discussionboard_moderatorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderators and returns the data updated in the database.\n     * @param {discussionboard_moderatorsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_moderators.\n     * @example\n     * // Update many Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_moderators and only return the `id`\n     * const discussionboard_moderatorsWithIdOnly = await prisma.discussionboard_moderators.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_moderatorsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_moderatorsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_moderators.\n     * @param {discussionboard_moderatorsUpsertArgs} args - Arguments to update or create a Discussionboard_moderators.\n     * @example\n     * // Update or create a Discussionboard_moderators\n     * const discussionboard_moderators = await prisma.discussionboard_moderators.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_moderators\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderators we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_moderatorsUpsertArgs>(args: SelectSubset<T, discussionboard_moderatorsUpsertArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorsCountArgs} args - Arguments to filter Discussionboard_moderators to count.\n     * @example\n     * // Count the number of Discussionboard_moderators\n     * const count = await prisma.discussionboard_moderators.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderators we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_moderatorsCountArgs>(\n      args?: Subset<T, discussionboard_moderatorsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_moderatorsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_moderatorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_moderatorsAggregateArgs>(args: Subset<T, Discussionboard_moderatorsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_moderatorsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_moderators.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderatorsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_moderatorsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_moderatorsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_moderatorsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_moderatorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_moderatorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_moderators model\n   */\n  readonly fields: discussionboard_moderatorsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_moderators.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_moderatorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_moderators_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussionboard_moderation_actions<T extends discussionboard_moderators$discussionboard_moderation_actionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderators$discussionboard_moderation_actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_bans_of_target_moderator_id<T extends discussionboard_moderators$discussionboard_bans_of_target_moderator_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderators$discussionboard_bans_of_target_moderator_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_bans_of_actor_moderator_id<T extends discussionboard_moderators$discussionboard_bans_of_actor_moderator_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderators$discussionboard_bans_of_actor_moderator_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warnings_of_target_moderator_id<T extends discussionboard_moderators$discussionboard_warnings_of_target_moderator_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderators$discussionboard_warnings_of_target_moderator_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warnings_of_actor_moderator_id<T extends discussionboard_moderators$discussionboard_warnings_of_actor_moderator_idArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderators$discussionboard_warnings_of_actor_moderator_idArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_audit_logs<T extends discussionboard_moderators$discussionboard_audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderators$discussionboard_audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_moderators model\n   */\n  interface discussionboard_moderatorsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_moderators\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_moderators\", 'String'>\n    readonly granted_at: FieldRef<\"discussionboard_moderators\", 'DateTime'>\n    readonly revoked_at: FieldRef<\"discussionboard_moderators\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_moderators findUnique\n   */\n  export type discussionboard_moderatorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderators to fetch.\n     */\n    where: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderators findUniqueOrThrow\n   */\n  export type discussionboard_moderatorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderators to fetch.\n     */\n    where: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderators findFirst\n   */\n  export type discussionboard_moderatorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderators to fetch.\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorsOrderByWithRelationInput | discussionboard_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderators.\n     */\n    cursor?: discussionboard_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderators.\n     */\n    distinct?: Discussionboard_moderatorsScalarFieldEnum | Discussionboard_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators findFirstOrThrow\n   */\n  export type discussionboard_moderatorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderators to fetch.\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorsOrderByWithRelationInput | discussionboard_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderators.\n     */\n    cursor?: discussionboard_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderators.\n     */\n    distinct?: Discussionboard_moderatorsScalarFieldEnum | Discussionboard_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators findMany\n   */\n  export type discussionboard_moderatorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderators to fetch.\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderators to fetch.\n     */\n    orderBy?: discussionboard_moderatorsOrderByWithRelationInput | discussionboard_moderatorsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_moderators.\n     */\n    cursor?: discussionboard_moderatorsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderators from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderators.\n     */\n    skip?: number\n    distinct?: Discussionboard_moderatorsScalarFieldEnum | Discussionboard_moderatorsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators create\n   */\n  export type discussionboard_moderatorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_moderators.\n     */\n    data: XOR<discussionboard_moderatorsCreateInput, discussionboard_moderatorsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_moderators createMany\n   */\n  export type discussionboard_moderatorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_moderators.\n     */\n    data: discussionboard_moderatorsCreateManyInput | discussionboard_moderatorsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_moderators createManyAndReturn\n   */\n  export type discussionboard_moderatorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_moderators.\n     */\n    data: discussionboard_moderatorsCreateManyInput | discussionboard_moderatorsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderators update\n   */\n  export type discussionboard_moderatorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_moderators.\n     */\n    data: XOR<discussionboard_moderatorsUpdateInput, discussionboard_moderatorsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_moderators to update.\n     */\n    where: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderators updateMany\n   */\n  export type discussionboard_moderatorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_moderators.\n     */\n    data: XOR<discussionboard_moderatorsUpdateManyMutationInput, discussionboard_moderatorsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderators to update\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * Limit how many discussionboard_moderators to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderators updateManyAndReturn\n   */\n  export type discussionboard_moderatorsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_moderators.\n     */\n    data: XOR<discussionboard_moderatorsUpdateManyMutationInput, discussionboard_moderatorsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderators to update\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * Limit how many discussionboard_moderators to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderators upsert\n   */\n  export type discussionboard_moderatorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_moderators to update in case it exists.\n     */\n    where: discussionboard_moderatorsWhereUniqueInput\n    /**\n     * In case the discussionboard_moderators found by the `where` argument doesn't exist, create a new discussionboard_moderators with this data.\n     */\n    create: XOR<discussionboard_moderatorsCreateInput, discussionboard_moderatorsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_moderators was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_moderatorsUpdateInput, discussionboard_moderatorsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_moderators delete\n   */\n  export type discussionboard_moderatorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_moderators to delete.\n     */\n    where: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderators deleteMany\n   */\n  export type discussionboard_moderatorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderators to delete\n     */\n    where?: discussionboard_moderatorsWhereInput\n    /**\n     * Limit how many discussionboard_moderators to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderators.discussionboard_moderation_actions\n   */\n  export type discussionboard_moderators$discussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators.discussionboard_bans_of_target_moderator_id\n   */\n  export type discussionboard_moderators$discussionboard_bans_of_target_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    where?: discussionboard_bansWhereInput\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    cursor?: discussionboard_bansWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators.discussionboard_bans_of_actor_moderator_id\n   */\n  export type discussionboard_moderators$discussionboard_bans_of_actor_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    where?: discussionboard_bansWhereInput\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    cursor?: discussionboard_bansWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators.discussionboard_warnings_of_target_moderator_id\n   */\n  export type discussionboard_moderators$discussionboard_warnings_of_target_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    cursor?: discussionboard_warningsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators.discussionboard_warnings_of_actor_moderator_id\n   */\n  export type discussionboard_moderators$discussionboard_warnings_of_actor_moderator_idArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    cursor?: discussionboard_warningsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators.discussionboard_audit_logs\n   */\n  export type discussionboard_moderators$discussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    where?: discussionboard_audit_logsWhereInput\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderators without action\n   */\n  export type discussionboard_moderatorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_members\n   */\n\n  export type AggregateDiscussionboard_members = {\n    _count: Discussionboard_membersCountAggregateOutputType | null\n    _min: Discussionboard_membersMinAggregateOutputType | null\n    _max: Discussionboard_membersMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_membersMinAggregateOutputType = {\n    id: string | null\n    username: string | null\n    password_hash: string | null\n    created_at: Date | null\n    activated_at: Date | null\n    deactivated_at: Date | null\n  }\n\n  export type Discussionboard_membersMaxAggregateOutputType = {\n    id: string | null\n    username: string | null\n    password_hash: string | null\n    created_at: Date | null\n    activated_at: Date | null\n    deactivated_at: Date | null\n  }\n\n  export type Discussionboard_membersCountAggregateOutputType = {\n    id: number\n    username: number\n    password_hash: number\n    created_at: number\n    activated_at: number\n    deactivated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_membersMinAggregateInputType = {\n    id?: true\n    username?: true\n    password_hash?: true\n    created_at?: true\n    activated_at?: true\n    deactivated_at?: true\n  }\n\n  export type Discussionboard_membersMaxAggregateInputType = {\n    id?: true\n    username?: true\n    password_hash?: true\n    created_at?: true\n    activated_at?: true\n    deactivated_at?: true\n  }\n\n  export type Discussionboard_membersCountAggregateInputType = {\n    id?: true\n    username?: true\n    password_hash?: true\n    created_at?: true\n    activated_at?: true\n    deactivated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_members to aggregate.\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_membersOrderByWithRelationInput | discussionboard_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_members\n    **/\n    _count?: true | Discussionboard_membersCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_membersMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_membersMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_membersAggregateType<T extends Discussionboard_membersAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_members]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_members[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_members[P]>\n  }\n\n\n\n\n  export type discussionboard_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_membersWhereInput\n    orderBy?: discussionboard_membersOrderByWithAggregationInput | discussionboard_membersOrderByWithAggregationInput[]\n    by: Discussionboard_membersScalarFieldEnum[] | Discussionboard_membersScalarFieldEnum\n    having?: discussionboard_membersScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_membersCountAggregateInputType | true\n    _min?: Discussionboard_membersMinAggregateInputType\n    _max?: Discussionboard_membersMaxAggregateInputType\n  }\n\n  export type Discussionboard_membersGroupByOutputType = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date\n    activated_at: Date | null\n    deactivated_at: Date | null\n    _count: Discussionboard_membersCountAggregateOutputType | null\n    _min: Discussionboard_membersMinAggregateOutputType | null\n    _max: Discussionboard_membersMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_membersGroupByPayload<T extends discussionboard_membersGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_membersGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_membersGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_membersGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_membersGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    username?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    activated_at?: boolean\n    deactivated_at?: boolean\n    discussionboard_board_subscriptions?: boolean | discussionboard_members$discussionboard_board_subscriptionsArgs<ExtArgs>\n    discussionboard_notification_settings?: boolean | discussionboard_members$discussionboard_notification_settingsArgs<ExtArgs>\n    discussionboard_admins?: boolean | discussionboard_members$discussionboard_adminsArgs<ExtArgs>\n    discussionboard_moderators?: boolean | discussionboard_members$discussionboard_moderatorsArgs<ExtArgs>\n    discussionboard_user_profiles?: boolean | discussionboard_members$discussionboard_user_profilesArgs<ExtArgs>\n    discussionboard_user_emails?: boolean | discussionboard_members$discussionboard_user_emailsArgs<ExtArgs>\n    discussionboard_user_auths?: boolean | discussionboard_members$discussionboard_user_authsArgs<ExtArgs>\n    discussionboard_user_sessions?: boolean | discussionboard_members$discussionboard_user_sessionsArgs<ExtArgs>\n    discussionboard_posts?: boolean | discussionboard_members$discussionboard_postsArgs<ExtArgs>\n    discussionboard_post_edits?: boolean | discussionboard_members$discussionboard_post_editsArgs<ExtArgs>\n    discussionboard_post_likes?: boolean | discussionboard_members$discussionboard_post_likesArgs<ExtArgs>\n    discussionboard_post_views?: boolean | discussionboard_members$discussionboard_post_viewsArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_members$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_comment_likes?: boolean | discussionboard_members$discussionboard_comment_likesArgs<ExtArgs>\n    discussionboard_comment_edits?: boolean | discussionboard_members$discussionboard_comment_editsArgs<ExtArgs>\n    discussionboard_comment_views?: boolean | discussionboard_members$discussionboard_comment_viewsArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_members$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_members$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_bans?: boolean | discussionboard_members$discussionboard_bansArgs<ExtArgs>\n    discussionboard_warnings?: boolean | discussionboard_members$discussionboard_warningsArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_members$discussionboard_audit_logsArgs<ExtArgs>\n    discussionboard_notifications?: boolean | discussionboard_members$discussionboard_notificationsArgs<ExtArgs>\n    discussionboard_alert_preferences?: boolean | discussionboard_members$discussionboard_alert_preferencesArgs<ExtArgs>\n    discussionboard_action_logs?: boolean | discussionboard_members$discussionboard_action_logsArgs<ExtArgs>\n    discussionboard_api_access_logs?: boolean | discussionboard_members$discussionboard_api_access_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_membersCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_members\"]>\n\n  export type discussionboard_membersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    username?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    activated_at?: boolean\n    deactivated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_members\"]>\n\n  export type discussionboard_membersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    username?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    activated_at?: boolean\n    deactivated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_members\"]>\n\n  export type discussionboard_membersSelectScalar = {\n    id?: boolean\n    username?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    activated_at?: boolean\n    deactivated_at?: boolean\n  }\n\n  export type discussionboard_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"username\" | \"password_hash\" | \"created_at\" | \"activated_at\" | \"deactivated_at\", ExtArgs[\"result\"][\"discussionboard_members\"]>\n  export type discussionboard_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_board_subscriptions?: boolean | discussionboard_members$discussionboard_board_subscriptionsArgs<ExtArgs>\n    discussionboard_notification_settings?: boolean | discussionboard_members$discussionboard_notification_settingsArgs<ExtArgs>\n    discussionboard_admins?: boolean | discussionboard_members$discussionboard_adminsArgs<ExtArgs>\n    discussionboard_moderators?: boolean | discussionboard_members$discussionboard_moderatorsArgs<ExtArgs>\n    discussionboard_user_profiles?: boolean | discussionboard_members$discussionboard_user_profilesArgs<ExtArgs>\n    discussionboard_user_emails?: boolean | discussionboard_members$discussionboard_user_emailsArgs<ExtArgs>\n    discussionboard_user_auths?: boolean | discussionboard_members$discussionboard_user_authsArgs<ExtArgs>\n    discussionboard_user_sessions?: boolean | discussionboard_members$discussionboard_user_sessionsArgs<ExtArgs>\n    discussionboard_posts?: boolean | discussionboard_members$discussionboard_postsArgs<ExtArgs>\n    discussionboard_post_edits?: boolean | discussionboard_members$discussionboard_post_editsArgs<ExtArgs>\n    discussionboard_post_likes?: boolean | discussionboard_members$discussionboard_post_likesArgs<ExtArgs>\n    discussionboard_post_views?: boolean | discussionboard_members$discussionboard_post_viewsArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_members$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_comment_likes?: boolean | discussionboard_members$discussionboard_comment_likesArgs<ExtArgs>\n    discussionboard_comment_edits?: boolean | discussionboard_members$discussionboard_comment_editsArgs<ExtArgs>\n    discussionboard_comment_views?: boolean | discussionboard_members$discussionboard_comment_viewsArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_members$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_members$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_bans?: boolean | discussionboard_members$discussionboard_bansArgs<ExtArgs>\n    discussionboard_warnings?: boolean | discussionboard_members$discussionboard_warningsArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_members$discussionboard_audit_logsArgs<ExtArgs>\n    discussionboard_notifications?: boolean | discussionboard_members$discussionboard_notificationsArgs<ExtArgs>\n    discussionboard_alert_preferences?: boolean | discussionboard_members$discussionboard_alert_preferencesArgs<ExtArgs>\n    discussionboard_action_logs?: boolean | discussionboard_members$discussionboard_action_logsArgs<ExtArgs>\n    discussionboard_api_access_logs?: boolean | discussionboard_members$discussionboard_api_access_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_membersCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_membersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type discussionboard_membersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $discussionboard_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_members\"\n    objects: {\n      discussionboard_board_subscriptions: Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>[]\n      discussionboard_notification_settings: Prisma.$discussionboard_notification_settingsPayload<ExtArgs> | null\n      discussionboard_admins: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      discussionboard_moderators: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n      discussionboard_user_profiles: Prisma.$discussionboard_user_profilesPayload<ExtArgs> | null\n      discussionboard_user_emails: Prisma.$discussionboard_user_emailsPayload<ExtArgs>[]\n      discussionboard_user_auths: Prisma.$discussionboard_user_authsPayload<ExtArgs>[]\n      discussionboard_user_sessions: Prisma.$discussionboard_user_sessionsPayload<ExtArgs>[]\n      discussionboard_posts: Prisma.$discussionboard_postsPayload<ExtArgs>[]\n      discussionboard_post_edits: Prisma.$discussionboard_post_editsPayload<ExtArgs>[]\n      discussionboard_post_likes: Prisma.$discussionboard_post_likesPayload<ExtArgs>[]\n      discussionboard_post_views: Prisma.$discussionboard_post_viewsPayload<ExtArgs>[]\n      discussionboard_comments: Prisma.$discussionboard_commentsPayload<ExtArgs>[]\n      discussionboard_comment_likes: Prisma.$discussionboard_comment_likesPayload<ExtArgs>[]\n      discussionboard_comment_edits: Prisma.$discussionboard_comment_editsPayload<ExtArgs>[]\n      discussionboard_comment_views: Prisma.$discussionboard_comment_viewsPayload<ExtArgs>[]\n      discussionboard_reports: Prisma.$discussionboard_reportsPayload<ExtArgs>[]\n      discussionboard_moderation_actions: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>[]\n      discussionboard_bans: Prisma.$discussionboard_bansPayload<ExtArgs>[]\n      discussionboard_warnings: Prisma.$discussionboard_warningsPayload<ExtArgs>[]\n      discussionboard_audit_logs: Prisma.$discussionboard_audit_logsPayload<ExtArgs>[]\n      discussionboard_notifications: Prisma.$discussionboard_notificationsPayload<ExtArgs>[]\n      discussionboard_alert_preferences: Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>[]\n      discussionboard_action_logs: Prisma.$discussionboard_action_logsPayload<ExtArgs>[]\n      discussionboard_api_access_logs: Prisma.$discussionboard_api_access_logsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique member account identifier.\n       */\n      id: string\n      /**\n       * Account username - unique member login handle fulfilling the registration requirement; not case-sensitive and normalized for identity mapping. Ensures user uniqueness at platform level. Example: johndoe.\n       */\n      username: string\n      /**\n       * Hashed password for secure authentication (never raw password), per non-functional security requirement. Complies with encryption policy and data protection. Example: bcrypt or Argon2 hash string.\n       */\n      password_hash: string\n      /**\n       * Datetime when member account was created. Implements registration audit trail and supports search/sorting. Example: upon sign up.\n       */\n      created_at: Date\n      /**\n       * Datetime when account was activated/completed verification. Null if not verified yet. Example: after email confirmation workflow.\n       */\n      activated_at: Date | null\n      /**\n       * Datetime of account deactivation (soft delete or permanent). Null if active. Supports retention policy and reactivation scenarios.\n       */\n      deactivated_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_members\"]>\n    composites: {}\n  }\n\n  type discussionboard_membersGetPayload<S extends boolean | null | undefined | discussionboard_membersDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_membersPayload, S>\n\n  type discussionboard_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_membersCountAggregateInputType | true\n    }\n\n  export interface discussionboard_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_members'], meta: { name: 'discussionboard_members' } }\n    /**\n     * Find zero or one Discussionboard_members that matches the filter.\n     * @param {discussionboard_membersFindUniqueArgs} args - Arguments to find a Discussionboard_members\n     * @example\n     * // Get one Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_membersFindUniqueArgs>(args: SelectSubset<T, discussionboard_membersFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_members that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_membersFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_members\n     * @example\n     * // Get one Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_members that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_membersFindFirstArgs} args - Arguments to find a Discussionboard_members\n     * @example\n     * // Get one Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_membersFindFirstArgs>(args?: SelectSubset<T, discussionboard_membersFindFirstArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_members that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_membersFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_members\n     * @example\n     * // Get one Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_members that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_membersFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.findMany()\n     * \n     * // Get first 10 Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_membersWithIdOnly = await prisma.discussionboard_members.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_membersFindManyArgs>(args?: SelectSubset<T, discussionboard_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_members.\n     * @param {discussionboard_membersCreateArgs} args - Arguments to create a Discussionboard_members.\n     * @example\n     * // Create one Discussionboard_members\n     * const Discussionboard_members = await prisma.discussionboard_members.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_members\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_membersCreateArgs>(args: SelectSubset<T, discussionboard_membersCreateArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_members.\n     * @param {discussionboard_membersCreateManyArgs} args - Arguments to create many Discussionboard_members.\n     * @example\n     * // Create many Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_membersCreateManyArgs>(args?: SelectSubset<T, discussionboard_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_members and returns the data saved in the database.\n     * @param {discussionboard_membersCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_members.\n     * @example\n     * // Create many Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_members and only return the `id`\n     * const discussionboard_membersWithIdOnly = await prisma.discussionboard_members.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_membersCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_membersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_members.\n     * @param {discussionboard_membersDeleteArgs} args - Arguments to delete one Discussionboard_members.\n     * @example\n     * // Delete one Discussionboard_members\n     * const Discussionboard_members = await prisma.discussionboard_members.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_members\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_membersDeleteArgs>(args: SelectSubset<T, discussionboard_membersDeleteArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_members.\n     * @param {discussionboard_membersUpdateArgs} args - Arguments to update one Discussionboard_members.\n     * @example\n     * // Update one Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_membersUpdateArgs>(args: SelectSubset<T, discussionboard_membersUpdateArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_members.\n     * @param {discussionboard_membersDeleteManyArgs} args - Arguments to filter Discussionboard_members to delete.\n     * @example\n     * // Delete a few Discussionboard_members\n     * const { count } = await prisma.discussionboard_members.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_membersDeleteManyArgs>(args?: SelectSubset<T, discussionboard_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_membersUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_membersUpdateManyArgs>(args: SelectSubset<T, discussionboard_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_members and returns the data updated in the database.\n     * @param {discussionboard_membersUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_members.\n     * @example\n     * // Update many Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_members and only return the `id`\n     * const discussionboard_membersWithIdOnly = await prisma.discussionboard_members.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_membersUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_membersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_members.\n     * @param {discussionboard_membersUpsertArgs} args - Arguments to update or create a Discussionboard_members.\n     * @example\n     * // Update or create a Discussionboard_members\n     * const discussionboard_members = await prisma.discussionboard_members.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_members\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_members we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_membersUpsertArgs>(args: SelectSubset<T, discussionboard_membersUpsertArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_membersCountArgs} args - Arguments to filter Discussionboard_members to count.\n     * @example\n     * // Count the number of Discussionboard_members\n     * const count = await prisma.discussionboard_members.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_members we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_membersCountArgs>(\n      args?: Subset<T, discussionboard_membersCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_membersCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_membersAggregateArgs>(args: Subset<T, Discussionboard_membersAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_membersAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_members.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_membersGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_membersGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_membersGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_membersGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_members model\n   */\n  readonly fields: discussionboard_membersFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_members.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_board_subscriptions<T extends discussionboard_members$discussionboard_board_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_board_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_board_subscriptionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notification_settings<T extends discussionboard_members$discussionboard_notification_settingsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_notification_settingsArgs<ExtArgs>>): Prisma__discussionboard_notification_settingsClient<$Result.GetResult<Prisma.$discussionboard_notification_settingsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_admins<T extends discussionboard_members$discussionboard_adminsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_adminsArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_moderators<T extends discussionboard_members$discussionboard_moderatorsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_moderatorsArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_user_profiles<T extends discussionboard_members$discussionboard_user_profilesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_user_profilesArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_user_emails<T extends discussionboard_members$discussionboard_user_emailsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_user_emailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_user_auths<T extends discussionboard_members$discussionboard_user_authsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_user_authsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_user_sessions<T extends discussionboard_members$discussionboard_user_sessionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_user_sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_posts<T extends discussionboard_members$discussionboard_postsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_post_edits<T extends discussionboard_members$discussionboard_post_editsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_post_editsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_post_likes<T extends discussionboard_members$discussionboard_post_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_post_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_post_views<T extends discussionboard_members$discussionboard_post_viewsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_post_viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comments<T extends discussionboard_members$discussionboard_commentsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comment_likes<T extends discussionboard_members$discussionboard_comment_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_comment_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comment_edits<T extends discussionboard_members$discussionboard_comment_editsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_comment_editsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comment_views<T extends discussionboard_members$discussionboard_comment_viewsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_comment_viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_reports<T extends discussionboard_members$discussionboard_reportsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_actions<T extends discussionboard_members$discussionboard_moderation_actionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_moderation_actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_bans<T extends discussionboard_members$discussionboard_bansArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_bansArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warnings<T extends discussionboard_members$discussionboard_warningsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_warningsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_audit_logs<T extends discussionboard_members$discussionboard_audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_notifications<T extends discussionboard_members$discussionboard_notificationsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_alert_preferences<T extends discussionboard_members$discussionboard_alert_preferencesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_alert_preferencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_action_logs<T extends discussionboard_members$discussionboard_action_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_action_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_api_access_logs<T extends discussionboard_members$discussionboard_api_access_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_members$discussionboard_api_access_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_members model\n   */\n  interface discussionboard_membersFieldRefs {\n    readonly id: FieldRef<\"discussionboard_members\", 'String'>\n    readonly username: FieldRef<\"discussionboard_members\", 'String'>\n    readonly password_hash: FieldRef<\"discussionboard_members\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_members\", 'DateTime'>\n    readonly activated_at: FieldRef<\"discussionboard_members\", 'DateTime'>\n    readonly deactivated_at: FieldRef<\"discussionboard_members\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_members findUnique\n   */\n  export type discussionboard_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_members to fetch.\n     */\n    where: discussionboard_membersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_members findUniqueOrThrow\n   */\n  export type discussionboard_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_members to fetch.\n     */\n    where: discussionboard_membersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_members findFirst\n   */\n  export type discussionboard_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_members to fetch.\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_membersOrderByWithRelationInput | discussionboard_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_members.\n     */\n    cursor?: discussionboard_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_members.\n     */\n    distinct?: Discussionboard_membersScalarFieldEnum | Discussionboard_membersScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members findFirstOrThrow\n   */\n  export type discussionboard_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_members to fetch.\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_membersOrderByWithRelationInput | discussionboard_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_members.\n     */\n    cursor?: discussionboard_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_members.\n     */\n    distinct?: Discussionboard_membersScalarFieldEnum | Discussionboard_membersScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members findMany\n   */\n  export type discussionboard_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_members to fetch.\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_members to fetch.\n     */\n    orderBy?: discussionboard_membersOrderByWithRelationInput | discussionboard_membersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_members.\n     */\n    cursor?: discussionboard_membersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_members from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_members.\n     */\n    skip?: number\n    distinct?: Discussionboard_membersScalarFieldEnum | Discussionboard_membersScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members create\n   */\n  export type discussionboard_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_members.\n     */\n    data: XOR<discussionboard_membersCreateInput, discussionboard_membersUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_members createMany\n   */\n  export type discussionboard_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_members.\n     */\n    data: discussionboard_membersCreateManyInput | discussionboard_membersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_members createManyAndReturn\n   */\n  export type discussionboard_membersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_members.\n     */\n    data: discussionboard_membersCreateManyInput | discussionboard_membersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_members update\n   */\n  export type discussionboard_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_members.\n     */\n    data: XOR<discussionboard_membersUpdateInput, discussionboard_membersUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_members to update.\n     */\n    where: discussionboard_membersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_members updateMany\n   */\n  export type discussionboard_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_members.\n     */\n    data: XOR<discussionboard_membersUpdateManyMutationInput, discussionboard_membersUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_members to update\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * Limit how many discussionboard_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_members updateManyAndReturn\n   */\n  export type discussionboard_membersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_members.\n     */\n    data: XOR<discussionboard_membersUpdateManyMutationInput, discussionboard_membersUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_members to update\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * Limit how many discussionboard_members to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_members upsert\n   */\n  export type discussionboard_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_members to update in case it exists.\n     */\n    where: discussionboard_membersWhereUniqueInput\n    /**\n     * In case the discussionboard_members found by the `where` argument doesn't exist, create a new discussionboard_members with this data.\n     */\n    create: XOR<discussionboard_membersCreateInput, discussionboard_membersUncheckedCreateInput>\n    /**\n     * In case the discussionboard_members was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_membersUpdateInput, discussionboard_membersUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_members delete\n   */\n  export type discussionboard_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_members to delete.\n     */\n    where: discussionboard_membersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_members deleteMany\n   */\n  export type discussionboard_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_members to delete\n     */\n    where?: discussionboard_membersWhereInput\n    /**\n     * Limit how many discussionboard_members to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_members.discussionboard_board_subscriptions\n   */\n  export type discussionboard_members$discussionboard_board_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_board_subscriptions\n     */\n    select?: discussionboard_board_subscriptionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_board_subscriptions\n     */\n    omit?: discussionboard_board_subscriptionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_board_subscriptionsInclude<ExtArgs> | null\n    where?: discussionboard_board_subscriptionsWhereInput\n    orderBy?: discussionboard_board_subscriptionsOrderByWithRelationInput | discussionboard_board_subscriptionsOrderByWithRelationInput[]\n    cursor?: discussionboard_board_subscriptionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_board_subscriptionsScalarFieldEnum | Discussionboard_board_subscriptionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_notification_settings\n   */\n  export type discussionboard_members$discussionboard_notification_settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notification_settings\n     */\n    select?: discussionboard_notification_settingsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notification_settings\n     */\n    omit?: discussionboard_notification_settingsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notification_settingsInclude<ExtArgs> | null\n    where?: discussionboard_notification_settingsWhereInput\n  }\n\n  /**\n   * discussionboard_members.discussionboard_admins\n   */\n  export type discussionboard_members$discussionboard_adminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_members.discussionboard_moderators\n   */\n  export type discussionboard_members$discussionboard_moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_members.discussionboard_user_profiles\n   */\n  export type discussionboard_members$discussionboard_user_profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    where?: discussionboard_user_profilesWhereInput\n  }\n\n  /**\n   * discussionboard_members.discussionboard_user_emails\n   */\n  export type discussionboard_members$discussionboard_user_emailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    where?: discussionboard_user_emailsWhereInput\n    orderBy?: discussionboard_user_emailsOrderByWithRelationInput | discussionboard_user_emailsOrderByWithRelationInput[]\n    cursor?: discussionboard_user_emailsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_user_emailsScalarFieldEnum | Discussionboard_user_emailsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_user_auths\n   */\n  export type discussionboard_members$discussionboard_user_authsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    where?: discussionboard_user_authsWhereInput\n    orderBy?: discussionboard_user_authsOrderByWithRelationInput | discussionboard_user_authsOrderByWithRelationInput[]\n    cursor?: discussionboard_user_authsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_user_authsScalarFieldEnum | Discussionboard_user_authsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_user_sessions\n   */\n  export type discussionboard_members$discussionboard_user_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    where?: discussionboard_user_sessionsWhereInput\n    orderBy?: discussionboard_user_sessionsOrderByWithRelationInput | discussionboard_user_sessionsOrderByWithRelationInput[]\n    cursor?: discussionboard_user_sessionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_user_sessionsScalarFieldEnum | Discussionboard_user_sessionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_posts\n   */\n  export type discussionboard_members$discussionboard_postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    where?: discussionboard_postsWhereInput\n    orderBy?: discussionboard_postsOrderByWithRelationInput | discussionboard_postsOrderByWithRelationInput[]\n    cursor?: discussionboard_postsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_postsScalarFieldEnum | Discussionboard_postsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_post_edits\n   */\n  export type discussionboard_members$discussionboard_post_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    where?: discussionboard_post_editsWhereInput\n    orderBy?: discussionboard_post_editsOrderByWithRelationInput | discussionboard_post_editsOrderByWithRelationInput[]\n    cursor?: discussionboard_post_editsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_editsScalarFieldEnum | Discussionboard_post_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_post_likes\n   */\n  export type discussionboard_members$discussionboard_post_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    where?: discussionboard_post_likesWhereInput\n    orderBy?: discussionboard_post_likesOrderByWithRelationInput | discussionboard_post_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_post_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_likesScalarFieldEnum | Discussionboard_post_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_post_views\n   */\n  export type discussionboard_members$discussionboard_post_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    where?: discussionboard_post_viewsWhereInput\n    orderBy?: discussionboard_post_viewsOrderByWithRelationInput | discussionboard_post_viewsOrderByWithRelationInput[]\n    cursor?: discussionboard_post_viewsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_viewsScalarFieldEnum | Discussionboard_post_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_comments\n   */\n  export type discussionboard_members$discussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    cursor?: discussionboard_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_comment_likes\n   */\n  export type discussionboard_members$discussionboard_comment_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    where?: discussionboard_comment_likesWhereInput\n    orderBy?: discussionboard_comment_likesOrderByWithRelationInput | discussionboard_comment_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_comment_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_comment_likesScalarFieldEnum | Discussionboard_comment_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_comment_edits\n   */\n  export type discussionboard_members$discussionboard_comment_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    where?: discussionboard_comment_editsWhereInput\n    orderBy?: discussionboard_comment_editsOrderByWithRelationInput | discussionboard_comment_editsOrderByWithRelationInput[]\n    cursor?: discussionboard_comment_editsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_comment_editsScalarFieldEnum | Discussionboard_comment_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_comment_views\n   */\n  export type discussionboard_members$discussionboard_comment_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    where?: discussionboard_comment_viewsWhereInput\n    orderBy?: discussionboard_comment_viewsOrderByWithRelationInput | discussionboard_comment_viewsOrderByWithRelationInput[]\n    cursor?: discussionboard_comment_viewsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_comment_viewsScalarFieldEnum | Discussionboard_comment_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_reports\n   */\n  export type discussionboard_members$discussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    cursor?: discussionboard_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_moderation_actions\n   */\n  export type discussionboard_members$discussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_bans\n   */\n  export type discussionboard_members$discussionboard_bansArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    where?: discussionboard_bansWhereInput\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    cursor?: discussionboard_bansWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_warnings\n   */\n  export type discussionboard_members$discussionboard_warningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    cursor?: discussionboard_warningsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_audit_logs\n   */\n  export type discussionboard_members$discussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    where?: discussionboard_audit_logsWhereInput\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_notifications\n   */\n  export type discussionboard_members$discussionboard_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    where?: discussionboard_notificationsWhereInput\n    orderBy?: discussionboard_notificationsOrderByWithRelationInput | discussionboard_notificationsOrderByWithRelationInput[]\n    cursor?: discussionboard_notificationsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_notificationsScalarFieldEnum | Discussionboard_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_alert_preferences\n   */\n  export type discussionboard_members$discussionboard_alert_preferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    where?: discussionboard_alert_preferencesWhereInput\n    orderBy?: discussionboard_alert_preferencesOrderByWithRelationInput | discussionboard_alert_preferencesOrderByWithRelationInput[]\n    cursor?: discussionboard_alert_preferencesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_alert_preferencesScalarFieldEnum | Discussionboard_alert_preferencesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_action_logs\n   */\n  export type discussionboard_members$discussionboard_action_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    where?: discussionboard_action_logsWhereInput\n    orderBy?: discussionboard_action_logsOrderByWithRelationInput | discussionboard_action_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_action_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_action_logsScalarFieldEnum | Discussionboard_action_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members.discussionboard_api_access_logs\n   */\n  export type discussionboard_members$discussionboard_api_access_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    where?: discussionboard_api_access_logsWhereInput\n    orderBy?: discussionboard_api_access_logsOrderByWithRelationInput | discussionboard_api_access_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_api_access_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_api_access_logsScalarFieldEnum | Discussionboard_api_access_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_members without action\n   */\n  export type discussionboard_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_guests\n   */\n\n  export type AggregateDiscussionboard_guests = {\n    _count: Discussionboard_guestsCountAggregateOutputType | null\n    _min: Discussionboard_guestsMinAggregateOutputType | null\n    _max: Discussionboard_guestsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_guestsMinAggregateOutputType = {\n    id: string | null\n    session_token: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_guestsMaxAggregateOutputType = {\n    id: string | null\n    session_token: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_guestsCountAggregateOutputType = {\n    id: number\n    session_token: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_guestsMinAggregateInputType = {\n    id?: true\n    session_token?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_guestsMaxAggregateInputType = {\n    id?: true\n    session_token?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_guestsCountAggregateInputType = {\n    id?: true\n    session_token?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_guestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_guests to aggregate.\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_guests to fetch.\n     */\n    orderBy?: discussionboard_guestsOrderByWithRelationInput | discussionboard_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_guests\n    **/\n    _count?: true | Discussionboard_guestsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_guestsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_guestsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_guestsAggregateType<T extends Discussionboard_guestsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_guests]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_guests[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_guests[P]>\n  }\n\n\n\n\n  export type discussionboard_guestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_guestsWhereInput\n    orderBy?: discussionboard_guestsOrderByWithAggregationInput | discussionboard_guestsOrderByWithAggregationInput[]\n    by: Discussionboard_guestsScalarFieldEnum[] | Discussionboard_guestsScalarFieldEnum\n    having?: discussionboard_guestsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_guestsCountAggregateInputType | true\n    _min?: Discussionboard_guestsMinAggregateInputType\n    _max?: Discussionboard_guestsMaxAggregateInputType\n  }\n\n  export type Discussionboard_guestsGroupByOutputType = {\n    id: string\n    session_token: string\n    created_at: Date\n    _count: Discussionboard_guestsCountAggregateOutputType | null\n    _min: Discussionboard_guestsMinAggregateOutputType | null\n    _max: Discussionboard_guestsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_guestsGroupByPayload<T extends discussionboard_guestsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_guestsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_guestsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_guestsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_guestsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_guestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_guests\"]>\n\n  export type discussionboard_guestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_guests\"]>\n\n  export type discussionboard_guestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_guests\"]>\n\n  export type discussionboard_guestsSelectScalar = {\n    id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_guestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"session_token\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_guests\"]>\n\n  export type $discussionboard_guestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_guests\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique guest session identifier.\n       */\n      id: string\n      /**\n       * Opaque session cookie or token identifying the guest browser. Supports uniqueness and privacy tracking. For example: UUID or secure random token.\n       */\n      session_token: string\n      /**\n       * Datetime guest session was initiated. Implements guest activity timeline; supports reporting and session expiry logic.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_guests\"]>\n    composites: {}\n  }\n\n  type discussionboard_guestsGetPayload<S extends boolean | null | undefined | discussionboard_guestsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_guestsPayload, S>\n\n  type discussionboard_guestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_guestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_guestsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_guestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_guests'], meta: { name: 'discussionboard_guests' } }\n    /**\n     * Find zero or one Discussionboard_guests that matches the filter.\n     * @param {discussionboard_guestsFindUniqueArgs} args - Arguments to find a Discussionboard_guests\n     * @example\n     * // Get one Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_guestsFindUniqueArgs>(args: SelectSubset<T, discussionboard_guestsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_guests that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_guestsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_guests\n     * @example\n     * // Get one Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_guestsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_guestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_guests that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_guestsFindFirstArgs} args - Arguments to find a Discussionboard_guests\n     * @example\n     * // Get one Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_guestsFindFirstArgs>(args?: SelectSubset<T, discussionboard_guestsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_guests that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_guestsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_guests\n     * @example\n     * // Get one Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_guestsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_guestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_guests that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_guestsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.findMany()\n     * \n     * // Get first 10 Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_guestsWithIdOnly = await prisma.discussionboard_guests.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_guestsFindManyArgs>(args?: SelectSubset<T, discussionboard_guestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_guests.\n     * @param {discussionboard_guestsCreateArgs} args - Arguments to create a Discussionboard_guests.\n     * @example\n     * // Create one Discussionboard_guests\n     * const Discussionboard_guests = await prisma.discussionboard_guests.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_guests\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_guestsCreateArgs>(args: SelectSubset<T, discussionboard_guestsCreateArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_guests.\n     * @param {discussionboard_guestsCreateManyArgs} args - Arguments to create many Discussionboard_guests.\n     * @example\n     * // Create many Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_guestsCreateManyArgs>(args?: SelectSubset<T, discussionboard_guestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_guests and returns the data saved in the database.\n     * @param {discussionboard_guestsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_guests.\n     * @example\n     * // Create many Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_guests and only return the `id`\n     * const discussionboard_guestsWithIdOnly = await prisma.discussionboard_guests.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_guestsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_guestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_guests.\n     * @param {discussionboard_guestsDeleteArgs} args - Arguments to delete one Discussionboard_guests.\n     * @example\n     * // Delete one Discussionboard_guests\n     * const Discussionboard_guests = await prisma.discussionboard_guests.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_guests\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_guestsDeleteArgs>(args: SelectSubset<T, discussionboard_guestsDeleteArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_guests.\n     * @param {discussionboard_guestsUpdateArgs} args - Arguments to update one Discussionboard_guests.\n     * @example\n     * // Update one Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_guestsUpdateArgs>(args: SelectSubset<T, discussionboard_guestsUpdateArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_guests.\n     * @param {discussionboard_guestsDeleteManyArgs} args - Arguments to filter Discussionboard_guests to delete.\n     * @example\n     * // Delete a few Discussionboard_guests\n     * const { count } = await prisma.discussionboard_guests.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_guestsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_guestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_guestsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_guestsUpdateManyArgs>(args: SelectSubset<T, discussionboard_guestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_guests and returns the data updated in the database.\n     * @param {discussionboard_guestsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_guests.\n     * @example\n     * // Update many Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_guests and only return the `id`\n     * const discussionboard_guestsWithIdOnly = await prisma.discussionboard_guests.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_guestsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_guestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_guests.\n     * @param {discussionboard_guestsUpsertArgs} args - Arguments to update or create a Discussionboard_guests.\n     * @example\n     * // Update or create a Discussionboard_guests\n     * const discussionboard_guests = await prisma.discussionboard_guests.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_guests\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_guests we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_guestsUpsertArgs>(args: SelectSubset<T, discussionboard_guestsUpsertArgs<ExtArgs>>): Prisma__discussionboard_guestsClient<$Result.GetResult<Prisma.$discussionboard_guestsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_guestsCountArgs} args - Arguments to filter Discussionboard_guests to count.\n     * @example\n     * // Count the number of Discussionboard_guests\n     * const count = await prisma.discussionboard_guests.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_guests we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_guestsCountArgs>(\n      args?: Subset<T, discussionboard_guestsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_guestsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_guestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_guestsAggregateArgs>(args: Subset<T, Discussionboard_guestsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_guestsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_guests.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_guestsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_guestsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_guestsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_guestsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_guestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_guestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_guests model\n   */\n  readonly fields: discussionboard_guestsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_guests.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_guestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_guests model\n   */\n  interface discussionboard_guestsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_guests\", 'String'>\n    readonly session_token: FieldRef<\"discussionboard_guests\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_guests\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_guests findUnique\n   */\n  export type discussionboard_guestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_guests to fetch.\n     */\n    where: discussionboard_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_guests findUniqueOrThrow\n   */\n  export type discussionboard_guestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_guests to fetch.\n     */\n    where: discussionboard_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_guests findFirst\n   */\n  export type discussionboard_guestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_guests to fetch.\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_guests to fetch.\n     */\n    orderBy?: discussionboard_guestsOrderByWithRelationInput | discussionboard_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_guests.\n     */\n    cursor?: discussionboard_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_guests.\n     */\n    distinct?: Discussionboard_guestsScalarFieldEnum | Discussionboard_guestsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_guests findFirstOrThrow\n   */\n  export type discussionboard_guestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_guests to fetch.\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_guests to fetch.\n     */\n    orderBy?: discussionboard_guestsOrderByWithRelationInput | discussionboard_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_guests.\n     */\n    cursor?: discussionboard_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_guests.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_guests.\n     */\n    distinct?: Discussionboard_guestsScalarFieldEnum | Discussionboard_guestsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_guests findMany\n   */\n  export type discussionboard_guestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_guests to fetch.\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_guests to fetch.\n     */\n    orderBy?: discussionboard_guestsOrderByWithRelationInput | discussionboard_guestsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_guests.\n     */\n    cursor?: discussionboard_guestsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_guests from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_guests.\n     */\n    skip?: number\n    distinct?: Discussionboard_guestsScalarFieldEnum | Discussionboard_guestsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_guests create\n   */\n  export type discussionboard_guestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_guests.\n     */\n    data: XOR<discussionboard_guestsCreateInput, discussionboard_guestsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_guests createMany\n   */\n  export type discussionboard_guestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_guests.\n     */\n    data: discussionboard_guestsCreateManyInput | discussionboard_guestsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_guests createManyAndReturn\n   */\n  export type discussionboard_guestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_guests.\n     */\n    data: discussionboard_guestsCreateManyInput | discussionboard_guestsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_guests update\n   */\n  export type discussionboard_guestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_guests.\n     */\n    data: XOR<discussionboard_guestsUpdateInput, discussionboard_guestsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_guests to update.\n     */\n    where: discussionboard_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_guests updateMany\n   */\n  export type discussionboard_guestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_guests.\n     */\n    data: XOR<discussionboard_guestsUpdateManyMutationInput, discussionboard_guestsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_guests to update\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * Limit how many discussionboard_guests to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_guests updateManyAndReturn\n   */\n  export type discussionboard_guestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_guests.\n     */\n    data: XOR<discussionboard_guestsUpdateManyMutationInput, discussionboard_guestsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_guests to update\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * Limit how many discussionboard_guests to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_guests upsert\n   */\n  export type discussionboard_guestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_guests to update in case it exists.\n     */\n    where: discussionboard_guestsWhereUniqueInput\n    /**\n     * In case the discussionboard_guests found by the `where` argument doesn't exist, create a new discussionboard_guests with this data.\n     */\n    create: XOR<discussionboard_guestsCreateInput, discussionboard_guestsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_guests was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_guestsUpdateInput, discussionboard_guestsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_guests delete\n   */\n  export type discussionboard_guestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_guests to delete.\n     */\n    where: discussionboard_guestsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_guests deleteMany\n   */\n  export type discussionboard_guestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_guests to delete\n     */\n    where?: discussionboard_guestsWhereInput\n    /**\n     * Limit how many discussionboard_guests to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_guests without action\n   */\n  export type discussionboard_guestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_guests\n     */\n    select?: discussionboard_guestsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_guests\n     */\n    omit?: discussionboard_guestsOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_user_profiles\n   */\n\n  export type AggregateDiscussionboard_user_profiles = {\n    _count: Discussionboard_user_profilesCountAggregateOutputType | null\n    _min: Discussionboard_user_profilesMinAggregateOutputType | null\n    _max: Discussionboard_user_profilesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_user_profilesMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    display_name: string | null\n    bio: string | null\n    avatar_url: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_user_profilesMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    display_name: string | null\n    bio: string | null\n    avatar_url: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_user_profilesCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    display_name: number\n    bio: number\n    avatar_url: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_user_profilesMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    display_name?: true\n    bio?: true\n    avatar_url?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_user_profilesMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    display_name?: true\n    bio?: true\n    avatar_url?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_user_profilesCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    display_name?: true\n    bio?: true\n    avatar_url?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_user_profilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_profiles to aggregate.\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profilesOrderByWithRelationInput | discussionboard_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_user_profiles\n    **/\n    _count?: true | Discussionboard_user_profilesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_user_profilesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_user_profilesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_user_profilesAggregateType<T extends Discussionboard_user_profilesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_user_profiles]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_user_profiles[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_user_profiles[P]>\n  }\n\n\n\n\n  export type discussionboard_user_profilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_profilesWhereInput\n    orderBy?: discussionboard_user_profilesOrderByWithAggregationInput | discussionboard_user_profilesOrderByWithAggregationInput[]\n    by: Discussionboard_user_profilesScalarFieldEnum[] | Discussionboard_user_profilesScalarFieldEnum\n    having?: discussionboard_user_profilesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_user_profilesCountAggregateInputType | true\n    _min?: Discussionboard_user_profilesMinAggregateInputType\n    _max?: Discussionboard_user_profilesMaxAggregateInputType\n  }\n\n  export type Discussionboard_user_profilesGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    display_name: string | null\n    bio: string | null\n    avatar_url: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_user_profilesCountAggregateOutputType | null\n    _min: Discussionboard_user_profilesMinAggregateOutputType | null\n    _max: Discussionboard_user_profilesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_user_profilesGroupByPayload<T extends discussionboard_user_profilesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_user_profilesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_user_profilesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_user_profilesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_user_profilesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_user_profilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    display_name?: boolean\n    bio?: boolean\n    avatar_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussionboard_user_profiles_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_profiles\"]>\n\n  export type discussionboard_user_profilesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    display_name?: boolean\n    bio?: boolean\n    avatar_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussionboard_user_profiles_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_profiles\"]>\n\n  export type discussionboard_user_profilesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    display_name?: boolean\n    bio?: boolean\n    avatar_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    discussionboard_user_profiles_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_profiles\"]>\n\n  export type discussionboard_user_profilesSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    display_name?: boolean\n    bio?: boolean\n    avatar_url?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_user_profilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"display_name\" | \"bio\" | \"avatar_url\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_user_profiles\"]>\n  export type discussionboard_user_profilesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_profiles_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_profilesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_profiles_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_profilesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_profiles_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_user_profilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_user_profiles\"\n    objects: {\n      discussionboard_user_profiles_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique profile record identifier.\n       */\n      id: string\n      /**\n       * Belonged member's {@link discussionboard_members.id}. One-to-one mapping from member to user profile.\n       */\n      discussionboard_member_id: string\n      /**\n       * Public display name or nickname for the user (not required to match username). Implements customization requirement as per usability guideline. Example: John R.\n       */\n      display_name: string | null\n      /**\n       * Short user biography or introduction, as per personalization feature. Maintains normalized structure; null if not set.\n       */\n      bio: string | null\n      /**\n       * Profile image/avatar URI, facilitating multimedia enhancement and personalization. Null if not provided; stored as URI string. Example: https://cdn.site/avatar/123.\n       */\n      avatar_url: string | null\n      /**\n       * Datetime profile was created. Implements audit trail for customization events.\n       */\n      created_at: Date\n      /**\n       * Datetime profile was last updated, supports version awareness for profile changes. Enables profile history tracking.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_user_profiles\"]>\n    composites: {}\n  }\n\n  type discussionboard_user_profilesGetPayload<S extends boolean | null | undefined | discussionboard_user_profilesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_user_profilesPayload, S>\n\n  type discussionboard_user_profilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_user_profilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_user_profilesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_user_profilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_user_profiles'], meta: { name: 'discussionboard_user_profiles' } }\n    /**\n     * Find zero or one Discussionboard_user_profiles that matches the filter.\n     * @param {discussionboard_user_profilesFindUniqueArgs} args - Arguments to find a Discussionboard_user_profiles\n     * @example\n     * // Get one Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_user_profilesFindUniqueArgs>(args: SelectSubset<T, discussionboard_user_profilesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_user_profiles that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_user_profilesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_user_profiles\n     * @example\n     * // Get one Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_user_profilesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_user_profilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_profiles that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profilesFindFirstArgs} args - Arguments to find a Discussionboard_user_profiles\n     * @example\n     * // Get one Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_user_profilesFindFirstArgs>(args?: SelectSubset<T, discussionboard_user_profilesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_profiles that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profilesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_user_profiles\n     * @example\n     * // Get one Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_user_profilesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_user_profilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_user_profiles that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profilesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findMany()\n     * \n     * // Get first 10 Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_user_profilesWithIdOnly = await prisma.discussionboard_user_profiles.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_user_profilesFindManyArgs>(args?: SelectSubset<T, discussionboard_user_profilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_user_profiles.\n     * @param {discussionboard_user_profilesCreateArgs} args - Arguments to create a Discussionboard_user_profiles.\n     * @example\n     * // Create one Discussionboard_user_profiles\n     * const Discussionboard_user_profiles = await prisma.discussionboard_user_profiles.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_user_profiles\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_user_profilesCreateArgs>(args: SelectSubset<T, discussionboard_user_profilesCreateArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_user_profiles.\n     * @param {discussionboard_user_profilesCreateManyArgs} args - Arguments to create many Discussionboard_user_profiles.\n     * @example\n     * // Create many Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_user_profilesCreateManyArgs>(args?: SelectSubset<T, discussionboard_user_profilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_user_profiles and returns the data saved in the database.\n     * @param {discussionboard_user_profilesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_user_profiles.\n     * @example\n     * // Create many Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_user_profiles and only return the `id`\n     * const discussionboard_user_profilesWithIdOnly = await prisma.discussionboard_user_profiles.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_user_profilesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_user_profilesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_user_profiles.\n     * @param {discussionboard_user_profilesDeleteArgs} args - Arguments to delete one Discussionboard_user_profiles.\n     * @example\n     * // Delete one Discussionboard_user_profiles\n     * const Discussionboard_user_profiles = await prisma.discussionboard_user_profiles.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_user_profiles\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_user_profilesDeleteArgs>(args: SelectSubset<T, discussionboard_user_profilesDeleteArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_user_profiles.\n     * @param {discussionboard_user_profilesUpdateArgs} args - Arguments to update one Discussionboard_user_profiles.\n     * @example\n     * // Update one Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_user_profilesUpdateArgs>(args: SelectSubset<T, discussionboard_user_profilesUpdateArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_user_profiles.\n     * @param {discussionboard_user_profilesDeleteManyArgs} args - Arguments to filter Discussionboard_user_profiles to delete.\n     * @example\n     * // Delete a few Discussionboard_user_profiles\n     * const { count } = await prisma.discussionboard_user_profiles.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_user_profilesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_user_profilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profilesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_user_profilesUpdateManyArgs>(args: SelectSubset<T, discussionboard_user_profilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_profiles and returns the data updated in the database.\n     * @param {discussionboard_user_profilesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_user_profiles.\n     * @example\n     * // Update many Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_user_profiles and only return the `id`\n     * const discussionboard_user_profilesWithIdOnly = await prisma.discussionboard_user_profiles.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_user_profilesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_user_profilesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_user_profiles.\n     * @param {discussionboard_user_profilesUpsertArgs} args - Arguments to update or create a Discussionboard_user_profiles.\n     * @example\n     * // Update or create a Discussionboard_user_profiles\n     * const discussionboard_user_profiles = await prisma.discussionboard_user_profiles.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_user_profiles\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_profiles we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_user_profilesUpsertArgs>(args: SelectSubset<T, discussionboard_user_profilesUpsertArgs<ExtArgs>>): Prisma__discussionboard_user_profilesClient<$Result.GetResult<Prisma.$discussionboard_user_profilesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profilesCountArgs} args - Arguments to filter Discussionboard_user_profiles to count.\n     * @example\n     * // Count the number of Discussionboard_user_profiles\n     * const count = await prisma.discussionboard_user_profiles.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_profiles we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_user_profilesCountArgs>(\n      args?: Subset<T, discussionboard_user_profilesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_user_profilesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_user_profilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_user_profilesAggregateArgs>(args: Subset<T, Discussionboard_user_profilesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_user_profilesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_user_profiles.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_profilesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_user_profilesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_user_profilesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_user_profilesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_user_profilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_user_profilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_user_profiles model\n   */\n  readonly fields: discussionboard_user_profilesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_user_profiles.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_user_profilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_user_profiles_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_user_profiles model\n   */\n  interface discussionboard_user_profilesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_user_profiles\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_user_profiles\", 'String'>\n    readonly display_name: FieldRef<\"discussionboard_user_profiles\", 'String'>\n    readonly bio: FieldRef<\"discussionboard_user_profiles\", 'String'>\n    readonly avatar_url: FieldRef<\"discussionboard_user_profiles\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_user_profiles\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_user_profiles\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_user_profiles findUnique\n   */\n  export type discussionboard_user_profilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profiles to fetch.\n     */\n    where: discussionboard_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profiles findUniqueOrThrow\n   */\n  export type discussionboard_user_profilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profiles to fetch.\n     */\n    where: discussionboard_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profiles findFirst\n   */\n  export type discussionboard_user_profilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profiles to fetch.\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profilesOrderByWithRelationInput | discussionboard_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_profiles.\n     */\n    cursor?: discussionboard_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_profiles.\n     */\n    distinct?: Discussionboard_user_profilesScalarFieldEnum | Discussionboard_user_profilesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_profiles findFirstOrThrow\n   */\n  export type discussionboard_user_profilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profiles to fetch.\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profilesOrderByWithRelationInput | discussionboard_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_profiles.\n     */\n    cursor?: discussionboard_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_profiles.\n     */\n    distinct?: Discussionboard_user_profilesScalarFieldEnum | Discussionboard_user_profilesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_profiles findMany\n   */\n  export type discussionboard_user_profilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_profiles to fetch.\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_profiles to fetch.\n     */\n    orderBy?: discussionboard_user_profilesOrderByWithRelationInput | discussionboard_user_profilesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_user_profiles.\n     */\n    cursor?: discussionboard_user_profilesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_profiles from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_profiles.\n     */\n    skip?: number\n    distinct?: Discussionboard_user_profilesScalarFieldEnum | Discussionboard_user_profilesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_profiles create\n   */\n  export type discussionboard_user_profilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_user_profiles.\n     */\n    data: XOR<discussionboard_user_profilesCreateInput, discussionboard_user_profilesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_user_profiles createMany\n   */\n  export type discussionboard_user_profilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_user_profiles.\n     */\n    data: discussionboard_user_profilesCreateManyInput | discussionboard_user_profilesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user_profiles createManyAndReturn\n   */\n  export type discussionboard_user_profilesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_user_profiles.\n     */\n    data: discussionboard_user_profilesCreateManyInput | discussionboard_user_profilesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_profiles update\n   */\n  export type discussionboard_user_profilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_user_profiles.\n     */\n    data: XOR<discussionboard_user_profilesUpdateInput, discussionboard_user_profilesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_user_profiles to update.\n     */\n    where: discussionboard_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profiles updateMany\n   */\n  export type discussionboard_user_profilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_user_profiles.\n     */\n    data: XOR<discussionboard_user_profilesUpdateManyMutationInput, discussionboard_user_profilesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_profiles to update\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * Limit how many discussionboard_user_profiles to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_profiles updateManyAndReturn\n   */\n  export type discussionboard_user_profilesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_user_profiles.\n     */\n    data: XOR<discussionboard_user_profilesUpdateManyMutationInput, discussionboard_user_profilesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_profiles to update\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * Limit how many discussionboard_user_profiles to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_profiles upsert\n   */\n  export type discussionboard_user_profilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_user_profiles to update in case it exists.\n     */\n    where: discussionboard_user_profilesWhereUniqueInput\n    /**\n     * In case the discussionboard_user_profiles found by the `where` argument doesn't exist, create a new discussionboard_user_profiles with this data.\n     */\n    create: XOR<discussionboard_user_profilesCreateInput, discussionboard_user_profilesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_user_profiles was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_user_profilesUpdateInput, discussionboard_user_profilesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_user_profiles delete\n   */\n  export type discussionboard_user_profilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_user_profiles to delete.\n     */\n    where: discussionboard_user_profilesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_profiles deleteMany\n   */\n  export type discussionboard_user_profilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_profiles to delete\n     */\n    where?: discussionboard_user_profilesWhereInput\n    /**\n     * Limit how many discussionboard_user_profiles to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_profiles without action\n   */\n  export type discussionboard_user_profilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_profiles\n     */\n    select?: discussionboard_user_profilesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_profiles\n     */\n    omit?: discussionboard_user_profilesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_profilesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_user_emails\n   */\n\n  export type AggregateDiscussionboard_user_emails = {\n    _count: Discussionboard_user_emailsCountAggregateOutputType | null\n    _min: Discussionboard_user_emailsMinAggregateOutputType | null\n    _max: Discussionboard_user_emailsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_user_emailsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    email: string | null\n    is_verified: boolean | null\n    is_primary: boolean | null\n    added_at: Date | null\n    verified_at: Date | null\n  }\n\n  export type Discussionboard_user_emailsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    email: string | null\n    is_verified: boolean | null\n    is_primary: boolean | null\n    added_at: Date | null\n    verified_at: Date | null\n  }\n\n  export type Discussionboard_user_emailsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    email: number\n    is_verified: number\n    is_primary: number\n    added_at: number\n    verified_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_user_emailsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    email?: true\n    is_verified?: true\n    is_primary?: true\n    added_at?: true\n    verified_at?: true\n  }\n\n  export type Discussionboard_user_emailsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    email?: true\n    is_verified?: true\n    is_primary?: true\n    added_at?: true\n    verified_at?: true\n  }\n\n  export type Discussionboard_user_emailsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    email?: true\n    is_verified?: true\n    is_primary?: true\n    added_at?: true\n    verified_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_user_emailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_emails to aggregate.\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_emails to fetch.\n     */\n    orderBy?: discussionboard_user_emailsOrderByWithRelationInput | discussionboard_user_emailsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_user_emailsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_emails from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_emails.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_user_emails\n    **/\n    _count?: true | Discussionboard_user_emailsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_user_emailsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_user_emailsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_user_emailsAggregateType<T extends Discussionboard_user_emailsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_user_emails]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_user_emails[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_user_emails[P]>\n  }\n\n\n\n\n  export type discussionboard_user_emailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_emailsWhereInput\n    orderBy?: discussionboard_user_emailsOrderByWithAggregationInput | discussionboard_user_emailsOrderByWithAggregationInput[]\n    by: Discussionboard_user_emailsScalarFieldEnum[] | Discussionboard_user_emailsScalarFieldEnum\n    having?: discussionboard_user_emailsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_user_emailsCountAggregateInputType | true\n    _min?: Discussionboard_user_emailsMinAggregateInputType\n    _max?: Discussionboard_user_emailsMaxAggregateInputType\n  }\n\n  export type Discussionboard_user_emailsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date\n    verified_at: Date | null\n    _count: Discussionboard_user_emailsCountAggregateOutputType | null\n    _min: Discussionboard_user_emailsMinAggregateOutputType | null\n    _max: Discussionboard_user_emailsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_user_emailsGroupByPayload<T extends discussionboard_user_emailsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_user_emailsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_user_emailsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_user_emailsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_user_emailsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_user_emailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    email?: boolean\n    is_verified?: boolean\n    is_primary?: boolean\n    added_at?: boolean\n    verified_at?: boolean\n    discussionboard_user_emails_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_emails\"]>\n\n  export type discussionboard_user_emailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    email?: boolean\n    is_verified?: boolean\n    is_primary?: boolean\n    added_at?: boolean\n    verified_at?: boolean\n    discussionboard_user_emails_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_emails\"]>\n\n  export type discussionboard_user_emailsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    email?: boolean\n    is_verified?: boolean\n    is_primary?: boolean\n    added_at?: boolean\n    verified_at?: boolean\n    discussionboard_user_emails_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_emails\"]>\n\n  export type discussionboard_user_emailsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    email?: boolean\n    is_verified?: boolean\n    is_primary?: boolean\n    added_at?: boolean\n    verified_at?: boolean\n  }\n\n  export type discussionboard_user_emailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"email\" | \"is_verified\" | \"is_primary\" | \"added_at\" | \"verified_at\", ExtArgs[\"result\"][\"discussionboard_user_emails\"]>\n  export type discussionboard_user_emailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_emails_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_emailsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_emails_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_emailsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_emails_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_user_emailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_user_emails\"\n    objects: {\n      discussionboard_user_emails_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique email record identifier.\n       */\n      id: string\n      /**\n       * Belonged member's {@link discussionboard_members.id}. Each email mapped to a registered user.\n       */\n      discussionboard_member_id: string\n      /**\n       * Email address string associated with the account. Implements registration, notification, and recovery flows - separate from core username for flexibility. Ensures normalization. Example: jane@host.com.\n       */\n      email: string\n      /**\n       * Whether the email has passed verification (registration, notification, etc). Implements email confirmation flow; only verified addresses are used for key system functions. Defaults to false until confirmation.\n       */\n      is_verified: boolean\n      /**\n       * Whether this email is the primary contact address for the member (UI and system requirement). Each account can have at most one primary email. For example: used for login, password reset.\n       */\n      is_primary: boolean\n      /**\n       * Datetime this email address was added or linked. Supports registration, change tracking, and reporting requirements.\n       */\n      added_at: Date\n      /**\n       * Datetime when verification was completed. Nullable to allow in-progress or failed verifications. Maintains normalization; no denormalized workflow states.\n       */\n      verified_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_user_emails\"]>\n    composites: {}\n  }\n\n  type discussionboard_user_emailsGetPayload<S extends boolean | null | undefined | discussionboard_user_emailsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_user_emailsPayload, S>\n\n  type discussionboard_user_emailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_user_emailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_user_emailsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_user_emailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_user_emails'], meta: { name: 'discussionboard_user_emails' } }\n    /**\n     * Find zero or one Discussionboard_user_emails that matches the filter.\n     * @param {discussionboard_user_emailsFindUniqueArgs} args - Arguments to find a Discussionboard_user_emails\n     * @example\n     * // Get one Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_user_emailsFindUniqueArgs>(args: SelectSubset<T, discussionboard_user_emailsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_user_emails that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_user_emailsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_user_emails\n     * @example\n     * // Get one Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_user_emailsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_user_emailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_emails that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_emailsFindFirstArgs} args - Arguments to find a Discussionboard_user_emails\n     * @example\n     * // Get one Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_user_emailsFindFirstArgs>(args?: SelectSubset<T, discussionboard_user_emailsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_emails that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_emailsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_user_emails\n     * @example\n     * // Get one Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_user_emailsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_user_emailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_user_emails that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_emailsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findMany()\n     * \n     * // Get first 10 Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_user_emailsWithIdOnly = await prisma.discussionboard_user_emails.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_user_emailsFindManyArgs>(args?: SelectSubset<T, discussionboard_user_emailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_user_emails.\n     * @param {discussionboard_user_emailsCreateArgs} args - Arguments to create a Discussionboard_user_emails.\n     * @example\n     * // Create one Discussionboard_user_emails\n     * const Discussionboard_user_emails = await prisma.discussionboard_user_emails.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_user_emails\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_user_emailsCreateArgs>(args: SelectSubset<T, discussionboard_user_emailsCreateArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_user_emails.\n     * @param {discussionboard_user_emailsCreateManyArgs} args - Arguments to create many Discussionboard_user_emails.\n     * @example\n     * // Create many Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_user_emailsCreateManyArgs>(args?: SelectSubset<T, discussionboard_user_emailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_user_emails and returns the data saved in the database.\n     * @param {discussionboard_user_emailsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_user_emails.\n     * @example\n     * // Create many Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_user_emails and only return the `id`\n     * const discussionboard_user_emailsWithIdOnly = await prisma.discussionboard_user_emails.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_user_emailsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_user_emailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_user_emails.\n     * @param {discussionboard_user_emailsDeleteArgs} args - Arguments to delete one Discussionboard_user_emails.\n     * @example\n     * // Delete one Discussionboard_user_emails\n     * const Discussionboard_user_emails = await prisma.discussionboard_user_emails.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_user_emails\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_user_emailsDeleteArgs>(args: SelectSubset<T, discussionboard_user_emailsDeleteArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_user_emails.\n     * @param {discussionboard_user_emailsUpdateArgs} args - Arguments to update one Discussionboard_user_emails.\n     * @example\n     * // Update one Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_user_emailsUpdateArgs>(args: SelectSubset<T, discussionboard_user_emailsUpdateArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_user_emails.\n     * @param {discussionboard_user_emailsDeleteManyArgs} args - Arguments to filter Discussionboard_user_emails to delete.\n     * @example\n     * // Delete a few Discussionboard_user_emails\n     * const { count } = await prisma.discussionboard_user_emails.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_user_emailsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_user_emailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_emails.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_emailsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_user_emailsUpdateManyArgs>(args: SelectSubset<T, discussionboard_user_emailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_emails and returns the data updated in the database.\n     * @param {discussionboard_user_emailsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_user_emails.\n     * @example\n     * // Update many Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_user_emails and only return the `id`\n     * const discussionboard_user_emailsWithIdOnly = await prisma.discussionboard_user_emails.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_user_emailsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_user_emailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_user_emails.\n     * @param {discussionboard_user_emailsUpsertArgs} args - Arguments to update or create a Discussionboard_user_emails.\n     * @example\n     * // Update or create a Discussionboard_user_emails\n     * const discussionboard_user_emails = await prisma.discussionboard_user_emails.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_user_emails\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_emails we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_user_emailsUpsertArgs>(args: SelectSubset<T, discussionboard_user_emailsUpsertArgs<ExtArgs>>): Prisma__discussionboard_user_emailsClient<$Result.GetResult<Prisma.$discussionboard_user_emailsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_user_emails.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_emailsCountArgs} args - Arguments to filter Discussionboard_user_emails to count.\n     * @example\n     * // Count the number of Discussionboard_user_emails\n     * const count = await prisma.discussionboard_user_emails.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_emails we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_user_emailsCountArgs>(\n      args?: Subset<T, discussionboard_user_emailsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_user_emailsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_user_emails.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_user_emailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_user_emailsAggregateArgs>(args: Subset<T, Discussionboard_user_emailsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_user_emailsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_user_emails.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_emailsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_user_emailsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_user_emailsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_user_emailsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_user_emailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_user_emailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_user_emails model\n   */\n  readonly fields: discussionboard_user_emailsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_user_emails.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_user_emailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_user_emails_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_user_emails model\n   */\n  interface discussionboard_user_emailsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_user_emails\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_user_emails\", 'String'>\n    readonly email: FieldRef<\"discussionboard_user_emails\", 'String'>\n    readonly is_verified: FieldRef<\"discussionboard_user_emails\", 'Boolean'>\n    readonly is_primary: FieldRef<\"discussionboard_user_emails\", 'Boolean'>\n    readonly added_at: FieldRef<\"discussionboard_user_emails\", 'DateTime'>\n    readonly verified_at: FieldRef<\"discussionboard_user_emails\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_user_emails findUnique\n   */\n  export type discussionboard_user_emailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_emails to fetch.\n     */\n    where: discussionboard_user_emailsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_emails findUniqueOrThrow\n   */\n  export type discussionboard_user_emailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_emails to fetch.\n     */\n    where: discussionboard_user_emailsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_emails findFirst\n   */\n  export type discussionboard_user_emailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_emails to fetch.\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_emails to fetch.\n     */\n    orderBy?: discussionboard_user_emailsOrderByWithRelationInput | discussionboard_user_emailsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_emails.\n     */\n    cursor?: discussionboard_user_emailsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_emails from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_emails.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_emails.\n     */\n    distinct?: Discussionboard_user_emailsScalarFieldEnum | Discussionboard_user_emailsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_emails findFirstOrThrow\n   */\n  export type discussionboard_user_emailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_emails to fetch.\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_emails to fetch.\n     */\n    orderBy?: discussionboard_user_emailsOrderByWithRelationInput | discussionboard_user_emailsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_emails.\n     */\n    cursor?: discussionboard_user_emailsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_emails from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_emails.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_emails.\n     */\n    distinct?: Discussionboard_user_emailsScalarFieldEnum | Discussionboard_user_emailsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_emails findMany\n   */\n  export type discussionboard_user_emailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_emails to fetch.\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_emails to fetch.\n     */\n    orderBy?: discussionboard_user_emailsOrderByWithRelationInput | discussionboard_user_emailsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_user_emails.\n     */\n    cursor?: discussionboard_user_emailsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_emails from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_emails.\n     */\n    skip?: number\n    distinct?: Discussionboard_user_emailsScalarFieldEnum | Discussionboard_user_emailsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_emails create\n   */\n  export type discussionboard_user_emailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_user_emails.\n     */\n    data: XOR<discussionboard_user_emailsCreateInput, discussionboard_user_emailsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_user_emails createMany\n   */\n  export type discussionboard_user_emailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_user_emails.\n     */\n    data: discussionboard_user_emailsCreateManyInput | discussionboard_user_emailsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user_emails createManyAndReturn\n   */\n  export type discussionboard_user_emailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_user_emails.\n     */\n    data: discussionboard_user_emailsCreateManyInput | discussionboard_user_emailsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_emails update\n   */\n  export type discussionboard_user_emailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_user_emails.\n     */\n    data: XOR<discussionboard_user_emailsUpdateInput, discussionboard_user_emailsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_user_emails to update.\n     */\n    where: discussionboard_user_emailsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_emails updateMany\n   */\n  export type discussionboard_user_emailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_user_emails.\n     */\n    data: XOR<discussionboard_user_emailsUpdateManyMutationInput, discussionboard_user_emailsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_emails to update\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * Limit how many discussionboard_user_emails to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_emails updateManyAndReturn\n   */\n  export type discussionboard_user_emailsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_user_emails.\n     */\n    data: XOR<discussionboard_user_emailsUpdateManyMutationInput, discussionboard_user_emailsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_emails to update\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * Limit how many discussionboard_user_emails to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_emails upsert\n   */\n  export type discussionboard_user_emailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_user_emails to update in case it exists.\n     */\n    where: discussionboard_user_emailsWhereUniqueInput\n    /**\n     * In case the discussionboard_user_emails found by the `where` argument doesn't exist, create a new discussionboard_user_emails with this data.\n     */\n    create: XOR<discussionboard_user_emailsCreateInput, discussionboard_user_emailsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_user_emails was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_user_emailsUpdateInput, discussionboard_user_emailsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_user_emails delete\n   */\n  export type discussionboard_user_emailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_user_emails to delete.\n     */\n    where: discussionboard_user_emailsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_emails deleteMany\n   */\n  export type discussionboard_user_emailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_emails to delete\n     */\n    where?: discussionboard_user_emailsWhereInput\n    /**\n     * Limit how many discussionboard_user_emails to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_emails without action\n   */\n  export type discussionboard_user_emailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_emails\n     */\n    select?: discussionboard_user_emailsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_emails\n     */\n    omit?: discussionboard_user_emailsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_emailsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_user_auths\n   */\n\n  export type AggregateDiscussionboard_user_auths = {\n    _count: Discussionboard_user_authsCountAggregateOutputType | null\n    _min: Discussionboard_user_authsMinAggregateOutputType | null\n    _max: Discussionboard_user_authsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_user_authsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    provider: string | null\n    provider_user_id: string | null\n    linked_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_user_authsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    provider: string | null\n    provider_user_id: string | null\n    linked_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_user_authsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    provider: number\n    provider_user_id: number\n    linked_at: number\n    revoked_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_user_authsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    provider?: true\n    provider_user_id?: true\n    linked_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_user_authsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    provider?: true\n    provider_user_id?: true\n    linked_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_user_authsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    provider?: true\n    provider_user_id?: true\n    linked_at?: true\n    revoked_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_user_authsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_auths to aggregate.\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_auths to fetch.\n     */\n    orderBy?: discussionboard_user_authsOrderByWithRelationInput | discussionboard_user_authsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_user_authsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_auths from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_auths.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_user_auths\n    **/\n    _count?: true | Discussionboard_user_authsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_user_authsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_user_authsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_user_authsAggregateType<T extends Discussionboard_user_authsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_user_auths]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_user_auths[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_user_auths[P]>\n  }\n\n\n\n\n  export type discussionboard_user_authsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_authsWhereInput\n    orderBy?: discussionboard_user_authsOrderByWithAggregationInput | discussionboard_user_authsOrderByWithAggregationInput[]\n    by: Discussionboard_user_authsScalarFieldEnum[] | Discussionboard_user_authsScalarFieldEnum\n    having?: discussionboard_user_authsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_user_authsCountAggregateInputType | true\n    _min?: Discussionboard_user_authsMinAggregateInputType\n    _max?: Discussionboard_user_authsMaxAggregateInputType\n  }\n\n  export type Discussionboard_user_authsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date\n    revoked_at: Date | null\n    _count: Discussionboard_user_authsCountAggregateOutputType | null\n    _min: Discussionboard_user_authsMinAggregateOutputType | null\n    _max: Discussionboard_user_authsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_user_authsGroupByPayload<T extends discussionboard_user_authsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_user_authsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_user_authsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_user_authsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_user_authsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_user_authsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    provider?: boolean\n    provider_user_id?: boolean\n    linked_at?: boolean\n    revoked_at?: boolean\n    discussionboard_user_auths_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_auths\"]>\n\n  export type discussionboard_user_authsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    provider?: boolean\n    provider_user_id?: boolean\n    linked_at?: boolean\n    revoked_at?: boolean\n    discussionboard_user_auths_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_auths\"]>\n\n  export type discussionboard_user_authsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    provider?: boolean\n    provider_user_id?: boolean\n    linked_at?: boolean\n    revoked_at?: boolean\n    discussionboard_user_auths_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_auths\"]>\n\n  export type discussionboard_user_authsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    provider?: boolean\n    provider_user_id?: boolean\n    linked_at?: boolean\n    revoked_at?: boolean\n  }\n\n  export type discussionboard_user_authsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"provider\" | \"provider_user_id\" | \"linked_at\" | \"revoked_at\", ExtArgs[\"result\"][\"discussionboard_user_auths\"]>\n  export type discussionboard_user_authsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_auths_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_authsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_auths_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_authsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_auths_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_user_authsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_user_auths\"\n    objects: {\n      discussionboard_user_auths_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique external authentication record.\n       */\n      id: string\n      /**\n       * Belonged member's {@link discussionboard_members.id} - the member holding this external auth.\n       */\n      discussionboard_member_id: string\n      /**\n       * Authentication provider/service name (e.g., google, facebook, github). Implements SSO/federated auth requirement. Normalized string, never contains secrets. Example: 'google'.\n       */\n      provider: string\n      /**\n       * User identifier from auth provider (not internal ID). Used for provider-based account merging and uniqueness/lookup. Example: OAuth subject ID.\n       */\n      provider_user_id: string\n      /**\n       * Datetime this external auth connection was established. For sign-on/audit purposes; always required.\n       */\n      linked_at: Date\n      /**\n       * Datetime external auth was revoked/unlinked (null if active). Implements revocation/idle account closure workflows.\n       */\n      revoked_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_user_auths\"]>\n    composites: {}\n  }\n\n  type discussionboard_user_authsGetPayload<S extends boolean | null | undefined | discussionboard_user_authsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_user_authsPayload, S>\n\n  type discussionboard_user_authsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_user_authsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_user_authsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_user_authsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_user_auths'], meta: { name: 'discussionboard_user_auths' } }\n    /**\n     * Find zero or one Discussionboard_user_auths that matches the filter.\n     * @param {discussionboard_user_authsFindUniqueArgs} args - Arguments to find a Discussionboard_user_auths\n     * @example\n     * // Get one Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_user_authsFindUniqueArgs>(args: SelectSubset<T, discussionboard_user_authsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_user_auths that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_user_authsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_user_auths\n     * @example\n     * // Get one Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_user_authsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_user_authsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_auths that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_authsFindFirstArgs} args - Arguments to find a Discussionboard_user_auths\n     * @example\n     * // Get one Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_user_authsFindFirstArgs>(args?: SelectSubset<T, discussionboard_user_authsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_auths that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_authsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_user_auths\n     * @example\n     * // Get one Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_user_authsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_user_authsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_user_auths that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_authsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findMany()\n     * \n     * // Get first 10 Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_user_authsWithIdOnly = await prisma.discussionboard_user_auths.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_user_authsFindManyArgs>(args?: SelectSubset<T, discussionboard_user_authsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_user_auths.\n     * @param {discussionboard_user_authsCreateArgs} args - Arguments to create a Discussionboard_user_auths.\n     * @example\n     * // Create one Discussionboard_user_auths\n     * const Discussionboard_user_auths = await prisma.discussionboard_user_auths.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_user_auths\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_user_authsCreateArgs>(args: SelectSubset<T, discussionboard_user_authsCreateArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_user_auths.\n     * @param {discussionboard_user_authsCreateManyArgs} args - Arguments to create many Discussionboard_user_auths.\n     * @example\n     * // Create many Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_user_authsCreateManyArgs>(args?: SelectSubset<T, discussionboard_user_authsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_user_auths and returns the data saved in the database.\n     * @param {discussionboard_user_authsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_user_auths.\n     * @example\n     * // Create many Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_user_auths and only return the `id`\n     * const discussionboard_user_authsWithIdOnly = await prisma.discussionboard_user_auths.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_user_authsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_user_authsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_user_auths.\n     * @param {discussionboard_user_authsDeleteArgs} args - Arguments to delete one Discussionboard_user_auths.\n     * @example\n     * // Delete one Discussionboard_user_auths\n     * const Discussionboard_user_auths = await prisma.discussionboard_user_auths.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_user_auths\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_user_authsDeleteArgs>(args: SelectSubset<T, discussionboard_user_authsDeleteArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_user_auths.\n     * @param {discussionboard_user_authsUpdateArgs} args - Arguments to update one Discussionboard_user_auths.\n     * @example\n     * // Update one Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_user_authsUpdateArgs>(args: SelectSubset<T, discussionboard_user_authsUpdateArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_user_auths.\n     * @param {discussionboard_user_authsDeleteManyArgs} args - Arguments to filter Discussionboard_user_auths to delete.\n     * @example\n     * // Delete a few Discussionboard_user_auths\n     * const { count } = await prisma.discussionboard_user_auths.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_user_authsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_user_authsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_auths.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_authsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_user_authsUpdateManyArgs>(args: SelectSubset<T, discussionboard_user_authsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_auths and returns the data updated in the database.\n     * @param {discussionboard_user_authsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_user_auths.\n     * @example\n     * // Update many Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_user_auths and only return the `id`\n     * const discussionboard_user_authsWithIdOnly = await prisma.discussionboard_user_auths.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_user_authsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_user_authsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_user_auths.\n     * @param {discussionboard_user_authsUpsertArgs} args - Arguments to update or create a Discussionboard_user_auths.\n     * @example\n     * // Update or create a Discussionboard_user_auths\n     * const discussionboard_user_auths = await prisma.discussionboard_user_auths.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_user_auths\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_auths we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_user_authsUpsertArgs>(args: SelectSubset<T, discussionboard_user_authsUpsertArgs<ExtArgs>>): Prisma__discussionboard_user_authsClient<$Result.GetResult<Prisma.$discussionboard_user_authsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_user_auths.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_authsCountArgs} args - Arguments to filter Discussionboard_user_auths to count.\n     * @example\n     * // Count the number of Discussionboard_user_auths\n     * const count = await prisma.discussionboard_user_auths.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_auths we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_user_authsCountArgs>(\n      args?: Subset<T, discussionboard_user_authsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_user_authsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_user_auths.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_user_authsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_user_authsAggregateArgs>(args: Subset<T, Discussionboard_user_authsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_user_authsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_user_auths.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_authsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_user_authsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_user_authsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_user_authsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_user_authsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_user_authsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_user_auths model\n   */\n  readonly fields: discussionboard_user_authsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_user_auths.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_user_authsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_user_auths_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_user_auths model\n   */\n  interface discussionboard_user_authsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_user_auths\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_user_auths\", 'String'>\n    readonly provider: FieldRef<\"discussionboard_user_auths\", 'String'>\n    readonly provider_user_id: FieldRef<\"discussionboard_user_auths\", 'String'>\n    readonly linked_at: FieldRef<\"discussionboard_user_auths\", 'DateTime'>\n    readonly revoked_at: FieldRef<\"discussionboard_user_auths\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_user_auths findUnique\n   */\n  export type discussionboard_user_authsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_auths to fetch.\n     */\n    where: discussionboard_user_authsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_auths findUniqueOrThrow\n   */\n  export type discussionboard_user_authsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_auths to fetch.\n     */\n    where: discussionboard_user_authsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_auths findFirst\n   */\n  export type discussionboard_user_authsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_auths to fetch.\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_auths to fetch.\n     */\n    orderBy?: discussionboard_user_authsOrderByWithRelationInput | discussionboard_user_authsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_auths.\n     */\n    cursor?: discussionboard_user_authsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_auths from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_auths.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_auths.\n     */\n    distinct?: Discussionboard_user_authsScalarFieldEnum | Discussionboard_user_authsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_auths findFirstOrThrow\n   */\n  export type discussionboard_user_authsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_auths to fetch.\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_auths to fetch.\n     */\n    orderBy?: discussionboard_user_authsOrderByWithRelationInput | discussionboard_user_authsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_auths.\n     */\n    cursor?: discussionboard_user_authsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_auths from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_auths.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_auths.\n     */\n    distinct?: Discussionboard_user_authsScalarFieldEnum | Discussionboard_user_authsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_auths findMany\n   */\n  export type discussionboard_user_authsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_auths to fetch.\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_auths to fetch.\n     */\n    orderBy?: discussionboard_user_authsOrderByWithRelationInput | discussionboard_user_authsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_user_auths.\n     */\n    cursor?: discussionboard_user_authsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_auths from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_auths.\n     */\n    skip?: number\n    distinct?: Discussionboard_user_authsScalarFieldEnum | Discussionboard_user_authsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_auths create\n   */\n  export type discussionboard_user_authsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_user_auths.\n     */\n    data: XOR<discussionboard_user_authsCreateInput, discussionboard_user_authsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_user_auths createMany\n   */\n  export type discussionboard_user_authsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_user_auths.\n     */\n    data: discussionboard_user_authsCreateManyInput | discussionboard_user_authsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user_auths createManyAndReturn\n   */\n  export type discussionboard_user_authsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_user_auths.\n     */\n    data: discussionboard_user_authsCreateManyInput | discussionboard_user_authsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_auths update\n   */\n  export type discussionboard_user_authsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_user_auths.\n     */\n    data: XOR<discussionboard_user_authsUpdateInput, discussionboard_user_authsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_user_auths to update.\n     */\n    where: discussionboard_user_authsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_auths updateMany\n   */\n  export type discussionboard_user_authsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_user_auths.\n     */\n    data: XOR<discussionboard_user_authsUpdateManyMutationInput, discussionboard_user_authsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_auths to update\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * Limit how many discussionboard_user_auths to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_auths updateManyAndReturn\n   */\n  export type discussionboard_user_authsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_user_auths.\n     */\n    data: XOR<discussionboard_user_authsUpdateManyMutationInput, discussionboard_user_authsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_auths to update\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * Limit how many discussionboard_user_auths to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_auths upsert\n   */\n  export type discussionboard_user_authsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_user_auths to update in case it exists.\n     */\n    where: discussionboard_user_authsWhereUniqueInput\n    /**\n     * In case the discussionboard_user_auths found by the `where` argument doesn't exist, create a new discussionboard_user_auths with this data.\n     */\n    create: XOR<discussionboard_user_authsCreateInput, discussionboard_user_authsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_user_auths was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_user_authsUpdateInput, discussionboard_user_authsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_user_auths delete\n   */\n  export type discussionboard_user_authsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_user_auths to delete.\n     */\n    where: discussionboard_user_authsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_auths deleteMany\n   */\n  export type discussionboard_user_authsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_auths to delete\n     */\n    where?: discussionboard_user_authsWhereInput\n    /**\n     * Limit how many discussionboard_user_auths to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_auths without action\n   */\n  export type discussionboard_user_authsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_auths\n     */\n    select?: discussionboard_user_authsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_auths\n     */\n    omit?: discussionboard_user_authsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_authsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_user_sessions\n   */\n\n  export type AggregateDiscussionboard_user_sessions = {\n    _count: Discussionboard_user_sessionsCountAggregateOutputType | null\n    _min: Discussionboard_user_sessionsMinAggregateOutputType | null\n    _max: Discussionboard_user_sessionsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_user_sessionsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    session_token: string | null\n    created_at: Date | null\n    expires_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_user_sessionsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    session_token: string | null\n    created_at: Date | null\n    expires_at: Date | null\n    revoked_at: Date | null\n  }\n\n  export type Discussionboard_user_sessionsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    session_token: number\n    created_at: number\n    expires_at: number\n    revoked_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_user_sessionsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    session_token?: true\n    created_at?: true\n    expires_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_user_sessionsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    session_token?: true\n    created_at?: true\n    expires_at?: true\n    revoked_at?: true\n  }\n\n  export type Discussionboard_user_sessionsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    session_token?: true\n    created_at?: true\n    expires_at?: true\n    revoked_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_user_sessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_sessions to aggregate.\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_sessions to fetch.\n     */\n    orderBy?: discussionboard_user_sessionsOrderByWithRelationInput | discussionboard_user_sessionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_user_sessionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_sessions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_sessions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_user_sessions\n    **/\n    _count?: true | Discussionboard_user_sessionsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_user_sessionsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_user_sessionsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_user_sessionsAggregateType<T extends Discussionboard_user_sessionsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_user_sessions]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_user_sessions[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_user_sessions[P]>\n  }\n\n\n\n\n  export type discussionboard_user_sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_user_sessionsWhereInput\n    orderBy?: discussionboard_user_sessionsOrderByWithAggregationInput | discussionboard_user_sessionsOrderByWithAggregationInput[]\n    by: Discussionboard_user_sessionsScalarFieldEnum[] | Discussionboard_user_sessionsScalarFieldEnum\n    having?: discussionboard_user_sessionsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_user_sessionsCountAggregateInputType | true\n    _min?: Discussionboard_user_sessionsMinAggregateInputType\n    _max?: Discussionboard_user_sessionsMaxAggregateInputType\n  }\n\n  export type Discussionboard_user_sessionsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    session_token: string\n    created_at: Date\n    expires_at: Date\n    revoked_at: Date | null\n    _count: Discussionboard_user_sessionsCountAggregateOutputType | null\n    _min: Discussionboard_user_sessionsMinAggregateOutputType | null\n    _max: Discussionboard_user_sessionsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_user_sessionsGroupByPayload<T extends discussionboard_user_sessionsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_user_sessionsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_user_sessionsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_user_sessionsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_user_sessionsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_user_sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    revoked_at?: boolean\n    discussionboard_user_sessions_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_sessions\"]>\n\n  export type discussionboard_user_sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    revoked_at?: boolean\n    discussionboard_user_sessions_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_sessions\"]>\n\n  export type discussionboard_user_sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    revoked_at?: boolean\n    discussionboard_user_sessions_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_user_sessions\"]>\n\n  export type discussionboard_user_sessionsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    session_token?: boolean\n    created_at?: boolean\n    expires_at?: boolean\n    revoked_at?: boolean\n  }\n\n  export type discussionboard_user_sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"session_token\" | \"created_at\" | \"expires_at\" | \"revoked_at\", ExtArgs[\"result\"][\"discussionboard_user_sessions\"]>\n  export type discussionboard_user_sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_sessions_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_sessions_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_user_sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_user_sessions_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_user_sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_user_sessions\"\n    objects: {\n      discussionboard_user_sessions_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique session record identifier.\n       */\n      id: string\n      /**\n       * Referenced member's {@link discussionboard_members.id}. Each session is associated with a single member.\n       */\n      discussionboard_member_id: string\n      /**\n       * Opaque authentication token for this session. Used client-side for identifying login state. Uniqueness enforced; never stores raw credentials. Example: random UUID or JWT value.\n       */\n      session_token: string\n      /**\n       * Datetime session was created. Enables security/audit trace, expiry/refresh handling.\n       */\n      created_at: Date\n      /**\n       * Datetime when the session token will expire. Supports session timeout and security policies. Example: set per login policy or on grant.\n       */\n      expires_at: Date\n      /**\n       * Datetime session was revoked/invalidated (e.g., logout, idle timeout, forced admin action). Null if still valid. Maintains data integrity and audit trail.\n       */\n      revoked_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_user_sessions\"]>\n    composites: {}\n  }\n\n  type discussionboard_user_sessionsGetPayload<S extends boolean | null | undefined | discussionboard_user_sessionsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_user_sessionsPayload, S>\n\n  type discussionboard_user_sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_user_sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_user_sessionsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_user_sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_user_sessions'], meta: { name: 'discussionboard_user_sessions' } }\n    /**\n     * Find zero or one Discussionboard_user_sessions that matches the filter.\n     * @param {discussionboard_user_sessionsFindUniqueArgs} args - Arguments to find a Discussionboard_user_sessions\n     * @example\n     * // Get one Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_user_sessionsFindUniqueArgs>(args: SelectSubset<T, discussionboard_user_sessionsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_user_sessions that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_user_sessionsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_user_sessions\n     * @example\n     * // Get one Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_user_sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_user_sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_sessions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_sessionsFindFirstArgs} args - Arguments to find a Discussionboard_user_sessions\n     * @example\n     * // Get one Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_user_sessionsFindFirstArgs>(args?: SelectSubset<T, discussionboard_user_sessionsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_user_sessions that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_sessionsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_user_sessions\n     * @example\n     * // Get one Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_user_sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_user_sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_user_sessions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_sessionsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findMany()\n     * \n     * // Get first 10 Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_user_sessionsWithIdOnly = await prisma.discussionboard_user_sessions.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_user_sessionsFindManyArgs>(args?: SelectSubset<T, discussionboard_user_sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_user_sessions.\n     * @param {discussionboard_user_sessionsCreateArgs} args - Arguments to create a Discussionboard_user_sessions.\n     * @example\n     * // Create one Discussionboard_user_sessions\n     * const Discussionboard_user_sessions = await prisma.discussionboard_user_sessions.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_user_sessions\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_user_sessionsCreateArgs>(args: SelectSubset<T, discussionboard_user_sessionsCreateArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_user_sessions.\n     * @param {discussionboard_user_sessionsCreateManyArgs} args - Arguments to create many Discussionboard_user_sessions.\n     * @example\n     * // Create many Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_user_sessionsCreateManyArgs>(args?: SelectSubset<T, discussionboard_user_sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_user_sessions and returns the data saved in the database.\n     * @param {discussionboard_user_sessionsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_user_sessions.\n     * @example\n     * // Create many Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_user_sessions and only return the `id`\n     * const discussionboard_user_sessionsWithIdOnly = await prisma.discussionboard_user_sessions.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_user_sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_user_sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_user_sessions.\n     * @param {discussionboard_user_sessionsDeleteArgs} args - Arguments to delete one Discussionboard_user_sessions.\n     * @example\n     * // Delete one Discussionboard_user_sessions\n     * const Discussionboard_user_sessions = await prisma.discussionboard_user_sessions.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_user_sessions\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_user_sessionsDeleteArgs>(args: SelectSubset<T, discussionboard_user_sessionsDeleteArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_user_sessions.\n     * @param {discussionboard_user_sessionsUpdateArgs} args - Arguments to update one Discussionboard_user_sessions.\n     * @example\n     * // Update one Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_user_sessionsUpdateArgs>(args: SelectSubset<T, discussionboard_user_sessionsUpdateArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_user_sessions.\n     * @param {discussionboard_user_sessionsDeleteManyArgs} args - Arguments to filter Discussionboard_user_sessions to delete.\n     * @example\n     * // Delete a few Discussionboard_user_sessions\n     * const { count } = await prisma.discussionboard_user_sessions.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_user_sessionsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_user_sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_sessions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_sessionsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_user_sessionsUpdateManyArgs>(args: SelectSubset<T, discussionboard_user_sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_user_sessions and returns the data updated in the database.\n     * @param {discussionboard_user_sessionsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_user_sessions.\n     * @example\n     * // Update many Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_user_sessions and only return the `id`\n     * const discussionboard_user_sessionsWithIdOnly = await prisma.discussionboard_user_sessions.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_user_sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_user_sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_user_sessions.\n     * @param {discussionboard_user_sessionsUpsertArgs} args - Arguments to update or create a Discussionboard_user_sessions.\n     * @example\n     * // Update or create a Discussionboard_user_sessions\n     * const discussionboard_user_sessions = await prisma.discussionboard_user_sessions.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_user_sessions\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_sessions we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_user_sessionsUpsertArgs>(args: SelectSubset<T, discussionboard_user_sessionsUpsertArgs<ExtArgs>>): Prisma__discussionboard_user_sessionsClient<$Result.GetResult<Prisma.$discussionboard_user_sessionsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_user_sessions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_sessionsCountArgs} args - Arguments to filter Discussionboard_user_sessions to count.\n     * @example\n     * // Count the number of Discussionboard_user_sessions\n     * const count = await prisma.discussionboard_user_sessions.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_user_sessions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_user_sessionsCountArgs>(\n      args?: Subset<T, discussionboard_user_sessionsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_user_sessionsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_user_sessions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_user_sessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_user_sessionsAggregateArgs>(args: Subset<T, Discussionboard_user_sessionsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_user_sessionsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_user_sessions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_user_sessionsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_user_sessionsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_user_sessionsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_user_sessionsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_user_sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_user_sessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_user_sessions model\n   */\n  readonly fields: discussionboard_user_sessionsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_user_sessions.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_user_sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_user_sessions_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_user_sessions model\n   */\n  interface discussionboard_user_sessionsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_user_sessions\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_user_sessions\", 'String'>\n    readonly session_token: FieldRef<\"discussionboard_user_sessions\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_user_sessions\", 'DateTime'>\n    readonly expires_at: FieldRef<\"discussionboard_user_sessions\", 'DateTime'>\n    readonly revoked_at: FieldRef<\"discussionboard_user_sessions\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_user_sessions findUnique\n   */\n  export type discussionboard_user_sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_sessions to fetch.\n     */\n    where: discussionboard_user_sessionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_sessions findUniqueOrThrow\n   */\n  export type discussionboard_user_sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_sessions to fetch.\n     */\n    where: discussionboard_user_sessionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_sessions findFirst\n   */\n  export type discussionboard_user_sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_sessions to fetch.\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_sessions to fetch.\n     */\n    orderBy?: discussionboard_user_sessionsOrderByWithRelationInput | discussionboard_user_sessionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_sessions.\n     */\n    cursor?: discussionboard_user_sessionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_sessions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_sessions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_sessions.\n     */\n    distinct?: Discussionboard_user_sessionsScalarFieldEnum | Discussionboard_user_sessionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_sessions findFirstOrThrow\n   */\n  export type discussionboard_user_sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_sessions to fetch.\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_sessions to fetch.\n     */\n    orderBy?: discussionboard_user_sessionsOrderByWithRelationInput | discussionboard_user_sessionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_user_sessions.\n     */\n    cursor?: discussionboard_user_sessionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_sessions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_sessions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_user_sessions.\n     */\n    distinct?: Discussionboard_user_sessionsScalarFieldEnum | Discussionboard_user_sessionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_sessions findMany\n   */\n  export type discussionboard_user_sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_user_sessions to fetch.\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_user_sessions to fetch.\n     */\n    orderBy?: discussionboard_user_sessionsOrderByWithRelationInput | discussionboard_user_sessionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_user_sessions.\n     */\n    cursor?: discussionboard_user_sessionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_user_sessions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_user_sessions.\n     */\n    skip?: number\n    distinct?: Discussionboard_user_sessionsScalarFieldEnum | Discussionboard_user_sessionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_user_sessions create\n   */\n  export type discussionboard_user_sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_user_sessions.\n     */\n    data: XOR<discussionboard_user_sessionsCreateInput, discussionboard_user_sessionsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_user_sessions createMany\n   */\n  export type discussionboard_user_sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_user_sessions.\n     */\n    data: discussionboard_user_sessionsCreateManyInput | discussionboard_user_sessionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_user_sessions createManyAndReturn\n   */\n  export type discussionboard_user_sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_user_sessions.\n     */\n    data: discussionboard_user_sessionsCreateManyInput | discussionboard_user_sessionsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_sessions update\n   */\n  export type discussionboard_user_sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_user_sessions.\n     */\n    data: XOR<discussionboard_user_sessionsUpdateInput, discussionboard_user_sessionsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_user_sessions to update.\n     */\n    where: discussionboard_user_sessionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_sessions updateMany\n   */\n  export type discussionboard_user_sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_user_sessions.\n     */\n    data: XOR<discussionboard_user_sessionsUpdateManyMutationInput, discussionboard_user_sessionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_sessions to update\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * Limit how many discussionboard_user_sessions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_sessions updateManyAndReturn\n   */\n  export type discussionboard_user_sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_user_sessions.\n     */\n    data: XOR<discussionboard_user_sessionsUpdateManyMutationInput, discussionboard_user_sessionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_user_sessions to update\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * Limit how many discussionboard_user_sessions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_user_sessions upsert\n   */\n  export type discussionboard_user_sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_user_sessions to update in case it exists.\n     */\n    where: discussionboard_user_sessionsWhereUniqueInput\n    /**\n     * In case the discussionboard_user_sessions found by the `where` argument doesn't exist, create a new discussionboard_user_sessions with this data.\n     */\n    create: XOR<discussionboard_user_sessionsCreateInput, discussionboard_user_sessionsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_user_sessions was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_user_sessionsUpdateInput, discussionboard_user_sessionsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_user_sessions delete\n   */\n  export type discussionboard_user_sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_user_sessions to delete.\n     */\n    where: discussionboard_user_sessionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_user_sessions deleteMany\n   */\n  export type discussionboard_user_sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_user_sessions to delete\n     */\n    where?: discussionboard_user_sessionsWhereInput\n    /**\n     * Limit how many discussionboard_user_sessions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_user_sessions without action\n   */\n  export type discussionboard_user_sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_user_sessions\n     */\n    select?: discussionboard_user_sessionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_user_sessions\n     */\n    omit?: discussionboard_user_sessionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_user_sessionsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_posts\n   */\n\n  export type AggregateDiscussionboard_posts = {\n    _count: Discussionboard_postsCountAggregateOutputType | null\n    _min: Discussionboard_postsMinAggregateOutputType | null\n    _max: Discussionboard_postsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_postsMinAggregateOutputType = {\n    id: string | null\n    board_id: string | null\n    author_id: string | null\n    title: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_postsMaxAggregateOutputType = {\n    id: string | null\n    board_id: string | null\n    author_id: string | null\n    title: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_postsCountAggregateOutputType = {\n    id: number\n    board_id: number\n    author_id: number\n    title: number\n    body: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_postsMinAggregateInputType = {\n    id?: true\n    board_id?: true\n    author_id?: true\n    title?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_postsMaxAggregateInputType = {\n    id?: true\n    board_id?: true\n    author_id?: true\n    title?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_postsCountAggregateInputType = {\n    id?: true\n    board_id?: true\n    author_id?: true\n    title?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_posts to aggregate.\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postsOrderByWithRelationInput | discussionboard_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_posts\n    **/\n    _count?: true | Discussionboard_postsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_postsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_postsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_postsAggregateType<T extends Discussionboard_postsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_posts]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_posts[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_posts[P]>\n  }\n\n\n\n\n  export type discussionboard_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_postsWhereInput\n    orderBy?: discussionboard_postsOrderByWithAggregationInput | discussionboard_postsOrderByWithAggregationInput[]\n    by: Discussionboard_postsScalarFieldEnum[] | Discussionboard_postsScalarFieldEnum\n    having?: discussionboard_postsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_postsCountAggregateInputType | true\n    _min?: Discussionboard_postsMinAggregateInputType\n    _max?: Discussionboard_postsMaxAggregateInputType\n  }\n\n  export type Discussionboard_postsGroupByOutputType = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussionboard_postsCountAggregateOutputType | null\n    _min: Discussionboard_postsMinAggregateOutputType | null\n    _max: Discussionboard_postsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_postsGroupByPayload<T extends discussionboard_postsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_postsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_postsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_postsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_postsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    board_id?: boolean\n    author_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    discussionboard_post_edits?: boolean | discussionboard_posts$discussionboard_post_editsArgs<ExtArgs>\n    discussionboard_post_likes?: boolean | discussionboard_posts$discussionboard_post_likesArgs<ExtArgs>\n    discussionboard_post_views?: boolean | discussionboard_posts$discussionboard_post_viewsArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_posts$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_posts$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_posts$discussionboard_moderation_actionsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_postsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_posts\"]>\n\n  export type discussionboard_postsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    board_id?: boolean\n    author_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_posts\"]>\n\n  export type discussionboard_postsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    board_id?: boolean\n    author_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_posts\"]>\n\n  export type discussionboard_postsSelectScalar = {\n    id?: boolean\n    board_id?: boolean\n    author_id?: boolean\n    title?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussionboard_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"board_id\" | \"author_id\" | \"title\" | \"body\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussionboard_posts\"]>\n  export type discussionboard_postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    discussionboard_post_edits?: boolean | discussionboard_posts$discussionboard_post_editsArgs<ExtArgs>\n    discussionboard_post_likes?: boolean | discussionboard_posts$discussionboard_post_likesArgs<ExtArgs>\n    discussionboard_post_views?: boolean | discussionboard_posts$discussionboard_post_viewsArgs<ExtArgs>\n    discussionboard_comments?: boolean | discussionboard_posts$discussionboard_commentsArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_posts$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_posts$discussionboard_moderation_actionsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_postsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_postsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_postsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    board?: boolean | discussionboard_boardsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_posts\"\n    objects: {\n      board: Prisma.$discussionboard_boardsPayload<ExtArgs>\n      author: Prisma.$discussionboard_membersPayload<ExtArgs>\n      discussionboard_post_edits: Prisma.$discussionboard_post_editsPayload<ExtArgs>[]\n      discussionboard_post_likes: Prisma.$discussionboard_post_likesPayload<ExtArgs>[]\n      discussionboard_post_views: Prisma.$discussionboard_post_viewsPayload<ExtArgs>[]\n      discussionboard_comments: Prisma.$discussionboard_commentsPayload<ExtArgs>[]\n      discussionboard_reports: Prisma.$discussionboard_reportsPayload<ExtArgs>[]\n      discussionboard_moderation_actions: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged board's {@link discussionboard_boards.id}\n       */\n      board_id: string\n      /**\n       * Author user's {@link discussionboard_members.id} (or moderator/admin).\n       */\n      author_id: string\n      /**\n       * Title of the post. Atomic for search and filter.\n       */\n      title: string\n      /**\n       * Full body/content of post. No derived or calculated fields.\n       */\n      body: string\n      /**\n       * Created timestamp.\n       */\n      created_at: Date\n      /**\n       * Last updated timestamp.\n       */\n      updated_at: Date\n      /**\n       * Nullable soft-deletion timestamp if deleted by moderation.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_posts\"]>\n    composites: {}\n  }\n\n  type discussionboard_postsGetPayload<S extends boolean | null | undefined | discussionboard_postsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_postsPayload, S>\n\n  type discussionboard_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_postsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_posts'], meta: { name: 'discussionboard_posts' } }\n    /**\n     * Find zero or one Discussionboard_posts that matches the filter.\n     * @param {discussionboard_postsFindUniqueArgs} args - Arguments to find a Discussionboard_posts\n     * @example\n     * // Get one Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_postsFindUniqueArgs>(args: SelectSubset<T, discussionboard_postsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_posts that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_postsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_posts\n     * @example\n     * // Get one Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_posts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postsFindFirstArgs} args - Arguments to find a Discussionboard_posts\n     * @example\n     * // Get one Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_postsFindFirstArgs>(args?: SelectSubset<T, discussionboard_postsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_posts that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_posts\n     * @example\n     * // Get one Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_posts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.findMany()\n     * \n     * // Get first 10 Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_postsWithIdOnly = await prisma.discussionboard_posts.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_postsFindManyArgs>(args?: SelectSubset<T, discussionboard_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_posts.\n     * @param {discussionboard_postsCreateArgs} args - Arguments to create a Discussionboard_posts.\n     * @example\n     * // Create one Discussionboard_posts\n     * const Discussionboard_posts = await prisma.discussionboard_posts.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_posts\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_postsCreateArgs>(args: SelectSubset<T, discussionboard_postsCreateArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_posts.\n     * @param {discussionboard_postsCreateManyArgs} args - Arguments to create many Discussionboard_posts.\n     * @example\n     * // Create many Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_postsCreateManyArgs>(args?: SelectSubset<T, discussionboard_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_posts and returns the data saved in the database.\n     * @param {discussionboard_postsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_posts.\n     * @example\n     * // Create many Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_posts and only return the `id`\n     * const discussionboard_postsWithIdOnly = await prisma.discussionboard_posts.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_postsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_postsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_posts.\n     * @param {discussionboard_postsDeleteArgs} args - Arguments to delete one Discussionboard_posts.\n     * @example\n     * // Delete one Discussionboard_posts\n     * const Discussionboard_posts = await prisma.discussionboard_posts.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_posts\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_postsDeleteArgs>(args: SelectSubset<T, discussionboard_postsDeleteArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_posts.\n     * @param {discussionboard_postsUpdateArgs} args - Arguments to update one Discussionboard_posts.\n     * @example\n     * // Update one Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_postsUpdateArgs>(args: SelectSubset<T, discussionboard_postsUpdateArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_posts.\n     * @param {discussionboard_postsDeleteManyArgs} args - Arguments to filter Discussionboard_posts to delete.\n     * @example\n     * // Delete a few Discussionboard_posts\n     * const { count } = await prisma.discussionboard_posts.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_postsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_postsUpdateManyArgs>(args: SelectSubset<T, discussionboard_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_posts and returns the data updated in the database.\n     * @param {discussionboard_postsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_posts.\n     * @example\n     * // Update many Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_posts and only return the `id`\n     * const discussionboard_postsWithIdOnly = await prisma.discussionboard_posts.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_postsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_postsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_posts.\n     * @param {discussionboard_postsUpsertArgs} args - Arguments to update or create a Discussionboard_posts.\n     * @example\n     * // Update or create a Discussionboard_posts\n     * const discussionboard_posts = await prisma.discussionboard_posts.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_posts\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_posts we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_postsUpsertArgs>(args: SelectSubset<T, discussionboard_postsUpsertArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postsCountArgs} args - Arguments to filter Discussionboard_posts to count.\n     * @example\n     * // Count the number of Discussionboard_posts\n     * const count = await prisma.discussionboard_posts.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_posts we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_postsCountArgs>(\n      args?: Subset<T, discussionboard_postsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_postsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_postsAggregateArgs>(args: Subset<T, Discussionboard_postsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_postsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_posts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_postsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_postsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_postsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_postsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_posts model\n   */\n  readonly fields: discussionboard_postsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_posts.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    board<T extends discussionboard_boardsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_boardsDefaultArgs<ExtArgs>>): Prisma__discussionboard_boardsClient<$Result.GetResult<Prisma.$discussionboard_boardsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    discussionboard_post_edits<T extends discussionboard_posts$discussionboard_post_editsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_posts$discussionboard_post_editsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_post_likes<T extends discussionboard_posts$discussionboard_post_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_posts$discussionboard_post_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_post_views<T extends discussionboard_posts$discussionboard_post_viewsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_posts$discussionboard_post_viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comments<T extends discussionboard_posts$discussionboard_commentsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_posts$discussionboard_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_reports<T extends discussionboard_posts$discussionboard_reportsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_posts$discussionboard_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_actions<T extends discussionboard_posts$discussionboard_moderation_actionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_posts$discussionboard_moderation_actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_posts model\n   */\n  interface discussionboard_postsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_posts\", 'String'>\n    readonly board_id: FieldRef<\"discussionboard_posts\", 'String'>\n    readonly author_id: FieldRef<\"discussionboard_posts\", 'String'>\n    readonly title: FieldRef<\"discussionboard_posts\", 'String'>\n    readonly body: FieldRef<\"discussionboard_posts\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_posts\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_posts\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussionboard_posts\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_posts findUnique\n   */\n  export type discussionboard_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_posts to fetch.\n     */\n    where: discussionboard_postsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_posts findUniqueOrThrow\n   */\n  export type discussionboard_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_posts to fetch.\n     */\n    where: discussionboard_postsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_posts findFirst\n   */\n  export type discussionboard_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_posts to fetch.\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postsOrderByWithRelationInput | discussionboard_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_posts.\n     */\n    cursor?: discussionboard_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_posts.\n     */\n    distinct?: Discussionboard_postsScalarFieldEnum | Discussionboard_postsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts findFirstOrThrow\n   */\n  export type discussionboard_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_posts to fetch.\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postsOrderByWithRelationInput | discussionboard_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_posts.\n     */\n    cursor?: discussionboard_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_posts.\n     */\n    distinct?: Discussionboard_postsScalarFieldEnum | Discussionboard_postsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts findMany\n   */\n  export type discussionboard_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_posts to fetch.\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_posts to fetch.\n     */\n    orderBy?: discussionboard_postsOrderByWithRelationInput | discussionboard_postsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_posts.\n     */\n    cursor?: discussionboard_postsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_posts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_posts.\n     */\n    skip?: number\n    distinct?: Discussionboard_postsScalarFieldEnum | Discussionboard_postsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts create\n   */\n  export type discussionboard_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_posts.\n     */\n    data: XOR<discussionboard_postsCreateInput, discussionboard_postsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_posts createMany\n   */\n  export type discussionboard_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_posts.\n     */\n    data: discussionboard_postsCreateManyInput | discussionboard_postsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_posts createManyAndReturn\n   */\n  export type discussionboard_postsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_posts.\n     */\n    data: discussionboard_postsCreateManyInput | discussionboard_postsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_posts update\n   */\n  export type discussionboard_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_posts.\n     */\n    data: XOR<discussionboard_postsUpdateInput, discussionboard_postsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_posts to update.\n     */\n    where: discussionboard_postsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_posts updateMany\n   */\n  export type discussionboard_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_posts.\n     */\n    data: XOR<discussionboard_postsUpdateManyMutationInput, discussionboard_postsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_posts to update\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * Limit how many discussionboard_posts to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_posts updateManyAndReturn\n   */\n  export type discussionboard_postsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_posts.\n     */\n    data: XOR<discussionboard_postsUpdateManyMutationInput, discussionboard_postsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_posts to update\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * Limit how many discussionboard_posts to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_posts upsert\n   */\n  export type discussionboard_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_posts to update in case it exists.\n     */\n    where: discussionboard_postsWhereUniqueInput\n    /**\n     * In case the discussionboard_posts found by the `where` argument doesn't exist, create a new discussionboard_posts with this data.\n     */\n    create: XOR<discussionboard_postsCreateInput, discussionboard_postsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_posts was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_postsUpdateInput, discussionboard_postsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_posts delete\n   */\n  export type discussionboard_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_posts to delete.\n     */\n    where: discussionboard_postsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_posts deleteMany\n   */\n  export type discussionboard_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_posts to delete\n     */\n    where?: discussionboard_postsWhereInput\n    /**\n     * Limit how many discussionboard_posts to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_posts.discussionboard_post_edits\n   */\n  export type discussionboard_posts$discussionboard_post_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    where?: discussionboard_post_editsWhereInput\n    orderBy?: discussionboard_post_editsOrderByWithRelationInput | discussionboard_post_editsOrderByWithRelationInput[]\n    cursor?: discussionboard_post_editsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_editsScalarFieldEnum | Discussionboard_post_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts.discussionboard_post_likes\n   */\n  export type discussionboard_posts$discussionboard_post_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    where?: discussionboard_post_likesWhereInput\n    orderBy?: discussionboard_post_likesOrderByWithRelationInput | discussionboard_post_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_post_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_likesScalarFieldEnum | Discussionboard_post_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts.discussionboard_post_views\n   */\n  export type discussionboard_posts$discussionboard_post_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    where?: discussionboard_post_viewsWhereInput\n    orderBy?: discussionboard_post_viewsOrderByWithRelationInput | discussionboard_post_viewsOrderByWithRelationInput[]\n    cursor?: discussionboard_post_viewsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_post_viewsScalarFieldEnum | Discussionboard_post_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts.discussionboard_comments\n   */\n  export type discussionboard_posts$discussionboard_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    cursor?: discussionboard_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts.discussionboard_reports\n   */\n  export type discussionboard_posts$discussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    cursor?: discussionboard_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts.discussionboard_moderation_actions\n   */\n  export type discussionboard_posts$discussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_posts without action\n   */\n  export type discussionboard_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post_edits\n   */\n\n  export type AggregateDiscussionboard_post_edits = {\n    _count: Discussionboard_post_editsCountAggregateOutputType | null\n    _min: Discussionboard_post_editsMinAggregateOutputType | null\n    _max: Discussionboard_post_editsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_post_editsMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    editor_id: string | null\n    edit_summary: string | null\n    edited_at: Date | null\n  }\n\n  export type Discussionboard_post_editsMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    editor_id: string | null\n    edit_summary: string | null\n    edited_at: Date | null\n  }\n\n  export type Discussionboard_post_editsCountAggregateOutputType = {\n    id: number\n    post_id: number\n    editor_id: number\n    edit_summary: number\n    edited_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_post_editsMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    editor_id?: true\n    edit_summary?: true\n    edited_at?: true\n  }\n\n  export type Discussionboard_post_editsMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    editor_id?: true\n    edit_summary?: true\n    edited_at?: true\n  }\n\n  export type Discussionboard_post_editsCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    editor_id?: true\n    edit_summary?: true\n    edited_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_post_editsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_edits to aggregate.\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_edits to fetch.\n     */\n    orderBy?: discussionboard_post_editsOrderByWithRelationInput | discussionboard_post_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_post_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_edits.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_post_edits\n    **/\n    _count?: true | Discussionboard_post_editsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_post_editsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_post_editsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_post_editsAggregateType<T extends Discussionboard_post_editsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post_edits]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post_edits[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post_edits[P]>\n  }\n\n\n\n\n  export type discussionboard_post_editsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_editsWhereInput\n    orderBy?: discussionboard_post_editsOrderByWithAggregationInput | discussionboard_post_editsOrderByWithAggregationInput[]\n    by: Discussionboard_post_editsScalarFieldEnum[] | Discussionboard_post_editsScalarFieldEnum\n    having?: discussionboard_post_editsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_post_editsCountAggregateInputType | true\n    _min?: Discussionboard_post_editsMinAggregateInputType\n    _max?: Discussionboard_post_editsMaxAggregateInputType\n  }\n\n  export type Discussionboard_post_editsGroupByOutputType = {\n    id: string\n    post_id: string\n    editor_id: string\n    edit_summary: string | null\n    edited_at: Date\n    _count: Discussionboard_post_editsCountAggregateOutputType | null\n    _min: Discussionboard_post_editsMinAggregateOutputType | null\n    _max: Discussionboard_post_editsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_post_editsGroupByPayload<T extends discussionboard_post_editsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_post_editsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_post_editsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_post_editsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_post_editsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_post_editsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_edits\"]>\n\n  export type discussionboard_post_editsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_edits\"]>\n\n  export type discussionboard_post_editsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_edits\"]>\n\n  export type discussionboard_post_editsSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n  }\n\n  export type discussionboard_post_editsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"editor_id\" | \"edit_summary\" | \"edited_at\", ExtArgs[\"result\"][\"discussionboard_post_edits\"]>\n  export type discussionboard_post_editsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_editsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_editsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_post_editsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post_edits\"\n    objects: {\n      post: Prisma.$discussionboard_postsPayload<ExtArgs>\n      editor: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Edited post's {@link discussionboard_posts.id}\n       */\n      post_id: string\n      /**\n       * User who made the edit, references member/mod/admin.\n       */\n      editor_id: string\n      /**\n       * Optional description of what changed.\n       */\n      edit_summary: string | null\n      /**\n       * Timestamp of edit event.\n       */\n      edited_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_post_edits\"]>\n    composites: {}\n  }\n\n  type discussionboard_post_editsGetPayload<S extends boolean | null | undefined | discussionboard_post_editsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_post_editsPayload, S>\n\n  type discussionboard_post_editsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_post_editsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_post_editsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_post_editsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post_edits'], meta: { name: 'discussionboard_post_edits' } }\n    /**\n     * Find zero or one Discussionboard_post_edits that matches the filter.\n     * @param {discussionboard_post_editsFindUniqueArgs} args - Arguments to find a Discussionboard_post_edits\n     * @example\n     * // Get one Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_post_editsFindUniqueArgs>(args: SelectSubset<T, discussionboard_post_editsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post_edits that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_post_editsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post_edits\n     * @example\n     * // Get one Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_post_editsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_post_editsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_edits that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_editsFindFirstArgs} args - Arguments to find a Discussionboard_post_edits\n     * @example\n     * // Get one Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_post_editsFindFirstArgs>(args?: SelectSubset<T, discussionboard_post_editsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_edits that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_editsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post_edits\n     * @example\n     * // Get one Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_post_editsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_post_editsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_post_edits that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_editsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findMany()\n     * \n     * // Get first 10 Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_post_editsWithIdOnly = await prisma.discussionboard_post_edits.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_post_editsFindManyArgs>(args?: SelectSubset<T, discussionboard_post_editsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post_edits.\n     * @param {discussionboard_post_editsCreateArgs} args - Arguments to create a Discussionboard_post_edits.\n     * @example\n     * // Create one Discussionboard_post_edits\n     * const Discussionboard_post_edits = await prisma.discussionboard_post_edits.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post_edits\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_post_editsCreateArgs>(args: SelectSubset<T, discussionboard_post_editsCreateArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_post_edits.\n     * @param {discussionboard_post_editsCreateManyArgs} args - Arguments to create many Discussionboard_post_edits.\n     * @example\n     * // Create many Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_post_editsCreateManyArgs>(args?: SelectSubset<T, discussionboard_post_editsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_post_edits and returns the data saved in the database.\n     * @param {discussionboard_post_editsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_post_edits.\n     * @example\n     * // Create many Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_post_edits and only return the `id`\n     * const discussionboard_post_editsWithIdOnly = await prisma.discussionboard_post_edits.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_post_editsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_post_editsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post_edits.\n     * @param {discussionboard_post_editsDeleteArgs} args - Arguments to delete one Discussionboard_post_edits.\n     * @example\n     * // Delete one Discussionboard_post_edits\n     * const Discussionboard_post_edits = await prisma.discussionboard_post_edits.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post_edits\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_post_editsDeleteArgs>(args: SelectSubset<T, discussionboard_post_editsDeleteArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post_edits.\n     * @param {discussionboard_post_editsUpdateArgs} args - Arguments to update one Discussionboard_post_edits.\n     * @example\n     * // Update one Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_post_editsUpdateArgs>(args: SelectSubset<T, discussionboard_post_editsUpdateArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_post_edits.\n     * @param {discussionboard_post_editsDeleteManyArgs} args - Arguments to filter Discussionboard_post_edits to delete.\n     * @example\n     * // Delete a few Discussionboard_post_edits\n     * const { count } = await prisma.discussionboard_post_edits.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_post_editsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_post_editsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_editsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_post_editsUpdateManyArgs>(args: SelectSubset<T, discussionboard_post_editsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_edits and returns the data updated in the database.\n     * @param {discussionboard_post_editsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_post_edits.\n     * @example\n     * // Update many Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_post_edits and only return the `id`\n     * const discussionboard_post_editsWithIdOnly = await prisma.discussionboard_post_edits.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_post_editsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_post_editsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post_edits.\n     * @param {discussionboard_post_editsUpsertArgs} args - Arguments to update or create a Discussionboard_post_edits.\n     * @example\n     * // Update or create a Discussionboard_post_edits\n     * const discussionboard_post_edits = await prisma.discussionboard_post_edits.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post_edits\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_edits we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_post_editsUpsertArgs>(args: SelectSubset<T, discussionboard_post_editsUpsertArgs<ExtArgs>>): Prisma__discussionboard_post_editsClient<$Result.GetResult<Prisma.$discussionboard_post_editsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_post_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_editsCountArgs} args - Arguments to filter Discussionboard_post_edits to count.\n     * @example\n     * // Count the number of Discussionboard_post_edits\n     * const count = await prisma.discussionboard_post_edits.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_edits we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_post_editsCountArgs>(\n      args?: Subset<T, discussionboard_post_editsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_post_editsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_post_editsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_post_editsAggregateArgs>(args: Subset<T, Discussionboard_post_editsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_post_editsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_editsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_post_editsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_post_editsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_post_editsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_post_editsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_post_editsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post_edits model\n   */\n  readonly fields: discussionboard_post_editsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post_edits.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_post_editsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussionboard_postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_postsDefaultArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    editor<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post_edits model\n   */\n  interface discussionboard_post_editsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post_edits\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_post_edits\", 'String'>\n    readonly editor_id: FieldRef<\"discussionboard_post_edits\", 'String'>\n    readonly edit_summary: FieldRef<\"discussionboard_post_edits\", 'String'>\n    readonly edited_at: FieldRef<\"discussionboard_post_edits\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post_edits findUnique\n   */\n  export type discussionboard_post_editsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_edits to fetch.\n     */\n    where: discussionboard_post_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_edits findUniqueOrThrow\n   */\n  export type discussionboard_post_editsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_edits to fetch.\n     */\n    where: discussionboard_post_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_edits findFirst\n   */\n  export type discussionboard_post_editsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_edits to fetch.\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_edits to fetch.\n     */\n    orderBy?: discussionboard_post_editsOrderByWithRelationInput | discussionboard_post_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_edits.\n     */\n    cursor?: discussionboard_post_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_edits.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_edits.\n     */\n    distinct?: Discussionboard_post_editsScalarFieldEnum | Discussionboard_post_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_edits findFirstOrThrow\n   */\n  export type discussionboard_post_editsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_edits to fetch.\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_edits to fetch.\n     */\n    orderBy?: discussionboard_post_editsOrderByWithRelationInput | discussionboard_post_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_edits.\n     */\n    cursor?: discussionboard_post_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_edits.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_edits.\n     */\n    distinct?: Discussionboard_post_editsScalarFieldEnum | Discussionboard_post_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_edits findMany\n   */\n  export type discussionboard_post_editsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_edits to fetch.\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_edits to fetch.\n     */\n    orderBy?: discussionboard_post_editsOrderByWithRelationInput | discussionboard_post_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_post_edits.\n     */\n    cursor?: discussionboard_post_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_edits.\n     */\n    skip?: number\n    distinct?: Discussionboard_post_editsScalarFieldEnum | Discussionboard_post_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_edits create\n   */\n  export type discussionboard_post_editsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post_edits.\n     */\n    data: XOR<discussionboard_post_editsCreateInput, discussionboard_post_editsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post_edits createMany\n   */\n  export type discussionboard_post_editsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_post_edits.\n     */\n    data: discussionboard_post_editsCreateManyInput | discussionboard_post_editsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_edits createManyAndReturn\n   */\n  export type discussionboard_post_editsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_post_edits.\n     */\n    data: discussionboard_post_editsCreateManyInput | discussionboard_post_editsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_edits update\n   */\n  export type discussionboard_post_editsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post_edits.\n     */\n    data: XOR<discussionboard_post_editsUpdateInput, discussionboard_post_editsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post_edits to update.\n     */\n    where: discussionboard_post_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_edits updateMany\n   */\n  export type discussionboard_post_editsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_post_edits.\n     */\n    data: XOR<discussionboard_post_editsUpdateManyMutationInput, discussionboard_post_editsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_edits to update\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * Limit how many discussionboard_post_edits to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_edits updateManyAndReturn\n   */\n  export type discussionboard_post_editsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_post_edits.\n     */\n    data: XOR<discussionboard_post_editsUpdateManyMutationInput, discussionboard_post_editsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_edits to update\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * Limit how many discussionboard_post_edits to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_edits upsert\n   */\n  export type discussionboard_post_editsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post_edits to update in case it exists.\n     */\n    where: discussionboard_post_editsWhereUniqueInput\n    /**\n     * In case the discussionboard_post_edits found by the `where` argument doesn't exist, create a new discussionboard_post_edits with this data.\n     */\n    create: XOR<discussionboard_post_editsCreateInput, discussionboard_post_editsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post_edits was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_post_editsUpdateInput, discussionboard_post_editsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post_edits delete\n   */\n  export type discussionboard_post_editsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post_edits to delete.\n     */\n    where: discussionboard_post_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_edits deleteMany\n   */\n  export type discussionboard_post_editsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_edits to delete\n     */\n    where?: discussionboard_post_editsWhereInput\n    /**\n     * Limit how many discussionboard_post_edits to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_edits without action\n   */\n  export type discussionboard_post_editsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_edits\n     */\n    select?: discussionboard_post_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_edits\n     */\n    omit?: discussionboard_post_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_editsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post_likes\n   */\n\n  export type AggregateDiscussionboard_post_likes = {\n    _count: Discussionboard_post_likesCountAggregateOutputType | null\n    _min: Discussionboard_post_likesMinAggregateOutputType | null\n    _max: Discussionboard_post_likesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_post_likesMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    user_id: string | null\n    is_like: boolean | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_post_likesMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    user_id: string | null\n    is_like: boolean | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_post_likesCountAggregateOutputType = {\n    id: number\n    post_id: number\n    user_id: number\n    is_like: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_post_likesMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    user_id?: true\n    is_like?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_post_likesMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    user_id?: true\n    is_like?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_post_likesCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    user_id?: true\n    is_like?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_post_likesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_likes to aggregate.\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_likes to fetch.\n     */\n    orderBy?: discussionboard_post_likesOrderByWithRelationInput | discussionboard_post_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_post_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_post_likes\n    **/\n    _count?: true | Discussionboard_post_likesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_post_likesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_post_likesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_post_likesAggregateType<T extends Discussionboard_post_likesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post_likes]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post_likes[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post_likes[P]>\n  }\n\n\n\n\n  export type discussionboard_post_likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_likesWhereInput\n    orderBy?: discussionboard_post_likesOrderByWithAggregationInput | discussionboard_post_likesOrderByWithAggregationInput[]\n    by: Discussionboard_post_likesScalarFieldEnum[] | Discussionboard_post_likesScalarFieldEnum\n    having?: discussionboard_post_likesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_post_likesCountAggregateInputType | true\n    _min?: Discussionboard_post_likesMinAggregateInputType\n    _max?: Discussionboard_post_likesMaxAggregateInputType\n  }\n\n  export type Discussionboard_post_likesGroupByOutputType = {\n    id: string\n    post_id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date\n    _count: Discussionboard_post_likesCountAggregateOutputType | null\n    _min: Discussionboard_post_likesMinAggregateOutputType | null\n    _max: Discussionboard_post_likesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_post_likesGroupByPayload<T extends discussionboard_post_likesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_post_likesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_post_likesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_post_likesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_post_likesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_post_likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_likes\"]>\n\n  export type discussionboard_post_likesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_likes\"]>\n\n  export type discussionboard_post_likesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_likes\"]>\n\n  export type discussionboard_post_likesSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_post_likesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"user_id\" | \"is_like\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_post_likes\"]>\n  export type discussionboard_post_likesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_likesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_post_likesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_post_likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post_likes\"\n    objects: {\n      post: Prisma.$discussionboard_postsPayload<ExtArgs>\n      user: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Liked/disliked post's {@link discussionboard_posts.id}\n       */\n      post_id: string\n      /**\n       * Expressing user id (member/mod/admin) {@link discussionboard_members.id}\n       */\n      user_id: string\n      /**\n       * True if like, false if dislike.\n       */\n      is_like: boolean\n      /**\n       * Event timestamp.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_post_likes\"]>\n    composites: {}\n  }\n\n  type discussionboard_post_likesGetPayload<S extends boolean | null | undefined | discussionboard_post_likesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_post_likesPayload, S>\n\n  type discussionboard_post_likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_post_likesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_post_likesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_post_likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post_likes'], meta: { name: 'discussionboard_post_likes' } }\n    /**\n     * Find zero or one Discussionboard_post_likes that matches the filter.\n     * @param {discussionboard_post_likesFindUniqueArgs} args - Arguments to find a Discussionboard_post_likes\n     * @example\n     * // Get one Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_post_likesFindUniqueArgs>(args: SelectSubset<T, discussionboard_post_likesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post_likes that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_post_likesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post_likes\n     * @example\n     * // Get one Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_post_likesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_post_likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_likes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_likesFindFirstArgs} args - Arguments to find a Discussionboard_post_likes\n     * @example\n     * // Get one Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_post_likesFindFirstArgs>(args?: SelectSubset<T, discussionboard_post_likesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_likes that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_likesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post_likes\n     * @example\n     * // Get one Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_post_likesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_post_likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_post_likes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_likesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findMany()\n     * \n     * // Get first 10 Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_post_likesWithIdOnly = await prisma.discussionboard_post_likes.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_post_likesFindManyArgs>(args?: SelectSubset<T, discussionboard_post_likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post_likes.\n     * @param {discussionboard_post_likesCreateArgs} args - Arguments to create a Discussionboard_post_likes.\n     * @example\n     * // Create one Discussionboard_post_likes\n     * const Discussionboard_post_likes = await prisma.discussionboard_post_likes.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post_likes\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_post_likesCreateArgs>(args: SelectSubset<T, discussionboard_post_likesCreateArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_post_likes.\n     * @param {discussionboard_post_likesCreateManyArgs} args - Arguments to create many Discussionboard_post_likes.\n     * @example\n     * // Create many Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_post_likesCreateManyArgs>(args?: SelectSubset<T, discussionboard_post_likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_post_likes and returns the data saved in the database.\n     * @param {discussionboard_post_likesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_post_likes.\n     * @example\n     * // Create many Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_post_likes and only return the `id`\n     * const discussionboard_post_likesWithIdOnly = await prisma.discussionboard_post_likes.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_post_likesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_post_likesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post_likes.\n     * @param {discussionboard_post_likesDeleteArgs} args - Arguments to delete one Discussionboard_post_likes.\n     * @example\n     * // Delete one Discussionboard_post_likes\n     * const Discussionboard_post_likes = await prisma.discussionboard_post_likes.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post_likes\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_post_likesDeleteArgs>(args: SelectSubset<T, discussionboard_post_likesDeleteArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post_likes.\n     * @param {discussionboard_post_likesUpdateArgs} args - Arguments to update one Discussionboard_post_likes.\n     * @example\n     * // Update one Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_post_likesUpdateArgs>(args: SelectSubset<T, discussionboard_post_likesUpdateArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_post_likes.\n     * @param {discussionboard_post_likesDeleteManyArgs} args - Arguments to filter Discussionboard_post_likes to delete.\n     * @example\n     * // Delete a few Discussionboard_post_likes\n     * const { count } = await prisma.discussionboard_post_likes.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_post_likesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_post_likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_likesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_post_likesUpdateManyArgs>(args: SelectSubset<T, discussionboard_post_likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_likes and returns the data updated in the database.\n     * @param {discussionboard_post_likesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_post_likes.\n     * @example\n     * // Update many Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_post_likes and only return the `id`\n     * const discussionboard_post_likesWithIdOnly = await prisma.discussionboard_post_likes.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_post_likesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_post_likesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post_likes.\n     * @param {discussionboard_post_likesUpsertArgs} args - Arguments to update or create a Discussionboard_post_likes.\n     * @example\n     * // Update or create a Discussionboard_post_likes\n     * const discussionboard_post_likes = await prisma.discussionboard_post_likes.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post_likes\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_likes we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_post_likesUpsertArgs>(args: SelectSubset<T, discussionboard_post_likesUpsertArgs<ExtArgs>>): Prisma__discussionboard_post_likesClient<$Result.GetResult<Prisma.$discussionboard_post_likesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_post_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_likesCountArgs} args - Arguments to filter Discussionboard_post_likes to count.\n     * @example\n     * // Count the number of Discussionboard_post_likes\n     * const count = await prisma.discussionboard_post_likes.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_likes we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_post_likesCountArgs>(\n      args?: Subset<T, discussionboard_post_likesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_post_likesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_post_likesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_post_likesAggregateArgs>(args: Subset<T, Discussionboard_post_likesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_post_likesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_likesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_post_likesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_post_likesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_post_likesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_post_likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_post_likesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post_likes model\n   */\n  readonly fields: discussionboard_post_likesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post_likes.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_post_likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussionboard_postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_postsDefaultArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    user<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post_likes model\n   */\n  interface discussionboard_post_likesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post_likes\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_post_likes\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_post_likes\", 'String'>\n    readonly is_like: FieldRef<\"discussionboard_post_likes\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_post_likes\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post_likes findUnique\n   */\n  export type discussionboard_post_likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_likes to fetch.\n     */\n    where: discussionboard_post_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_likes findUniqueOrThrow\n   */\n  export type discussionboard_post_likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_likes to fetch.\n     */\n    where: discussionboard_post_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_likes findFirst\n   */\n  export type discussionboard_post_likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_likes to fetch.\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_likes to fetch.\n     */\n    orderBy?: discussionboard_post_likesOrderByWithRelationInput | discussionboard_post_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_likes.\n     */\n    cursor?: discussionboard_post_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_likes.\n     */\n    distinct?: Discussionboard_post_likesScalarFieldEnum | Discussionboard_post_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_likes findFirstOrThrow\n   */\n  export type discussionboard_post_likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_likes to fetch.\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_likes to fetch.\n     */\n    orderBy?: discussionboard_post_likesOrderByWithRelationInput | discussionboard_post_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_likes.\n     */\n    cursor?: discussionboard_post_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_likes.\n     */\n    distinct?: Discussionboard_post_likesScalarFieldEnum | Discussionboard_post_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_likes findMany\n   */\n  export type discussionboard_post_likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_likes to fetch.\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_likes to fetch.\n     */\n    orderBy?: discussionboard_post_likesOrderByWithRelationInput | discussionboard_post_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_post_likes.\n     */\n    cursor?: discussionboard_post_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_likes.\n     */\n    skip?: number\n    distinct?: Discussionboard_post_likesScalarFieldEnum | Discussionboard_post_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_likes create\n   */\n  export type discussionboard_post_likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post_likes.\n     */\n    data: XOR<discussionboard_post_likesCreateInput, discussionboard_post_likesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post_likes createMany\n   */\n  export type discussionboard_post_likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_post_likes.\n     */\n    data: discussionboard_post_likesCreateManyInput | discussionboard_post_likesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_likes createManyAndReturn\n   */\n  export type discussionboard_post_likesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_post_likes.\n     */\n    data: discussionboard_post_likesCreateManyInput | discussionboard_post_likesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_likes update\n   */\n  export type discussionboard_post_likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post_likes.\n     */\n    data: XOR<discussionboard_post_likesUpdateInput, discussionboard_post_likesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post_likes to update.\n     */\n    where: discussionboard_post_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_likes updateMany\n   */\n  export type discussionboard_post_likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_post_likes.\n     */\n    data: XOR<discussionboard_post_likesUpdateManyMutationInput, discussionboard_post_likesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_likes to update\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * Limit how many discussionboard_post_likes to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_likes updateManyAndReturn\n   */\n  export type discussionboard_post_likesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_post_likes.\n     */\n    data: XOR<discussionboard_post_likesUpdateManyMutationInput, discussionboard_post_likesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_likes to update\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * Limit how many discussionboard_post_likes to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_likes upsert\n   */\n  export type discussionboard_post_likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post_likes to update in case it exists.\n     */\n    where: discussionboard_post_likesWhereUniqueInput\n    /**\n     * In case the discussionboard_post_likes found by the `where` argument doesn't exist, create a new discussionboard_post_likes with this data.\n     */\n    create: XOR<discussionboard_post_likesCreateInput, discussionboard_post_likesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post_likes was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_post_likesUpdateInput, discussionboard_post_likesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post_likes delete\n   */\n  export type discussionboard_post_likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post_likes to delete.\n     */\n    where: discussionboard_post_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_likes deleteMany\n   */\n  export type discussionboard_post_likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_likes to delete\n     */\n    where?: discussionboard_post_likesWhereInput\n    /**\n     * Limit how many discussionboard_post_likes to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_likes without action\n   */\n  export type discussionboard_post_likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_likes\n     */\n    select?: discussionboard_post_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_likes\n     */\n    omit?: discussionboard_post_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_likesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_post_views\n   */\n\n  export type AggregateDiscussionboard_post_views = {\n    _count: Discussionboard_post_viewsCountAggregateOutputType | null\n    _min: Discussionboard_post_viewsMinAggregateOutputType | null\n    _max: Discussionboard_post_viewsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_post_viewsMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    user_id: string | null\n    session_id: string | null\n    viewed_at: Date | null\n  }\n\n  export type Discussionboard_post_viewsMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    user_id: string | null\n    session_id: string | null\n    viewed_at: Date | null\n  }\n\n  export type Discussionboard_post_viewsCountAggregateOutputType = {\n    id: number\n    post_id: number\n    user_id: number\n    session_id: number\n    viewed_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_post_viewsMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    user_id?: true\n    session_id?: true\n    viewed_at?: true\n  }\n\n  export type Discussionboard_post_viewsMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    user_id?: true\n    session_id?: true\n    viewed_at?: true\n  }\n\n  export type Discussionboard_post_viewsCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    user_id?: true\n    session_id?: true\n    viewed_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_post_viewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_views to aggregate.\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_views to fetch.\n     */\n    orderBy?: discussionboard_post_viewsOrderByWithRelationInput | discussionboard_post_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_post_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_views.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_post_views\n    **/\n    _count?: true | Discussionboard_post_viewsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_post_viewsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_post_viewsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_post_viewsAggregateType<T extends Discussionboard_post_viewsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_post_views]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_post_views[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_post_views[P]>\n  }\n\n\n\n\n  export type discussionboard_post_viewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_post_viewsWhereInput\n    orderBy?: discussionboard_post_viewsOrderByWithAggregationInput | discussionboard_post_viewsOrderByWithAggregationInput[]\n    by: Discussionboard_post_viewsScalarFieldEnum[] | Discussionboard_post_viewsScalarFieldEnum\n    having?: discussionboard_post_viewsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_post_viewsCountAggregateInputType | true\n    _min?: Discussionboard_post_viewsMinAggregateInputType\n    _max?: Discussionboard_post_viewsMaxAggregateInputType\n  }\n\n  export type Discussionboard_post_viewsGroupByOutputType = {\n    id: string\n    post_id: string\n    user_id: string | null\n    session_id: string | null\n    viewed_at: Date\n    _count: Discussionboard_post_viewsCountAggregateOutputType | null\n    _min: Discussionboard_post_viewsMinAggregateOutputType | null\n    _max: Discussionboard_post_viewsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_post_viewsGroupByPayload<T extends discussionboard_post_viewsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_post_viewsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_post_viewsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_post_viewsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_post_viewsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_post_viewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_post_views$userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_views\"]>\n\n  export type discussionboard_post_viewsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_post_views$userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_views\"]>\n\n  export type discussionboard_post_viewsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_post_views$userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_post_views\"]>\n\n  export type discussionboard_post_viewsSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n  }\n\n  export type discussionboard_post_viewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"user_id\" | \"session_id\" | \"viewed_at\", ExtArgs[\"result\"][\"discussionboard_post_views\"]>\n  export type discussionboard_post_viewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_post_views$userArgs<ExtArgs>\n  }\n  export type discussionboard_post_viewsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_post_views$userArgs<ExtArgs>\n  }\n  export type discussionboard_post_viewsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_post_views$userArgs<ExtArgs>\n  }\n\n  export type $discussionboard_post_viewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_post_views\"\n    objects: {\n      post: Prisma.$discussionboard_postsPayload<ExtArgs>\n      user: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Viewed post's {@link discussionboard_posts.id}\n       */\n      post_id: string\n      /**\n       * Viewer id (nullable for unauthenticated/guest view) {@link discussionboard_members.id}\n       */\n      user_id: string | null\n      /**\n       * Session id for anonymous/guest view tracking; useful for analytics. Nullable.\n       */\n      session_id: string | null\n      /**\n       * Timestamp view occurred.\n       */\n      viewed_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_post_views\"]>\n    composites: {}\n  }\n\n  type discussionboard_post_viewsGetPayload<S extends boolean | null | undefined | discussionboard_post_viewsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_post_viewsPayload, S>\n\n  type discussionboard_post_viewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_post_viewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_post_viewsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_post_viewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_post_views'], meta: { name: 'discussionboard_post_views' } }\n    /**\n     * Find zero or one Discussionboard_post_views that matches the filter.\n     * @param {discussionboard_post_viewsFindUniqueArgs} args - Arguments to find a Discussionboard_post_views\n     * @example\n     * // Get one Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_post_viewsFindUniqueArgs>(args: SelectSubset<T, discussionboard_post_viewsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_post_views that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_post_viewsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_post_views\n     * @example\n     * // Get one Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_post_viewsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_post_viewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_views that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_viewsFindFirstArgs} args - Arguments to find a Discussionboard_post_views\n     * @example\n     * // Get one Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_post_viewsFindFirstArgs>(args?: SelectSubset<T, discussionboard_post_viewsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_post_views that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_viewsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_post_views\n     * @example\n     * // Get one Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_post_viewsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_post_viewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_post_views that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_viewsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.findMany()\n     * \n     * // Get first 10 Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_post_viewsWithIdOnly = await prisma.discussionboard_post_views.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_post_viewsFindManyArgs>(args?: SelectSubset<T, discussionboard_post_viewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_post_views.\n     * @param {discussionboard_post_viewsCreateArgs} args - Arguments to create a Discussionboard_post_views.\n     * @example\n     * // Create one Discussionboard_post_views\n     * const Discussionboard_post_views = await prisma.discussionboard_post_views.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_post_views\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_post_viewsCreateArgs>(args: SelectSubset<T, discussionboard_post_viewsCreateArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_post_views.\n     * @param {discussionboard_post_viewsCreateManyArgs} args - Arguments to create many Discussionboard_post_views.\n     * @example\n     * // Create many Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_post_viewsCreateManyArgs>(args?: SelectSubset<T, discussionboard_post_viewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_post_views and returns the data saved in the database.\n     * @param {discussionboard_post_viewsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_post_views.\n     * @example\n     * // Create many Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_post_views and only return the `id`\n     * const discussionboard_post_viewsWithIdOnly = await prisma.discussionboard_post_views.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_post_viewsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_post_viewsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_post_views.\n     * @param {discussionboard_post_viewsDeleteArgs} args - Arguments to delete one Discussionboard_post_views.\n     * @example\n     * // Delete one Discussionboard_post_views\n     * const Discussionboard_post_views = await prisma.discussionboard_post_views.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_post_views\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_post_viewsDeleteArgs>(args: SelectSubset<T, discussionboard_post_viewsDeleteArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_post_views.\n     * @param {discussionboard_post_viewsUpdateArgs} args - Arguments to update one Discussionboard_post_views.\n     * @example\n     * // Update one Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_post_viewsUpdateArgs>(args: SelectSubset<T, discussionboard_post_viewsUpdateArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_post_views.\n     * @param {discussionboard_post_viewsDeleteManyArgs} args - Arguments to filter Discussionboard_post_views to delete.\n     * @example\n     * // Delete a few Discussionboard_post_views\n     * const { count } = await prisma.discussionboard_post_views.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_post_viewsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_post_viewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_viewsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_post_viewsUpdateManyArgs>(args: SelectSubset<T, discussionboard_post_viewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_post_views and returns the data updated in the database.\n     * @param {discussionboard_post_viewsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_post_views.\n     * @example\n     * // Update many Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_post_views and only return the `id`\n     * const discussionboard_post_viewsWithIdOnly = await prisma.discussionboard_post_views.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_post_viewsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_post_viewsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_post_views.\n     * @param {discussionboard_post_viewsUpsertArgs} args - Arguments to update or create a Discussionboard_post_views.\n     * @example\n     * // Update or create a Discussionboard_post_views\n     * const discussionboard_post_views = await prisma.discussionboard_post_views.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_post_views\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_views we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_post_viewsUpsertArgs>(args: SelectSubset<T, discussionboard_post_viewsUpsertArgs<ExtArgs>>): Prisma__discussionboard_post_viewsClient<$Result.GetResult<Prisma.$discussionboard_post_viewsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_post_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_viewsCountArgs} args - Arguments to filter Discussionboard_post_views to count.\n     * @example\n     * // Count the number of Discussionboard_post_views\n     * const count = await prisma.discussionboard_post_views.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_post_views we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_post_viewsCountArgs>(\n      args?: Subset<T, discussionboard_post_viewsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_post_viewsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_post_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_post_viewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_post_viewsAggregateArgs>(args: Subset<T, Discussionboard_post_viewsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_post_viewsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_post_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_post_viewsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_post_viewsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_post_viewsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_post_viewsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_post_viewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_post_viewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_post_views model\n   */\n  readonly fields: discussionboard_post_viewsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_post_views.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_post_viewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussionboard_postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_postsDefaultArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    user<T extends discussionboard_post_views$userArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_post_views$userArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_post_views model\n   */\n  interface discussionboard_post_viewsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_post_views\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_post_views\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_post_views\", 'String'>\n    readonly session_id: FieldRef<\"discussionboard_post_views\", 'String'>\n    readonly viewed_at: FieldRef<\"discussionboard_post_views\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_post_views findUnique\n   */\n  export type discussionboard_post_viewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_views to fetch.\n     */\n    where: discussionboard_post_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_views findUniqueOrThrow\n   */\n  export type discussionboard_post_viewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_views to fetch.\n     */\n    where: discussionboard_post_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_views findFirst\n   */\n  export type discussionboard_post_viewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_views to fetch.\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_views to fetch.\n     */\n    orderBy?: discussionboard_post_viewsOrderByWithRelationInput | discussionboard_post_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_views.\n     */\n    cursor?: discussionboard_post_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_views.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_views.\n     */\n    distinct?: Discussionboard_post_viewsScalarFieldEnum | Discussionboard_post_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_views findFirstOrThrow\n   */\n  export type discussionboard_post_viewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_views to fetch.\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_views to fetch.\n     */\n    orderBy?: discussionboard_post_viewsOrderByWithRelationInput | discussionboard_post_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_post_views.\n     */\n    cursor?: discussionboard_post_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_views.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_post_views.\n     */\n    distinct?: Discussionboard_post_viewsScalarFieldEnum | Discussionboard_post_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_views findMany\n   */\n  export type discussionboard_post_viewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_post_views to fetch.\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_post_views to fetch.\n     */\n    orderBy?: discussionboard_post_viewsOrderByWithRelationInput | discussionboard_post_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_post_views.\n     */\n    cursor?: discussionboard_post_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_post_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_post_views.\n     */\n    skip?: number\n    distinct?: Discussionboard_post_viewsScalarFieldEnum | Discussionboard_post_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_post_views create\n   */\n  export type discussionboard_post_viewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_post_views.\n     */\n    data: XOR<discussionboard_post_viewsCreateInput, discussionboard_post_viewsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_post_views createMany\n   */\n  export type discussionboard_post_viewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_post_views.\n     */\n    data: discussionboard_post_viewsCreateManyInput | discussionboard_post_viewsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_post_views createManyAndReturn\n   */\n  export type discussionboard_post_viewsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_post_views.\n     */\n    data: discussionboard_post_viewsCreateManyInput | discussionboard_post_viewsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_views update\n   */\n  export type discussionboard_post_viewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_post_views.\n     */\n    data: XOR<discussionboard_post_viewsUpdateInput, discussionboard_post_viewsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_post_views to update.\n     */\n    where: discussionboard_post_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_views updateMany\n   */\n  export type discussionboard_post_viewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_post_views.\n     */\n    data: XOR<discussionboard_post_viewsUpdateManyMutationInput, discussionboard_post_viewsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_views to update\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * Limit how many discussionboard_post_views to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_views updateManyAndReturn\n   */\n  export type discussionboard_post_viewsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_post_views.\n     */\n    data: XOR<discussionboard_post_viewsUpdateManyMutationInput, discussionboard_post_viewsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_post_views to update\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * Limit how many discussionboard_post_views to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_post_views upsert\n   */\n  export type discussionboard_post_viewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_post_views to update in case it exists.\n     */\n    where: discussionboard_post_viewsWhereUniqueInput\n    /**\n     * In case the discussionboard_post_views found by the `where` argument doesn't exist, create a new discussionboard_post_views with this data.\n     */\n    create: XOR<discussionboard_post_viewsCreateInput, discussionboard_post_viewsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_post_views was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_post_viewsUpdateInput, discussionboard_post_viewsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_post_views delete\n   */\n  export type discussionboard_post_viewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_post_views to delete.\n     */\n    where: discussionboard_post_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_post_views deleteMany\n   */\n  export type discussionboard_post_viewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_post_views to delete\n     */\n    where?: discussionboard_post_viewsWhereInput\n    /**\n     * Limit how many discussionboard_post_views to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_post_views.user\n   */\n  export type discussionboard_post_views$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_post_views without action\n   */\n  export type discussionboard_post_viewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_post_views\n     */\n    select?: discussionboard_post_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_post_views\n     */\n    omit?: discussionboard_post_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_post_viewsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_comments\n   */\n\n  export type AggregateDiscussionboard_comments = {\n    _count: Discussionboard_commentsCountAggregateOutputType | null\n    _min: Discussionboard_commentsMinAggregateOutputType | null\n    _max: Discussionboard_commentsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_commentsMinAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    author_id: string | null\n    parent_id: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_commentsMaxAggregateOutputType = {\n    id: string | null\n    post_id: string | null\n    author_id: string | null\n    parent_id: string | null\n    body: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Discussionboard_commentsCountAggregateOutputType = {\n    id: number\n    post_id: number\n    author_id: number\n    parent_id: number\n    body: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_commentsMinAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_id?: true\n    parent_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_commentsMaxAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_id?: true\n    parent_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Discussionboard_commentsCountAggregateInputType = {\n    id?: true\n    post_id?: true\n    author_id?: true\n    parent_id?: true\n    body?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comments to aggregate.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_comments\n    **/\n    _count?: true | Discussionboard_commentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_commentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_commentsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_commentsAggregateType<T extends Discussionboard_commentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_comments]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_comments[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_comments[P]>\n  }\n\n\n\n\n  export type discussionboard_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithAggregationInput | discussionboard_commentsOrderByWithAggregationInput[]\n    by: Discussionboard_commentsScalarFieldEnum[] | Discussionboard_commentsScalarFieldEnum\n    having?: discussionboard_commentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_commentsCountAggregateInputType | true\n    _min?: Discussionboard_commentsMinAggregateInputType\n    _max?: Discussionboard_commentsMaxAggregateInputType\n  }\n\n  export type Discussionboard_commentsGroupByOutputType = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id: string | null\n    body: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Discussionboard_commentsCountAggregateOutputType | null\n    _min: Discussionboard_commentsMinAggregateOutputType | null\n    _max: Discussionboard_commentsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_commentsGroupByPayload<T extends discussionboard_commentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_commentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_commentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_commentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_commentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    parent?: boolean | discussionboard_comments$parentArgs<ExtArgs>\n    recursive?: boolean | discussionboard_comments$recursiveArgs<ExtArgs>\n    discussionboard_comment_likes?: boolean | discussionboard_comments$discussionboard_comment_likesArgs<ExtArgs>\n    discussionboard_comment_edits?: boolean | discussionboard_comments$discussionboard_comment_editsArgs<ExtArgs>\n    discussionboard_comment_views?: boolean | discussionboard_comments$discussionboard_comment_viewsArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_comments$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_comments$discussionboard_moderation_actionsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n\n  export type discussionboard_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    parent?: boolean | discussionboard_comments$parentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n\n  export type discussionboard_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    parent?: boolean | discussionboard_comments$parentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n\n  export type discussionboard_commentsSelectScalar = {\n    id?: boolean\n    post_id?: boolean\n    author_id?: boolean\n    parent_id?: boolean\n    body?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type discussionboard_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"post_id\" | \"author_id\" | \"parent_id\" | \"body\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"discussionboard_comments\"]>\n  export type discussionboard_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    parent?: boolean | discussionboard_comments$parentArgs<ExtArgs>\n    recursive?: boolean | discussionboard_comments$recursiveArgs<ExtArgs>\n    discussionboard_comment_likes?: boolean | discussionboard_comments$discussionboard_comment_likesArgs<ExtArgs>\n    discussionboard_comment_edits?: boolean | discussionboard_comments$discussionboard_comment_editsArgs<ExtArgs>\n    discussionboard_comment_views?: boolean | discussionboard_comments$discussionboard_comment_viewsArgs<ExtArgs>\n    discussionboard_reports?: boolean | discussionboard_comments$discussionboard_reportsArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_comments$discussionboard_moderation_actionsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_commentsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    parent?: boolean | discussionboard_comments$parentArgs<ExtArgs>\n  }\n  export type discussionboard_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    post?: boolean | discussionboard_postsDefaultArgs<ExtArgs>\n    author?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    parent?: boolean | discussionboard_comments$parentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_comments\"\n    objects: {\n      post: Prisma.$discussionboard_postsPayload<ExtArgs>\n      author: Prisma.$discussionboard_membersPayload<ExtArgs>\n      parent: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      recursive: Prisma.$discussionboard_commentsPayload<ExtArgs>[]\n      discussionboard_comment_likes: Prisma.$discussionboard_comment_likesPayload<ExtArgs>[]\n      discussionboard_comment_edits: Prisma.$discussionboard_comment_editsPayload<ExtArgs>[]\n      discussionboard_comment_views: Prisma.$discussionboard_comment_viewsPayload<ExtArgs>[]\n      discussionboard_reports: Prisma.$discussionboard_reportsPayload<ExtArgs>[]\n      discussionboard_moderation_actions: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * The post this comment is on {@link discussionboard_posts.id}\n       */\n      post_id: string\n      /**\n       * Comment author's user id (member/mod/admin) {@link discussionboard_members.id}\n       */\n      author_id: string\n      /**\n       * Optional recursive parent for a reply chain (refers to this table's id). Nullable for top-level replies.\n       */\n      parent_id: string | null\n      /**\n       * Comment text (atomic, not computed).\n       */\n      body: string\n      /**\n       * Timestamp created.\n       */\n      created_at: Date\n      /**\n       * Timestamp updated.\n       */\n      updated_at: Date\n      /**\n       * Soft deletion timestamp for moderation/audit purposes.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_comments\"]>\n    composites: {}\n  }\n\n  type discussionboard_commentsGetPayload<S extends boolean | null | undefined | discussionboard_commentsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_commentsPayload, S>\n\n  type discussionboard_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_commentsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_comments'], meta: { name: 'discussionboard_comments' } }\n    /**\n     * Find zero or one Discussionboard_comments that matches the filter.\n     * @param {discussionboard_commentsFindUniqueArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_commentsFindUniqueArgs>(args: SelectSubset<T, discussionboard_commentsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_comments that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_commentsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsFindFirstArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_commentsFindFirstArgs>(args?: SelectSubset<T, discussionboard_commentsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comments that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_comments\n     * @example\n     * // Get one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_comments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findMany()\n     * \n     * // Get first 10 Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_commentsWithIdOnly = await prisma.discussionboard_comments.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_commentsFindManyArgs>(args?: SelectSubset<T, discussionboard_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_comments.\n     * @param {discussionboard_commentsCreateArgs} args - Arguments to create a Discussionboard_comments.\n     * @example\n     * // Create one Discussionboard_comments\n     * const Discussionboard_comments = await prisma.discussionboard_comments.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_comments\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_commentsCreateArgs>(args: SelectSubset<T, discussionboard_commentsCreateArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_comments.\n     * @param {discussionboard_commentsCreateManyArgs} args - Arguments to create many Discussionboard_comments.\n     * @example\n     * // Create many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_commentsCreateManyArgs>(args?: SelectSubset<T, discussionboard_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_comments and returns the data saved in the database.\n     * @param {discussionboard_commentsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_comments.\n     * @example\n     * // Create many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_comments and only return the `id`\n     * const discussionboard_commentsWithIdOnly = await prisma.discussionboard_comments.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_comments.\n     * @param {discussionboard_commentsDeleteArgs} args - Arguments to delete one Discussionboard_comments.\n     * @example\n     * // Delete one Discussionboard_comments\n     * const Discussionboard_comments = await prisma.discussionboard_comments.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_comments\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_commentsDeleteArgs>(args: SelectSubset<T, discussionboard_commentsDeleteArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_comments.\n     * @param {discussionboard_commentsUpdateArgs} args - Arguments to update one Discussionboard_comments.\n     * @example\n     * // Update one Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_commentsUpdateArgs>(args: SelectSubset<T, discussionboard_commentsUpdateArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_comments.\n     * @param {discussionboard_commentsDeleteManyArgs} args - Arguments to filter Discussionboard_comments to delete.\n     * @example\n     * // Delete a few Discussionboard_comments\n     * const { count } = await prisma.discussionboard_comments.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_commentsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_commentsUpdateManyArgs>(args: SelectSubset<T, discussionboard_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comments and returns the data updated in the database.\n     * @param {discussionboard_commentsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_comments.\n     * @example\n     * // Update many Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_comments and only return the `id`\n     * const discussionboard_commentsWithIdOnly = await prisma.discussionboard_comments.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_comments.\n     * @param {discussionboard_commentsUpsertArgs} args - Arguments to update or create a Discussionboard_comments.\n     * @example\n     * // Update or create a Discussionboard_comments\n     * const discussionboard_comments = await prisma.discussionboard_comments.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_comments\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_comments we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_commentsUpsertArgs>(args: SelectSubset<T, discussionboard_commentsUpsertArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsCountArgs} args - Arguments to filter Discussionboard_comments to count.\n     * @example\n     * // Count the number of Discussionboard_comments\n     * const count = await prisma.discussionboard_comments.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_comments we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_commentsCountArgs>(\n      args?: Subset<T, discussionboard_commentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_commentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_commentsAggregateArgs>(args: Subset<T, Discussionboard_commentsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_commentsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_comments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_commentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_commentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_commentsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_commentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_comments model\n   */\n  readonly fields: discussionboard_commentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_comments.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    post<T extends discussionboard_postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_postsDefaultArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    author<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    parent<T extends discussionboard_comments$parentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$parentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    recursive<T extends discussionboard_comments$recursiveArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$recursiveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comment_likes<T extends discussionboard_comments$discussionboard_comment_likesArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_comment_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comment_edits<T extends discussionboard_comments$discussionboard_comment_editsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_comment_editsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_comment_views<T extends discussionboard_comments$discussionboard_comment_viewsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_comment_viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_reports<T extends discussionboard_comments$discussionboard_reportsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_moderation_actions<T extends discussionboard_comments$discussionboard_moderation_actionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comments$discussionboard_moderation_actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_comments model\n   */\n  interface discussionboard_commentsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly post_id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly author_id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly parent_id: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly body: FieldRef<\"discussionboard_comments\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_comments\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_comments\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"discussionboard_comments\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_comments findUnique\n   */\n  export type discussionboard_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments findUniqueOrThrow\n   */\n  export type discussionboard_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments findFirst\n   */\n  export type discussionboard_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comments.\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comments.\n     */\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments findFirstOrThrow\n   */\n  export type discussionboard_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comments.\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comments.\n     */\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments findMany\n   */\n  export type discussionboard_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comments to fetch.\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comments to fetch.\n     */\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_comments.\n     */\n    cursor?: discussionboard_commentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comments.\n     */\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments create\n   */\n  export type discussionboard_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsCreateInput, discussionboard_commentsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_comments createMany\n   */\n  export type discussionboard_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_comments.\n     */\n    data: discussionboard_commentsCreateManyInput | discussionboard_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_comments createManyAndReturn\n   */\n  export type discussionboard_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_comments.\n     */\n    data: discussionboard_commentsCreateManyInput | discussionboard_commentsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comments update\n   */\n  export type discussionboard_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsUpdateInput, discussionboard_commentsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_comments to update.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments updateMany\n   */\n  export type discussionboard_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comments to update\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * Limit how many discussionboard_comments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comments updateManyAndReturn\n   */\n  export type discussionboard_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_comments.\n     */\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comments to update\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * Limit how many discussionboard_comments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comments upsert\n   */\n  export type discussionboard_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_comments to update in case it exists.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n    /**\n     * In case the discussionboard_comments found by the `where` argument doesn't exist, create a new discussionboard_comments with this data.\n     */\n    create: XOR<discussionboard_commentsCreateInput, discussionboard_commentsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_comments was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_commentsUpdateInput, discussionboard_commentsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_comments delete\n   */\n  export type discussionboard_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_comments to delete.\n     */\n    where: discussionboard_commentsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comments deleteMany\n   */\n  export type discussionboard_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comments to delete\n     */\n    where?: discussionboard_commentsWhereInput\n    /**\n     * Limit how many discussionboard_comments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comments.parent\n   */\n  export type discussionboard_comments$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_comments.recursive\n   */\n  export type discussionboard_comments$recursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n    orderBy?: discussionboard_commentsOrderByWithRelationInput | discussionboard_commentsOrderByWithRelationInput[]\n    cursor?: discussionboard_commentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_commentsScalarFieldEnum | Discussionboard_commentsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_comment_likes\n   */\n  export type discussionboard_comments$discussionboard_comment_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    where?: discussionboard_comment_likesWhereInput\n    orderBy?: discussionboard_comment_likesOrderByWithRelationInput | discussionboard_comment_likesOrderByWithRelationInput[]\n    cursor?: discussionboard_comment_likesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_comment_likesScalarFieldEnum | Discussionboard_comment_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_comment_edits\n   */\n  export type discussionboard_comments$discussionboard_comment_editsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    where?: discussionboard_comment_editsWhereInput\n    orderBy?: discussionboard_comment_editsOrderByWithRelationInput | discussionboard_comment_editsOrderByWithRelationInput[]\n    cursor?: discussionboard_comment_editsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_comment_editsScalarFieldEnum | Discussionboard_comment_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_comment_views\n   */\n  export type discussionboard_comments$discussionboard_comment_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    where?: discussionboard_comment_viewsWhereInput\n    orderBy?: discussionboard_comment_viewsOrderByWithRelationInput | discussionboard_comment_viewsOrderByWithRelationInput[]\n    cursor?: discussionboard_comment_viewsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_comment_viewsScalarFieldEnum | Discussionboard_comment_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_reports\n   */\n  export type discussionboard_comments$discussionboard_reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    cursor?: discussionboard_reportsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments.discussionboard_moderation_actions\n   */\n  export type discussionboard_comments$discussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comments without action\n   */\n  export type discussionboard_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_comment_likes\n   */\n\n  export type AggregateDiscussionboard_comment_likes = {\n    _count: Discussionboard_comment_likesCountAggregateOutputType | null\n    _min: Discussionboard_comment_likesMinAggregateOutputType | null\n    _max: Discussionboard_comment_likesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_comment_likesMinAggregateOutputType = {\n    id: string | null\n    comment_id: string | null\n    user_id: string | null\n    is_like: boolean | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_comment_likesMaxAggregateOutputType = {\n    id: string | null\n    comment_id: string | null\n    user_id: string | null\n    is_like: boolean | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_comment_likesCountAggregateOutputType = {\n    id: number\n    comment_id: number\n    user_id: number\n    is_like: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_comment_likesMinAggregateInputType = {\n    id?: true\n    comment_id?: true\n    user_id?: true\n    is_like?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_comment_likesMaxAggregateInputType = {\n    id?: true\n    comment_id?: true\n    user_id?: true\n    is_like?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_comment_likesCountAggregateInputType = {\n    id?: true\n    comment_id?: true\n    user_id?: true\n    is_like?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_comment_likesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comment_likes to aggregate.\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_likes to fetch.\n     */\n    orderBy?: discussionboard_comment_likesOrderByWithRelationInput | discussionboard_comment_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_comment_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_comment_likes\n    **/\n    _count?: true | Discussionboard_comment_likesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_comment_likesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_comment_likesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_comment_likesAggregateType<T extends Discussionboard_comment_likesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_comment_likes]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_comment_likes[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_comment_likes[P]>\n  }\n\n\n\n\n  export type discussionboard_comment_likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_likesWhereInput\n    orderBy?: discussionboard_comment_likesOrderByWithAggregationInput | discussionboard_comment_likesOrderByWithAggregationInput[]\n    by: Discussionboard_comment_likesScalarFieldEnum[] | Discussionboard_comment_likesScalarFieldEnum\n    having?: discussionboard_comment_likesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_comment_likesCountAggregateInputType | true\n    _min?: Discussionboard_comment_likesMinAggregateInputType\n    _max?: Discussionboard_comment_likesMaxAggregateInputType\n  }\n\n  export type Discussionboard_comment_likesGroupByOutputType = {\n    id: string\n    comment_id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date\n    _count: Discussionboard_comment_likesCountAggregateOutputType | null\n    _min: Discussionboard_comment_likesMinAggregateOutputType | null\n    _max: Discussionboard_comment_likesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_comment_likesGroupByPayload<T extends discussionboard_comment_likesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_comment_likesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_comment_likesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_comment_likesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_comment_likesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_comment_likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_likes\"]>\n\n  export type discussionboard_comment_likesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_likes\"]>\n\n  export type discussionboard_comment_likesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_likes\"]>\n\n  export type discussionboard_comment_likesSelectScalar = {\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    is_like?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_comment_likesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"comment_id\" | \"user_id\" | \"is_like\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_comment_likes\"]>\n  export type discussionboard_comment_likesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_comment_likesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_comment_likesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_comment_likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_comment_likes\"\n    objects: {\n      comment: Prisma.$discussionboard_commentsPayload<ExtArgs>\n      user: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Liked/disliked comment id {@link discussionboard_comments.id}\n       */\n      comment_id: string\n      /**\n       * Reacting user id (member/mod/admin) {@link discussionboard_members.id}\n       */\n      user_id: string\n      /**\n       * True if like, false if dislike.\n       */\n      is_like: boolean\n      /**\n       * Timestamp like/dislike event was created.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_comment_likes\"]>\n    composites: {}\n  }\n\n  type discussionboard_comment_likesGetPayload<S extends boolean | null | undefined | discussionboard_comment_likesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_comment_likesPayload, S>\n\n  type discussionboard_comment_likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_comment_likesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_comment_likesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_comment_likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_comment_likes'], meta: { name: 'discussionboard_comment_likes' } }\n    /**\n     * Find zero or one Discussionboard_comment_likes that matches the filter.\n     * @param {discussionboard_comment_likesFindUniqueArgs} args - Arguments to find a Discussionboard_comment_likes\n     * @example\n     * // Get one Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_comment_likesFindUniqueArgs>(args: SelectSubset<T, discussionboard_comment_likesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_comment_likes that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_comment_likesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_comment_likes\n     * @example\n     * // Get one Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_comment_likesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_comment_likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comment_likes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_likesFindFirstArgs} args - Arguments to find a Discussionboard_comment_likes\n     * @example\n     * // Get one Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_comment_likesFindFirstArgs>(args?: SelectSubset<T, discussionboard_comment_likesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comment_likes that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_likesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_comment_likes\n     * @example\n     * // Get one Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_comment_likesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_comment_likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_comment_likes that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_likesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findMany()\n     * \n     * // Get first 10 Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_comment_likesWithIdOnly = await prisma.discussionboard_comment_likes.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_comment_likesFindManyArgs>(args?: SelectSubset<T, discussionboard_comment_likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_comment_likes.\n     * @param {discussionboard_comment_likesCreateArgs} args - Arguments to create a Discussionboard_comment_likes.\n     * @example\n     * // Create one Discussionboard_comment_likes\n     * const Discussionboard_comment_likes = await prisma.discussionboard_comment_likes.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_comment_likes\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_comment_likesCreateArgs>(args: SelectSubset<T, discussionboard_comment_likesCreateArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_comment_likes.\n     * @param {discussionboard_comment_likesCreateManyArgs} args - Arguments to create many Discussionboard_comment_likes.\n     * @example\n     * // Create many Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_comment_likesCreateManyArgs>(args?: SelectSubset<T, discussionboard_comment_likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_comment_likes and returns the data saved in the database.\n     * @param {discussionboard_comment_likesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_comment_likes.\n     * @example\n     * // Create many Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_comment_likes and only return the `id`\n     * const discussionboard_comment_likesWithIdOnly = await prisma.discussionboard_comment_likes.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_comment_likesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_comment_likesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_comment_likes.\n     * @param {discussionboard_comment_likesDeleteArgs} args - Arguments to delete one Discussionboard_comment_likes.\n     * @example\n     * // Delete one Discussionboard_comment_likes\n     * const Discussionboard_comment_likes = await prisma.discussionboard_comment_likes.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_comment_likes\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_comment_likesDeleteArgs>(args: SelectSubset<T, discussionboard_comment_likesDeleteArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_comment_likes.\n     * @param {discussionboard_comment_likesUpdateArgs} args - Arguments to update one Discussionboard_comment_likes.\n     * @example\n     * // Update one Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_comment_likesUpdateArgs>(args: SelectSubset<T, discussionboard_comment_likesUpdateArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_comment_likes.\n     * @param {discussionboard_comment_likesDeleteManyArgs} args - Arguments to filter Discussionboard_comment_likes to delete.\n     * @example\n     * // Delete a few Discussionboard_comment_likes\n     * const { count } = await prisma.discussionboard_comment_likes.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_comment_likesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_comment_likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comment_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_likesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_comment_likesUpdateManyArgs>(args: SelectSubset<T, discussionboard_comment_likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comment_likes and returns the data updated in the database.\n     * @param {discussionboard_comment_likesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_comment_likes.\n     * @example\n     * // Update many Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_comment_likes and only return the `id`\n     * const discussionboard_comment_likesWithIdOnly = await prisma.discussionboard_comment_likes.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_comment_likesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_comment_likesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_comment_likes.\n     * @param {discussionboard_comment_likesUpsertArgs} args - Arguments to update or create a Discussionboard_comment_likes.\n     * @example\n     * // Update or create a Discussionboard_comment_likes\n     * const discussionboard_comment_likes = await prisma.discussionboard_comment_likes.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_comment_likes\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_comment_likes we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_comment_likesUpsertArgs>(args: SelectSubset<T, discussionboard_comment_likesUpsertArgs<ExtArgs>>): Prisma__discussionboard_comment_likesClient<$Result.GetResult<Prisma.$discussionboard_comment_likesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_comment_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_likesCountArgs} args - Arguments to filter Discussionboard_comment_likes to count.\n     * @example\n     * // Count the number of Discussionboard_comment_likes\n     * const count = await prisma.discussionboard_comment_likes.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_comment_likes we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_comment_likesCountArgs>(\n      args?: Subset<T, discussionboard_comment_likesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_comment_likesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_comment_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_comment_likesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_comment_likesAggregateArgs>(args: Subset<T, Discussionboard_comment_likesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_comment_likesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_comment_likes.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_likesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_comment_likesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_comment_likesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_comment_likesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_comment_likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_comment_likesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_comment_likes model\n   */\n  readonly fields: discussionboard_comment_likesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_comment_likes.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_comment_likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    comment<T extends discussionboard_commentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_commentsDefaultArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    user<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_comment_likes model\n   */\n  interface discussionboard_comment_likesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_comment_likes\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_comment_likes\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_comment_likes\", 'String'>\n    readonly is_like: FieldRef<\"discussionboard_comment_likes\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_comment_likes\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_comment_likes findUnique\n   */\n  export type discussionboard_comment_likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_likes to fetch.\n     */\n    where: discussionboard_comment_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_likes findUniqueOrThrow\n   */\n  export type discussionboard_comment_likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_likes to fetch.\n     */\n    where: discussionboard_comment_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_likes findFirst\n   */\n  export type discussionboard_comment_likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_likes to fetch.\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_likes to fetch.\n     */\n    orderBy?: discussionboard_comment_likesOrderByWithRelationInput | discussionboard_comment_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comment_likes.\n     */\n    cursor?: discussionboard_comment_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comment_likes.\n     */\n    distinct?: Discussionboard_comment_likesScalarFieldEnum | Discussionboard_comment_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_likes findFirstOrThrow\n   */\n  export type discussionboard_comment_likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_likes to fetch.\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_likes to fetch.\n     */\n    orderBy?: discussionboard_comment_likesOrderByWithRelationInput | discussionboard_comment_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comment_likes.\n     */\n    cursor?: discussionboard_comment_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_likes.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comment_likes.\n     */\n    distinct?: Discussionboard_comment_likesScalarFieldEnum | Discussionboard_comment_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_likes findMany\n   */\n  export type discussionboard_comment_likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_likes to fetch.\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_likes to fetch.\n     */\n    orderBy?: discussionboard_comment_likesOrderByWithRelationInput | discussionboard_comment_likesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_comment_likes.\n     */\n    cursor?: discussionboard_comment_likesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_likes from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_likes.\n     */\n    skip?: number\n    distinct?: Discussionboard_comment_likesScalarFieldEnum | Discussionboard_comment_likesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_likes create\n   */\n  export type discussionboard_comment_likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_comment_likes.\n     */\n    data: XOR<discussionboard_comment_likesCreateInput, discussionboard_comment_likesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_comment_likes createMany\n   */\n  export type discussionboard_comment_likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_comment_likes.\n     */\n    data: discussionboard_comment_likesCreateManyInput | discussionboard_comment_likesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_comment_likes createManyAndReturn\n   */\n  export type discussionboard_comment_likesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_comment_likes.\n     */\n    data: discussionboard_comment_likesCreateManyInput | discussionboard_comment_likesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comment_likes update\n   */\n  export type discussionboard_comment_likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_comment_likes.\n     */\n    data: XOR<discussionboard_comment_likesUpdateInput, discussionboard_comment_likesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_comment_likes to update.\n     */\n    where: discussionboard_comment_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_likes updateMany\n   */\n  export type discussionboard_comment_likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_comment_likes.\n     */\n    data: XOR<discussionboard_comment_likesUpdateManyMutationInput, discussionboard_comment_likesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comment_likes to update\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * Limit how many discussionboard_comment_likes to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comment_likes updateManyAndReturn\n   */\n  export type discussionboard_comment_likesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_comment_likes.\n     */\n    data: XOR<discussionboard_comment_likesUpdateManyMutationInput, discussionboard_comment_likesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comment_likes to update\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * Limit how many discussionboard_comment_likes to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comment_likes upsert\n   */\n  export type discussionboard_comment_likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_comment_likes to update in case it exists.\n     */\n    where: discussionboard_comment_likesWhereUniqueInput\n    /**\n     * In case the discussionboard_comment_likes found by the `where` argument doesn't exist, create a new discussionboard_comment_likes with this data.\n     */\n    create: XOR<discussionboard_comment_likesCreateInput, discussionboard_comment_likesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_comment_likes was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_comment_likesUpdateInput, discussionboard_comment_likesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_comment_likes delete\n   */\n  export type discussionboard_comment_likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_comment_likes to delete.\n     */\n    where: discussionboard_comment_likesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_likes deleteMany\n   */\n  export type discussionboard_comment_likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comment_likes to delete\n     */\n    where?: discussionboard_comment_likesWhereInput\n    /**\n     * Limit how many discussionboard_comment_likes to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comment_likes without action\n   */\n  export type discussionboard_comment_likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_likes\n     */\n    select?: discussionboard_comment_likesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_likes\n     */\n    omit?: discussionboard_comment_likesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_likesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_comment_edits\n   */\n\n  export type AggregateDiscussionboard_comment_edits = {\n    _count: Discussionboard_comment_editsCountAggregateOutputType | null\n    _min: Discussionboard_comment_editsMinAggregateOutputType | null\n    _max: Discussionboard_comment_editsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_comment_editsMinAggregateOutputType = {\n    id: string | null\n    comment_id: string | null\n    editor_id: string | null\n    edit_summary: string | null\n    edited_at: Date | null\n  }\n\n  export type Discussionboard_comment_editsMaxAggregateOutputType = {\n    id: string | null\n    comment_id: string | null\n    editor_id: string | null\n    edit_summary: string | null\n    edited_at: Date | null\n  }\n\n  export type Discussionboard_comment_editsCountAggregateOutputType = {\n    id: number\n    comment_id: number\n    editor_id: number\n    edit_summary: number\n    edited_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_comment_editsMinAggregateInputType = {\n    id?: true\n    comment_id?: true\n    editor_id?: true\n    edit_summary?: true\n    edited_at?: true\n  }\n\n  export type Discussionboard_comment_editsMaxAggregateInputType = {\n    id?: true\n    comment_id?: true\n    editor_id?: true\n    edit_summary?: true\n    edited_at?: true\n  }\n\n  export type Discussionboard_comment_editsCountAggregateInputType = {\n    id?: true\n    comment_id?: true\n    editor_id?: true\n    edit_summary?: true\n    edited_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_comment_editsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comment_edits to aggregate.\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_edits to fetch.\n     */\n    orderBy?: discussionboard_comment_editsOrderByWithRelationInput | discussionboard_comment_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_comment_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_edits.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_comment_edits\n    **/\n    _count?: true | Discussionboard_comment_editsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_comment_editsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_comment_editsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_comment_editsAggregateType<T extends Discussionboard_comment_editsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_comment_edits]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_comment_edits[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_comment_edits[P]>\n  }\n\n\n\n\n  export type discussionboard_comment_editsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_editsWhereInput\n    orderBy?: discussionboard_comment_editsOrderByWithAggregationInput | discussionboard_comment_editsOrderByWithAggregationInput[]\n    by: Discussionboard_comment_editsScalarFieldEnum[] | Discussionboard_comment_editsScalarFieldEnum\n    having?: discussionboard_comment_editsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_comment_editsCountAggregateInputType | true\n    _min?: Discussionboard_comment_editsMinAggregateInputType\n    _max?: Discussionboard_comment_editsMaxAggregateInputType\n  }\n\n  export type Discussionboard_comment_editsGroupByOutputType = {\n    id: string\n    comment_id: string\n    editor_id: string\n    edit_summary: string | null\n    edited_at: Date\n    _count: Discussionboard_comment_editsCountAggregateOutputType | null\n    _min: Discussionboard_comment_editsMinAggregateOutputType | null\n    _max: Discussionboard_comment_editsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_comment_editsGroupByPayload<T extends discussionboard_comment_editsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_comment_editsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_comment_editsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_comment_editsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_comment_editsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_comment_editsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_edits\"]>\n\n  export type discussionboard_comment_editsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_edits\"]>\n\n  export type discussionboard_comment_editsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_edits\"]>\n\n  export type discussionboard_comment_editsSelectScalar = {\n    id?: boolean\n    comment_id?: boolean\n    editor_id?: boolean\n    edit_summary?: boolean\n    edited_at?: boolean\n  }\n\n  export type discussionboard_comment_editsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"comment_id\" | \"editor_id\" | \"edit_summary\" | \"edited_at\", ExtArgs[\"result\"][\"discussionboard_comment_edits\"]>\n  export type discussionboard_comment_editsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_comment_editsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_comment_editsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    editor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_comment_editsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_comment_edits\"\n    objects: {\n      comment: Prisma.$discussionboard_commentsPayload<ExtArgs>\n      editor: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Edited comment's {@link discussionboard_comments.id}\n       */\n      comment_id: string\n      /**\n       * User who edited the comment {@link discussionboard_members.id}\n       */\n      editor_id: string\n      /**\n       * Optional brief note on edit reason or summary.\n       */\n      edit_summary: string | null\n      /**\n       * Edit event timestamp.\n       */\n      edited_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_comment_edits\"]>\n    composites: {}\n  }\n\n  type discussionboard_comment_editsGetPayload<S extends boolean | null | undefined | discussionboard_comment_editsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_comment_editsPayload, S>\n\n  type discussionboard_comment_editsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_comment_editsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_comment_editsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_comment_editsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_comment_edits'], meta: { name: 'discussionboard_comment_edits' } }\n    /**\n     * Find zero or one Discussionboard_comment_edits that matches the filter.\n     * @param {discussionboard_comment_editsFindUniqueArgs} args - Arguments to find a Discussionboard_comment_edits\n     * @example\n     * // Get one Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_comment_editsFindUniqueArgs>(args: SelectSubset<T, discussionboard_comment_editsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_comment_edits that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_comment_editsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_comment_edits\n     * @example\n     * // Get one Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_comment_editsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_comment_editsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comment_edits that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_editsFindFirstArgs} args - Arguments to find a Discussionboard_comment_edits\n     * @example\n     * // Get one Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_comment_editsFindFirstArgs>(args?: SelectSubset<T, discussionboard_comment_editsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comment_edits that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_editsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_comment_edits\n     * @example\n     * // Get one Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_comment_editsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_comment_editsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_comment_edits that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_editsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findMany()\n     * \n     * // Get first 10 Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_comment_editsWithIdOnly = await prisma.discussionboard_comment_edits.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_comment_editsFindManyArgs>(args?: SelectSubset<T, discussionboard_comment_editsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_comment_edits.\n     * @param {discussionboard_comment_editsCreateArgs} args - Arguments to create a Discussionboard_comment_edits.\n     * @example\n     * // Create one Discussionboard_comment_edits\n     * const Discussionboard_comment_edits = await prisma.discussionboard_comment_edits.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_comment_edits\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_comment_editsCreateArgs>(args: SelectSubset<T, discussionboard_comment_editsCreateArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_comment_edits.\n     * @param {discussionboard_comment_editsCreateManyArgs} args - Arguments to create many Discussionboard_comment_edits.\n     * @example\n     * // Create many Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_comment_editsCreateManyArgs>(args?: SelectSubset<T, discussionboard_comment_editsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_comment_edits and returns the data saved in the database.\n     * @param {discussionboard_comment_editsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_comment_edits.\n     * @example\n     * // Create many Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_comment_edits and only return the `id`\n     * const discussionboard_comment_editsWithIdOnly = await prisma.discussionboard_comment_edits.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_comment_editsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_comment_editsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_comment_edits.\n     * @param {discussionboard_comment_editsDeleteArgs} args - Arguments to delete one Discussionboard_comment_edits.\n     * @example\n     * // Delete one Discussionboard_comment_edits\n     * const Discussionboard_comment_edits = await prisma.discussionboard_comment_edits.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_comment_edits\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_comment_editsDeleteArgs>(args: SelectSubset<T, discussionboard_comment_editsDeleteArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_comment_edits.\n     * @param {discussionboard_comment_editsUpdateArgs} args - Arguments to update one Discussionboard_comment_edits.\n     * @example\n     * // Update one Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_comment_editsUpdateArgs>(args: SelectSubset<T, discussionboard_comment_editsUpdateArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_comment_edits.\n     * @param {discussionboard_comment_editsDeleteManyArgs} args - Arguments to filter Discussionboard_comment_edits to delete.\n     * @example\n     * // Delete a few Discussionboard_comment_edits\n     * const { count } = await prisma.discussionboard_comment_edits.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_comment_editsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_comment_editsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comment_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_editsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_comment_editsUpdateManyArgs>(args: SelectSubset<T, discussionboard_comment_editsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comment_edits and returns the data updated in the database.\n     * @param {discussionboard_comment_editsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_comment_edits.\n     * @example\n     * // Update many Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_comment_edits and only return the `id`\n     * const discussionboard_comment_editsWithIdOnly = await prisma.discussionboard_comment_edits.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_comment_editsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_comment_editsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_comment_edits.\n     * @param {discussionboard_comment_editsUpsertArgs} args - Arguments to update or create a Discussionboard_comment_edits.\n     * @example\n     * // Update or create a Discussionboard_comment_edits\n     * const discussionboard_comment_edits = await prisma.discussionboard_comment_edits.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_comment_edits\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_comment_edits we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_comment_editsUpsertArgs>(args: SelectSubset<T, discussionboard_comment_editsUpsertArgs<ExtArgs>>): Prisma__discussionboard_comment_editsClient<$Result.GetResult<Prisma.$discussionboard_comment_editsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_comment_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_editsCountArgs} args - Arguments to filter Discussionboard_comment_edits to count.\n     * @example\n     * // Count the number of Discussionboard_comment_edits\n     * const count = await prisma.discussionboard_comment_edits.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_comment_edits we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_comment_editsCountArgs>(\n      args?: Subset<T, discussionboard_comment_editsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_comment_editsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_comment_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_comment_editsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_comment_editsAggregateArgs>(args: Subset<T, Discussionboard_comment_editsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_comment_editsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_comment_edits.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_editsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_comment_editsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_comment_editsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_comment_editsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_comment_editsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_comment_editsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_comment_edits model\n   */\n  readonly fields: discussionboard_comment_editsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_comment_edits.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_comment_editsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    comment<T extends discussionboard_commentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_commentsDefaultArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    editor<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_comment_edits model\n   */\n  interface discussionboard_comment_editsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_comment_edits\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_comment_edits\", 'String'>\n    readonly editor_id: FieldRef<\"discussionboard_comment_edits\", 'String'>\n    readonly edit_summary: FieldRef<\"discussionboard_comment_edits\", 'String'>\n    readonly edited_at: FieldRef<\"discussionboard_comment_edits\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_comment_edits findUnique\n   */\n  export type discussionboard_comment_editsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_edits to fetch.\n     */\n    where: discussionboard_comment_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_edits findUniqueOrThrow\n   */\n  export type discussionboard_comment_editsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_edits to fetch.\n     */\n    where: discussionboard_comment_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_edits findFirst\n   */\n  export type discussionboard_comment_editsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_edits to fetch.\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_edits to fetch.\n     */\n    orderBy?: discussionboard_comment_editsOrderByWithRelationInput | discussionboard_comment_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comment_edits.\n     */\n    cursor?: discussionboard_comment_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_edits.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comment_edits.\n     */\n    distinct?: Discussionboard_comment_editsScalarFieldEnum | Discussionboard_comment_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_edits findFirstOrThrow\n   */\n  export type discussionboard_comment_editsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_edits to fetch.\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_edits to fetch.\n     */\n    orderBy?: discussionboard_comment_editsOrderByWithRelationInput | discussionboard_comment_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comment_edits.\n     */\n    cursor?: discussionboard_comment_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_edits.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comment_edits.\n     */\n    distinct?: Discussionboard_comment_editsScalarFieldEnum | Discussionboard_comment_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_edits findMany\n   */\n  export type discussionboard_comment_editsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_edits to fetch.\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_edits to fetch.\n     */\n    orderBy?: discussionboard_comment_editsOrderByWithRelationInput | discussionboard_comment_editsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_comment_edits.\n     */\n    cursor?: discussionboard_comment_editsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_edits from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_edits.\n     */\n    skip?: number\n    distinct?: Discussionboard_comment_editsScalarFieldEnum | Discussionboard_comment_editsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_edits create\n   */\n  export type discussionboard_comment_editsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_comment_edits.\n     */\n    data: XOR<discussionboard_comment_editsCreateInput, discussionboard_comment_editsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_comment_edits createMany\n   */\n  export type discussionboard_comment_editsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_comment_edits.\n     */\n    data: discussionboard_comment_editsCreateManyInput | discussionboard_comment_editsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_comment_edits createManyAndReturn\n   */\n  export type discussionboard_comment_editsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_comment_edits.\n     */\n    data: discussionboard_comment_editsCreateManyInput | discussionboard_comment_editsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comment_edits update\n   */\n  export type discussionboard_comment_editsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_comment_edits.\n     */\n    data: XOR<discussionboard_comment_editsUpdateInput, discussionboard_comment_editsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_comment_edits to update.\n     */\n    where: discussionboard_comment_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_edits updateMany\n   */\n  export type discussionboard_comment_editsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_comment_edits.\n     */\n    data: XOR<discussionboard_comment_editsUpdateManyMutationInput, discussionboard_comment_editsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comment_edits to update\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * Limit how many discussionboard_comment_edits to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comment_edits updateManyAndReturn\n   */\n  export type discussionboard_comment_editsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_comment_edits.\n     */\n    data: XOR<discussionboard_comment_editsUpdateManyMutationInput, discussionboard_comment_editsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comment_edits to update\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * Limit how many discussionboard_comment_edits to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comment_edits upsert\n   */\n  export type discussionboard_comment_editsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_comment_edits to update in case it exists.\n     */\n    where: discussionboard_comment_editsWhereUniqueInput\n    /**\n     * In case the discussionboard_comment_edits found by the `where` argument doesn't exist, create a new discussionboard_comment_edits with this data.\n     */\n    create: XOR<discussionboard_comment_editsCreateInput, discussionboard_comment_editsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_comment_edits was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_comment_editsUpdateInput, discussionboard_comment_editsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_comment_edits delete\n   */\n  export type discussionboard_comment_editsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_comment_edits to delete.\n     */\n    where: discussionboard_comment_editsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_edits deleteMany\n   */\n  export type discussionboard_comment_editsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comment_edits to delete\n     */\n    where?: discussionboard_comment_editsWhereInput\n    /**\n     * Limit how many discussionboard_comment_edits to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comment_edits without action\n   */\n  export type discussionboard_comment_editsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_edits\n     */\n    select?: discussionboard_comment_editsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_edits\n     */\n    omit?: discussionboard_comment_editsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_editsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_comment_views\n   */\n\n  export type AggregateDiscussionboard_comment_views = {\n    _count: Discussionboard_comment_viewsCountAggregateOutputType | null\n    _min: Discussionboard_comment_viewsMinAggregateOutputType | null\n    _max: Discussionboard_comment_viewsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_comment_viewsMinAggregateOutputType = {\n    id: string | null\n    comment_id: string | null\n    user_id: string | null\n    session_id: string | null\n    viewed_at: Date | null\n  }\n\n  export type Discussionboard_comment_viewsMaxAggregateOutputType = {\n    id: string | null\n    comment_id: string | null\n    user_id: string | null\n    session_id: string | null\n    viewed_at: Date | null\n  }\n\n  export type Discussionboard_comment_viewsCountAggregateOutputType = {\n    id: number\n    comment_id: number\n    user_id: number\n    session_id: number\n    viewed_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_comment_viewsMinAggregateInputType = {\n    id?: true\n    comment_id?: true\n    user_id?: true\n    session_id?: true\n    viewed_at?: true\n  }\n\n  export type Discussionboard_comment_viewsMaxAggregateInputType = {\n    id?: true\n    comment_id?: true\n    user_id?: true\n    session_id?: true\n    viewed_at?: true\n  }\n\n  export type Discussionboard_comment_viewsCountAggregateInputType = {\n    id?: true\n    comment_id?: true\n    user_id?: true\n    session_id?: true\n    viewed_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_comment_viewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comment_views to aggregate.\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_views to fetch.\n     */\n    orderBy?: discussionboard_comment_viewsOrderByWithRelationInput | discussionboard_comment_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_comment_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_views.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_comment_views\n    **/\n    _count?: true | Discussionboard_comment_viewsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_comment_viewsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_comment_viewsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_comment_viewsAggregateType<T extends Discussionboard_comment_viewsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_comment_views]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_comment_views[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_comment_views[P]>\n  }\n\n\n\n\n  export type discussionboard_comment_viewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_comment_viewsWhereInput\n    orderBy?: discussionboard_comment_viewsOrderByWithAggregationInput | discussionboard_comment_viewsOrderByWithAggregationInput[]\n    by: Discussionboard_comment_viewsScalarFieldEnum[] | Discussionboard_comment_viewsScalarFieldEnum\n    having?: discussionboard_comment_viewsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_comment_viewsCountAggregateInputType | true\n    _min?: Discussionboard_comment_viewsMinAggregateInputType\n    _max?: Discussionboard_comment_viewsMaxAggregateInputType\n  }\n\n  export type Discussionboard_comment_viewsGroupByOutputType = {\n    id: string\n    comment_id: string\n    user_id: string | null\n    session_id: string | null\n    viewed_at: Date\n    _count: Discussionboard_comment_viewsCountAggregateOutputType | null\n    _min: Discussionboard_comment_viewsMinAggregateOutputType | null\n    _max: Discussionboard_comment_viewsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_comment_viewsGroupByPayload<T extends discussionboard_comment_viewsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_comment_viewsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_comment_viewsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_comment_viewsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_comment_viewsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_comment_viewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_comment_views$userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_views\"]>\n\n  export type discussionboard_comment_viewsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_comment_views$userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_views\"]>\n\n  export type discussionboard_comment_viewsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_comment_views$userArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_comment_views\"]>\n\n  export type discussionboard_comment_viewsSelectScalar = {\n    id?: boolean\n    comment_id?: boolean\n    user_id?: boolean\n    session_id?: boolean\n    viewed_at?: boolean\n  }\n\n  export type discussionboard_comment_viewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"comment_id\" | \"user_id\" | \"session_id\" | \"viewed_at\", ExtArgs[\"result\"][\"discussionboard_comment_views\"]>\n  export type discussionboard_comment_viewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_comment_views$userArgs<ExtArgs>\n  }\n  export type discussionboard_comment_viewsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_comment_views$userArgs<ExtArgs>\n  }\n  export type discussionboard_comment_viewsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    comment?: boolean | discussionboard_commentsDefaultArgs<ExtArgs>\n    user?: boolean | discussionboard_comment_views$userArgs<ExtArgs>\n  }\n\n  export type $discussionboard_comment_viewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_comment_views\"\n    objects: {\n      comment: Prisma.$discussionboard_commentsPayload<ExtArgs>\n      user: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Viewed comment's {@link discussionboard_comments.id}\n       */\n      comment_id: string\n      /**\n       * User id of viewer (nullable/guest) {@link discussionboard_members.id}\n       */\n      user_id: string | null\n      /**\n       * Nullable session id to support anonymous/guest visitor analytics.\n       */\n      session_id: string | null\n      /**\n       * Timestamp of view event.\n       */\n      viewed_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_comment_views\"]>\n    composites: {}\n  }\n\n  type discussionboard_comment_viewsGetPayload<S extends boolean | null | undefined | discussionboard_comment_viewsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_comment_viewsPayload, S>\n\n  type discussionboard_comment_viewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_comment_viewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_comment_viewsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_comment_viewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_comment_views'], meta: { name: 'discussionboard_comment_views' } }\n    /**\n     * Find zero or one Discussionboard_comment_views that matches the filter.\n     * @param {discussionboard_comment_viewsFindUniqueArgs} args - Arguments to find a Discussionboard_comment_views\n     * @example\n     * // Get one Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_comment_viewsFindUniqueArgs>(args: SelectSubset<T, discussionboard_comment_viewsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_comment_views that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_comment_viewsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_comment_views\n     * @example\n     * // Get one Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_comment_viewsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_comment_viewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comment_views that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_viewsFindFirstArgs} args - Arguments to find a Discussionboard_comment_views\n     * @example\n     * // Get one Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_comment_viewsFindFirstArgs>(args?: SelectSubset<T, discussionboard_comment_viewsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_comment_views that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_viewsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_comment_views\n     * @example\n     * // Get one Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_comment_viewsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_comment_viewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_comment_views that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_viewsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findMany()\n     * \n     * // Get first 10 Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_comment_viewsWithIdOnly = await prisma.discussionboard_comment_views.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_comment_viewsFindManyArgs>(args?: SelectSubset<T, discussionboard_comment_viewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_comment_views.\n     * @param {discussionboard_comment_viewsCreateArgs} args - Arguments to create a Discussionboard_comment_views.\n     * @example\n     * // Create one Discussionboard_comment_views\n     * const Discussionboard_comment_views = await prisma.discussionboard_comment_views.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_comment_views\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_comment_viewsCreateArgs>(args: SelectSubset<T, discussionboard_comment_viewsCreateArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_comment_views.\n     * @param {discussionboard_comment_viewsCreateManyArgs} args - Arguments to create many Discussionboard_comment_views.\n     * @example\n     * // Create many Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_comment_viewsCreateManyArgs>(args?: SelectSubset<T, discussionboard_comment_viewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_comment_views and returns the data saved in the database.\n     * @param {discussionboard_comment_viewsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_comment_views.\n     * @example\n     * // Create many Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_comment_views and only return the `id`\n     * const discussionboard_comment_viewsWithIdOnly = await prisma.discussionboard_comment_views.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_comment_viewsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_comment_viewsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_comment_views.\n     * @param {discussionboard_comment_viewsDeleteArgs} args - Arguments to delete one Discussionboard_comment_views.\n     * @example\n     * // Delete one Discussionboard_comment_views\n     * const Discussionboard_comment_views = await prisma.discussionboard_comment_views.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_comment_views\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_comment_viewsDeleteArgs>(args: SelectSubset<T, discussionboard_comment_viewsDeleteArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_comment_views.\n     * @param {discussionboard_comment_viewsUpdateArgs} args - Arguments to update one Discussionboard_comment_views.\n     * @example\n     * // Update one Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_comment_viewsUpdateArgs>(args: SelectSubset<T, discussionboard_comment_viewsUpdateArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_comment_views.\n     * @param {discussionboard_comment_viewsDeleteManyArgs} args - Arguments to filter Discussionboard_comment_views to delete.\n     * @example\n     * // Delete a few Discussionboard_comment_views\n     * const { count } = await prisma.discussionboard_comment_views.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_comment_viewsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_comment_viewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comment_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_viewsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_comment_viewsUpdateManyArgs>(args: SelectSubset<T, discussionboard_comment_viewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_comment_views and returns the data updated in the database.\n     * @param {discussionboard_comment_viewsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_comment_views.\n     * @example\n     * // Update many Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_comment_views and only return the `id`\n     * const discussionboard_comment_viewsWithIdOnly = await prisma.discussionboard_comment_views.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_comment_viewsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_comment_viewsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_comment_views.\n     * @param {discussionboard_comment_viewsUpsertArgs} args - Arguments to update or create a Discussionboard_comment_views.\n     * @example\n     * // Update or create a Discussionboard_comment_views\n     * const discussionboard_comment_views = await prisma.discussionboard_comment_views.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_comment_views\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_comment_views we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_comment_viewsUpsertArgs>(args: SelectSubset<T, discussionboard_comment_viewsUpsertArgs<ExtArgs>>): Prisma__discussionboard_comment_viewsClient<$Result.GetResult<Prisma.$discussionboard_comment_viewsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_comment_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_viewsCountArgs} args - Arguments to filter Discussionboard_comment_views to count.\n     * @example\n     * // Count the number of Discussionboard_comment_views\n     * const count = await prisma.discussionboard_comment_views.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_comment_views we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_comment_viewsCountArgs>(\n      args?: Subset<T, discussionboard_comment_viewsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_comment_viewsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_comment_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_comment_viewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_comment_viewsAggregateArgs>(args: Subset<T, Discussionboard_comment_viewsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_comment_viewsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_comment_views.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_comment_viewsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_comment_viewsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_comment_viewsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_comment_viewsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_comment_viewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_comment_viewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_comment_views model\n   */\n  readonly fields: discussionboard_comment_viewsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_comment_views.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_comment_viewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    comment<T extends discussionboard_commentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_commentsDefaultArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    user<T extends discussionboard_comment_views$userArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_comment_views$userArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_comment_views model\n   */\n  interface discussionboard_comment_viewsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_comment_views\", 'String'>\n    readonly comment_id: FieldRef<\"discussionboard_comment_views\", 'String'>\n    readonly user_id: FieldRef<\"discussionboard_comment_views\", 'String'>\n    readonly session_id: FieldRef<\"discussionboard_comment_views\", 'String'>\n    readonly viewed_at: FieldRef<\"discussionboard_comment_views\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_comment_views findUnique\n   */\n  export type discussionboard_comment_viewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_views to fetch.\n     */\n    where: discussionboard_comment_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_views findUniqueOrThrow\n   */\n  export type discussionboard_comment_viewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_views to fetch.\n     */\n    where: discussionboard_comment_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_views findFirst\n   */\n  export type discussionboard_comment_viewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_views to fetch.\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_views to fetch.\n     */\n    orderBy?: discussionboard_comment_viewsOrderByWithRelationInput | discussionboard_comment_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comment_views.\n     */\n    cursor?: discussionboard_comment_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_views.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comment_views.\n     */\n    distinct?: Discussionboard_comment_viewsScalarFieldEnum | Discussionboard_comment_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_views findFirstOrThrow\n   */\n  export type discussionboard_comment_viewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_views to fetch.\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_views to fetch.\n     */\n    orderBy?: discussionboard_comment_viewsOrderByWithRelationInput | discussionboard_comment_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_comment_views.\n     */\n    cursor?: discussionboard_comment_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_views.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_comment_views.\n     */\n    distinct?: Discussionboard_comment_viewsScalarFieldEnum | Discussionboard_comment_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_views findMany\n   */\n  export type discussionboard_comment_viewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_comment_views to fetch.\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_comment_views to fetch.\n     */\n    orderBy?: discussionboard_comment_viewsOrderByWithRelationInput | discussionboard_comment_viewsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_comment_views.\n     */\n    cursor?: discussionboard_comment_viewsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_comment_views from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_comment_views.\n     */\n    skip?: number\n    distinct?: Discussionboard_comment_viewsScalarFieldEnum | Discussionboard_comment_viewsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_comment_views create\n   */\n  export type discussionboard_comment_viewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_comment_views.\n     */\n    data: XOR<discussionboard_comment_viewsCreateInput, discussionboard_comment_viewsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_comment_views createMany\n   */\n  export type discussionboard_comment_viewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_comment_views.\n     */\n    data: discussionboard_comment_viewsCreateManyInput | discussionboard_comment_viewsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_comment_views createManyAndReturn\n   */\n  export type discussionboard_comment_viewsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_comment_views.\n     */\n    data: discussionboard_comment_viewsCreateManyInput | discussionboard_comment_viewsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comment_views update\n   */\n  export type discussionboard_comment_viewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_comment_views.\n     */\n    data: XOR<discussionboard_comment_viewsUpdateInput, discussionboard_comment_viewsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_comment_views to update.\n     */\n    where: discussionboard_comment_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_views updateMany\n   */\n  export type discussionboard_comment_viewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_comment_views.\n     */\n    data: XOR<discussionboard_comment_viewsUpdateManyMutationInput, discussionboard_comment_viewsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comment_views to update\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * Limit how many discussionboard_comment_views to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comment_views updateManyAndReturn\n   */\n  export type discussionboard_comment_viewsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_comment_views.\n     */\n    data: XOR<discussionboard_comment_viewsUpdateManyMutationInput, discussionboard_comment_viewsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_comment_views to update\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * Limit how many discussionboard_comment_views to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_comment_views upsert\n   */\n  export type discussionboard_comment_viewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_comment_views to update in case it exists.\n     */\n    where: discussionboard_comment_viewsWhereUniqueInput\n    /**\n     * In case the discussionboard_comment_views found by the `where` argument doesn't exist, create a new discussionboard_comment_views with this data.\n     */\n    create: XOR<discussionboard_comment_viewsCreateInput, discussionboard_comment_viewsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_comment_views was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_comment_viewsUpdateInput, discussionboard_comment_viewsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_comment_views delete\n   */\n  export type discussionboard_comment_viewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_comment_views to delete.\n     */\n    where: discussionboard_comment_viewsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_comment_views deleteMany\n   */\n  export type discussionboard_comment_viewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_comment_views to delete\n     */\n    where?: discussionboard_comment_viewsWhereInput\n    /**\n     * Limit how many discussionboard_comment_views to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_comment_views.user\n   */\n  export type discussionboard_comment_views$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_comment_views without action\n   */\n  export type discussionboard_comment_viewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comment_views\n     */\n    select?: discussionboard_comment_viewsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comment_views\n     */\n    omit?: discussionboard_comment_viewsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_comment_viewsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_reports\n   */\n\n  export type AggregateDiscussionboard_reports = {\n    _count: Discussionboard_reportsCountAggregateOutputType | null\n    _min: Discussionboard_reportsMinAggregateOutputType | null\n    _max: Discussionboard_reportsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_reportsMinAggregateOutputType = {\n    id: string | null\n    reporting_member_id: string | null\n    target_post_id: string | null\n    target_comment_id: string | null\n    reason: string | null\n    status: string | null\n    created_at: Date | null\n    reviewed_at: Date | null\n    resolved_at: Date | null\n    moderation_note: string | null\n  }\n\n  export type Discussionboard_reportsMaxAggregateOutputType = {\n    id: string | null\n    reporting_member_id: string | null\n    target_post_id: string | null\n    target_comment_id: string | null\n    reason: string | null\n    status: string | null\n    created_at: Date | null\n    reviewed_at: Date | null\n    resolved_at: Date | null\n    moderation_note: string | null\n  }\n\n  export type Discussionboard_reportsCountAggregateOutputType = {\n    id: number\n    reporting_member_id: number\n    target_post_id: number\n    target_comment_id: number\n    reason: number\n    status: number\n    created_at: number\n    reviewed_at: number\n    resolved_at: number\n    moderation_note: number\n    _all: number\n  }\n\n\n  export type Discussionboard_reportsMinAggregateInputType = {\n    id?: true\n    reporting_member_id?: true\n    target_post_id?: true\n    target_comment_id?: true\n    reason?: true\n    status?: true\n    created_at?: true\n    reviewed_at?: true\n    resolved_at?: true\n    moderation_note?: true\n  }\n\n  export type Discussionboard_reportsMaxAggregateInputType = {\n    id?: true\n    reporting_member_id?: true\n    target_post_id?: true\n    target_comment_id?: true\n    reason?: true\n    status?: true\n    created_at?: true\n    reviewed_at?: true\n    resolved_at?: true\n    moderation_note?: true\n  }\n\n  export type Discussionboard_reportsCountAggregateInputType = {\n    id?: true\n    reporting_member_id?: true\n    target_post_id?: true\n    target_comment_id?: true\n    reason?: true\n    status?: true\n    created_at?: true\n    reviewed_at?: true\n    resolved_at?: true\n    moderation_note?: true\n    _all?: true\n  }\n\n  export type Discussionboard_reportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_reports to aggregate.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_reports\n    **/\n    _count?: true | Discussionboard_reportsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_reportsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_reportsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_reportsAggregateType<T extends Discussionboard_reportsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_reports]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_reports[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_reports[P]>\n  }\n\n\n\n\n  export type discussionboard_reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_reportsWhereInput\n    orderBy?: discussionboard_reportsOrderByWithAggregationInput | discussionboard_reportsOrderByWithAggregationInput[]\n    by: Discussionboard_reportsScalarFieldEnum[] | Discussionboard_reportsScalarFieldEnum\n    having?: discussionboard_reportsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_reportsCountAggregateInputType | true\n    _min?: Discussionboard_reportsMinAggregateInputType\n    _max?: Discussionboard_reportsMaxAggregateInputType\n  }\n\n  export type Discussionboard_reportsGroupByOutputType = {\n    id: string\n    reporting_member_id: string\n    target_post_id: string | null\n    target_comment_id: string | null\n    reason: string\n    status: string\n    created_at: Date\n    reviewed_at: Date | null\n    resolved_at: Date | null\n    moderation_note: string | null\n    _count: Discussionboard_reportsCountAggregateOutputType | null\n    _min: Discussionboard_reportsMinAggregateOutputType | null\n    _max: Discussionboard_reportsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_reportsGroupByPayload<T extends discussionboard_reportsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_reportsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_reportsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_reportsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_reportsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reporting_member_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    reason?: boolean\n    status?: boolean\n    created_at?: boolean\n    reviewed_at?: boolean\n    resolved_at?: boolean\n    moderation_note?: boolean\n    fk_reports_reporting_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    fk_reports_target_post?: boolean | discussionboard_reports$fk_reports_target_postArgs<ExtArgs>\n    fk_reports_target_comment?: boolean | discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_reports$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_warnings?: boolean | discussionboard_reports$discussionboard_warningsArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_reports$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_reportsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n\n  export type discussionboard_reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reporting_member_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    reason?: boolean\n    status?: boolean\n    created_at?: boolean\n    reviewed_at?: boolean\n    resolved_at?: boolean\n    moderation_note?: boolean\n    fk_reports_reporting_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    fk_reports_target_post?: boolean | discussionboard_reports$fk_reports_target_postArgs<ExtArgs>\n    fk_reports_target_comment?: boolean | discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n\n  export type discussionboard_reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    reporting_member_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    reason?: boolean\n    status?: boolean\n    created_at?: boolean\n    reviewed_at?: boolean\n    resolved_at?: boolean\n    moderation_note?: boolean\n    fk_reports_reporting_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    fk_reports_target_post?: boolean | discussionboard_reports$fk_reports_target_postArgs<ExtArgs>\n    fk_reports_target_comment?: boolean | discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n\n  export type discussionboard_reportsSelectScalar = {\n    id?: boolean\n    reporting_member_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    reason?: boolean\n    status?: boolean\n    created_at?: boolean\n    reviewed_at?: boolean\n    resolved_at?: boolean\n    moderation_note?: boolean\n  }\n\n  export type discussionboard_reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"reporting_member_id\" | \"target_post_id\" | \"target_comment_id\" | \"reason\" | \"status\" | \"created_at\" | \"reviewed_at\" | \"resolved_at\" | \"moderation_note\", ExtArgs[\"result\"][\"discussionboard_reports\"]>\n  export type discussionboard_reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_reports_reporting_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    fk_reports_target_post?: boolean | discussionboard_reports$fk_reports_target_postArgs<ExtArgs>\n    fk_reports_target_comment?: boolean | discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>\n    discussionboard_moderation_actions?: boolean | discussionboard_reports$discussionboard_moderation_actionsArgs<ExtArgs>\n    discussionboard_warnings?: boolean | discussionboard_reports$discussionboard_warningsArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_reports$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_reportsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_reports_reporting_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    fk_reports_target_post?: boolean | discussionboard_reports$fk_reports_target_postArgs<ExtArgs>\n    fk_reports_target_comment?: boolean | discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>\n  }\n  export type discussionboard_reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_reports_reporting_member?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n    fk_reports_target_post?: boolean | discussionboard_reports$fk_reports_target_postArgs<ExtArgs>\n    fk_reports_target_comment?: boolean | discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_reports\"\n    objects: {\n      fk_reports_reporting_member: Prisma.$discussionboard_membersPayload<ExtArgs>\n      fk_reports_target_post: Prisma.$discussionboard_postsPayload<ExtArgs> | null\n      fk_reports_target_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      discussionboard_moderation_actions: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>[]\n      discussionboard_warnings: Prisma.$discussionboard_warningsPayload<ExtArgs>[]\n      discussionboard_audit_logs: Prisma.$discussionboard_audit_logsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for each report.\n       */\n      id: string\n      /**\n       * Referencing the member who filed the report: {@link discussionboard_members.id}.\n       */\n      reporting_member_id: string\n      /**\n       * Referenced post if report concerns a post: {@link discussionboard_posts.id}. Nullable if report is for a comment.\n       */\n      target_post_id: string | null\n      /**\n       * Referenced comment if report concerns a comment: {@link discussionboard_comments.id}. Nullable if report is for a post.\n       */\n      target_comment_id: string | null\n      /**\n       * Reason for reporting - Implements the 'report reason' requirement. \n       * Describes why the member has flagged the content. Ensures normalization by storing descriptive report reasons. For example, 'hate speech', 'spam', 'off-topic'.\n       */\n      reason: string\n      /**\n       * Status of the report (e.g., pending, reviewed, resolved, rejected). Implements 'moderation workflow' requirements. Only controlled values allowed through app logic.\n       */\n      status: string\n      /**\n       * Timestamp of when the report was filed. Supports moderation audit trails and reporting flow. Always required.\n       */\n      created_at: Date\n      /**\n       * Timestamp of when moderators reviewed the report. Nullable until review occurs.\n       */\n      reviewed_at: Date | null\n      /**\n       * Timestamp when action was taken or report was closed. Nullable until resolved.\n       */\n      resolved_at: Date | null\n      /**\n       * Moderator/admin remarks/comments for this report. Implements 'reviewer comment' requirement. Nullable if moderators did not leave notes.\n       */\n      moderation_note: string | null\n    }, ExtArgs[\"result\"][\"discussionboard_reports\"]>\n    composites: {}\n  }\n\n  type discussionboard_reportsGetPayload<S extends boolean | null | undefined | discussionboard_reportsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_reportsPayload, S>\n\n  type discussionboard_reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_reportsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_reports'], meta: { name: 'discussionboard_reports' } }\n    /**\n     * Find zero or one Discussionboard_reports that matches the filter.\n     * @param {discussionboard_reportsFindUniqueArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_reportsFindUniqueArgs>(args: SelectSubset<T, discussionboard_reportsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_reports that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_reportsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsFindFirstArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_reportsFindFirstArgs>(args?: SelectSubset<T, discussionboard_reportsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_reports that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_reports\n     * @example\n     * // Get one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_reports that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findMany()\n     * \n     * // Get first 10 Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_reportsWithIdOnly = await prisma.discussionboard_reports.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_reportsFindManyArgs>(args?: SelectSubset<T, discussionboard_reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_reports.\n     * @param {discussionboard_reportsCreateArgs} args - Arguments to create a Discussionboard_reports.\n     * @example\n     * // Create one Discussionboard_reports\n     * const Discussionboard_reports = await prisma.discussionboard_reports.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_reports\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_reportsCreateArgs>(args: SelectSubset<T, discussionboard_reportsCreateArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_reports.\n     * @param {discussionboard_reportsCreateManyArgs} args - Arguments to create many Discussionboard_reports.\n     * @example\n     * // Create many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_reportsCreateManyArgs>(args?: SelectSubset<T, discussionboard_reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_reports and returns the data saved in the database.\n     * @param {discussionboard_reportsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_reports.\n     * @example\n     * // Create many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_reports and only return the `id`\n     * const discussionboard_reportsWithIdOnly = await prisma.discussionboard_reports.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_reports.\n     * @param {discussionboard_reportsDeleteArgs} args - Arguments to delete one Discussionboard_reports.\n     * @example\n     * // Delete one Discussionboard_reports\n     * const Discussionboard_reports = await prisma.discussionboard_reports.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_reports\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_reportsDeleteArgs>(args: SelectSubset<T, discussionboard_reportsDeleteArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_reports.\n     * @param {discussionboard_reportsUpdateArgs} args - Arguments to update one Discussionboard_reports.\n     * @example\n     * // Update one Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_reportsUpdateArgs>(args: SelectSubset<T, discussionboard_reportsUpdateArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_reports.\n     * @param {discussionboard_reportsDeleteManyArgs} args - Arguments to filter Discussionboard_reports to delete.\n     * @example\n     * // Delete a few Discussionboard_reports\n     * const { count } = await prisma.discussionboard_reports.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_reportsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_reportsUpdateManyArgs>(args: SelectSubset<T, discussionboard_reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_reports and returns the data updated in the database.\n     * @param {discussionboard_reportsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_reports.\n     * @example\n     * // Update many Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_reports and only return the `id`\n     * const discussionboard_reportsWithIdOnly = await prisma.discussionboard_reports.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_reports.\n     * @param {discussionboard_reportsUpsertArgs} args - Arguments to update or create a Discussionboard_reports.\n     * @example\n     * // Update or create a Discussionboard_reports\n     * const discussionboard_reports = await prisma.discussionboard_reports.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_reports\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_reports we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_reportsUpsertArgs>(args: SelectSubset<T, discussionboard_reportsUpsertArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsCountArgs} args - Arguments to filter Discussionboard_reports to count.\n     * @example\n     * // Count the number of Discussionboard_reports\n     * const count = await prisma.discussionboard_reports.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_reports we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_reportsCountArgs>(\n      args?: Subset<T, discussionboard_reportsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_reportsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_reportsAggregateArgs>(args: Subset<T, Discussionboard_reportsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_reportsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_reports.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_reportsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_reportsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_reportsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_reportsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_reports model\n   */\n  readonly fields: discussionboard_reportsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_reports.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_reports_reporting_member<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    fk_reports_target_post<T extends discussionboard_reports$fk_reports_target_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$fk_reports_target_postArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_reports_target_comment<T extends discussionboard_reports$fk_reports_target_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$fk_reports_target_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_moderation_actions<T extends discussionboard_reports$discussionboard_moderation_actionsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$discussionboard_moderation_actionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_warnings<T extends discussionboard_reports$discussionboard_warningsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$discussionboard_warningsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    discussionboard_audit_logs<T extends discussionboard_reports$discussionboard_audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_reports$discussionboard_audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_reports model\n   */\n  interface discussionboard_reportsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly reporting_member_id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly target_post_id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly target_comment_id: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly reason: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly status: FieldRef<\"discussionboard_reports\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_reports\", 'DateTime'>\n    readonly reviewed_at: FieldRef<\"discussionboard_reports\", 'DateTime'>\n    readonly resolved_at: FieldRef<\"discussionboard_reports\", 'DateTime'>\n    readonly moderation_note: FieldRef<\"discussionboard_reports\", 'String'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_reports findUnique\n   */\n  export type discussionboard_reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports findUniqueOrThrow\n   */\n  export type discussionboard_reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports findFirst\n   */\n  export type discussionboard_reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_reports.\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_reports.\n     */\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports findFirstOrThrow\n   */\n  export type discussionboard_reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_reports.\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_reports.\n     */\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports findMany\n   */\n  export type discussionboard_reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_reports to fetch.\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_reports to fetch.\n     */\n    orderBy?: discussionboard_reportsOrderByWithRelationInput | discussionboard_reportsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_reports.\n     */\n    cursor?: discussionboard_reportsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_reports from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_reports.\n     */\n    skip?: number\n    distinct?: Discussionboard_reportsScalarFieldEnum | Discussionboard_reportsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports create\n   */\n  export type discussionboard_reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsCreateInput, discussionboard_reportsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_reports createMany\n   */\n  export type discussionboard_reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_reports.\n     */\n    data: discussionboard_reportsCreateManyInput | discussionboard_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_reports createManyAndReturn\n   */\n  export type discussionboard_reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_reports.\n     */\n    data: discussionboard_reportsCreateManyInput | discussionboard_reportsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_reports update\n   */\n  export type discussionboard_reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsUpdateInput, discussionboard_reportsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_reports to update.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports updateMany\n   */\n  export type discussionboard_reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_reports to update\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * Limit how many discussionboard_reports to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_reports updateManyAndReturn\n   */\n  export type discussionboard_reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_reports.\n     */\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_reports to update\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * Limit how many discussionboard_reports to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_reports upsert\n   */\n  export type discussionboard_reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_reports to update in case it exists.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n    /**\n     * In case the discussionboard_reports found by the `where` argument doesn't exist, create a new discussionboard_reports with this data.\n     */\n    create: XOR<discussionboard_reportsCreateInput, discussionboard_reportsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_reports was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_reportsUpdateInput, discussionboard_reportsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_reports delete\n   */\n  export type discussionboard_reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_reports to delete.\n     */\n    where: discussionboard_reportsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_reports deleteMany\n   */\n  export type discussionboard_reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_reports to delete\n     */\n    where?: discussionboard_reportsWhereInput\n    /**\n     * Limit how many discussionboard_reports to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_reports.fk_reports_target_post\n   */\n  export type discussionboard_reports$fk_reports_target_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    where?: discussionboard_postsWhereInput\n  }\n\n  /**\n   * discussionboard_reports.fk_reports_target_comment\n   */\n  export type discussionboard_reports$fk_reports_target_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_reports.discussionboard_moderation_actions\n   */\n  export type discussionboard_reports$discussionboard_moderation_actionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports.discussionboard_warnings\n   */\n  export type discussionboard_reports$discussionboard_warningsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    cursor?: discussionboard_warningsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports.discussionboard_audit_logs\n   */\n  export type discussionboard_reports$discussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    where?: discussionboard_audit_logsWhereInput\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_reports without action\n   */\n  export type discussionboard_reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_moderation_actions\n   */\n\n  export type AggregateDiscussionboard_moderation_actions = {\n    _count: Discussionboard_moderation_actionsCountAggregateOutputType | null\n    _min: Discussionboard_moderation_actionsMinAggregateOutputType | null\n    _max: Discussionboard_moderation_actionsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_moderation_actionsMinAggregateOutputType = {\n    id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    actor_member_id: string | null\n    related_report_id: string | null\n    target_post_id: string | null\n    target_comment_id: string | null\n    action_type: string | null\n    action_reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_moderation_actionsMaxAggregateOutputType = {\n    id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    actor_member_id: string | null\n    related_report_id: string | null\n    target_post_id: string | null\n    target_comment_id: string | null\n    action_type: string | null\n    action_reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_moderation_actionsCountAggregateOutputType = {\n    id: number\n    actor_admin_id: number\n    actor_moderator_id: number\n    actor_member_id: number\n    related_report_id: number\n    target_post_id: number\n    target_comment_id: number\n    action_type: number\n    action_reason: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_moderation_actionsMinAggregateInputType = {\n    id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    actor_member_id?: true\n    related_report_id?: true\n    target_post_id?: true\n    target_comment_id?: true\n    action_type?: true\n    action_reason?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_moderation_actionsMaxAggregateInputType = {\n    id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    actor_member_id?: true\n    related_report_id?: true\n    target_post_id?: true\n    target_comment_id?: true\n    action_type?: true\n    action_reason?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_moderation_actionsCountAggregateInputType = {\n    id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    actor_member_id?: true\n    related_report_id?: true\n    target_post_id?: true\n    target_comment_id?: true\n    action_type?: true\n    action_reason?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_moderation_actionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderation_actions to aggregate.\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_moderation_actions\n    **/\n    _count?: true | Discussionboard_moderation_actionsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_moderation_actionsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_moderation_actionsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_moderation_actionsAggregateType<T extends Discussionboard_moderation_actionsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_moderation_actions]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_moderation_actions[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_moderation_actions[P]>\n  }\n\n\n\n\n  export type discussionboard_moderation_actionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_moderation_actionsWhereInput\n    orderBy?: discussionboard_moderation_actionsOrderByWithAggregationInput | discussionboard_moderation_actionsOrderByWithAggregationInput[]\n    by: Discussionboard_moderation_actionsScalarFieldEnum[] | Discussionboard_moderation_actionsScalarFieldEnum\n    having?: discussionboard_moderation_actionsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_moderation_actionsCountAggregateInputType | true\n    _min?: Discussionboard_moderation_actionsMinAggregateInputType\n    _max?: Discussionboard_moderation_actionsMaxAggregateInputType\n  }\n\n  export type Discussionboard_moderation_actionsGroupByOutputType = {\n    id: string\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    actor_member_id: string | null\n    related_report_id: string | null\n    target_post_id: string | null\n    target_comment_id: string | null\n    action_type: string\n    action_reason: string | null\n    created_at: Date\n    _count: Discussionboard_moderation_actionsCountAggregateOutputType | null\n    _min: Discussionboard_moderation_actionsMinAggregateOutputType | null\n    _max: Discussionboard_moderation_actionsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_moderation_actionsGroupByPayload<T extends discussionboard_moderation_actionsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_moderation_actionsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_moderation_actionsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_moderation_actionsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_moderation_actionsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_moderation_actionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    action_type?: boolean\n    action_reason?: boolean\n    created_at?: boolean\n    fk_moderationactions_actor_admin?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>\n    fk_moderationactions_actor_moderator?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>\n    fk_moderationactions_actor_member?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>\n    fk_moderationactions_related_report?: boolean | discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>\n    fk_moderationactions_target_post?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>\n    fk_moderationactions_target_comment?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_moderation_actions$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_moderation_actionsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderation_actions\"]>\n\n  export type discussionboard_moderation_actionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    action_type?: boolean\n    action_reason?: boolean\n    created_at?: boolean\n    fk_moderationactions_actor_admin?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>\n    fk_moderationactions_actor_moderator?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>\n    fk_moderationactions_actor_member?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>\n    fk_moderationactions_related_report?: boolean | discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>\n    fk_moderationactions_target_post?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>\n    fk_moderationactions_target_comment?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderation_actions\"]>\n\n  export type discussionboard_moderation_actionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    action_type?: boolean\n    action_reason?: boolean\n    created_at?: boolean\n    fk_moderationactions_actor_admin?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>\n    fk_moderationactions_actor_moderator?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>\n    fk_moderationactions_actor_member?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>\n    fk_moderationactions_related_report?: boolean | discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>\n    fk_moderationactions_target_post?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>\n    fk_moderationactions_target_comment?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_moderation_actions\"]>\n\n  export type discussionboard_moderation_actionsSelectScalar = {\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    target_post_id?: boolean\n    target_comment_id?: boolean\n    action_type?: boolean\n    action_reason?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_moderation_actionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_admin_id\" | \"actor_moderator_id\" | \"actor_member_id\" | \"related_report_id\" | \"target_post_id\" | \"target_comment_id\" | \"action_type\" | \"action_reason\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_moderation_actions\"]>\n  export type discussionboard_moderation_actionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_moderationactions_actor_admin?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>\n    fk_moderationactions_actor_moderator?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>\n    fk_moderationactions_actor_member?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>\n    fk_moderationactions_related_report?: boolean | discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>\n    fk_moderationactions_target_post?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>\n    fk_moderationactions_target_comment?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>\n    discussionboard_audit_logs?: boolean | discussionboard_moderation_actions$discussionboard_audit_logsArgs<ExtArgs>\n    _count?: boolean | Discussionboard_moderation_actionsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_moderation_actionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_moderationactions_actor_admin?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>\n    fk_moderationactions_actor_moderator?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>\n    fk_moderationactions_actor_member?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>\n    fk_moderationactions_related_report?: boolean | discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>\n    fk_moderationactions_target_post?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>\n    fk_moderationactions_target_comment?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>\n  }\n  export type discussionboard_moderation_actionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_moderationactions_actor_admin?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>\n    fk_moderationactions_actor_moderator?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>\n    fk_moderationactions_actor_member?: boolean | discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>\n    fk_moderationactions_related_report?: boolean | discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>\n    fk_moderationactions_target_post?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>\n    fk_moderationactions_target_comment?: boolean | discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>\n  }\n\n  export type $discussionboard_moderation_actionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_moderation_actions\"\n    objects: {\n      fk_moderationactions_actor_admin: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      fk_moderationactions_actor_moderator: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n      fk_moderationactions_actor_member: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n      fk_moderationactions_related_report: Prisma.$discussionboard_reportsPayload<ExtArgs> | null\n      fk_moderationactions_target_post: Prisma.$discussionboard_postsPayload<ExtArgs> | null\n      fk_moderationactions_target_comment: Prisma.$discussionboard_commentsPayload<ExtArgs> | null\n      discussionboard_audit_logs: Prisma.$discussionboard_audit_logsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for moderation action record.\n       */\n      id: string\n      /**\n       * Actor if admin performed the action: {@link discussionboard_admins.id}. Nullable if actor is moderator/member.\n       */\n      actor_admin_id: string | null\n      /**\n       * Actor if moderator performed the action: {@link discussionboard_moderators.id}. Nullable if actor is admin/member.\n       */\n      actor_moderator_id: string | null\n      /**\n       * Actor if member performed the action: {@link discussionboard_members.id}. Nullable if actor is admin/moderator. For transparency, in case members can self-resolve or retract reports.\n       */\n      actor_member_id: string | null\n      /**\n       * Linked report this action addresses: {@link discussionboard_reports.id}. Nullable if not directly linked.\n       */\n      related_report_id: string | null\n      /**\n       * Target post acted upon (if applicable): {@link discussionboard_posts.id}.\n       */\n      target_post_id: string | null\n      /**\n       * Target comment acted upon (if applicable): {@link discussionboard_comments.id}.\n       */\n      target_comment_id: string | null\n      /**\n       * Type of moderation action (e.g. warn, ban, content removal, close report).\n       * Implements moderation workflow requirements. Only controlled values allowed.\n       */\n      action_type: string\n      /**\n       * Details or reason for the moderation action. Implements 'audit and rationale' requirements. Example: 'Repeated violations', 'Spam content'.\n       */\n      action_reason: string | null\n      /**\n       * Timestamp of when the moderation action was performed. Supports audit trails and workflow sequencing. Required for every action.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_moderation_actions\"]>\n    composites: {}\n  }\n\n  type discussionboard_moderation_actionsGetPayload<S extends boolean | null | undefined | discussionboard_moderation_actionsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload, S>\n\n  type discussionboard_moderation_actionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_moderation_actionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_moderation_actionsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_moderation_actionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_moderation_actions'], meta: { name: 'discussionboard_moderation_actions' } }\n    /**\n     * Find zero or one Discussionboard_moderation_actions that matches the filter.\n     * @param {discussionboard_moderation_actionsFindUniqueArgs} args - Arguments to find a Discussionboard_moderation_actions\n     * @example\n     * // Get one Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_moderation_actionsFindUniqueArgs>(args: SelectSubset<T, discussionboard_moderation_actionsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_moderation_actions that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_moderation_actionsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_moderation_actions\n     * @example\n     * // Get one Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_moderation_actionsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_moderation_actionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderation_actions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionsFindFirstArgs} args - Arguments to find a Discussionboard_moderation_actions\n     * @example\n     * // Get one Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_moderation_actionsFindFirstArgs>(args?: SelectSubset<T, discussionboard_moderation_actionsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_moderation_actions that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_moderation_actions\n     * @example\n     * // Get one Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_moderation_actionsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_moderation_actionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_moderation_actions that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findMany()\n     * \n     * // Get first 10 Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_moderation_actionsWithIdOnly = await prisma.discussionboard_moderation_actions.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_moderation_actionsFindManyArgs>(args?: SelectSubset<T, discussionboard_moderation_actionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionsCreateArgs} args - Arguments to create a Discussionboard_moderation_actions.\n     * @example\n     * // Create one Discussionboard_moderation_actions\n     * const Discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_moderation_actions\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_moderation_actionsCreateArgs>(args: SelectSubset<T, discussionboard_moderation_actionsCreateArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionsCreateManyArgs} args - Arguments to create many Discussionboard_moderation_actions.\n     * @example\n     * // Create many Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_moderation_actionsCreateManyArgs>(args?: SelectSubset<T, discussionboard_moderation_actionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_moderation_actions and returns the data saved in the database.\n     * @param {discussionboard_moderation_actionsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_moderation_actions.\n     * @example\n     * // Create many Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_moderation_actions and only return the `id`\n     * const discussionboard_moderation_actionsWithIdOnly = await prisma.discussionboard_moderation_actions.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_moderation_actionsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_moderation_actionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionsDeleteArgs} args - Arguments to delete one Discussionboard_moderation_actions.\n     * @example\n     * // Delete one Discussionboard_moderation_actions\n     * const Discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_moderation_actions\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_moderation_actionsDeleteArgs>(args: SelectSubset<T, discussionboard_moderation_actionsDeleteArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionsUpdateArgs} args - Arguments to update one Discussionboard_moderation_actions.\n     * @example\n     * // Update one Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_moderation_actionsUpdateArgs>(args: SelectSubset<T, discussionboard_moderation_actionsUpdateArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionsDeleteManyArgs} args - Arguments to filter Discussionboard_moderation_actions to delete.\n     * @example\n     * // Delete a few Discussionboard_moderation_actions\n     * const { count } = await prisma.discussionboard_moderation_actions.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_moderation_actionsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_moderation_actionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderation_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_moderation_actionsUpdateManyArgs>(args: SelectSubset<T, discussionboard_moderation_actionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_moderation_actions and returns the data updated in the database.\n     * @param {discussionboard_moderation_actionsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_moderation_actions.\n     * @example\n     * // Update many Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_moderation_actions and only return the `id`\n     * const discussionboard_moderation_actionsWithIdOnly = await prisma.discussionboard_moderation_actions.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_moderation_actionsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_moderation_actionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_moderation_actions.\n     * @param {discussionboard_moderation_actionsUpsertArgs} args - Arguments to update or create a Discussionboard_moderation_actions.\n     * @example\n     * // Update or create a Discussionboard_moderation_actions\n     * const discussionboard_moderation_actions = await prisma.discussionboard_moderation_actions.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_moderation_actions\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderation_actions we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_moderation_actionsUpsertArgs>(args: SelectSubset<T, discussionboard_moderation_actionsUpsertArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_moderation_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionsCountArgs} args - Arguments to filter Discussionboard_moderation_actions to count.\n     * @example\n     * // Count the number of Discussionboard_moderation_actions\n     * const count = await prisma.discussionboard_moderation_actions.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_moderation_actions we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_moderation_actionsCountArgs>(\n      args?: Subset<T, discussionboard_moderation_actionsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_moderation_actionsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_moderation_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_moderation_actionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_moderation_actionsAggregateArgs>(args: Subset<T, Discussionboard_moderation_actionsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_moderation_actionsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_moderation_actions.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_moderation_actionsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_moderation_actionsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_moderation_actionsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_moderation_actionsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_moderation_actionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_moderation_actionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_moderation_actions model\n   */\n  readonly fields: discussionboard_moderation_actionsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_moderation_actions.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_moderation_actionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_moderationactions_actor_admin<T extends discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_moderationactions_actor_moderator<T extends discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_moderationactions_actor_member<T extends discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_moderationactions_related_report<T extends discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_moderationactions_target_post<T extends discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs>>): Prisma__discussionboard_postsClient<$Result.GetResult<Prisma.$discussionboard_postsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_moderationactions_target_comment<T extends discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs>>): Prisma__discussionboard_commentsClient<$Result.GetResult<Prisma.$discussionboard_commentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    discussionboard_audit_logs<T extends discussionboard_moderation_actions$discussionboard_audit_logsArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_moderation_actions$discussionboard_audit_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_moderation_actions model\n   */\n  interface discussionboard_moderation_actionsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly actor_admin_id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly actor_moderator_id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly actor_member_id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly related_report_id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly target_post_id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly target_comment_id: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly action_type: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly action_reason: FieldRef<\"discussionboard_moderation_actions\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_moderation_actions\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_moderation_actions findUnique\n   */\n  export type discussionboard_moderation_actionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_actions to fetch.\n     */\n    where: discussionboard_moderation_actionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_actions findUniqueOrThrow\n   */\n  export type discussionboard_moderation_actionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_actions to fetch.\n     */\n    where: discussionboard_moderation_actionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_actions findFirst\n   */\n  export type discussionboard_moderation_actionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_actions to fetch.\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderation_actions.\n     */\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderation_actions.\n     */\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_actions findFirstOrThrow\n   */\n  export type discussionboard_moderation_actionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_actions to fetch.\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_moderation_actions.\n     */\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_moderation_actions.\n     */\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_actions findMany\n   */\n  export type discussionboard_moderation_actionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_moderation_actions to fetch.\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_moderation_actions to fetch.\n     */\n    orderBy?: discussionboard_moderation_actionsOrderByWithRelationInput | discussionboard_moderation_actionsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_moderation_actions.\n     */\n    cursor?: discussionboard_moderation_actionsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_moderation_actions from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_moderation_actions.\n     */\n    skip?: number\n    distinct?: Discussionboard_moderation_actionsScalarFieldEnum | Discussionboard_moderation_actionsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_actions create\n   */\n  export type discussionboard_moderation_actionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_moderation_actions.\n     */\n    data: XOR<discussionboard_moderation_actionsCreateInput, discussionboard_moderation_actionsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_moderation_actions createMany\n   */\n  export type discussionboard_moderation_actionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_moderation_actions.\n     */\n    data: discussionboard_moderation_actionsCreateManyInput | discussionboard_moderation_actionsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_moderation_actions createManyAndReturn\n   */\n  export type discussionboard_moderation_actionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_moderation_actions.\n     */\n    data: discussionboard_moderation_actionsCreateManyInput | discussionboard_moderation_actionsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderation_actions update\n   */\n  export type discussionboard_moderation_actionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_moderation_actions.\n     */\n    data: XOR<discussionboard_moderation_actionsUpdateInput, discussionboard_moderation_actionsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_moderation_actions to update.\n     */\n    where: discussionboard_moderation_actionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_actions updateMany\n   */\n  export type discussionboard_moderation_actionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_moderation_actions.\n     */\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderation_actions to update\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * Limit how many discussionboard_moderation_actions to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderation_actions updateManyAndReturn\n   */\n  export type discussionboard_moderation_actionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_moderation_actions.\n     */\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_moderation_actions to update\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * Limit how many discussionboard_moderation_actions to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_moderation_actions upsert\n   */\n  export type discussionboard_moderation_actionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_moderation_actions to update in case it exists.\n     */\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    /**\n     * In case the discussionboard_moderation_actions found by the `where` argument doesn't exist, create a new discussionboard_moderation_actions with this data.\n     */\n    create: XOR<discussionboard_moderation_actionsCreateInput, discussionboard_moderation_actionsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_moderation_actions was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_moderation_actionsUpdateInput, discussionboard_moderation_actionsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_moderation_actions delete\n   */\n  export type discussionboard_moderation_actionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_moderation_actions to delete.\n     */\n    where: discussionboard_moderation_actionsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_moderation_actions deleteMany\n   */\n  export type discussionboard_moderation_actionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_moderation_actions to delete\n     */\n    where?: discussionboard_moderation_actionsWhereInput\n    /**\n     * Limit how many discussionboard_moderation_actions to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_moderation_actions.fk_moderationactions_actor_admin\n   */\n  export type discussionboard_moderation_actions$fk_moderationactions_actor_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_actions.fk_moderationactions_actor_moderator\n   */\n  export type discussionboard_moderation_actions$fk_moderationactions_actor_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_actions.fk_moderationactions_actor_member\n   */\n  export type discussionboard_moderation_actions$fk_moderationactions_actor_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_actions.fk_moderationactions_related_report\n   */\n  export type discussionboard_moderation_actions$fk_moderationactions_related_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_actions.fk_moderationactions_target_post\n   */\n  export type discussionboard_moderation_actions$fk_moderationactions_target_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_posts\n     */\n    select?: discussionboard_postsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_posts\n     */\n    omit?: discussionboard_postsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_postsInclude<ExtArgs> | null\n    where?: discussionboard_postsWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_actions.fk_moderationactions_target_comment\n   */\n  export type discussionboard_moderation_actions$fk_moderationactions_target_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_comments\n     */\n    select?: discussionboard_commentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_comments\n     */\n    omit?: discussionboard_commentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_commentsInclude<ExtArgs> | null\n    where?: discussionboard_commentsWhereInput\n  }\n\n  /**\n   * discussionboard_moderation_actions.discussionboard_audit_logs\n   */\n  export type discussionboard_moderation_actions$discussionboard_audit_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    where?: discussionboard_audit_logsWhereInput\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_moderation_actions without action\n   */\n  export type discussionboard_moderation_actionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_bans\n   */\n\n  export type AggregateDiscussionboard_bans = {\n    _count: Discussionboard_bansCountAggregateOutputType | null\n    _min: Discussionboard_bansMinAggregateOutputType | null\n    _max: Discussionboard_bansMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_bansMinAggregateOutputType = {\n    id: string | null\n    target_admin_id: string | null\n    target_moderator_id: string | null\n    target_member_id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    ban_reason: string | null\n    ban_start_at: Date | null\n    ban_end_at: Date | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_bansMaxAggregateOutputType = {\n    id: string | null\n    target_admin_id: string | null\n    target_moderator_id: string | null\n    target_member_id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    ban_reason: string | null\n    ban_start_at: Date | null\n    ban_end_at: Date | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_bansCountAggregateOutputType = {\n    id: number\n    target_admin_id: number\n    target_moderator_id: number\n    target_member_id: number\n    actor_admin_id: number\n    actor_moderator_id: number\n    ban_reason: number\n    ban_start_at: number\n    ban_end_at: number\n    status: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_bansMinAggregateInputType = {\n    id?: true\n    target_admin_id?: true\n    target_moderator_id?: true\n    target_member_id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    ban_reason?: true\n    ban_start_at?: true\n    ban_end_at?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_bansMaxAggregateInputType = {\n    id?: true\n    target_admin_id?: true\n    target_moderator_id?: true\n    target_member_id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    ban_reason?: true\n    ban_start_at?: true\n    ban_end_at?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_bansCountAggregateInputType = {\n    id?: true\n    target_admin_id?: true\n    target_moderator_id?: true\n    target_member_id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    ban_reason?: true\n    ban_start_at?: true\n    ban_end_at?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_bansAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_bans to aggregate.\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_bansWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_bans\n    **/\n    _count?: true | Discussionboard_bansCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_bansMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_bansMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_bansAggregateType<T extends Discussionboard_bansAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_bans]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_bans[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_bans[P]>\n  }\n\n\n\n\n  export type discussionboard_bansGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_bansWhereInput\n    orderBy?: discussionboard_bansOrderByWithAggregationInput | discussionboard_bansOrderByWithAggregationInput[]\n    by: Discussionboard_bansScalarFieldEnum[] | Discussionboard_bansScalarFieldEnum\n    having?: discussionboard_bansScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_bansCountAggregateInputType | true\n    _min?: Discussionboard_bansMinAggregateInputType\n    _max?: Discussionboard_bansMaxAggregateInputType\n  }\n\n  export type Discussionboard_bansGroupByOutputType = {\n    id: string\n    target_admin_id: string | null\n    target_moderator_id: string | null\n    target_member_id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    ban_reason: string\n    ban_start_at: Date\n    ban_end_at: Date | null\n    status: string\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_bansCountAggregateOutputType | null\n    _min: Discussionboard_bansMinAggregateOutputType | null\n    _max: Discussionboard_bansMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_bansGroupByPayload<T extends discussionboard_bansGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_bansGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_bansGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_bansGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_bansGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_bansSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    ban_reason?: boolean\n    ban_start_at?: boolean\n    ban_end_at?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_bans_target_admin?: boolean | discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>\n    fk_bans_target_moderator?: boolean | discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>\n    fk_bans_target_member?: boolean | discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>\n    fk_bans_actor_admin?: boolean | discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>\n    fk_bans_actor_moderator?: boolean | discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_bans\"]>\n\n  export type discussionboard_bansSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    ban_reason?: boolean\n    ban_start_at?: boolean\n    ban_end_at?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_bans_target_admin?: boolean | discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>\n    fk_bans_target_moderator?: boolean | discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>\n    fk_bans_target_member?: boolean | discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>\n    fk_bans_actor_admin?: boolean | discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>\n    fk_bans_actor_moderator?: boolean | discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_bans\"]>\n\n  export type discussionboard_bansSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    ban_reason?: boolean\n    ban_start_at?: boolean\n    ban_end_at?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    fk_bans_target_admin?: boolean | discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>\n    fk_bans_target_moderator?: boolean | discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>\n    fk_bans_target_member?: boolean | discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>\n    fk_bans_actor_admin?: boolean | discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>\n    fk_bans_actor_moderator?: boolean | discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_bans\"]>\n\n  export type discussionboard_bansSelectScalar = {\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    ban_reason?: boolean\n    ban_start_at?: boolean\n    ban_end_at?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_bansOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"target_admin_id\" | \"target_moderator_id\" | \"target_member_id\" | \"actor_admin_id\" | \"actor_moderator_id\" | \"ban_reason\" | \"ban_start_at\" | \"ban_end_at\" | \"status\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_bans\"]>\n  export type discussionboard_bansInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_bans_target_admin?: boolean | discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>\n    fk_bans_target_moderator?: boolean | discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>\n    fk_bans_target_member?: boolean | discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>\n    fk_bans_actor_admin?: boolean | discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>\n    fk_bans_actor_moderator?: boolean | discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>\n  }\n  export type discussionboard_bansIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_bans_target_admin?: boolean | discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>\n    fk_bans_target_moderator?: boolean | discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>\n    fk_bans_target_member?: boolean | discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>\n    fk_bans_actor_admin?: boolean | discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>\n    fk_bans_actor_moderator?: boolean | discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>\n  }\n  export type discussionboard_bansIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_bans_target_admin?: boolean | discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>\n    fk_bans_target_moderator?: boolean | discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>\n    fk_bans_target_member?: boolean | discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>\n    fk_bans_actor_admin?: boolean | discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>\n    fk_bans_actor_moderator?: boolean | discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>\n  }\n\n  export type $discussionboard_bansPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_bans\"\n    objects: {\n      fk_bans_target_admin: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      fk_bans_target_moderator: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n      fk_bans_target_member: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n      fk_bans_actor_admin: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      fk_bans_actor_moderator: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for ban record.\n       */\n      id: string\n      /**\n       * Target if banned user was an admin: {@link discussionboard_admins.id}. Nullable if target is not an admin.\n       */\n      target_admin_id: string | null\n      /**\n       * Target if banned user was a moderator: {@link discussionboard_moderators.id}. Nullable if target is not moderator.\n       */\n      target_moderator_id: string | null\n      /**\n       * Target if banned user was a member: {@link discussionboard_members.id}. Nullable if not member.\n       */\n      target_member_id: string | null\n      /**\n       * Admin who imposed the ban: {@link discussionboard_admins.id}. Nullable unless ban imposed by admin.\n       */\n      actor_admin_id: string | null\n      /**\n       * Moderator who imposed the ban: {@link discussionboard_moderators.id}. Nullable unless ban imposed by moderator.\n       */\n      actor_moderator_id: string | null\n      /**\n       * Reason for ban - Implements explicit rationale requirement. Describes why user was banned. Ensures normalization. E.g. 'Severe harassment', 'Repeated spam'.\n       */\n      ban_reason: string\n      /**\n       * When ban starts. Implements requirement for configurable ban durations. Prevents premature enforcement on the record.\n       */\n      ban_start_at: Date\n      /**\n       * When ban ends (nullable if permanent). Enforces temporal normalization. E.g. 30-day ban, permanent if null.\n       */\n      ban_end_at: Date | null\n      /**\n       * Ban status (e.g. active, expired, lifted, scheduled). Controls enforcement by application logic. Implements status audit requirement.\n       */\n      status: string\n      /**\n       * Timestamp of ban record creation. Supports timeline and reporting.\n       */\n      created_at: Date\n      /**\n       * Timestamp for last update to ban record. Audits changes, supports compliance requirements.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_bans\"]>\n    composites: {}\n  }\n\n  type discussionboard_bansGetPayload<S extends boolean | null | undefined | discussionboard_bansDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_bansPayload, S>\n\n  type discussionboard_bansCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_bansFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_bansCountAggregateInputType | true\n    }\n\n  export interface discussionboard_bansDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_bans'], meta: { name: 'discussionboard_bans' } }\n    /**\n     * Find zero or one Discussionboard_bans that matches the filter.\n     * @param {discussionboard_bansFindUniqueArgs} args - Arguments to find a Discussionboard_bans\n     * @example\n     * // Get one Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_bansFindUniqueArgs>(args: SelectSubset<T, discussionboard_bansFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_bans that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_bansFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_bans\n     * @example\n     * // Get one Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_bansFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_bansFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_bans that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_bansFindFirstArgs} args - Arguments to find a Discussionboard_bans\n     * @example\n     * // Get one Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_bansFindFirstArgs>(args?: SelectSubset<T, discussionboard_bansFindFirstArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_bans that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_bansFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_bans\n     * @example\n     * // Get one Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_bansFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_bansFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_bans that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_bansFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.findMany()\n     * \n     * // Get first 10 Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_bansWithIdOnly = await prisma.discussionboard_bans.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_bansFindManyArgs>(args?: SelectSubset<T, discussionboard_bansFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_bans.\n     * @param {discussionboard_bansCreateArgs} args - Arguments to create a Discussionboard_bans.\n     * @example\n     * // Create one Discussionboard_bans\n     * const Discussionboard_bans = await prisma.discussionboard_bans.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_bans\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_bansCreateArgs>(args: SelectSubset<T, discussionboard_bansCreateArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_bans.\n     * @param {discussionboard_bansCreateManyArgs} args - Arguments to create many Discussionboard_bans.\n     * @example\n     * // Create many Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_bansCreateManyArgs>(args?: SelectSubset<T, discussionboard_bansCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_bans and returns the data saved in the database.\n     * @param {discussionboard_bansCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_bans.\n     * @example\n     * // Create many Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_bans and only return the `id`\n     * const discussionboard_bansWithIdOnly = await prisma.discussionboard_bans.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_bansCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_bansCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_bans.\n     * @param {discussionboard_bansDeleteArgs} args - Arguments to delete one Discussionboard_bans.\n     * @example\n     * // Delete one Discussionboard_bans\n     * const Discussionboard_bans = await prisma.discussionboard_bans.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_bans\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_bansDeleteArgs>(args: SelectSubset<T, discussionboard_bansDeleteArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_bans.\n     * @param {discussionboard_bansUpdateArgs} args - Arguments to update one Discussionboard_bans.\n     * @example\n     * // Update one Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_bansUpdateArgs>(args: SelectSubset<T, discussionboard_bansUpdateArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_bans.\n     * @param {discussionboard_bansDeleteManyArgs} args - Arguments to filter Discussionboard_bans to delete.\n     * @example\n     * // Delete a few Discussionboard_bans\n     * const { count } = await prisma.discussionboard_bans.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_bansDeleteManyArgs>(args?: SelectSubset<T, discussionboard_bansDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_bansUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_bansUpdateManyArgs>(args: SelectSubset<T, discussionboard_bansUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_bans and returns the data updated in the database.\n     * @param {discussionboard_bansUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_bans.\n     * @example\n     * // Update many Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_bans and only return the `id`\n     * const discussionboard_bansWithIdOnly = await prisma.discussionboard_bans.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_bansUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_bansUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_bans.\n     * @param {discussionboard_bansUpsertArgs} args - Arguments to update or create a Discussionboard_bans.\n     * @example\n     * // Update or create a Discussionboard_bans\n     * const discussionboard_bans = await prisma.discussionboard_bans.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_bans\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_bans we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_bansUpsertArgs>(args: SelectSubset<T, discussionboard_bansUpsertArgs<ExtArgs>>): Prisma__discussionboard_bansClient<$Result.GetResult<Prisma.$discussionboard_bansPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_bansCountArgs} args - Arguments to filter Discussionboard_bans to count.\n     * @example\n     * // Count the number of Discussionboard_bans\n     * const count = await prisma.discussionboard_bans.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_bans we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_bansCountArgs>(\n      args?: Subset<T, discussionboard_bansCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_bansCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_bansAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_bansAggregateArgs>(args: Subset<T, Discussionboard_bansAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_bansAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_bans.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_bansGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_bansGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_bansGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_bansGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_bansGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_bansGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_bans model\n   */\n  readonly fields: discussionboard_bansFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_bans.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_bansClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_bans_target_admin<T extends discussionboard_bans$fk_bans_target_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_bans$fk_bans_target_adminArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_bans_target_moderator<T extends discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_bans_target_member<T extends discussionboard_bans$fk_bans_target_memberArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_bans$fk_bans_target_memberArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_bans_actor_admin<T extends discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_bans_actor_moderator<T extends discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_bans model\n   */\n  interface discussionboard_bansFieldRefs {\n    readonly id: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly target_admin_id: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly target_moderator_id: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly target_member_id: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly actor_admin_id: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly actor_moderator_id: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly ban_reason: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly ban_start_at: FieldRef<\"discussionboard_bans\", 'DateTime'>\n    readonly ban_end_at: FieldRef<\"discussionboard_bans\", 'DateTime'>\n    readonly status: FieldRef<\"discussionboard_bans\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_bans\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_bans\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_bans findUnique\n   */\n  export type discussionboard_bansFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_bans to fetch.\n     */\n    where: discussionboard_bansWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_bans findUniqueOrThrow\n   */\n  export type discussionboard_bansFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_bans to fetch.\n     */\n    where: discussionboard_bansWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_bans findFirst\n   */\n  export type discussionboard_bansFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_bans to fetch.\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_bans.\n     */\n    cursor?: discussionboard_bansWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_bans.\n     */\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_bans findFirstOrThrow\n   */\n  export type discussionboard_bansFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_bans to fetch.\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_bans.\n     */\n    cursor?: discussionboard_bansWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_bans.\n     */\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_bans findMany\n   */\n  export type discussionboard_bansFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_bans to fetch.\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_bans to fetch.\n     */\n    orderBy?: discussionboard_bansOrderByWithRelationInput | discussionboard_bansOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_bans.\n     */\n    cursor?: discussionboard_bansWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_bans from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_bans.\n     */\n    skip?: number\n    distinct?: Discussionboard_bansScalarFieldEnum | Discussionboard_bansScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_bans create\n   */\n  export type discussionboard_bansCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_bans.\n     */\n    data: XOR<discussionboard_bansCreateInput, discussionboard_bansUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_bans createMany\n   */\n  export type discussionboard_bansCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_bans.\n     */\n    data: discussionboard_bansCreateManyInput | discussionboard_bansCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_bans createManyAndReturn\n   */\n  export type discussionboard_bansCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_bans.\n     */\n    data: discussionboard_bansCreateManyInput | discussionboard_bansCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_bans update\n   */\n  export type discussionboard_bansUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_bans.\n     */\n    data: XOR<discussionboard_bansUpdateInput, discussionboard_bansUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_bans to update.\n     */\n    where: discussionboard_bansWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_bans updateMany\n   */\n  export type discussionboard_bansUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_bans.\n     */\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_bans to update\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * Limit how many discussionboard_bans to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_bans updateManyAndReturn\n   */\n  export type discussionboard_bansUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_bans.\n     */\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_bans to update\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * Limit how many discussionboard_bans to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_bans upsert\n   */\n  export type discussionboard_bansUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_bans to update in case it exists.\n     */\n    where: discussionboard_bansWhereUniqueInput\n    /**\n     * In case the discussionboard_bans found by the `where` argument doesn't exist, create a new discussionboard_bans with this data.\n     */\n    create: XOR<discussionboard_bansCreateInput, discussionboard_bansUncheckedCreateInput>\n    /**\n     * In case the discussionboard_bans was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_bansUpdateInput, discussionboard_bansUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_bans delete\n   */\n  export type discussionboard_bansDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_bans to delete.\n     */\n    where: discussionboard_bansWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_bans deleteMany\n   */\n  export type discussionboard_bansDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_bans to delete\n     */\n    where?: discussionboard_bansWhereInput\n    /**\n     * Limit how many discussionboard_bans to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_bans.fk_bans_target_admin\n   */\n  export type discussionboard_bans$fk_bans_target_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_bans.fk_bans_target_moderator\n   */\n  export type discussionboard_bans$fk_bans_target_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_bans.fk_bans_target_member\n   */\n  export type discussionboard_bans$fk_bans_target_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_bans.fk_bans_actor_admin\n   */\n  export type discussionboard_bans$fk_bans_actor_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_bans.fk_bans_actor_moderator\n   */\n  export type discussionboard_bans$fk_bans_actor_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_bans without action\n   */\n  export type discussionboard_bansDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_bans\n     */\n    select?: discussionboard_bansSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_bans\n     */\n    omit?: discussionboard_bansOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_bansInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_warnings\n   */\n\n  export type AggregateDiscussionboard_warnings = {\n    _count: Discussionboard_warningsCountAggregateOutputType | null\n    _min: Discussionboard_warningsMinAggregateOutputType | null\n    _max: Discussionboard_warningsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_warningsMinAggregateOutputType = {\n    id: string | null\n    target_admin_id: string | null\n    target_moderator_id: string | null\n    target_member_id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    related_report_id: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_warningsMaxAggregateOutputType = {\n    id: string | null\n    target_admin_id: string | null\n    target_moderator_id: string | null\n    target_member_id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    related_report_id: string | null\n    reason: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_warningsCountAggregateOutputType = {\n    id: number\n    target_admin_id: number\n    target_moderator_id: number\n    target_member_id: number\n    actor_admin_id: number\n    actor_moderator_id: number\n    related_report_id: number\n    reason: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_warningsMinAggregateInputType = {\n    id?: true\n    target_admin_id?: true\n    target_moderator_id?: true\n    target_member_id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    related_report_id?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_warningsMaxAggregateInputType = {\n    id?: true\n    target_admin_id?: true\n    target_moderator_id?: true\n    target_member_id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    related_report_id?: true\n    reason?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_warningsCountAggregateInputType = {\n    id?: true\n    target_admin_id?: true\n    target_moderator_id?: true\n    target_member_id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    related_report_id?: true\n    reason?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_warningsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_warnings to aggregate.\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_warningsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_warnings\n    **/\n    _count?: true | Discussionboard_warningsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_warningsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_warningsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_warningsAggregateType<T extends Discussionboard_warningsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_warnings]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_warnings[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_warnings[P]>\n  }\n\n\n\n\n  export type discussionboard_warningsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_warningsWhereInput\n    orderBy?: discussionboard_warningsOrderByWithAggregationInput | discussionboard_warningsOrderByWithAggregationInput[]\n    by: Discussionboard_warningsScalarFieldEnum[] | Discussionboard_warningsScalarFieldEnum\n    having?: discussionboard_warningsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_warningsCountAggregateInputType | true\n    _min?: Discussionboard_warningsMinAggregateInputType\n    _max?: Discussionboard_warningsMaxAggregateInputType\n  }\n\n  export type Discussionboard_warningsGroupByOutputType = {\n    id: string\n    target_admin_id: string | null\n    target_moderator_id: string | null\n    target_member_id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    related_report_id: string | null\n    reason: string\n    created_at: Date\n    _count: Discussionboard_warningsCountAggregateOutputType | null\n    _min: Discussionboard_warningsMinAggregateOutputType | null\n    _max: Discussionboard_warningsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_warningsGroupByPayload<T extends discussionboard_warningsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_warningsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_warningsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_warningsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_warningsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_warningsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    related_report_id?: boolean\n    reason?: boolean\n    created_at?: boolean\n    fk_warnings_target_admin?: boolean | discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>\n    fk_warnings_target_moderator?: boolean | discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>\n    fk_warnings_target_member?: boolean | discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>\n    fk_warnings_actor_admin?: boolean | discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>\n    fk_warnings_actor_moderator?: boolean | discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>\n    fk_warnings_related_report?: boolean | discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_warnings\"]>\n\n  export type discussionboard_warningsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    related_report_id?: boolean\n    reason?: boolean\n    created_at?: boolean\n    fk_warnings_target_admin?: boolean | discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>\n    fk_warnings_target_moderator?: boolean | discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>\n    fk_warnings_target_member?: boolean | discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>\n    fk_warnings_actor_admin?: boolean | discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>\n    fk_warnings_actor_moderator?: boolean | discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>\n    fk_warnings_related_report?: boolean | discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_warnings\"]>\n\n  export type discussionboard_warningsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    related_report_id?: boolean\n    reason?: boolean\n    created_at?: boolean\n    fk_warnings_target_admin?: boolean | discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>\n    fk_warnings_target_moderator?: boolean | discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>\n    fk_warnings_target_member?: boolean | discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>\n    fk_warnings_actor_admin?: boolean | discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>\n    fk_warnings_actor_moderator?: boolean | discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>\n    fk_warnings_related_report?: boolean | discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_warnings\"]>\n\n  export type discussionboard_warningsSelectScalar = {\n    id?: boolean\n    target_admin_id?: boolean\n    target_moderator_id?: boolean\n    target_member_id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    related_report_id?: boolean\n    reason?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_warningsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"target_admin_id\" | \"target_moderator_id\" | \"target_member_id\" | \"actor_admin_id\" | \"actor_moderator_id\" | \"related_report_id\" | \"reason\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_warnings\"]>\n  export type discussionboard_warningsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_warnings_target_admin?: boolean | discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>\n    fk_warnings_target_moderator?: boolean | discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>\n    fk_warnings_target_member?: boolean | discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>\n    fk_warnings_actor_admin?: boolean | discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>\n    fk_warnings_actor_moderator?: boolean | discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>\n    fk_warnings_related_report?: boolean | discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>\n  }\n  export type discussionboard_warningsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_warnings_target_admin?: boolean | discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>\n    fk_warnings_target_moderator?: boolean | discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>\n    fk_warnings_target_member?: boolean | discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>\n    fk_warnings_actor_admin?: boolean | discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>\n    fk_warnings_actor_moderator?: boolean | discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>\n    fk_warnings_related_report?: boolean | discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>\n  }\n  export type discussionboard_warningsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_warnings_target_admin?: boolean | discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>\n    fk_warnings_target_moderator?: boolean | discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>\n    fk_warnings_target_member?: boolean | discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>\n    fk_warnings_actor_admin?: boolean | discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>\n    fk_warnings_actor_moderator?: boolean | discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>\n    fk_warnings_related_report?: boolean | discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>\n  }\n\n  export type $discussionboard_warningsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_warnings\"\n    objects: {\n      fk_warnings_target_admin: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      fk_warnings_target_moderator: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n      fk_warnings_target_member: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n      fk_warnings_actor_admin: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      fk_warnings_actor_moderator: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n      fk_warnings_related_report: Prisma.$discussionboard_reportsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for warning record.\n       */\n      id: string\n      /**\n       * Warned admin (rare): {@link discussionboard_admins.id}. Nullable if not admin.\n       */\n      target_admin_id: string | null\n      /**\n       * Warned moderator (rare): {@link discussionboard_moderators.id}. Nullable if not moderator.\n       */\n      target_moderator_id: string | null\n      /**\n       * Warned member: {@link discussionboard_members.id}. Nullable if not member.\n       */\n      target_member_id: string | null\n      /**\n       * Admin issuing warning: {@link discussionboard_admins.id}. Nullable unless admin issued.\n       */\n      actor_admin_id: string | null\n      /**\n       * Moderator issuing warning: {@link discussionboard_moderators.id}. Nullable unless moderator issued.\n       */\n      actor_moderator_id: string | null\n      /**\n       * Related report (if warning is result of a report): {@link discussionboard_reports.id}. Nullable if warning is not report-triggered.\n       */\n      related_report_id: string | null\n      /**\n       * Reason for issuing warning - Implements rationale requirement. E.g. 'Minor profanity', 'Off-topic'. Required for context audit.\n       */\n      reason: string\n      /**\n       * When warning was issued. For audit and escalation flows. Required for every warning.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_warnings\"]>\n    composites: {}\n  }\n\n  type discussionboard_warningsGetPayload<S extends boolean | null | undefined | discussionboard_warningsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_warningsPayload, S>\n\n  type discussionboard_warningsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_warningsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_warningsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_warningsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_warnings'], meta: { name: 'discussionboard_warnings' } }\n    /**\n     * Find zero or one Discussionboard_warnings that matches the filter.\n     * @param {discussionboard_warningsFindUniqueArgs} args - Arguments to find a Discussionboard_warnings\n     * @example\n     * // Get one Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_warningsFindUniqueArgs>(args: SelectSubset<T, discussionboard_warningsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_warnings that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_warningsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_warnings\n     * @example\n     * // Get one Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_warningsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_warningsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_warnings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningsFindFirstArgs} args - Arguments to find a Discussionboard_warnings\n     * @example\n     * // Get one Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_warningsFindFirstArgs>(args?: SelectSubset<T, discussionboard_warningsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_warnings that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_warnings\n     * @example\n     * // Get one Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_warningsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_warningsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_warnings that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.findMany()\n     * \n     * // Get first 10 Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_warningsWithIdOnly = await prisma.discussionboard_warnings.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_warningsFindManyArgs>(args?: SelectSubset<T, discussionboard_warningsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_warnings.\n     * @param {discussionboard_warningsCreateArgs} args - Arguments to create a Discussionboard_warnings.\n     * @example\n     * // Create one Discussionboard_warnings\n     * const Discussionboard_warnings = await prisma.discussionboard_warnings.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_warnings\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_warningsCreateArgs>(args: SelectSubset<T, discussionboard_warningsCreateArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_warnings.\n     * @param {discussionboard_warningsCreateManyArgs} args - Arguments to create many Discussionboard_warnings.\n     * @example\n     * // Create many Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_warningsCreateManyArgs>(args?: SelectSubset<T, discussionboard_warningsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_warnings and returns the data saved in the database.\n     * @param {discussionboard_warningsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_warnings.\n     * @example\n     * // Create many Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_warnings and only return the `id`\n     * const discussionboard_warningsWithIdOnly = await prisma.discussionboard_warnings.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_warningsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_warningsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_warnings.\n     * @param {discussionboard_warningsDeleteArgs} args - Arguments to delete one Discussionboard_warnings.\n     * @example\n     * // Delete one Discussionboard_warnings\n     * const Discussionboard_warnings = await prisma.discussionboard_warnings.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_warnings\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_warningsDeleteArgs>(args: SelectSubset<T, discussionboard_warningsDeleteArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_warnings.\n     * @param {discussionboard_warningsUpdateArgs} args - Arguments to update one Discussionboard_warnings.\n     * @example\n     * // Update one Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_warningsUpdateArgs>(args: SelectSubset<T, discussionboard_warningsUpdateArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_warnings.\n     * @param {discussionboard_warningsDeleteManyArgs} args - Arguments to filter Discussionboard_warnings to delete.\n     * @example\n     * // Delete a few Discussionboard_warnings\n     * const { count } = await prisma.discussionboard_warnings.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_warningsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_warningsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_warningsUpdateManyArgs>(args: SelectSubset<T, discussionboard_warningsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_warnings and returns the data updated in the database.\n     * @param {discussionboard_warningsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_warnings.\n     * @example\n     * // Update many Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_warnings and only return the `id`\n     * const discussionboard_warningsWithIdOnly = await prisma.discussionboard_warnings.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_warningsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_warningsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_warnings.\n     * @param {discussionboard_warningsUpsertArgs} args - Arguments to update or create a Discussionboard_warnings.\n     * @example\n     * // Update or create a Discussionboard_warnings\n     * const discussionboard_warnings = await prisma.discussionboard_warnings.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_warnings\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_warnings we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_warningsUpsertArgs>(args: SelectSubset<T, discussionboard_warningsUpsertArgs<ExtArgs>>): Prisma__discussionboard_warningsClient<$Result.GetResult<Prisma.$discussionboard_warningsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningsCountArgs} args - Arguments to filter Discussionboard_warnings to count.\n     * @example\n     * // Count the number of Discussionboard_warnings\n     * const count = await prisma.discussionboard_warnings.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_warnings we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_warningsCountArgs>(\n      args?: Subset<T, discussionboard_warningsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_warningsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_warningsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_warningsAggregateArgs>(args: Subset<T, Discussionboard_warningsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_warningsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_warnings.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_warningsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_warningsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_warningsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_warningsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_warningsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_warningsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_warnings model\n   */\n  readonly fields: discussionboard_warningsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_warnings.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_warningsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_warnings_target_admin<T extends discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_warnings_target_moderator<T extends discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_warnings_target_member<T extends discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_warnings_actor_admin<T extends discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_warnings_actor_moderator<T extends discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_warnings_related_report<T extends discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_warnings model\n   */\n  interface discussionboard_warningsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly target_admin_id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly target_moderator_id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly target_member_id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly actor_admin_id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly actor_moderator_id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly related_report_id: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly reason: FieldRef<\"discussionboard_warnings\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_warnings\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_warnings findUnique\n   */\n  export type discussionboard_warningsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warnings to fetch.\n     */\n    where: discussionboard_warningsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warnings findUniqueOrThrow\n   */\n  export type discussionboard_warningsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warnings to fetch.\n     */\n    where: discussionboard_warningsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warnings findFirst\n   */\n  export type discussionboard_warningsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warnings to fetch.\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_warnings.\n     */\n    cursor?: discussionboard_warningsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_warnings.\n     */\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warnings findFirstOrThrow\n   */\n  export type discussionboard_warningsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warnings to fetch.\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_warnings.\n     */\n    cursor?: discussionboard_warningsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_warnings.\n     */\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warnings findMany\n   */\n  export type discussionboard_warningsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_warnings to fetch.\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_warnings to fetch.\n     */\n    orderBy?: discussionboard_warningsOrderByWithRelationInput | discussionboard_warningsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_warnings.\n     */\n    cursor?: discussionboard_warningsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_warnings from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_warnings.\n     */\n    skip?: number\n    distinct?: Discussionboard_warningsScalarFieldEnum | Discussionboard_warningsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_warnings create\n   */\n  export type discussionboard_warningsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_warnings.\n     */\n    data: XOR<discussionboard_warningsCreateInput, discussionboard_warningsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_warnings createMany\n   */\n  export type discussionboard_warningsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_warnings.\n     */\n    data: discussionboard_warningsCreateManyInput | discussionboard_warningsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_warnings createManyAndReturn\n   */\n  export type discussionboard_warningsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_warnings.\n     */\n    data: discussionboard_warningsCreateManyInput | discussionboard_warningsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_warnings update\n   */\n  export type discussionboard_warningsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_warnings.\n     */\n    data: XOR<discussionboard_warningsUpdateInput, discussionboard_warningsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_warnings to update.\n     */\n    where: discussionboard_warningsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warnings updateMany\n   */\n  export type discussionboard_warningsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_warnings.\n     */\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_warnings to update\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * Limit how many discussionboard_warnings to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_warnings updateManyAndReturn\n   */\n  export type discussionboard_warningsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_warnings.\n     */\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_warnings to update\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * Limit how many discussionboard_warnings to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_warnings upsert\n   */\n  export type discussionboard_warningsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_warnings to update in case it exists.\n     */\n    where: discussionboard_warningsWhereUniqueInput\n    /**\n     * In case the discussionboard_warnings found by the `where` argument doesn't exist, create a new discussionboard_warnings with this data.\n     */\n    create: XOR<discussionboard_warningsCreateInput, discussionboard_warningsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_warnings was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_warningsUpdateInput, discussionboard_warningsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_warnings delete\n   */\n  export type discussionboard_warningsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_warnings to delete.\n     */\n    where: discussionboard_warningsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_warnings deleteMany\n   */\n  export type discussionboard_warningsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_warnings to delete\n     */\n    where?: discussionboard_warningsWhereInput\n    /**\n     * Limit how many discussionboard_warnings to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_warnings.fk_warnings_target_admin\n   */\n  export type discussionboard_warnings$fk_warnings_target_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_warnings.fk_warnings_target_moderator\n   */\n  export type discussionboard_warnings$fk_warnings_target_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_warnings.fk_warnings_target_member\n   */\n  export type discussionboard_warnings$fk_warnings_target_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_warnings.fk_warnings_actor_admin\n   */\n  export type discussionboard_warnings$fk_warnings_actor_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_warnings.fk_warnings_actor_moderator\n   */\n  export type discussionboard_warnings$fk_warnings_actor_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_warnings.fk_warnings_related_report\n   */\n  export type discussionboard_warnings$fk_warnings_related_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * discussionboard_warnings without action\n   */\n  export type discussionboard_warningsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_warnings\n     */\n    select?: discussionboard_warningsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_warnings\n     */\n    omit?: discussionboard_warningsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_warningsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_audit_logs\n   */\n\n  export type AggregateDiscussionboard_audit_logs = {\n    _count: Discussionboard_audit_logsCountAggregateOutputType | null\n    _min: Discussionboard_audit_logsMinAggregateOutputType | null\n    _max: Discussionboard_audit_logsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_audit_logsMinAggregateOutputType = {\n    id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    actor_member_id: string | null\n    related_report_id: string | null\n    related_moderation_action_id: string | null\n    event_type: string | null\n    event_detail: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_audit_logsMaxAggregateOutputType = {\n    id: string | null\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    actor_member_id: string | null\n    related_report_id: string | null\n    related_moderation_action_id: string | null\n    event_type: string | null\n    event_detail: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_audit_logsCountAggregateOutputType = {\n    id: number\n    actor_admin_id: number\n    actor_moderator_id: number\n    actor_member_id: number\n    related_report_id: number\n    related_moderation_action_id: number\n    event_type: number\n    event_detail: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_audit_logsMinAggregateInputType = {\n    id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    actor_member_id?: true\n    related_report_id?: true\n    related_moderation_action_id?: true\n    event_type?: true\n    event_detail?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_audit_logsMaxAggregateInputType = {\n    id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    actor_member_id?: true\n    related_report_id?: true\n    related_moderation_action_id?: true\n    event_type?: true\n    event_detail?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_audit_logsCountAggregateInputType = {\n    id?: true\n    actor_admin_id?: true\n    actor_moderator_id?: true\n    actor_member_id?: true\n    related_report_id?: true\n    related_moderation_action_id?: true\n    event_type?: true\n    event_detail?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_audit_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_audit_logs to aggregate.\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_audit_logs\n    **/\n    _count?: true | Discussionboard_audit_logsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_audit_logsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_audit_logsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_audit_logsAggregateType<T extends Discussionboard_audit_logsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_audit_logs]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_audit_logs[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_audit_logs[P]>\n  }\n\n\n\n\n  export type discussionboard_audit_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_audit_logsWhereInput\n    orderBy?: discussionboard_audit_logsOrderByWithAggregationInput | discussionboard_audit_logsOrderByWithAggregationInput[]\n    by: Discussionboard_audit_logsScalarFieldEnum[] | Discussionboard_audit_logsScalarFieldEnum\n    having?: discussionboard_audit_logsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_audit_logsCountAggregateInputType | true\n    _min?: Discussionboard_audit_logsMinAggregateInputType\n    _max?: Discussionboard_audit_logsMaxAggregateInputType\n  }\n\n  export type Discussionboard_audit_logsGroupByOutputType = {\n    id: string\n    actor_admin_id: string | null\n    actor_moderator_id: string | null\n    actor_member_id: string | null\n    related_report_id: string | null\n    related_moderation_action_id: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date\n    _count: Discussionboard_audit_logsCountAggregateOutputType | null\n    _min: Discussionboard_audit_logsMinAggregateOutputType | null\n    _max: Discussionboard_audit_logsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_audit_logsGroupByPayload<T extends discussionboard_audit_logsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_audit_logsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_audit_logsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_audit_logsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_audit_logsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_audit_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    related_moderation_action_id?: boolean\n    event_type?: boolean\n    event_detail?: boolean\n    created_at?: boolean\n    fk_auditlogs_actor_admin?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>\n    fk_auditlogs_actor_moderator?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>\n    fk_auditlogs_actor_member?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>\n    fk_auditlogs_related_report?: boolean | discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>\n    fk_auditlogs_related_moderation_action?: boolean | discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_audit_logs\"]>\n\n  export type discussionboard_audit_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    related_moderation_action_id?: boolean\n    event_type?: boolean\n    event_detail?: boolean\n    created_at?: boolean\n    fk_auditlogs_actor_admin?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>\n    fk_auditlogs_actor_moderator?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>\n    fk_auditlogs_actor_member?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>\n    fk_auditlogs_related_report?: boolean | discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>\n    fk_auditlogs_related_moderation_action?: boolean | discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_audit_logs\"]>\n\n  export type discussionboard_audit_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    related_moderation_action_id?: boolean\n    event_type?: boolean\n    event_detail?: boolean\n    created_at?: boolean\n    fk_auditlogs_actor_admin?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>\n    fk_auditlogs_actor_moderator?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>\n    fk_auditlogs_actor_member?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>\n    fk_auditlogs_related_report?: boolean | discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>\n    fk_auditlogs_related_moderation_action?: boolean | discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_audit_logs\"]>\n\n  export type discussionboard_audit_logsSelectScalar = {\n    id?: boolean\n    actor_admin_id?: boolean\n    actor_moderator_id?: boolean\n    actor_member_id?: boolean\n    related_report_id?: boolean\n    related_moderation_action_id?: boolean\n    event_type?: boolean\n    event_detail?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_audit_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_admin_id\" | \"actor_moderator_id\" | \"actor_member_id\" | \"related_report_id\" | \"related_moderation_action_id\" | \"event_type\" | \"event_detail\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_audit_logs\"]>\n  export type discussionboard_audit_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_auditlogs_actor_admin?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>\n    fk_auditlogs_actor_moderator?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>\n    fk_auditlogs_actor_member?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>\n    fk_auditlogs_related_report?: boolean | discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>\n    fk_auditlogs_related_moderation_action?: boolean | discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>\n  }\n  export type discussionboard_audit_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_auditlogs_actor_admin?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>\n    fk_auditlogs_actor_moderator?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>\n    fk_auditlogs_actor_member?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>\n    fk_auditlogs_related_report?: boolean | discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>\n    fk_auditlogs_related_moderation_action?: boolean | discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>\n  }\n  export type discussionboard_audit_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_auditlogs_actor_admin?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>\n    fk_auditlogs_actor_moderator?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>\n    fk_auditlogs_actor_member?: boolean | discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>\n    fk_auditlogs_related_report?: boolean | discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>\n    fk_auditlogs_related_moderation_action?: boolean | discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>\n  }\n\n  export type $discussionboard_audit_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_audit_logs\"\n    objects: {\n      fk_auditlogs_actor_admin: Prisma.$discussionboard_adminsPayload<ExtArgs> | null\n      fk_auditlogs_actor_moderator: Prisma.$discussionboard_moderatorsPayload<ExtArgs> | null\n      fk_auditlogs_actor_member: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n      fk_auditlogs_related_report: Prisma.$discussionboard_reportsPayload<ExtArgs> | null\n      fk_auditlogs_related_moderation_action: Prisma.$discussionboard_moderation_actionsPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for audit log entry.\n       */\n      id: string\n      /**\n       * Admin actor (if applicable): {@link discussionboard_admins.id}. Null if not admin.\n       */\n      actor_admin_id: string | null\n      /**\n       * Moderator actor (if applicable): {@link discussionboard_moderators.id}. Null if not moderator.\n       */\n      actor_moderator_id: string | null\n      /**\n       * Member actor (if applicable): {@link discussionboard_members.id}. Null if not member.\n       */\n      actor_member_id: string | null\n      /**\n       * Related report (if log is for a report event): {@link discussionboard_reports.id}. Nullable if not report-related.\n       */\n      related_report_id: string | null\n      /**\n       * Related moderation action (if log is for an action event): {@link discussionboard_moderation_actions.id}. Nullable if not related to an action.\n       */\n      related_moderation_action_id: string | null\n      /**\n       * Type of event (e.g., permission_change, status_update, ban_imposed). Controlled by business logic for audit classification. Only allowed values accepted.\n       */\n      event_type: string\n      /**\n       * Detail about the event - Implements requirement for detailed traceability. Example: 'Report status changed from pending to resolved by moderator.'\n       */\n      event_detail: string\n      /**\n       * Timestamp for the logged event. For compliance and sequencing. Required on every audit entry.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_audit_logs\"]>\n    composites: {}\n  }\n\n  type discussionboard_audit_logsGetPayload<S extends boolean | null | undefined | discussionboard_audit_logsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_audit_logsPayload, S>\n\n  type discussionboard_audit_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_audit_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_audit_logsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_audit_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_audit_logs'], meta: { name: 'discussionboard_audit_logs' } }\n    /**\n     * Find zero or one Discussionboard_audit_logs that matches the filter.\n     * @param {discussionboard_audit_logsFindUniqueArgs} args - Arguments to find a Discussionboard_audit_logs\n     * @example\n     * // Get one Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_audit_logsFindUniqueArgs>(args: SelectSubset<T, discussionboard_audit_logsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_audit_logs that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_audit_logsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_audit_logs\n     * @example\n     * // Get one Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_audit_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_audit_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_audit_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logsFindFirstArgs} args - Arguments to find a Discussionboard_audit_logs\n     * @example\n     * // Get one Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_audit_logsFindFirstArgs>(args?: SelectSubset<T, discussionboard_audit_logsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_audit_logs that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_audit_logs\n     * @example\n     * // Get one Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_audit_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_audit_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_audit_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findMany()\n     * \n     * // Get first 10 Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_audit_logsWithIdOnly = await prisma.discussionboard_audit_logs.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_audit_logsFindManyArgs>(args?: SelectSubset<T, discussionboard_audit_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logsCreateArgs} args - Arguments to create a Discussionboard_audit_logs.\n     * @example\n     * // Create one Discussionboard_audit_logs\n     * const Discussionboard_audit_logs = await prisma.discussionboard_audit_logs.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_audit_logs\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_audit_logsCreateArgs>(args: SelectSubset<T, discussionboard_audit_logsCreateArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logsCreateManyArgs} args - Arguments to create many Discussionboard_audit_logs.\n     * @example\n     * // Create many Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_audit_logsCreateManyArgs>(args?: SelectSubset<T, discussionboard_audit_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_audit_logs and returns the data saved in the database.\n     * @param {discussionboard_audit_logsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_audit_logs.\n     * @example\n     * // Create many Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_audit_logs and only return the `id`\n     * const discussionboard_audit_logsWithIdOnly = await prisma.discussionboard_audit_logs.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_audit_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_audit_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logsDeleteArgs} args - Arguments to delete one Discussionboard_audit_logs.\n     * @example\n     * // Delete one Discussionboard_audit_logs\n     * const Discussionboard_audit_logs = await prisma.discussionboard_audit_logs.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_audit_logs\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_audit_logsDeleteArgs>(args: SelectSubset<T, discussionboard_audit_logsDeleteArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logsUpdateArgs} args - Arguments to update one Discussionboard_audit_logs.\n     * @example\n     * // Update one Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_audit_logsUpdateArgs>(args: SelectSubset<T, discussionboard_audit_logsUpdateArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logsDeleteManyArgs} args - Arguments to filter Discussionboard_audit_logs to delete.\n     * @example\n     * // Delete a few Discussionboard_audit_logs\n     * const { count } = await prisma.discussionboard_audit_logs.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_audit_logsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_audit_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_audit_logsUpdateManyArgs>(args: SelectSubset<T, discussionboard_audit_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_audit_logs and returns the data updated in the database.\n     * @param {discussionboard_audit_logsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_audit_logs.\n     * @example\n     * // Update many Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_audit_logs and only return the `id`\n     * const discussionboard_audit_logsWithIdOnly = await prisma.discussionboard_audit_logs.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_audit_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_audit_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_audit_logs.\n     * @param {discussionboard_audit_logsUpsertArgs} args - Arguments to update or create a Discussionboard_audit_logs.\n     * @example\n     * // Update or create a Discussionboard_audit_logs\n     * const discussionboard_audit_logs = await prisma.discussionboard_audit_logs.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_audit_logs\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_audit_logs we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_audit_logsUpsertArgs>(args: SelectSubset<T, discussionboard_audit_logsUpsertArgs<ExtArgs>>): Prisma__discussionboard_audit_logsClient<$Result.GetResult<Prisma.$discussionboard_audit_logsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logsCountArgs} args - Arguments to filter Discussionboard_audit_logs to count.\n     * @example\n     * // Count the number of Discussionboard_audit_logs\n     * const count = await prisma.discussionboard_audit_logs.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_audit_logs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_audit_logsCountArgs>(\n      args?: Subset<T, discussionboard_audit_logsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_audit_logsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_audit_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_audit_logsAggregateArgs>(args: Subset<T, Discussionboard_audit_logsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_audit_logsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_audit_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_audit_logsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_audit_logsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_audit_logsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_audit_logsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_audit_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_audit_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_audit_logs model\n   */\n  readonly fields: discussionboard_audit_logsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_audit_logs.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_audit_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_auditlogs_actor_admin<T extends discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs>>): Prisma__discussionboard_adminsClient<$Result.GetResult<Prisma.$discussionboard_adminsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_auditlogs_actor_moderator<T extends discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs>>): Prisma__discussionboard_moderatorsClient<$Result.GetResult<Prisma.$discussionboard_moderatorsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_auditlogs_actor_member<T extends discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_auditlogs_related_report<T extends discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs>>): Prisma__discussionboard_reportsClient<$Result.GetResult<Prisma.$discussionboard_reportsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    fk_auditlogs_related_moderation_action<T extends discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs>>): Prisma__discussionboard_moderation_actionsClient<$Result.GetResult<Prisma.$discussionboard_moderation_actionsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_audit_logs model\n   */\n  interface discussionboard_audit_logsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly actor_admin_id: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly actor_moderator_id: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly actor_member_id: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly related_report_id: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly related_moderation_action_id: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly event_type: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly event_detail: FieldRef<\"discussionboard_audit_logs\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_audit_logs\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_audit_logs findUnique\n   */\n  export type discussionboard_audit_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_logs to fetch.\n     */\n    where: discussionboard_audit_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_logs findUniqueOrThrow\n   */\n  export type discussionboard_audit_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_logs to fetch.\n     */\n    where: discussionboard_audit_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_logs findFirst\n   */\n  export type discussionboard_audit_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_logs to fetch.\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_audit_logs.\n     */\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_audit_logs.\n     */\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_audit_logs findFirstOrThrow\n   */\n  export type discussionboard_audit_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_logs to fetch.\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_audit_logs.\n     */\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_audit_logs.\n     */\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_audit_logs findMany\n   */\n  export type discussionboard_audit_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_audit_logs to fetch.\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_audit_logs to fetch.\n     */\n    orderBy?: discussionboard_audit_logsOrderByWithRelationInput | discussionboard_audit_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_audit_logs.\n     */\n    cursor?: discussionboard_audit_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_audit_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_audit_logs.\n     */\n    skip?: number\n    distinct?: Discussionboard_audit_logsScalarFieldEnum | Discussionboard_audit_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_audit_logs create\n   */\n  export type discussionboard_audit_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_audit_logs.\n     */\n    data: XOR<discussionboard_audit_logsCreateInput, discussionboard_audit_logsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_audit_logs createMany\n   */\n  export type discussionboard_audit_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_audit_logs.\n     */\n    data: discussionboard_audit_logsCreateManyInput | discussionboard_audit_logsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_audit_logs createManyAndReturn\n   */\n  export type discussionboard_audit_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_audit_logs.\n     */\n    data: discussionboard_audit_logsCreateManyInput | discussionboard_audit_logsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_audit_logs update\n   */\n  export type discussionboard_audit_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_audit_logs.\n     */\n    data: XOR<discussionboard_audit_logsUpdateInput, discussionboard_audit_logsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_audit_logs to update.\n     */\n    where: discussionboard_audit_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_logs updateMany\n   */\n  export type discussionboard_audit_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_audit_logs.\n     */\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_audit_logs to update\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * Limit how many discussionboard_audit_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_audit_logs updateManyAndReturn\n   */\n  export type discussionboard_audit_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_audit_logs.\n     */\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_audit_logs to update\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * Limit how many discussionboard_audit_logs to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_audit_logs upsert\n   */\n  export type discussionboard_audit_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_audit_logs to update in case it exists.\n     */\n    where: discussionboard_audit_logsWhereUniqueInput\n    /**\n     * In case the discussionboard_audit_logs found by the `where` argument doesn't exist, create a new discussionboard_audit_logs with this data.\n     */\n    create: XOR<discussionboard_audit_logsCreateInput, discussionboard_audit_logsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_audit_logs was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_audit_logsUpdateInput, discussionboard_audit_logsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_audit_logs delete\n   */\n  export type discussionboard_audit_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_audit_logs to delete.\n     */\n    where: discussionboard_audit_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_audit_logs deleteMany\n   */\n  export type discussionboard_audit_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_audit_logs to delete\n     */\n    where?: discussionboard_audit_logsWhereInput\n    /**\n     * Limit how many discussionboard_audit_logs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_audit_logs.fk_auditlogs_actor_admin\n   */\n  export type discussionboard_audit_logs$fk_auditlogs_actor_adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_admins\n     */\n    select?: discussionboard_adminsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_admins\n     */\n    omit?: discussionboard_adminsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_adminsInclude<ExtArgs> | null\n    where?: discussionboard_adminsWhereInput\n  }\n\n  /**\n   * discussionboard_audit_logs.fk_auditlogs_actor_moderator\n   */\n  export type discussionboard_audit_logs$fk_auditlogs_actor_moderatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderators\n     */\n    select?: discussionboard_moderatorsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderators\n     */\n    omit?: discussionboard_moderatorsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderatorsInclude<ExtArgs> | null\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  /**\n   * discussionboard_audit_logs.fk_auditlogs_actor_member\n   */\n  export type discussionboard_audit_logs$fk_auditlogs_actor_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_audit_logs.fk_auditlogs_related_report\n   */\n  export type discussionboard_audit_logs$fk_auditlogs_related_reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_reports\n     */\n    select?: discussionboard_reportsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_reports\n     */\n    omit?: discussionboard_reportsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_reportsInclude<ExtArgs> | null\n    where?: discussionboard_reportsWhereInput\n  }\n\n  /**\n   * discussionboard_audit_logs.fk_auditlogs_related_moderation_action\n   */\n  export type discussionboard_audit_logs$fk_auditlogs_related_moderation_actionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_moderation_actions\n     */\n    select?: discussionboard_moderation_actionsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_moderation_actions\n     */\n    omit?: discussionboard_moderation_actionsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_moderation_actionsInclude<ExtArgs> | null\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n  /**\n   * discussionboard_audit_logs without action\n   */\n  export type discussionboard_audit_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_audit_logs\n     */\n    select?: discussionboard_audit_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_audit_logs\n     */\n    omit?: discussionboard_audit_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_audit_logsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_community_guidelines\n   */\n\n  export type AggregateDiscussionboard_community_guidelines = {\n    _count: Discussionboard_community_guidelinesCountAggregateOutputType | null\n    _avg: Discussionboard_community_guidelinesAvgAggregateOutputType | null\n    _sum: Discussionboard_community_guidelinesSumAggregateOutputType | null\n    _min: Discussionboard_community_guidelinesMinAggregateOutputType | null\n    _max: Discussionboard_community_guidelinesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_community_guidelinesAvgAggregateOutputType = {\n    order_index: number | null\n  }\n\n  export type Discussionboard_community_guidelinesSumAggregateOutputType = {\n    order_index: number | null\n  }\n\n  export type Discussionboard_community_guidelinesMinAggregateOutputType = {\n    id: string | null\n    title: string | null\n    body: string | null\n    order_index: number | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_community_guidelinesMaxAggregateOutputType = {\n    id: string | null\n    title: string | null\n    body: string | null\n    order_index: number | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_community_guidelinesCountAggregateOutputType = {\n    id: number\n    title: number\n    body: number\n    order_index: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_community_guidelinesAvgAggregateInputType = {\n    order_index?: true\n  }\n\n  export type Discussionboard_community_guidelinesSumAggregateInputType = {\n    order_index?: true\n  }\n\n  export type Discussionboard_community_guidelinesMinAggregateInputType = {\n    id?: true\n    title?: true\n    body?: true\n    order_index?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_community_guidelinesMaxAggregateInputType = {\n    id?: true\n    title?: true\n    body?: true\n    order_index?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_community_guidelinesCountAggregateInputType = {\n    id?: true\n    title?: true\n    body?: true\n    order_index?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_community_guidelinesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_community_guidelines to aggregate.\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_community_guidelines to fetch.\n     */\n    orderBy?: discussionboard_community_guidelinesOrderByWithRelationInput | discussionboard_community_guidelinesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_community_guidelinesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_community_guidelines from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_community_guidelines.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_community_guidelines\n    **/\n    _count?: true | Discussionboard_community_guidelinesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Discussionboard_community_guidelinesAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Discussionboard_community_guidelinesSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_community_guidelinesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_community_guidelinesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_community_guidelinesAggregateType<T extends Discussionboard_community_guidelinesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_community_guidelines]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_community_guidelines[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_community_guidelines[P]>\n  }\n\n\n\n\n  export type discussionboard_community_guidelinesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_community_guidelinesWhereInput\n    orderBy?: discussionboard_community_guidelinesOrderByWithAggregationInput | discussionboard_community_guidelinesOrderByWithAggregationInput[]\n    by: Discussionboard_community_guidelinesScalarFieldEnum[] | Discussionboard_community_guidelinesScalarFieldEnum\n    having?: discussionboard_community_guidelinesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_community_guidelinesCountAggregateInputType | true\n    _avg?: Discussionboard_community_guidelinesAvgAggregateInputType\n    _sum?: Discussionboard_community_guidelinesSumAggregateInputType\n    _min?: Discussionboard_community_guidelinesMinAggregateInputType\n    _max?: Discussionboard_community_guidelinesMaxAggregateInputType\n  }\n\n  export type Discussionboard_community_guidelinesGroupByOutputType = {\n    id: string\n    title: string\n    body: string\n    order_index: number\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_community_guidelinesCountAggregateOutputType | null\n    _avg: Discussionboard_community_guidelinesAvgAggregateOutputType | null\n    _sum: Discussionboard_community_guidelinesSumAggregateOutputType | null\n    _min: Discussionboard_community_guidelinesMinAggregateOutputType | null\n    _max: Discussionboard_community_guidelinesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_community_guidelinesGroupByPayload<T extends discussionboard_community_guidelinesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_community_guidelinesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_community_guidelinesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_community_guidelinesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_community_guidelinesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_community_guidelinesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    title?: boolean\n    body?: boolean\n    order_index?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_community_guidelines\"]>\n\n  export type discussionboard_community_guidelinesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    title?: boolean\n    body?: boolean\n    order_index?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_community_guidelines\"]>\n\n  export type discussionboard_community_guidelinesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    title?: boolean\n    body?: boolean\n    order_index?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_community_guidelines\"]>\n\n  export type discussionboard_community_guidelinesSelectScalar = {\n    id?: boolean\n    title?: boolean\n    body?: boolean\n    order_index?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_community_guidelinesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"title\" | \"body\" | \"order_index\" | \"is_active\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_community_guidelines\"]>\n\n  export type $discussionboard_community_guidelinesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_community_guidelines\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for this guideline entry.\n       */\n      id: string\n      /**\n       * Title of the guideline section - Implements requirement for clear, organized guideline presentation to users. For example, 'Posting Etiquette' or 'Prohibited Conduct.' Ensures normalization by storing as an atomic value.\n       */\n      title: string\n      /**\n       * Full content text of the guideline - Implements detailed community rule requirements. For example, 'Do not post personal attacks or hate speech.' Normalized 3NF, no derived/consolidated data.\n       */\n      body: string\n      /**\n       * Display order for this guideline - Required for user experience sequencing in guideline displays. Ensures atomicity and flexibility, supports updates without data duplication.\n       */\n      order_index: number\n      /**\n       * Whether this guideline is currently enforced - Implements admin control of active/inactive statuses for evolving policy. For example, deactivating outdated rules. Ensures compliance with requirement to support updates and changes.\n       */\n      is_active: boolean\n      /**\n       * Timestamp when guideline was created - Supports audit logging (requirement 2.6), and helps track policy evolution over time. Atomic value, part of full normalization.\n       */\n      created_at: Date\n      /**\n       * Timestamp when guideline was last updated. Ensures full auditability of content changes. 3NF compliance.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_community_guidelines\"]>\n    composites: {}\n  }\n\n  type discussionboard_community_guidelinesGetPayload<S extends boolean | null | undefined | discussionboard_community_guidelinesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload, S>\n\n  type discussionboard_community_guidelinesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_community_guidelinesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_community_guidelinesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_community_guidelinesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_community_guidelines'], meta: { name: 'discussionboard_community_guidelines' } }\n    /**\n     * Find zero or one Discussionboard_community_guidelines that matches the filter.\n     * @param {discussionboard_community_guidelinesFindUniqueArgs} args - Arguments to find a Discussionboard_community_guidelines\n     * @example\n     * // Get one Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_community_guidelinesFindUniqueArgs>(args: SelectSubset<T, discussionboard_community_guidelinesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_community_guidelines that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_community_guidelinesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_community_guidelines\n     * @example\n     * // Get one Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_community_guidelinesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_community_guidelinesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_community_guidelines that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_community_guidelinesFindFirstArgs} args - Arguments to find a Discussionboard_community_guidelines\n     * @example\n     * // Get one Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_community_guidelinesFindFirstArgs>(args?: SelectSubset<T, discussionboard_community_guidelinesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_community_guidelines that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_community_guidelinesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_community_guidelines\n     * @example\n     * // Get one Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_community_guidelinesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_community_guidelinesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_community_guidelines that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_community_guidelinesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findMany()\n     * \n     * // Get first 10 Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_community_guidelinesWithIdOnly = await prisma.discussionboard_community_guidelines.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_community_guidelinesFindManyArgs>(args?: SelectSubset<T, discussionboard_community_guidelinesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_community_guidelines.\n     * @param {discussionboard_community_guidelinesCreateArgs} args - Arguments to create a Discussionboard_community_guidelines.\n     * @example\n     * // Create one Discussionboard_community_guidelines\n     * const Discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_community_guidelines\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_community_guidelinesCreateArgs>(args: SelectSubset<T, discussionboard_community_guidelinesCreateArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_community_guidelines.\n     * @param {discussionboard_community_guidelinesCreateManyArgs} args - Arguments to create many Discussionboard_community_guidelines.\n     * @example\n     * // Create many Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_community_guidelinesCreateManyArgs>(args?: SelectSubset<T, discussionboard_community_guidelinesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_community_guidelines and returns the data saved in the database.\n     * @param {discussionboard_community_guidelinesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_community_guidelines.\n     * @example\n     * // Create many Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_community_guidelines and only return the `id`\n     * const discussionboard_community_guidelinesWithIdOnly = await prisma.discussionboard_community_guidelines.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_community_guidelinesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_community_guidelinesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_community_guidelines.\n     * @param {discussionboard_community_guidelinesDeleteArgs} args - Arguments to delete one Discussionboard_community_guidelines.\n     * @example\n     * // Delete one Discussionboard_community_guidelines\n     * const Discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_community_guidelines\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_community_guidelinesDeleteArgs>(args: SelectSubset<T, discussionboard_community_guidelinesDeleteArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_community_guidelines.\n     * @param {discussionboard_community_guidelinesUpdateArgs} args - Arguments to update one Discussionboard_community_guidelines.\n     * @example\n     * // Update one Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_community_guidelinesUpdateArgs>(args: SelectSubset<T, discussionboard_community_guidelinesUpdateArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_community_guidelines.\n     * @param {discussionboard_community_guidelinesDeleteManyArgs} args - Arguments to filter Discussionboard_community_guidelines to delete.\n     * @example\n     * // Delete a few Discussionboard_community_guidelines\n     * const { count } = await prisma.discussionboard_community_guidelines.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_community_guidelinesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_community_guidelinesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_community_guidelines.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_community_guidelinesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_community_guidelinesUpdateManyArgs>(args: SelectSubset<T, discussionboard_community_guidelinesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_community_guidelines and returns the data updated in the database.\n     * @param {discussionboard_community_guidelinesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_community_guidelines.\n     * @example\n     * // Update many Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_community_guidelines and only return the `id`\n     * const discussionboard_community_guidelinesWithIdOnly = await prisma.discussionboard_community_guidelines.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_community_guidelinesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_community_guidelinesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_community_guidelines.\n     * @param {discussionboard_community_guidelinesUpsertArgs} args - Arguments to update or create a Discussionboard_community_guidelines.\n     * @example\n     * // Update or create a Discussionboard_community_guidelines\n     * const discussionboard_community_guidelines = await prisma.discussionboard_community_guidelines.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_community_guidelines\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_community_guidelines we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_community_guidelinesUpsertArgs>(args: SelectSubset<T, discussionboard_community_guidelinesUpsertArgs<ExtArgs>>): Prisma__discussionboard_community_guidelinesClient<$Result.GetResult<Prisma.$discussionboard_community_guidelinesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_community_guidelines.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_community_guidelinesCountArgs} args - Arguments to filter Discussionboard_community_guidelines to count.\n     * @example\n     * // Count the number of Discussionboard_community_guidelines\n     * const count = await prisma.discussionboard_community_guidelines.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_community_guidelines we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_community_guidelinesCountArgs>(\n      args?: Subset<T, discussionboard_community_guidelinesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_community_guidelinesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_community_guidelines.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_community_guidelinesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_community_guidelinesAggregateArgs>(args: Subset<T, Discussionboard_community_guidelinesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_community_guidelinesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_community_guidelines.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_community_guidelinesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_community_guidelinesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_community_guidelinesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_community_guidelinesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_community_guidelinesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_community_guidelinesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_community_guidelines model\n   */\n  readonly fields: discussionboard_community_guidelinesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_community_guidelines.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_community_guidelinesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_community_guidelines model\n   */\n  interface discussionboard_community_guidelinesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_community_guidelines\", 'String'>\n    readonly title: FieldRef<\"discussionboard_community_guidelines\", 'String'>\n    readonly body: FieldRef<\"discussionboard_community_guidelines\", 'String'>\n    readonly order_index: FieldRef<\"discussionboard_community_guidelines\", 'Int'>\n    readonly is_active: FieldRef<\"discussionboard_community_guidelines\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_community_guidelines\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_community_guidelines\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_community_guidelines findUnique\n   */\n  export type discussionboard_community_guidelinesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_community_guidelines to fetch.\n     */\n    where: discussionboard_community_guidelinesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_community_guidelines findUniqueOrThrow\n   */\n  export type discussionboard_community_guidelinesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_community_guidelines to fetch.\n     */\n    where: discussionboard_community_guidelinesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_community_guidelines findFirst\n   */\n  export type discussionboard_community_guidelinesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_community_guidelines to fetch.\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_community_guidelines to fetch.\n     */\n    orderBy?: discussionboard_community_guidelinesOrderByWithRelationInput | discussionboard_community_guidelinesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_community_guidelines.\n     */\n    cursor?: discussionboard_community_guidelinesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_community_guidelines from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_community_guidelines.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_community_guidelines.\n     */\n    distinct?: Discussionboard_community_guidelinesScalarFieldEnum | Discussionboard_community_guidelinesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_community_guidelines findFirstOrThrow\n   */\n  export type discussionboard_community_guidelinesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_community_guidelines to fetch.\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_community_guidelines to fetch.\n     */\n    orderBy?: discussionboard_community_guidelinesOrderByWithRelationInput | discussionboard_community_guidelinesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_community_guidelines.\n     */\n    cursor?: discussionboard_community_guidelinesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_community_guidelines from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_community_guidelines.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_community_guidelines.\n     */\n    distinct?: Discussionboard_community_guidelinesScalarFieldEnum | Discussionboard_community_guidelinesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_community_guidelines findMany\n   */\n  export type discussionboard_community_guidelinesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_community_guidelines to fetch.\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_community_guidelines to fetch.\n     */\n    orderBy?: discussionboard_community_guidelinesOrderByWithRelationInput | discussionboard_community_guidelinesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_community_guidelines.\n     */\n    cursor?: discussionboard_community_guidelinesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_community_guidelines from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_community_guidelines.\n     */\n    skip?: number\n    distinct?: Discussionboard_community_guidelinesScalarFieldEnum | Discussionboard_community_guidelinesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_community_guidelines create\n   */\n  export type discussionboard_community_guidelinesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_community_guidelines.\n     */\n    data: XOR<discussionboard_community_guidelinesCreateInput, discussionboard_community_guidelinesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_community_guidelines createMany\n   */\n  export type discussionboard_community_guidelinesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_community_guidelines.\n     */\n    data: discussionboard_community_guidelinesCreateManyInput | discussionboard_community_guidelinesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_community_guidelines createManyAndReturn\n   */\n  export type discussionboard_community_guidelinesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_community_guidelines.\n     */\n    data: discussionboard_community_guidelinesCreateManyInput | discussionboard_community_guidelinesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_community_guidelines update\n   */\n  export type discussionboard_community_guidelinesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_community_guidelines.\n     */\n    data: XOR<discussionboard_community_guidelinesUpdateInput, discussionboard_community_guidelinesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_community_guidelines to update.\n     */\n    where: discussionboard_community_guidelinesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_community_guidelines updateMany\n   */\n  export type discussionboard_community_guidelinesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_community_guidelines.\n     */\n    data: XOR<discussionboard_community_guidelinesUpdateManyMutationInput, discussionboard_community_guidelinesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_community_guidelines to update\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * Limit how many discussionboard_community_guidelines to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_community_guidelines updateManyAndReturn\n   */\n  export type discussionboard_community_guidelinesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_community_guidelines.\n     */\n    data: XOR<discussionboard_community_guidelinesUpdateManyMutationInput, discussionboard_community_guidelinesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_community_guidelines to update\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * Limit how many discussionboard_community_guidelines to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_community_guidelines upsert\n   */\n  export type discussionboard_community_guidelinesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_community_guidelines to update in case it exists.\n     */\n    where: discussionboard_community_guidelinesWhereUniqueInput\n    /**\n     * In case the discussionboard_community_guidelines found by the `where` argument doesn't exist, create a new discussionboard_community_guidelines with this data.\n     */\n    create: XOR<discussionboard_community_guidelinesCreateInput, discussionboard_community_guidelinesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_community_guidelines was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_community_guidelinesUpdateInput, discussionboard_community_guidelinesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_community_guidelines delete\n   */\n  export type discussionboard_community_guidelinesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_community_guidelines to delete.\n     */\n    where: discussionboard_community_guidelinesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_community_guidelines deleteMany\n   */\n  export type discussionboard_community_guidelinesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_community_guidelines to delete\n     */\n    where?: discussionboard_community_guidelinesWhereInput\n    /**\n     * Limit how many discussionboard_community_guidelines to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_community_guidelines without action\n   */\n  export type discussionboard_community_guidelinesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_community_guidelines\n     */\n    select?: discussionboard_community_guidelinesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_community_guidelines\n     */\n    omit?: discussionboard_community_guidelinesOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_content_policies\n   */\n\n  export type AggregateDiscussionboard_content_policies = {\n    _count: Discussionboard_content_policiesCountAggregateOutputType | null\n    _min: Discussionboard_content_policiesMinAggregateOutputType | null\n    _max: Discussionboard_content_policiesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_content_policiesMinAggregateOutputType = {\n    id: string | null\n    policy_code: string | null\n    description: string | null\n    category: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_content_policiesMaxAggregateOutputType = {\n    id: string | null\n    policy_code: string | null\n    description: string | null\n    category: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_content_policiesCountAggregateOutputType = {\n    id: number\n    policy_code: number\n    description: number\n    category: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_content_policiesMinAggregateInputType = {\n    id?: true\n    policy_code?: true\n    description?: true\n    category?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_content_policiesMaxAggregateInputType = {\n    id?: true\n    policy_code?: true\n    description?: true\n    category?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_content_policiesCountAggregateInputType = {\n    id?: true\n    policy_code?: true\n    description?: true\n    category?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_content_policiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_content_policies to aggregate.\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_content_policies to fetch.\n     */\n    orderBy?: discussionboard_content_policiesOrderByWithRelationInput | discussionboard_content_policiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_content_policiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_content_policies from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_content_policies.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_content_policies\n    **/\n    _count?: true | Discussionboard_content_policiesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_content_policiesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_content_policiesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_content_policiesAggregateType<T extends Discussionboard_content_policiesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_content_policies]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_content_policies[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_content_policies[P]>\n  }\n\n\n\n\n  export type discussionboard_content_policiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_content_policiesWhereInput\n    orderBy?: discussionboard_content_policiesOrderByWithAggregationInput | discussionboard_content_policiesOrderByWithAggregationInput[]\n    by: Discussionboard_content_policiesScalarFieldEnum[] | Discussionboard_content_policiesScalarFieldEnum\n    having?: discussionboard_content_policiesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_content_policiesCountAggregateInputType | true\n    _min?: Discussionboard_content_policiesMinAggregateInputType\n    _max?: Discussionboard_content_policiesMaxAggregateInputType\n  }\n\n  export type Discussionboard_content_policiesGroupByOutputType = {\n    id: string\n    policy_code: string\n    description: string\n    category: string\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_content_policiesCountAggregateOutputType | null\n    _min: Discussionboard_content_policiesMinAggregateOutputType | null\n    _max: Discussionboard_content_policiesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_content_policiesGroupByPayload<T extends discussionboard_content_policiesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_content_policiesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_content_policiesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_content_policiesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_content_policiesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_content_policiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    policy_code?: boolean\n    description?: boolean\n    category?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_content_policies\"]>\n\n  export type discussionboard_content_policiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    policy_code?: boolean\n    description?: boolean\n    category?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_content_policies\"]>\n\n  export type discussionboard_content_policiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    policy_code?: boolean\n    description?: boolean\n    category?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_content_policies\"]>\n\n  export type discussionboard_content_policiesSelectScalar = {\n    id?: boolean\n    policy_code?: boolean\n    description?: boolean\n    category?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_content_policiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"policy_code\" | \"description\" | \"category\" | \"is_active\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_content_policies\"]>\n\n  export type $discussionboard_content_policiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_content_policies\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for this content policy rule.\n       */\n      id: string\n      /**\n       * Short code or name for this content policy - Implements requirement for structured policy documentation and reference. Enables quick lookup and enforcement. For example, 'NO_HATE_SPEECH', 'NO_SPAM'.\n       */\n      policy_code: string\n      /**\n       * Detailed description of the content policy - Implements policy communication and moderator clarity requirements. For example, 'Any content promoting violence is strictly prohibited.' 3NF.\n       */\n      description: string\n      /**\n       * Category or policy group - Implements requirement to organize content policies by type, e.g., 'Spam', 'Abuse', 'Copyright'. Ensures normalization by avoiding transitive dependencies.\n       */\n      category: string\n      /**\n       * Whether this policy is active/enforced - Needed for content policy versioning and update flows. For example, deactivating obsolete policies. Ensures atomicity.\n       */\n      is_active: boolean\n      /**\n       * Timestamp when this policy was created. Required for audit trails and rollback scenarios (requirements 2.6, 4).\n       */\n      created_at: Date\n      /**\n       * Timestamp when this policy was last updated - Ensures full auditability and supports policy review schedules.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_content_policies\"]>\n    composites: {}\n  }\n\n  type discussionboard_content_policiesGetPayload<S extends boolean | null | undefined | discussionboard_content_policiesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_content_policiesPayload, S>\n\n  type discussionboard_content_policiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_content_policiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_content_policiesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_content_policiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_content_policies'], meta: { name: 'discussionboard_content_policies' } }\n    /**\n     * Find zero or one Discussionboard_content_policies that matches the filter.\n     * @param {discussionboard_content_policiesFindUniqueArgs} args - Arguments to find a Discussionboard_content_policies\n     * @example\n     * // Get one Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_content_policiesFindUniqueArgs>(args: SelectSubset<T, discussionboard_content_policiesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_content_policies that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_content_policiesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_content_policies\n     * @example\n     * // Get one Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_content_policiesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_content_policiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_content_policies that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_content_policiesFindFirstArgs} args - Arguments to find a Discussionboard_content_policies\n     * @example\n     * // Get one Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_content_policiesFindFirstArgs>(args?: SelectSubset<T, discussionboard_content_policiesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_content_policies that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_content_policiesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_content_policies\n     * @example\n     * // Get one Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_content_policiesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_content_policiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_content_policies that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_content_policiesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findMany()\n     * \n     * // Get first 10 Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_content_policiesWithIdOnly = await prisma.discussionboard_content_policies.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_content_policiesFindManyArgs>(args?: SelectSubset<T, discussionboard_content_policiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_content_policies.\n     * @param {discussionboard_content_policiesCreateArgs} args - Arguments to create a Discussionboard_content_policies.\n     * @example\n     * // Create one Discussionboard_content_policies\n     * const Discussionboard_content_policies = await prisma.discussionboard_content_policies.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_content_policies\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_content_policiesCreateArgs>(args: SelectSubset<T, discussionboard_content_policiesCreateArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_content_policies.\n     * @param {discussionboard_content_policiesCreateManyArgs} args - Arguments to create many Discussionboard_content_policies.\n     * @example\n     * // Create many Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_content_policiesCreateManyArgs>(args?: SelectSubset<T, discussionboard_content_policiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_content_policies and returns the data saved in the database.\n     * @param {discussionboard_content_policiesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_content_policies.\n     * @example\n     * // Create many Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_content_policies and only return the `id`\n     * const discussionboard_content_policiesWithIdOnly = await prisma.discussionboard_content_policies.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_content_policiesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_content_policiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_content_policies.\n     * @param {discussionboard_content_policiesDeleteArgs} args - Arguments to delete one Discussionboard_content_policies.\n     * @example\n     * // Delete one Discussionboard_content_policies\n     * const Discussionboard_content_policies = await prisma.discussionboard_content_policies.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_content_policies\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_content_policiesDeleteArgs>(args: SelectSubset<T, discussionboard_content_policiesDeleteArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_content_policies.\n     * @param {discussionboard_content_policiesUpdateArgs} args - Arguments to update one Discussionboard_content_policies.\n     * @example\n     * // Update one Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_content_policiesUpdateArgs>(args: SelectSubset<T, discussionboard_content_policiesUpdateArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_content_policies.\n     * @param {discussionboard_content_policiesDeleteManyArgs} args - Arguments to filter Discussionboard_content_policies to delete.\n     * @example\n     * // Delete a few Discussionboard_content_policies\n     * const { count } = await prisma.discussionboard_content_policies.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_content_policiesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_content_policiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_content_policies.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_content_policiesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_content_policiesUpdateManyArgs>(args: SelectSubset<T, discussionboard_content_policiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_content_policies and returns the data updated in the database.\n     * @param {discussionboard_content_policiesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_content_policies.\n     * @example\n     * // Update many Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_content_policies and only return the `id`\n     * const discussionboard_content_policiesWithIdOnly = await prisma.discussionboard_content_policies.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_content_policiesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_content_policiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_content_policies.\n     * @param {discussionboard_content_policiesUpsertArgs} args - Arguments to update or create a Discussionboard_content_policies.\n     * @example\n     * // Update or create a Discussionboard_content_policies\n     * const discussionboard_content_policies = await prisma.discussionboard_content_policies.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_content_policies\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_content_policies we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_content_policiesUpsertArgs>(args: SelectSubset<T, discussionboard_content_policiesUpsertArgs<ExtArgs>>): Prisma__discussionboard_content_policiesClient<$Result.GetResult<Prisma.$discussionboard_content_policiesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_content_policies.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_content_policiesCountArgs} args - Arguments to filter Discussionboard_content_policies to count.\n     * @example\n     * // Count the number of Discussionboard_content_policies\n     * const count = await prisma.discussionboard_content_policies.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_content_policies we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_content_policiesCountArgs>(\n      args?: Subset<T, discussionboard_content_policiesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_content_policiesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_content_policies.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_content_policiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_content_policiesAggregateArgs>(args: Subset<T, Discussionboard_content_policiesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_content_policiesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_content_policies.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_content_policiesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_content_policiesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_content_policiesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_content_policiesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_content_policiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_content_policiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_content_policies model\n   */\n  readonly fields: discussionboard_content_policiesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_content_policies.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_content_policiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_content_policies model\n   */\n  interface discussionboard_content_policiesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_content_policies\", 'String'>\n    readonly policy_code: FieldRef<\"discussionboard_content_policies\", 'String'>\n    readonly description: FieldRef<\"discussionboard_content_policies\", 'String'>\n    readonly category: FieldRef<\"discussionboard_content_policies\", 'String'>\n    readonly is_active: FieldRef<\"discussionboard_content_policies\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_content_policies\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_content_policies\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_content_policies findUnique\n   */\n  export type discussionboard_content_policiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_content_policies to fetch.\n     */\n    where: discussionboard_content_policiesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_content_policies findUniqueOrThrow\n   */\n  export type discussionboard_content_policiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_content_policies to fetch.\n     */\n    where: discussionboard_content_policiesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_content_policies findFirst\n   */\n  export type discussionboard_content_policiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_content_policies to fetch.\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_content_policies to fetch.\n     */\n    orderBy?: discussionboard_content_policiesOrderByWithRelationInput | discussionboard_content_policiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_content_policies.\n     */\n    cursor?: discussionboard_content_policiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_content_policies from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_content_policies.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_content_policies.\n     */\n    distinct?: Discussionboard_content_policiesScalarFieldEnum | Discussionboard_content_policiesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_content_policies findFirstOrThrow\n   */\n  export type discussionboard_content_policiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_content_policies to fetch.\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_content_policies to fetch.\n     */\n    orderBy?: discussionboard_content_policiesOrderByWithRelationInput | discussionboard_content_policiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_content_policies.\n     */\n    cursor?: discussionboard_content_policiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_content_policies from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_content_policies.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_content_policies.\n     */\n    distinct?: Discussionboard_content_policiesScalarFieldEnum | Discussionboard_content_policiesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_content_policies findMany\n   */\n  export type discussionboard_content_policiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_content_policies to fetch.\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_content_policies to fetch.\n     */\n    orderBy?: discussionboard_content_policiesOrderByWithRelationInput | discussionboard_content_policiesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_content_policies.\n     */\n    cursor?: discussionboard_content_policiesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_content_policies from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_content_policies.\n     */\n    skip?: number\n    distinct?: Discussionboard_content_policiesScalarFieldEnum | Discussionboard_content_policiesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_content_policies create\n   */\n  export type discussionboard_content_policiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_content_policies.\n     */\n    data: XOR<discussionboard_content_policiesCreateInput, discussionboard_content_policiesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_content_policies createMany\n   */\n  export type discussionboard_content_policiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_content_policies.\n     */\n    data: discussionboard_content_policiesCreateManyInput | discussionboard_content_policiesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_content_policies createManyAndReturn\n   */\n  export type discussionboard_content_policiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_content_policies.\n     */\n    data: discussionboard_content_policiesCreateManyInput | discussionboard_content_policiesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_content_policies update\n   */\n  export type discussionboard_content_policiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_content_policies.\n     */\n    data: XOR<discussionboard_content_policiesUpdateInput, discussionboard_content_policiesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_content_policies to update.\n     */\n    where: discussionboard_content_policiesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_content_policies updateMany\n   */\n  export type discussionboard_content_policiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_content_policies.\n     */\n    data: XOR<discussionboard_content_policiesUpdateManyMutationInput, discussionboard_content_policiesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_content_policies to update\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * Limit how many discussionboard_content_policies to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_content_policies updateManyAndReturn\n   */\n  export type discussionboard_content_policiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_content_policies.\n     */\n    data: XOR<discussionboard_content_policiesUpdateManyMutationInput, discussionboard_content_policiesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_content_policies to update\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * Limit how many discussionboard_content_policies to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_content_policies upsert\n   */\n  export type discussionboard_content_policiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_content_policies to update in case it exists.\n     */\n    where: discussionboard_content_policiesWhereUniqueInput\n    /**\n     * In case the discussionboard_content_policies found by the `where` argument doesn't exist, create a new discussionboard_content_policies with this data.\n     */\n    create: XOR<discussionboard_content_policiesCreateInput, discussionboard_content_policiesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_content_policies was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_content_policiesUpdateInput, discussionboard_content_policiesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_content_policies delete\n   */\n  export type discussionboard_content_policiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_content_policies to delete.\n     */\n    where: discussionboard_content_policiesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_content_policies deleteMany\n   */\n  export type discussionboard_content_policiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_content_policies to delete\n     */\n    where?: discussionboard_content_policiesWhereInput\n    /**\n     * Limit how many discussionboard_content_policies to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_content_policies without action\n   */\n  export type discussionboard_content_policiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_content_policies\n     */\n    select?: discussionboard_content_policiesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_content_policies\n     */\n    omit?: discussionboard_content_policiesOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_profanity_filters\n   */\n\n  export type AggregateDiscussionboard_profanity_filters = {\n    _count: Discussionboard_profanity_filtersCountAggregateOutputType | null\n    _min: Discussionboard_profanity_filtersMinAggregateOutputType | null\n    _max: Discussionboard_profanity_filtersMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_profanity_filtersMinAggregateOutputType = {\n    id: string | null\n    word: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_profanity_filtersMaxAggregateOutputType = {\n    id: string | null\n    word: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_profanity_filtersCountAggregateOutputType = {\n    id: number\n    word: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_profanity_filtersMinAggregateInputType = {\n    id?: true\n    word?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_profanity_filtersMaxAggregateInputType = {\n    id?: true\n    word?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_profanity_filtersCountAggregateInputType = {\n    id?: true\n    word?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_profanity_filtersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_profanity_filters to aggregate.\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_profanity_filters to fetch.\n     */\n    orderBy?: discussionboard_profanity_filtersOrderByWithRelationInput | discussionboard_profanity_filtersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_profanity_filtersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_profanity_filters from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_profanity_filters.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_profanity_filters\n    **/\n    _count?: true | Discussionboard_profanity_filtersCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_profanity_filtersMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_profanity_filtersMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_profanity_filtersAggregateType<T extends Discussionboard_profanity_filtersAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_profanity_filters]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_profanity_filters[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_profanity_filters[P]>\n  }\n\n\n\n\n  export type discussionboard_profanity_filtersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_profanity_filtersWhereInput\n    orderBy?: discussionboard_profanity_filtersOrderByWithAggregationInput | discussionboard_profanity_filtersOrderByWithAggregationInput[]\n    by: Discussionboard_profanity_filtersScalarFieldEnum[] | Discussionboard_profanity_filtersScalarFieldEnum\n    having?: discussionboard_profanity_filtersScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_profanity_filtersCountAggregateInputType | true\n    _min?: Discussionboard_profanity_filtersMinAggregateInputType\n    _max?: Discussionboard_profanity_filtersMaxAggregateInputType\n  }\n\n  export type Discussionboard_profanity_filtersGroupByOutputType = {\n    id: string\n    word: string\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_profanity_filtersCountAggregateOutputType | null\n    _min: Discussionboard_profanity_filtersMinAggregateOutputType | null\n    _max: Discussionboard_profanity_filtersMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_profanity_filtersGroupByPayload<T extends discussionboard_profanity_filtersGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_profanity_filtersGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_profanity_filtersGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_profanity_filtersGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_profanity_filtersGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_profanity_filtersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    word?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_profanity_filters\"]>\n\n  export type discussionboard_profanity_filtersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    word?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_profanity_filters\"]>\n\n  export type discussionboard_profanity_filtersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    word?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_profanity_filters\"]>\n\n  export type discussionboard_profanity_filtersSelectScalar = {\n    id?: boolean\n    word?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_profanity_filtersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"word\" | \"is_active\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_profanity_filters\"]>\n\n  export type $discussionboard_profanity_filtersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_profanity_filters\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique ID for this profanity filter entry.\n       */\n      id: string\n      /**\n       * Word or phrase to be filtered - Implements requirement for configurable, updatable profanity filtering. Ensures normalized storage. For example, 'badword'.\n       */\n      word: string\n      /**\n       * Whether this word is currently being filtered - Required for admin update flexibility. For example, suspending words from filter lists. Atomic value.\n       */\n      is_active: boolean\n      /**\n       * When this filter entry was created - For auditability and policy management. 3NF value.\n       */\n      created_at: Date\n      /**\n       * When this filter entry was last updated - Needed for rollbacks or removals in system logs, part of full normalization.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_profanity_filters\"]>\n    composites: {}\n  }\n\n  type discussionboard_profanity_filtersGetPayload<S extends boolean | null | undefined | discussionboard_profanity_filtersDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload, S>\n\n  type discussionboard_profanity_filtersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_profanity_filtersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_profanity_filtersCountAggregateInputType | true\n    }\n\n  export interface discussionboard_profanity_filtersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_profanity_filters'], meta: { name: 'discussionboard_profanity_filters' } }\n    /**\n     * Find zero or one Discussionboard_profanity_filters that matches the filter.\n     * @param {discussionboard_profanity_filtersFindUniqueArgs} args - Arguments to find a Discussionboard_profanity_filters\n     * @example\n     * // Get one Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_profanity_filtersFindUniqueArgs>(args: SelectSubset<T, discussionboard_profanity_filtersFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_profanity_filters that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_profanity_filtersFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_profanity_filters\n     * @example\n     * // Get one Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_profanity_filtersFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_profanity_filtersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_profanity_filters that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_profanity_filtersFindFirstArgs} args - Arguments to find a Discussionboard_profanity_filters\n     * @example\n     * // Get one Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_profanity_filtersFindFirstArgs>(args?: SelectSubset<T, discussionboard_profanity_filtersFindFirstArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_profanity_filters that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_profanity_filtersFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_profanity_filters\n     * @example\n     * // Get one Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_profanity_filtersFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_profanity_filtersFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_profanity_filters that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_profanity_filtersFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findMany()\n     * \n     * // Get first 10 Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_profanity_filtersWithIdOnly = await prisma.discussionboard_profanity_filters.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_profanity_filtersFindManyArgs>(args?: SelectSubset<T, discussionboard_profanity_filtersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_profanity_filters.\n     * @param {discussionboard_profanity_filtersCreateArgs} args - Arguments to create a Discussionboard_profanity_filters.\n     * @example\n     * // Create one Discussionboard_profanity_filters\n     * const Discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_profanity_filters\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_profanity_filtersCreateArgs>(args: SelectSubset<T, discussionboard_profanity_filtersCreateArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_profanity_filters.\n     * @param {discussionboard_profanity_filtersCreateManyArgs} args - Arguments to create many Discussionboard_profanity_filters.\n     * @example\n     * // Create many Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_profanity_filtersCreateManyArgs>(args?: SelectSubset<T, discussionboard_profanity_filtersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_profanity_filters and returns the data saved in the database.\n     * @param {discussionboard_profanity_filtersCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_profanity_filters.\n     * @example\n     * // Create many Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_profanity_filters and only return the `id`\n     * const discussionboard_profanity_filtersWithIdOnly = await prisma.discussionboard_profanity_filters.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_profanity_filtersCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_profanity_filtersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_profanity_filters.\n     * @param {discussionboard_profanity_filtersDeleteArgs} args - Arguments to delete one Discussionboard_profanity_filters.\n     * @example\n     * // Delete one Discussionboard_profanity_filters\n     * const Discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_profanity_filters\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_profanity_filtersDeleteArgs>(args: SelectSubset<T, discussionboard_profanity_filtersDeleteArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_profanity_filters.\n     * @param {discussionboard_profanity_filtersUpdateArgs} args - Arguments to update one Discussionboard_profanity_filters.\n     * @example\n     * // Update one Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_profanity_filtersUpdateArgs>(args: SelectSubset<T, discussionboard_profanity_filtersUpdateArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_profanity_filters.\n     * @param {discussionboard_profanity_filtersDeleteManyArgs} args - Arguments to filter Discussionboard_profanity_filters to delete.\n     * @example\n     * // Delete a few Discussionboard_profanity_filters\n     * const { count } = await prisma.discussionboard_profanity_filters.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_profanity_filtersDeleteManyArgs>(args?: SelectSubset<T, discussionboard_profanity_filtersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_profanity_filters.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_profanity_filtersUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_profanity_filtersUpdateManyArgs>(args: SelectSubset<T, discussionboard_profanity_filtersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_profanity_filters and returns the data updated in the database.\n     * @param {discussionboard_profanity_filtersUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_profanity_filters.\n     * @example\n     * // Update many Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_profanity_filters and only return the `id`\n     * const discussionboard_profanity_filtersWithIdOnly = await prisma.discussionboard_profanity_filters.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_profanity_filtersUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_profanity_filtersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_profanity_filters.\n     * @param {discussionboard_profanity_filtersUpsertArgs} args - Arguments to update or create a Discussionboard_profanity_filters.\n     * @example\n     * // Update or create a Discussionboard_profanity_filters\n     * const discussionboard_profanity_filters = await prisma.discussionboard_profanity_filters.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_profanity_filters\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_profanity_filters we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_profanity_filtersUpsertArgs>(args: SelectSubset<T, discussionboard_profanity_filtersUpsertArgs<ExtArgs>>): Prisma__discussionboard_profanity_filtersClient<$Result.GetResult<Prisma.$discussionboard_profanity_filtersPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_profanity_filters.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_profanity_filtersCountArgs} args - Arguments to filter Discussionboard_profanity_filters to count.\n     * @example\n     * // Count the number of Discussionboard_profanity_filters\n     * const count = await prisma.discussionboard_profanity_filters.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_profanity_filters we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_profanity_filtersCountArgs>(\n      args?: Subset<T, discussionboard_profanity_filtersCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_profanity_filtersCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_profanity_filters.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_profanity_filtersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_profanity_filtersAggregateArgs>(args: Subset<T, Discussionboard_profanity_filtersAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_profanity_filtersAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_profanity_filters.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_profanity_filtersGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_profanity_filtersGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_profanity_filtersGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_profanity_filtersGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_profanity_filtersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_profanity_filtersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_profanity_filters model\n   */\n  readonly fields: discussionboard_profanity_filtersFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_profanity_filters.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_profanity_filtersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_profanity_filters model\n   */\n  interface discussionboard_profanity_filtersFieldRefs {\n    readonly id: FieldRef<\"discussionboard_profanity_filters\", 'String'>\n    readonly word: FieldRef<\"discussionboard_profanity_filters\", 'String'>\n    readonly is_active: FieldRef<\"discussionboard_profanity_filters\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_profanity_filters\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_profanity_filters\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_profanity_filters findUnique\n   */\n  export type discussionboard_profanity_filtersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_profanity_filters to fetch.\n     */\n    where: discussionboard_profanity_filtersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_profanity_filters findUniqueOrThrow\n   */\n  export type discussionboard_profanity_filtersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_profanity_filters to fetch.\n     */\n    where: discussionboard_profanity_filtersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_profanity_filters findFirst\n   */\n  export type discussionboard_profanity_filtersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_profanity_filters to fetch.\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_profanity_filters to fetch.\n     */\n    orderBy?: discussionboard_profanity_filtersOrderByWithRelationInput | discussionboard_profanity_filtersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_profanity_filters.\n     */\n    cursor?: discussionboard_profanity_filtersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_profanity_filters from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_profanity_filters.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_profanity_filters.\n     */\n    distinct?: Discussionboard_profanity_filtersScalarFieldEnum | Discussionboard_profanity_filtersScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_profanity_filters findFirstOrThrow\n   */\n  export type discussionboard_profanity_filtersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_profanity_filters to fetch.\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_profanity_filters to fetch.\n     */\n    orderBy?: discussionboard_profanity_filtersOrderByWithRelationInput | discussionboard_profanity_filtersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_profanity_filters.\n     */\n    cursor?: discussionboard_profanity_filtersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_profanity_filters from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_profanity_filters.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_profanity_filters.\n     */\n    distinct?: Discussionboard_profanity_filtersScalarFieldEnum | Discussionboard_profanity_filtersScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_profanity_filters findMany\n   */\n  export type discussionboard_profanity_filtersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_profanity_filters to fetch.\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_profanity_filters to fetch.\n     */\n    orderBy?: discussionboard_profanity_filtersOrderByWithRelationInput | discussionboard_profanity_filtersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_profanity_filters.\n     */\n    cursor?: discussionboard_profanity_filtersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_profanity_filters from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_profanity_filters.\n     */\n    skip?: number\n    distinct?: Discussionboard_profanity_filtersScalarFieldEnum | Discussionboard_profanity_filtersScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_profanity_filters create\n   */\n  export type discussionboard_profanity_filtersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_profanity_filters.\n     */\n    data: XOR<discussionboard_profanity_filtersCreateInput, discussionboard_profanity_filtersUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_profanity_filters createMany\n   */\n  export type discussionboard_profanity_filtersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_profanity_filters.\n     */\n    data: discussionboard_profanity_filtersCreateManyInput | discussionboard_profanity_filtersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_profanity_filters createManyAndReturn\n   */\n  export type discussionboard_profanity_filtersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_profanity_filters.\n     */\n    data: discussionboard_profanity_filtersCreateManyInput | discussionboard_profanity_filtersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_profanity_filters update\n   */\n  export type discussionboard_profanity_filtersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_profanity_filters.\n     */\n    data: XOR<discussionboard_profanity_filtersUpdateInput, discussionboard_profanity_filtersUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_profanity_filters to update.\n     */\n    where: discussionboard_profanity_filtersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_profanity_filters updateMany\n   */\n  export type discussionboard_profanity_filtersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_profanity_filters.\n     */\n    data: XOR<discussionboard_profanity_filtersUpdateManyMutationInput, discussionboard_profanity_filtersUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_profanity_filters to update\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * Limit how many discussionboard_profanity_filters to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_profanity_filters updateManyAndReturn\n   */\n  export type discussionboard_profanity_filtersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_profanity_filters.\n     */\n    data: XOR<discussionboard_profanity_filtersUpdateManyMutationInput, discussionboard_profanity_filtersUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_profanity_filters to update\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * Limit how many discussionboard_profanity_filters to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_profanity_filters upsert\n   */\n  export type discussionboard_profanity_filtersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_profanity_filters to update in case it exists.\n     */\n    where: discussionboard_profanity_filtersWhereUniqueInput\n    /**\n     * In case the discussionboard_profanity_filters found by the `where` argument doesn't exist, create a new discussionboard_profanity_filters with this data.\n     */\n    create: XOR<discussionboard_profanity_filtersCreateInput, discussionboard_profanity_filtersUncheckedCreateInput>\n    /**\n     * In case the discussionboard_profanity_filters was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_profanity_filtersUpdateInput, discussionboard_profanity_filtersUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_profanity_filters delete\n   */\n  export type discussionboard_profanity_filtersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_profanity_filters to delete.\n     */\n    where: discussionboard_profanity_filtersWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_profanity_filters deleteMany\n   */\n  export type discussionboard_profanity_filtersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_profanity_filters to delete\n     */\n    where?: discussionboard_profanity_filtersWhereInput\n    /**\n     * Limit how many discussionboard_profanity_filters to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_profanity_filters without action\n   */\n  export type discussionboard_profanity_filtersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_profanity_filters\n     */\n    select?: discussionboard_profanity_filtersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_profanity_filters\n     */\n    omit?: discussionboard_profanity_filtersOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_automated_spam_rules\n   */\n\n  export type AggregateDiscussionboard_automated_spam_rules = {\n    _count: Discussionboard_automated_spam_rulesCountAggregateOutputType | null\n    _min: Discussionboard_automated_spam_rulesMinAggregateOutputType | null\n    _max: Discussionboard_automated_spam_rulesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_automated_spam_rulesMinAggregateOutputType = {\n    id: string | null\n    rule_pattern: string | null\n    description: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_automated_spam_rulesMaxAggregateOutputType = {\n    id: string | null\n    rule_pattern: string | null\n    description: string | null\n    is_active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_automated_spam_rulesCountAggregateOutputType = {\n    id: number\n    rule_pattern: number\n    description: number\n    is_active: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_automated_spam_rulesMinAggregateInputType = {\n    id?: true\n    rule_pattern?: true\n    description?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_automated_spam_rulesMaxAggregateInputType = {\n    id?: true\n    rule_pattern?: true\n    description?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_automated_spam_rulesCountAggregateInputType = {\n    id?: true\n    rule_pattern?: true\n    description?: true\n    is_active?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_automated_spam_rulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_automated_spam_rules to aggregate.\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_automated_spam_rules to fetch.\n     */\n    orderBy?: discussionboard_automated_spam_rulesOrderByWithRelationInput | discussionboard_automated_spam_rulesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_automated_spam_rulesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_automated_spam_rules from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_automated_spam_rules.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_automated_spam_rules\n    **/\n    _count?: true | Discussionboard_automated_spam_rulesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_automated_spam_rulesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_automated_spam_rulesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_automated_spam_rulesAggregateType<T extends Discussionboard_automated_spam_rulesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_automated_spam_rules]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_automated_spam_rules[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_automated_spam_rules[P]>\n  }\n\n\n\n\n  export type discussionboard_automated_spam_rulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_automated_spam_rulesWhereInput\n    orderBy?: discussionboard_automated_spam_rulesOrderByWithAggregationInput | discussionboard_automated_spam_rulesOrderByWithAggregationInput[]\n    by: Discussionboard_automated_spam_rulesScalarFieldEnum[] | Discussionboard_automated_spam_rulesScalarFieldEnum\n    having?: discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_automated_spam_rulesCountAggregateInputType | true\n    _min?: Discussionboard_automated_spam_rulesMinAggregateInputType\n    _max?: Discussionboard_automated_spam_rulesMaxAggregateInputType\n  }\n\n  export type Discussionboard_automated_spam_rulesGroupByOutputType = {\n    id: string\n    rule_pattern: string\n    description: string\n    is_active: boolean\n    created_at: Date\n    updated_at: Date\n    _count: Discussionboard_automated_spam_rulesCountAggregateOutputType | null\n    _min: Discussionboard_automated_spam_rulesMinAggregateOutputType | null\n    _max: Discussionboard_automated_spam_rulesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_automated_spam_rulesGroupByPayload<T extends discussionboard_automated_spam_rulesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_automated_spam_rulesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_automated_spam_rulesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_automated_spam_rulesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_automated_spam_rulesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_automated_spam_rulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    rule_pattern?: boolean\n    description?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_automated_spam_rules\"]>\n\n  export type discussionboard_automated_spam_rulesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    rule_pattern?: boolean\n    description?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_automated_spam_rules\"]>\n\n  export type discussionboard_automated_spam_rulesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    rule_pattern?: boolean\n    description?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_automated_spam_rules\"]>\n\n  export type discussionboard_automated_spam_rulesSelectScalar = {\n    id?: boolean\n    rule_pattern?: boolean\n    description?: boolean\n    is_active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_automated_spam_rulesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"rule_pattern\" | \"description\" | \"is_active\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_automated_spam_rules\"]>\n\n  export type $discussionboard_automated_spam_rulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_automated_spam_rules\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for this spam rule entry.\n       */\n      id: string\n      /**\n       * Pattern or expression for spam detection - Implements flexible, updatable automated spam pattern detection. 3NF compliance. For example, regex for repeated links or specific spam syntax.\n       */\n      rule_pattern: string\n      /**\n       * Explanation of what this rule detects - Implements clarity and auditability. For example, 'Detects repeated posting of phishing URLs.' Atomic, not derived.\n       */\n      description: string\n      /**\n       * Whether the rule is currently active - Allows admins to enable/disable detection flexibly for evolving spam tactics. Ensures policy agility.\n       */\n      is_active: boolean\n      /**\n       * Timestamp when this spam rule was created - Required for audit logging and rule review processes.\n       */\n      created_at: Date\n      /**\n       * Timestamp when this spam rule was last updated - Ensures full auditability of rule changes. 3NF compliance.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_automated_spam_rules\"]>\n    composites: {}\n  }\n\n  type discussionboard_automated_spam_rulesGetPayload<S extends boolean | null | undefined | discussionboard_automated_spam_rulesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload, S>\n\n  type discussionboard_automated_spam_rulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_automated_spam_rulesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_automated_spam_rulesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_automated_spam_rulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_automated_spam_rules'], meta: { name: 'discussionboard_automated_spam_rules' } }\n    /**\n     * Find zero or one Discussionboard_automated_spam_rules that matches the filter.\n     * @param {discussionboard_automated_spam_rulesFindUniqueArgs} args - Arguments to find a Discussionboard_automated_spam_rules\n     * @example\n     * // Get one Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_automated_spam_rulesFindUniqueArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_automated_spam_rules that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_automated_spam_rulesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_automated_spam_rules\n     * @example\n     * // Get one Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_automated_spam_rulesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_automated_spam_rules that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_automated_spam_rulesFindFirstArgs} args - Arguments to find a Discussionboard_automated_spam_rules\n     * @example\n     * // Get one Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_automated_spam_rulesFindFirstArgs>(args?: SelectSubset<T, discussionboard_automated_spam_rulesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_automated_spam_rules that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_automated_spam_rulesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_automated_spam_rules\n     * @example\n     * // Get one Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_automated_spam_rulesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_automated_spam_rulesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_automated_spam_rules that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_automated_spam_rulesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findMany()\n     * \n     * // Get first 10 Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_automated_spam_rulesWithIdOnly = await prisma.discussionboard_automated_spam_rules.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_automated_spam_rulesFindManyArgs>(args?: SelectSubset<T, discussionboard_automated_spam_rulesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_automated_spam_rules.\n     * @param {discussionboard_automated_spam_rulesCreateArgs} args - Arguments to create a Discussionboard_automated_spam_rules.\n     * @example\n     * // Create one Discussionboard_automated_spam_rules\n     * const Discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_automated_spam_rules\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_automated_spam_rulesCreateArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesCreateArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_automated_spam_rules.\n     * @param {discussionboard_automated_spam_rulesCreateManyArgs} args - Arguments to create many Discussionboard_automated_spam_rules.\n     * @example\n     * // Create many Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_automated_spam_rulesCreateManyArgs>(args?: SelectSubset<T, discussionboard_automated_spam_rulesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_automated_spam_rules and returns the data saved in the database.\n     * @param {discussionboard_automated_spam_rulesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_automated_spam_rules.\n     * @example\n     * // Create many Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_automated_spam_rules and only return the `id`\n     * const discussionboard_automated_spam_rulesWithIdOnly = await prisma.discussionboard_automated_spam_rules.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_automated_spam_rulesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_automated_spam_rulesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_automated_spam_rules.\n     * @param {discussionboard_automated_spam_rulesDeleteArgs} args - Arguments to delete one Discussionboard_automated_spam_rules.\n     * @example\n     * // Delete one Discussionboard_automated_spam_rules\n     * const Discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_automated_spam_rules\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_automated_spam_rulesDeleteArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesDeleteArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_automated_spam_rules.\n     * @param {discussionboard_automated_spam_rulesUpdateArgs} args - Arguments to update one Discussionboard_automated_spam_rules.\n     * @example\n     * // Update one Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_automated_spam_rulesUpdateArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesUpdateArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_automated_spam_rules.\n     * @param {discussionboard_automated_spam_rulesDeleteManyArgs} args - Arguments to filter Discussionboard_automated_spam_rules to delete.\n     * @example\n     * // Delete a few Discussionboard_automated_spam_rules\n     * const { count } = await prisma.discussionboard_automated_spam_rules.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_automated_spam_rulesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_automated_spam_rulesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_automated_spam_rules.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_automated_spam_rulesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_automated_spam_rulesUpdateManyArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_automated_spam_rules and returns the data updated in the database.\n     * @param {discussionboard_automated_spam_rulesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_automated_spam_rules.\n     * @example\n     * // Update many Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_automated_spam_rules and only return the `id`\n     * const discussionboard_automated_spam_rulesWithIdOnly = await prisma.discussionboard_automated_spam_rules.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_automated_spam_rulesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_automated_spam_rules.\n     * @param {discussionboard_automated_spam_rulesUpsertArgs} args - Arguments to update or create a Discussionboard_automated_spam_rules.\n     * @example\n     * // Update or create a Discussionboard_automated_spam_rules\n     * const discussionboard_automated_spam_rules = await prisma.discussionboard_automated_spam_rules.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_automated_spam_rules\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_automated_spam_rules we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_automated_spam_rulesUpsertArgs>(args: SelectSubset<T, discussionboard_automated_spam_rulesUpsertArgs<ExtArgs>>): Prisma__discussionboard_automated_spam_rulesClient<$Result.GetResult<Prisma.$discussionboard_automated_spam_rulesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_automated_spam_rules.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_automated_spam_rulesCountArgs} args - Arguments to filter Discussionboard_automated_spam_rules to count.\n     * @example\n     * // Count the number of Discussionboard_automated_spam_rules\n     * const count = await prisma.discussionboard_automated_spam_rules.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_automated_spam_rules we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_automated_spam_rulesCountArgs>(\n      args?: Subset<T, discussionboard_automated_spam_rulesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_automated_spam_rulesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_automated_spam_rules.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_automated_spam_rulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_automated_spam_rulesAggregateArgs>(args: Subset<T, Discussionboard_automated_spam_rulesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_automated_spam_rulesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_automated_spam_rules.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_automated_spam_rulesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_automated_spam_rulesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_automated_spam_rulesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_automated_spam_rulesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_automated_spam_rulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_automated_spam_rulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_automated_spam_rules model\n   */\n  readonly fields: discussionboard_automated_spam_rulesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_automated_spam_rules.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_automated_spam_rulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_automated_spam_rules model\n   */\n  interface discussionboard_automated_spam_rulesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_automated_spam_rules\", 'String'>\n    readonly rule_pattern: FieldRef<\"discussionboard_automated_spam_rules\", 'String'>\n    readonly description: FieldRef<\"discussionboard_automated_spam_rules\", 'String'>\n    readonly is_active: FieldRef<\"discussionboard_automated_spam_rules\", 'Boolean'>\n    readonly created_at: FieldRef<\"discussionboard_automated_spam_rules\", 'DateTime'>\n    readonly updated_at: FieldRef<\"discussionboard_automated_spam_rules\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_automated_spam_rules findUnique\n   */\n  export type discussionboard_automated_spam_rulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_automated_spam_rules to fetch.\n     */\n    where: discussionboard_automated_spam_rulesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_automated_spam_rules findUniqueOrThrow\n   */\n  export type discussionboard_automated_spam_rulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_automated_spam_rules to fetch.\n     */\n    where: discussionboard_automated_spam_rulesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_automated_spam_rules findFirst\n   */\n  export type discussionboard_automated_spam_rulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_automated_spam_rules to fetch.\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_automated_spam_rules to fetch.\n     */\n    orderBy?: discussionboard_automated_spam_rulesOrderByWithRelationInput | discussionboard_automated_spam_rulesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_automated_spam_rules.\n     */\n    cursor?: discussionboard_automated_spam_rulesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_automated_spam_rules from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_automated_spam_rules.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_automated_spam_rules.\n     */\n    distinct?: Discussionboard_automated_spam_rulesScalarFieldEnum | Discussionboard_automated_spam_rulesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_automated_spam_rules findFirstOrThrow\n   */\n  export type discussionboard_automated_spam_rulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_automated_spam_rules to fetch.\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_automated_spam_rules to fetch.\n     */\n    orderBy?: discussionboard_automated_spam_rulesOrderByWithRelationInput | discussionboard_automated_spam_rulesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_automated_spam_rules.\n     */\n    cursor?: discussionboard_automated_spam_rulesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_automated_spam_rules from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_automated_spam_rules.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_automated_spam_rules.\n     */\n    distinct?: Discussionboard_automated_spam_rulesScalarFieldEnum | Discussionboard_automated_spam_rulesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_automated_spam_rules findMany\n   */\n  export type discussionboard_automated_spam_rulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_automated_spam_rules to fetch.\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_automated_spam_rules to fetch.\n     */\n    orderBy?: discussionboard_automated_spam_rulesOrderByWithRelationInput | discussionboard_automated_spam_rulesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_automated_spam_rules.\n     */\n    cursor?: discussionboard_automated_spam_rulesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_automated_spam_rules from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_automated_spam_rules.\n     */\n    skip?: number\n    distinct?: Discussionboard_automated_spam_rulesScalarFieldEnum | Discussionboard_automated_spam_rulesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_automated_spam_rules create\n   */\n  export type discussionboard_automated_spam_rulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_automated_spam_rules.\n     */\n    data: XOR<discussionboard_automated_spam_rulesCreateInput, discussionboard_automated_spam_rulesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_automated_spam_rules createMany\n   */\n  export type discussionboard_automated_spam_rulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_automated_spam_rules.\n     */\n    data: discussionboard_automated_spam_rulesCreateManyInput | discussionboard_automated_spam_rulesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_automated_spam_rules createManyAndReturn\n   */\n  export type discussionboard_automated_spam_rulesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_automated_spam_rules.\n     */\n    data: discussionboard_automated_spam_rulesCreateManyInput | discussionboard_automated_spam_rulesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_automated_spam_rules update\n   */\n  export type discussionboard_automated_spam_rulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_automated_spam_rules.\n     */\n    data: XOR<discussionboard_automated_spam_rulesUpdateInput, discussionboard_automated_spam_rulesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_automated_spam_rules to update.\n     */\n    where: discussionboard_automated_spam_rulesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_automated_spam_rules updateMany\n   */\n  export type discussionboard_automated_spam_rulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_automated_spam_rules.\n     */\n    data: XOR<discussionboard_automated_spam_rulesUpdateManyMutationInput, discussionboard_automated_spam_rulesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_automated_spam_rules to update\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * Limit how many discussionboard_automated_spam_rules to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_automated_spam_rules updateManyAndReturn\n   */\n  export type discussionboard_automated_spam_rulesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_automated_spam_rules.\n     */\n    data: XOR<discussionboard_automated_spam_rulesUpdateManyMutationInput, discussionboard_automated_spam_rulesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_automated_spam_rules to update\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * Limit how many discussionboard_automated_spam_rules to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_automated_spam_rules upsert\n   */\n  export type discussionboard_automated_spam_rulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_automated_spam_rules to update in case it exists.\n     */\n    where: discussionboard_automated_spam_rulesWhereUniqueInput\n    /**\n     * In case the discussionboard_automated_spam_rules found by the `where` argument doesn't exist, create a new discussionboard_automated_spam_rules with this data.\n     */\n    create: XOR<discussionboard_automated_spam_rulesCreateInput, discussionboard_automated_spam_rulesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_automated_spam_rules was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_automated_spam_rulesUpdateInput, discussionboard_automated_spam_rulesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_automated_spam_rules delete\n   */\n  export type discussionboard_automated_spam_rulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_automated_spam_rules to delete.\n     */\n    where: discussionboard_automated_spam_rulesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_automated_spam_rules deleteMany\n   */\n  export type discussionboard_automated_spam_rulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_automated_spam_rules to delete\n     */\n    where?: discussionboard_automated_spam_rulesWhereInput\n    /**\n     * Limit how many discussionboard_automated_spam_rules to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_automated_spam_rules without action\n   */\n  export type discussionboard_automated_spam_rulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_automated_spam_rules\n     */\n    select?: discussionboard_automated_spam_rulesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_automated_spam_rules\n     */\n    omit?: discussionboard_automated_spam_rulesOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_notifications\n   */\n\n  export type AggregateDiscussionboard_notifications = {\n    _count: Discussionboard_notificationsCountAggregateOutputType | null\n    _min: Discussionboard_notificationsMinAggregateOutputType | null\n    _max: Discussionboard_notificationsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_notificationsMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    type: string | null\n    related_entity_id: string | null\n    related_entity_type: string | null\n    content: string | null\n    is_read: boolean | null\n    delivered_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussionboard_notificationsMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    type: string | null\n    related_entity_id: string | null\n    related_entity_type: string | null\n    content: string | null\n    is_read: boolean | null\n    delivered_at: Date | null\n    expires_at: Date | null\n  }\n\n  export type Discussionboard_notificationsCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    type: number\n    related_entity_id: number\n    related_entity_type: number\n    content: number\n    is_read: number\n    delivered_at: number\n    expires_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_notificationsMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    type?: true\n    related_entity_id?: true\n    related_entity_type?: true\n    content?: true\n    is_read?: true\n    delivered_at?: true\n    expires_at?: true\n  }\n\n  export type Discussionboard_notificationsMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    type?: true\n    related_entity_id?: true\n    related_entity_type?: true\n    content?: true\n    is_read?: true\n    delivered_at?: true\n    expires_at?: true\n  }\n\n  export type Discussionboard_notificationsCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    type?: true\n    related_entity_id?: true\n    related_entity_type?: true\n    content?: true\n    is_read?: true\n    delivered_at?: true\n    expires_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_notificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notifications to aggregate.\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationsOrderByWithRelationInput | discussionboard_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_notifications\n    **/\n    _count?: true | Discussionboard_notificationsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_notificationsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_notificationsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_notificationsAggregateType<T extends Discussionboard_notificationsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_notifications]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_notifications[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_notifications[P]>\n  }\n\n\n\n\n  export type discussionboard_notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_notificationsWhereInput\n    orderBy?: discussionboard_notificationsOrderByWithAggregationInput | discussionboard_notificationsOrderByWithAggregationInput[]\n    by: Discussionboard_notificationsScalarFieldEnum[] | Discussionboard_notificationsScalarFieldEnum\n    having?: discussionboard_notificationsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_notificationsCountAggregateInputType | true\n    _min?: Discussionboard_notificationsMinAggregateInputType\n    _max?: Discussionboard_notificationsMaxAggregateInputType\n  }\n\n  export type Discussionboard_notificationsGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    type: string\n    related_entity_id: string | null\n    related_entity_type: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date\n    expires_at: Date | null\n    _count: Discussionboard_notificationsCountAggregateOutputType | null\n    _min: Discussionboard_notificationsMinAggregateOutputType | null\n    _max: Discussionboard_notificationsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_notificationsGroupByPayload<T extends discussionboard_notificationsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_notificationsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_notificationsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_notificationsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_notificationsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    type?: boolean\n    related_entity_id?: boolean\n    related_entity_type?: boolean\n    content?: boolean\n    is_read?: boolean\n    delivered_at?: boolean\n    expires_at?: boolean\n    discussionboard_notifications_recipient?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notifications\"]>\n\n  export type discussionboard_notificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    type?: boolean\n    related_entity_id?: boolean\n    related_entity_type?: boolean\n    content?: boolean\n    is_read?: boolean\n    delivered_at?: boolean\n    expires_at?: boolean\n    discussionboard_notifications_recipient?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notifications\"]>\n\n  export type discussionboard_notificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    type?: boolean\n    related_entity_id?: boolean\n    related_entity_type?: boolean\n    content?: boolean\n    is_read?: boolean\n    delivered_at?: boolean\n    expires_at?: boolean\n    discussionboard_notifications_recipient?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_notifications\"]>\n\n  export type discussionboard_notificationsSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    type?: boolean\n    related_entity_id?: boolean\n    related_entity_type?: boolean\n    content?: boolean\n    is_read?: boolean\n    delivered_at?: boolean\n    expires_at?: boolean\n  }\n\n  export type discussionboard_notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"type\" | \"related_entity_id\" | \"related_entity_type\" | \"content\" | \"is_read\" | \"delivered_at\" | \"expires_at\", ExtArgs[\"result\"][\"discussionboard_notifications\"]>\n  export type discussionboard_notificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_notifications_recipient?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_notificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_notifications_recipient?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_notificationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_notifications_recipient?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_notifications\"\n    objects: {\n      discussionboard_notifications_recipient: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for each notification.\n       */\n      id: string\n      /**\n       * Recipient's {@link discussionboard_members.id} - The user who receives this notification. Fulfills the requirement for per-user notification tracking and targeting.\n       */\n      discussionboard_member_id: string\n      /**\n       * Notification type - Implements the Notification System requirement specifying kind of event (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system'). Defines the user event that triggered notification delivery. Ensures normalization by recording type as a code, not a computed string. Example: 'reply'.\n       */\n      type: string\n      /**\n       * Reference ID of the related entity (e.g., post, comment, moderation action) - Implements the Notification System's requirement for contextual notification. Stores the target object relevant to the notification for audit/logging. Can be null if event is generic. Ensures normalization by storing only the ID. Example: the comment being replied to.\n       */\n      related_entity_id: string | null\n      /**\n       * Type of related entity referenced (e.g., 'post', 'comment', 'moderation_action') - Implements requirement to allow notifications on multiple kinds of entities. Ensures normalization by specifying entity type in a discrete field, not by using polymorphic joins. Example: 'post'.\n       */\n      related_entity_type: string | null\n      /**\n       * Notification message content - Implements requirement for human-readable notification body. Stores the message shown to the user. Example: 'Alice replied to your post.' Field is atomic and normalized. No computed values here.\n       */\n      content: string\n      /**\n       * Flag indicating whether the notification has been read. Supports UI requirements for marking notifications as read/unread. Ensures normalization by only storing a boolean flag. Example: false (unread).\n       */\n      is_read: boolean\n      /**\n       * Timestamp when notification was delivered to the user. Implements audit/logging requirements for notification delivery history and sequencing. Normalization: Each delivery occurrence is atomic. Example: 2024-06-17T12:00:00Z.\n       */\n      delivered_at: Date\n      /**\n       * Timestamp when notification expires - Implements event-driven notification expiry (for temporary/scheduled alerts). Ensures normalization by storing expiry per notification, not per user. Example: 2024-07-01T00:00:00Z. May be null if notification does not expire.\n       */\n      expires_at: Date | null\n    }, ExtArgs[\"result\"][\"discussionboard_notifications\"]>\n    composites: {}\n  }\n\n  type discussionboard_notificationsGetPayload<S extends boolean | null | undefined | discussionboard_notificationsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_notificationsPayload, S>\n\n  type discussionboard_notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_notificationsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_notifications'], meta: { name: 'discussionboard_notifications' } }\n    /**\n     * Find zero or one Discussionboard_notifications that matches the filter.\n     * @param {discussionboard_notificationsFindUniqueArgs} args - Arguments to find a Discussionboard_notifications\n     * @example\n     * // Get one Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_notificationsFindUniqueArgs>(args: SelectSubset<T, discussionboard_notificationsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_notifications that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_notificationsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_notifications\n     * @example\n     * // Get one Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notifications that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationsFindFirstArgs} args - Arguments to find a Discussionboard_notifications\n     * @example\n     * // Get one Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_notificationsFindFirstArgs>(args?: SelectSubset<T, discussionboard_notificationsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_notifications that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_notifications\n     * @example\n     * // Get one Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_notifications that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.findMany()\n     * \n     * // Get first 10 Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_notificationsWithIdOnly = await prisma.discussionboard_notifications.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_notificationsFindManyArgs>(args?: SelectSubset<T, discussionboard_notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_notifications.\n     * @param {discussionboard_notificationsCreateArgs} args - Arguments to create a Discussionboard_notifications.\n     * @example\n     * // Create one Discussionboard_notifications\n     * const Discussionboard_notifications = await prisma.discussionboard_notifications.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_notifications\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_notificationsCreateArgs>(args: SelectSubset<T, discussionboard_notificationsCreateArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_notifications.\n     * @param {discussionboard_notificationsCreateManyArgs} args - Arguments to create many Discussionboard_notifications.\n     * @example\n     * // Create many Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_notificationsCreateManyArgs>(args?: SelectSubset<T, discussionboard_notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_notifications and returns the data saved in the database.\n     * @param {discussionboard_notificationsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_notifications.\n     * @example\n     * // Create many Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_notifications and only return the `id`\n     * const discussionboard_notificationsWithIdOnly = await prisma.discussionboard_notifications.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_notificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_notificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_notifications.\n     * @param {discussionboard_notificationsDeleteArgs} args - Arguments to delete one Discussionboard_notifications.\n     * @example\n     * // Delete one Discussionboard_notifications\n     * const Discussionboard_notifications = await prisma.discussionboard_notifications.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_notifications\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_notificationsDeleteArgs>(args: SelectSubset<T, discussionboard_notificationsDeleteArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_notifications.\n     * @param {discussionboard_notificationsUpdateArgs} args - Arguments to update one Discussionboard_notifications.\n     * @example\n     * // Update one Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_notificationsUpdateArgs>(args: SelectSubset<T, discussionboard_notificationsUpdateArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_notifications.\n     * @param {discussionboard_notificationsDeleteManyArgs} args - Arguments to filter Discussionboard_notifications to delete.\n     * @example\n     * // Delete a few Discussionboard_notifications\n     * const { count } = await prisma.discussionboard_notifications.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_notificationsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_notificationsUpdateManyArgs>(args: SelectSubset<T, discussionboard_notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_notifications and returns the data updated in the database.\n     * @param {discussionboard_notificationsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_notifications.\n     * @example\n     * // Update many Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_notifications and only return the `id`\n     * const discussionboard_notificationsWithIdOnly = await prisma.discussionboard_notifications.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_notificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_notificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_notifications.\n     * @param {discussionboard_notificationsUpsertArgs} args - Arguments to update or create a Discussionboard_notifications.\n     * @example\n     * // Update or create a Discussionboard_notifications\n     * const discussionboard_notifications = await prisma.discussionboard_notifications.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_notifications\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_notifications we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_notificationsUpsertArgs>(args: SelectSubset<T, discussionboard_notificationsUpsertArgs<ExtArgs>>): Prisma__discussionboard_notificationsClient<$Result.GetResult<Prisma.$discussionboard_notificationsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationsCountArgs} args - Arguments to filter Discussionboard_notifications to count.\n     * @example\n     * // Count the number of Discussionboard_notifications\n     * const count = await prisma.discussionboard_notifications.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_notifications we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_notificationsCountArgs>(\n      args?: Subset<T, discussionboard_notificationsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_notificationsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_notificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_notificationsAggregateArgs>(args: Subset<T, Discussionboard_notificationsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_notificationsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_notificationsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_notificationsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_notificationsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_notificationsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_notificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_notifications model\n   */\n  readonly fields: discussionboard_notificationsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_notifications.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_notifications_recipient<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_notifications model\n   */\n  interface discussionboard_notificationsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_notifications\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_notifications\", 'String'>\n    readonly type: FieldRef<\"discussionboard_notifications\", 'String'>\n    readonly related_entity_id: FieldRef<\"discussionboard_notifications\", 'String'>\n    readonly related_entity_type: FieldRef<\"discussionboard_notifications\", 'String'>\n    readonly content: FieldRef<\"discussionboard_notifications\", 'String'>\n    readonly is_read: FieldRef<\"discussionboard_notifications\", 'Boolean'>\n    readonly delivered_at: FieldRef<\"discussionboard_notifications\", 'DateTime'>\n    readonly expires_at: FieldRef<\"discussionboard_notifications\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_notifications findUnique\n   */\n  export type discussionboard_notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notifications to fetch.\n     */\n    where: discussionboard_notificationsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notifications findUniqueOrThrow\n   */\n  export type discussionboard_notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notifications to fetch.\n     */\n    where: discussionboard_notificationsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notifications findFirst\n   */\n  export type discussionboard_notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notifications to fetch.\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationsOrderByWithRelationInput | discussionboard_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notifications.\n     */\n    cursor?: discussionboard_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notifications.\n     */\n    distinct?: Discussionboard_notificationsScalarFieldEnum | Discussionboard_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notifications findFirstOrThrow\n   */\n  export type discussionboard_notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notifications to fetch.\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationsOrderByWithRelationInput | discussionboard_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_notifications.\n     */\n    cursor?: discussionboard_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_notifications.\n     */\n    distinct?: Discussionboard_notificationsScalarFieldEnum | Discussionboard_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notifications findMany\n   */\n  export type discussionboard_notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_notifications to fetch.\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_notifications to fetch.\n     */\n    orderBy?: discussionboard_notificationsOrderByWithRelationInput | discussionboard_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_notifications.\n     */\n    cursor?: discussionboard_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_notifications.\n     */\n    skip?: number\n    distinct?: Discussionboard_notificationsScalarFieldEnum | Discussionboard_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_notifications create\n   */\n  export type discussionboard_notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_notifications.\n     */\n    data: XOR<discussionboard_notificationsCreateInput, discussionboard_notificationsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_notifications createMany\n   */\n  export type discussionboard_notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_notifications.\n     */\n    data: discussionboard_notificationsCreateManyInput | discussionboard_notificationsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_notifications createManyAndReturn\n   */\n  export type discussionboard_notificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_notifications.\n     */\n    data: discussionboard_notificationsCreateManyInput | discussionboard_notificationsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notifications update\n   */\n  export type discussionboard_notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_notifications.\n     */\n    data: XOR<discussionboard_notificationsUpdateInput, discussionboard_notificationsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_notifications to update.\n     */\n    where: discussionboard_notificationsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notifications updateMany\n   */\n  export type discussionboard_notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_notifications.\n     */\n    data: XOR<discussionboard_notificationsUpdateManyMutationInput, discussionboard_notificationsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notifications to update\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * Limit how many discussionboard_notifications to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notifications updateManyAndReturn\n   */\n  export type discussionboard_notificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_notifications.\n     */\n    data: XOR<discussionboard_notificationsUpdateManyMutationInput, discussionboard_notificationsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_notifications to update\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * Limit how many discussionboard_notifications to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_notifications upsert\n   */\n  export type discussionboard_notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_notifications to update in case it exists.\n     */\n    where: discussionboard_notificationsWhereUniqueInput\n    /**\n     * In case the discussionboard_notifications found by the `where` argument doesn't exist, create a new discussionboard_notifications with this data.\n     */\n    create: XOR<discussionboard_notificationsCreateInput, discussionboard_notificationsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_notifications was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_notificationsUpdateInput, discussionboard_notificationsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_notifications delete\n   */\n  export type discussionboard_notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_notifications to delete.\n     */\n    where: discussionboard_notificationsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_notifications deleteMany\n   */\n  export type discussionboard_notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_notifications to delete\n     */\n    where?: discussionboard_notificationsWhereInput\n    /**\n     * Limit how many discussionboard_notifications to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_notifications without action\n   */\n  export type discussionboard_notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_notifications\n     */\n    select?: discussionboard_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_notifications\n     */\n    omit?: discussionboard_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_notificationsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_alert_preferences\n   */\n\n  export type AggregateDiscussionboard_alert_preferences = {\n    _count: Discussionboard_alert_preferencesCountAggregateOutputType | null\n    _min: Discussionboard_alert_preferencesMinAggregateOutputType | null\n    _max: Discussionboard_alert_preferencesMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_alert_preferencesMinAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    notification_type: string | null\n    delivery_channel: string | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_alert_preferencesMaxAggregateOutputType = {\n    id: string | null\n    discussionboard_member_id: string | null\n    notification_type: string | null\n    delivery_channel: string | null\n    updated_at: Date | null\n  }\n\n  export type Discussionboard_alert_preferencesCountAggregateOutputType = {\n    id: number\n    discussionboard_member_id: number\n    notification_type: number\n    delivery_channel: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_alert_preferencesMinAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    notification_type?: true\n    delivery_channel?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_alert_preferencesMaxAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    notification_type?: true\n    delivery_channel?: true\n    updated_at?: true\n  }\n\n  export type Discussionboard_alert_preferencesCountAggregateInputType = {\n    id?: true\n    discussionboard_member_id?: true\n    notification_type?: true\n    delivery_channel?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_alert_preferencesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_alert_preferences to aggregate.\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_alert_preferences to fetch.\n     */\n    orderBy?: discussionboard_alert_preferencesOrderByWithRelationInput | discussionboard_alert_preferencesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_alert_preferencesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_alert_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_alert_preferences.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_alert_preferences\n    **/\n    _count?: true | Discussionboard_alert_preferencesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_alert_preferencesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_alert_preferencesMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_alert_preferencesAggregateType<T extends Discussionboard_alert_preferencesAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_alert_preferences]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_alert_preferences[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_alert_preferences[P]>\n  }\n\n\n\n\n  export type discussionboard_alert_preferencesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_alert_preferencesWhereInput\n    orderBy?: discussionboard_alert_preferencesOrderByWithAggregationInput | discussionboard_alert_preferencesOrderByWithAggregationInput[]\n    by: Discussionboard_alert_preferencesScalarFieldEnum[] | Discussionboard_alert_preferencesScalarFieldEnum\n    having?: discussionboard_alert_preferencesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_alert_preferencesCountAggregateInputType | true\n    _min?: Discussionboard_alert_preferencesMinAggregateInputType\n    _max?: Discussionboard_alert_preferencesMaxAggregateInputType\n  }\n\n  export type Discussionboard_alert_preferencesGroupByOutputType = {\n    id: string\n    discussionboard_member_id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date\n    _count: Discussionboard_alert_preferencesCountAggregateOutputType | null\n    _min: Discussionboard_alert_preferencesMinAggregateOutputType | null\n    _max: Discussionboard_alert_preferencesMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_alert_preferencesGroupByPayload<T extends discussionboard_alert_preferencesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_alert_preferencesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_alert_preferencesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_alert_preferencesGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_alert_preferencesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_alert_preferencesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    notification_type?: boolean\n    delivery_channel?: boolean\n    updated_at?: boolean\n    discussionboard_alert_preferences_owner?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_alert_preferences\"]>\n\n  export type discussionboard_alert_preferencesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    notification_type?: boolean\n    delivery_channel?: boolean\n    updated_at?: boolean\n    discussionboard_alert_preferences_owner?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_alert_preferences\"]>\n\n  export type discussionboard_alert_preferencesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    discussionboard_member_id?: boolean\n    notification_type?: boolean\n    delivery_channel?: boolean\n    updated_at?: boolean\n    discussionboard_alert_preferences_owner?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_alert_preferences\"]>\n\n  export type discussionboard_alert_preferencesSelectScalar = {\n    id?: boolean\n    discussionboard_member_id?: boolean\n    notification_type?: boolean\n    delivery_channel?: boolean\n    updated_at?: boolean\n  }\n\n  export type discussionboard_alert_preferencesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"discussionboard_member_id\" | \"notification_type\" | \"delivery_channel\" | \"updated_at\", ExtArgs[\"result\"][\"discussionboard_alert_preferences\"]>\n  export type discussionboard_alert_preferencesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_alert_preferences_owner?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_alert_preferencesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_alert_preferences_owner?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_alert_preferencesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    discussionboard_alert_preferences_owner?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_alert_preferencesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_alert_preferences\"\n    objects: {\n      discussionboard_alert_preferences_owner: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for each alert preference record.\n       */\n      id: string\n      /**\n       * Owner's {@link discussionboard_members.id} - The user who owns this alert preference set. Implements per-user preference requirement for notification delivery.\n       */\n      discussionboard_member_id: string\n      /**\n       * Notification type for which this preference applies (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system') - Implements the Notification System and Settings requirements for configurable per-type delivery. Ensures normalization by storing type as atomic value. Example: 'moderation_action'.\n       */\n      notification_type: string\n      /**\n       * Delivery channel preference (e.g., 'email', 'push', 'in_app', 'none') - Implements requirement for per-type delivery method configuration by user. Ensures normalization by storing as atomic value, not as calculated field. Example: 'email'.\n       */\n      delivery_channel: string\n      /**\n       * Timestamp when these preferences were last updated. Supports audit/logging for settings changes. Ensures atomic history of preference changes. Example: 2024-06-18T13:31:21Z.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_alert_preferences\"]>\n    composites: {}\n  }\n\n  type discussionboard_alert_preferencesGetPayload<S extends boolean | null | undefined | discussionboard_alert_preferencesDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload, S>\n\n  type discussionboard_alert_preferencesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_alert_preferencesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_alert_preferencesCountAggregateInputType | true\n    }\n\n  export interface discussionboard_alert_preferencesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_alert_preferences'], meta: { name: 'discussionboard_alert_preferences' } }\n    /**\n     * Find zero or one Discussionboard_alert_preferences that matches the filter.\n     * @param {discussionboard_alert_preferencesFindUniqueArgs} args - Arguments to find a Discussionboard_alert_preferences\n     * @example\n     * // Get one Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_alert_preferencesFindUniqueArgs>(args: SelectSubset<T, discussionboard_alert_preferencesFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_alert_preferences that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_alert_preferencesFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_alert_preferences\n     * @example\n     * // Get one Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_alert_preferencesFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_alert_preferencesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_alert_preferences that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_alert_preferencesFindFirstArgs} args - Arguments to find a Discussionboard_alert_preferences\n     * @example\n     * // Get one Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_alert_preferencesFindFirstArgs>(args?: SelectSubset<T, discussionboard_alert_preferencesFindFirstArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_alert_preferences that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_alert_preferencesFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_alert_preferences\n     * @example\n     * // Get one Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_alert_preferencesFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_alert_preferencesFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_alert_preferences that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_alert_preferencesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findMany()\n     * \n     * // Get first 10 Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_alert_preferencesWithIdOnly = await prisma.discussionboard_alert_preferences.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_alert_preferencesFindManyArgs>(args?: SelectSubset<T, discussionboard_alert_preferencesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_alert_preferences.\n     * @param {discussionboard_alert_preferencesCreateArgs} args - Arguments to create a Discussionboard_alert_preferences.\n     * @example\n     * // Create one Discussionboard_alert_preferences\n     * const Discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_alert_preferences\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_alert_preferencesCreateArgs>(args: SelectSubset<T, discussionboard_alert_preferencesCreateArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_alert_preferences.\n     * @param {discussionboard_alert_preferencesCreateManyArgs} args - Arguments to create many Discussionboard_alert_preferences.\n     * @example\n     * // Create many Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_alert_preferencesCreateManyArgs>(args?: SelectSubset<T, discussionboard_alert_preferencesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_alert_preferences and returns the data saved in the database.\n     * @param {discussionboard_alert_preferencesCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_alert_preferences.\n     * @example\n     * // Create many Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_alert_preferences and only return the `id`\n     * const discussionboard_alert_preferencesWithIdOnly = await prisma.discussionboard_alert_preferences.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_alert_preferencesCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_alert_preferencesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_alert_preferences.\n     * @param {discussionboard_alert_preferencesDeleteArgs} args - Arguments to delete one Discussionboard_alert_preferences.\n     * @example\n     * // Delete one Discussionboard_alert_preferences\n     * const Discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_alert_preferences\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_alert_preferencesDeleteArgs>(args: SelectSubset<T, discussionboard_alert_preferencesDeleteArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_alert_preferences.\n     * @param {discussionboard_alert_preferencesUpdateArgs} args - Arguments to update one Discussionboard_alert_preferences.\n     * @example\n     * // Update one Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_alert_preferencesUpdateArgs>(args: SelectSubset<T, discussionboard_alert_preferencesUpdateArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_alert_preferences.\n     * @param {discussionboard_alert_preferencesDeleteManyArgs} args - Arguments to filter Discussionboard_alert_preferences to delete.\n     * @example\n     * // Delete a few Discussionboard_alert_preferences\n     * const { count } = await prisma.discussionboard_alert_preferences.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_alert_preferencesDeleteManyArgs>(args?: SelectSubset<T, discussionboard_alert_preferencesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_alert_preferences.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_alert_preferencesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_alert_preferencesUpdateManyArgs>(args: SelectSubset<T, discussionboard_alert_preferencesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_alert_preferences and returns the data updated in the database.\n     * @param {discussionboard_alert_preferencesUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_alert_preferences.\n     * @example\n     * // Update many Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_alert_preferences and only return the `id`\n     * const discussionboard_alert_preferencesWithIdOnly = await prisma.discussionboard_alert_preferences.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_alert_preferencesUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_alert_preferencesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_alert_preferences.\n     * @param {discussionboard_alert_preferencesUpsertArgs} args - Arguments to update or create a Discussionboard_alert_preferences.\n     * @example\n     * // Update or create a Discussionboard_alert_preferences\n     * const discussionboard_alert_preferences = await prisma.discussionboard_alert_preferences.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_alert_preferences\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_alert_preferences we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_alert_preferencesUpsertArgs>(args: SelectSubset<T, discussionboard_alert_preferencesUpsertArgs<ExtArgs>>): Prisma__discussionboard_alert_preferencesClient<$Result.GetResult<Prisma.$discussionboard_alert_preferencesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_alert_preferences.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_alert_preferencesCountArgs} args - Arguments to filter Discussionboard_alert_preferences to count.\n     * @example\n     * // Count the number of Discussionboard_alert_preferences\n     * const count = await prisma.discussionboard_alert_preferences.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_alert_preferences we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_alert_preferencesCountArgs>(\n      args?: Subset<T, discussionboard_alert_preferencesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_alert_preferencesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_alert_preferences.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_alert_preferencesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_alert_preferencesAggregateArgs>(args: Subset<T, Discussionboard_alert_preferencesAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_alert_preferencesAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_alert_preferences.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_alert_preferencesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_alert_preferencesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_alert_preferencesGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_alert_preferencesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_alert_preferencesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_alert_preferencesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_alert_preferences model\n   */\n  readonly fields: discussionboard_alert_preferencesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_alert_preferences.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_alert_preferencesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    discussionboard_alert_preferences_owner<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_alert_preferences model\n   */\n  interface discussionboard_alert_preferencesFieldRefs {\n    readonly id: FieldRef<\"discussionboard_alert_preferences\", 'String'>\n    readonly discussionboard_member_id: FieldRef<\"discussionboard_alert_preferences\", 'String'>\n    readonly notification_type: FieldRef<\"discussionboard_alert_preferences\", 'String'>\n    readonly delivery_channel: FieldRef<\"discussionboard_alert_preferences\", 'String'>\n    readonly updated_at: FieldRef<\"discussionboard_alert_preferences\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_alert_preferences findUnique\n   */\n  export type discussionboard_alert_preferencesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_alert_preferences to fetch.\n     */\n    where: discussionboard_alert_preferencesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_alert_preferences findUniqueOrThrow\n   */\n  export type discussionboard_alert_preferencesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_alert_preferences to fetch.\n     */\n    where: discussionboard_alert_preferencesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_alert_preferences findFirst\n   */\n  export type discussionboard_alert_preferencesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_alert_preferences to fetch.\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_alert_preferences to fetch.\n     */\n    orderBy?: discussionboard_alert_preferencesOrderByWithRelationInput | discussionboard_alert_preferencesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_alert_preferences.\n     */\n    cursor?: discussionboard_alert_preferencesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_alert_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_alert_preferences.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_alert_preferences.\n     */\n    distinct?: Discussionboard_alert_preferencesScalarFieldEnum | Discussionboard_alert_preferencesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_alert_preferences findFirstOrThrow\n   */\n  export type discussionboard_alert_preferencesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_alert_preferences to fetch.\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_alert_preferences to fetch.\n     */\n    orderBy?: discussionboard_alert_preferencesOrderByWithRelationInput | discussionboard_alert_preferencesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_alert_preferences.\n     */\n    cursor?: discussionboard_alert_preferencesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_alert_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_alert_preferences.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_alert_preferences.\n     */\n    distinct?: Discussionboard_alert_preferencesScalarFieldEnum | Discussionboard_alert_preferencesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_alert_preferences findMany\n   */\n  export type discussionboard_alert_preferencesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_alert_preferences to fetch.\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_alert_preferences to fetch.\n     */\n    orderBy?: discussionboard_alert_preferencesOrderByWithRelationInput | discussionboard_alert_preferencesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_alert_preferences.\n     */\n    cursor?: discussionboard_alert_preferencesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_alert_preferences from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_alert_preferences.\n     */\n    skip?: number\n    distinct?: Discussionboard_alert_preferencesScalarFieldEnum | Discussionboard_alert_preferencesScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_alert_preferences create\n   */\n  export type discussionboard_alert_preferencesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_alert_preferences.\n     */\n    data: XOR<discussionboard_alert_preferencesCreateInput, discussionboard_alert_preferencesUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_alert_preferences createMany\n   */\n  export type discussionboard_alert_preferencesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_alert_preferences.\n     */\n    data: discussionboard_alert_preferencesCreateManyInput | discussionboard_alert_preferencesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_alert_preferences createManyAndReturn\n   */\n  export type discussionboard_alert_preferencesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_alert_preferences.\n     */\n    data: discussionboard_alert_preferencesCreateManyInput | discussionboard_alert_preferencesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_alert_preferences update\n   */\n  export type discussionboard_alert_preferencesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_alert_preferences.\n     */\n    data: XOR<discussionboard_alert_preferencesUpdateInput, discussionboard_alert_preferencesUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_alert_preferences to update.\n     */\n    where: discussionboard_alert_preferencesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_alert_preferences updateMany\n   */\n  export type discussionboard_alert_preferencesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_alert_preferences.\n     */\n    data: XOR<discussionboard_alert_preferencesUpdateManyMutationInput, discussionboard_alert_preferencesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_alert_preferences to update\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * Limit how many discussionboard_alert_preferences to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_alert_preferences updateManyAndReturn\n   */\n  export type discussionboard_alert_preferencesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_alert_preferences.\n     */\n    data: XOR<discussionboard_alert_preferencesUpdateManyMutationInput, discussionboard_alert_preferencesUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_alert_preferences to update\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * Limit how many discussionboard_alert_preferences to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_alert_preferences upsert\n   */\n  export type discussionboard_alert_preferencesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_alert_preferences to update in case it exists.\n     */\n    where: discussionboard_alert_preferencesWhereUniqueInput\n    /**\n     * In case the discussionboard_alert_preferences found by the `where` argument doesn't exist, create a new discussionboard_alert_preferences with this data.\n     */\n    create: XOR<discussionboard_alert_preferencesCreateInput, discussionboard_alert_preferencesUncheckedCreateInput>\n    /**\n     * In case the discussionboard_alert_preferences was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_alert_preferencesUpdateInput, discussionboard_alert_preferencesUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_alert_preferences delete\n   */\n  export type discussionboard_alert_preferencesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_alert_preferences to delete.\n     */\n    where: discussionboard_alert_preferencesWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_alert_preferences deleteMany\n   */\n  export type discussionboard_alert_preferencesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_alert_preferences to delete\n     */\n    where?: discussionboard_alert_preferencesWhereInput\n    /**\n     * Limit how many discussionboard_alert_preferences to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_alert_preferences without action\n   */\n  export type discussionboard_alert_preferencesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_alert_preferences\n     */\n    select?: discussionboard_alert_preferencesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_alert_preferences\n     */\n    omit?: discussionboard_alert_preferencesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_alert_preferencesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_action_logs\n   */\n\n  export type AggregateDiscussionboard_action_logs = {\n    _count: Discussionboard_action_logsCountAggregateOutputType | null\n    _min: Discussionboard_action_logsMinAggregateOutputType | null\n    _max: Discussionboard_action_logsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_action_logsMinAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    event_type: string | null\n    event_target_id: string | null\n    metadata: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_action_logsMaxAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    event_type: string | null\n    event_target_id: string | null\n    metadata: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_action_logsCountAggregateOutputType = {\n    id: number\n    actor_id: number\n    event_type: number\n    event_target_id: number\n    metadata: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_action_logsMinAggregateInputType = {\n    id?: true\n    actor_id?: true\n    event_type?: true\n    event_target_id?: true\n    metadata?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_action_logsMaxAggregateInputType = {\n    id?: true\n    actor_id?: true\n    event_type?: true\n    event_target_id?: true\n    metadata?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_action_logsCountAggregateInputType = {\n    id?: true\n    actor_id?: true\n    event_type?: true\n    event_target_id?: true\n    metadata?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_action_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_action_logs to aggregate.\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_action_logs to fetch.\n     */\n    orderBy?: discussionboard_action_logsOrderByWithRelationInput | discussionboard_action_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_action_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_action_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_action_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_action_logs\n    **/\n    _count?: true | Discussionboard_action_logsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_action_logsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_action_logsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_action_logsAggregateType<T extends Discussionboard_action_logsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_action_logs]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_action_logs[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_action_logs[P]>\n  }\n\n\n\n\n  export type discussionboard_action_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_action_logsWhereInput\n    orderBy?: discussionboard_action_logsOrderByWithAggregationInput | discussionboard_action_logsOrderByWithAggregationInput[]\n    by: Discussionboard_action_logsScalarFieldEnum[] | Discussionboard_action_logsScalarFieldEnum\n    having?: discussionboard_action_logsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_action_logsCountAggregateInputType | true\n    _min?: Discussionboard_action_logsMinAggregateInputType\n    _max?: Discussionboard_action_logsMaxAggregateInputType\n  }\n\n  export type Discussionboard_action_logsGroupByOutputType = {\n    id: string\n    actor_id: string\n    event_type: string\n    event_target_id: string | null\n    metadata: string | null\n    created_at: Date\n    _count: Discussionboard_action_logsCountAggregateOutputType | null\n    _min: Discussionboard_action_logsMinAggregateOutputType | null\n    _max: Discussionboard_action_logsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_action_logsGroupByPayload<T extends discussionboard_action_logsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_action_logsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_action_logsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_action_logsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_action_logsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_action_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    event_type?: boolean\n    event_target_id?: boolean\n    metadata?: boolean\n    created_at?: boolean\n    fk_action_log_actor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_action_logs\"]>\n\n  export type discussionboard_action_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    event_type?: boolean\n    event_target_id?: boolean\n    metadata?: boolean\n    created_at?: boolean\n    fk_action_log_actor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_action_logs\"]>\n\n  export type discussionboard_action_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    event_type?: boolean\n    event_target_id?: boolean\n    metadata?: boolean\n    created_at?: boolean\n    fk_action_log_actor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_action_logs\"]>\n\n  export type discussionboard_action_logsSelectScalar = {\n    id?: boolean\n    actor_id?: boolean\n    event_type?: boolean\n    event_target_id?: boolean\n    metadata?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_action_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_id\" | \"event_type\" | \"event_target_id\" | \"metadata\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_action_logs\"]>\n  export type discussionboard_action_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_action_log_actor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_action_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_action_log_actor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n  export type discussionboard_action_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_action_log_actor?: boolean | discussionboard_membersDefaultArgs<ExtArgs>\n  }\n\n  export type $discussionboard_action_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_action_logs\"\n    objects: {\n      fk_action_log_actor: Prisma.$discussionboard_membersPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key. Unique identifier for each log entry.\n       */\n      id: string\n      /**\n       * Actor's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related user type associated with this action. This ties each log entry to the user responsible for the action, supporting auditability and cross-user queries.\n       */\n      actor_id: string\n      /**\n       * Type of action performed. Implements event categorization (e.g., POST_CREATED, COMMENT_DELETED, MODERATOR_BAN). Enables filtering and auditing by action nature. Ensures normalization by not encoding rules in single fields. Example: 'POST_DELETED'.\n       */\n      event_type: string\n      /**\n       * Associated entity ID for this action (e.g., post, comment, report), implements requirement for contextual event reference. Maintains normalized design by storing IDs only. Example: The comment or post UUID affected. Nullable if event affects no entity.\n       */\n      event_target_id: string | null\n      /**\n       * Additional JSON metadata for extensibility (e.g., IP address, device, moderation reason). Implements extensibility and normalization by not hardcoding new columns for rare event data. Example: '{\"reason\":\"Spam\",\"ip\":\"10.1.2.3\"}'.\n       */\n      metadata: string | null\n      /**\n       * Timestamp when the action occurred. Implements mandatory audit resolution and helps support sorting/filtering by time. Example: '2025-07-22T13:30:45.969+09:00'.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_action_logs\"]>\n    composites: {}\n  }\n\n  type discussionboard_action_logsGetPayload<S extends boolean | null | undefined | discussionboard_action_logsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_action_logsPayload, S>\n\n  type discussionboard_action_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_action_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_action_logsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_action_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_action_logs'], meta: { name: 'discussionboard_action_logs' } }\n    /**\n     * Find zero or one Discussionboard_action_logs that matches the filter.\n     * @param {discussionboard_action_logsFindUniqueArgs} args - Arguments to find a Discussionboard_action_logs\n     * @example\n     * // Get one Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_action_logsFindUniqueArgs>(args: SelectSubset<T, discussionboard_action_logsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_action_logs that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_action_logsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_action_logs\n     * @example\n     * // Get one Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_action_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_action_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_action_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_action_logsFindFirstArgs} args - Arguments to find a Discussionboard_action_logs\n     * @example\n     * // Get one Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_action_logsFindFirstArgs>(args?: SelectSubset<T, discussionboard_action_logsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_action_logs that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_action_logsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_action_logs\n     * @example\n     * // Get one Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_action_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_action_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_action_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_action_logsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findMany()\n     * \n     * // Get first 10 Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_action_logsWithIdOnly = await prisma.discussionboard_action_logs.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_action_logsFindManyArgs>(args?: SelectSubset<T, discussionboard_action_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_action_logs.\n     * @param {discussionboard_action_logsCreateArgs} args - Arguments to create a Discussionboard_action_logs.\n     * @example\n     * // Create one Discussionboard_action_logs\n     * const Discussionboard_action_logs = await prisma.discussionboard_action_logs.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_action_logs\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_action_logsCreateArgs>(args: SelectSubset<T, discussionboard_action_logsCreateArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_action_logs.\n     * @param {discussionboard_action_logsCreateManyArgs} args - Arguments to create many Discussionboard_action_logs.\n     * @example\n     * // Create many Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_action_logsCreateManyArgs>(args?: SelectSubset<T, discussionboard_action_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_action_logs and returns the data saved in the database.\n     * @param {discussionboard_action_logsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_action_logs.\n     * @example\n     * // Create many Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_action_logs and only return the `id`\n     * const discussionboard_action_logsWithIdOnly = await prisma.discussionboard_action_logs.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_action_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_action_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_action_logs.\n     * @param {discussionboard_action_logsDeleteArgs} args - Arguments to delete one Discussionboard_action_logs.\n     * @example\n     * // Delete one Discussionboard_action_logs\n     * const Discussionboard_action_logs = await prisma.discussionboard_action_logs.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_action_logs\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_action_logsDeleteArgs>(args: SelectSubset<T, discussionboard_action_logsDeleteArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_action_logs.\n     * @param {discussionboard_action_logsUpdateArgs} args - Arguments to update one Discussionboard_action_logs.\n     * @example\n     * // Update one Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_action_logsUpdateArgs>(args: SelectSubset<T, discussionboard_action_logsUpdateArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_action_logs.\n     * @param {discussionboard_action_logsDeleteManyArgs} args - Arguments to filter Discussionboard_action_logs to delete.\n     * @example\n     * // Delete a few Discussionboard_action_logs\n     * const { count } = await prisma.discussionboard_action_logs.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_action_logsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_action_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_action_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_action_logsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_action_logsUpdateManyArgs>(args: SelectSubset<T, discussionboard_action_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_action_logs and returns the data updated in the database.\n     * @param {discussionboard_action_logsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_action_logs.\n     * @example\n     * // Update many Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_action_logs and only return the `id`\n     * const discussionboard_action_logsWithIdOnly = await prisma.discussionboard_action_logs.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_action_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_action_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_action_logs.\n     * @param {discussionboard_action_logsUpsertArgs} args - Arguments to update or create a Discussionboard_action_logs.\n     * @example\n     * // Update or create a Discussionboard_action_logs\n     * const discussionboard_action_logs = await prisma.discussionboard_action_logs.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_action_logs\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_action_logs we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_action_logsUpsertArgs>(args: SelectSubset<T, discussionboard_action_logsUpsertArgs<ExtArgs>>): Prisma__discussionboard_action_logsClient<$Result.GetResult<Prisma.$discussionboard_action_logsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_action_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_action_logsCountArgs} args - Arguments to filter Discussionboard_action_logs to count.\n     * @example\n     * // Count the number of Discussionboard_action_logs\n     * const count = await prisma.discussionboard_action_logs.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_action_logs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_action_logsCountArgs>(\n      args?: Subset<T, discussionboard_action_logsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_action_logsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_action_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_action_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_action_logsAggregateArgs>(args: Subset<T, Discussionboard_action_logsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_action_logsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_action_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_action_logsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_action_logsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_action_logsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_action_logsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_action_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_action_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_action_logs model\n   */\n  readonly fields: discussionboard_action_logsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_action_logs.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_action_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_action_log_actor<T extends discussionboard_membersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_membersDefaultArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_action_logs model\n   */\n  interface discussionboard_action_logsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_action_logs\", 'String'>\n    readonly actor_id: FieldRef<\"discussionboard_action_logs\", 'String'>\n    readonly event_type: FieldRef<\"discussionboard_action_logs\", 'String'>\n    readonly event_target_id: FieldRef<\"discussionboard_action_logs\", 'String'>\n    readonly metadata: FieldRef<\"discussionboard_action_logs\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_action_logs\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_action_logs findUnique\n   */\n  export type discussionboard_action_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_action_logs to fetch.\n     */\n    where: discussionboard_action_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_action_logs findUniqueOrThrow\n   */\n  export type discussionboard_action_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_action_logs to fetch.\n     */\n    where: discussionboard_action_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_action_logs findFirst\n   */\n  export type discussionboard_action_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_action_logs to fetch.\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_action_logs to fetch.\n     */\n    orderBy?: discussionboard_action_logsOrderByWithRelationInput | discussionboard_action_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_action_logs.\n     */\n    cursor?: discussionboard_action_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_action_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_action_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_action_logs.\n     */\n    distinct?: Discussionboard_action_logsScalarFieldEnum | Discussionboard_action_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_action_logs findFirstOrThrow\n   */\n  export type discussionboard_action_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_action_logs to fetch.\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_action_logs to fetch.\n     */\n    orderBy?: discussionboard_action_logsOrderByWithRelationInput | discussionboard_action_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_action_logs.\n     */\n    cursor?: discussionboard_action_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_action_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_action_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_action_logs.\n     */\n    distinct?: Discussionboard_action_logsScalarFieldEnum | Discussionboard_action_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_action_logs findMany\n   */\n  export type discussionboard_action_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_action_logs to fetch.\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_action_logs to fetch.\n     */\n    orderBy?: discussionboard_action_logsOrderByWithRelationInput | discussionboard_action_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_action_logs.\n     */\n    cursor?: discussionboard_action_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_action_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_action_logs.\n     */\n    skip?: number\n    distinct?: Discussionboard_action_logsScalarFieldEnum | Discussionboard_action_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_action_logs create\n   */\n  export type discussionboard_action_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_action_logs.\n     */\n    data: XOR<discussionboard_action_logsCreateInput, discussionboard_action_logsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_action_logs createMany\n   */\n  export type discussionboard_action_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_action_logs.\n     */\n    data: discussionboard_action_logsCreateManyInput | discussionboard_action_logsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_action_logs createManyAndReturn\n   */\n  export type discussionboard_action_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_action_logs.\n     */\n    data: discussionboard_action_logsCreateManyInput | discussionboard_action_logsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_action_logs update\n   */\n  export type discussionboard_action_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_action_logs.\n     */\n    data: XOR<discussionboard_action_logsUpdateInput, discussionboard_action_logsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_action_logs to update.\n     */\n    where: discussionboard_action_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_action_logs updateMany\n   */\n  export type discussionboard_action_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_action_logs.\n     */\n    data: XOR<discussionboard_action_logsUpdateManyMutationInput, discussionboard_action_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_action_logs to update\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * Limit how many discussionboard_action_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_action_logs updateManyAndReturn\n   */\n  export type discussionboard_action_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_action_logs.\n     */\n    data: XOR<discussionboard_action_logsUpdateManyMutationInput, discussionboard_action_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_action_logs to update\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * Limit how many discussionboard_action_logs to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_action_logs upsert\n   */\n  export type discussionboard_action_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_action_logs to update in case it exists.\n     */\n    where: discussionboard_action_logsWhereUniqueInput\n    /**\n     * In case the discussionboard_action_logs found by the `where` argument doesn't exist, create a new discussionboard_action_logs with this data.\n     */\n    create: XOR<discussionboard_action_logsCreateInput, discussionboard_action_logsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_action_logs was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_action_logsUpdateInput, discussionboard_action_logsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_action_logs delete\n   */\n  export type discussionboard_action_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_action_logs to delete.\n     */\n    where: discussionboard_action_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_action_logs deleteMany\n   */\n  export type discussionboard_action_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_action_logs to delete\n     */\n    where?: discussionboard_action_logsWhereInput\n    /**\n     * Limit how many discussionboard_action_logs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_action_logs without action\n   */\n  export type discussionboard_action_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_action_logs\n     */\n    select?: discussionboard_action_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_action_logs\n     */\n    omit?: discussionboard_action_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_action_logsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_error_logs\n   */\n\n  export type AggregateDiscussionboard_error_logs = {\n    _count: Discussionboard_error_logsCountAggregateOutputType | null\n    _min: Discussionboard_error_logsMinAggregateOutputType | null\n    _max: Discussionboard_error_logsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_error_logsMinAggregateOutputType = {\n    id: string | null\n    error_code: string | null\n    error_message: string | null\n    stack_trace: string | null\n    context_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_error_logsMaxAggregateOutputType = {\n    id: string | null\n    error_code: string | null\n    error_message: string | null\n    stack_trace: string | null\n    context_id: string | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_error_logsCountAggregateOutputType = {\n    id: number\n    error_code: number\n    error_message: number\n    stack_trace: number\n    context_id: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_error_logsMinAggregateInputType = {\n    id?: true\n    error_code?: true\n    error_message?: true\n    stack_trace?: true\n    context_id?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_error_logsMaxAggregateInputType = {\n    id?: true\n    error_code?: true\n    error_message?: true\n    stack_trace?: true\n    context_id?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_error_logsCountAggregateInputType = {\n    id?: true\n    error_code?: true\n    error_message?: true\n    stack_trace?: true\n    context_id?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_error_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_error_logs to aggregate.\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_error_logs to fetch.\n     */\n    orderBy?: discussionboard_error_logsOrderByWithRelationInput | discussionboard_error_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_error_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_error_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_error_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_error_logs\n    **/\n    _count?: true | Discussionboard_error_logsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_error_logsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_error_logsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_error_logsAggregateType<T extends Discussionboard_error_logsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_error_logs]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_error_logs[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_error_logs[P]>\n  }\n\n\n\n\n  export type discussionboard_error_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_error_logsWhereInput\n    orderBy?: discussionboard_error_logsOrderByWithAggregationInput | discussionboard_error_logsOrderByWithAggregationInput[]\n    by: Discussionboard_error_logsScalarFieldEnum[] | Discussionboard_error_logsScalarFieldEnum\n    having?: discussionboard_error_logsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_error_logsCountAggregateInputType | true\n    _min?: Discussionboard_error_logsMinAggregateInputType\n    _max?: Discussionboard_error_logsMaxAggregateInputType\n  }\n\n  export type Discussionboard_error_logsGroupByOutputType = {\n    id: string\n    error_code: string\n    error_message: string\n    stack_trace: string | null\n    context_id: string | null\n    created_at: Date\n    _count: Discussionboard_error_logsCountAggregateOutputType | null\n    _min: Discussionboard_error_logsMinAggregateOutputType | null\n    _max: Discussionboard_error_logsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_error_logsGroupByPayload<T extends discussionboard_error_logsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_error_logsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_error_logsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_error_logsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_error_logsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_error_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    error_code?: boolean\n    error_message?: boolean\n    stack_trace?: boolean\n    context_id?: boolean\n    created_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_error_logs\"]>\n\n  export type discussionboard_error_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    error_code?: boolean\n    error_message?: boolean\n    stack_trace?: boolean\n    context_id?: boolean\n    created_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_error_logs\"]>\n\n  export type discussionboard_error_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    error_code?: boolean\n    error_message?: boolean\n    stack_trace?: boolean\n    context_id?: boolean\n    created_at?: boolean\n  }, ExtArgs[\"result\"][\"discussionboard_error_logs\"]>\n\n  export type discussionboard_error_logsSelectScalar = {\n    id?: boolean\n    error_code?: boolean\n    error_message?: boolean\n    stack_trace?: boolean\n    context_id?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_error_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"error_code\" | \"error_message\" | \"stack_trace\" | \"context_id\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_error_logs\"]>\n\n  export type $discussionboard_error_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_error_logs\"\n    objects: {}\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Application-defined error or exception code. Enables quick error categorization and system monitoring. Example: 'API_TIMEOUT', 'UNCAUGHT_EXCEPTION'.\n       */\n      error_code: string\n      /**\n       * Human-readable error message for reporting and debugging. Meets compliance for log clarity. Example: 'Failed to fetch posts due to network timeout.'\n       */\n      error_message: string\n      /**\n       * Full stack trace or technical details for debugging. Fulfills non-functional requirements for detailed auditing; normalized by isolating trace info from other data. Nullable if unavailable. Example: JavaScript stack trace or error object.\n       */\n      stack_trace: string | null\n      /**\n       * Arbitrary context entity (e.g., API request ID or related entity UUID). Supports linking errors to request or entity. Nullable if not applicable.\n       */\n      context_id: string | null\n      /**\n       * Timestamp the error was recorded, allows sequencing and SLA tracking. Example: '2025-07-22T13:30:45.969+09:00'.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_error_logs\"]>\n    composites: {}\n  }\n\n  type discussionboard_error_logsGetPayload<S extends boolean | null | undefined | discussionboard_error_logsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_error_logsPayload, S>\n\n  type discussionboard_error_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_error_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_error_logsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_error_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_error_logs'], meta: { name: 'discussionboard_error_logs' } }\n    /**\n     * Find zero or one Discussionboard_error_logs that matches the filter.\n     * @param {discussionboard_error_logsFindUniqueArgs} args - Arguments to find a Discussionboard_error_logs\n     * @example\n     * // Get one Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_error_logsFindUniqueArgs>(args: SelectSubset<T, discussionboard_error_logsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_error_logs that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_error_logsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_error_logs\n     * @example\n     * // Get one Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_error_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_error_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_error_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_error_logsFindFirstArgs} args - Arguments to find a Discussionboard_error_logs\n     * @example\n     * // Get one Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_error_logsFindFirstArgs>(args?: SelectSubset<T, discussionboard_error_logsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_error_logs that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_error_logsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_error_logs\n     * @example\n     * // Get one Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_error_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_error_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_error_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_error_logsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findMany()\n     * \n     * // Get first 10 Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_error_logsWithIdOnly = await prisma.discussionboard_error_logs.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_error_logsFindManyArgs>(args?: SelectSubset<T, discussionboard_error_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_error_logs.\n     * @param {discussionboard_error_logsCreateArgs} args - Arguments to create a Discussionboard_error_logs.\n     * @example\n     * // Create one Discussionboard_error_logs\n     * const Discussionboard_error_logs = await prisma.discussionboard_error_logs.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_error_logs\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_error_logsCreateArgs>(args: SelectSubset<T, discussionboard_error_logsCreateArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_error_logs.\n     * @param {discussionboard_error_logsCreateManyArgs} args - Arguments to create many Discussionboard_error_logs.\n     * @example\n     * // Create many Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_error_logsCreateManyArgs>(args?: SelectSubset<T, discussionboard_error_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_error_logs and returns the data saved in the database.\n     * @param {discussionboard_error_logsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_error_logs.\n     * @example\n     * // Create many Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_error_logs and only return the `id`\n     * const discussionboard_error_logsWithIdOnly = await prisma.discussionboard_error_logs.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_error_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_error_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_error_logs.\n     * @param {discussionboard_error_logsDeleteArgs} args - Arguments to delete one Discussionboard_error_logs.\n     * @example\n     * // Delete one Discussionboard_error_logs\n     * const Discussionboard_error_logs = await prisma.discussionboard_error_logs.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_error_logs\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_error_logsDeleteArgs>(args: SelectSubset<T, discussionboard_error_logsDeleteArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_error_logs.\n     * @param {discussionboard_error_logsUpdateArgs} args - Arguments to update one Discussionboard_error_logs.\n     * @example\n     * // Update one Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_error_logsUpdateArgs>(args: SelectSubset<T, discussionboard_error_logsUpdateArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_error_logs.\n     * @param {discussionboard_error_logsDeleteManyArgs} args - Arguments to filter Discussionboard_error_logs to delete.\n     * @example\n     * // Delete a few Discussionboard_error_logs\n     * const { count } = await prisma.discussionboard_error_logs.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_error_logsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_error_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_error_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_error_logsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_error_logsUpdateManyArgs>(args: SelectSubset<T, discussionboard_error_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_error_logs and returns the data updated in the database.\n     * @param {discussionboard_error_logsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_error_logs.\n     * @example\n     * // Update many Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_error_logs and only return the `id`\n     * const discussionboard_error_logsWithIdOnly = await prisma.discussionboard_error_logs.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_error_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_error_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_error_logs.\n     * @param {discussionboard_error_logsUpsertArgs} args - Arguments to update or create a Discussionboard_error_logs.\n     * @example\n     * // Update or create a Discussionboard_error_logs\n     * const discussionboard_error_logs = await prisma.discussionboard_error_logs.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_error_logs\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_error_logs we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_error_logsUpsertArgs>(args: SelectSubset<T, discussionboard_error_logsUpsertArgs<ExtArgs>>): Prisma__discussionboard_error_logsClient<$Result.GetResult<Prisma.$discussionboard_error_logsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_error_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_error_logsCountArgs} args - Arguments to filter Discussionboard_error_logs to count.\n     * @example\n     * // Count the number of Discussionboard_error_logs\n     * const count = await prisma.discussionboard_error_logs.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_error_logs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_error_logsCountArgs>(\n      args?: Subset<T, discussionboard_error_logsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_error_logsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_error_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_error_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_error_logsAggregateArgs>(args: Subset<T, Discussionboard_error_logsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_error_logsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_error_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_error_logsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_error_logsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_error_logsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_error_logsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_error_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_error_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_error_logs model\n   */\n  readonly fields: discussionboard_error_logsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_error_logs.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_error_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_error_logs model\n   */\n  interface discussionboard_error_logsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_error_logs\", 'String'>\n    readonly error_code: FieldRef<\"discussionboard_error_logs\", 'String'>\n    readonly error_message: FieldRef<\"discussionboard_error_logs\", 'String'>\n    readonly stack_trace: FieldRef<\"discussionboard_error_logs\", 'String'>\n    readonly context_id: FieldRef<\"discussionboard_error_logs\", 'String'>\n    readonly created_at: FieldRef<\"discussionboard_error_logs\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_error_logs findUnique\n   */\n  export type discussionboard_error_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_error_logs to fetch.\n     */\n    where: discussionboard_error_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_error_logs findUniqueOrThrow\n   */\n  export type discussionboard_error_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_error_logs to fetch.\n     */\n    where: discussionboard_error_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_error_logs findFirst\n   */\n  export type discussionboard_error_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_error_logs to fetch.\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_error_logs to fetch.\n     */\n    orderBy?: discussionboard_error_logsOrderByWithRelationInput | discussionboard_error_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_error_logs.\n     */\n    cursor?: discussionboard_error_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_error_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_error_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_error_logs.\n     */\n    distinct?: Discussionboard_error_logsScalarFieldEnum | Discussionboard_error_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_error_logs findFirstOrThrow\n   */\n  export type discussionboard_error_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_error_logs to fetch.\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_error_logs to fetch.\n     */\n    orderBy?: discussionboard_error_logsOrderByWithRelationInput | discussionboard_error_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_error_logs.\n     */\n    cursor?: discussionboard_error_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_error_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_error_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_error_logs.\n     */\n    distinct?: Discussionboard_error_logsScalarFieldEnum | Discussionboard_error_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_error_logs findMany\n   */\n  export type discussionboard_error_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_error_logs to fetch.\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_error_logs to fetch.\n     */\n    orderBy?: discussionboard_error_logsOrderByWithRelationInput | discussionboard_error_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_error_logs.\n     */\n    cursor?: discussionboard_error_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_error_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_error_logs.\n     */\n    skip?: number\n    distinct?: Discussionboard_error_logsScalarFieldEnum | Discussionboard_error_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_error_logs create\n   */\n  export type discussionboard_error_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_error_logs.\n     */\n    data: XOR<discussionboard_error_logsCreateInput, discussionboard_error_logsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_error_logs createMany\n   */\n  export type discussionboard_error_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_error_logs.\n     */\n    data: discussionboard_error_logsCreateManyInput | discussionboard_error_logsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_error_logs createManyAndReturn\n   */\n  export type discussionboard_error_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_error_logs.\n     */\n    data: discussionboard_error_logsCreateManyInput | discussionboard_error_logsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_error_logs update\n   */\n  export type discussionboard_error_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_error_logs.\n     */\n    data: XOR<discussionboard_error_logsUpdateInput, discussionboard_error_logsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_error_logs to update.\n     */\n    where: discussionboard_error_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_error_logs updateMany\n   */\n  export type discussionboard_error_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_error_logs.\n     */\n    data: XOR<discussionboard_error_logsUpdateManyMutationInput, discussionboard_error_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_error_logs to update\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * Limit how many discussionboard_error_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_error_logs updateManyAndReturn\n   */\n  export type discussionboard_error_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_error_logs.\n     */\n    data: XOR<discussionboard_error_logsUpdateManyMutationInput, discussionboard_error_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_error_logs to update\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * Limit how many discussionboard_error_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_error_logs upsert\n   */\n  export type discussionboard_error_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_error_logs to update in case it exists.\n     */\n    where: discussionboard_error_logsWhereUniqueInput\n    /**\n     * In case the discussionboard_error_logs found by the `where` argument doesn't exist, create a new discussionboard_error_logs with this data.\n     */\n    create: XOR<discussionboard_error_logsCreateInput, discussionboard_error_logsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_error_logs was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_error_logsUpdateInput, discussionboard_error_logsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_error_logs delete\n   */\n  export type discussionboard_error_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n    /**\n     * Filter which discussionboard_error_logs to delete.\n     */\n    where: discussionboard_error_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_error_logs deleteMany\n   */\n  export type discussionboard_error_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_error_logs to delete\n     */\n    where?: discussionboard_error_logsWhereInput\n    /**\n     * Limit how many discussionboard_error_logs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_error_logs without action\n   */\n  export type discussionboard_error_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_error_logs\n     */\n    select?: discussionboard_error_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_error_logs\n     */\n    omit?: discussionboard_error_logsOmit<ExtArgs> | null\n  }\n\n\n  /**\n   * Model discussionboard_api_access_logs\n   */\n\n  export type AggregateDiscussionboard_api_access_logs = {\n    _count: Discussionboard_api_access_logsCountAggregateOutputType | null\n    _avg: Discussionboard_api_access_logsAvgAggregateOutputType | null\n    _sum: Discussionboard_api_access_logsSumAggregateOutputType | null\n    _min: Discussionboard_api_access_logsMinAggregateOutputType | null\n    _max: Discussionboard_api_access_logsMaxAggregateOutputType | null\n  }\n\n  export type Discussionboard_api_access_logsAvgAggregateOutputType = {\n    status_code: number | null\n    response_time_ms: number | null\n  }\n\n  export type Discussionboard_api_access_logsSumAggregateOutputType = {\n    status_code: number | null\n    response_time_ms: number | null\n  }\n\n  export type Discussionboard_api_access_logsMinAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    method: string | null\n    endpoint: string | null\n    status_code: number | null\n    ip_address: string | null\n    user_agent: string | null\n    response_time_ms: number | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_api_access_logsMaxAggregateOutputType = {\n    id: string | null\n    actor_id: string | null\n    method: string | null\n    endpoint: string | null\n    status_code: number | null\n    ip_address: string | null\n    user_agent: string | null\n    response_time_ms: number | null\n    created_at: Date | null\n  }\n\n  export type Discussionboard_api_access_logsCountAggregateOutputType = {\n    id: number\n    actor_id: number\n    method: number\n    endpoint: number\n    status_code: number\n    ip_address: number\n    user_agent: number\n    response_time_ms: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Discussionboard_api_access_logsAvgAggregateInputType = {\n    status_code?: true\n    response_time_ms?: true\n  }\n\n  export type Discussionboard_api_access_logsSumAggregateInputType = {\n    status_code?: true\n    response_time_ms?: true\n  }\n\n  export type Discussionboard_api_access_logsMinAggregateInputType = {\n    id?: true\n    actor_id?: true\n    method?: true\n    endpoint?: true\n    status_code?: true\n    ip_address?: true\n    user_agent?: true\n    response_time_ms?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_api_access_logsMaxAggregateInputType = {\n    id?: true\n    actor_id?: true\n    method?: true\n    endpoint?: true\n    status_code?: true\n    ip_address?: true\n    user_agent?: true\n    response_time_ms?: true\n    created_at?: true\n  }\n\n  export type Discussionboard_api_access_logsCountAggregateInputType = {\n    id?: true\n    actor_id?: true\n    method?: true\n    endpoint?: true\n    status_code?: true\n    ip_address?: true\n    user_agent?: true\n    response_time_ms?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Discussionboard_api_access_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_api_access_logs to aggregate.\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_api_access_logs to fetch.\n     */\n    orderBy?: discussionboard_api_access_logsOrderByWithRelationInput | discussionboard_api_access_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: discussionboard_api_access_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_api_access_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_api_access_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned discussionboard_api_access_logs\n    **/\n    _count?: true | Discussionboard_api_access_logsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Discussionboard_api_access_logsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Discussionboard_api_access_logsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Discussionboard_api_access_logsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Discussionboard_api_access_logsMaxAggregateInputType\n  }\n\n  export type GetDiscussionboard_api_access_logsAggregateType<T extends Discussionboard_api_access_logsAggregateArgs> = {\n        [P in keyof T & keyof AggregateDiscussionboard_api_access_logs]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateDiscussionboard_api_access_logs[P]>\n      : GetScalarType<T[P], AggregateDiscussionboard_api_access_logs[P]>\n  }\n\n\n\n\n  export type discussionboard_api_access_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: discussionboard_api_access_logsWhereInput\n    orderBy?: discussionboard_api_access_logsOrderByWithAggregationInput | discussionboard_api_access_logsOrderByWithAggregationInput[]\n    by: Discussionboard_api_access_logsScalarFieldEnum[] | Discussionboard_api_access_logsScalarFieldEnum\n    having?: discussionboard_api_access_logsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Discussionboard_api_access_logsCountAggregateInputType | true\n    _avg?: Discussionboard_api_access_logsAvgAggregateInputType\n    _sum?: Discussionboard_api_access_logsSumAggregateInputType\n    _min?: Discussionboard_api_access_logsMinAggregateInputType\n    _max?: Discussionboard_api_access_logsMaxAggregateInputType\n  }\n\n  export type Discussionboard_api_access_logsGroupByOutputType = {\n    id: string\n    actor_id: string | null\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent: string | null\n    response_time_ms: number\n    created_at: Date\n    _count: Discussionboard_api_access_logsCountAggregateOutputType | null\n    _avg: Discussionboard_api_access_logsAvgAggregateOutputType | null\n    _sum: Discussionboard_api_access_logsSumAggregateOutputType | null\n    _min: Discussionboard_api_access_logsMinAggregateOutputType | null\n    _max: Discussionboard_api_access_logsMaxAggregateOutputType | null\n  }\n\n  type GetDiscussionboard_api_access_logsGroupByPayload<T extends discussionboard_api_access_logsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Discussionboard_api_access_logsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Discussionboard_api_access_logsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Discussionboard_api_access_logsGroupByOutputType[P]>\n            : GetScalarType<T[P], Discussionboard_api_access_logsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type discussionboard_api_access_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    method?: boolean\n    endpoint?: boolean\n    status_code?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    response_time_ms?: boolean\n    created_at?: boolean\n    fk_access_log_actor?: boolean | discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_api_access_logs\"]>\n\n  export type discussionboard_api_access_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    method?: boolean\n    endpoint?: boolean\n    status_code?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    response_time_ms?: boolean\n    created_at?: boolean\n    fk_access_log_actor?: boolean | discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_api_access_logs\"]>\n\n  export type discussionboard_api_access_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    actor_id?: boolean\n    method?: boolean\n    endpoint?: boolean\n    status_code?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    response_time_ms?: boolean\n    created_at?: boolean\n    fk_access_log_actor?: boolean | discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"discussionboard_api_access_logs\"]>\n\n  export type discussionboard_api_access_logsSelectScalar = {\n    id?: boolean\n    actor_id?: boolean\n    method?: boolean\n    endpoint?: boolean\n    status_code?: boolean\n    ip_address?: boolean\n    user_agent?: boolean\n    response_time_ms?: boolean\n    created_at?: boolean\n  }\n\n  export type discussionboard_api_access_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"actor_id\" | \"method\" | \"endpoint\" | \"status_code\" | \"ip_address\" | \"user_agent\" | \"response_time_ms\" | \"created_at\", ExtArgs[\"result\"][\"discussionboard_api_access_logs\"]>\n  export type discussionboard_api_access_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_access_log_actor?: boolean | discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>\n  }\n  export type discussionboard_api_access_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_access_log_actor?: boolean | discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>\n  }\n  export type discussionboard_api_access_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    fk_access_log_actor?: boolean | discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>\n  }\n\n  export type $discussionboard_api_access_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"discussionboard_api_access_logs\"\n    objects: {\n      fk_access_log_actor: Prisma.$discussionboard_membersPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Authenticated user's {@link discussionboard_members.id}, {@link discussionboard_admins.id}, or related role. Null if guest/public API. Enables audit and correlation to users.\n       */\n      actor_id: string | null\n      /**\n       * HTTP method used for this API call (GET, POST, PATCH, DELETE, etc). Implements API audit detail. Example: 'GET'.\n       */\n      method: string\n      /**\n       * API endpoint path or resource accessed. Enables fine-grained analytics. Example: '/api/comments/12345'.\n       */\n      endpoint: string\n      /**\n       * Returned HTTP status code. Allows compliance and diagnostics on failed/successful calls. Example: 200, 403, 404.\n       */\n      status_code: number\n      /**\n       * IP address of the client for this call. Supports abuse monitoring and incident forensics. Example: '203.0.113.5'.\n       */\n      ip_address: string\n      /**\n       * Client user-agent for context in debugging or device profiling. Nullable if unavailable. Example: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X)'.\n       */\n      user_agent: string | null\n      /**\n       * Request processing latency in milliseconds. Enables API performance monitoring. Example: 163.\n       */\n      response_time_ms: number\n      /**\n       * Timestamp of the API call. Supports retention and incident analysis. Example: '2025-07-22T13:30:45.969+09:00'.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"discussionboard_api_access_logs\"]>\n    composites: {}\n  }\n\n  type discussionboard_api_access_logsGetPayload<S extends boolean | null | undefined | discussionboard_api_access_logsDefaultArgs> = $Result.GetResult<Prisma.$discussionboard_api_access_logsPayload, S>\n\n  type discussionboard_api_access_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<discussionboard_api_access_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Discussionboard_api_access_logsCountAggregateInputType | true\n    }\n\n  export interface discussionboard_api_access_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discussionboard_api_access_logs'], meta: { name: 'discussionboard_api_access_logs' } }\n    /**\n     * Find zero or one Discussionboard_api_access_logs that matches the filter.\n     * @param {discussionboard_api_access_logsFindUniqueArgs} args - Arguments to find a Discussionboard_api_access_logs\n     * @example\n     * // Get one Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends discussionboard_api_access_logsFindUniqueArgs>(args: SelectSubset<T, discussionboard_api_access_logsFindUniqueArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Discussionboard_api_access_logs that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {discussionboard_api_access_logsFindUniqueOrThrowArgs} args - Arguments to find a Discussionboard_api_access_logs\n     * @example\n     * // Get one Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends discussionboard_api_access_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, discussionboard_api_access_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_api_access_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_api_access_logsFindFirstArgs} args - Arguments to find a Discussionboard_api_access_logs\n     * @example\n     * // Get one Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends discussionboard_api_access_logsFindFirstArgs>(args?: SelectSubset<T, discussionboard_api_access_logsFindFirstArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Discussionboard_api_access_logs that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_api_access_logsFindFirstOrThrowArgs} args - Arguments to find a Discussionboard_api_access_logs\n     * @example\n     * // Get one Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends discussionboard_api_access_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, discussionboard_api_access_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Discussionboard_api_access_logs that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_api_access_logsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findMany()\n     * \n     * // Get first 10 Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const discussionboard_api_access_logsWithIdOnly = await prisma.discussionboard_api_access_logs.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends discussionboard_api_access_logsFindManyArgs>(args?: SelectSubset<T, discussionboard_api_access_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Discussionboard_api_access_logs.\n     * @param {discussionboard_api_access_logsCreateArgs} args - Arguments to create a Discussionboard_api_access_logs.\n     * @example\n     * // Create one Discussionboard_api_access_logs\n     * const Discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.create({\n     *   data: {\n     *     // ... data to create a Discussionboard_api_access_logs\n     *   }\n     * })\n     * \n     */\n    create<T extends discussionboard_api_access_logsCreateArgs>(args: SelectSubset<T, discussionboard_api_access_logsCreateArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Discussionboard_api_access_logs.\n     * @param {discussionboard_api_access_logsCreateManyArgs} args - Arguments to create many Discussionboard_api_access_logs.\n     * @example\n     * // Create many Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends discussionboard_api_access_logsCreateManyArgs>(args?: SelectSubset<T, discussionboard_api_access_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Discussionboard_api_access_logs and returns the data saved in the database.\n     * @param {discussionboard_api_access_logsCreateManyAndReturnArgs} args - Arguments to create many Discussionboard_api_access_logs.\n     * @example\n     * // Create many Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Discussionboard_api_access_logs and only return the `id`\n     * const discussionboard_api_access_logsWithIdOnly = await prisma.discussionboard_api_access_logs.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends discussionboard_api_access_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, discussionboard_api_access_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Discussionboard_api_access_logs.\n     * @param {discussionboard_api_access_logsDeleteArgs} args - Arguments to delete one Discussionboard_api_access_logs.\n     * @example\n     * // Delete one Discussionboard_api_access_logs\n     * const Discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.delete({\n     *   where: {\n     *     // ... filter to delete one Discussionboard_api_access_logs\n     *   }\n     * })\n     * \n     */\n    delete<T extends discussionboard_api_access_logsDeleteArgs>(args: SelectSubset<T, discussionboard_api_access_logsDeleteArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Discussionboard_api_access_logs.\n     * @param {discussionboard_api_access_logsUpdateArgs} args - Arguments to update one Discussionboard_api_access_logs.\n     * @example\n     * // Update one Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends discussionboard_api_access_logsUpdateArgs>(args: SelectSubset<T, discussionboard_api_access_logsUpdateArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Discussionboard_api_access_logs.\n     * @param {discussionboard_api_access_logsDeleteManyArgs} args - Arguments to filter Discussionboard_api_access_logs to delete.\n     * @example\n     * // Delete a few Discussionboard_api_access_logs\n     * const { count } = await prisma.discussionboard_api_access_logs.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends discussionboard_api_access_logsDeleteManyArgs>(args?: SelectSubset<T, discussionboard_api_access_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_api_access_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_api_access_logsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends discussionboard_api_access_logsUpdateManyArgs>(args: SelectSubset<T, discussionboard_api_access_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Discussionboard_api_access_logs and returns the data updated in the database.\n     * @param {discussionboard_api_access_logsUpdateManyAndReturnArgs} args - Arguments to update many Discussionboard_api_access_logs.\n     * @example\n     * // Update many Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Discussionboard_api_access_logs and only return the `id`\n     * const discussionboard_api_access_logsWithIdOnly = await prisma.discussionboard_api_access_logs.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends discussionboard_api_access_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, discussionboard_api_access_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Discussionboard_api_access_logs.\n     * @param {discussionboard_api_access_logsUpsertArgs} args - Arguments to update or create a Discussionboard_api_access_logs.\n     * @example\n     * // Update or create a Discussionboard_api_access_logs\n     * const discussionboard_api_access_logs = await prisma.discussionboard_api_access_logs.upsert({\n     *   create: {\n     *     // ... data to create a Discussionboard_api_access_logs\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Discussionboard_api_access_logs we want to update\n     *   }\n     * })\n     */\n    upsert<T extends discussionboard_api_access_logsUpsertArgs>(args: SelectSubset<T, discussionboard_api_access_logsUpsertArgs<ExtArgs>>): Prisma__discussionboard_api_access_logsClient<$Result.GetResult<Prisma.$discussionboard_api_access_logsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Discussionboard_api_access_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_api_access_logsCountArgs} args - Arguments to filter Discussionboard_api_access_logs to count.\n     * @example\n     * // Count the number of Discussionboard_api_access_logs\n     * const count = await prisma.discussionboard_api_access_logs.count({\n     *   where: {\n     *     // ... the filter for the Discussionboard_api_access_logs we want to count\n     *   }\n     * })\n    **/\n    count<T extends discussionboard_api_access_logsCountArgs>(\n      args?: Subset<T, discussionboard_api_access_logsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Discussionboard_api_access_logsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Discussionboard_api_access_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Discussionboard_api_access_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Discussionboard_api_access_logsAggregateArgs>(args: Subset<T, Discussionboard_api_access_logsAggregateArgs>): Prisma.PrismaPromise<GetDiscussionboard_api_access_logsAggregateType<T>>\n\n    /**\n     * Group by Discussionboard_api_access_logs.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {discussionboard_api_access_logsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends discussionboard_api_access_logsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: discussionboard_api_access_logsGroupByArgs['orderBy'] }\n        : { orderBy?: discussionboard_api_access_logsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, discussionboard_api_access_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscussionboard_api_access_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the discussionboard_api_access_logs model\n   */\n  readonly fields: discussionboard_api_access_logsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for discussionboard_api_access_logs.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__discussionboard_api_access_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    fk_access_log_actor<T extends discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs> = {}>(args?: Subset<T, discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs>>): Prisma__discussionboard_membersClient<$Result.GetResult<Prisma.$discussionboard_membersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the discussionboard_api_access_logs model\n   */\n  interface discussionboard_api_access_logsFieldRefs {\n    readonly id: FieldRef<\"discussionboard_api_access_logs\", 'String'>\n    readonly actor_id: FieldRef<\"discussionboard_api_access_logs\", 'String'>\n    readonly method: FieldRef<\"discussionboard_api_access_logs\", 'String'>\n    readonly endpoint: FieldRef<\"discussionboard_api_access_logs\", 'String'>\n    readonly status_code: FieldRef<\"discussionboard_api_access_logs\", 'Int'>\n    readonly ip_address: FieldRef<\"discussionboard_api_access_logs\", 'String'>\n    readonly user_agent: FieldRef<\"discussionboard_api_access_logs\", 'String'>\n    readonly response_time_ms: FieldRef<\"discussionboard_api_access_logs\", 'Int'>\n    readonly created_at: FieldRef<\"discussionboard_api_access_logs\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * discussionboard_api_access_logs findUnique\n   */\n  export type discussionboard_api_access_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_api_access_logs to fetch.\n     */\n    where: discussionboard_api_access_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_api_access_logs findUniqueOrThrow\n   */\n  export type discussionboard_api_access_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_api_access_logs to fetch.\n     */\n    where: discussionboard_api_access_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_api_access_logs findFirst\n   */\n  export type discussionboard_api_access_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_api_access_logs to fetch.\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_api_access_logs to fetch.\n     */\n    orderBy?: discussionboard_api_access_logsOrderByWithRelationInput | discussionboard_api_access_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_api_access_logs.\n     */\n    cursor?: discussionboard_api_access_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_api_access_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_api_access_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_api_access_logs.\n     */\n    distinct?: Discussionboard_api_access_logsScalarFieldEnum | Discussionboard_api_access_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_api_access_logs findFirstOrThrow\n   */\n  export type discussionboard_api_access_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_api_access_logs to fetch.\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_api_access_logs to fetch.\n     */\n    orderBy?: discussionboard_api_access_logsOrderByWithRelationInput | discussionboard_api_access_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for discussionboard_api_access_logs.\n     */\n    cursor?: discussionboard_api_access_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_api_access_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_api_access_logs.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of discussionboard_api_access_logs.\n     */\n    distinct?: Discussionboard_api_access_logsScalarFieldEnum | Discussionboard_api_access_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_api_access_logs findMany\n   */\n  export type discussionboard_api_access_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * Filter, which discussionboard_api_access_logs to fetch.\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of discussionboard_api_access_logs to fetch.\n     */\n    orderBy?: discussionboard_api_access_logsOrderByWithRelationInput | discussionboard_api_access_logsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing discussionboard_api_access_logs.\n     */\n    cursor?: discussionboard_api_access_logsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `±n` discussionboard_api_access_logs from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` discussionboard_api_access_logs.\n     */\n    skip?: number\n    distinct?: Discussionboard_api_access_logsScalarFieldEnum | Discussionboard_api_access_logsScalarFieldEnum[]\n  }\n\n  /**\n   * discussionboard_api_access_logs create\n   */\n  export type discussionboard_api_access_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a discussionboard_api_access_logs.\n     */\n    data: XOR<discussionboard_api_access_logsCreateInput, discussionboard_api_access_logsUncheckedCreateInput>\n  }\n\n  /**\n   * discussionboard_api_access_logs createMany\n   */\n  export type discussionboard_api_access_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many discussionboard_api_access_logs.\n     */\n    data: discussionboard_api_access_logsCreateManyInput | discussionboard_api_access_logsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * discussionboard_api_access_logs createManyAndReturn\n   */\n  export type discussionboard_api_access_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * The data used to create many discussionboard_api_access_logs.\n     */\n    data: discussionboard_api_access_logsCreateManyInput | discussionboard_api_access_logsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_api_access_logs update\n   */\n  export type discussionboard_api_access_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a discussionboard_api_access_logs.\n     */\n    data: XOR<discussionboard_api_access_logsUpdateInput, discussionboard_api_access_logsUncheckedUpdateInput>\n    /**\n     * Choose, which discussionboard_api_access_logs to update.\n     */\n    where: discussionboard_api_access_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_api_access_logs updateMany\n   */\n  export type discussionboard_api_access_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update discussionboard_api_access_logs.\n     */\n    data: XOR<discussionboard_api_access_logsUpdateManyMutationInput, discussionboard_api_access_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_api_access_logs to update\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * Limit how many discussionboard_api_access_logs to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_api_access_logs updateManyAndReturn\n   */\n  export type discussionboard_api_access_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * The data used to update discussionboard_api_access_logs.\n     */\n    data: XOR<discussionboard_api_access_logsUpdateManyMutationInput, discussionboard_api_access_logsUncheckedUpdateManyInput>\n    /**\n     * Filter which discussionboard_api_access_logs to update\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * Limit how many discussionboard_api_access_logs to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * discussionboard_api_access_logs upsert\n   */\n  export type discussionboard_api_access_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the discussionboard_api_access_logs to update in case it exists.\n     */\n    where: discussionboard_api_access_logsWhereUniqueInput\n    /**\n     * In case the discussionboard_api_access_logs found by the `where` argument doesn't exist, create a new discussionboard_api_access_logs with this data.\n     */\n    create: XOR<discussionboard_api_access_logsCreateInput, discussionboard_api_access_logsUncheckedCreateInput>\n    /**\n     * In case the discussionboard_api_access_logs was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<discussionboard_api_access_logsUpdateInput, discussionboard_api_access_logsUncheckedUpdateInput>\n  }\n\n  /**\n   * discussionboard_api_access_logs delete\n   */\n  export type discussionboard_api_access_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n    /**\n     * Filter which discussionboard_api_access_logs to delete.\n     */\n    where: discussionboard_api_access_logsWhereUniqueInput\n  }\n\n  /**\n   * discussionboard_api_access_logs deleteMany\n   */\n  export type discussionboard_api_access_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which discussionboard_api_access_logs to delete\n     */\n    where?: discussionboard_api_access_logsWhereInput\n    /**\n     * Limit how many discussionboard_api_access_logs to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * discussionboard_api_access_logs.fk_access_log_actor\n   */\n  export type discussionboard_api_access_logs$fk_access_log_actorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_members\n     */\n    select?: discussionboard_membersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_members\n     */\n    omit?: discussionboard_membersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_membersInclude<ExtArgs> | null\n    where?: discussionboard_membersWhereInput\n  }\n\n  /**\n   * discussionboard_api_access_logs without action\n   */\n  export type discussionboard_api_access_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the discussionboard_api_access_logs\n     */\n    select?: discussionboard_api_access_logsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the discussionboard_api_access_logs\n     */\n    omit?: discussionboard_api_access_logsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: discussionboard_api_access_logsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Discussionboard_sectionsScalarFieldEnum: {\n    id: 'id',\n    name: 'name',\n    description: 'description',\n    sort_order: 'sort_order',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_sectionsScalarFieldEnum = (typeof Discussionboard_sectionsScalarFieldEnum)[keyof typeof Discussionboard_sectionsScalarFieldEnum]\n\n\n  export const Discussionboard_boardsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_section_id: 'discussionboard_section_id',\n    name: 'name',\n    description: 'description',\n    rules: 'rules',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_boardsScalarFieldEnum = (typeof Discussionboard_boardsScalarFieldEnum)[keyof typeof Discussionboard_boardsScalarFieldEnum]\n\n\n  export const Discussionboard_tagsScalarFieldEnum: {\n    id: 'id',\n    tag: 'tag',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_tagsScalarFieldEnum = (typeof Discussionboard_tagsScalarFieldEnum)[keyof typeof Discussionboard_tagsScalarFieldEnum]\n\n\n  export const Discussionboard_board_subscriptionsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_board_id: 'discussionboard_board_id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_board_subscriptionsScalarFieldEnum = (typeof Discussionboard_board_subscriptionsScalarFieldEnum)[keyof typeof Discussionboard_board_subscriptionsScalarFieldEnum]\n\n\n  export const Discussionboard_board_settingsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_board_id: 'discussionboard_board_id',\n    allow_images: 'allow_images',\n    require_moderator_approval: 'require_moderator_approval',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_board_settingsScalarFieldEnum = (typeof Discussionboard_board_settingsScalarFieldEnum)[keyof typeof Discussionboard_board_settingsScalarFieldEnum]\n\n\n  export const Discussionboard_notification_settingsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    receive_board_notifications: 'receive_board_notifications',\n    receive_mention_notifications: 'receive_mention_notifications',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_notification_settingsScalarFieldEnum = (typeof Discussionboard_notification_settingsScalarFieldEnum)[keyof typeof Discussionboard_notification_settingsScalarFieldEnum]\n\n\n  export const Discussionboard_adminsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    granted_at: 'granted_at',\n    revoked_at: 'revoked_at'\n  };\n\n  export type Discussionboard_adminsScalarFieldEnum = (typeof Discussionboard_adminsScalarFieldEnum)[keyof typeof Discussionboard_adminsScalarFieldEnum]\n\n\n  export const Discussionboard_moderatorsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    granted_at: 'granted_at',\n    revoked_at: 'revoked_at'\n  };\n\n  export type Discussionboard_moderatorsScalarFieldEnum = (typeof Discussionboard_moderatorsScalarFieldEnum)[keyof typeof Discussionboard_moderatorsScalarFieldEnum]\n\n\n  export const Discussionboard_membersScalarFieldEnum: {\n    id: 'id',\n    username: 'username',\n    password_hash: 'password_hash',\n    created_at: 'created_at',\n    activated_at: 'activated_at',\n    deactivated_at: 'deactivated_at'\n  };\n\n  export type Discussionboard_membersScalarFieldEnum = (typeof Discussionboard_membersScalarFieldEnum)[keyof typeof Discussionboard_membersScalarFieldEnum]\n\n\n  export const Discussionboard_guestsScalarFieldEnum: {\n    id: 'id',\n    session_token: 'session_token',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_guestsScalarFieldEnum = (typeof Discussionboard_guestsScalarFieldEnum)[keyof typeof Discussionboard_guestsScalarFieldEnum]\n\n\n  export const Discussionboard_user_profilesScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    display_name: 'display_name',\n    bio: 'bio',\n    avatar_url: 'avatar_url',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_user_profilesScalarFieldEnum = (typeof Discussionboard_user_profilesScalarFieldEnum)[keyof typeof Discussionboard_user_profilesScalarFieldEnum]\n\n\n  export const Discussionboard_user_emailsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    email: 'email',\n    is_verified: 'is_verified',\n    is_primary: 'is_primary',\n    added_at: 'added_at',\n    verified_at: 'verified_at'\n  };\n\n  export type Discussionboard_user_emailsScalarFieldEnum = (typeof Discussionboard_user_emailsScalarFieldEnum)[keyof typeof Discussionboard_user_emailsScalarFieldEnum]\n\n\n  export const Discussionboard_user_authsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    provider: 'provider',\n    provider_user_id: 'provider_user_id',\n    linked_at: 'linked_at',\n    revoked_at: 'revoked_at'\n  };\n\n  export type Discussionboard_user_authsScalarFieldEnum = (typeof Discussionboard_user_authsScalarFieldEnum)[keyof typeof Discussionboard_user_authsScalarFieldEnum]\n\n\n  export const Discussionboard_user_sessionsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    session_token: 'session_token',\n    created_at: 'created_at',\n    expires_at: 'expires_at',\n    revoked_at: 'revoked_at'\n  };\n\n  export type Discussionboard_user_sessionsScalarFieldEnum = (typeof Discussionboard_user_sessionsScalarFieldEnum)[keyof typeof Discussionboard_user_sessionsScalarFieldEnum]\n\n\n  export const Discussionboard_postsScalarFieldEnum: {\n    id: 'id',\n    board_id: 'board_id',\n    author_id: 'author_id',\n    title: 'title',\n    body: 'body',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussionboard_postsScalarFieldEnum = (typeof Discussionboard_postsScalarFieldEnum)[keyof typeof Discussionboard_postsScalarFieldEnum]\n\n\n  export const Discussionboard_post_editsScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    editor_id: 'editor_id',\n    edit_summary: 'edit_summary',\n    edited_at: 'edited_at'\n  };\n\n  export type Discussionboard_post_editsScalarFieldEnum = (typeof Discussionboard_post_editsScalarFieldEnum)[keyof typeof Discussionboard_post_editsScalarFieldEnum]\n\n\n  export const Discussionboard_post_likesScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    user_id: 'user_id',\n    is_like: 'is_like',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_post_likesScalarFieldEnum = (typeof Discussionboard_post_likesScalarFieldEnum)[keyof typeof Discussionboard_post_likesScalarFieldEnum]\n\n\n  export const Discussionboard_post_viewsScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    user_id: 'user_id',\n    session_id: 'session_id',\n    viewed_at: 'viewed_at'\n  };\n\n  export type Discussionboard_post_viewsScalarFieldEnum = (typeof Discussionboard_post_viewsScalarFieldEnum)[keyof typeof Discussionboard_post_viewsScalarFieldEnum]\n\n\n  export const Discussionboard_commentsScalarFieldEnum: {\n    id: 'id',\n    post_id: 'post_id',\n    author_id: 'author_id',\n    parent_id: 'parent_id',\n    body: 'body',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Discussionboard_commentsScalarFieldEnum = (typeof Discussionboard_commentsScalarFieldEnum)[keyof typeof Discussionboard_commentsScalarFieldEnum]\n\n\n  export const Discussionboard_comment_likesScalarFieldEnum: {\n    id: 'id',\n    comment_id: 'comment_id',\n    user_id: 'user_id',\n    is_like: 'is_like',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_comment_likesScalarFieldEnum = (typeof Discussionboard_comment_likesScalarFieldEnum)[keyof typeof Discussionboard_comment_likesScalarFieldEnum]\n\n\n  export const Discussionboard_comment_editsScalarFieldEnum: {\n    id: 'id',\n    comment_id: 'comment_id',\n    editor_id: 'editor_id',\n    edit_summary: 'edit_summary',\n    edited_at: 'edited_at'\n  };\n\n  export type Discussionboard_comment_editsScalarFieldEnum = (typeof Discussionboard_comment_editsScalarFieldEnum)[keyof typeof Discussionboard_comment_editsScalarFieldEnum]\n\n\n  export const Discussionboard_comment_viewsScalarFieldEnum: {\n    id: 'id',\n    comment_id: 'comment_id',\n    user_id: 'user_id',\n    session_id: 'session_id',\n    viewed_at: 'viewed_at'\n  };\n\n  export type Discussionboard_comment_viewsScalarFieldEnum = (typeof Discussionboard_comment_viewsScalarFieldEnum)[keyof typeof Discussionboard_comment_viewsScalarFieldEnum]\n\n\n  export const Discussionboard_reportsScalarFieldEnum: {\n    id: 'id',\n    reporting_member_id: 'reporting_member_id',\n    target_post_id: 'target_post_id',\n    target_comment_id: 'target_comment_id',\n    reason: 'reason',\n    status: 'status',\n    created_at: 'created_at',\n    reviewed_at: 'reviewed_at',\n    resolved_at: 'resolved_at',\n    moderation_note: 'moderation_note'\n  };\n\n  export type Discussionboard_reportsScalarFieldEnum = (typeof Discussionboard_reportsScalarFieldEnum)[keyof typeof Discussionboard_reportsScalarFieldEnum]\n\n\n  export const Discussionboard_moderation_actionsScalarFieldEnum: {\n    id: 'id',\n    actor_admin_id: 'actor_admin_id',\n    actor_moderator_id: 'actor_moderator_id',\n    actor_member_id: 'actor_member_id',\n    related_report_id: 'related_report_id',\n    target_post_id: 'target_post_id',\n    target_comment_id: 'target_comment_id',\n    action_type: 'action_type',\n    action_reason: 'action_reason',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_moderation_actionsScalarFieldEnum = (typeof Discussionboard_moderation_actionsScalarFieldEnum)[keyof typeof Discussionboard_moderation_actionsScalarFieldEnum]\n\n\n  export const Discussionboard_bansScalarFieldEnum: {\n    id: 'id',\n    target_admin_id: 'target_admin_id',\n    target_moderator_id: 'target_moderator_id',\n    target_member_id: 'target_member_id',\n    actor_admin_id: 'actor_admin_id',\n    actor_moderator_id: 'actor_moderator_id',\n    ban_reason: 'ban_reason',\n    ban_start_at: 'ban_start_at',\n    ban_end_at: 'ban_end_at',\n    status: 'status',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_bansScalarFieldEnum = (typeof Discussionboard_bansScalarFieldEnum)[keyof typeof Discussionboard_bansScalarFieldEnum]\n\n\n  export const Discussionboard_warningsScalarFieldEnum: {\n    id: 'id',\n    target_admin_id: 'target_admin_id',\n    target_moderator_id: 'target_moderator_id',\n    target_member_id: 'target_member_id',\n    actor_admin_id: 'actor_admin_id',\n    actor_moderator_id: 'actor_moderator_id',\n    related_report_id: 'related_report_id',\n    reason: 'reason',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_warningsScalarFieldEnum = (typeof Discussionboard_warningsScalarFieldEnum)[keyof typeof Discussionboard_warningsScalarFieldEnum]\n\n\n  export const Discussionboard_audit_logsScalarFieldEnum: {\n    id: 'id',\n    actor_admin_id: 'actor_admin_id',\n    actor_moderator_id: 'actor_moderator_id',\n    actor_member_id: 'actor_member_id',\n    related_report_id: 'related_report_id',\n    related_moderation_action_id: 'related_moderation_action_id',\n    event_type: 'event_type',\n    event_detail: 'event_detail',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_audit_logsScalarFieldEnum = (typeof Discussionboard_audit_logsScalarFieldEnum)[keyof typeof Discussionboard_audit_logsScalarFieldEnum]\n\n\n  export const Discussionboard_community_guidelinesScalarFieldEnum: {\n    id: 'id',\n    title: 'title',\n    body: 'body',\n    order_index: 'order_index',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_community_guidelinesScalarFieldEnum = (typeof Discussionboard_community_guidelinesScalarFieldEnum)[keyof typeof Discussionboard_community_guidelinesScalarFieldEnum]\n\n\n  export const Discussionboard_content_policiesScalarFieldEnum: {\n    id: 'id',\n    policy_code: 'policy_code',\n    description: 'description',\n    category: 'category',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_content_policiesScalarFieldEnum = (typeof Discussionboard_content_policiesScalarFieldEnum)[keyof typeof Discussionboard_content_policiesScalarFieldEnum]\n\n\n  export const Discussionboard_profanity_filtersScalarFieldEnum: {\n    id: 'id',\n    word: 'word',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_profanity_filtersScalarFieldEnum = (typeof Discussionboard_profanity_filtersScalarFieldEnum)[keyof typeof Discussionboard_profanity_filtersScalarFieldEnum]\n\n\n  export const Discussionboard_automated_spam_rulesScalarFieldEnum: {\n    id: 'id',\n    rule_pattern: 'rule_pattern',\n    description: 'description',\n    is_active: 'is_active',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_automated_spam_rulesScalarFieldEnum = (typeof Discussionboard_automated_spam_rulesScalarFieldEnum)[keyof typeof Discussionboard_automated_spam_rulesScalarFieldEnum]\n\n\n  export const Discussionboard_notificationsScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    type: 'type',\n    related_entity_id: 'related_entity_id',\n    related_entity_type: 'related_entity_type',\n    content: 'content',\n    is_read: 'is_read',\n    delivered_at: 'delivered_at',\n    expires_at: 'expires_at'\n  };\n\n  export type Discussionboard_notificationsScalarFieldEnum = (typeof Discussionboard_notificationsScalarFieldEnum)[keyof typeof Discussionboard_notificationsScalarFieldEnum]\n\n\n  export const Discussionboard_alert_preferencesScalarFieldEnum: {\n    id: 'id',\n    discussionboard_member_id: 'discussionboard_member_id',\n    notification_type: 'notification_type',\n    delivery_channel: 'delivery_channel',\n    updated_at: 'updated_at'\n  };\n\n  export type Discussionboard_alert_preferencesScalarFieldEnum = (typeof Discussionboard_alert_preferencesScalarFieldEnum)[keyof typeof Discussionboard_alert_preferencesScalarFieldEnum]\n\n\n  export const Discussionboard_action_logsScalarFieldEnum: {\n    id: 'id',\n    actor_id: 'actor_id',\n    event_type: 'event_type',\n    event_target_id: 'event_target_id',\n    metadata: 'metadata',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_action_logsScalarFieldEnum = (typeof Discussionboard_action_logsScalarFieldEnum)[keyof typeof Discussionboard_action_logsScalarFieldEnum]\n\n\n  export const Discussionboard_error_logsScalarFieldEnum: {\n    id: 'id',\n    error_code: 'error_code',\n    error_message: 'error_message',\n    stack_trace: 'stack_trace',\n    context_id: 'context_id',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_error_logsScalarFieldEnum = (typeof Discussionboard_error_logsScalarFieldEnum)[keyof typeof Discussionboard_error_logsScalarFieldEnum]\n\n\n  export const Discussionboard_api_access_logsScalarFieldEnum: {\n    id: 'id',\n    actor_id: 'actor_id',\n    method: 'method',\n    endpoint: 'endpoint',\n    status_code: 'status_code',\n    ip_address: 'ip_address',\n    user_agent: 'user_agent',\n    response_time_ms: 'response_time_ms',\n    created_at: 'created_at'\n  };\n\n  export type Discussionboard_api_access_logsScalarFieldEnum = (typeof Discussionboard_api_access_logsScalarFieldEnum)[keyof typeof Discussionboard_api_access_logsScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Boolean'\n   */\n  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float'\n   */\n  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float[]'\n   */\n  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type discussionboard_sectionsWhereInput = {\n    AND?: discussionboard_sectionsWhereInput | discussionboard_sectionsWhereInput[]\n    OR?: discussionboard_sectionsWhereInput[]\n    NOT?: discussionboard_sectionsWhereInput | discussionboard_sectionsWhereInput[]\n    id?: UuidFilter<\"discussionboard_sections\"> | string\n    name?: StringFilter<\"discussionboard_sections\"> | string\n    description?: StringNullableFilter<\"discussionboard_sections\"> | string | null\n    sort_order?: IntFilter<\"discussionboard_sections\"> | number\n    created_at?: DateTimeFilter<\"discussionboard_sections\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_sections\"> | Date | string\n    discussionboard_boards?: Discussionboard_boardsListRelationFilter\n  }\n\n  export type discussionboard_sectionsOrderByWithRelationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    sort_order?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussionboard_boards?: discussionboard_boardsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_sectionsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    name?: string\n    AND?: discussionboard_sectionsWhereInput | discussionboard_sectionsWhereInput[]\n    OR?: discussionboard_sectionsWhereInput[]\n    NOT?: discussionboard_sectionsWhereInput | discussionboard_sectionsWhereInput[]\n    description?: StringNullableFilter<\"discussionboard_sections\"> | string | null\n    sort_order?: IntFilter<\"discussionboard_sections\"> | number\n    created_at?: DateTimeFilter<\"discussionboard_sections\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_sections\"> | Date | string\n    discussionboard_boards?: Discussionboard_boardsListRelationFilter\n  }, \"id\" | \"name\">\n\n  export type discussionboard_sectionsOrderByWithAggregationInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    sort_order?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_sectionsCountOrderByAggregateInput\n    _avg?: discussionboard_sectionsAvgOrderByAggregateInput\n    _max?: discussionboard_sectionsMaxOrderByAggregateInput\n    _min?: discussionboard_sectionsMinOrderByAggregateInput\n    _sum?: discussionboard_sectionsSumOrderByAggregateInput\n  }\n\n  export type discussionboard_sectionsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_sectionsScalarWhereWithAggregatesInput | discussionboard_sectionsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_sectionsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_sectionsScalarWhereWithAggregatesInput | discussionboard_sectionsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_sections\"> | string\n    name?: StringWithAggregatesFilter<\"discussionboard_sections\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussionboard_sections\"> | string | null\n    sort_order?: IntWithAggregatesFilter<\"discussionboard_sections\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_sections\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_sections\"> | Date | string\n  }\n\n  export type discussionboard_boardsWhereInput = {\n    AND?: discussionboard_boardsWhereInput | discussionboard_boardsWhereInput[]\n    OR?: discussionboard_boardsWhereInput[]\n    NOT?: discussionboard_boardsWhereInput | discussionboard_boardsWhereInput[]\n    id?: UuidFilter<\"discussionboard_boards\"> | string\n    discussionboard_section_id?: UuidFilter<\"discussionboard_boards\"> | string\n    name?: StringFilter<\"discussionboard_boards\"> | string\n    description?: StringNullableFilter<\"discussionboard_boards\"> | string | null\n    rules?: StringNullableFilter<\"discussionboard_boards\"> | string | null\n    is_active?: BoolFilter<\"discussionboard_boards\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_boards\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_boards\"> | Date | string\n    fk_discussionboard_boards_section?: XOR<Discussionboard_sectionsScalarRelationFilter, discussionboard_sectionsWhereInput>\n    discussionboard_board_subscriptions?: Discussionboard_board_subscriptionsListRelationFilter\n    discussionboard_board_settings?: XOR<Discussionboard_board_settingsNullableScalarRelationFilter, discussionboard_board_settingsWhereInput> | null\n    discussionboard_posts?: Discussionboard_postsListRelationFilter\n  }\n\n  export type discussionboard_boardsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    rules?: SortOrderInput | SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    fk_discussionboard_boards_section?: discussionboard_sectionsOrderByWithRelationInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsOrderByRelationAggregateInput\n    discussionboard_board_settings?: discussionboard_board_settingsOrderByWithRelationInput\n    discussionboard_posts?: discussionboard_postsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_boardsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    name?: string\n    AND?: discussionboard_boardsWhereInput | discussionboard_boardsWhereInput[]\n    OR?: discussionboard_boardsWhereInput[]\n    NOT?: discussionboard_boardsWhereInput | discussionboard_boardsWhereInput[]\n    discussionboard_section_id?: UuidFilter<\"discussionboard_boards\"> | string\n    description?: StringNullableFilter<\"discussionboard_boards\"> | string | null\n    rules?: StringNullableFilter<\"discussionboard_boards\"> | string | null\n    is_active?: BoolFilter<\"discussionboard_boards\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_boards\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_boards\"> | Date | string\n    fk_discussionboard_boards_section?: XOR<Discussionboard_sectionsScalarRelationFilter, discussionboard_sectionsWhereInput>\n    discussionboard_board_subscriptions?: Discussionboard_board_subscriptionsListRelationFilter\n    discussionboard_board_settings?: XOR<Discussionboard_board_settingsNullableScalarRelationFilter, discussionboard_board_settingsWhereInput> | null\n    discussionboard_posts?: Discussionboard_postsListRelationFilter\n  }, \"id\" | \"name\">\n\n  export type discussionboard_boardsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    rules?: SortOrderInput | SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_boardsCountOrderByAggregateInput\n    _max?: discussionboard_boardsMaxOrderByAggregateInput\n    _min?: discussionboard_boardsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_boardsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_boardsScalarWhereWithAggregatesInput | discussionboard_boardsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_boardsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_boardsScalarWhereWithAggregatesInput | discussionboard_boardsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_boards\"> | string\n    discussionboard_section_id?: UuidWithAggregatesFilter<\"discussionboard_boards\"> | string\n    name?: StringWithAggregatesFilter<\"discussionboard_boards\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussionboard_boards\"> | string | null\n    rules?: StringNullableWithAggregatesFilter<\"discussionboard_boards\"> | string | null\n    is_active?: BoolWithAggregatesFilter<\"discussionboard_boards\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_boards\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_boards\"> | Date | string\n  }\n\n  export type discussionboard_tagsWhereInput = {\n    AND?: discussionboard_tagsWhereInput | discussionboard_tagsWhereInput[]\n    OR?: discussionboard_tagsWhereInput[]\n    NOT?: discussionboard_tagsWhereInput | discussionboard_tagsWhereInput[]\n    id?: UuidFilter<\"discussionboard_tags\"> | string\n    tag?: StringFilter<\"discussionboard_tags\"> | string\n    description?: StringNullableFilter<\"discussionboard_tags\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_tags\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_tags\"> | Date | string\n  }\n\n  export type discussionboard_tagsOrderByWithRelationInput = {\n    id?: SortOrder\n    tag?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_tagsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    tag?: string\n    AND?: discussionboard_tagsWhereInput | discussionboard_tagsWhereInput[]\n    OR?: discussionboard_tagsWhereInput[]\n    NOT?: discussionboard_tagsWhereInput | discussionboard_tagsWhereInput[]\n    description?: StringNullableFilter<\"discussionboard_tags\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_tags\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_tags\"> | Date | string\n  }, \"id\" | \"tag\">\n\n  export type discussionboard_tagsOrderByWithAggregationInput = {\n    id?: SortOrder\n    tag?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_tagsCountOrderByAggregateInput\n    _max?: discussionboard_tagsMaxOrderByAggregateInput\n    _min?: discussionboard_tagsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_tagsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_tagsScalarWhereWithAggregatesInput | discussionboard_tagsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_tagsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_tagsScalarWhereWithAggregatesInput | discussionboard_tagsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_tags\"> | string\n    tag?: StringWithAggregatesFilter<\"discussionboard_tags\"> | string\n    description?: StringNullableWithAggregatesFilter<\"discussionboard_tags\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_tags\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_tags\"> | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsWhereInput = {\n    AND?: discussionboard_board_subscriptionsWhereInput | discussionboard_board_subscriptionsWhereInput[]\n    OR?: discussionboard_board_subscriptionsWhereInput[]\n    NOT?: discussionboard_board_subscriptionsWhereInput | discussionboard_board_subscriptionsWhereInput[]\n    id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_board_id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_board_subscriptions\"> | Date | string\n    fk_db_board_subs_board?: XOR<Discussionboard_boardsScalarRelationFilter, discussionboard_boardsWhereInput>\n    fk_db_board_subs_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_board_subscriptionsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    created_at?: SortOrder\n    fk_db_board_subs_board?: discussionboard_boardsOrderByWithRelationInput\n    fk_db_board_subs_member?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_board_subscriptionsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_board_id_discussionboard_member_id?: discussionboard_board_subscriptionsDiscussionboard_board_idDiscussionboard_member_idCompoundUniqueInput\n    AND?: discussionboard_board_subscriptionsWhereInput | discussionboard_board_subscriptionsWhereInput[]\n    OR?: discussionboard_board_subscriptionsWhereInput[]\n    NOT?: discussionboard_board_subscriptionsWhereInput | discussionboard_board_subscriptionsWhereInput[]\n    discussionboard_board_id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_board_subscriptions\"> | Date | string\n    fk_db_board_subs_board?: XOR<Discussionboard_boardsScalarRelationFilter, discussionboard_boardsWhereInput>\n    fk_db_board_subs_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"discussionboard_board_id_discussionboard_member_id\">\n\n  export type discussionboard_board_subscriptionsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_board_subscriptionsCountOrderByAggregateInput\n    _max?: discussionboard_board_subscriptionsMaxOrderByAggregateInput\n    _min?: discussionboard_board_subscriptionsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_board_subscriptionsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_board_subscriptionsScalarWhereWithAggregatesInput | discussionboard_board_subscriptionsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_board_subscriptionsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_board_subscriptionsScalarWhereWithAggregatesInput | discussionboard_board_subscriptionsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_board_id?: UuidWithAggregatesFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_board_subscriptions\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_board_subscriptions\"> | Date | string\n  }\n\n  export type discussionboard_board_settingsWhereInput = {\n    AND?: discussionboard_board_settingsWhereInput | discussionboard_board_settingsWhereInput[]\n    OR?: discussionboard_board_settingsWhereInput[]\n    NOT?: discussionboard_board_settingsWhereInput | discussionboard_board_settingsWhereInput[]\n    id?: UuidFilter<\"discussionboard_board_settings\"> | string\n    discussionboard_board_id?: UuidFilter<\"discussionboard_board_settings\"> | string\n    allow_images?: BoolFilter<\"discussionboard_board_settings\"> | boolean\n    require_moderator_approval?: BoolFilter<\"discussionboard_board_settings\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_board_settings\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_board_settings\"> | Date | string\n    fk_db_board_settings_board?: XOR<Discussionboard_boardsScalarRelationFilter, discussionboard_boardsWhereInput>\n  }\n\n  export type discussionboard_board_settingsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    allow_images?: SortOrder\n    require_moderator_approval?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    fk_db_board_settings_board?: discussionboard_boardsOrderByWithRelationInput\n  }\n\n  export type discussionboard_board_settingsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_board_id?: string\n    AND?: discussionboard_board_settingsWhereInput | discussionboard_board_settingsWhereInput[]\n    OR?: discussionboard_board_settingsWhereInput[]\n    NOT?: discussionboard_board_settingsWhereInput | discussionboard_board_settingsWhereInput[]\n    allow_images?: BoolFilter<\"discussionboard_board_settings\"> | boolean\n    require_moderator_approval?: BoolFilter<\"discussionboard_board_settings\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_board_settings\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_board_settings\"> | Date | string\n    fk_db_board_settings_board?: XOR<Discussionboard_boardsScalarRelationFilter, discussionboard_boardsWhereInput>\n  }, \"id\" | \"discussionboard_board_id\">\n\n  export type discussionboard_board_settingsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    allow_images?: SortOrder\n    require_moderator_approval?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_board_settingsCountOrderByAggregateInput\n    _max?: discussionboard_board_settingsMaxOrderByAggregateInput\n    _min?: discussionboard_board_settingsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_board_settingsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_board_settingsScalarWhereWithAggregatesInput | discussionboard_board_settingsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_board_settingsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_board_settingsScalarWhereWithAggregatesInput | discussionboard_board_settingsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_board_settings\"> | string\n    discussionboard_board_id?: UuidWithAggregatesFilter<\"discussionboard_board_settings\"> | string\n    allow_images?: BoolWithAggregatesFilter<\"discussionboard_board_settings\"> | boolean\n    require_moderator_approval?: BoolWithAggregatesFilter<\"discussionboard_board_settings\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_board_settings\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_board_settings\"> | Date | string\n  }\n\n  export type discussionboard_notification_settingsWhereInput = {\n    AND?: discussionboard_notification_settingsWhereInput | discussionboard_notification_settingsWhereInput[]\n    OR?: discussionboard_notification_settingsWhereInput[]\n    NOT?: discussionboard_notification_settingsWhereInput | discussionboard_notification_settingsWhereInput[]\n    id?: UuidFilter<\"discussionboard_notification_settings\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_notification_settings\"> | string\n    receive_board_notifications?: BoolFilter<\"discussionboard_notification_settings\"> | boolean\n    receive_mention_notifications?: BoolFilter<\"discussionboard_notification_settings\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_notification_settings\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_notification_settings\"> | Date | string\n    fk_db_notification_settings_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_notification_settingsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    receive_board_notifications?: SortOrder\n    receive_mention_notifications?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    fk_db_notification_settings_member?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_notification_settingsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_member_id?: string\n    AND?: discussionboard_notification_settingsWhereInput | discussionboard_notification_settingsWhereInput[]\n    OR?: discussionboard_notification_settingsWhereInput[]\n    NOT?: discussionboard_notification_settingsWhereInput | discussionboard_notification_settingsWhereInput[]\n    receive_board_notifications?: BoolFilter<\"discussionboard_notification_settings\"> | boolean\n    receive_mention_notifications?: BoolFilter<\"discussionboard_notification_settings\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_notification_settings\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_notification_settings\"> | Date | string\n    fk_db_notification_settings_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"discussionboard_member_id\">\n\n  export type discussionboard_notification_settingsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    receive_board_notifications?: SortOrder\n    receive_mention_notifications?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_notification_settingsCountOrderByAggregateInput\n    _max?: discussionboard_notification_settingsMaxOrderByAggregateInput\n    _min?: discussionboard_notification_settingsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_notification_settingsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_notification_settingsScalarWhereWithAggregatesInput | discussionboard_notification_settingsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_notification_settingsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_notification_settingsScalarWhereWithAggregatesInput | discussionboard_notification_settingsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_notification_settings\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_notification_settings\"> | string\n    receive_board_notifications?: BoolWithAggregatesFilter<\"discussionboard_notification_settings\"> | boolean\n    receive_mention_notifications?: BoolWithAggregatesFilter<\"discussionboard_notification_settings\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_notification_settings\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_notification_settings\"> | Date | string\n  }\n\n  export type discussionboard_adminsWhereInput = {\n    AND?: discussionboard_adminsWhereInput | discussionboard_adminsWhereInput[]\n    OR?: discussionboard_adminsWhereInput[]\n    NOT?: discussionboard_adminsWhereInput | discussionboard_adminsWhereInput[]\n    id?: UuidFilter<\"discussionboard_admins\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_admins\"> | string\n    granted_at?: DateTimeFilter<\"discussionboard_admins\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_admins\"> | Date | string | null\n    discussionboard_admins_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_bans_of_target_admin_id?: Discussionboard_bansListRelationFilter\n    discussionboard_bans_of_actor_admin_id?: Discussionboard_bansListRelationFilter\n    discussionboard_warnings_of_target_admin_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_warnings_of_actor_admin_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }\n\n  export type discussionboard_adminsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    discussionboard_admins_member?: discussionboard_membersOrderByWithRelationInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOrderByRelationAggregateInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansOrderByRelationAggregateInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansOrderByRelationAggregateInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsOrderByRelationAggregateInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsOrderByRelationAggregateInput\n    discussionboard_audit_logs?: discussionboard_audit_logsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_adminsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_member_id?: string\n    AND?: discussionboard_adminsWhereInput | discussionboard_adminsWhereInput[]\n    OR?: discussionboard_adminsWhereInput[]\n    NOT?: discussionboard_adminsWhereInput | discussionboard_adminsWhereInput[]\n    granted_at?: DateTimeFilter<\"discussionboard_admins\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_admins\"> | Date | string | null\n    discussionboard_admins_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_bans_of_target_admin_id?: Discussionboard_bansListRelationFilter\n    discussionboard_bans_of_actor_admin_id?: Discussionboard_bansListRelationFilter\n    discussionboard_warnings_of_target_admin_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_warnings_of_actor_admin_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }, \"id\" | \"discussionboard_member_id\">\n\n  export type discussionboard_adminsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_adminsCountOrderByAggregateInput\n    _max?: discussionboard_adminsMaxOrderByAggregateInput\n    _min?: discussionboard_adminsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_adminsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_adminsScalarWhereWithAggregatesInput | discussionboard_adminsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_adminsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_adminsScalarWhereWithAggregatesInput | discussionboard_adminsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_admins\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_admins\"> | string\n    granted_at?: DateTimeWithAggregatesFilter<\"discussionboard_admins\"> | Date | string\n    revoked_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_admins\"> | Date | string | null\n  }\n\n  export type discussionboard_moderatorsWhereInput = {\n    AND?: discussionboard_moderatorsWhereInput | discussionboard_moderatorsWhereInput[]\n    OR?: discussionboard_moderatorsWhereInput[]\n    NOT?: discussionboard_moderatorsWhereInput | discussionboard_moderatorsWhereInput[]\n    id?: UuidFilter<\"discussionboard_moderators\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_moderators\"> | string\n    granted_at?: DateTimeFilter<\"discussionboard_moderators\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_moderators\"> | Date | string | null\n    discussionboard_moderators_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_bans_of_target_moderator_id?: Discussionboard_bansListRelationFilter\n    discussionboard_bans_of_actor_moderator_id?: Discussionboard_bansListRelationFilter\n    discussionboard_warnings_of_target_moderator_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_warnings_of_actor_moderator_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }\n\n  export type discussionboard_moderatorsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    discussionboard_moderators_member?: discussionboard_membersOrderByWithRelationInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOrderByRelationAggregateInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansOrderByRelationAggregateInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansOrderByRelationAggregateInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsOrderByRelationAggregateInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsOrderByRelationAggregateInput\n    discussionboard_audit_logs?: discussionboard_audit_logsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_moderatorsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_member_id?: string\n    AND?: discussionboard_moderatorsWhereInput | discussionboard_moderatorsWhereInput[]\n    OR?: discussionboard_moderatorsWhereInput[]\n    NOT?: discussionboard_moderatorsWhereInput | discussionboard_moderatorsWhereInput[]\n    granted_at?: DateTimeFilter<\"discussionboard_moderators\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_moderators\"> | Date | string | null\n    discussionboard_moderators_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_bans_of_target_moderator_id?: Discussionboard_bansListRelationFilter\n    discussionboard_bans_of_actor_moderator_id?: Discussionboard_bansListRelationFilter\n    discussionboard_warnings_of_target_moderator_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_warnings_of_actor_moderator_id?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }, \"id\" | \"discussionboard_member_id\">\n\n  export type discussionboard_moderatorsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_moderatorsCountOrderByAggregateInput\n    _max?: discussionboard_moderatorsMaxOrderByAggregateInput\n    _min?: discussionboard_moderatorsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_moderatorsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_moderatorsScalarWhereWithAggregatesInput | discussionboard_moderatorsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_moderatorsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_moderatorsScalarWhereWithAggregatesInput | discussionboard_moderatorsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_moderators\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_moderators\"> | string\n    granted_at?: DateTimeWithAggregatesFilter<\"discussionboard_moderators\"> | Date | string\n    revoked_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_moderators\"> | Date | string | null\n  }\n\n  export type discussionboard_membersWhereInput = {\n    AND?: discussionboard_membersWhereInput | discussionboard_membersWhereInput[]\n    OR?: discussionboard_membersWhereInput[]\n    NOT?: discussionboard_membersWhereInput | discussionboard_membersWhereInput[]\n    id?: UuidFilter<\"discussionboard_members\"> | string\n    username?: StringFilter<\"discussionboard_members\"> | string\n    password_hash?: StringFilter<\"discussionboard_members\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_members\"> | Date | string\n    activated_at?: DateTimeNullableFilter<\"discussionboard_members\"> | Date | string | null\n    deactivated_at?: DateTimeNullableFilter<\"discussionboard_members\"> | Date | string | null\n    discussionboard_board_subscriptions?: Discussionboard_board_subscriptionsListRelationFilter\n    discussionboard_notification_settings?: XOR<Discussionboard_notification_settingsNullableScalarRelationFilter, discussionboard_notification_settingsWhereInput> | null\n    discussionboard_admins?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    discussionboard_moderators?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    discussionboard_user_profiles?: XOR<Discussionboard_user_profilesNullableScalarRelationFilter, discussionboard_user_profilesWhereInput> | null\n    discussionboard_user_emails?: Discussionboard_user_emailsListRelationFilter\n    discussionboard_user_auths?: Discussionboard_user_authsListRelationFilter\n    discussionboard_user_sessions?: Discussionboard_user_sessionsListRelationFilter\n    discussionboard_posts?: Discussionboard_postsListRelationFilter\n    discussionboard_post_edits?: Discussionboard_post_editsListRelationFilter\n    discussionboard_post_likes?: Discussionboard_post_likesListRelationFilter\n    discussionboard_post_views?: Discussionboard_post_viewsListRelationFilter\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_comment_likes?: Discussionboard_comment_likesListRelationFilter\n    discussionboard_comment_edits?: Discussionboard_comment_editsListRelationFilter\n    discussionboard_comment_views?: Discussionboard_comment_viewsListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_bans?: Discussionboard_bansListRelationFilter\n    discussionboard_warnings?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n    discussionboard_notifications?: Discussionboard_notificationsListRelationFilter\n    discussionboard_alert_preferences?: Discussionboard_alert_preferencesListRelationFilter\n    discussionboard_action_logs?: Discussionboard_action_logsListRelationFilter\n    discussionboard_api_access_logs?: Discussionboard_api_access_logsListRelationFilter\n  }\n\n  export type discussionboard_membersOrderByWithRelationInput = {\n    id?: SortOrder\n    username?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    activated_at?: SortOrderInput | SortOrder\n    deactivated_at?: SortOrderInput | SortOrder\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsOrderByRelationAggregateInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsOrderByWithRelationInput\n    discussionboard_admins?: discussionboard_adminsOrderByWithRelationInput\n    discussionboard_moderators?: discussionboard_moderatorsOrderByWithRelationInput\n    discussionboard_user_profiles?: discussionboard_user_profilesOrderByWithRelationInput\n    discussionboard_user_emails?: discussionboard_user_emailsOrderByRelationAggregateInput\n    discussionboard_user_auths?: discussionboard_user_authsOrderByRelationAggregateInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsOrderByRelationAggregateInput\n    discussionboard_posts?: discussionboard_postsOrderByRelationAggregateInput\n    discussionboard_post_edits?: discussionboard_post_editsOrderByRelationAggregateInput\n    discussionboard_post_likes?: discussionboard_post_likesOrderByRelationAggregateInput\n    discussionboard_post_views?: discussionboard_post_viewsOrderByRelationAggregateInput\n    discussionboard_comments?: discussionboard_commentsOrderByRelationAggregateInput\n    discussionboard_comment_likes?: discussionboard_comment_likesOrderByRelationAggregateInput\n    discussionboard_comment_edits?: discussionboard_comment_editsOrderByRelationAggregateInput\n    discussionboard_comment_views?: discussionboard_comment_viewsOrderByRelationAggregateInput\n    discussionboard_reports?: discussionboard_reportsOrderByRelationAggregateInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOrderByRelationAggregateInput\n    discussionboard_bans?: discussionboard_bansOrderByRelationAggregateInput\n    discussionboard_warnings?: discussionboard_warningsOrderByRelationAggregateInput\n    discussionboard_audit_logs?: discussionboard_audit_logsOrderByRelationAggregateInput\n    discussionboard_notifications?: discussionboard_notificationsOrderByRelationAggregateInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesOrderByRelationAggregateInput\n    discussionboard_action_logs?: discussionboard_action_logsOrderByRelationAggregateInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_membersWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    username?: string\n    AND?: discussionboard_membersWhereInput | discussionboard_membersWhereInput[]\n    OR?: discussionboard_membersWhereInput[]\n    NOT?: discussionboard_membersWhereInput | discussionboard_membersWhereInput[]\n    password_hash?: StringFilter<\"discussionboard_members\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_members\"> | Date | string\n    activated_at?: DateTimeNullableFilter<\"discussionboard_members\"> | Date | string | null\n    deactivated_at?: DateTimeNullableFilter<\"discussionboard_members\"> | Date | string | null\n    discussionboard_board_subscriptions?: Discussionboard_board_subscriptionsListRelationFilter\n    discussionboard_notification_settings?: XOR<Discussionboard_notification_settingsNullableScalarRelationFilter, discussionboard_notification_settingsWhereInput> | null\n    discussionboard_admins?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    discussionboard_moderators?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    discussionboard_user_profiles?: XOR<Discussionboard_user_profilesNullableScalarRelationFilter, discussionboard_user_profilesWhereInput> | null\n    discussionboard_user_emails?: Discussionboard_user_emailsListRelationFilter\n    discussionboard_user_auths?: Discussionboard_user_authsListRelationFilter\n    discussionboard_user_sessions?: Discussionboard_user_sessionsListRelationFilter\n    discussionboard_posts?: Discussionboard_postsListRelationFilter\n    discussionboard_post_edits?: Discussionboard_post_editsListRelationFilter\n    discussionboard_post_likes?: Discussionboard_post_likesListRelationFilter\n    discussionboard_post_views?: Discussionboard_post_viewsListRelationFilter\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_comment_likes?: Discussionboard_comment_likesListRelationFilter\n    discussionboard_comment_edits?: Discussionboard_comment_editsListRelationFilter\n    discussionboard_comment_views?: Discussionboard_comment_viewsListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_bans?: Discussionboard_bansListRelationFilter\n    discussionboard_warnings?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n    discussionboard_notifications?: Discussionboard_notificationsListRelationFilter\n    discussionboard_alert_preferences?: Discussionboard_alert_preferencesListRelationFilter\n    discussionboard_action_logs?: Discussionboard_action_logsListRelationFilter\n    discussionboard_api_access_logs?: Discussionboard_api_access_logsListRelationFilter\n  }, \"id\" | \"username\">\n\n  export type discussionboard_membersOrderByWithAggregationInput = {\n    id?: SortOrder\n    username?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    activated_at?: SortOrderInput | SortOrder\n    deactivated_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_membersCountOrderByAggregateInput\n    _max?: discussionboard_membersMaxOrderByAggregateInput\n    _min?: discussionboard_membersMinOrderByAggregateInput\n  }\n\n  export type discussionboard_membersScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_membersScalarWhereWithAggregatesInput | discussionboard_membersScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_membersScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_membersScalarWhereWithAggregatesInput | discussionboard_membersScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_members\"> | string\n    username?: StringWithAggregatesFilter<\"discussionboard_members\"> | string\n    password_hash?: StringWithAggregatesFilter<\"discussionboard_members\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_members\"> | Date | string\n    activated_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_members\"> | Date | string | null\n    deactivated_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_members\"> | Date | string | null\n  }\n\n  export type discussionboard_guestsWhereInput = {\n    AND?: discussionboard_guestsWhereInput | discussionboard_guestsWhereInput[]\n    OR?: discussionboard_guestsWhereInput[]\n    NOT?: discussionboard_guestsWhereInput | discussionboard_guestsWhereInput[]\n    id?: UuidFilter<\"discussionboard_guests\"> | string\n    session_token?: StringFilter<\"discussionboard_guests\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_guests\"> | Date | string\n  }\n\n  export type discussionboard_guestsOrderByWithRelationInput = {\n    id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_guestsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    session_token?: string\n    AND?: discussionboard_guestsWhereInput | discussionboard_guestsWhereInput[]\n    OR?: discussionboard_guestsWhereInput[]\n    NOT?: discussionboard_guestsWhereInput | discussionboard_guestsWhereInput[]\n    created_at?: DateTimeFilter<\"discussionboard_guests\"> | Date | string\n  }, \"id\" | \"session_token\">\n\n  export type discussionboard_guestsOrderByWithAggregationInput = {\n    id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_guestsCountOrderByAggregateInput\n    _max?: discussionboard_guestsMaxOrderByAggregateInput\n    _min?: discussionboard_guestsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_guestsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_guestsScalarWhereWithAggregatesInput | discussionboard_guestsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_guestsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_guestsScalarWhereWithAggregatesInput | discussionboard_guestsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_guests\"> | string\n    session_token?: StringWithAggregatesFilter<\"discussionboard_guests\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_guests\"> | Date | string\n  }\n\n  export type discussionboard_user_profilesWhereInput = {\n    AND?: discussionboard_user_profilesWhereInput | discussionboard_user_profilesWhereInput[]\n    OR?: discussionboard_user_profilesWhereInput[]\n    NOT?: discussionboard_user_profilesWhereInput | discussionboard_user_profilesWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_profiles\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_profiles\"> | string\n    display_name?: StringNullableFilter<\"discussionboard_user_profiles\"> | string | null\n    bio?: StringNullableFilter<\"discussionboard_user_profiles\"> | string | null\n    avatar_url?: StringNullableFilter<\"discussionboard_user_profiles\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_user_profiles\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_user_profiles\"> | Date | string\n    discussionboard_user_profiles_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_user_profilesOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    display_name?: SortOrderInput | SortOrder\n    bio?: SortOrderInput | SortOrder\n    avatar_url?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    discussionboard_user_profiles_member?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_user_profilesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_member_id?: string\n    AND?: discussionboard_user_profilesWhereInput | discussionboard_user_profilesWhereInput[]\n    OR?: discussionboard_user_profilesWhereInput[]\n    NOT?: discussionboard_user_profilesWhereInput | discussionboard_user_profilesWhereInput[]\n    display_name?: StringNullableFilter<\"discussionboard_user_profiles\"> | string | null\n    bio?: StringNullableFilter<\"discussionboard_user_profiles\"> | string | null\n    avatar_url?: StringNullableFilter<\"discussionboard_user_profiles\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_user_profiles\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_user_profiles\"> | Date | string\n    discussionboard_user_profiles_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"discussionboard_member_id\">\n\n  export type discussionboard_user_profilesOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    display_name?: SortOrderInput | SortOrder\n    bio?: SortOrderInput | SortOrder\n    avatar_url?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_user_profilesCountOrderByAggregateInput\n    _max?: discussionboard_user_profilesMaxOrderByAggregateInput\n    _min?: discussionboard_user_profilesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_user_profilesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_user_profilesScalarWhereWithAggregatesInput | discussionboard_user_profilesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_user_profilesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_user_profilesScalarWhereWithAggregatesInput | discussionboard_user_profilesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_user_profiles\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_user_profiles\"> | string\n    display_name?: StringNullableWithAggregatesFilter<\"discussionboard_user_profiles\"> | string | null\n    bio?: StringNullableWithAggregatesFilter<\"discussionboard_user_profiles\"> | string | null\n    avatar_url?: StringNullableWithAggregatesFilter<\"discussionboard_user_profiles\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_user_profiles\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_user_profiles\"> | Date | string\n  }\n\n  export type discussionboard_user_emailsWhereInput = {\n    AND?: discussionboard_user_emailsWhereInput | discussionboard_user_emailsWhereInput[]\n    OR?: discussionboard_user_emailsWhereInput[]\n    NOT?: discussionboard_user_emailsWhereInput | discussionboard_user_emailsWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_emails\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_emails\"> | string\n    email?: StringFilter<\"discussionboard_user_emails\"> | string\n    is_verified?: BoolFilter<\"discussionboard_user_emails\"> | boolean\n    is_primary?: BoolFilter<\"discussionboard_user_emails\"> | boolean\n    added_at?: DateTimeFilter<\"discussionboard_user_emails\"> | Date | string\n    verified_at?: DateTimeNullableFilter<\"discussionboard_user_emails\"> | Date | string | null\n    discussionboard_user_emails_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_user_emailsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    email?: SortOrder\n    is_verified?: SortOrder\n    is_primary?: SortOrder\n    added_at?: SortOrder\n    verified_at?: SortOrderInput | SortOrder\n    discussionboard_user_emails_member?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_user_emailsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    discussionboard_member_id_email?: discussionboard_user_emailsDiscussionboard_member_idEmailCompoundUniqueInput\n    AND?: discussionboard_user_emailsWhereInput | discussionboard_user_emailsWhereInput[]\n    OR?: discussionboard_user_emailsWhereInput[]\n    NOT?: discussionboard_user_emailsWhereInput | discussionboard_user_emailsWhereInput[]\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_emails\"> | string\n    is_verified?: BoolFilter<\"discussionboard_user_emails\"> | boolean\n    is_primary?: BoolFilter<\"discussionboard_user_emails\"> | boolean\n    added_at?: DateTimeFilter<\"discussionboard_user_emails\"> | Date | string\n    verified_at?: DateTimeNullableFilter<\"discussionboard_user_emails\"> | Date | string | null\n    discussionboard_user_emails_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"discussionboard_member_id_email\" | \"email\">\n\n  export type discussionboard_user_emailsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    email?: SortOrder\n    is_verified?: SortOrder\n    is_primary?: SortOrder\n    added_at?: SortOrder\n    verified_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_user_emailsCountOrderByAggregateInput\n    _max?: discussionboard_user_emailsMaxOrderByAggregateInput\n    _min?: discussionboard_user_emailsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_user_emailsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_user_emailsScalarWhereWithAggregatesInput | discussionboard_user_emailsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_user_emailsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_user_emailsScalarWhereWithAggregatesInput | discussionboard_user_emailsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_user_emails\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_user_emails\"> | string\n    email?: StringWithAggregatesFilter<\"discussionboard_user_emails\"> | string\n    is_verified?: BoolWithAggregatesFilter<\"discussionboard_user_emails\"> | boolean\n    is_primary?: BoolWithAggregatesFilter<\"discussionboard_user_emails\"> | boolean\n    added_at?: DateTimeWithAggregatesFilter<\"discussionboard_user_emails\"> | Date | string\n    verified_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_user_emails\"> | Date | string | null\n  }\n\n  export type discussionboard_user_authsWhereInput = {\n    AND?: discussionboard_user_authsWhereInput | discussionboard_user_authsWhereInput[]\n    OR?: discussionboard_user_authsWhereInput[]\n    NOT?: discussionboard_user_authsWhereInput | discussionboard_user_authsWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_auths\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_auths\"> | string\n    provider?: StringFilter<\"discussionboard_user_auths\"> | string\n    provider_user_id?: StringFilter<\"discussionboard_user_auths\"> | string\n    linked_at?: DateTimeFilter<\"discussionboard_user_auths\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_user_auths\"> | Date | string | null\n    discussionboard_user_auths_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_user_authsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    provider?: SortOrder\n    provider_user_id?: SortOrder\n    linked_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    discussionboard_user_auths_member?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_user_authsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    provider_provider_user_id?: discussionboard_user_authsProviderProvider_user_idCompoundUniqueInput\n    AND?: discussionboard_user_authsWhereInput | discussionboard_user_authsWhereInput[]\n    OR?: discussionboard_user_authsWhereInput[]\n    NOT?: discussionboard_user_authsWhereInput | discussionboard_user_authsWhereInput[]\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_auths\"> | string\n    provider?: StringFilter<\"discussionboard_user_auths\"> | string\n    provider_user_id?: StringFilter<\"discussionboard_user_auths\"> | string\n    linked_at?: DateTimeFilter<\"discussionboard_user_auths\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_user_auths\"> | Date | string | null\n    discussionboard_user_auths_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"provider_provider_user_id\">\n\n  export type discussionboard_user_authsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    provider?: SortOrder\n    provider_user_id?: SortOrder\n    linked_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_user_authsCountOrderByAggregateInput\n    _max?: discussionboard_user_authsMaxOrderByAggregateInput\n    _min?: discussionboard_user_authsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_user_authsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_user_authsScalarWhereWithAggregatesInput | discussionboard_user_authsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_user_authsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_user_authsScalarWhereWithAggregatesInput | discussionboard_user_authsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_user_auths\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_user_auths\"> | string\n    provider?: StringWithAggregatesFilter<\"discussionboard_user_auths\"> | string\n    provider_user_id?: StringWithAggregatesFilter<\"discussionboard_user_auths\"> | string\n    linked_at?: DateTimeWithAggregatesFilter<\"discussionboard_user_auths\"> | Date | string\n    revoked_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_user_auths\"> | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsWhereInput = {\n    AND?: discussionboard_user_sessionsWhereInput | discussionboard_user_sessionsWhereInput[]\n    OR?: discussionboard_user_sessionsWhereInput[]\n    NOT?: discussionboard_user_sessionsWhereInput | discussionboard_user_sessionsWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_sessions\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_sessions\"> | string\n    session_token?: StringFilter<\"discussionboard_user_sessions\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_user_sessions\"> | Date | string\n    expires_at?: DateTimeFilter<\"discussionboard_user_sessions\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_user_sessions\"> | Date | string | null\n    discussionboard_user_sessions_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_user_sessionsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    discussionboard_user_sessions_member?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_user_sessionsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    session_token?: string\n    AND?: discussionboard_user_sessionsWhereInput | discussionboard_user_sessionsWhereInput[]\n    OR?: discussionboard_user_sessionsWhereInput[]\n    NOT?: discussionboard_user_sessionsWhereInput | discussionboard_user_sessionsWhereInput[]\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_sessions\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_user_sessions\"> | Date | string\n    expires_at?: DateTimeFilter<\"discussionboard_user_sessions\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_user_sessions\"> | Date | string | null\n    discussionboard_user_sessions_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"session_token\">\n\n  export type discussionboard_user_sessionsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n    revoked_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_user_sessionsCountOrderByAggregateInput\n    _max?: discussionboard_user_sessionsMaxOrderByAggregateInput\n    _min?: discussionboard_user_sessionsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_user_sessionsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_user_sessionsScalarWhereWithAggregatesInput | discussionboard_user_sessionsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_user_sessionsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_user_sessionsScalarWhereWithAggregatesInput | discussionboard_user_sessionsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_user_sessions\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_user_sessions\"> | string\n    session_token?: StringWithAggregatesFilter<\"discussionboard_user_sessions\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_user_sessions\"> | Date | string\n    expires_at?: DateTimeWithAggregatesFilter<\"discussionboard_user_sessions\"> | Date | string\n    revoked_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_user_sessions\"> | Date | string | null\n  }\n\n  export type discussionboard_postsWhereInput = {\n    AND?: discussionboard_postsWhereInput | discussionboard_postsWhereInput[]\n    OR?: discussionboard_postsWhereInput[]\n    NOT?: discussionboard_postsWhereInput | discussionboard_postsWhereInput[]\n    id?: UuidFilter<\"discussionboard_posts\"> | string\n    board_id?: UuidFilter<\"discussionboard_posts\"> | string\n    author_id?: UuidFilter<\"discussionboard_posts\"> | string\n    title?: StringFilter<\"discussionboard_posts\"> | string\n    body?: StringFilter<\"discussionboard_posts\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_posts\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_posts\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_posts\"> | Date | string | null\n    board?: XOR<Discussionboard_boardsScalarRelationFilter, discussionboard_boardsWhereInput>\n    author?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    discussionboard_post_edits?: Discussionboard_post_editsListRelationFilter\n    discussionboard_post_likes?: Discussionboard_post_likesListRelationFilter\n    discussionboard_post_views?: Discussionboard_post_viewsListRelationFilter\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n  }\n\n  export type discussionboard_postsOrderByWithRelationInput = {\n    id?: SortOrder\n    board_id?: SortOrder\n    author_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    board?: discussionboard_boardsOrderByWithRelationInput\n    author?: discussionboard_membersOrderByWithRelationInput\n    discussionboard_post_edits?: discussionboard_post_editsOrderByRelationAggregateInput\n    discussionboard_post_likes?: discussionboard_post_likesOrderByRelationAggregateInput\n    discussionboard_post_views?: discussionboard_post_viewsOrderByRelationAggregateInput\n    discussionboard_comments?: discussionboard_commentsOrderByRelationAggregateInput\n    discussionboard_reports?: discussionboard_reportsOrderByRelationAggregateInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_postsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    board_id_id?: discussionboard_postsBoard_idIdCompoundUniqueInput\n    AND?: discussionboard_postsWhereInput | discussionboard_postsWhereInput[]\n    OR?: discussionboard_postsWhereInput[]\n    NOT?: discussionboard_postsWhereInput | discussionboard_postsWhereInput[]\n    board_id?: UuidFilter<\"discussionboard_posts\"> | string\n    author_id?: UuidFilter<\"discussionboard_posts\"> | string\n    title?: StringFilter<\"discussionboard_posts\"> | string\n    body?: StringFilter<\"discussionboard_posts\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_posts\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_posts\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_posts\"> | Date | string | null\n    board?: XOR<Discussionboard_boardsScalarRelationFilter, discussionboard_boardsWhereInput>\n    author?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    discussionboard_post_edits?: Discussionboard_post_editsListRelationFilter\n    discussionboard_post_likes?: Discussionboard_post_likesListRelationFilter\n    discussionboard_post_views?: Discussionboard_post_viewsListRelationFilter\n    discussionboard_comments?: Discussionboard_commentsListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n  }, \"id\" | \"board_id_id\">\n\n  export type discussionboard_postsOrderByWithAggregationInput = {\n    id?: SortOrder\n    board_id?: SortOrder\n    author_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_postsCountOrderByAggregateInput\n    _max?: discussionboard_postsMaxOrderByAggregateInput\n    _min?: discussionboard_postsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_postsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_postsScalarWhereWithAggregatesInput | discussionboard_postsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_postsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_postsScalarWhereWithAggregatesInput | discussionboard_postsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_posts\"> | string\n    board_id?: UuidWithAggregatesFilter<\"discussionboard_posts\"> | string\n    author_id?: UuidWithAggregatesFilter<\"discussionboard_posts\"> | string\n    title?: StringWithAggregatesFilter<\"discussionboard_posts\"> | string\n    body?: StringWithAggregatesFilter<\"discussionboard_posts\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_posts\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_posts\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_posts\"> | Date | string | null\n  }\n\n  export type discussionboard_post_editsWhereInput = {\n    AND?: discussionboard_post_editsWhereInput | discussionboard_post_editsWhereInput[]\n    OR?: discussionboard_post_editsWhereInput[]\n    NOT?: discussionboard_post_editsWhereInput | discussionboard_post_editsWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    editor_id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    edit_summary?: StringNullableFilter<\"discussionboard_post_edits\"> | string | null\n    edited_at?: DateTimeFilter<\"discussionboard_post_edits\"> | Date | string\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    editor?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_post_editsOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrderInput | SortOrder\n    edited_at?: SortOrder\n    post?: discussionboard_postsOrderByWithRelationInput\n    editor?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_post_editsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_post_editsWhereInput | discussionboard_post_editsWhereInput[]\n    OR?: discussionboard_post_editsWhereInput[]\n    NOT?: discussionboard_post_editsWhereInput | discussionboard_post_editsWhereInput[]\n    post_id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    editor_id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    edit_summary?: StringNullableFilter<\"discussionboard_post_edits\"> | string | null\n    edited_at?: DateTimeFilter<\"discussionboard_post_edits\"> | Date | string\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    editor?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\">\n\n  export type discussionboard_post_editsOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrderInput | SortOrder\n    edited_at?: SortOrder\n    _count?: discussionboard_post_editsCountOrderByAggregateInput\n    _max?: discussionboard_post_editsMaxOrderByAggregateInput\n    _min?: discussionboard_post_editsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_post_editsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_post_editsScalarWhereWithAggregatesInput | discussionboard_post_editsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_post_editsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_post_editsScalarWhereWithAggregatesInput | discussionboard_post_editsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post_edits\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussionboard_post_edits\"> | string\n    editor_id?: UuidWithAggregatesFilter<\"discussionboard_post_edits\"> | string\n    edit_summary?: StringNullableWithAggregatesFilter<\"discussionboard_post_edits\"> | string | null\n    edited_at?: DateTimeWithAggregatesFilter<\"discussionboard_post_edits\"> | Date | string\n  }\n\n  export type discussionboard_post_likesWhereInput = {\n    AND?: discussionboard_post_likesWhereInput | discussionboard_post_likesWhereInput[]\n    OR?: discussionboard_post_likesWhereInput[]\n    NOT?: discussionboard_post_likesWhereInput | discussionboard_post_likesWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    is_like?: BoolFilter<\"discussionboard_post_likes\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_post_likes\"> | Date | string\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    user?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_post_likesOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n    post?: discussionboard_postsOrderByWithRelationInput\n    user?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_post_likesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    post_id_user_id?: discussionboard_post_likesPost_idUser_idCompoundUniqueInput\n    AND?: discussionboard_post_likesWhereInput | discussionboard_post_likesWhereInput[]\n    OR?: discussionboard_post_likesWhereInput[]\n    NOT?: discussionboard_post_likesWhereInput | discussionboard_post_likesWhereInput[]\n    post_id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    is_like?: BoolFilter<\"discussionboard_post_likes\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_post_likes\"> | Date | string\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    user?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"post_id_user_id\">\n\n  export type discussionboard_post_likesOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_post_likesCountOrderByAggregateInput\n    _max?: discussionboard_post_likesMaxOrderByAggregateInput\n    _min?: discussionboard_post_likesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_post_likesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_post_likesScalarWhereWithAggregatesInput | discussionboard_post_likesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_post_likesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_post_likesScalarWhereWithAggregatesInput | discussionboard_post_likesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post_likes\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussionboard_post_likes\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_post_likes\"> | string\n    is_like?: BoolWithAggregatesFilter<\"discussionboard_post_likes\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_post_likes\"> | Date | string\n  }\n\n  export type discussionboard_post_viewsWhereInput = {\n    AND?: discussionboard_post_viewsWhereInput | discussionboard_post_viewsWhereInput[]\n    OR?: discussionboard_post_viewsWhereInput[]\n    NOT?: discussionboard_post_viewsWhereInput | discussionboard_post_viewsWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_views\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_views\"> | string\n    user_id?: UuidNullableFilter<\"discussionboard_post_views\"> | string | null\n    session_id?: UuidNullableFilter<\"discussionboard_post_views\"> | string | null\n    viewed_at?: DateTimeFilter<\"discussionboard_post_views\"> | Date | string\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    user?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n  }\n\n  export type discussionboard_post_viewsOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrderInput | SortOrder\n    session_id?: SortOrderInput | SortOrder\n    viewed_at?: SortOrder\n    post?: discussionboard_postsOrderByWithRelationInput\n    user?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_post_viewsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_post_viewsWhereInput | discussionboard_post_viewsWhereInput[]\n    OR?: discussionboard_post_viewsWhereInput[]\n    NOT?: discussionboard_post_viewsWhereInput | discussionboard_post_viewsWhereInput[]\n    post_id?: UuidFilter<\"discussionboard_post_views\"> | string\n    user_id?: UuidNullableFilter<\"discussionboard_post_views\"> | string | null\n    session_id?: UuidNullableFilter<\"discussionboard_post_views\"> | string | null\n    viewed_at?: DateTimeFilter<\"discussionboard_post_views\"> | Date | string\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    user?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_post_viewsOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrderInput | SortOrder\n    session_id?: SortOrderInput | SortOrder\n    viewed_at?: SortOrder\n    _count?: discussionboard_post_viewsCountOrderByAggregateInput\n    _max?: discussionboard_post_viewsMaxOrderByAggregateInput\n    _min?: discussionboard_post_viewsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_post_viewsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_post_viewsScalarWhereWithAggregatesInput | discussionboard_post_viewsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_post_viewsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_post_viewsScalarWhereWithAggregatesInput | discussionboard_post_viewsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_post_views\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussionboard_post_views\"> | string\n    user_id?: UuidNullableWithAggregatesFilter<\"discussionboard_post_views\"> | string | null\n    session_id?: UuidNullableWithAggregatesFilter<\"discussionboard_post_views\"> | string | null\n    viewed_at?: DateTimeWithAggregatesFilter<\"discussionboard_post_views\"> | Date | string\n  }\n\n  export type discussionboard_commentsWhereInput = {\n    AND?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    OR?: discussionboard_commentsWhereInput[]\n    NOT?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    id?: UuidFilter<\"discussionboard_comments\"> | string\n    post_id?: UuidFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidFilter<\"discussionboard_comments\"> | string\n    parent_id?: UuidNullableFilter<\"discussionboard_comments\"> | string | null\n    body?: StringFilter<\"discussionboard_comments\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_comments\"> | Date | string | null\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    author?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    parent?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    recursive?: Discussionboard_commentsListRelationFilter\n    discussionboard_comment_likes?: Discussionboard_comment_likesListRelationFilter\n    discussionboard_comment_edits?: Discussionboard_comment_editsListRelationFilter\n    discussionboard_comment_views?: Discussionboard_comment_viewsListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n  }\n\n  export type discussionboard_commentsOrderByWithRelationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_id?: SortOrderInput | SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    post?: discussionboard_postsOrderByWithRelationInput\n    author?: discussionboard_membersOrderByWithRelationInput\n    parent?: discussionboard_commentsOrderByWithRelationInput\n    recursive?: discussionboard_commentsOrderByRelationAggregateInput\n    discussionboard_comment_likes?: discussionboard_comment_likesOrderByRelationAggregateInput\n    discussionboard_comment_edits?: discussionboard_comment_editsOrderByRelationAggregateInput\n    discussionboard_comment_views?: discussionboard_comment_viewsOrderByRelationAggregateInput\n    discussionboard_reports?: discussionboard_reportsOrderByRelationAggregateInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_commentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    OR?: discussionboard_commentsWhereInput[]\n    NOT?: discussionboard_commentsWhereInput | discussionboard_commentsWhereInput[]\n    post_id?: UuidFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidFilter<\"discussionboard_comments\"> | string\n    parent_id?: UuidNullableFilter<\"discussionboard_comments\"> | string | null\n    body?: StringFilter<\"discussionboard_comments\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_comments\"> | Date | string | null\n    post?: XOR<Discussionboard_postsScalarRelationFilter, discussionboard_postsWhereInput>\n    author?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    parent?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    recursive?: Discussionboard_commentsListRelationFilter\n    discussionboard_comment_likes?: Discussionboard_comment_likesListRelationFilter\n    discussionboard_comment_edits?: Discussionboard_comment_editsListRelationFilter\n    discussionboard_comment_views?: Discussionboard_comment_viewsListRelationFilter\n    discussionboard_reports?: Discussionboard_reportsListRelationFilter\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n  }, \"id\">\n\n  export type discussionboard_commentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_id?: SortOrderInput | SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_commentsCountOrderByAggregateInput\n    _max?: discussionboard_commentsMaxOrderByAggregateInput\n    _min?: discussionboard_commentsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_commentsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_commentsScalarWhereWithAggregatesInput | discussionboard_commentsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_commentsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_commentsScalarWhereWithAggregatesInput | discussionboard_commentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_comments\"> | string\n    post_id?: UuidWithAggregatesFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidWithAggregatesFilter<\"discussionboard_comments\"> | string\n    parent_id?: UuidNullableWithAggregatesFilter<\"discussionboard_comments\"> | string | null\n    body?: StringWithAggregatesFilter<\"discussionboard_comments\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_comments\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_comments\"> | Date | string | null\n  }\n\n  export type discussionboard_comment_likesWhereInput = {\n    AND?: discussionboard_comment_likesWhereInput | discussionboard_comment_likesWhereInput[]\n    OR?: discussionboard_comment_likesWhereInput[]\n    NOT?: discussionboard_comment_likesWhereInput | discussionboard_comment_likesWhereInput[]\n    id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    comment_id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    is_like?: BoolFilter<\"discussionboard_comment_likes\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_comment_likes\"> | Date | string\n    comment?: XOR<Discussionboard_commentsScalarRelationFilter, discussionboard_commentsWhereInput>\n    user?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_comment_likesOrderByWithRelationInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n    comment?: discussionboard_commentsOrderByWithRelationInput\n    user?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_comment_likesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    comment_id_user_id?: discussionboard_comment_likesComment_idUser_idCompoundUniqueInput\n    AND?: discussionboard_comment_likesWhereInput | discussionboard_comment_likesWhereInput[]\n    OR?: discussionboard_comment_likesWhereInput[]\n    NOT?: discussionboard_comment_likesWhereInput | discussionboard_comment_likesWhereInput[]\n    comment_id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    is_like?: BoolFilter<\"discussionboard_comment_likes\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_comment_likes\"> | Date | string\n    comment?: XOR<Discussionboard_commentsScalarRelationFilter, discussionboard_commentsWhereInput>\n    user?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"comment_id_user_id\">\n\n  export type discussionboard_comment_likesOrderByWithAggregationInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_comment_likesCountOrderByAggregateInput\n    _max?: discussionboard_comment_likesMaxOrderByAggregateInput\n    _min?: discussionboard_comment_likesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_comment_likesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_comment_likesScalarWhereWithAggregatesInput | discussionboard_comment_likesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_comment_likesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_comment_likesScalarWhereWithAggregatesInput | discussionboard_comment_likesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_comment_likes\"> | string\n    comment_id?: UuidWithAggregatesFilter<\"discussionboard_comment_likes\"> | string\n    user_id?: UuidWithAggregatesFilter<\"discussionboard_comment_likes\"> | string\n    is_like?: BoolWithAggregatesFilter<\"discussionboard_comment_likes\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_comment_likes\"> | Date | string\n  }\n\n  export type discussionboard_comment_editsWhereInput = {\n    AND?: discussionboard_comment_editsWhereInput | discussionboard_comment_editsWhereInput[]\n    OR?: discussionboard_comment_editsWhereInput[]\n    NOT?: discussionboard_comment_editsWhereInput | discussionboard_comment_editsWhereInput[]\n    id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    comment_id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    editor_id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    edit_summary?: StringNullableFilter<\"discussionboard_comment_edits\"> | string | null\n    edited_at?: DateTimeFilter<\"discussionboard_comment_edits\"> | Date | string\n    comment?: XOR<Discussionboard_commentsScalarRelationFilter, discussionboard_commentsWhereInput>\n    editor?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_comment_editsOrderByWithRelationInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrderInput | SortOrder\n    edited_at?: SortOrder\n    comment?: discussionboard_commentsOrderByWithRelationInput\n    editor?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_comment_editsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_comment_editsWhereInput | discussionboard_comment_editsWhereInput[]\n    OR?: discussionboard_comment_editsWhereInput[]\n    NOT?: discussionboard_comment_editsWhereInput | discussionboard_comment_editsWhereInput[]\n    comment_id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    editor_id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    edit_summary?: StringNullableFilter<\"discussionboard_comment_edits\"> | string | null\n    edited_at?: DateTimeFilter<\"discussionboard_comment_edits\"> | Date | string\n    comment?: XOR<Discussionboard_commentsScalarRelationFilter, discussionboard_commentsWhereInput>\n    editor?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\">\n\n  export type discussionboard_comment_editsOrderByWithAggregationInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrderInput | SortOrder\n    edited_at?: SortOrder\n    _count?: discussionboard_comment_editsCountOrderByAggregateInput\n    _max?: discussionboard_comment_editsMaxOrderByAggregateInput\n    _min?: discussionboard_comment_editsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_comment_editsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_comment_editsScalarWhereWithAggregatesInput | discussionboard_comment_editsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_comment_editsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_comment_editsScalarWhereWithAggregatesInput | discussionboard_comment_editsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_comment_edits\"> | string\n    comment_id?: UuidWithAggregatesFilter<\"discussionboard_comment_edits\"> | string\n    editor_id?: UuidWithAggregatesFilter<\"discussionboard_comment_edits\"> | string\n    edit_summary?: StringNullableWithAggregatesFilter<\"discussionboard_comment_edits\"> | string | null\n    edited_at?: DateTimeWithAggregatesFilter<\"discussionboard_comment_edits\"> | Date | string\n  }\n\n  export type discussionboard_comment_viewsWhereInput = {\n    AND?: discussionboard_comment_viewsWhereInput | discussionboard_comment_viewsWhereInput[]\n    OR?: discussionboard_comment_viewsWhereInput[]\n    NOT?: discussionboard_comment_viewsWhereInput | discussionboard_comment_viewsWhereInput[]\n    id?: UuidFilter<\"discussionboard_comment_views\"> | string\n    comment_id?: UuidFilter<\"discussionboard_comment_views\"> | string\n    user_id?: UuidNullableFilter<\"discussionboard_comment_views\"> | string | null\n    session_id?: UuidNullableFilter<\"discussionboard_comment_views\"> | string | null\n    viewed_at?: DateTimeFilter<\"discussionboard_comment_views\"> | Date | string\n    comment?: XOR<Discussionboard_commentsScalarRelationFilter, discussionboard_commentsWhereInput>\n    user?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n  }\n\n  export type discussionboard_comment_viewsOrderByWithRelationInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrderInput | SortOrder\n    session_id?: SortOrderInput | SortOrder\n    viewed_at?: SortOrder\n    comment?: discussionboard_commentsOrderByWithRelationInput\n    user?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_comment_viewsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_comment_viewsWhereInput | discussionboard_comment_viewsWhereInput[]\n    OR?: discussionboard_comment_viewsWhereInput[]\n    NOT?: discussionboard_comment_viewsWhereInput | discussionboard_comment_viewsWhereInput[]\n    comment_id?: UuidFilter<\"discussionboard_comment_views\"> | string\n    user_id?: UuidNullableFilter<\"discussionboard_comment_views\"> | string | null\n    session_id?: UuidNullableFilter<\"discussionboard_comment_views\"> | string | null\n    viewed_at?: DateTimeFilter<\"discussionboard_comment_views\"> | Date | string\n    comment?: XOR<Discussionboard_commentsScalarRelationFilter, discussionboard_commentsWhereInput>\n    user?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_comment_viewsOrderByWithAggregationInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrderInput | SortOrder\n    session_id?: SortOrderInput | SortOrder\n    viewed_at?: SortOrder\n    _count?: discussionboard_comment_viewsCountOrderByAggregateInput\n    _max?: discussionboard_comment_viewsMaxOrderByAggregateInput\n    _min?: discussionboard_comment_viewsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_comment_viewsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_comment_viewsScalarWhereWithAggregatesInput | discussionboard_comment_viewsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_comment_viewsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_comment_viewsScalarWhereWithAggregatesInput | discussionboard_comment_viewsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_comment_views\"> | string\n    comment_id?: UuidWithAggregatesFilter<\"discussionboard_comment_views\"> | string\n    user_id?: UuidNullableWithAggregatesFilter<\"discussionboard_comment_views\"> | string | null\n    session_id?: UuidNullableWithAggregatesFilter<\"discussionboard_comment_views\"> | string | null\n    viewed_at?: DateTimeWithAggregatesFilter<\"discussionboard_comment_views\"> | Date | string\n  }\n\n  export type discussionboard_reportsWhereInput = {\n    AND?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    OR?: discussionboard_reportsWhereInput[]\n    NOT?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    id?: UuidFilter<\"discussionboard_reports\"> | string\n    reporting_member_id?: UuidFilter<\"discussionboard_reports\"> | string\n    target_post_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    target_comment_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    reason?: StringFilter<\"discussionboard_reports\"> | string\n    status?: StringFilter<\"discussionboard_reports\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_reports\"> | Date | string\n    reviewed_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    resolved_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    moderation_note?: StringNullableFilter<\"discussionboard_reports\"> | string | null\n    fk_reports_reporting_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    fk_reports_target_post?: XOR<Discussionboard_postsNullableScalarRelationFilter, discussionboard_postsWhereInput> | null\n    fk_reports_target_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_warnings?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }\n\n  export type discussionboard_reportsOrderByWithRelationInput = {\n    id?: SortOrder\n    reporting_member_id?: SortOrder\n    target_post_id?: SortOrderInput | SortOrder\n    target_comment_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    reviewed_at?: SortOrderInput | SortOrder\n    resolved_at?: SortOrderInput | SortOrder\n    moderation_note?: SortOrderInput | SortOrder\n    fk_reports_reporting_member?: discussionboard_membersOrderByWithRelationInput\n    fk_reports_target_post?: discussionboard_postsOrderByWithRelationInput\n    fk_reports_target_comment?: discussionboard_commentsOrderByWithRelationInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsOrderByRelationAggregateInput\n    discussionboard_warnings?: discussionboard_warningsOrderByRelationAggregateInput\n    discussionboard_audit_logs?: discussionboard_audit_logsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_reportsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    reporting_member_id_target_post_id?: discussionboard_reportsReporting_member_idTarget_post_idCompoundUniqueInput\n    reporting_member_id_target_comment_id?: discussionboard_reportsReporting_member_idTarget_comment_idCompoundUniqueInput\n    AND?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    OR?: discussionboard_reportsWhereInput[]\n    NOT?: discussionboard_reportsWhereInput | discussionboard_reportsWhereInput[]\n    reporting_member_id?: UuidFilter<\"discussionboard_reports\"> | string\n    target_post_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    target_comment_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    reason?: StringFilter<\"discussionboard_reports\"> | string\n    status?: StringFilter<\"discussionboard_reports\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_reports\"> | Date | string\n    reviewed_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    resolved_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    moderation_note?: StringNullableFilter<\"discussionboard_reports\"> | string | null\n    fk_reports_reporting_member?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n    fk_reports_target_post?: XOR<Discussionboard_postsNullableScalarRelationFilter, discussionboard_postsWhereInput> | null\n    fk_reports_target_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_moderation_actions?: Discussionboard_moderation_actionsListRelationFilter\n    discussionboard_warnings?: Discussionboard_warningsListRelationFilter\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }, \"id\" | \"reporting_member_id_target_post_id\" | \"reporting_member_id_target_comment_id\">\n\n  export type discussionboard_reportsOrderByWithAggregationInput = {\n    id?: SortOrder\n    reporting_member_id?: SortOrder\n    target_post_id?: SortOrderInput | SortOrder\n    target_comment_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    reviewed_at?: SortOrderInput | SortOrder\n    resolved_at?: SortOrderInput | SortOrder\n    moderation_note?: SortOrderInput | SortOrder\n    _count?: discussionboard_reportsCountOrderByAggregateInput\n    _max?: discussionboard_reportsMaxOrderByAggregateInput\n    _min?: discussionboard_reportsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_reportsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_reportsScalarWhereWithAggregatesInput | discussionboard_reportsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_reportsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_reportsScalarWhereWithAggregatesInput | discussionboard_reportsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_reports\"> | string\n    reporting_member_id?: UuidWithAggregatesFilter<\"discussionboard_reports\"> | string\n    target_post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_reports\"> | string | null\n    target_comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_reports\"> | string | null\n    reason?: StringWithAggregatesFilter<\"discussionboard_reports\"> | string\n    status?: StringWithAggregatesFilter<\"discussionboard_reports\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_reports\"> | Date | string\n    reviewed_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_reports\"> | Date | string | null\n    resolved_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_reports\"> | Date | string | null\n    moderation_note?: StringNullableWithAggregatesFilter<\"discussionboard_reports\"> | string | null\n  }\n\n  export type discussionboard_moderation_actionsWhereInput = {\n    AND?: discussionboard_moderation_actionsWhereInput | discussionboard_moderation_actionsWhereInput[]\n    OR?: discussionboard_moderation_actionsWhereInput[]\n    NOT?: discussionboard_moderation_actionsWhereInput | discussionboard_moderation_actionsWhereInput[]\n    id?: UuidFilter<\"discussionboard_moderation_actions\"> | string\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_member_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_post_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_comment_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    action_type?: StringFilter<\"discussionboard_moderation_actions\"> | string\n    action_reason?: StringNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_moderation_actions\"> | Date | string\n    fk_moderationactions_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_moderationactions_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_moderationactions_actor_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_moderationactions_related_report?: XOR<Discussionboard_reportsNullableScalarRelationFilter, discussionboard_reportsWhereInput> | null\n    fk_moderationactions_target_post?: XOR<Discussionboard_postsNullableScalarRelationFilter, discussionboard_postsWhereInput> | null\n    fk_moderationactions_target_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }\n\n  export type discussionboard_moderation_actionsOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    actor_member_id?: SortOrderInput | SortOrder\n    related_report_id?: SortOrderInput | SortOrder\n    target_post_id?: SortOrderInput | SortOrder\n    target_comment_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    action_reason?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    fk_moderationactions_actor_admin?: discussionboard_adminsOrderByWithRelationInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsOrderByWithRelationInput\n    fk_moderationactions_actor_member?: discussionboard_membersOrderByWithRelationInput\n    fk_moderationactions_related_report?: discussionboard_reportsOrderByWithRelationInput\n    fk_moderationactions_target_post?: discussionboard_postsOrderByWithRelationInput\n    fk_moderationactions_target_comment?: discussionboard_commentsOrderByWithRelationInput\n    discussionboard_audit_logs?: discussionboard_audit_logsOrderByRelationAggregateInput\n  }\n\n  export type discussionboard_moderation_actionsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_moderation_actionsWhereInput | discussionboard_moderation_actionsWhereInput[]\n    OR?: discussionboard_moderation_actionsWhereInput[]\n    NOT?: discussionboard_moderation_actionsWhereInput | discussionboard_moderation_actionsWhereInput[]\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_member_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_post_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_comment_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    action_type?: StringFilter<\"discussionboard_moderation_actions\"> | string\n    action_reason?: StringNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_moderation_actions\"> | Date | string\n    fk_moderationactions_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_moderationactions_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_moderationactions_actor_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_moderationactions_related_report?: XOR<Discussionboard_reportsNullableScalarRelationFilter, discussionboard_reportsWhereInput> | null\n    fk_moderationactions_target_post?: XOR<Discussionboard_postsNullableScalarRelationFilter, discussionboard_postsWhereInput> | null\n    fk_moderationactions_target_comment?: XOR<Discussionboard_commentsNullableScalarRelationFilter, discussionboard_commentsWhereInput> | null\n    discussionboard_audit_logs?: Discussionboard_audit_logsListRelationFilter\n  }, \"id\">\n\n  export type discussionboard_moderation_actionsOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    actor_member_id?: SortOrderInput | SortOrder\n    related_report_id?: SortOrderInput | SortOrder\n    target_post_id?: SortOrderInput | SortOrder\n    target_comment_id?: SortOrderInput | SortOrder\n    action_type?: SortOrder\n    action_reason?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_moderation_actionsCountOrderByAggregateInput\n    _max?: discussionboard_moderation_actionsMaxOrderByAggregateInput\n    _min?: discussionboard_moderation_actionsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_moderation_actionsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_moderation_actionsScalarWhereWithAggregatesInput | discussionboard_moderation_actionsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_moderation_actionsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_moderation_actionsScalarWhereWithAggregatesInput | discussionboard_moderation_actionsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string\n    actor_admin_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_moderator_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_member_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    related_report_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_post_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_comment_id?: UuidNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    action_type?: StringWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string\n    action_reason?: StringNullableWithAggregatesFilter<\"discussionboard_moderation_actions\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_moderation_actions\"> | Date | string\n  }\n\n  export type discussionboard_bansWhereInput = {\n    AND?: discussionboard_bansWhereInput | discussionboard_bansWhereInput[]\n    OR?: discussionboard_bansWhereInput[]\n    NOT?: discussionboard_bansWhereInput | discussionboard_bansWhereInput[]\n    id?: UuidFilter<\"discussionboard_bans\"> | string\n    target_admin_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    target_moderator_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    target_member_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    ban_reason?: StringFilter<\"discussionboard_bans\"> | string\n    ban_start_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    ban_end_at?: DateTimeNullableFilter<\"discussionboard_bans\"> | Date | string | null\n    status?: StringFilter<\"discussionboard_bans\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    fk_bans_target_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_bans_target_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_bans_target_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_bans_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_bans_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n  }\n\n  export type discussionboard_bansOrderByWithRelationInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrderInput | SortOrder\n    target_moderator_id?: SortOrderInput | SortOrder\n    target_member_id?: SortOrderInput | SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    ban_reason?: SortOrder\n    ban_start_at?: SortOrder\n    ban_end_at?: SortOrderInput | SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    fk_bans_target_admin?: discussionboard_adminsOrderByWithRelationInput\n    fk_bans_target_moderator?: discussionboard_moderatorsOrderByWithRelationInput\n    fk_bans_target_member?: discussionboard_membersOrderByWithRelationInput\n    fk_bans_actor_admin?: discussionboard_adminsOrderByWithRelationInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsOrderByWithRelationInput\n  }\n\n  export type discussionboard_bansWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    target_admin_id?: string\n    target_moderator_id?: string\n    target_member_id?: string\n    AND?: discussionboard_bansWhereInput | discussionboard_bansWhereInput[]\n    OR?: discussionboard_bansWhereInput[]\n    NOT?: discussionboard_bansWhereInput | discussionboard_bansWhereInput[]\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    ban_reason?: StringFilter<\"discussionboard_bans\"> | string\n    ban_start_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    ban_end_at?: DateTimeNullableFilter<\"discussionboard_bans\"> | Date | string | null\n    status?: StringFilter<\"discussionboard_bans\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    fk_bans_target_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_bans_target_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_bans_target_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_bans_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_bans_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n  }, \"id\" | \"target_admin_id\" | \"target_moderator_id\" | \"target_member_id\">\n\n  export type discussionboard_bansOrderByWithAggregationInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrderInput | SortOrder\n    target_moderator_id?: SortOrderInput | SortOrder\n    target_member_id?: SortOrderInput | SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    ban_reason?: SortOrder\n    ban_start_at?: SortOrder\n    ban_end_at?: SortOrderInput | SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_bansCountOrderByAggregateInput\n    _max?: discussionboard_bansMaxOrderByAggregateInput\n    _min?: discussionboard_bansMinOrderByAggregateInput\n  }\n\n  export type discussionboard_bansScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_bansScalarWhereWithAggregatesInput | discussionboard_bansScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_bansScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_bansScalarWhereWithAggregatesInput | discussionboard_bansScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_bans\"> | string\n    target_admin_id?: UuidNullableWithAggregatesFilter<\"discussionboard_bans\"> | string | null\n    target_moderator_id?: UuidNullableWithAggregatesFilter<\"discussionboard_bans\"> | string | null\n    target_member_id?: UuidNullableWithAggregatesFilter<\"discussionboard_bans\"> | string | null\n    actor_admin_id?: UuidNullableWithAggregatesFilter<\"discussionboard_bans\"> | string | null\n    actor_moderator_id?: UuidNullableWithAggregatesFilter<\"discussionboard_bans\"> | string | null\n    ban_reason?: StringWithAggregatesFilter<\"discussionboard_bans\"> | string\n    ban_start_at?: DateTimeWithAggregatesFilter<\"discussionboard_bans\"> | Date | string\n    ban_end_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_bans\"> | Date | string | null\n    status?: StringWithAggregatesFilter<\"discussionboard_bans\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_bans\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_bans\"> | Date | string\n  }\n\n  export type discussionboard_warningsWhereInput = {\n    AND?: discussionboard_warningsWhereInput | discussionboard_warningsWhereInput[]\n    OR?: discussionboard_warningsWhereInput[]\n    NOT?: discussionboard_warningsWhereInput | discussionboard_warningsWhereInput[]\n    id?: UuidFilter<\"discussionboard_warnings\"> | string\n    target_admin_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    target_moderator_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    target_member_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    reason?: StringFilter<\"discussionboard_warnings\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_warnings\"> | Date | string\n    fk_warnings_target_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_warnings_target_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_warnings_target_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_warnings_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_warnings_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_warnings_related_report?: XOR<Discussionboard_reportsNullableScalarRelationFilter, discussionboard_reportsWhereInput> | null\n  }\n\n  export type discussionboard_warningsOrderByWithRelationInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrderInput | SortOrder\n    target_moderator_id?: SortOrderInput | SortOrder\n    target_member_id?: SortOrderInput | SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    related_report_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    fk_warnings_target_admin?: discussionboard_adminsOrderByWithRelationInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsOrderByWithRelationInput\n    fk_warnings_target_member?: discussionboard_membersOrderByWithRelationInput\n    fk_warnings_actor_admin?: discussionboard_adminsOrderByWithRelationInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsOrderByWithRelationInput\n    fk_warnings_related_report?: discussionboard_reportsOrderByWithRelationInput\n  }\n\n  export type discussionboard_warningsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_warningsWhereInput | discussionboard_warningsWhereInput[]\n    OR?: discussionboard_warningsWhereInput[]\n    NOT?: discussionboard_warningsWhereInput | discussionboard_warningsWhereInput[]\n    target_admin_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    target_moderator_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    target_member_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    reason?: StringFilter<\"discussionboard_warnings\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_warnings\"> | Date | string\n    fk_warnings_target_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_warnings_target_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_warnings_target_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_warnings_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_warnings_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_warnings_related_report?: XOR<Discussionboard_reportsNullableScalarRelationFilter, discussionboard_reportsWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_warningsOrderByWithAggregationInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrderInput | SortOrder\n    target_moderator_id?: SortOrderInput | SortOrder\n    target_member_id?: SortOrderInput | SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    related_report_id?: SortOrderInput | SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_warningsCountOrderByAggregateInput\n    _max?: discussionboard_warningsMaxOrderByAggregateInput\n    _min?: discussionboard_warningsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_warningsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_warningsScalarWhereWithAggregatesInput | discussionboard_warningsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_warningsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_warningsScalarWhereWithAggregatesInput | discussionboard_warningsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_warnings\"> | string\n    target_admin_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warnings\"> | string | null\n    target_moderator_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warnings\"> | string | null\n    target_member_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warnings\"> | string | null\n    actor_admin_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warnings\"> | string | null\n    actor_moderator_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warnings\"> | string | null\n    related_report_id?: UuidNullableWithAggregatesFilter<\"discussionboard_warnings\"> | string | null\n    reason?: StringWithAggregatesFilter<\"discussionboard_warnings\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_warnings\"> | Date | string\n  }\n\n  export type discussionboard_audit_logsWhereInput = {\n    AND?: discussionboard_audit_logsWhereInput | discussionboard_audit_logsWhereInput[]\n    OR?: discussionboard_audit_logsWhereInput[]\n    NOT?: discussionboard_audit_logsWhereInput | discussionboard_audit_logsWhereInput[]\n    id?: UuidFilter<\"discussionboard_audit_logs\"> | string\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_member_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    related_moderation_action_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    event_type?: StringFilter<\"discussionboard_audit_logs\"> | string\n    event_detail?: StringFilter<\"discussionboard_audit_logs\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_audit_logs\"> | Date | string\n    fk_auditlogs_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_auditlogs_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_auditlogs_actor_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_auditlogs_related_report?: XOR<Discussionboard_reportsNullableScalarRelationFilter, discussionboard_reportsWhereInput> | null\n    fk_auditlogs_related_moderation_action?: XOR<Discussionboard_moderation_actionsNullableScalarRelationFilter, discussionboard_moderation_actionsWhereInput> | null\n  }\n\n  export type discussionboard_audit_logsOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    actor_member_id?: SortOrderInput | SortOrder\n    related_report_id?: SortOrderInput | SortOrder\n    related_moderation_action_id?: SortOrderInput | SortOrder\n    event_type?: SortOrder\n    event_detail?: SortOrder\n    created_at?: SortOrder\n    fk_auditlogs_actor_admin?: discussionboard_adminsOrderByWithRelationInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsOrderByWithRelationInput\n    fk_auditlogs_actor_member?: discussionboard_membersOrderByWithRelationInput\n    fk_auditlogs_related_report?: discussionboard_reportsOrderByWithRelationInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsOrderByWithRelationInput\n  }\n\n  export type discussionboard_audit_logsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_audit_logsWhereInput | discussionboard_audit_logsWhereInput[]\n    OR?: discussionboard_audit_logsWhereInput[]\n    NOT?: discussionboard_audit_logsWhereInput | discussionboard_audit_logsWhereInput[]\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_member_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    related_moderation_action_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    event_type?: StringFilter<\"discussionboard_audit_logs\"> | string\n    event_detail?: StringFilter<\"discussionboard_audit_logs\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_audit_logs\"> | Date | string\n    fk_auditlogs_actor_admin?: XOR<Discussionboard_adminsNullableScalarRelationFilter, discussionboard_adminsWhereInput> | null\n    fk_auditlogs_actor_moderator?: XOR<Discussionboard_moderatorsNullableScalarRelationFilter, discussionboard_moderatorsWhereInput> | null\n    fk_auditlogs_actor_member?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n    fk_auditlogs_related_report?: XOR<Discussionboard_reportsNullableScalarRelationFilter, discussionboard_reportsWhereInput> | null\n    fk_auditlogs_related_moderation_action?: XOR<Discussionboard_moderation_actionsNullableScalarRelationFilter, discussionboard_moderation_actionsWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_audit_logsOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrderInput | SortOrder\n    actor_moderator_id?: SortOrderInput | SortOrder\n    actor_member_id?: SortOrderInput | SortOrder\n    related_report_id?: SortOrderInput | SortOrder\n    related_moderation_action_id?: SortOrderInput | SortOrder\n    event_type?: SortOrder\n    event_detail?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_audit_logsCountOrderByAggregateInput\n    _max?: discussionboard_audit_logsMaxOrderByAggregateInput\n    _min?: discussionboard_audit_logsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_audit_logsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_audit_logsScalarWhereWithAggregatesInput | discussionboard_audit_logsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_audit_logsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_audit_logsScalarWhereWithAggregatesInput | discussionboard_audit_logsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_audit_logs\"> | string\n    actor_admin_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_moderator_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_member_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_logs\"> | string | null\n    related_report_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_logs\"> | string | null\n    related_moderation_action_id?: UuidNullableWithAggregatesFilter<\"discussionboard_audit_logs\"> | string | null\n    event_type?: StringWithAggregatesFilter<\"discussionboard_audit_logs\"> | string\n    event_detail?: StringWithAggregatesFilter<\"discussionboard_audit_logs\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_audit_logs\"> | Date | string\n  }\n\n  export type discussionboard_community_guidelinesWhereInput = {\n    AND?: discussionboard_community_guidelinesWhereInput | discussionboard_community_guidelinesWhereInput[]\n    OR?: discussionboard_community_guidelinesWhereInput[]\n    NOT?: discussionboard_community_guidelinesWhereInput | discussionboard_community_guidelinesWhereInput[]\n    id?: UuidFilter<\"discussionboard_community_guidelines\"> | string\n    title?: StringFilter<\"discussionboard_community_guidelines\"> | string\n    body?: StringFilter<\"discussionboard_community_guidelines\"> | string\n    order_index?: IntFilter<\"discussionboard_community_guidelines\"> | number\n    is_active?: BoolFilter<\"discussionboard_community_guidelines\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_community_guidelines\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_community_guidelines\"> | Date | string\n  }\n\n  export type discussionboard_community_guidelinesOrderByWithRelationInput = {\n    id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    order_index?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_community_guidelinesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    title?: string\n    AND?: discussionboard_community_guidelinesWhereInput | discussionboard_community_guidelinesWhereInput[]\n    OR?: discussionboard_community_guidelinesWhereInput[]\n    NOT?: discussionboard_community_guidelinesWhereInput | discussionboard_community_guidelinesWhereInput[]\n    body?: StringFilter<\"discussionboard_community_guidelines\"> | string\n    order_index?: IntFilter<\"discussionboard_community_guidelines\"> | number\n    is_active?: BoolFilter<\"discussionboard_community_guidelines\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_community_guidelines\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_community_guidelines\"> | Date | string\n  }, \"id\" | \"title\">\n\n  export type discussionboard_community_guidelinesOrderByWithAggregationInput = {\n    id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    order_index?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_community_guidelinesCountOrderByAggregateInput\n    _avg?: discussionboard_community_guidelinesAvgOrderByAggregateInput\n    _max?: discussionboard_community_guidelinesMaxOrderByAggregateInput\n    _min?: discussionboard_community_guidelinesMinOrderByAggregateInput\n    _sum?: discussionboard_community_guidelinesSumOrderByAggregateInput\n  }\n\n  export type discussionboard_community_guidelinesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_community_guidelinesScalarWhereWithAggregatesInput | discussionboard_community_guidelinesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_community_guidelinesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_community_guidelinesScalarWhereWithAggregatesInput | discussionboard_community_guidelinesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_community_guidelines\"> | string\n    title?: StringWithAggregatesFilter<\"discussionboard_community_guidelines\"> | string\n    body?: StringWithAggregatesFilter<\"discussionboard_community_guidelines\"> | string\n    order_index?: IntWithAggregatesFilter<\"discussionboard_community_guidelines\"> | number\n    is_active?: BoolWithAggregatesFilter<\"discussionboard_community_guidelines\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_community_guidelines\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_community_guidelines\"> | Date | string\n  }\n\n  export type discussionboard_content_policiesWhereInput = {\n    AND?: discussionboard_content_policiesWhereInput | discussionboard_content_policiesWhereInput[]\n    OR?: discussionboard_content_policiesWhereInput[]\n    NOT?: discussionboard_content_policiesWhereInput | discussionboard_content_policiesWhereInput[]\n    id?: UuidFilter<\"discussionboard_content_policies\"> | string\n    policy_code?: StringFilter<\"discussionboard_content_policies\"> | string\n    description?: StringFilter<\"discussionboard_content_policies\"> | string\n    category?: StringFilter<\"discussionboard_content_policies\"> | string\n    is_active?: BoolFilter<\"discussionboard_content_policies\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_content_policies\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_content_policies\"> | Date | string\n  }\n\n  export type discussionboard_content_policiesOrderByWithRelationInput = {\n    id?: SortOrder\n    policy_code?: SortOrder\n    description?: SortOrder\n    category?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_content_policiesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    policy_code?: string\n    AND?: discussionboard_content_policiesWhereInput | discussionboard_content_policiesWhereInput[]\n    OR?: discussionboard_content_policiesWhereInput[]\n    NOT?: discussionboard_content_policiesWhereInput | discussionboard_content_policiesWhereInput[]\n    description?: StringFilter<\"discussionboard_content_policies\"> | string\n    category?: StringFilter<\"discussionboard_content_policies\"> | string\n    is_active?: BoolFilter<\"discussionboard_content_policies\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_content_policies\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_content_policies\"> | Date | string\n  }, \"id\" | \"policy_code\">\n\n  export type discussionboard_content_policiesOrderByWithAggregationInput = {\n    id?: SortOrder\n    policy_code?: SortOrder\n    description?: SortOrder\n    category?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_content_policiesCountOrderByAggregateInput\n    _max?: discussionboard_content_policiesMaxOrderByAggregateInput\n    _min?: discussionboard_content_policiesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_content_policiesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_content_policiesScalarWhereWithAggregatesInput | discussionboard_content_policiesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_content_policiesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_content_policiesScalarWhereWithAggregatesInput | discussionboard_content_policiesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_content_policies\"> | string\n    policy_code?: StringWithAggregatesFilter<\"discussionboard_content_policies\"> | string\n    description?: StringWithAggregatesFilter<\"discussionboard_content_policies\"> | string\n    category?: StringWithAggregatesFilter<\"discussionboard_content_policies\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussionboard_content_policies\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_content_policies\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_content_policies\"> | Date | string\n  }\n\n  export type discussionboard_profanity_filtersWhereInput = {\n    AND?: discussionboard_profanity_filtersWhereInput | discussionboard_profanity_filtersWhereInput[]\n    OR?: discussionboard_profanity_filtersWhereInput[]\n    NOT?: discussionboard_profanity_filtersWhereInput | discussionboard_profanity_filtersWhereInput[]\n    id?: UuidFilter<\"discussionboard_profanity_filters\"> | string\n    word?: StringFilter<\"discussionboard_profanity_filters\"> | string\n    is_active?: BoolFilter<\"discussionboard_profanity_filters\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_profanity_filters\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_profanity_filters\"> | Date | string\n  }\n\n  export type discussionboard_profanity_filtersOrderByWithRelationInput = {\n    id?: SortOrder\n    word?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_profanity_filtersWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    word?: string\n    AND?: discussionboard_profanity_filtersWhereInput | discussionboard_profanity_filtersWhereInput[]\n    OR?: discussionboard_profanity_filtersWhereInput[]\n    NOT?: discussionboard_profanity_filtersWhereInput | discussionboard_profanity_filtersWhereInput[]\n    is_active?: BoolFilter<\"discussionboard_profanity_filters\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_profanity_filters\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_profanity_filters\"> | Date | string\n  }, \"id\" | \"word\">\n\n  export type discussionboard_profanity_filtersOrderByWithAggregationInput = {\n    id?: SortOrder\n    word?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_profanity_filtersCountOrderByAggregateInput\n    _max?: discussionboard_profanity_filtersMaxOrderByAggregateInput\n    _min?: discussionboard_profanity_filtersMinOrderByAggregateInput\n  }\n\n  export type discussionboard_profanity_filtersScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_profanity_filtersScalarWhereWithAggregatesInput | discussionboard_profanity_filtersScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_profanity_filtersScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_profanity_filtersScalarWhereWithAggregatesInput | discussionboard_profanity_filtersScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_profanity_filters\"> | string\n    word?: StringWithAggregatesFilter<\"discussionboard_profanity_filters\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussionboard_profanity_filters\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_profanity_filters\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_profanity_filters\"> | Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesWhereInput = {\n    AND?: discussionboard_automated_spam_rulesWhereInput | discussionboard_automated_spam_rulesWhereInput[]\n    OR?: discussionboard_automated_spam_rulesWhereInput[]\n    NOT?: discussionboard_automated_spam_rulesWhereInput | discussionboard_automated_spam_rulesWhereInput[]\n    id?: UuidFilter<\"discussionboard_automated_spam_rules\"> | string\n    rule_pattern?: StringFilter<\"discussionboard_automated_spam_rules\"> | string\n    description?: StringFilter<\"discussionboard_automated_spam_rules\"> | string\n    is_active?: BoolFilter<\"discussionboard_automated_spam_rules\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_automated_spam_rules\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_automated_spam_rules\"> | Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesOrderByWithRelationInput = {\n    id?: SortOrder\n    rule_pattern?: SortOrder\n    description?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_automated_spam_rulesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    rule_pattern?: string\n    AND?: discussionboard_automated_spam_rulesWhereInput | discussionboard_automated_spam_rulesWhereInput[]\n    OR?: discussionboard_automated_spam_rulesWhereInput[]\n    NOT?: discussionboard_automated_spam_rulesWhereInput | discussionboard_automated_spam_rulesWhereInput[]\n    description?: StringFilter<\"discussionboard_automated_spam_rules\"> | string\n    is_active?: BoolFilter<\"discussionboard_automated_spam_rules\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_automated_spam_rules\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_automated_spam_rules\"> | Date | string\n  }, \"id\" | \"rule_pattern\">\n\n  export type discussionboard_automated_spam_rulesOrderByWithAggregationInput = {\n    id?: SortOrder\n    rule_pattern?: SortOrder\n    description?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_automated_spam_rulesCountOrderByAggregateInput\n    _max?: discussionboard_automated_spam_rulesMaxOrderByAggregateInput\n    _min?: discussionboard_automated_spam_rulesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput | discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput | discussionboard_automated_spam_rulesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_automated_spam_rules\"> | string\n    rule_pattern?: StringWithAggregatesFilter<\"discussionboard_automated_spam_rules\"> | string\n    description?: StringWithAggregatesFilter<\"discussionboard_automated_spam_rules\"> | string\n    is_active?: BoolWithAggregatesFilter<\"discussionboard_automated_spam_rules\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_automated_spam_rules\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_automated_spam_rules\"> | Date | string\n  }\n\n  export type discussionboard_notificationsWhereInput = {\n    AND?: discussionboard_notificationsWhereInput | discussionboard_notificationsWhereInput[]\n    OR?: discussionboard_notificationsWhereInput[]\n    NOT?: discussionboard_notificationsWhereInput | discussionboard_notificationsWhereInput[]\n    id?: UuidFilter<\"discussionboard_notifications\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_notifications\"> | string\n    type?: StringFilter<\"discussionboard_notifications\"> | string\n    related_entity_id?: UuidNullableFilter<\"discussionboard_notifications\"> | string | null\n    related_entity_type?: StringNullableFilter<\"discussionboard_notifications\"> | string | null\n    content?: StringFilter<\"discussionboard_notifications\"> | string\n    is_read?: BoolFilter<\"discussionboard_notifications\"> | boolean\n    delivered_at?: DateTimeFilter<\"discussionboard_notifications\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussionboard_notifications\"> | Date | string | null\n    discussionboard_notifications_recipient?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_notificationsOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    type?: SortOrder\n    related_entity_id?: SortOrderInput | SortOrder\n    related_entity_type?: SortOrderInput | SortOrder\n    content?: SortOrder\n    is_read?: SortOrder\n    delivered_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    discussionboard_notifications_recipient?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_notificationsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_notificationsWhereInput | discussionboard_notificationsWhereInput[]\n    OR?: discussionboard_notificationsWhereInput[]\n    NOT?: discussionboard_notificationsWhereInput | discussionboard_notificationsWhereInput[]\n    discussionboard_member_id?: UuidFilter<\"discussionboard_notifications\"> | string\n    type?: StringFilter<\"discussionboard_notifications\"> | string\n    related_entity_id?: UuidNullableFilter<\"discussionboard_notifications\"> | string | null\n    related_entity_type?: StringNullableFilter<\"discussionboard_notifications\"> | string | null\n    content?: StringFilter<\"discussionboard_notifications\"> | string\n    is_read?: BoolFilter<\"discussionboard_notifications\"> | boolean\n    delivered_at?: DateTimeFilter<\"discussionboard_notifications\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussionboard_notifications\"> | Date | string | null\n    discussionboard_notifications_recipient?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\">\n\n  export type discussionboard_notificationsOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    type?: SortOrder\n    related_entity_id?: SortOrderInput | SortOrder\n    related_entity_type?: SortOrderInput | SortOrder\n    content?: SortOrder\n    is_read?: SortOrder\n    delivered_at?: SortOrder\n    expires_at?: SortOrderInput | SortOrder\n    _count?: discussionboard_notificationsCountOrderByAggregateInput\n    _max?: discussionboard_notificationsMaxOrderByAggregateInput\n    _min?: discussionboard_notificationsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_notificationsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_notificationsScalarWhereWithAggregatesInput | discussionboard_notificationsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_notificationsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_notificationsScalarWhereWithAggregatesInput | discussionboard_notificationsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_notifications\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_notifications\"> | string\n    type?: StringWithAggregatesFilter<\"discussionboard_notifications\"> | string\n    related_entity_id?: UuidNullableWithAggregatesFilter<\"discussionboard_notifications\"> | string | null\n    related_entity_type?: StringNullableWithAggregatesFilter<\"discussionboard_notifications\"> | string | null\n    content?: StringWithAggregatesFilter<\"discussionboard_notifications\"> | string\n    is_read?: BoolWithAggregatesFilter<\"discussionboard_notifications\"> | boolean\n    delivered_at?: DateTimeWithAggregatesFilter<\"discussionboard_notifications\"> | Date | string\n    expires_at?: DateTimeNullableWithAggregatesFilter<\"discussionboard_notifications\"> | Date | string | null\n  }\n\n  export type discussionboard_alert_preferencesWhereInput = {\n    AND?: discussionboard_alert_preferencesWhereInput | discussionboard_alert_preferencesWhereInput[]\n    OR?: discussionboard_alert_preferencesWhereInput[]\n    NOT?: discussionboard_alert_preferencesWhereInput | discussionboard_alert_preferencesWhereInput[]\n    id?: UuidFilter<\"discussionboard_alert_preferences\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_alert_preferences\"> | string\n    notification_type?: StringFilter<\"discussionboard_alert_preferences\"> | string\n    delivery_channel?: StringFilter<\"discussionboard_alert_preferences\"> | string\n    updated_at?: DateTimeFilter<\"discussionboard_alert_preferences\"> | Date | string\n    discussionboard_alert_preferences_owner?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_alert_preferencesOrderByWithRelationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    notification_type?: SortOrder\n    delivery_channel?: SortOrder\n    updated_at?: SortOrder\n    discussionboard_alert_preferences_owner?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_alert_preferencesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    discussionboard_member_id_notification_type?: discussionboard_alert_preferencesDiscussionboard_member_idNotification_typeCompoundUniqueInput\n    AND?: discussionboard_alert_preferencesWhereInput | discussionboard_alert_preferencesWhereInput[]\n    OR?: discussionboard_alert_preferencesWhereInput[]\n    NOT?: discussionboard_alert_preferencesWhereInput | discussionboard_alert_preferencesWhereInput[]\n    discussionboard_member_id?: UuidFilter<\"discussionboard_alert_preferences\"> | string\n    notification_type?: StringFilter<\"discussionboard_alert_preferences\"> | string\n    delivery_channel?: StringFilter<\"discussionboard_alert_preferences\"> | string\n    updated_at?: DateTimeFilter<\"discussionboard_alert_preferences\"> | Date | string\n    discussionboard_alert_preferences_owner?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\" | \"discussionboard_member_id_notification_type\">\n\n  export type discussionboard_alert_preferencesOrderByWithAggregationInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    notification_type?: SortOrder\n    delivery_channel?: SortOrder\n    updated_at?: SortOrder\n    _count?: discussionboard_alert_preferencesCountOrderByAggregateInput\n    _max?: discussionboard_alert_preferencesMaxOrderByAggregateInput\n    _min?: discussionboard_alert_preferencesMinOrderByAggregateInput\n  }\n\n  export type discussionboard_alert_preferencesScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_alert_preferencesScalarWhereWithAggregatesInput | discussionboard_alert_preferencesScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_alert_preferencesScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_alert_preferencesScalarWhereWithAggregatesInput | discussionboard_alert_preferencesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_alert_preferences\"> | string\n    discussionboard_member_id?: UuidWithAggregatesFilter<\"discussionboard_alert_preferences\"> | string\n    notification_type?: StringWithAggregatesFilter<\"discussionboard_alert_preferences\"> | string\n    delivery_channel?: StringWithAggregatesFilter<\"discussionboard_alert_preferences\"> | string\n    updated_at?: DateTimeWithAggregatesFilter<\"discussionboard_alert_preferences\"> | Date | string\n  }\n\n  export type discussionboard_action_logsWhereInput = {\n    AND?: discussionboard_action_logsWhereInput | discussionboard_action_logsWhereInput[]\n    OR?: discussionboard_action_logsWhereInput[]\n    NOT?: discussionboard_action_logsWhereInput | discussionboard_action_logsWhereInput[]\n    id?: UuidFilter<\"discussionboard_action_logs\"> | string\n    actor_id?: UuidFilter<\"discussionboard_action_logs\"> | string\n    event_type?: StringFilter<\"discussionboard_action_logs\"> | string\n    event_target_id?: UuidNullableFilter<\"discussionboard_action_logs\"> | string | null\n    metadata?: StringNullableFilter<\"discussionboard_action_logs\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_action_logs\"> | Date | string\n    fk_action_log_actor?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }\n\n  export type discussionboard_action_logsOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    event_type?: SortOrder\n    event_target_id?: SortOrderInput | SortOrder\n    metadata?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    fk_action_log_actor?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_action_logsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_action_logsWhereInput | discussionboard_action_logsWhereInput[]\n    OR?: discussionboard_action_logsWhereInput[]\n    NOT?: discussionboard_action_logsWhereInput | discussionboard_action_logsWhereInput[]\n    actor_id?: UuidFilter<\"discussionboard_action_logs\"> | string\n    event_type?: StringFilter<\"discussionboard_action_logs\"> | string\n    event_target_id?: UuidNullableFilter<\"discussionboard_action_logs\"> | string | null\n    metadata?: StringNullableFilter<\"discussionboard_action_logs\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_action_logs\"> | Date | string\n    fk_action_log_actor?: XOR<Discussionboard_membersScalarRelationFilter, discussionboard_membersWhereInput>\n  }, \"id\">\n\n  export type discussionboard_action_logsOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    event_type?: SortOrder\n    event_target_id?: SortOrderInput | SortOrder\n    metadata?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_action_logsCountOrderByAggregateInput\n    _max?: discussionboard_action_logsMaxOrderByAggregateInput\n    _min?: discussionboard_action_logsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_action_logsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_action_logsScalarWhereWithAggregatesInput | discussionboard_action_logsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_action_logsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_action_logsScalarWhereWithAggregatesInput | discussionboard_action_logsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_action_logs\"> | string\n    actor_id?: UuidWithAggregatesFilter<\"discussionboard_action_logs\"> | string\n    event_type?: StringWithAggregatesFilter<\"discussionboard_action_logs\"> | string\n    event_target_id?: UuidNullableWithAggregatesFilter<\"discussionboard_action_logs\"> | string | null\n    metadata?: StringNullableWithAggregatesFilter<\"discussionboard_action_logs\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_action_logs\"> | Date | string\n  }\n\n  export type discussionboard_error_logsWhereInput = {\n    AND?: discussionboard_error_logsWhereInput | discussionboard_error_logsWhereInput[]\n    OR?: discussionboard_error_logsWhereInput[]\n    NOT?: discussionboard_error_logsWhereInput | discussionboard_error_logsWhereInput[]\n    id?: UuidFilter<\"discussionboard_error_logs\"> | string\n    error_code?: StringFilter<\"discussionboard_error_logs\"> | string\n    error_message?: StringFilter<\"discussionboard_error_logs\"> | string\n    stack_trace?: StringNullableFilter<\"discussionboard_error_logs\"> | string | null\n    context_id?: UuidNullableFilter<\"discussionboard_error_logs\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_error_logs\"> | Date | string\n  }\n\n  export type discussionboard_error_logsOrderByWithRelationInput = {\n    id?: SortOrder\n    error_code?: SortOrder\n    error_message?: SortOrder\n    stack_trace?: SortOrderInput | SortOrder\n    context_id?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_error_logsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_error_logsWhereInput | discussionboard_error_logsWhereInput[]\n    OR?: discussionboard_error_logsWhereInput[]\n    NOT?: discussionboard_error_logsWhereInput | discussionboard_error_logsWhereInput[]\n    error_code?: StringFilter<\"discussionboard_error_logs\"> | string\n    error_message?: StringFilter<\"discussionboard_error_logs\"> | string\n    stack_trace?: StringNullableFilter<\"discussionboard_error_logs\"> | string | null\n    context_id?: UuidNullableFilter<\"discussionboard_error_logs\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_error_logs\"> | Date | string\n  }, \"id\">\n\n  export type discussionboard_error_logsOrderByWithAggregationInput = {\n    id?: SortOrder\n    error_code?: SortOrder\n    error_message?: SortOrder\n    stack_trace?: SortOrderInput | SortOrder\n    context_id?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_error_logsCountOrderByAggregateInput\n    _max?: discussionboard_error_logsMaxOrderByAggregateInput\n    _min?: discussionboard_error_logsMinOrderByAggregateInput\n  }\n\n  export type discussionboard_error_logsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_error_logsScalarWhereWithAggregatesInput | discussionboard_error_logsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_error_logsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_error_logsScalarWhereWithAggregatesInput | discussionboard_error_logsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_error_logs\"> | string\n    error_code?: StringWithAggregatesFilter<\"discussionboard_error_logs\"> | string\n    error_message?: StringWithAggregatesFilter<\"discussionboard_error_logs\"> | string\n    stack_trace?: StringNullableWithAggregatesFilter<\"discussionboard_error_logs\"> | string | null\n    context_id?: UuidNullableWithAggregatesFilter<\"discussionboard_error_logs\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_error_logs\"> | Date | string\n  }\n\n  export type discussionboard_api_access_logsWhereInput = {\n    AND?: discussionboard_api_access_logsWhereInput | discussionboard_api_access_logsWhereInput[]\n    OR?: discussionboard_api_access_logsWhereInput[]\n    NOT?: discussionboard_api_access_logsWhereInput | discussionboard_api_access_logsWhereInput[]\n    id?: UuidFilter<\"discussionboard_api_access_logs\"> | string\n    actor_id?: UuidNullableFilter<\"discussionboard_api_access_logs\"> | string | null\n    method?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    endpoint?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    status_code?: IntFilter<\"discussionboard_api_access_logs\"> | number\n    ip_address?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    user_agent?: StringNullableFilter<\"discussionboard_api_access_logs\"> | string | null\n    response_time_ms?: IntFilter<\"discussionboard_api_access_logs\"> | number\n    created_at?: DateTimeFilter<\"discussionboard_api_access_logs\"> | Date | string\n    fk_access_log_actor?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n  }\n\n  export type discussionboard_api_access_logsOrderByWithRelationInput = {\n    id?: SortOrder\n    actor_id?: SortOrderInput | SortOrder\n    method?: SortOrder\n    endpoint?: SortOrder\n    status_code?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrderInput | SortOrder\n    response_time_ms?: SortOrder\n    created_at?: SortOrder\n    fk_access_log_actor?: discussionboard_membersOrderByWithRelationInput\n  }\n\n  export type discussionboard_api_access_logsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: discussionboard_api_access_logsWhereInput | discussionboard_api_access_logsWhereInput[]\n    OR?: discussionboard_api_access_logsWhereInput[]\n    NOT?: discussionboard_api_access_logsWhereInput | discussionboard_api_access_logsWhereInput[]\n    actor_id?: UuidNullableFilter<\"discussionboard_api_access_logs\"> | string | null\n    method?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    endpoint?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    status_code?: IntFilter<\"discussionboard_api_access_logs\"> | number\n    ip_address?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    user_agent?: StringNullableFilter<\"discussionboard_api_access_logs\"> | string | null\n    response_time_ms?: IntFilter<\"discussionboard_api_access_logs\"> | number\n    created_at?: DateTimeFilter<\"discussionboard_api_access_logs\"> | Date | string\n    fk_access_log_actor?: XOR<Discussionboard_membersNullableScalarRelationFilter, discussionboard_membersWhereInput> | null\n  }, \"id\">\n\n  export type discussionboard_api_access_logsOrderByWithAggregationInput = {\n    id?: SortOrder\n    actor_id?: SortOrderInput | SortOrder\n    method?: SortOrder\n    endpoint?: SortOrder\n    status_code?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrderInput | SortOrder\n    response_time_ms?: SortOrder\n    created_at?: SortOrder\n    _count?: discussionboard_api_access_logsCountOrderByAggregateInput\n    _avg?: discussionboard_api_access_logsAvgOrderByAggregateInput\n    _max?: discussionboard_api_access_logsMaxOrderByAggregateInput\n    _min?: discussionboard_api_access_logsMinOrderByAggregateInput\n    _sum?: discussionboard_api_access_logsSumOrderByAggregateInput\n  }\n\n  export type discussionboard_api_access_logsScalarWhereWithAggregatesInput = {\n    AND?: discussionboard_api_access_logsScalarWhereWithAggregatesInput | discussionboard_api_access_logsScalarWhereWithAggregatesInput[]\n    OR?: discussionboard_api_access_logsScalarWhereWithAggregatesInput[]\n    NOT?: discussionboard_api_access_logsScalarWhereWithAggregatesInput | discussionboard_api_access_logsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"discussionboard_api_access_logs\"> | string\n    actor_id?: UuidNullableWithAggregatesFilter<\"discussionboard_api_access_logs\"> | string | null\n    method?: StringWithAggregatesFilter<\"discussionboard_api_access_logs\"> | string\n    endpoint?: StringWithAggregatesFilter<\"discussionboard_api_access_logs\"> | string\n    status_code?: IntWithAggregatesFilter<\"discussionboard_api_access_logs\"> | number\n    ip_address?: StringWithAggregatesFilter<\"discussionboard_api_access_logs\"> | string\n    user_agent?: StringNullableWithAggregatesFilter<\"discussionboard_api_access_logs\"> | string | null\n    response_time_ms?: IntWithAggregatesFilter<\"discussionboard_api_access_logs\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"discussionboard_api_access_logs\"> | Date | string\n  }\n\n  export type discussionboard_sectionsCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    sort_order: number\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_boards?: discussionboard_boardsCreateNestedManyWithoutFk_discussionboard_boards_sectionInput\n  }\n\n  export type discussionboard_sectionsUncheckedCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    sort_order: number\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_boards?: discussionboard_boardsUncheckedCreateNestedManyWithoutFk_discussionboard_boards_sectionInput\n  }\n\n  export type discussionboard_sectionsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    sort_order?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_boards?: discussionboard_boardsUpdateManyWithoutFk_discussionboard_boards_sectionNestedInput\n  }\n\n  export type discussionboard_sectionsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    sort_order?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_boards?: discussionboard_boardsUncheckedUpdateManyWithoutFk_discussionboard_boards_sectionNestedInput\n  }\n\n  export type discussionboard_sectionsCreateManyInput = {\n    id: string\n    name: string\n    description?: string | null\n    sort_order: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_sectionsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    sort_order?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_sectionsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    sort_order?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_boardsCreateInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    fk_discussionboard_boards_section: discussionboard_sectionsCreateNestedOneWithoutDiscussionboard_boardsInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_board_settings?: discussionboard_board_settingsCreateNestedOneWithoutFk_db_board_settings_boardInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsUncheckedCreateInput = {\n    id: string\n    discussionboard_section_id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedCreateNestedOneWithoutFk_db_board_settings_boardInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_discussionboard_boards_section?: discussionboard_sectionsUpdateOneRequiredWithoutDiscussionboard_boardsNestedInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUpdateOneWithoutFk_db_board_settings_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_boardsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedUpdateOneWithoutFk_db_board_settings_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_boardsCreateManyInput = {\n    id: string\n    discussionboard_section_id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_boardsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_boardsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_tagsCreateInput = {\n    id: string\n    tag: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_tagsUncheckedCreateInput = {\n    id: string\n    tag: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_tagsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    tag?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_tagsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    tag?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_tagsCreateManyInput = {\n    id: string\n    tag: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_tagsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    tag?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_tagsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    tag?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsCreateInput = {\n    id: string\n    created_at: Date | string\n    fk_db_board_subs_board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_board_subscriptionsInput\n    fk_db_board_subs_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_board_subscriptionsInput\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedCreateInput = {\n    id: string\n    discussionboard_board_id: string\n    discussionboard_member_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_db_board_subs_board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_board_subscriptionsNestedInput\n    fk_db_board_subs_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_board_subscriptionsNestedInput\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_board_id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsCreateManyInput = {\n    id: string\n    discussionboard_board_id: string\n    discussionboard_member_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_board_id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_settingsCreateInput = {\n    id: string\n    allow_images: boolean\n    require_moderator_approval: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    fk_db_board_settings_board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_board_settingsInput\n  }\n\n  export type discussionboard_board_settingsUncheckedCreateInput = {\n    id: string\n    discussionboard_board_id: string\n    allow_images: boolean\n    require_moderator_approval: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_board_settingsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    allow_images?: BoolFieldUpdateOperationsInput | boolean\n    require_moderator_approval?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_db_board_settings_board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_board_settingsNestedInput\n  }\n\n  export type discussionboard_board_settingsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_board_id?: StringFieldUpdateOperationsInput | string\n    allow_images?: BoolFieldUpdateOperationsInput | boolean\n    require_moderator_approval?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_settingsCreateManyInput = {\n    id: string\n    discussionboard_board_id: string\n    allow_images: boolean\n    require_moderator_approval: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_board_settingsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    allow_images?: BoolFieldUpdateOperationsInput | boolean\n    require_moderator_approval?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_settingsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_board_id?: StringFieldUpdateOperationsInput | string\n    allow_images?: BoolFieldUpdateOperationsInput | boolean\n    require_moderator_approval?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notification_settingsCreateInput = {\n    id: string\n    receive_board_notifications: boolean\n    receive_mention_notifications: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    fk_db_notification_settings_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_notification_settingsInput\n  }\n\n  export type discussionboard_notification_settingsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    receive_board_notifications: boolean\n    receive_mention_notifications: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_notification_settingsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    receive_board_notifications?: BoolFieldUpdateOperationsInput | boolean\n    receive_mention_notifications?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_db_notification_settings_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_notification_settingsNestedInput\n  }\n\n  export type discussionboard_notification_settingsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    receive_board_notifications?: BoolFieldUpdateOperationsInput | boolean\n    receive_mention_notifications?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notification_settingsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    receive_board_notifications: boolean\n    receive_mention_notifications: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_notification_settingsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    receive_board_notifications?: BoolFieldUpdateOperationsInput | boolean\n    receive_mention_notifications?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notification_settingsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    receive_board_notifications?: BoolFieldUpdateOperationsInput | boolean\n    receive_mention_notifications?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminsCreateInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_adminsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_adminsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderatorsCreateInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_moderatorsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_membersCreateInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateManyInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n  }\n\n  export type discussionboard_membersUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_membersUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_guestsCreateInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_guestsUncheckedCreateInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_guestsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_guestsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_guestsCreateManyInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_guestsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_guestsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_profilesCreateInput = {\n    id: string\n    display_name?: string | null\n    bio?: string | null\n    avatar_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_user_profiles_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_profilesInput\n  }\n\n  export type discussionboard_user_profilesUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    display_name?: string | null\n    bio?: string | null\n    avatar_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_user_profilesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_user_profiles_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_profilesNestedInput\n  }\n\n  export type discussionboard_user_profilesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_profilesCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    display_name?: string | null\n    bio?: string | null\n    avatar_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_user_profilesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_profilesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_emailsCreateInput = {\n    id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date | string\n    verified_at?: Date | string | null\n    discussionboard_user_emails_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_emailsInput\n  }\n\n  export type discussionboard_user_emailsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date | string\n    verified_at?: Date | string | null\n  }\n\n  export type discussionboard_user_emailsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_user_emails_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_emailsNestedInput\n  }\n\n  export type discussionboard_user_emailsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_emailsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date | string\n    verified_at?: Date | string | null\n  }\n\n  export type discussionboard_user_emailsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_emailsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_authsCreateInput = {\n    id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_user_auths_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_authsInput\n  }\n\n  export type discussionboard_user_authsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_authsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_user_auths_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_authsNestedInput\n  }\n\n  export type discussionboard_user_authsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_authsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_authsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_authsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsCreateInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n    expires_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_user_sessions_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_sessionsInput\n  }\n\n  export type discussionboard_user_sessionsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    session_token: string\n    created_at: Date | string\n    expires_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_user_sessions_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_sessionsNestedInput\n  }\n\n  export type discussionboard_user_sessionsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    session_token: string\n    created_at: Date | string\n    expires_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_postsCreateInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsCreateManyInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_postsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_postsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_post_editsCreateInput = {\n    id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_editsInput\n    editor: discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_editsInput\n  }\n\n  export type discussionboard_post_editsUncheckedCreateInput = {\n    id: string\n    post_id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_post_editsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_editsNestedInput\n    editor?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_post_editsNestedInput\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_editsCreateManyInput = {\n    id: string\n    post_id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_post_editsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesCreateInput = {\n    id: string\n    is_like: boolean\n    created_at: Date | string\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_likesInput\n    user: discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_likesInput\n  }\n\n  export type discussionboard_post_likesUncheckedCreateInput = {\n    id: string\n    post_id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_likesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_likesNestedInput\n    user?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_post_likesNestedInput\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesCreateManyInput = {\n    id: string\n    post_id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_likesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsCreateInput = {\n    id: string\n    session_id?: string | null\n    viewed_at: Date | string\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_viewsInput\n    user?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_viewsInput\n  }\n\n  export type discussionboard_post_viewsUncheckedCreateInput = {\n    id: string\n    post_id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_post_viewsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_viewsNestedInput\n    user?: discussionboard_membersUpdateOneWithoutDiscussionboard_post_viewsNestedInput\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsCreateManyInput = {\n    id: string\n    post_id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_post_viewsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsCreateInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsCreateManyInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_commentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_comment_likesCreateInput = {\n    id: string\n    is_like: boolean\n    created_at: Date | string\n    comment: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_likesInput\n    user: discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_likesInput\n  }\n\n  export type discussionboard_comment_likesUncheckedCreateInput = {\n    id: string\n    comment_id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_comment_likesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    comment?: discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_likesNestedInput\n    user?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_comment_likesNestedInput\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_likesCreateManyInput = {\n    id: string\n    comment_id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_comment_likesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsCreateInput = {\n    id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n    comment: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_editsInput\n    editor: discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_editsInput\n  }\n\n  export type discussionboard_comment_editsUncheckedCreateInput = {\n    id: string\n    comment_id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_comment_editsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    comment?: discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_editsNestedInput\n    editor?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_comment_editsNestedInput\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsCreateManyInput = {\n    id: string\n    comment_id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_comment_editsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsCreateInput = {\n    id: string\n    session_id?: string | null\n    viewed_at: Date | string\n    comment: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_viewsInput\n    user?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_viewsInput\n  }\n\n  export type discussionboard_comment_viewsUncheckedCreateInput = {\n    id: string\n    comment_id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_comment_viewsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    comment?: discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_viewsNestedInput\n    user?: discussionboard_membersUpdateOneWithoutDiscussionboard_comment_viewsNestedInput\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsCreateManyInput = {\n    id: string\n    comment_id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_comment_viewsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_reportsCreateInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_reporting_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_reporting_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsCreateManyInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n  }\n\n  export type discussionboard_reportsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_moderation_actionsCreateInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsCreateManyInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansCreateInput = {\n    id: string\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    fk_bans_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_target_admin_idInput\n    fk_bans_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_target_moderator_idInput\n    fk_bans_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_bansInput\n    fk_bans_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_actor_admin_idInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_actor_moderator_idInput\n  }\n\n  export type discussionboard_bansUncheckedCreateInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_bans_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_target_admin_idNestedInput\n    fk_bans_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_target_moderator_idNestedInput\n    fk_bans_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_bansNestedInput\n    fk_bans_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_actor_admin_idNestedInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_actor_moderator_idNestedInput\n  }\n\n  export type discussionboard_bansUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansCreateManyInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsCreateInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    fk_warnings_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput\n    fk_warnings_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    fk_warnings_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput\n    fk_warnings_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput\n    fk_warnings_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput\n    fk_warnings_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsCreateManyInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsCreateInput = {\n    id: string\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsCreateManyInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_community_guidelinesCreateInput = {\n    id: string\n    title: string\n    body: string\n    order_index: number\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_community_guidelinesUncheckedCreateInput = {\n    id: string\n    title: string\n    body: string\n    order_index: number\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_community_guidelinesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    order_index?: IntFieldUpdateOperationsInput | number\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_community_guidelinesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    order_index?: IntFieldUpdateOperationsInput | number\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_community_guidelinesCreateManyInput = {\n    id: string\n    title: string\n    body: string\n    order_index: number\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_community_guidelinesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    order_index?: IntFieldUpdateOperationsInput | number\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_community_guidelinesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    order_index?: IntFieldUpdateOperationsInput | number\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_content_policiesCreateInput = {\n    id: string\n    policy_code: string\n    description: string\n    category: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_content_policiesUncheckedCreateInput = {\n    id: string\n    policy_code: string\n    description: string\n    category: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_content_policiesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    policy_code?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_content_policiesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    policy_code?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_content_policiesCreateManyInput = {\n    id: string\n    policy_code: string\n    description: string\n    category: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_content_policiesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    policy_code?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_content_policiesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    policy_code?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    category?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_profanity_filtersCreateInput = {\n    id: string\n    word: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_profanity_filtersUncheckedCreateInput = {\n    id: string\n    word: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_profanity_filtersUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    word?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_profanity_filtersUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    word?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_profanity_filtersCreateManyInput = {\n    id: string\n    word: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_profanity_filtersUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    word?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_profanity_filtersUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    word?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesCreateInput = {\n    id: string\n    rule_pattern: string\n    description: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesUncheckedCreateInput = {\n    id: string\n    rule_pattern: string\n    description: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    rule_pattern?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    rule_pattern?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesCreateManyInput = {\n    id: string\n    rule_pattern: string\n    description: string\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    rule_pattern?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_automated_spam_rulesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    rule_pattern?: StringFieldUpdateOperationsInput | string\n    description?: StringFieldUpdateOperationsInput | string\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationsCreateInput = {\n    id: string\n    type: string\n    related_entity_id?: string | null\n    related_entity_type?: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date | string\n    expires_at?: Date | string | null\n    discussionboard_notifications_recipient: discussionboard_membersCreateNestedOneWithoutDiscussionboard_notificationsInput\n  }\n\n  export type discussionboard_notificationsUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    type: string\n    related_entity_id?: string | null\n    related_entity_type?: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_notificationsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_notifications_recipient?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_notificationsNestedInput\n  }\n\n  export type discussionboard_notificationsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_notificationsCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    type: string\n    related_entity_id?: string | null\n    related_entity_type?: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_notificationsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_notificationsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_alert_preferencesCreateInput = {\n    id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date | string\n    discussionboard_alert_preferences_owner: discussionboard_membersCreateNestedOneWithoutDiscussionboard_alert_preferencesInput\n  }\n\n  export type discussionboard_alert_preferencesUncheckedCreateInput = {\n    id: string\n    discussionboard_member_id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_alert_preferencesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_alert_preferences_owner?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_alert_preferencesNestedInput\n  }\n\n  export type discussionboard_alert_preferencesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_alert_preferencesCreateManyInput = {\n    id: string\n    discussionboard_member_id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_alert_preferencesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_alert_preferencesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_action_logsCreateInput = {\n    id: string\n    event_type: string\n    event_target_id?: string | null\n    metadata?: string | null\n    created_at: Date | string\n    fk_action_log_actor: discussionboard_membersCreateNestedOneWithoutDiscussionboard_action_logsInput\n  }\n\n  export type discussionboard_action_logsUncheckedCreateInput = {\n    id: string\n    actor_id: string\n    event_type: string\n    event_target_id?: string | null\n    metadata?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_action_logsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_action_log_actor?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_action_logsNestedInput\n  }\n\n  export type discussionboard_action_logsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_action_logsCreateManyInput = {\n    id: string\n    actor_id: string\n    event_type: string\n    event_target_id?: string | null\n    metadata?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_action_logsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_action_logsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_error_logsCreateInput = {\n    id: string\n    error_code: string\n    error_message: string\n    stack_trace?: string | null\n    context_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_error_logsUncheckedCreateInput = {\n    id: string\n    error_code: string\n    error_message: string\n    stack_trace?: string | null\n    context_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_error_logsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    error_code?: StringFieldUpdateOperationsInput | string\n    error_message?: StringFieldUpdateOperationsInput | string\n    stack_trace?: NullableStringFieldUpdateOperationsInput | string | null\n    context_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_error_logsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    error_code?: StringFieldUpdateOperationsInput | string\n    error_message?: StringFieldUpdateOperationsInput | string\n    stack_trace?: NullableStringFieldUpdateOperationsInput | string | null\n    context_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_error_logsCreateManyInput = {\n    id: string\n    error_code: string\n    error_message: string\n    stack_trace?: string | null\n    context_id?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_error_logsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    error_code?: StringFieldUpdateOperationsInput | string\n    error_message?: StringFieldUpdateOperationsInput | string\n    stack_trace?: NullableStringFieldUpdateOperationsInput | string | null\n    context_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_error_logsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    error_code?: StringFieldUpdateOperationsInput | string\n    error_message?: StringFieldUpdateOperationsInput | string\n    stack_trace?: NullableStringFieldUpdateOperationsInput | string | null\n    context_id?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_api_access_logsCreateInput = {\n    id: string\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent?: string | null\n    response_time_ms: number\n    created_at: Date | string\n    fk_access_log_actor?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_api_access_logsInput\n  }\n\n  export type discussionboard_api_access_logsUncheckedCreateInput = {\n    id: string\n    actor_id?: string | null\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent?: string | null\n    response_time_ms: number\n    created_at: Date | string\n  }\n\n  export type discussionboard_api_access_logsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_access_log_actor?: discussionboard_membersUpdateOneWithoutDiscussionboard_api_access_logsNestedInput\n  }\n\n  export type discussionboard_api_access_logsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: NullableStringFieldUpdateOperationsInput | string | null\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_api_access_logsCreateManyInput = {\n    id: string\n    actor_id?: string | null\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent?: string | null\n    response_time_ms: number\n    created_at: Date | string\n  }\n\n  export type discussionboard_api_access_logsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_api_access_logsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_id?: NullableStringFieldUpdateOperationsInput | string | null\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type IntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type Discussionboard_boardsListRelationFilter = {\n    every?: discussionboard_boardsWhereInput\n    some?: discussionboard_boardsWhereInput\n    none?: discussionboard_boardsWhereInput\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type discussionboard_boardsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_sectionsCountOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    sort_order?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_sectionsAvgOrderByAggregateInput = {\n    sort_order?: SortOrder\n  }\n\n  export type discussionboard_sectionsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    sort_order?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_sectionsMinOrderByAggregateInput = {\n    id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    sort_order?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_sectionsSumOrderByAggregateInput = {\n    sort_order?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type IntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type BoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type Discussionboard_sectionsScalarRelationFilter = {\n    is?: discussionboard_sectionsWhereInput\n    isNot?: discussionboard_sectionsWhereInput\n  }\n\n  export type Discussionboard_board_subscriptionsListRelationFilter = {\n    every?: discussionboard_board_subscriptionsWhereInput\n    some?: discussionboard_board_subscriptionsWhereInput\n    none?: discussionboard_board_subscriptionsWhereInput\n  }\n\n  export type Discussionboard_board_settingsNullableScalarRelationFilter = {\n    is?: discussionboard_board_settingsWhereInput | null\n    isNot?: discussionboard_board_settingsWhereInput | null\n  }\n\n  export type Discussionboard_postsListRelationFilter = {\n    every?: discussionboard_postsWhereInput\n    some?: discussionboard_postsWhereInput\n    none?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_board_subscriptionsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_postsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_boardsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    rules?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_boardsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    rules?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_boardsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_section_id?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    rules?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type BoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type discussionboard_tagsCountOrderByAggregateInput = {\n    id?: SortOrder\n    tag?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_tagsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    tag?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_tagsMinOrderByAggregateInput = {\n    id?: SortOrder\n    tag?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type Discussionboard_boardsScalarRelationFilter = {\n    is?: discussionboard_boardsWhereInput\n    isNot?: discussionboard_boardsWhereInput\n  }\n\n  export type Discussionboard_membersScalarRelationFilter = {\n    is?: discussionboard_membersWhereInput\n    isNot?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_board_subscriptionsDiscussionboard_board_idDiscussionboard_member_idCompoundUniqueInput = {\n    discussionboard_board_id: string\n    discussionboard_member_id: string\n  }\n\n  export type discussionboard_board_subscriptionsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_board_subscriptionsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_board_subscriptionsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_board_settingsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    allow_images?: SortOrder\n    require_moderator_approval?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_board_settingsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    allow_images?: SortOrder\n    require_moderator_approval?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_board_settingsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_board_id?: SortOrder\n    allow_images?: SortOrder\n    require_moderator_approval?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_notification_settingsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    receive_board_notifications?: SortOrder\n    receive_mention_notifications?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_notification_settingsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    receive_board_notifications?: SortOrder\n    receive_mention_notifications?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_notification_settingsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    receive_board_notifications?: SortOrder\n    receive_mention_notifications?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Discussionboard_moderation_actionsListRelationFilter = {\n    every?: discussionboard_moderation_actionsWhereInput\n    some?: discussionboard_moderation_actionsWhereInput\n    none?: discussionboard_moderation_actionsWhereInput\n  }\n\n  export type Discussionboard_bansListRelationFilter = {\n    every?: discussionboard_bansWhereInput\n    some?: discussionboard_bansWhereInput\n    none?: discussionboard_bansWhereInput\n  }\n\n  export type Discussionboard_warningsListRelationFilter = {\n    every?: discussionboard_warningsWhereInput\n    some?: discussionboard_warningsWhereInput\n    none?: discussionboard_warningsWhereInput\n  }\n\n  export type Discussionboard_audit_logsListRelationFilter = {\n    every?: discussionboard_audit_logsWhereInput\n    some?: discussionboard_audit_logsWhereInput\n    none?: discussionboard_audit_logsWhereInput\n  }\n\n  export type discussionboard_moderation_actionsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_bansOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_warningsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_audit_logsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_adminsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_adminsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_adminsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type discussionboard_moderatorsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_moderatorsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_moderatorsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    granted_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type Discussionboard_notification_settingsNullableScalarRelationFilter = {\n    is?: discussionboard_notification_settingsWhereInput | null\n    isNot?: discussionboard_notification_settingsWhereInput | null\n  }\n\n  export type Discussionboard_adminsNullableScalarRelationFilter = {\n    is?: discussionboard_adminsWhereInput | null\n    isNot?: discussionboard_adminsWhereInput | null\n  }\n\n  export type Discussionboard_moderatorsNullableScalarRelationFilter = {\n    is?: discussionboard_moderatorsWhereInput | null\n    isNot?: discussionboard_moderatorsWhereInput | null\n  }\n\n  export type Discussionboard_user_profilesNullableScalarRelationFilter = {\n    is?: discussionboard_user_profilesWhereInput | null\n    isNot?: discussionboard_user_profilesWhereInput | null\n  }\n\n  export type Discussionboard_user_emailsListRelationFilter = {\n    every?: discussionboard_user_emailsWhereInput\n    some?: discussionboard_user_emailsWhereInput\n    none?: discussionboard_user_emailsWhereInput\n  }\n\n  export type Discussionboard_user_authsListRelationFilter = {\n    every?: discussionboard_user_authsWhereInput\n    some?: discussionboard_user_authsWhereInput\n    none?: discussionboard_user_authsWhereInput\n  }\n\n  export type Discussionboard_user_sessionsListRelationFilter = {\n    every?: discussionboard_user_sessionsWhereInput\n    some?: discussionboard_user_sessionsWhereInput\n    none?: discussionboard_user_sessionsWhereInput\n  }\n\n  export type Discussionboard_post_editsListRelationFilter = {\n    every?: discussionboard_post_editsWhereInput\n    some?: discussionboard_post_editsWhereInput\n    none?: discussionboard_post_editsWhereInput\n  }\n\n  export type Discussionboard_post_likesListRelationFilter = {\n    every?: discussionboard_post_likesWhereInput\n    some?: discussionboard_post_likesWhereInput\n    none?: discussionboard_post_likesWhereInput\n  }\n\n  export type Discussionboard_post_viewsListRelationFilter = {\n    every?: discussionboard_post_viewsWhereInput\n    some?: discussionboard_post_viewsWhereInput\n    none?: discussionboard_post_viewsWhereInput\n  }\n\n  export type Discussionboard_commentsListRelationFilter = {\n    every?: discussionboard_commentsWhereInput\n    some?: discussionboard_commentsWhereInput\n    none?: discussionboard_commentsWhereInput\n  }\n\n  export type Discussionboard_comment_likesListRelationFilter = {\n    every?: discussionboard_comment_likesWhereInput\n    some?: discussionboard_comment_likesWhereInput\n    none?: discussionboard_comment_likesWhereInput\n  }\n\n  export type Discussionboard_comment_editsListRelationFilter = {\n    every?: discussionboard_comment_editsWhereInput\n    some?: discussionboard_comment_editsWhereInput\n    none?: discussionboard_comment_editsWhereInput\n  }\n\n  export type Discussionboard_comment_viewsListRelationFilter = {\n    every?: discussionboard_comment_viewsWhereInput\n    some?: discussionboard_comment_viewsWhereInput\n    none?: discussionboard_comment_viewsWhereInput\n  }\n\n  export type Discussionboard_reportsListRelationFilter = {\n    every?: discussionboard_reportsWhereInput\n    some?: discussionboard_reportsWhereInput\n    none?: discussionboard_reportsWhereInput\n  }\n\n  export type Discussionboard_notificationsListRelationFilter = {\n    every?: discussionboard_notificationsWhereInput\n    some?: discussionboard_notificationsWhereInput\n    none?: discussionboard_notificationsWhereInput\n  }\n\n  export type Discussionboard_alert_preferencesListRelationFilter = {\n    every?: discussionboard_alert_preferencesWhereInput\n    some?: discussionboard_alert_preferencesWhereInput\n    none?: discussionboard_alert_preferencesWhereInput\n  }\n\n  export type Discussionboard_action_logsListRelationFilter = {\n    every?: discussionboard_action_logsWhereInput\n    some?: discussionboard_action_logsWhereInput\n    none?: discussionboard_action_logsWhereInput\n  }\n\n  export type Discussionboard_api_access_logsListRelationFilter = {\n    every?: discussionboard_api_access_logsWhereInput\n    some?: discussionboard_api_access_logsWhereInput\n    none?: discussionboard_api_access_logsWhereInput\n  }\n\n  export type discussionboard_user_emailsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_user_authsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_user_sessionsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_post_editsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_post_likesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_post_viewsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_commentsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_comment_likesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_comment_editsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_comment_viewsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_reportsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_notificationsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_alert_preferencesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_action_logsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_api_access_logsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type discussionboard_membersCountOrderByAggregateInput = {\n    id?: SortOrder\n    username?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    activated_at?: SortOrder\n    deactivated_at?: SortOrder\n  }\n\n  export type discussionboard_membersMaxOrderByAggregateInput = {\n    id?: SortOrder\n    username?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    activated_at?: SortOrder\n    deactivated_at?: SortOrder\n  }\n\n  export type discussionboard_membersMinOrderByAggregateInput = {\n    id?: SortOrder\n    username?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    activated_at?: SortOrder\n    deactivated_at?: SortOrder\n  }\n\n  export type discussionboard_guestsCountOrderByAggregateInput = {\n    id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_guestsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_guestsMinOrderByAggregateInput = {\n    id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_user_profilesCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    display_name?: SortOrder\n    bio?: SortOrder\n    avatar_url?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_user_profilesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    display_name?: SortOrder\n    bio?: SortOrder\n    avatar_url?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_user_profilesMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    display_name?: SortOrder\n    bio?: SortOrder\n    avatar_url?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_user_emailsDiscussionboard_member_idEmailCompoundUniqueInput = {\n    discussionboard_member_id: string\n    email: string\n  }\n\n  export type discussionboard_user_emailsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    email?: SortOrder\n    is_verified?: SortOrder\n    is_primary?: SortOrder\n    added_at?: SortOrder\n    verified_at?: SortOrder\n  }\n\n  export type discussionboard_user_emailsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    email?: SortOrder\n    is_verified?: SortOrder\n    is_primary?: SortOrder\n    added_at?: SortOrder\n    verified_at?: SortOrder\n  }\n\n  export type discussionboard_user_emailsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    email?: SortOrder\n    is_verified?: SortOrder\n    is_primary?: SortOrder\n    added_at?: SortOrder\n    verified_at?: SortOrder\n  }\n\n  export type discussionboard_user_authsProviderProvider_user_idCompoundUniqueInput = {\n    provider: string\n    provider_user_id: string\n  }\n\n  export type discussionboard_user_authsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    provider?: SortOrder\n    provider_user_id?: SortOrder\n    linked_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_user_authsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    provider?: SortOrder\n    provider_user_id?: SortOrder\n    linked_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_user_authsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    provider?: SortOrder\n    provider_user_id?: SortOrder\n    linked_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_user_sessionsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_user_sessionsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_user_sessionsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    session_token?: SortOrder\n    created_at?: SortOrder\n    expires_at?: SortOrder\n    revoked_at?: SortOrder\n  }\n\n  export type discussionboard_postsBoard_idIdCompoundUniqueInput = {\n    board_id: string\n    id: string\n  }\n\n  export type discussionboard_postsCountOrderByAggregateInput = {\n    id?: SortOrder\n    board_id?: SortOrder\n    author_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_postsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    board_id?: SortOrder\n    author_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_postsMinOrderByAggregateInput = {\n    id?: SortOrder\n    board_id?: SortOrder\n    author_id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Discussionboard_postsScalarRelationFilter = {\n    is?: discussionboard_postsWhereInput\n    isNot?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_post_editsCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrder\n    edited_at?: SortOrder\n  }\n\n  export type discussionboard_post_editsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrder\n    edited_at?: SortOrder\n  }\n\n  export type discussionboard_post_editsMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrder\n    edited_at?: SortOrder\n  }\n\n  export type discussionboard_post_likesPost_idUser_idCompoundUniqueInput = {\n    post_id: string\n    user_id: string\n  }\n\n  export type discussionboard_post_likesCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_post_likesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_post_likesMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type UuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Discussionboard_membersNullableScalarRelationFilter = {\n    is?: discussionboard_membersWhereInput | null\n    isNot?: discussionboard_membersWhereInput | null\n  }\n\n  export type discussionboard_post_viewsCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    session_id?: SortOrder\n    viewed_at?: SortOrder\n  }\n\n  export type discussionboard_post_viewsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    session_id?: SortOrder\n    viewed_at?: SortOrder\n  }\n\n  export type discussionboard_post_viewsMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    user_id?: SortOrder\n    session_id?: SortOrder\n    viewed_at?: SortOrder\n  }\n\n  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Discussionboard_commentsNullableScalarRelationFilter = {\n    is?: discussionboard_commentsWhereInput | null\n    isNot?: discussionboard_commentsWhereInput | null\n  }\n\n  export type discussionboard_commentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_commentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type discussionboard_commentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    post_id?: SortOrder\n    author_id?: SortOrder\n    parent_id?: SortOrder\n    body?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Discussionboard_commentsScalarRelationFilter = {\n    is?: discussionboard_commentsWhereInput\n    isNot?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_comment_likesComment_idUser_idCompoundUniqueInput = {\n    comment_id: string\n    user_id: string\n  }\n\n  export type discussionboard_comment_likesCountOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_comment_likesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_comment_likesMinOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    is_like?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_comment_editsCountOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrder\n    edited_at?: SortOrder\n  }\n\n  export type discussionboard_comment_editsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrder\n    edited_at?: SortOrder\n  }\n\n  export type discussionboard_comment_editsMinOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    editor_id?: SortOrder\n    edit_summary?: SortOrder\n    edited_at?: SortOrder\n  }\n\n  export type discussionboard_comment_viewsCountOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    session_id?: SortOrder\n    viewed_at?: SortOrder\n  }\n\n  export type discussionboard_comment_viewsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    session_id?: SortOrder\n    viewed_at?: SortOrder\n  }\n\n  export type discussionboard_comment_viewsMinOrderByAggregateInput = {\n    id?: SortOrder\n    comment_id?: SortOrder\n    user_id?: SortOrder\n    session_id?: SortOrder\n    viewed_at?: SortOrder\n  }\n\n  export type Discussionboard_postsNullableScalarRelationFilter = {\n    is?: discussionboard_postsWhereInput | null\n    isNot?: discussionboard_postsWhereInput | null\n  }\n\n  export type discussionboard_reportsReporting_member_idTarget_post_idCompoundUniqueInput = {\n    reporting_member_id: string\n    target_post_id: string\n  }\n\n  export type discussionboard_reportsReporting_member_idTarget_comment_idCompoundUniqueInput = {\n    reporting_member_id: string\n    target_comment_id: string\n  }\n\n  export type discussionboard_reportsCountOrderByAggregateInput = {\n    id?: SortOrder\n    reporting_member_id?: SortOrder\n    target_post_id?: SortOrder\n    target_comment_id?: SortOrder\n    reason?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    reviewed_at?: SortOrder\n    resolved_at?: SortOrder\n    moderation_note?: SortOrder\n  }\n\n  export type discussionboard_reportsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    reporting_member_id?: SortOrder\n    target_post_id?: SortOrder\n    target_comment_id?: SortOrder\n    reason?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    reviewed_at?: SortOrder\n    resolved_at?: SortOrder\n    moderation_note?: SortOrder\n  }\n\n  export type discussionboard_reportsMinOrderByAggregateInput = {\n    id?: SortOrder\n    reporting_member_id?: SortOrder\n    target_post_id?: SortOrder\n    target_comment_id?: SortOrder\n    reason?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    reviewed_at?: SortOrder\n    resolved_at?: SortOrder\n    moderation_note?: SortOrder\n  }\n\n  export type Discussionboard_reportsNullableScalarRelationFilter = {\n    is?: discussionboard_reportsWhereInput | null\n    isNot?: discussionboard_reportsWhereInput | null\n  }\n\n  export type discussionboard_moderation_actionsCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    actor_member_id?: SortOrder\n    related_report_id?: SortOrder\n    target_post_id?: SortOrder\n    target_comment_id?: SortOrder\n    action_type?: SortOrder\n    action_reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_moderation_actionsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    actor_member_id?: SortOrder\n    related_report_id?: SortOrder\n    target_post_id?: SortOrder\n    target_comment_id?: SortOrder\n    action_type?: SortOrder\n    action_reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_moderation_actionsMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    actor_member_id?: SortOrder\n    related_report_id?: SortOrder\n    target_post_id?: SortOrder\n    target_comment_id?: SortOrder\n    action_type?: SortOrder\n    action_reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_bansCountOrderByAggregateInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrder\n    target_moderator_id?: SortOrder\n    target_member_id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    ban_reason?: SortOrder\n    ban_start_at?: SortOrder\n    ban_end_at?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_bansMaxOrderByAggregateInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrder\n    target_moderator_id?: SortOrder\n    target_member_id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    ban_reason?: SortOrder\n    ban_start_at?: SortOrder\n    ban_end_at?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_bansMinOrderByAggregateInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrder\n    target_moderator_id?: SortOrder\n    target_member_id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    ban_reason?: SortOrder\n    ban_start_at?: SortOrder\n    ban_end_at?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_warningsCountOrderByAggregateInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrder\n    target_moderator_id?: SortOrder\n    target_member_id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    related_report_id?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_warningsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrder\n    target_moderator_id?: SortOrder\n    target_member_id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    related_report_id?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_warningsMinOrderByAggregateInput = {\n    id?: SortOrder\n    target_admin_id?: SortOrder\n    target_moderator_id?: SortOrder\n    target_member_id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    related_report_id?: SortOrder\n    reason?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type Discussionboard_moderation_actionsNullableScalarRelationFilter = {\n    is?: discussionboard_moderation_actionsWhereInput | null\n    isNot?: discussionboard_moderation_actionsWhereInput | null\n  }\n\n  export type discussionboard_audit_logsCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    actor_member_id?: SortOrder\n    related_report_id?: SortOrder\n    related_moderation_action_id?: SortOrder\n    event_type?: SortOrder\n    event_detail?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_audit_logsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    actor_member_id?: SortOrder\n    related_report_id?: SortOrder\n    related_moderation_action_id?: SortOrder\n    event_type?: SortOrder\n    event_detail?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_audit_logsMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_admin_id?: SortOrder\n    actor_moderator_id?: SortOrder\n    actor_member_id?: SortOrder\n    related_report_id?: SortOrder\n    related_moderation_action_id?: SortOrder\n    event_type?: SortOrder\n    event_detail?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_community_guidelinesCountOrderByAggregateInput = {\n    id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    order_index?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_community_guidelinesAvgOrderByAggregateInput = {\n    order_index?: SortOrder\n  }\n\n  export type discussionboard_community_guidelinesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    order_index?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_community_guidelinesMinOrderByAggregateInput = {\n    id?: SortOrder\n    title?: SortOrder\n    body?: SortOrder\n    order_index?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_community_guidelinesSumOrderByAggregateInput = {\n    order_index?: SortOrder\n  }\n\n  export type discussionboard_content_policiesCountOrderByAggregateInput = {\n    id?: SortOrder\n    policy_code?: SortOrder\n    description?: SortOrder\n    category?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_content_policiesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    policy_code?: SortOrder\n    description?: SortOrder\n    category?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_content_policiesMinOrderByAggregateInput = {\n    id?: SortOrder\n    policy_code?: SortOrder\n    description?: SortOrder\n    category?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_profanity_filtersCountOrderByAggregateInput = {\n    id?: SortOrder\n    word?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_profanity_filtersMaxOrderByAggregateInput = {\n    id?: SortOrder\n    word?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_profanity_filtersMinOrderByAggregateInput = {\n    id?: SortOrder\n    word?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_automated_spam_rulesCountOrderByAggregateInput = {\n    id?: SortOrder\n    rule_pattern?: SortOrder\n    description?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_automated_spam_rulesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    rule_pattern?: SortOrder\n    description?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_automated_spam_rulesMinOrderByAggregateInput = {\n    id?: SortOrder\n    rule_pattern?: SortOrder\n    description?: SortOrder\n    is_active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_notificationsCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    type?: SortOrder\n    related_entity_id?: SortOrder\n    related_entity_type?: SortOrder\n    content?: SortOrder\n    is_read?: SortOrder\n    delivered_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussionboard_notificationsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    type?: SortOrder\n    related_entity_id?: SortOrder\n    related_entity_type?: SortOrder\n    content?: SortOrder\n    is_read?: SortOrder\n    delivered_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussionboard_notificationsMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    type?: SortOrder\n    related_entity_id?: SortOrder\n    related_entity_type?: SortOrder\n    content?: SortOrder\n    is_read?: SortOrder\n    delivered_at?: SortOrder\n    expires_at?: SortOrder\n  }\n\n  export type discussionboard_alert_preferencesDiscussionboard_member_idNotification_typeCompoundUniqueInput = {\n    discussionboard_member_id: string\n    notification_type: string\n  }\n\n  export type discussionboard_alert_preferencesCountOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    notification_type?: SortOrder\n    delivery_channel?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_alert_preferencesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    notification_type?: SortOrder\n    delivery_channel?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_alert_preferencesMinOrderByAggregateInput = {\n    id?: SortOrder\n    discussionboard_member_id?: SortOrder\n    notification_type?: SortOrder\n    delivery_channel?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type discussionboard_action_logsCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    event_type?: SortOrder\n    event_target_id?: SortOrder\n    metadata?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_action_logsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    event_type?: SortOrder\n    event_target_id?: SortOrder\n    metadata?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_action_logsMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    event_type?: SortOrder\n    event_target_id?: SortOrder\n    metadata?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_error_logsCountOrderByAggregateInput = {\n    id?: SortOrder\n    error_code?: SortOrder\n    error_message?: SortOrder\n    stack_trace?: SortOrder\n    context_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_error_logsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    error_code?: SortOrder\n    error_message?: SortOrder\n    stack_trace?: SortOrder\n    context_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_error_logsMinOrderByAggregateInput = {\n    id?: SortOrder\n    error_code?: SortOrder\n    error_message?: SortOrder\n    stack_trace?: SortOrder\n    context_id?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_api_access_logsCountOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    method?: SortOrder\n    endpoint?: SortOrder\n    status_code?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrder\n    response_time_ms?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_api_access_logsAvgOrderByAggregateInput = {\n    status_code?: SortOrder\n    response_time_ms?: SortOrder\n  }\n\n  export type discussionboard_api_access_logsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    method?: SortOrder\n    endpoint?: SortOrder\n    status_code?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrder\n    response_time_ms?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_api_access_logsMinOrderByAggregateInput = {\n    id?: SortOrder\n    actor_id?: SortOrder\n    method?: SortOrder\n    endpoint?: SortOrder\n    status_code?: SortOrder\n    ip_address?: SortOrder\n    user_agent?: SortOrder\n    response_time_ms?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type discussionboard_api_access_logsSumOrderByAggregateInput = {\n    status_code?: SortOrder\n    response_time_ms?: SortOrder\n  }\n\n  export type discussionboard_boardsCreateNestedManyWithoutFk_discussionboard_boards_sectionInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput> | discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput[] | discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput[]\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput[]\n    createMany?: discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInputEnvelope\n    connect?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n  }\n\n  export type discussionboard_boardsUncheckedCreateNestedManyWithoutFk_discussionboard_boards_sectionInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput> | discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput[] | discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput[]\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput[]\n    createMany?: discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInputEnvelope\n    connect?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type IntFieldUpdateOperationsInput = {\n    set?: number\n    increment?: number\n    decrement?: number\n    multiply?: number\n    divide?: number\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type discussionboard_boardsUpdateManyWithoutFk_discussionboard_boards_sectionNestedInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput> | discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput[] | discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput[]\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput[]\n    upsert?: discussionboard_boardsUpsertWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsUpsertWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput[]\n    createMany?: discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInputEnvelope\n    set?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    disconnect?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    delete?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    connect?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    update?: discussionboard_boardsUpdateWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsUpdateWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput[]\n    updateMany?: discussionboard_boardsUpdateManyWithWhereWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsUpdateManyWithWhereWithoutFk_discussionboard_boards_sectionInput[]\n    deleteMany?: discussionboard_boardsScalarWhereInput | discussionboard_boardsScalarWhereInput[]\n  }\n\n  export type discussionboard_boardsUncheckedUpdateManyWithoutFk_discussionboard_boards_sectionNestedInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput> | discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput[] | discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput[]\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput[]\n    upsert?: discussionboard_boardsUpsertWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsUpsertWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput[]\n    createMany?: discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInputEnvelope\n    set?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    disconnect?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    delete?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    connect?: discussionboard_boardsWhereUniqueInput | discussionboard_boardsWhereUniqueInput[]\n    update?: discussionboard_boardsUpdateWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsUpdateWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput[]\n    updateMany?: discussionboard_boardsUpdateManyWithWhereWithoutFk_discussionboard_boards_sectionInput | discussionboard_boardsUpdateManyWithWhereWithoutFk_discussionboard_boards_sectionInput[]\n    deleteMany?: discussionboard_boardsScalarWhereInput | discussionboard_boardsScalarWhereInput[]\n  }\n\n  export type discussionboard_sectionsCreateNestedOneWithoutDiscussionboard_boardsInput = {\n    create?: XOR<discussionboard_sectionsCreateWithoutDiscussionboard_boardsInput, discussionboard_sectionsUncheckedCreateWithoutDiscussionboard_boardsInput>\n    connectOrCreate?: discussionboard_sectionsCreateOrConnectWithoutDiscussionboard_boardsInput\n    connect?: discussionboard_sectionsWhereUniqueInput\n  }\n\n  export type discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_boardInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInputEnvelope\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_board_settingsCreateNestedOneWithoutFk_db_board_settings_boardInput = {\n    create?: XOR<discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput>\n    connectOrCreate?: discussionboard_board_settingsCreateOrConnectWithoutFk_db_board_settings_boardInput\n    connect?: discussionboard_board_settingsWhereUniqueInput\n  }\n\n  export type discussionboard_postsCreateNestedManyWithoutBoardInput = {\n    create?: XOR<discussionboard_postsCreateWithoutBoardInput, discussionboard_postsUncheckedCreateWithoutBoardInput> | discussionboard_postsCreateWithoutBoardInput[] | discussionboard_postsUncheckedCreateWithoutBoardInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutBoardInput | discussionboard_postsCreateOrConnectWithoutBoardInput[]\n    createMany?: discussionboard_postsCreateManyBoardInputEnvelope\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_boardInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInputEnvelope\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_board_settingsUncheckedCreateNestedOneWithoutFk_db_board_settings_boardInput = {\n    create?: XOR<discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput>\n    connectOrCreate?: discussionboard_board_settingsCreateOrConnectWithoutFk_db_board_settings_boardInput\n    connect?: discussionboard_board_settingsWhereUniqueInput\n  }\n\n  export type discussionboard_postsUncheckedCreateNestedManyWithoutBoardInput = {\n    create?: XOR<discussionboard_postsCreateWithoutBoardInput, discussionboard_postsUncheckedCreateWithoutBoardInput> | discussionboard_postsCreateWithoutBoardInput[] | discussionboard_postsUncheckedCreateWithoutBoardInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutBoardInput | discussionboard_postsCreateOrConnectWithoutBoardInput[]\n    createMany?: discussionboard_postsCreateManyBoardInputEnvelope\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n  }\n\n  export type BoolFieldUpdateOperationsInput = {\n    set?: boolean\n  }\n\n  export type discussionboard_sectionsUpdateOneRequiredWithoutDiscussionboard_boardsNestedInput = {\n    create?: XOR<discussionboard_sectionsCreateWithoutDiscussionboard_boardsInput, discussionboard_sectionsUncheckedCreateWithoutDiscussionboard_boardsInput>\n    connectOrCreate?: discussionboard_sectionsCreateOrConnectWithoutDiscussionboard_boardsInput\n    upsert?: discussionboard_sectionsUpsertWithoutDiscussionboard_boardsInput\n    connect?: discussionboard_sectionsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_sectionsUpdateToOneWithWhereWithoutDiscussionboard_boardsInput, discussionboard_sectionsUpdateWithoutDiscussionboard_boardsInput>, discussionboard_sectionsUncheckedUpdateWithoutDiscussionboard_boardsInput>\n  }\n\n  export type discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_boardNestedInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput[]\n    upsert?: discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_boardInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInputEnvelope\n    set?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    disconnect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    delete?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    update?: discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_boardInput[]\n    updateMany?: discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_boardInput[]\n    deleteMany?: discussionboard_board_subscriptionsScalarWhereInput | discussionboard_board_subscriptionsScalarWhereInput[]\n  }\n\n  export type discussionboard_board_settingsUpdateOneWithoutFk_db_board_settings_boardNestedInput = {\n    create?: XOR<discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput>\n    connectOrCreate?: discussionboard_board_settingsCreateOrConnectWithoutFk_db_board_settings_boardInput\n    upsert?: discussionboard_board_settingsUpsertWithoutFk_db_board_settings_boardInput\n    disconnect?: discussionboard_board_settingsWhereInput | boolean\n    delete?: discussionboard_board_settingsWhereInput | boolean\n    connect?: discussionboard_board_settingsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_board_settingsUpdateToOneWithWhereWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUpdateWithoutFk_db_board_settings_boardInput>, discussionboard_board_settingsUncheckedUpdateWithoutFk_db_board_settings_boardInput>\n  }\n\n  export type discussionboard_postsUpdateManyWithoutBoardNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutBoardInput, discussionboard_postsUncheckedCreateWithoutBoardInput> | discussionboard_postsCreateWithoutBoardInput[] | discussionboard_postsUncheckedCreateWithoutBoardInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutBoardInput | discussionboard_postsCreateOrConnectWithoutBoardInput[]\n    upsert?: discussionboard_postsUpsertWithWhereUniqueWithoutBoardInput | discussionboard_postsUpsertWithWhereUniqueWithoutBoardInput[]\n    createMany?: discussionboard_postsCreateManyBoardInputEnvelope\n    set?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    disconnect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    delete?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    update?: discussionboard_postsUpdateWithWhereUniqueWithoutBoardInput | discussionboard_postsUpdateWithWhereUniqueWithoutBoardInput[]\n    updateMany?: discussionboard_postsUpdateManyWithWhereWithoutBoardInput | discussionboard_postsUpdateManyWithWhereWithoutBoardInput[]\n    deleteMany?: discussionboard_postsScalarWhereInput | discussionboard_postsScalarWhereInput[]\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardNestedInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput[]\n    upsert?: discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_boardInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInputEnvelope\n    set?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    disconnect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    delete?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    update?: discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_boardInput[]\n    updateMany?: discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_boardInput | discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_boardInput[]\n    deleteMany?: discussionboard_board_subscriptionsScalarWhereInput | discussionboard_board_subscriptionsScalarWhereInput[]\n  }\n\n  export type discussionboard_board_settingsUncheckedUpdateOneWithoutFk_db_board_settings_boardNestedInput = {\n    create?: XOR<discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput>\n    connectOrCreate?: discussionboard_board_settingsCreateOrConnectWithoutFk_db_board_settings_boardInput\n    upsert?: discussionboard_board_settingsUpsertWithoutFk_db_board_settings_boardInput\n    disconnect?: discussionboard_board_settingsWhereInput | boolean\n    delete?: discussionboard_board_settingsWhereInput | boolean\n    connect?: discussionboard_board_settingsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_board_settingsUpdateToOneWithWhereWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUpdateWithoutFk_db_board_settings_boardInput>, discussionboard_board_settingsUncheckedUpdateWithoutFk_db_board_settings_boardInput>\n  }\n\n  export type discussionboard_postsUncheckedUpdateManyWithoutBoardNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutBoardInput, discussionboard_postsUncheckedCreateWithoutBoardInput> | discussionboard_postsCreateWithoutBoardInput[] | discussionboard_postsUncheckedCreateWithoutBoardInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutBoardInput | discussionboard_postsCreateOrConnectWithoutBoardInput[]\n    upsert?: discussionboard_postsUpsertWithWhereUniqueWithoutBoardInput | discussionboard_postsUpsertWithWhereUniqueWithoutBoardInput[]\n    createMany?: discussionboard_postsCreateManyBoardInputEnvelope\n    set?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    disconnect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    delete?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    update?: discussionboard_postsUpdateWithWhereUniqueWithoutBoardInput | discussionboard_postsUpdateWithWhereUniqueWithoutBoardInput[]\n    updateMany?: discussionboard_postsUpdateManyWithWhereWithoutBoardInput | discussionboard_postsUpdateManyWithWhereWithoutBoardInput[]\n    deleteMany?: discussionboard_postsScalarWhereInput | discussionboard_postsScalarWhereInput[]\n  }\n\n  export type discussionboard_boardsCreateNestedOneWithoutDiscussionboard_board_subscriptionsInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutDiscussionboard_board_subscriptionsInput\n    connect?: discussionboard_boardsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_board_subscriptionsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_board_subscriptionsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_board_subscriptionsNestedInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutDiscussionboard_board_subscriptionsInput\n    upsert?: discussionboard_boardsUpsertWithoutDiscussionboard_board_subscriptionsInput\n    connect?: discussionboard_boardsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_boardsUpdateToOneWithWhereWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUpdateWithoutDiscussionboard_board_subscriptionsInput>, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_board_subscriptionsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_board_subscriptionsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_board_subscriptionsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUpdateWithoutDiscussionboard_board_subscriptionsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput>\n  }\n\n  export type discussionboard_boardsCreateNestedOneWithoutDiscussionboard_board_settingsInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_settingsInput>\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutDiscussionboard_board_settingsInput\n    connect?: discussionboard_boardsWhereUniqueInput\n  }\n\n  export type discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_board_settingsNestedInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_settingsInput>\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutDiscussionboard_board_settingsInput\n    upsert?: discussionboard_boardsUpsertWithoutDiscussionboard_board_settingsInput\n    connect?: discussionboard_boardsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_boardsUpdateToOneWithWhereWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUpdateWithoutDiscussionboard_board_settingsInput>, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_settingsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_notification_settingsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notification_settingsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_notification_settingsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_notification_settingsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notification_settingsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_notification_settingsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_notification_settingsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUpdateWithoutDiscussionboard_notification_settingsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notification_settingsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_adminsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_adminsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_adminsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput> | discussionboard_bansCreateWithoutFk_bans_target_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_adminInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput> | discussionboard_bansCreateWithoutFk_bans_actor_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_adminInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_target_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_adminInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_adminInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput> | discussionboard_bansCreateWithoutFk_bans_target_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_adminInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput> | discussionboard_bansCreateWithoutFk_bans_actor_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_adminInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_target_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_adminInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_adminInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_adminsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_adminsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_adminsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_adminsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_adminsInput, discussionboard_membersUpdateWithoutDiscussionboard_adminsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_adminsInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_adminInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_adminInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_adminInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput> | discussionboard_bansCreateWithoutFk_bans_target_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_adminInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_adminInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_adminInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_adminInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_adminInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_adminInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput> | discussionboard_bansCreateWithoutFk_bans_actor_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_adminInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_adminInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_adminInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_adminInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_adminInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_adminInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_target_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_adminInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_adminInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_adminInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_adminInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_adminInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_adminInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_adminInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_adminInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_adminInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_adminInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_adminInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_adminInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_adminInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_adminInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_adminInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_adminInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_adminInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_adminInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput> | discussionboard_bansCreateWithoutFk_bans_target_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_adminInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_adminInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_adminInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_adminInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_adminInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_adminInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput> | discussionboard_bansCreateWithoutFk_bans_actor_adminInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_adminInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_adminInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_adminInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_adminInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_adminInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_adminInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_adminInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_target_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_adminInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_adminInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_adminInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_adminInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_adminInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_adminInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_adminInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_adminInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_adminInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_adminInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_adminInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_adminInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_adminInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_adminInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_adminInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_adminInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_adminInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderatorsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderatorsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_moderatorsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_target_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_moderatorInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_moderatorInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_moderatorInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_moderatorInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_target_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_moderatorInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_moderatorInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_moderatorInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_moderatorInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderatorsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderatorsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_moderatorsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_moderatorsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_moderatorsInput, discussionboard_membersUpdateWithoutDiscussionboard_moderatorsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderatorsInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_moderatorInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_target_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_moderatorInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_moderatorInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_moderatorInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_moderatorInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_moderatorInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_moderatorInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_moderatorInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_moderatorInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_moderatorInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_moderatorInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_moderatorInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_moderatorInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_moderatorInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_moderatorInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_moderatorInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_moderatorInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_moderatorInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_moderatorInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_moderatorInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_moderatorInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_moderatorInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_moderatorInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_moderatorInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_target_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_moderatorInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_moderatorInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_moderatorInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_moderatorInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_moderatorInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_moderatorInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput> | discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput | discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_moderatorInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_moderatorInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_actor_moderatorInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_moderatorInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_moderatorInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_moderatorInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_moderatorInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_moderatorInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_moderatorInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_moderatorInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_moderatorInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_moderatorInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_moderatorInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput> | discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_moderatorInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_actor_moderatorInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_moderatorInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_moderatorInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_moderatorInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_moderatorInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInputEnvelope\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput = {\n    create?: XOR<discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput>\n    connectOrCreate?: discussionboard_notification_settingsCreateOrConnectWithoutFk_db_notification_settings_memberInput\n    connect?: discussionboard_notification_settingsWhereUniqueInput\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_admins_memberInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderators_memberInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput = {\n    create?: XOR<discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput>\n    connectOrCreate?: discussionboard_user_profilesCreateOrConnectWithoutDiscussionboard_user_profiles_memberInput\n    connect?: discussionboard_user_profilesWhereUniqueInput\n  }\n\n  export type discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput = {\n    create?: XOR<discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput> | discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput[] | discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput[]\n    connectOrCreate?: discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput[]\n    createMany?: discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInputEnvelope\n    connect?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n  }\n\n  export type discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput = {\n    create?: XOR<discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput> | discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput[] | discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput[]\n    connectOrCreate?: discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput[]\n    createMany?: discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInputEnvelope\n    connect?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n  }\n\n  export type discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput = {\n    create?: XOR<discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput> | discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput[] | discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput[]\n    connectOrCreate?: discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput[]\n    createMany?: discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInputEnvelope\n    connect?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_postsCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<discussionboard_postsCreateWithoutAuthorInput, discussionboard_postsUncheckedCreateWithoutAuthorInput> | discussionboard_postsCreateWithoutAuthorInput[] | discussionboard_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutAuthorInput | discussionboard_postsCreateOrConnectWithoutAuthorInput[]\n    createMany?: discussionboard_postsCreateManyAuthorInputEnvelope\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_editsCreateNestedManyWithoutEditorInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutEditorInput, discussionboard_post_editsUncheckedCreateWithoutEditorInput> | discussionboard_post_editsCreateWithoutEditorInput[] | discussionboard_post_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutEditorInput | discussionboard_post_editsCreateOrConnectWithoutEditorInput[]\n    createMany?: discussionboard_post_editsCreateManyEditorInputEnvelope\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_likesCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutUserInput, discussionboard_post_likesUncheckedCreateWithoutUserInput> | discussionboard_post_likesCreateWithoutUserInput[] | discussionboard_post_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutUserInput | discussionboard_post_likesCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_post_likesCreateManyUserInputEnvelope\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_viewsCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutUserInput, discussionboard_post_viewsUncheckedCreateWithoutUserInput> | discussionboard_post_viewsCreateWithoutUserInput[] | discussionboard_post_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutUserInput | discussionboard_post_viewsCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_post_viewsCreateManyUserInputEnvelope\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_likesCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutUserInput, discussionboard_comment_likesUncheckedCreateWithoutUserInput> | discussionboard_comment_likesCreateWithoutUserInput[] | discussionboard_comment_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutUserInput | discussionboard_comment_likesCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_comment_likesCreateManyUserInputEnvelope\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_editsCreateNestedManyWithoutEditorInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutEditorInput, discussionboard_comment_editsUncheckedCreateWithoutEditorInput> | discussionboard_comment_editsCreateWithoutEditorInput[] | discussionboard_comment_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutEditorInput | discussionboard_comment_editsCreateOrConnectWithoutEditorInput[]\n    createMany?: discussionboard_comment_editsCreateManyEditorInputEnvelope\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_viewsCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutUserInput, discussionboard_comment_viewsUncheckedCreateWithoutUserInput> | discussionboard_comment_viewsCreateWithoutUserInput[] | discussionboard_comment_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutUserInput | discussionboard_comment_viewsCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_comment_viewsCreateManyUserInputEnvelope\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput> | discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_reporting_memberInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput> | discussionboard_bansCreateWithoutFk_bans_target_memberInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_memberInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput> | discussionboard_warningsCreateWithoutFk_warnings_target_memberInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_memberInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput = {\n    create?: XOR<discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput> | discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput[] | discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput[]\n    connectOrCreate?: discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput[]\n    createMany?: discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInputEnvelope\n    connect?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n  }\n\n  export type discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput = {\n    create?: XOR<discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput> | discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput[] | discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput[]\n    connectOrCreate?: discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput[]\n    createMany?: discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInputEnvelope\n    connect?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n  }\n\n  export type discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput = {\n    create?: XOR<discussionboard_action_logsCreateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput> | discussionboard_action_logsCreateWithoutFk_action_log_actorInput[] | discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput[]\n    connectOrCreate?: discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput | discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput[]\n    createMany?: discussionboard_action_logsCreateManyFk_action_log_actorInputEnvelope\n    connect?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput = {\n    create?: XOR<discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput> | discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput[] | discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput[]\n    connectOrCreate?: discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput | discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput[]\n    createMany?: discussionboard_api_access_logsCreateManyFk_access_log_actorInputEnvelope\n    connect?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInputEnvelope\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput = {\n    create?: XOR<discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput>\n    connectOrCreate?: discussionboard_notification_settingsCreateOrConnectWithoutFk_db_notification_settings_memberInput\n    connect?: discussionboard_notification_settingsWhereUniqueInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_admins_memberInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderators_memberInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput = {\n    create?: XOR<discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput>\n    connectOrCreate?: discussionboard_user_profilesCreateOrConnectWithoutDiscussionboard_user_profiles_memberInput\n    connect?: discussionboard_user_profilesWhereUniqueInput\n  }\n\n  export type discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput = {\n    create?: XOR<discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput> | discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput[] | discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput[]\n    connectOrCreate?: discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput[]\n    createMany?: discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInputEnvelope\n    connect?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n  }\n\n  export type discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput = {\n    create?: XOR<discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput> | discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput[] | discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput[]\n    connectOrCreate?: discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput[]\n    createMany?: discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInputEnvelope\n    connect?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n  }\n\n  export type discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput = {\n    create?: XOR<discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput> | discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput[] | discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput[]\n    connectOrCreate?: discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput[]\n    createMany?: discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInputEnvelope\n    connect?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<discussionboard_postsCreateWithoutAuthorInput, discussionboard_postsUncheckedCreateWithoutAuthorInput> | discussionboard_postsCreateWithoutAuthorInput[] | discussionboard_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutAuthorInput | discussionboard_postsCreateOrConnectWithoutAuthorInput[]\n    createMany?: discussionboard_postsCreateManyAuthorInputEnvelope\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutEditorInput, discussionboard_post_editsUncheckedCreateWithoutEditorInput> | discussionboard_post_editsCreateWithoutEditorInput[] | discussionboard_post_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutEditorInput | discussionboard_post_editsCreateOrConnectWithoutEditorInput[]\n    createMany?: discussionboard_post_editsCreateManyEditorInputEnvelope\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutUserInput, discussionboard_post_likesUncheckedCreateWithoutUserInput> | discussionboard_post_likesCreateWithoutUserInput[] | discussionboard_post_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutUserInput | discussionboard_post_likesCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_post_likesCreateManyUserInputEnvelope\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutUserInput, discussionboard_post_viewsUncheckedCreateWithoutUserInput> | discussionboard_post_viewsCreateWithoutUserInput[] | discussionboard_post_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutUserInput | discussionboard_post_viewsCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_post_viewsCreateManyUserInputEnvelope\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutUserInput, discussionboard_comment_likesUncheckedCreateWithoutUserInput> | discussionboard_comment_likesCreateWithoutUserInput[] | discussionboard_comment_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutUserInput | discussionboard_comment_likesCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_comment_likesCreateManyUserInputEnvelope\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutEditorInput, discussionboard_comment_editsUncheckedCreateWithoutEditorInput> | discussionboard_comment_editsCreateWithoutEditorInput[] | discussionboard_comment_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutEditorInput | discussionboard_comment_editsCreateOrConnectWithoutEditorInput[]\n    createMany?: discussionboard_comment_editsCreateManyEditorInputEnvelope\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutUserInput, discussionboard_comment_viewsUncheckedCreateWithoutUserInput> | discussionboard_comment_viewsCreateWithoutUserInput[] | discussionboard_comment_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutUserInput | discussionboard_comment_viewsCreateOrConnectWithoutUserInput[]\n    createMany?: discussionboard_comment_viewsCreateManyUserInputEnvelope\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput> | discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_reporting_memberInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput> | discussionboard_bansCreateWithoutFk_bans_target_memberInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_memberInputEnvelope\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput> | discussionboard_warningsCreateWithoutFk_warnings_target_memberInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_memberInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput = {\n    create?: XOR<discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput> | discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput[] | discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput[]\n    connectOrCreate?: discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput[]\n    createMany?: discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInputEnvelope\n    connect?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n  }\n\n  export type discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput = {\n    create?: XOR<discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput> | discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput[] | discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput[]\n    connectOrCreate?: discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput[]\n    createMany?: discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInputEnvelope\n    connect?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n  }\n\n  export type discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput = {\n    create?: XOR<discussionboard_action_logsCreateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput> | discussionboard_action_logsCreateWithoutFk_action_log_actorInput[] | discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput[]\n    connectOrCreate?: discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput | discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput[]\n    createMany?: discussionboard_action_logsCreateManyFk_action_log_actorInputEnvelope\n    connect?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput = {\n    create?: XOR<discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput> | discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput[] | discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput[]\n    connectOrCreate?: discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput | discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput[]\n    createMany?: discussionboard_api_access_logsCreateManyFk_access_log_actorInputEnvelope\n    connect?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput[]\n    upsert?: discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_memberInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInputEnvelope\n    set?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    disconnect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    delete?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    update?: discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_memberInput[]\n    updateMany?: discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_memberInput[]\n    deleteMany?: discussionboard_board_subscriptionsScalarWhereInput | discussionboard_board_subscriptionsScalarWhereInput[]\n  }\n\n  export type discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput = {\n    create?: XOR<discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput>\n    connectOrCreate?: discussionboard_notification_settingsCreateOrConnectWithoutFk_db_notification_settings_memberInput\n    upsert?: discussionboard_notification_settingsUpsertWithoutFk_db_notification_settings_memberInput\n    disconnect?: discussionboard_notification_settingsWhereInput | boolean\n    delete?: discussionboard_notification_settingsWhereInput | boolean\n    connect?: discussionboard_notification_settingsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_notification_settingsUpdateToOneWithWhereWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUpdateWithoutFk_db_notification_settings_memberInput>, discussionboard_notification_settingsUncheckedUpdateWithoutFk_db_notification_settings_memberInput>\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_admins_memberInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_admins_memberInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUpdateWithoutDiscussionboard_admins_memberInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_admins_memberInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderators_memberInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_moderators_memberInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_moderators_memberInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderators_memberInput>\n  }\n\n  export type discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput = {\n    create?: XOR<discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput>\n    connectOrCreate?: discussionboard_user_profilesCreateOrConnectWithoutDiscussionboard_user_profiles_memberInput\n    upsert?: discussionboard_user_profilesUpsertWithoutDiscussionboard_user_profiles_memberInput\n    disconnect?: discussionboard_user_profilesWhereInput | boolean\n    delete?: discussionboard_user_profilesWhereInput | boolean\n    connect?: discussionboard_user_profilesWhereUniqueInput\n    update?: XOR<XOR<discussionboard_user_profilesUpdateToOneWithWhereWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUpdateWithoutDiscussionboard_user_profiles_memberInput>, discussionboard_user_profilesUncheckedUpdateWithoutDiscussionboard_user_profiles_memberInput>\n  }\n\n  export type discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput = {\n    create?: XOR<discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput> | discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput[] | discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput[]\n    connectOrCreate?: discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput[]\n    upsert?: discussionboard_user_emailsUpsertWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsUpsertWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput[]\n    createMany?: discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInputEnvelope\n    set?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    disconnect?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    delete?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    connect?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    update?: discussionboard_user_emailsUpdateWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsUpdateWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput[]\n    updateMany?: discussionboard_user_emailsUpdateManyWithWhereWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsUpdateManyWithWhereWithoutDiscussionboard_user_emails_memberInput[]\n    deleteMany?: discussionboard_user_emailsScalarWhereInput | discussionboard_user_emailsScalarWhereInput[]\n  }\n\n  export type discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput = {\n    create?: XOR<discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput> | discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput[] | discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput[]\n    connectOrCreate?: discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput[]\n    upsert?: discussionboard_user_authsUpsertWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsUpsertWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput[]\n    createMany?: discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInputEnvelope\n    set?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    disconnect?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    delete?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    connect?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    update?: discussionboard_user_authsUpdateWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsUpdateWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput[]\n    updateMany?: discussionboard_user_authsUpdateManyWithWhereWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsUpdateManyWithWhereWithoutDiscussionboard_user_auths_memberInput[]\n    deleteMany?: discussionboard_user_authsScalarWhereInput | discussionboard_user_authsScalarWhereInput[]\n  }\n\n  export type discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput = {\n    create?: XOR<discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput> | discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput[] | discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput[]\n    connectOrCreate?: discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput[]\n    upsert?: discussionboard_user_sessionsUpsertWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsUpsertWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput[]\n    createMany?: discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInputEnvelope\n    set?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    disconnect?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    delete?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    connect?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    update?: discussionboard_user_sessionsUpdateWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsUpdateWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput[]\n    updateMany?: discussionboard_user_sessionsUpdateManyWithWhereWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsUpdateManyWithWhereWithoutDiscussionboard_user_sessions_memberInput[]\n    deleteMany?: discussionboard_user_sessionsScalarWhereInput | discussionboard_user_sessionsScalarWhereInput[]\n  }\n\n  export type discussionboard_postsUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutAuthorInput, discussionboard_postsUncheckedCreateWithoutAuthorInput> | discussionboard_postsCreateWithoutAuthorInput[] | discussionboard_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutAuthorInput | discussionboard_postsCreateOrConnectWithoutAuthorInput[]\n    upsert?: discussionboard_postsUpsertWithWhereUniqueWithoutAuthorInput | discussionboard_postsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: discussionboard_postsCreateManyAuthorInputEnvelope\n    set?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    disconnect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    delete?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    update?: discussionboard_postsUpdateWithWhereUniqueWithoutAuthorInput | discussionboard_postsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: discussionboard_postsUpdateManyWithWhereWithoutAuthorInput | discussionboard_postsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: discussionboard_postsScalarWhereInput | discussionboard_postsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_editsUpdateManyWithoutEditorNestedInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutEditorInput, discussionboard_post_editsUncheckedCreateWithoutEditorInput> | discussionboard_post_editsCreateWithoutEditorInput[] | discussionboard_post_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutEditorInput | discussionboard_post_editsCreateOrConnectWithoutEditorInput[]\n    upsert?: discussionboard_post_editsUpsertWithWhereUniqueWithoutEditorInput | discussionboard_post_editsUpsertWithWhereUniqueWithoutEditorInput[]\n    createMany?: discussionboard_post_editsCreateManyEditorInputEnvelope\n    set?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    disconnect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    delete?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    update?: discussionboard_post_editsUpdateWithWhereUniqueWithoutEditorInput | discussionboard_post_editsUpdateWithWhereUniqueWithoutEditorInput[]\n    updateMany?: discussionboard_post_editsUpdateManyWithWhereWithoutEditorInput | discussionboard_post_editsUpdateManyWithWhereWithoutEditorInput[]\n    deleteMany?: discussionboard_post_editsScalarWhereInput | discussionboard_post_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_likesUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutUserInput, discussionboard_post_likesUncheckedCreateWithoutUserInput> | discussionboard_post_likesCreateWithoutUserInput[] | discussionboard_post_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutUserInput | discussionboard_post_likesCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_post_likesUpsertWithWhereUniqueWithoutUserInput | discussionboard_post_likesUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_post_likesCreateManyUserInputEnvelope\n    set?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    disconnect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    delete?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    update?: discussionboard_post_likesUpdateWithWhereUniqueWithoutUserInput | discussionboard_post_likesUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_post_likesUpdateManyWithWhereWithoutUserInput | discussionboard_post_likesUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_post_likesScalarWhereInput | discussionboard_post_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_post_viewsUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutUserInput, discussionboard_post_viewsUncheckedCreateWithoutUserInput> | discussionboard_post_viewsCreateWithoutUserInput[] | discussionboard_post_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutUserInput | discussionboard_post_viewsCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_post_viewsUpsertWithWhereUniqueWithoutUserInput | discussionboard_post_viewsUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_post_viewsCreateManyUserInputEnvelope\n    set?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    delete?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    update?: discussionboard_post_viewsUpdateWithWhereUniqueWithoutUserInput | discussionboard_post_viewsUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_post_viewsUpdateManyWithWhereWithoutUserInput | discussionboard_post_viewsUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_post_viewsScalarWhereInput | discussionboard_post_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput | discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_likesUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutUserInput, discussionboard_comment_likesUncheckedCreateWithoutUserInput> | discussionboard_comment_likesCreateWithoutUserInput[] | discussionboard_comment_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutUserInput | discussionboard_comment_likesCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_comment_likesUpsertWithWhereUniqueWithoutUserInput | discussionboard_comment_likesUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_comment_likesCreateManyUserInputEnvelope\n    set?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    disconnect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    delete?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    update?: discussionboard_comment_likesUpdateWithWhereUniqueWithoutUserInput | discussionboard_comment_likesUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_comment_likesUpdateManyWithWhereWithoutUserInput | discussionboard_comment_likesUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_comment_likesScalarWhereInput | discussionboard_comment_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_editsUpdateManyWithoutEditorNestedInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutEditorInput, discussionboard_comment_editsUncheckedCreateWithoutEditorInput> | discussionboard_comment_editsCreateWithoutEditorInput[] | discussionboard_comment_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutEditorInput | discussionboard_comment_editsCreateOrConnectWithoutEditorInput[]\n    upsert?: discussionboard_comment_editsUpsertWithWhereUniqueWithoutEditorInput | discussionboard_comment_editsUpsertWithWhereUniqueWithoutEditorInput[]\n    createMany?: discussionboard_comment_editsCreateManyEditorInputEnvelope\n    set?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    delete?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    update?: discussionboard_comment_editsUpdateWithWhereUniqueWithoutEditorInput | discussionboard_comment_editsUpdateWithWhereUniqueWithoutEditorInput[]\n    updateMany?: discussionboard_comment_editsUpdateManyWithWhereWithoutEditorInput | discussionboard_comment_editsUpdateManyWithWhereWithoutEditorInput[]\n    deleteMany?: discussionboard_comment_editsScalarWhereInput | discussionboard_comment_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_viewsUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutUserInput, discussionboard_comment_viewsUncheckedCreateWithoutUserInput> | discussionboard_comment_viewsCreateWithoutUserInput[] | discussionboard_comment_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutUserInput | discussionboard_comment_viewsCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_comment_viewsUpsertWithWhereUniqueWithoutUserInput | discussionboard_comment_viewsUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_comment_viewsCreateManyUserInputEnvelope\n    set?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    delete?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    update?: discussionboard_comment_viewsUpdateWithWhereUniqueWithoutUserInput | discussionboard_comment_viewsUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_comment_viewsUpdateManyWithWhereWithoutUserInput | discussionboard_comment_viewsUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_comment_viewsScalarWhereInput | discussionboard_comment_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput> | discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_reporting_memberInput | discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_reporting_memberInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_reporting_memberInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_reporting_memberInput | discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_reporting_memberInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_reporting_memberInput | discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_reporting_memberInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_memberInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_memberInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_memberInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput> | discussionboard_bansCreateWithoutFk_bans_target_memberInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_memberInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_memberInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_memberInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_memberInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_memberInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_memberInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_memberInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput> | discussionboard_warningsCreateWithoutFk_warnings_target_memberInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_memberInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_memberInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_memberInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_memberInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_memberInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_memberInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_memberInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_memberInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_memberInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_memberInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput = {\n    create?: XOR<discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput> | discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput[] | discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput[]\n    connectOrCreate?: discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput[]\n    upsert?: discussionboard_notificationsUpsertWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsUpsertWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput[]\n    createMany?: discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInputEnvelope\n    set?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    disconnect?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    delete?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    connect?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    update?: discussionboard_notificationsUpdateWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsUpdateWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput[]\n    updateMany?: discussionboard_notificationsUpdateManyWithWhereWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsUpdateManyWithWhereWithoutDiscussionboard_notifications_recipientInput[]\n    deleteMany?: discussionboard_notificationsScalarWhereInput | discussionboard_notificationsScalarWhereInput[]\n  }\n\n  export type discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput = {\n    create?: XOR<discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput> | discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput[] | discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput[]\n    connectOrCreate?: discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput[]\n    upsert?: discussionboard_alert_preferencesUpsertWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesUpsertWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput[]\n    createMany?: discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInputEnvelope\n    set?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    disconnect?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    delete?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    connect?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    update?: discussionboard_alert_preferencesUpdateWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesUpdateWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput[]\n    updateMany?: discussionboard_alert_preferencesUpdateManyWithWhereWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesUpdateManyWithWhereWithoutDiscussionboard_alert_preferences_ownerInput[]\n    deleteMany?: discussionboard_alert_preferencesScalarWhereInput | discussionboard_alert_preferencesScalarWhereInput[]\n  }\n\n  export type discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput = {\n    create?: XOR<discussionboard_action_logsCreateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput> | discussionboard_action_logsCreateWithoutFk_action_log_actorInput[] | discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput[]\n    connectOrCreate?: discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput | discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput[]\n    upsert?: discussionboard_action_logsUpsertWithWhereUniqueWithoutFk_action_log_actorInput | discussionboard_action_logsUpsertWithWhereUniqueWithoutFk_action_log_actorInput[]\n    createMany?: discussionboard_action_logsCreateManyFk_action_log_actorInputEnvelope\n    set?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    disconnect?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    delete?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    connect?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    update?: discussionboard_action_logsUpdateWithWhereUniqueWithoutFk_action_log_actorInput | discussionboard_action_logsUpdateWithWhereUniqueWithoutFk_action_log_actorInput[]\n    updateMany?: discussionboard_action_logsUpdateManyWithWhereWithoutFk_action_log_actorInput | discussionboard_action_logsUpdateManyWithWhereWithoutFk_action_log_actorInput[]\n    deleteMany?: discussionboard_action_logsScalarWhereInput | discussionboard_action_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput = {\n    create?: XOR<discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput> | discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput[] | discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput[]\n    connectOrCreate?: discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput | discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput[]\n    upsert?: discussionboard_api_access_logsUpsertWithWhereUniqueWithoutFk_access_log_actorInput | discussionboard_api_access_logsUpsertWithWhereUniqueWithoutFk_access_log_actorInput[]\n    createMany?: discussionboard_api_access_logsCreateManyFk_access_log_actorInputEnvelope\n    set?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    disconnect?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    delete?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    connect?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    update?: discussionboard_api_access_logsUpdateWithWhereUniqueWithoutFk_access_log_actorInput | discussionboard_api_access_logsUpdateWithWhereUniqueWithoutFk_access_log_actorInput[]\n    updateMany?: discussionboard_api_access_logsUpdateManyWithWhereWithoutFk_access_log_actorInput | discussionboard_api_access_logsUpdateManyWithWhereWithoutFk_access_log_actorInput[]\n    deleteMany?: discussionboard_api_access_logsScalarWhereInput | discussionboard_api_access_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput = {\n    create?: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput> | discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput[] | discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput[]\n    connectOrCreate?: discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput[]\n    upsert?: discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_memberInput[]\n    createMany?: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInputEnvelope\n    set?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    disconnect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    delete?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    connect?: discussionboard_board_subscriptionsWhereUniqueInput | discussionboard_board_subscriptionsWhereUniqueInput[]\n    update?: discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_memberInput[]\n    updateMany?: discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_memberInput | discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_memberInput[]\n    deleteMany?: discussionboard_board_subscriptionsScalarWhereInput | discussionboard_board_subscriptionsScalarWhereInput[]\n  }\n\n  export type discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput = {\n    create?: XOR<discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput>\n    connectOrCreate?: discussionboard_notification_settingsCreateOrConnectWithoutFk_db_notification_settings_memberInput\n    upsert?: discussionboard_notification_settingsUpsertWithoutFk_db_notification_settings_memberInput\n    disconnect?: discussionboard_notification_settingsWhereInput | boolean\n    delete?: discussionboard_notification_settingsWhereInput | boolean\n    connect?: discussionboard_notification_settingsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_notification_settingsUpdateToOneWithWhereWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUpdateWithoutFk_db_notification_settings_memberInput>, discussionboard_notification_settingsUncheckedUpdateWithoutFk_db_notification_settings_memberInput>\n  }\n\n  export type discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_admins_memberInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_admins_memberInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUpdateWithoutDiscussionboard_admins_memberInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_admins_memberInput>\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderators_memberInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_moderators_memberInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_moderators_memberInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderators_memberInput>\n  }\n\n  export type discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput = {\n    create?: XOR<discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput>\n    connectOrCreate?: discussionboard_user_profilesCreateOrConnectWithoutDiscussionboard_user_profiles_memberInput\n    upsert?: discussionboard_user_profilesUpsertWithoutDiscussionboard_user_profiles_memberInput\n    disconnect?: discussionboard_user_profilesWhereInput | boolean\n    delete?: discussionboard_user_profilesWhereInput | boolean\n    connect?: discussionboard_user_profilesWhereUniqueInput\n    update?: XOR<XOR<discussionboard_user_profilesUpdateToOneWithWhereWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUpdateWithoutDiscussionboard_user_profiles_memberInput>, discussionboard_user_profilesUncheckedUpdateWithoutDiscussionboard_user_profiles_memberInput>\n  }\n\n  export type discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput = {\n    create?: XOR<discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput> | discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput[] | discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput[]\n    connectOrCreate?: discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput[]\n    upsert?: discussionboard_user_emailsUpsertWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsUpsertWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput[]\n    createMany?: discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInputEnvelope\n    set?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    disconnect?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    delete?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    connect?: discussionboard_user_emailsWhereUniqueInput | discussionboard_user_emailsWhereUniqueInput[]\n    update?: discussionboard_user_emailsUpdateWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsUpdateWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput[]\n    updateMany?: discussionboard_user_emailsUpdateManyWithWhereWithoutDiscussionboard_user_emails_memberInput | discussionboard_user_emailsUpdateManyWithWhereWithoutDiscussionboard_user_emails_memberInput[]\n    deleteMany?: discussionboard_user_emailsScalarWhereInput | discussionboard_user_emailsScalarWhereInput[]\n  }\n\n  export type discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput = {\n    create?: XOR<discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput> | discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput[] | discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput[]\n    connectOrCreate?: discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput[]\n    upsert?: discussionboard_user_authsUpsertWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsUpsertWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput[]\n    createMany?: discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInputEnvelope\n    set?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    disconnect?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    delete?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    connect?: discussionboard_user_authsWhereUniqueInput | discussionboard_user_authsWhereUniqueInput[]\n    update?: discussionboard_user_authsUpdateWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsUpdateWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput[]\n    updateMany?: discussionboard_user_authsUpdateManyWithWhereWithoutDiscussionboard_user_auths_memberInput | discussionboard_user_authsUpdateManyWithWhereWithoutDiscussionboard_user_auths_memberInput[]\n    deleteMany?: discussionboard_user_authsScalarWhereInput | discussionboard_user_authsScalarWhereInput[]\n  }\n\n  export type discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput = {\n    create?: XOR<discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput> | discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput[] | discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput[]\n    connectOrCreate?: discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput[]\n    upsert?: discussionboard_user_sessionsUpsertWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsUpsertWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput[]\n    createMany?: discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInputEnvelope\n    set?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    disconnect?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    delete?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    connect?: discussionboard_user_sessionsWhereUniqueInput | discussionboard_user_sessionsWhereUniqueInput[]\n    update?: discussionboard_user_sessionsUpdateWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsUpdateWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput[]\n    updateMany?: discussionboard_user_sessionsUpdateManyWithWhereWithoutDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsUpdateManyWithWhereWithoutDiscussionboard_user_sessions_memberInput[]\n    deleteMany?: discussionboard_user_sessionsScalarWhereInput | discussionboard_user_sessionsScalarWhereInput[]\n  }\n\n  export type discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutAuthorInput, discussionboard_postsUncheckedCreateWithoutAuthorInput> | discussionboard_postsCreateWithoutAuthorInput[] | discussionboard_postsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutAuthorInput | discussionboard_postsCreateOrConnectWithoutAuthorInput[]\n    upsert?: discussionboard_postsUpsertWithWhereUniqueWithoutAuthorInput | discussionboard_postsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: discussionboard_postsCreateManyAuthorInputEnvelope\n    set?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    disconnect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    delete?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    connect?: discussionboard_postsWhereUniqueInput | discussionboard_postsWhereUniqueInput[]\n    update?: discussionboard_postsUpdateWithWhereUniqueWithoutAuthorInput | discussionboard_postsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: discussionboard_postsUpdateManyWithWhereWithoutAuthorInput | discussionboard_postsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: discussionboard_postsScalarWhereInput | discussionboard_postsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutEditorInput, discussionboard_post_editsUncheckedCreateWithoutEditorInput> | discussionboard_post_editsCreateWithoutEditorInput[] | discussionboard_post_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutEditorInput | discussionboard_post_editsCreateOrConnectWithoutEditorInput[]\n    upsert?: discussionboard_post_editsUpsertWithWhereUniqueWithoutEditorInput | discussionboard_post_editsUpsertWithWhereUniqueWithoutEditorInput[]\n    createMany?: discussionboard_post_editsCreateManyEditorInputEnvelope\n    set?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    disconnect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    delete?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    update?: discussionboard_post_editsUpdateWithWhereUniqueWithoutEditorInput | discussionboard_post_editsUpdateWithWhereUniqueWithoutEditorInput[]\n    updateMany?: discussionboard_post_editsUpdateManyWithWhereWithoutEditorInput | discussionboard_post_editsUpdateManyWithWhereWithoutEditorInput[]\n    deleteMany?: discussionboard_post_editsScalarWhereInput | discussionboard_post_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutUserInput, discussionboard_post_likesUncheckedCreateWithoutUserInput> | discussionboard_post_likesCreateWithoutUserInput[] | discussionboard_post_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutUserInput | discussionboard_post_likesCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_post_likesUpsertWithWhereUniqueWithoutUserInput | discussionboard_post_likesUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_post_likesCreateManyUserInputEnvelope\n    set?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    disconnect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    delete?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    update?: discussionboard_post_likesUpdateWithWhereUniqueWithoutUserInput | discussionboard_post_likesUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_post_likesUpdateManyWithWhereWithoutUserInput | discussionboard_post_likesUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_post_likesScalarWhereInput | discussionboard_post_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutUserInput, discussionboard_post_viewsUncheckedCreateWithoutUserInput> | discussionboard_post_viewsCreateWithoutUserInput[] | discussionboard_post_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutUserInput | discussionboard_post_viewsCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_post_viewsUpsertWithWhereUniqueWithoutUserInput | discussionboard_post_viewsUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_post_viewsCreateManyUserInputEnvelope\n    set?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    delete?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    update?: discussionboard_post_viewsUpdateWithWhereUniqueWithoutUserInput | discussionboard_post_viewsUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_post_viewsUpdateManyWithWhereWithoutUserInput | discussionboard_post_viewsUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_post_viewsScalarWhereInput | discussionboard_post_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput> | discussionboard_commentsCreateWithoutAuthorInput[] | discussionboard_commentsUncheckedCreateWithoutAuthorInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutAuthorInput | discussionboard_commentsCreateOrConnectWithoutAuthorInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput[]\n    createMany?: discussionboard_commentsCreateManyAuthorInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput | discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput | discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutUserInput, discussionboard_comment_likesUncheckedCreateWithoutUserInput> | discussionboard_comment_likesCreateWithoutUserInput[] | discussionboard_comment_likesUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutUserInput | discussionboard_comment_likesCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_comment_likesUpsertWithWhereUniqueWithoutUserInput | discussionboard_comment_likesUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_comment_likesCreateManyUserInputEnvelope\n    set?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    disconnect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    delete?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    update?: discussionboard_comment_likesUpdateWithWhereUniqueWithoutUserInput | discussionboard_comment_likesUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_comment_likesUpdateManyWithWhereWithoutUserInput | discussionboard_comment_likesUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_comment_likesScalarWhereInput | discussionboard_comment_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutEditorInput, discussionboard_comment_editsUncheckedCreateWithoutEditorInput> | discussionboard_comment_editsCreateWithoutEditorInput[] | discussionboard_comment_editsUncheckedCreateWithoutEditorInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutEditorInput | discussionboard_comment_editsCreateOrConnectWithoutEditorInput[]\n    upsert?: discussionboard_comment_editsUpsertWithWhereUniqueWithoutEditorInput | discussionboard_comment_editsUpsertWithWhereUniqueWithoutEditorInput[]\n    createMany?: discussionboard_comment_editsCreateManyEditorInputEnvelope\n    set?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    delete?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    update?: discussionboard_comment_editsUpdateWithWhereUniqueWithoutEditorInput | discussionboard_comment_editsUpdateWithWhereUniqueWithoutEditorInput[]\n    updateMany?: discussionboard_comment_editsUpdateManyWithWhereWithoutEditorInput | discussionboard_comment_editsUpdateManyWithWhereWithoutEditorInput[]\n    deleteMany?: discussionboard_comment_editsScalarWhereInput | discussionboard_comment_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutUserInput, discussionboard_comment_viewsUncheckedCreateWithoutUserInput> | discussionboard_comment_viewsCreateWithoutUserInput[] | discussionboard_comment_viewsUncheckedCreateWithoutUserInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutUserInput | discussionboard_comment_viewsCreateOrConnectWithoutUserInput[]\n    upsert?: discussionboard_comment_viewsUpsertWithWhereUniqueWithoutUserInput | discussionboard_comment_viewsUpsertWithWhereUniqueWithoutUserInput[]\n    createMany?: discussionboard_comment_viewsCreateManyUserInputEnvelope\n    set?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    delete?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    update?: discussionboard_comment_viewsUpdateWithWhereUniqueWithoutUserInput | discussionboard_comment_viewsUpdateWithWhereUniqueWithoutUserInput[]\n    updateMany?: discussionboard_comment_viewsUpdateManyWithWhereWithoutUserInput | discussionboard_comment_viewsUpdateManyWithWhereWithoutUserInput[]\n    deleteMany?: discussionboard_comment_viewsScalarWhereInput | discussionboard_comment_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput> | discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_reporting_memberInput | discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_reporting_memberInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_reporting_memberInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_reporting_memberInput | discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_reporting_memberInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_reporting_memberInput | discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_reporting_memberInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_memberInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_memberInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_memberInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput = {\n    create?: XOR<discussionboard_bansCreateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput> | discussionboard_bansCreateWithoutFk_bans_target_memberInput[] | discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput[]\n    connectOrCreate?: discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput | discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput[]\n    upsert?: discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_memberInput | discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_memberInput[]\n    createMany?: discussionboard_bansCreateManyFk_bans_target_memberInputEnvelope\n    set?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    disconnect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    delete?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    connect?: discussionboard_bansWhereUniqueInput | discussionboard_bansWhereUniqueInput[]\n    update?: discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_memberInput | discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_memberInput[]\n    updateMany?: discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_memberInput | discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_memberInput[]\n    deleteMany?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput> | discussionboard_warningsCreateWithoutFk_warnings_target_memberInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_memberInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_memberInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_target_memberInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_memberInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_memberInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_memberInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_memberInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_memberInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_memberInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_memberInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_memberInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput = {\n    create?: XOR<discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput> | discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput[] | discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput[]\n    connectOrCreate?: discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput[]\n    upsert?: discussionboard_notificationsUpsertWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsUpsertWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput[]\n    createMany?: discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInputEnvelope\n    set?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    disconnect?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    delete?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    connect?: discussionboard_notificationsWhereUniqueInput | discussionboard_notificationsWhereUniqueInput[]\n    update?: discussionboard_notificationsUpdateWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsUpdateWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput[]\n    updateMany?: discussionboard_notificationsUpdateManyWithWhereWithoutDiscussionboard_notifications_recipientInput | discussionboard_notificationsUpdateManyWithWhereWithoutDiscussionboard_notifications_recipientInput[]\n    deleteMany?: discussionboard_notificationsScalarWhereInput | discussionboard_notificationsScalarWhereInput[]\n  }\n\n  export type discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput = {\n    create?: XOR<discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput> | discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput[] | discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput[]\n    connectOrCreate?: discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput[]\n    upsert?: discussionboard_alert_preferencesUpsertWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesUpsertWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput[]\n    createMany?: discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInputEnvelope\n    set?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    disconnect?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    delete?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    connect?: discussionboard_alert_preferencesWhereUniqueInput | discussionboard_alert_preferencesWhereUniqueInput[]\n    update?: discussionboard_alert_preferencesUpdateWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesUpdateWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput[]\n    updateMany?: discussionboard_alert_preferencesUpdateManyWithWhereWithoutDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesUpdateManyWithWhereWithoutDiscussionboard_alert_preferences_ownerInput[]\n    deleteMany?: discussionboard_alert_preferencesScalarWhereInput | discussionboard_alert_preferencesScalarWhereInput[]\n  }\n\n  export type discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput = {\n    create?: XOR<discussionboard_action_logsCreateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput> | discussionboard_action_logsCreateWithoutFk_action_log_actorInput[] | discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput[]\n    connectOrCreate?: discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput | discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput[]\n    upsert?: discussionboard_action_logsUpsertWithWhereUniqueWithoutFk_action_log_actorInput | discussionboard_action_logsUpsertWithWhereUniqueWithoutFk_action_log_actorInput[]\n    createMany?: discussionboard_action_logsCreateManyFk_action_log_actorInputEnvelope\n    set?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    disconnect?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    delete?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    connect?: discussionboard_action_logsWhereUniqueInput | discussionboard_action_logsWhereUniqueInput[]\n    update?: discussionboard_action_logsUpdateWithWhereUniqueWithoutFk_action_log_actorInput | discussionboard_action_logsUpdateWithWhereUniqueWithoutFk_action_log_actorInput[]\n    updateMany?: discussionboard_action_logsUpdateManyWithWhereWithoutFk_action_log_actorInput | discussionboard_action_logsUpdateManyWithWhereWithoutFk_action_log_actorInput[]\n    deleteMany?: discussionboard_action_logsScalarWhereInput | discussionboard_action_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput = {\n    create?: XOR<discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput> | discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput[] | discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput[]\n    connectOrCreate?: discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput | discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput[]\n    upsert?: discussionboard_api_access_logsUpsertWithWhereUniqueWithoutFk_access_log_actorInput | discussionboard_api_access_logsUpsertWithWhereUniqueWithoutFk_access_log_actorInput[]\n    createMany?: discussionboard_api_access_logsCreateManyFk_access_log_actorInputEnvelope\n    set?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    disconnect?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    delete?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    connect?: discussionboard_api_access_logsWhereUniqueInput | discussionboard_api_access_logsWhereUniqueInput[]\n    update?: discussionboard_api_access_logsUpdateWithWhereUniqueWithoutFk_access_log_actorInput | discussionboard_api_access_logsUpdateWithWhereUniqueWithoutFk_access_log_actorInput[]\n    updateMany?: discussionboard_api_access_logsUpdateManyWithWhereWithoutFk_access_log_actorInput | discussionboard_api_access_logsUpdateManyWithWhereWithoutFk_access_log_actorInput[]\n    deleteMany?: discussionboard_api_access_logsScalarWhereInput | discussionboard_api_access_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_profilesInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_profilesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_profilesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_profilesInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_profilesNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_profilesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_profilesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_profilesInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_user_profilesInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_profilesInput, discussionboard_membersUpdateWithoutDiscussionboard_user_profilesInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_profilesInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_emailsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_emailsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_emailsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_emailsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_emailsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_emailsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_emailsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_emailsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_user_emailsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_emailsInput, discussionboard_membersUpdateWithoutDiscussionboard_user_emailsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_emailsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_authsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_authsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_authsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_authsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_authsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_authsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_authsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_authsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_user_authsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_authsInput, discussionboard_membersUpdateWithoutDiscussionboard_user_authsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_authsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_user_sessionsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_sessionsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_sessionsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_user_sessionsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_sessionsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_sessionsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_user_sessionsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUpdateWithoutDiscussionboard_user_sessionsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_sessionsInput>\n  }\n\n  export type discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutDiscussionboard_postsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_postsInput>\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutDiscussionboard_postsInput\n    connect?: discussionboard_boardsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_postsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_postsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_postsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_post_editsCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutPostInput, discussionboard_post_editsUncheckedCreateWithoutPostInput> | discussionboard_post_editsCreateWithoutPostInput[] | discussionboard_post_editsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutPostInput | discussionboard_post_editsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_editsCreateManyPostInputEnvelope\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_likesCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutPostInput, discussionboard_post_likesUncheckedCreateWithoutPostInput> | discussionboard_post_likesCreateWithoutPostInput[] | discussionboard_post_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutPostInput | discussionboard_post_likesCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_likesCreateManyPostInputEnvelope\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_viewsCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutPostInput, discussionboard_post_viewsUncheckedCreateWithoutPostInput> | discussionboard_post_viewsCreateWithoutPostInput[] | discussionboard_post_viewsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutPostInput | discussionboard_post_viewsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_viewsCreateManyPostInputEnvelope\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput> | discussionboard_reportsCreateWithoutFk_reports_target_postInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_postInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutPostInput, discussionboard_post_editsUncheckedCreateWithoutPostInput> | discussionboard_post_editsCreateWithoutPostInput[] | discussionboard_post_editsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutPostInput | discussionboard_post_editsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_editsCreateManyPostInputEnvelope\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutPostInput, discussionboard_post_likesUncheckedCreateWithoutPostInput> | discussionboard_post_likesCreateWithoutPostInput[] | discussionboard_post_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutPostInput | discussionboard_post_likesCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_likesCreateManyPostInputEnvelope\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutPostInput, discussionboard_post_viewsUncheckedCreateWithoutPostInput> | discussionboard_post_viewsCreateWithoutPostInput[] | discussionboard_post_viewsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutPostInput | discussionboard_post_viewsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_post_viewsCreateManyPostInputEnvelope\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput> | discussionboard_reportsCreateWithoutFk_reports_target_postInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_postInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput = {\n    create?: XOR<discussionboard_boardsCreateWithoutDiscussionboard_postsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_postsInput>\n    connectOrCreate?: discussionboard_boardsCreateOrConnectWithoutDiscussionboard_postsInput\n    upsert?: discussionboard_boardsUpsertWithoutDiscussionboard_postsInput\n    connect?: discussionboard_boardsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_boardsUpdateToOneWithWhereWithoutDiscussionboard_postsInput, discussionboard_boardsUpdateWithoutDiscussionboard_postsInput>, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_postsInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_postsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_postsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_postsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_postsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_postsInput, discussionboard_membersUpdateWithoutDiscussionboard_postsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_postsInput>\n  }\n\n  export type discussionboard_post_editsUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutPostInput, discussionboard_post_editsUncheckedCreateWithoutPostInput> | discussionboard_post_editsCreateWithoutPostInput[] | discussionboard_post_editsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutPostInput | discussionboard_post_editsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_editsUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_editsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_editsCreateManyPostInputEnvelope\n    set?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    disconnect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    delete?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    update?: discussionboard_post_editsUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_editsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_editsUpdateManyWithWhereWithoutPostInput | discussionboard_post_editsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_editsScalarWhereInput | discussionboard_post_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_likesUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutPostInput, discussionboard_post_likesUncheckedCreateWithoutPostInput> | discussionboard_post_likesCreateWithoutPostInput[] | discussionboard_post_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutPostInput | discussionboard_post_likesCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_likesUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_likesUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_likesCreateManyPostInputEnvelope\n    set?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    disconnect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    delete?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    update?: discussionboard_post_likesUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_likesUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_likesUpdateManyWithWhereWithoutPostInput | discussionboard_post_likesUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_likesScalarWhereInput | discussionboard_post_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_post_viewsUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutPostInput, discussionboard_post_viewsUncheckedCreateWithoutPostInput> | discussionboard_post_viewsCreateWithoutPostInput[] | discussionboard_post_viewsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutPostInput | discussionboard_post_viewsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_viewsUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_viewsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_viewsCreateManyPostInputEnvelope\n    set?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    delete?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    update?: discussionboard_post_viewsUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_viewsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_viewsUpdateManyWithWhereWithoutPostInput | discussionboard_post_viewsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_viewsScalarWhereInput | discussionboard_post_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput | discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput | discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutPostInput | discussionboard_commentsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput> | discussionboard_reportsCreateWithoutFk_reports_target_postInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_postInput | discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_postInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_postInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_postInput | discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_postInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_postInput | discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_postInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_postInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_postInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_postInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_editsCreateWithoutPostInput, discussionboard_post_editsUncheckedCreateWithoutPostInput> | discussionboard_post_editsCreateWithoutPostInput[] | discussionboard_post_editsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_editsCreateOrConnectWithoutPostInput | discussionboard_post_editsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_editsUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_editsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_editsCreateManyPostInputEnvelope\n    set?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    disconnect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    delete?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    connect?: discussionboard_post_editsWhereUniqueInput | discussionboard_post_editsWhereUniqueInput[]\n    update?: discussionboard_post_editsUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_editsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_editsUpdateManyWithWhereWithoutPostInput | discussionboard_post_editsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_editsScalarWhereInput | discussionboard_post_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_likesCreateWithoutPostInput, discussionboard_post_likesUncheckedCreateWithoutPostInput> | discussionboard_post_likesCreateWithoutPostInput[] | discussionboard_post_likesUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_likesCreateOrConnectWithoutPostInput | discussionboard_post_likesCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_likesUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_likesUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_likesCreateManyPostInputEnvelope\n    set?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    disconnect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    delete?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    connect?: discussionboard_post_likesWhereUniqueInput | discussionboard_post_likesWhereUniqueInput[]\n    update?: discussionboard_post_likesUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_likesUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_likesUpdateManyWithWhereWithoutPostInput | discussionboard_post_likesUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_likesScalarWhereInput | discussionboard_post_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_post_viewsCreateWithoutPostInput, discussionboard_post_viewsUncheckedCreateWithoutPostInput> | discussionboard_post_viewsCreateWithoutPostInput[] | discussionboard_post_viewsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_post_viewsCreateOrConnectWithoutPostInput | discussionboard_post_viewsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_post_viewsUpsertWithWhereUniqueWithoutPostInput | discussionboard_post_viewsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_post_viewsCreateManyPostInputEnvelope\n    set?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    delete?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    connect?: discussionboard_post_viewsWhereUniqueInput | discussionboard_post_viewsWhereUniqueInput[]\n    update?: discussionboard_post_viewsUpdateWithWhereUniqueWithoutPostInput | discussionboard_post_viewsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_post_viewsUpdateManyWithWhereWithoutPostInput | discussionboard_post_viewsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_post_viewsScalarWhereInput | discussionboard_post_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput> | discussionboard_commentsCreateWithoutPostInput[] | discussionboard_commentsUncheckedCreateWithoutPostInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutPostInput | discussionboard_commentsCreateOrConnectWithoutPostInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput | discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput[]\n    createMany?: discussionboard_commentsCreateManyPostInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput | discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutPostInput | discussionboard_commentsUpdateManyWithWhereWithoutPostInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput> | discussionboard_reportsCreateWithoutFk_reports_target_postInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_postInput | discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_postInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_postInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_postInput | discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_postInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_postInput | discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_postInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_postInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_postInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_postInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_postInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_editsInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_editsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_editsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_editsInput\n    connect?: discussionboard_postsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_editsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_editsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_editsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_editsNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_editsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_editsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_editsInput\n    upsert?: discussionboard_postsUpsertWithoutDiscussionboard_post_editsInput\n    connect?: discussionboard_postsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_post_editsInput, discussionboard_postsUpdateWithoutDiscussionboard_post_editsInput>, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_editsInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_post_editsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_editsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_editsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_post_editsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_post_editsInput, discussionboard_membersUpdateWithoutDiscussionboard_post_editsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_editsInput>\n  }\n\n  export type discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_likesInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_likesInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_likesInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_likesInput\n    connect?: discussionboard_postsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_likesInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_likesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_likesInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_likesNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_likesInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_likesInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_likesInput\n    upsert?: discussionboard_postsUpsertWithoutDiscussionboard_post_likesInput\n    connect?: discussionboard_postsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_post_likesInput, discussionboard_postsUpdateWithoutDiscussionboard_post_likesInput>, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_likesInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_post_likesNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_likesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_likesInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_post_likesInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_post_likesInput, discussionboard_membersUpdateWithoutDiscussionboard_post_likesInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_likesInput>\n  }\n\n  export type discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_viewsInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_viewsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_viewsInput\n    connect?: discussionboard_postsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_viewsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_viewsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_viewsNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_viewsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_viewsInput\n    upsert?: discussionboard_postsUpsertWithoutDiscussionboard_post_viewsInput\n    connect?: discussionboard_postsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_post_viewsInput, discussionboard_postsUpdateWithoutDiscussionboard_post_viewsInput>, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_viewsInput>\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_post_viewsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_viewsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_post_viewsInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_post_viewsInput, discussionboard_membersUpdateWithoutDiscussionboard_post_viewsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_viewsInput>\n  }\n\n  export type discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_commentsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_postsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_commentsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutRecursiveInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutRecursiveInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedManyWithoutParentInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParentInput, discussionboard_commentsUncheckedCreateWithoutParentInput> | discussionboard_commentsCreateWithoutParentInput[] | discussionboard_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParentInput | discussionboard_commentsCreateOrConnectWithoutParentInput[]\n    createMany?: discussionboard_commentsCreateManyParentInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_likesCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutCommentInput, discussionboard_comment_likesUncheckedCreateWithoutCommentInput> | discussionboard_comment_likesCreateWithoutCommentInput[] | discussionboard_comment_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutCommentInput | discussionboard_comment_likesCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_comment_likesCreateManyCommentInputEnvelope\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_editsCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutCommentInput, discussionboard_comment_editsUncheckedCreateWithoutCommentInput> | discussionboard_comment_editsCreateWithoutCommentInput[] | discussionboard_comment_editsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutCommentInput | discussionboard_comment_editsCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_comment_editsCreateManyCommentInputEnvelope\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_viewsCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutCommentInput, discussionboard_comment_viewsUncheckedCreateWithoutCommentInput> | discussionboard_comment_viewsCreateWithoutCommentInput[] | discussionboard_comment_viewsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutCommentInput | discussionboard_comment_viewsCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_comment_viewsCreateManyCommentInputEnvelope\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput> | discussionboard_reportsCreateWithoutFk_reports_target_commentInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_commentInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParentInput, discussionboard_commentsUncheckedCreateWithoutParentInput> | discussionboard_commentsCreateWithoutParentInput[] | discussionboard_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParentInput | discussionboard_commentsCreateOrConnectWithoutParentInput[]\n    createMany?: discussionboard_commentsCreateManyParentInputEnvelope\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutCommentInput, discussionboard_comment_likesUncheckedCreateWithoutCommentInput> | discussionboard_comment_likesCreateWithoutCommentInput[] | discussionboard_comment_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutCommentInput | discussionboard_comment_likesCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_comment_likesCreateManyCommentInputEnvelope\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutCommentInput, discussionboard_comment_editsUncheckedCreateWithoutCommentInput> | discussionboard_comment_editsCreateWithoutCommentInput[] | discussionboard_comment_editsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutCommentInput | discussionboard_comment_editsCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_comment_editsCreateManyCommentInputEnvelope\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n  }\n\n  export type discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutCommentInput, discussionboard_comment_viewsUncheckedCreateWithoutCommentInput> | discussionboard_comment_viewsCreateWithoutCommentInput[] | discussionboard_comment_viewsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutCommentInput | discussionboard_comment_viewsCreateOrConnectWithoutCommentInput[]\n    createMany?: discussionboard_comment_viewsCreateManyCommentInputEnvelope\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n  }\n\n  export type discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput> | discussionboard_reportsCreateWithoutFk_reports_target_commentInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_commentInputEnvelope\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_commentsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_commentsInput\n    upsert?: discussionboard_postsUpsertWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_postsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_commentsInput, discussionboard_postsUpdateWithoutDiscussionboard_commentsInput>, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_commentsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_commentsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_commentsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_commentsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_commentsInput, discussionboard_membersUpdateWithoutDiscussionboard_commentsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutRecursiveNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutRecursiveInput\n    upsert?: discussionboard_commentsUpsertWithoutRecursiveInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutRecursiveInput, discussionboard_commentsUpdateWithoutRecursiveInput>, discussionboard_commentsUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithoutParentNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParentInput, discussionboard_commentsUncheckedCreateWithoutParentInput> | discussionboard_commentsCreateWithoutParentInput[] | discussionboard_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParentInput | discussionboard_commentsCreateOrConnectWithoutParentInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutParentInput | discussionboard_commentsUpsertWithWhereUniqueWithoutParentInput[]\n    createMany?: discussionboard_commentsCreateManyParentInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutParentInput | discussionboard_commentsUpdateWithWhereUniqueWithoutParentInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutParentInput | discussionboard_commentsUpdateManyWithWhereWithoutParentInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_likesUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutCommentInput, discussionboard_comment_likesUncheckedCreateWithoutCommentInput> | discussionboard_comment_likesCreateWithoutCommentInput[] | discussionboard_comment_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutCommentInput | discussionboard_comment_likesCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_comment_likesUpsertWithWhereUniqueWithoutCommentInput | discussionboard_comment_likesUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_comment_likesCreateManyCommentInputEnvelope\n    set?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    disconnect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    delete?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    update?: discussionboard_comment_likesUpdateWithWhereUniqueWithoutCommentInput | discussionboard_comment_likesUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_comment_likesUpdateManyWithWhereWithoutCommentInput | discussionboard_comment_likesUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_comment_likesScalarWhereInput | discussionboard_comment_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_editsUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutCommentInput, discussionboard_comment_editsUncheckedCreateWithoutCommentInput> | discussionboard_comment_editsCreateWithoutCommentInput[] | discussionboard_comment_editsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutCommentInput | discussionboard_comment_editsCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_comment_editsUpsertWithWhereUniqueWithoutCommentInput | discussionboard_comment_editsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_comment_editsCreateManyCommentInputEnvelope\n    set?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    delete?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    update?: discussionboard_comment_editsUpdateWithWhereUniqueWithoutCommentInput | discussionboard_comment_editsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_comment_editsUpdateManyWithWhereWithoutCommentInput | discussionboard_comment_editsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_comment_editsScalarWhereInput | discussionboard_comment_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutCommentInput, discussionboard_comment_viewsUncheckedCreateWithoutCommentInput> | discussionboard_comment_viewsCreateWithoutCommentInput[] | discussionboard_comment_viewsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutCommentInput | discussionboard_comment_viewsCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_comment_viewsUpsertWithWhereUniqueWithoutCommentInput | discussionboard_comment_viewsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_comment_viewsCreateManyCommentInputEnvelope\n    set?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    delete?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    update?: discussionboard_comment_viewsUpdateWithWhereUniqueWithoutCommentInput | discussionboard_comment_viewsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_comment_viewsUpdateManyWithWhereWithoutCommentInput | discussionboard_comment_viewsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_comment_viewsScalarWhereInput | discussionboard_comment_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput> | discussionboard_reportsCreateWithoutFk_reports_target_commentInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_commentInput | discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_commentInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_commentInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_commentInput | discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_commentInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_commentInput | discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_commentInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_commentInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_commentInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_commentInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutParentInput, discussionboard_commentsUncheckedCreateWithoutParentInput> | discussionboard_commentsCreateWithoutParentInput[] | discussionboard_commentsUncheckedCreateWithoutParentInput[]\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutParentInput | discussionboard_commentsCreateOrConnectWithoutParentInput[]\n    upsert?: discussionboard_commentsUpsertWithWhereUniqueWithoutParentInput | discussionboard_commentsUpsertWithWhereUniqueWithoutParentInput[]\n    createMany?: discussionboard_commentsCreateManyParentInputEnvelope\n    set?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    disconnect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    delete?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    connect?: discussionboard_commentsWhereUniqueInput | discussionboard_commentsWhereUniqueInput[]\n    update?: discussionboard_commentsUpdateWithWhereUniqueWithoutParentInput | discussionboard_commentsUpdateWithWhereUniqueWithoutParentInput[]\n    updateMany?: discussionboard_commentsUpdateManyWithWhereWithoutParentInput | discussionboard_commentsUpdateManyWithWhereWithoutParentInput[]\n    deleteMany?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_comment_likesCreateWithoutCommentInput, discussionboard_comment_likesUncheckedCreateWithoutCommentInput> | discussionboard_comment_likesCreateWithoutCommentInput[] | discussionboard_comment_likesUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_likesCreateOrConnectWithoutCommentInput | discussionboard_comment_likesCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_comment_likesUpsertWithWhereUniqueWithoutCommentInput | discussionboard_comment_likesUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_comment_likesCreateManyCommentInputEnvelope\n    set?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    disconnect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    delete?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    connect?: discussionboard_comment_likesWhereUniqueInput | discussionboard_comment_likesWhereUniqueInput[]\n    update?: discussionboard_comment_likesUpdateWithWhereUniqueWithoutCommentInput | discussionboard_comment_likesUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_comment_likesUpdateManyWithWhereWithoutCommentInput | discussionboard_comment_likesUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_comment_likesScalarWhereInput | discussionboard_comment_likesScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_comment_editsCreateWithoutCommentInput, discussionboard_comment_editsUncheckedCreateWithoutCommentInput> | discussionboard_comment_editsCreateWithoutCommentInput[] | discussionboard_comment_editsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_editsCreateOrConnectWithoutCommentInput | discussionboard_comment_editsCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_comment_editsUpsertWithWhereUniqueWithoutCommentInput | discussionboard_comment_editsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_comment_editsCreateManyCommentInputEnvelope\n    set?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    delete?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    connect?: discussionboard_comment_editsWhereUniqueInput | discussionboard_comment_editsWhereUniqueInput[]\n    update?: discussionboard_comment_editsUpdateWithWhereUniqueWithoutCommentInput | discussionboard_comment_editsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_comment_editsUpdateManyWithWhereWithoutCommentInput | discussionboard_comment_editsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_comment_editsScalarWhereInput | discussionboard_comment_editsScalarWhereInput[]\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput = {\n    create?: XOR<discussionboard_comment_viewsCreateWithoutCommentInput, discussionboard_comment_viewsUncheckedCreateWithoutCommentInput> | discussionboard_comment_viewsCreateWithoutCommentInput[] | discussionboard_comment_viewsUncheckedCreateWithoutCommentInput[]\n    connectOrCreate?: discussionboard_comment_viewsCreateOrConnectWithoutCommentInput | discussionboard_comment_viewsCreateOrConnectWithoutCommentInput[]\n    upsert?: discussionboard_comment_viewsUpsertWithWhereUniqueWithoutCommentInput | discussionboard_comment_viewsUpsertWithWhereUniqueWithoutCommentInput[]\n    createMany?: discussionboard_comment_viewsCreateManyCommentInputEnvelope\n    set?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    disconnect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    delete?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    connect?: discussionboard_comment_viewsWhereUniqueInput | discussionboard_comment_viewsWhereUniqueInput[]\n    update?: discussionboard_comment_viewsUpdateWithWhereUniqueWithoutCommentInput | discussionboard_comment_viewsUpdateWithWhereUniqueWithoutCommentInput[]\n    updateMany?: discussionboard_comment_viewsUpdateManyWithWhereWithoutCommentInput | discussionboard_comment_viewsUpdateManyWithWhereWithoutCommentInput[]\n    deleteMany?: discussionboard_comment_viewsScalarWhereInput | discussionboard_comment_viewsScalarWhereInput[]\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput> | discussionboard_reportsCreateWithoutFk_reports_target_commentInput[] | discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput[]\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput | discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput[]\n    upsert?: discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_commentInput | discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_commentInput[]\n    createMany?: discussionboard_reportsCreateManyFk_reports_target_commentInputEnvelope\n    set?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    disconnect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    delete?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    connect?: discussionboard_reportsWhereUniqueInput | discussionboard_reportsWhereUniqueInput[]\n    update?: discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_commentInput | discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_commentInput[]\n    updateMany?: discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_commentInput | discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_commentInput[]\n    deleteMany?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_commentInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_commentInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_commentInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_commentInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_likesInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_likesInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_likesInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_likesInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_likesNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_likesInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_comment_likesInput\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUpdateWithoutDiscussionboard_comment_likesInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_likesInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_comment_likesNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_likesInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_comment_likesInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_comment_likesInput, discussionboard_membersUpdateWithoutDiscussionboard_comment_likesInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_likesInput>\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_editsInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_editsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_editsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_editsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_editsNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_editsInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_comment_editsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUpdateWithoutDiscussionboard_comment_editsInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_editsInput>\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_comment_editsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_editsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_comment_editsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_comment_editsInput, discussionboard_membersUpdateWithoutDiscussionboard_comment_editsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_editsInput>\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_viewsInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_viewsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_viewsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_viewsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_viewsNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_viewsInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_comment_viewsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUpdateWithoutDiscussionboard_comment_viewsInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_viewsInput>\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_comment_viewsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_viewsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_comment_viewsInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUpdateWithoutDiscussionboard_comment_viewsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_viewsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_reportsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_reportsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_postsWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput> | discussionboard_warningsCreateWithoutFk_warnings_related_reportInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_related_reportInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInputEnvelope\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n  }\n\n  export type discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput> | discussionboard_warningsCreateWithoutFk_warnings_related_reportInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_related_reportInputEnvelope\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_reportsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_reportsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_reportsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_reportsInput, discussionboard_membersUpdateWithoutDiscussionboard_reportsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_reportsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_reportsInput\n    upsert?: discussionboard_postsUpsertWithoutDiscussionboard_reportsInput\n    disconnect?: discussionboard_postsWhereInput | boolean\n    delete?: discussionboard_postsWhereInput | boolean\n    connect?: discussionboard_postsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_reportsInput, discussionboard_postsUpdateWithoutDiscussionboard_reportsInput>, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_reportsInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_reportsInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_reportsInput, discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_related_reportInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_related_reportInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_related_reportInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput> | discussionboard_warningsCreateWithoutFk_warnings_related_reportInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_related_reportInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_related_reportInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_related_reportInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_related_reportInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_related_reportInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_related_reportInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_related_reportInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_reportInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_reportInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_reportInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput> | discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput[] | discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput[]\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput[]\n    upsert?: discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_related_reportInput[]\n    createMany?: discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInputEnvelope\n    set?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    disconnect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    delete?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    connect?: discussionboard_moderation_actionsWhereUniqueInput | discussionboard_moderation_actionsWhereUniqueInput[]\n    update?: discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_related_reportInput[]\n    updateMany?: discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_related_reportInput | discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_related_reportInput[]\n    deleteMany?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput = {\n    create?: XOR<discussionboard_warningsCreateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput> | discussionboard_warningsCreateWithoutFk_warnings_related_reportInput[] | discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput[]\n    connectOrCreate?: discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput | discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput[]\n    upsert?: discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_related_reportInput | discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_related_reportInput[]\n    createMany?: discussionboard_warningsCreateManyFk_warnings_related_reportInputEnvelope\n    set?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    disconnect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    delete?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    connect?: discussionboard_warningsWhereUniqueInput | discussionboard_warningsWhereUniqueInput[]\n    update?: discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_related_reportInput | discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_related_reportInput[]\n    updateMany?: discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_related_reportInput | discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_related_reportInput[]\n    deleteMany?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_reportInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_reportInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_reportInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_reportInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    connect?: discussionboard_reportsWhereUniqueInput\n  }\n\n  export type discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    connect?: discussionboard_postsWhereUniqueInput\n  }\n\n  export type discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    connect?: discussionboard_commentsWhereUniqueInput\n  }\n\n  export type discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInputEnvelope\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_moderation_actionsInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUpdateWithoutDiscussionboard_moderation_actionsInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_moderation_actionsInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_moderation_actionsInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_moderation_actionsInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUpdateWithoutDiscussionboard_moderation_actionsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    upsert?: discussionboard_reportsUpsertWithoutDiscussionboard_moderation_actionsInput\n    disconnect?: discussionboard_reportsWhereInput | boolean\n    delete?: discussionboard_reportsWhereInput | boolean\n    connect?: discussionboard_reportsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUpdateWithoutDiscussionboard_moderation_actionsInput>, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput = {\n    create?: XOR<discussionboard_postsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_postsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    upsert?: discussionboard_postsUpsertWithoutDiscussionboard_moderation_actionsInput\n    disconnect?: discussionboard_postsWhereInput | boolean\n    delete?: discussionboard_postsWhereInput | boolean\n    connect?: discussionboard_postsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUpdateWithoutDiscussionboard_moderation_actionsInput>, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput = {\n    create?: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    connectOrCreate?: discussionboard_commentsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput\n    upsert?: discussionboard_commentsUpsertWithoutDiscussionboard_moderation_actionsInput\n    disconnect?: discussionboard_commentsWhereInput | boolean\n    delete?: discussionboard_commentsWhereInput | boolean\n    connect?: discussionboard_commentsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionsInput>, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_moderation_actionInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput = {\n    create?: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput> | discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput[] | discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput[]\n    connectOrCreate?: discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput[]\n    upsert?: discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput[]\n    createMany?: discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInputEnvelope\n    set?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    disconnect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    delete?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    connect?: discussionboard_audit_logsWhereUniqueInput | discussionboard_audit_logsWhereUniqueInput[]\n    update?: discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput[]\n    updateMany?: discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_moderation_actionInput[]\n    deleteMany?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_target_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_bans_of_target_admin_idInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_bans_of_target_moderator_idInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_bansInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_bansInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_bansInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_bansInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_bans_of_actor_admin_idInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_bans_of_actor_moderator_idInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_target_admin_idNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_target_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_bans_of_target_admin_idInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_bans_of_target_admin_idInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_target_admin_idInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_target_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_target_moderator_idNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_bans_of_target_moderator_idInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_bans_of_target_moderator_idInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_bansNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_bansInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_bansInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_bansInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_bansInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_bansInput, discussionboard_membersUpdateWithoutDiscussionboard_bansInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_bansInput>\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_actor_admin_idNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_bans_of_actor_admin_idInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_bans_of_actor_admin_idInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_actor_moderator_idNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_bans_of_actor_moderator_idInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_bans_of_actor_moderator_idInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_warnings_of_target_admin_idInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_warningsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_warningsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_warningsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_warningsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_warningsInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_warningsInput\n    connect?: discussionboard_reportsWhereUniqueInput\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_warnings_of_target_admin_idInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_warnings_of_target_admin_idInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_warningsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_warningsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_warningsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_warningsInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_warningsInput, discussionboard_membersUpdateWithoutDiscussionboard_warningsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_warningsInput>\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n  }\n\n  export type discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_warningsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_warningsInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_warningsInput\n    upsert?: discussionboard_reportsUpsertWithoutDiscussionboard_warningsInput\n    disconnect?: discussionboard_reportsWhereInput | boolean\n    delete?: discussionboard_reportsWhereInput | boolean\n    connect?: discussionboard_reportsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_warningsInput, discussionboard_reportsUpdateWithoutDiscussionboard_warningsInput>, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_warningsInput>\n  }\n\n  export type discussionboard_adminsCreateNestedOneWithoutDiscussionboard_audit_logsInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    connect?: discussionboard_adminsWhereUniqueInput\n  }\n\n  export type discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_audit_logsInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    connect?: discussionboard_moderatorsWhereUniqueInput\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_audit_logsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_audit_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_reportsCreateNestedOneWithoutDiscussionboard_audit_logsInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    connect?: discussionboard_reportsWhereUniqueInput\n  }\n\n  export type discussionboard_moderation_actionsCreateNestedOneWithoutDiscussionboard_audit_logsInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    connect?: discussionboard_moderation_actionsWhereUniqueInput\n  }\n\n  export type discussionboard_adminsUpdateOneWithoutDiscussionboard_audit_logsNestedInput = {\n    create?: XOR<discussionboard_adminsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_adminsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    upsert?: discussionboard_adminsUpsertWithoutDiscussionboard_audit_logsInput\n    disconnect?: discussionboard_adminsWhereInput | boolean\n    delete?: discussionboard_adminsWhereInput | boolean\n    connect?: discussionboard_adminsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUpdateWithoutDiscussionboard_audit_logsInput>, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_moderatorsUpdateOneWithoutDiscussionboard_audit_logsNestedInput = {\n    create?: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    upsert?: discussionboard_moderatorsUpsertWithoutDiscussionboard_audit_logsInput\n    disconnect?: discussionboard_moderatorsWhereInput | boolean\n    delete?: discussionboard_moderatorsWhereInput | boolean\n    connect?: discussionboard_moderatorsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUpdateWithoutDiscussionboard_audit_logsInput>, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_audit_logsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_audit_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_audit_logsInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput, discussionboard_membersUpdateWithoutDiscussionboard_audit_logsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_reportsUpdateOneWithoutDiscussionboard_audit_logsNestedInput = {\n    create?: XOR<discussionboard_reportsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_reportsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    upsert?: discussionboard_reportsUpsertWithoutDiscussionboard_audit_logsInput\n    disconnect?: discussionboard_reportsWhereInput | boolean\n    delete?: discussionboard_reportsWhereInput | boolean\n    connect?: discussionboard_reportsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUpdateWithoutDiscussionboard_audit_logsInput>, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateOneWithoutDiscussionboard_audit_logsNestedInput = {\n    create?: XOR<discussionboard_moderation_actionsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    connectOrCreate?: discussionboard_moderation_actionsCreateOrConnectWithoutDiscussionboard_audit_logsInput\n    upsert?: discussionboard_moderation_actionsUpsertWithoutDiscussionboard_audit_logsInput\n    disconnect?: discussionboard_moderation_actionsWhereInput | boolean\n    delete?: discussionboard_moderation_actionsWhereInput | boolean\n    connect?: discussionboard_moderation_actionsWhereUniqueInput\n    update?: XOR<XOR<discussionboard_moderation_actionsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUpdateWithoutDiscussionboard_audit_logsInput>, discussionboard_moderation_actionsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_notificationsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_notificationsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notificationsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_notificationsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_notificationsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_notificationsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notificationsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_notificationsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_notificationsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_notificationsInput, discussionboard_membersUpdateWithoutDiscussionboard_notificationsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notificationsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_alert_preferencesInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_alert_preferencesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_alert_preferencesInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_alert_preferencesNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_alert_preferencesInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_alert_preferencesInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_alert_preferencesInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUpdateWithoutDiscussionboard_alert_preferencesInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_alert_preferencesInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_action_logsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_action_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_action_logsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_action_logsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_action_logsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_action_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_action_logsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_action_logsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_action_logsInput\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_action_logsInput, discussionboard_membersUpdateWithoutDiscussionboard_action_logsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_action_logsInput>\n  }\n\n  export type discussionboard_membersCreateNestedOneWithoutDiscussionboard_api_access_logsInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_api_access_logsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_api_access_logsInput\n    connect?: discussionboard_membersWhereUniqueInput\n  }\n\n  export type discussionboard_membersUpdateOneWithoutDiscussionboard_api_access_logsNestedInput = {\n    create?: XOR<discussionboard_membersCreateWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_api_access_logsInput>\n    connectOrCreate?: discussionboard_membersCreateOrConnectWithoutDiscussionboard_api_access_logsInput\n    upsert?: discussionboard_membersUpsertWithoutDiscussionboard_api_access_logsInput\n    disconnect?: discussionboard_membersWhereInput | boolean\n    delete?: discussionboard_membersWhereInput | boolean\n    connect?: discussionboard_membersWhereUniqueInput\n    update?: XOR<XOR<discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUpdateWithoutDiscussionboard_api_access_logsInput>, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_api_access_logsInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type NestedFloatFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatFilter<$PrismaModel> | number\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedBoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedUuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_board_settings?: discussionboard_board_settingsCreateNestedOneWithoutFk_db_board_settings_boardInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedCreateNestedOneWithoutFk_db_board_settings_boardInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsCreateOrConnectWithoutFk_discussionboard_boards_sectionInput = {\n    where: discussionboard_boardsWhereUniqueInput\n    create: XOR<discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput>\n  }\n\n  export type discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInputEnvelope = {\n    data: discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInput | discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_boardsUpsertWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput = {\n    where: discussionboard_boardsWhereUniqueInput\n    update: XOR<discussionboard_boardsUpdateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedUpdateWithoutFk_discussionboard_boards_sectionInput>\n    create: XOR<discussionboard_boardsCreateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedCreateWithoutFk_discussionboard_boards_sectionInput>\n  }\n\n  export type discussionboard_boardsUpdateWithWhereUniqueWithoutFk_discussionboard_boards_sectionInput = {\n    where: discussionboard_boardsWhereUniqueInput\n    data: XOR<discussionboard_boardsUpdateWithoutFk_discussionboard_boards_sectionInput, discussionboard_boardsUncheckedUpdateWithoutFk_discussionboard_boards_sectionInput>\n  }\n\n  export type discussionboard_boardsUpdateManyWithWhereWithoutFk_discussionboard_boards_sectionInput = {\n    where: discussionboard_boardsScalarWhereInput\n    data: XOR<discussionboard_boardsUpdateManyMutationInput, discussionboard_boardsUncheckedUpdateManyWithoutFk_discussionboard_boards_sectionInput>\n  }\n\n  export type discussionboard_boardsScalarWhereInput = {\n    AND?: discussionboard_boardsScalarWhereInput | discussionboard_boardsScalarWhereInput[]\n    OR?: discussionboard_boardsScalarWhereInput[]\n    NOT?: discussionboard_boardsScalarWhereInput | discussionboard_boardsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_boards\"> | string\n    discussionboard_section_id?: UuidFilter<\"discussionboard_boards\"> | string\n    name?: StringFilter<\"discussionboard_boards\"> | string\n    description?: StringNullableFilter<\"discussionboard_boards\"> | string | null\n    rules?: StringNullableFilter<\"discussionboard_boards\"> | string | null\n    is_active?: BoolFilter<\"discussionboard_boards\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_boards\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_boards\"> | Date | string\n  }\n\n  export type discussionboard_sectionsCreateWithoutDiscussionboard_boardsInput = {\n    id: string\n    name: string\n    description?: string | null\n    sort_order: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_sectionsUncheckedCreateWithoutDiscussionboard_boardsInput = {\n    id: string\n    name: string\n    description?: string | null\n    sort_order: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_sectionsCreateOrConnectWithoutDiscussionboard_boardsInput = {\n    where: discussionboard_sectionsWhereUniqueInput\n    create: XOR<discussionboard_sectionsCreateWithoutDiscussionboard_boardsInput, discussionboard_sectionsUncheckedCreateWithoutDiscussionboard_boardsInput>\n  }\n\n  export type discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput = {\n    id: string\n    created_at: Date | string\n    fk_db_board_subs_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_board_subscriptionsInput\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput = {\n    id: string\n    discussionboard_member_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_boardInput = {\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    create: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput>\n  }\n\n  export type discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInputEnvelope = {\n    data: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInput | discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput = {\n    id: string\n    allow_images: boolean\n    require_moderator_approval: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput = {\n    id: string\n    allow_images: boolean\n    require_moderator_approval: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_board_settingsCreateOrConnectWithoutFk_db_board_settings_boardInput = {\n    where: discussionboard_board_settingsWhereUniqueInput\n    create: XOR<discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput>\n  }\n\n  export type discussionboard_postsCreateWithoutBoardInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutBoardInput = {\n    id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutBoardInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutBoardInput, discussionboard_postsUncheckedCreateWithoutBoardInput>\n  }\n\n  export type discussionboard_postsCreateManyBoardInputEnvelope = {\n    data: discussionboard_postsCreateManyBoardInput | discussionboard_postsCreateManyBoardInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_sectionsUpsertWithoutDiscussionboard_boardsInput = {\n    update: XOR<discussionboard_sectionsUpdateWithoutDiscussionboard_boardsInput, discussionboard_sectionsUncheckedUpdateWithoutDiscussionboard_boardsInput>\n    create: XOR<discussionboard_sectionsCreateWithoutDiscussionboard_boardsInput, discussionboard_sectionsUncheckedCreateWithoutDiscussionboard_boardsInput>\n    where?: discussionboard_sectionsWhereInput\n  }\n\n  export type discussionboard_sectionsUpdateToOneWithWhereWithoutDiscussionboard_boardsInput = {\n    where?: discussionboard_sectionsWhereInput\n    data: XOR<discussionboard_sectionsUpdateWithoutDiscussionboard_boardsInput, discussionboard_sectionsUncheckedUpdateWithoutDiscussionboard_boardsInput>\n  }\n\n  export type discussionboard_sectionsUpdateWithoutDiscussionboard_boardsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    sort_order?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_sectionsUncheckedUpdateWithoutDiscussionboard_boardsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    sort_order?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_boardInput = {\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    update: XOR<discussionboard_board_subscriptionsUpdateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedUpdateWithoutFk_db_board_subs_boardInput>\n    create: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_boardInput>\n  }\n\n  export type discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_boardInput = {\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    data: XOR<discussionboard_board_subscriptionsUpdateWithoutFk_db_board_subs_boardInput, discussionboard_board_subscriptionsUncheckedUpdateWithoutFk_db_board_subs_boardInput>\n  }\n\n  export type discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_boardInput = {\n    where: discussionboard_board_subscriptionsScalarWhereInput\n    data: XOR<discussionboard_board_subscriptionsUpdateManyMutationInput, discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardInput>\n  }\n\n  export type discussionboard_board_subscriptionsScalarWhereInput = {\n    AND?: discussionboard_board_subscriptionsScalarWhereInput | discussionboard_board_subscriptionsScalarWhereInput[]\n    OR?: discussionboard_board_subscriptionsScalarWhereInput[]\n    NOT?: discussionboard_board_subscriptionsScalarWhereInput | discussionboard_board_subscriptionsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_board_id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_board_subscriptions\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_board_subscriptions\"> | Date | string\n  }\n\n  export type discussionboard_board_settingsUpsertWithoutFk_db_board_settings_boardInput = {\n    update: XOR<discussionboard_board_settingsUpdateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedUpdateWithoutFk_db_board_settings_boardInput>\n    create: XOR<discussionboard_board_settingsCreateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedCreateWithoutFk_db_board_settings_boardInput>\n    where?: discussionboard_board_settingsWhereInput\n  }\n\n  export type discussionboard_board_settingsUpdateToOneWithWhereWithoutFk_db_board_settings_boardInput = {\n    where?: discussionboard_board_settingsWhereInput\n    data: XOR<discussionboard_board_settingsUpdateWithoutFk_db_board_settings_boardInput, discussionboard_board_settingsUncheckedUpdateWithoutFk_db_board_settings_boardInput>\n  }\n\n  export type discussionboard_board_settingsUpdateWithoutFk_db_board_settings_boardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    allow_images?: BoolFieldUpdateOperationsInput | boolean\n    require_moderator_approval?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_settingsUncheckedUpdateWithoutFk_db_board_settings_boardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    allow_images?: BoolFieldUpdateOperationsInput | boolean\n    require_moderator_approval?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_postsUpsertWithWhereUniqueWithoutBoardInput = {\n    where: discussionboard_postsWhereUniqueInput\n    update: XOR<discussionboard_postsUpdateWithoutBoardInput, discussionboard_postsUncheckedUpdateWithoutBoardInput>\n    create: XOR<discussionboard_postsCreateWithoutBoardInput, discussionboard_postsUncheckedCreateWithoutBoardInput>\n  }\n\n  export type discussionboard_postsUpdateWithWhereUniqueWithoutBoardInput = {\n    where: discussionboard_postsWhereUniqueInput\n    data: XOR<discussionboard_postsUpdateWithoutBoardInput, discussionboard_postsUncheckedUpdateWithoutBoardInput>\n  }\n\n  export type discussionboard_postsUpdateManyWithWhereWithoutBoardInput = {\n    where: discussionboard_postsScalarWhereInput\n    data: XOR<discussionboard_postsUpdateManyMutationInput, discussionboard_postsUncheckedUpdateManyWithoutBoardInput>\n  }\n\n  export type discussionboard_postsScalarWhereInput = {\n    AND?: discussionboard_postsScalarWhereInput | discussionboard_postsScalarWhereInput[]\n    OR?: discussionboard_postsScalarWhereInput[]\n    NOT?: discussionboard_postsScalarWhereInput | discussionboard_postsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_posts\"> | string\n    board_id?: UuidFilter<\"discussionboard_posts\"> | string\n    author_id?: UuidFilter<\"discussionboard_posts\"> | string\n    title?: StringFilter<\"discussionboard_posts\"> | string\n    body?: StringFilter<\"discussionboard_posts\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_posts\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_posts\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_posts\"> | Date | string | null\n  }\n\n  export type discussionboard_boardsCreateWithoutDiscussionboard_board_subscriptionsInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    fk_discussionboard_boards_section: discussionboard_sectionsCreateNestedOneWithoutDiscussionboard_boardsInput\n    discussionboard_board_settings?: discussionboard_board_settingsCreateNestedOneWithoutFk_db_board_settings_boardInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput = {\n    id: string\n    discussionboard_section_id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedCreateNestedOneWithoutFk_db_board_settings_boardInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsCreateOrConnectWithoutDiscussionboard_board_subscriptionsInput = {\n    where: discussionboard_boardsWhereUniqueInput\n    create: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_board_subscriptionsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_board_subscriptionsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n  }\n\n  export type discussionboard_boardsUpsertWithoutDiscussionboard_board_subscriptionsInput = {\n    update: XOR<discussionboard_boardsUpdateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput>\n    create: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n    where?: discussionboard_boardsWhereInput\n  }\n\n  export type discussionboard_boardsUpdateToOneWithWhereWithoutDiscussionboard_board_subscriptionsInput = {\n    where?: discussionboard_boardsWhereInput\n    data: XOR<discussionboard_boardsUpdateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput>\n  }\n\n  export type discussionboard_boardsUpdateWithoutDiscussionboard_board_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_discussionboard_boards_section?: discussionboard_sectionsUpdateOneRequiredWithoutDiscussionboard_boardsNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUpdateOneWithoutFk_db_board_settings_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedUpdateOneWithoutFk_db_board_settings_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_board_subscriptionsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_board_subscriptionsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_board_subscriptionsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_board_subscriptionsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_board_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_board_subscriptionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_boardsCreateWithoutDiscussionboard_board_settingsInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    fk_discussionboard_boards_section: discussionboard_sectionsCreateNestedOneWithoutDiscussionboard_boardsInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_settingsInput = {\n    id: string\n    discussionboard_section_id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutBoardInput\n  }\n\n  export type discussionboard_boardsCreateOrConnectWithoutDiscussionboard_board_settingsInput = {\n    where: discussionboard_boardsWhereUniqueInput\n    create: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_settingsInput>\n  }\n\n  export type discussionboard_boardsUpsertWithoutDiscussionboard_board_settingsInput = {\n    update: XOR<discussionboard_boardsUpdateWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_settingsInput>\n    create: XOR<discussionboard_boardsCreateWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_board_settingsInput>\n    where?: discussionboard_boardsWhereInput\n  }\n\n  export type discussionboard_boardsUpdateToOneWithWhereWithoutDiscussionboard_board_settingsInput = {\n    where?: discussionboard_boardsWhereInput\n    data: XOR<discussionboard_boardsUpdateWithoutDiscussionboard_board_settingsInput, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_settingsInput>\n  }\n\n  export type discussionboard_boardsUpdateWithoutDiscussionboard_board_settingsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_discussionboard_boards_section?: discussionboard_sectionsUpdateOneRequiredWithoutDiscussionboard_boardsNestedInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_board_settingsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_notification_settingsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_notification_settingsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_notification_settingsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notification_settingsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_notification_settingsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notification_settingsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notification_settingsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_notification_settingsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_notification_settingsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notification_settingsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_notification_settingsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notification_settingsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_adminsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_adminsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_adminsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_adminsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_adminsInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput = {\n    id: string\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_adminInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInputEnvelope = {\n    data: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInput | discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_bansCreateWithoutFk_bans_target_adminInput = {\n    id: string\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    fk_bans_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_target_moderator_idInput\n    fk_bans_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_bansInput\n    fk_bans_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_actor_admin_idInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_actor_moderator_idInput\n  }\n\n  export type discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput = {\n    id: string\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateOrConnectWithoutFk_bans_target_adminInput = {\n    where: discussionboard_bansWhereUniqueInput\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput>\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_target_adminInputEnvelope = {\n    data: discussionboard_bansCreateManyFk_bans_target_adminInput | discussionboard_bansCreateManyFk_bans_target_adminInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_bansCreateWithoutFk_bans_actor_adminInput = {\n    id: string\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    fk_bans_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_target_admin_idInput\n    fk_bans_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_target_moderator_idInput\n    fk_bans_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_bansInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_actor_moderator_idInput\n  }\n\n  export type discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateOrConnectWithoutFk_bans_actor_adminInput = {\n    where: discussionboard_bansWhereUniqueInput\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput>\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_actor_adminInputEnvelope = {\n    data: discussionboard_bansCreateManyFk_bans_actor_adminInput | discussionboard_bansCreateManyFk_bans_actor_adminInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningsCreateWithoutFk_warnings_target_adminInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    fk_warnings_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput\n    fk_warnings_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    fk_warnings_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput = {\n    id: string\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_adminInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput>\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_target_adminInputEnvelope = {\n    data: discussionboard_warningsCreateManyFk_warnings_target_adminInput | discussionboard_warningsCreateManyFk_warnings_target_adminInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    fk_warnings_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    fk_warnings_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_adminInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput>\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_actor_adminInputEnvelope = {\n    data: discussionboard_warningsCreateManyFk_warnings_actor_adminInput | discussionboard_warningsCreateManyFk_warnings_actor_adminInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput = {\n    id: string\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput = {\n    id: string\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_adminInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput>\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInputEnvelope = {\n    data: discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInput | discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_adminsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_adminsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_adminsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_adminsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_adminsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_adminsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_adminsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_adminsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_adminsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_adminsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_adminInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_adminInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_adminInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_adminInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_adminInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_adminInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_adminInput = {\n    where: discussionboard_moderation_actionsScalarWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminInput>\n  }\n\n  export type discussionboard_moderation_actionsScalarWhereInput = {\n    AND?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n    OR?: discussionboard_moderation_actionsScalarWhereInput[]\n    NOT?: discussionboard_moderation_actionsScalarWhereInput | discussionboard_moderation_actionsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_moderation_actions\"> | string\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    actor_member_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_post_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    target_comment_id?: UuidNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    action_type?: StringFilter<\"discussionboard_moderation_actions\"> | string\n    action_reason?: StringNullableFilter<\"discussionboard_moderation_actions\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_moderation_actions\"> | Date | string\n  }\n\n  export type discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_adminInput = {\n    where: discussionboard_bansWhereUniqueInput\n    update: XOR<discussionboard_bansUpdateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_target_adminInput>\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_adminInput>\n  }\n\n  export type discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_adminInput = {\n    where: discussionboard_bansWhereUniqueInput\n    data: XOR<discussionboard_bansUpdateWithoutFk_bans_target_adminInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_target_adminInput>\n  }\n\n  export type discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_adminInput = {\n    where: discussionboard_bansScalarWhereInput\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminInput>\n  }\n\n  export type discussionboard_bansScalarWhereInput = {\n    AND?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n    OR?: discussionboard_bansScalarWhereInput[]\n    NOT?: discussionboard_bansScalarWhereInput | discussionboard_bansScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_bans\"> | string\n    target_admin_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    target_moderator_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    target_member_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_bans\"> | string | null\n    ban_reason?: StringFilter<\"discussionboard_bans\"> | string\n    ban_start_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    ban_end_at?: DateTimeNullableFilter<\"discussionboard_bans\"> | Date | string | null\n    status?: StringFilter<\"discussionboard_bans\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_bans\"> | Date | string\n  }\n\n  export type discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_adminInput = {\n    where: discussionboard_bansWhereUniqueInput\n    update: XOR<discussionboard_bansUpdateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_actor_adminInput>\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_adminInput>\n  }\n\n  export type discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_adminInput = {\n    where: discussionboard_bansWhereUniqueInput\n    data: XOR<discussionboard_bansUpdateWithoutFk_bans_actor_adminInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_actor_adminInput>\n  }\n\n  export type discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_adminInput = {\n    where: discussionboard_bansScalarWhereInput\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminInput>\n  }\n\n  export type discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_adminInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    update: XOR<discussionboard_warningsUpdateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_adminInput>\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_adminInput>\n  }\n\n  export type discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_adminInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    data: XOR<discussionboard_warningsUpdateWithoutFk_warnings_target_adminInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_adminInput>\n  }\n\n  export type discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_adminInput = {\n    where: discussionboard_warningsScalarWhereInput\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminInput>\n  }\n\n  export type discussionboard_warningsScalarWhereInput = {\n    AND?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n    OR?: discussionboard_warningsScalarWhereInput[]\n    NOT?: discussionboard_warningsScalarWhereInput | discussionboard_warningsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_warnings\"> | string\n    target_admin_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    target_moderator_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    target_member_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_warnings\"> | string | null\n    reason?: StringFilter<\"discussionboard_warnings\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_warnings\"> | Date | string\n  }\n\n  export type discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_adminInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    update: XOR<discussionboard_warningsUpdateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_actor_adminInput>\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_adminInput>\n  }\n\n  export type discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_adminInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    data: XOR<discussionboard_warningsUpdateWithoutFk_warnings_actor_adminInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_actor_adminInput>\n  }\n\n  export type discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_adminInput = {\n    where: discussionboard_warningsScalarWhereInput\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminInput>\n  }\n\n  export type discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_adminInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    update: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_adminInput>\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_adminInput>\n  }\n\n  export type discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_adminInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    data: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_adminInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_adminInput>\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_adminInput = {\n    where: discussionboard_audit_logsScalarWhereInput\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminInput>\n  }\n\n  export type discussionboard_audit_logsScalarWhereInput = {\n    AND?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n    OR?: discussionboard_audit_logsScalarWhereInput[]\n    NOT?: discussionboard_audit_logsScalarWhereInput | discussionboard_audit_logsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_audit_logs\"> | string\n    actor_admin_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_moderator_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    actor_member_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    related_report_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    related_moderation_action_id?: UuidNullableFilter<\"discussionboard_audit_logs\"> | string | null\n    event_type?: StringFilter<\"discussionboard_audit_logs\"> | string\n    event_detail?: StringFilter<\"discussionboard_audit_logs\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_audit_logs\"> | Date | string\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_moderatorsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderatorsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_moderatorsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderatorsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderatorsInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_moderatorInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInputEnvelope = {\n    data: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInput | discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_bansCreateWithoutFk_bans_target_moderatorInput = {\n    id: string\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    fk_bans_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_target_admin_idInput\n    fk_bans_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_bansInput\n    fk_bans_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_actor_admin_idInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_actor_moderator_idInput\n  }\n\n  export type discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateOrConnectWithoutFk_bans_target_moderatorInput = {\n    where: discussionboard_bansWhereUniqueInput\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput>\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_target_moderatorInputEnvelope = {\n    data: discussionboard_bansCreateManyFk_bans_target_moderatorInput | discussionboard_bansCreateManyFk_bans_target_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput = {\n    id: string\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    fk_bans_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_target_admin_idInput\n    fk_bans_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_target_moderator_idInput\n    fk_bans_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_bansInput\n    fk_bans_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_actor_admin_idInput\n  }\n\n  export type discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateOrConnectWithoutFk_bans_actor_moderatorInput = {\n    where: discussionboard_bansWhereUniqueInput\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput>\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_actor_moderatorInputEnvelope = {\n    data: discussionboard_bansCreateManyFk_bans_actor_moderatorInput | discussionboard_bansCreateManyFk_bans_actor_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput\n    fk_warnings_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput\n    fk_warnings_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    fk_warnings_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_moderatorInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput>\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_target_moderatorInputEnvelope = {\n    data: discussionboard_warningsCreateManyFk_warnings_target_moderatorInput | discussionboard_warningsCreateManyFk_warnings_target_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    fk_warnings_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput\n    fk_warnings_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    fk_warnings_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateOrConnectWithoutFk_warnings_actor_moderatorInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput>\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_actor_moderatorInputEnvelope = {\n    data: discussionboard_warningsCreateManyFk_warnings_actor_moderatorInput | discussionboard_warningsCreateManyFk_warnings_actor_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput = {\n    id: string\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_moderatorInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput>\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInputEnvelope = {\n    data: discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInput | discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_moderatorsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_moderatorsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderatorsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderatorsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderatorsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_moderatorsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_moderatorsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderatorsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderatorsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_moderatorInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_moderatorInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_moderatorInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_moderatorInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_moderatorInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_moderatorInput = {\n    where: discussionboard_moderation_actionsScalarWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorInput>\n  }\n\n  export type discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_moderatorInput = {\n    where: discussionboard_bansWhereUniqueInput\n    update: XOR<discussionboard_bansUpdateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_target_moderatorInput>\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_moderatorInput>\n  }\n\n  export type discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_moderatorInput = {\n    where: discussionboard_bansWhereUniqueInput\n    data: XOR<discussionboard_bansUpdateWithoutFk_bans_target_moderatorInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_target_moderatorInput>\n  }\n\n  export type discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_moderatorInput = {\n    where: discussionboard_bansScalarWhereInput\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorInput>\n  }\n\n  export type discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_actor_moderatorInput = {\n    where: discussionboard_bansWhereUniqueInput\n    update: XOR<discussionboard_bansUpdateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_actor_moderatorInput>\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedCreateWithoutFk_bans_actor_moderatorInput>\n  }\n\n  export type discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_actor_moderatorInput = {\n    where: discussionboard_bansWhereUniqueInput\n    data: XOR<discussionboard_bansUpdateWithoutFk_bans_actor_moderatorInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_actor_moderatorInput>\n  }\n\n  export type discussionboard_bansUpdateManyWithWhereWithoutFk_bans_actor_moderatorInput = {\n    where: discussionboard_bansScalarWhereInput\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorInput>\n  }\n\n  export type discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_moderatorInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    update: XOR<discussionboard_warningsUpdateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_moderatorInput>\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_moderatorInput>\n  }\n\n  export type discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_moderatorInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    data: XOR<discussionboard_warningsUpdateWithoutFk_warnings_target_moderatorInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_moderatorInput>\n  }\n\n  export type discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_moderatorInput = {\n    where: discussionboard_warningsScalarWhereInput\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorInput>\n  }\n\n  export type discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_actor_moderatorInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    update: XOR<discussionboard_warningsUpdateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_actor_moderatorInput>\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_actor_moderatorInput>\n  }\n\n  export type discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_actor_moderatorInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    data: XOR<discussionboard_warningsUpdateWithoutFk_warnings_actor_moderatorInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_actor_moderatorInput>\n  }\n\n  export type discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_actor_moderatorInput = {\n    where: discussionboard_warningsScalarWhereInput\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorInput>\n  }\n\n  export type discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    update: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_moderatorInput>\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_moderatorInput>\n  }\n\n  export type discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_moderatorInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    data: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_moderatorInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_moderatorInput>\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_moderatorInput = {\n    where: discussionboard_audit_logsScalarWhereInput\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorInput>\n  }\n\n  export type discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput = {\n    id: string\n    created_at: Date | string\n    fk_db_board_subs_board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_board_subscriptionsInput\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput = {\n    id: string\n    discussionboard_board_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_board_subscriptionsCreateOrConnectWithoutFk_db_board_subs_memberInput = {\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    create: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput>\n  }\n\n  export type discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInputEnvelope = {\n    data: discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInput | discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput = {\n    id: string\n    receive_board_notifications: boolean\n    receive_mention_notifications: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput = {\n    id: string\n    receive_board_notifications: boolean\n    receive_mention_notifications: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_notification_settingsCreateOrConnectWithoutFk_db_notification_settings_memberInput = {\n    where: discussionboard_notification_settingsWhereUniqueInput\n    create: XOR<discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput>\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_admins_memberInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderators_memberInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput>\n  }\n\n  export type discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput = {\n    id: string\n    display_name?: string | null\n    bio?: string | null\n    avatar_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput = {\n    id: string\n    display_name?: string | null\n    bio?: string | null\n    avatar_url?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_user_profilesCreateOrConnectWithoutDiscussionboard_user_profiles_memberInput = {\n    where: discussionboard_user_profilesWhereUniqueInput\n    create: XOR<discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput>\n  }\n\n  export type discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput = {\n    id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date | string\n    verified_at?: Date | string | null\n  }\n\n  export type discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput = {\n    id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date | string\n    verified_at?: Date | string | null\n  }\n\n  export type discussionboard_user_emailsCreateOrConnectWithoutDiscussionboard_user_emails_memberInput = {\n    where: discussionboard_user_emailsWhereUniqueInput\n    create: XOR<discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput>\n  }\n\n  export type discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInputEnvelope = {\n    data: discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInput | discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput = {\n    id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput = {\n    id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_authsCreateOrConnectWithoutDiscussionboard_user_auths_memberInput = {\n    where: discussionboard_user_authsWhereUniqueInput\n    create: XOR<discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput>\n  }\n\n  export type discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInputEnvelope = {\n    data: discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInput | discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n    expires_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n    expires_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_sessionsCreateOrConnectWithoutDiscussionboard_user_sessions_memberInput = {\n    where: discussionboard_user_sessionsWhereUniqueInput\n    create: XOR<discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput>\n  }\n\n  export type discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInputEnvelope = {\n    data: discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInput | discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_postsCreateWithoutAuthorInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutAuthorInput = {\n    id: string\n    board_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutAuthorInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutAuthorInput, discussionboard_postsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type discussionboard_postsCreateManyAuthorInputEnvelope = {\n    data: discussionboard_postsCreateManyAuthorInput | discussionboard_postsCreateManyAuthorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_post_editsCreateWithoutEditorInput = {\n    id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_editsInput\n  }\n\n  export type discussionboard_post_editsUncheckedCreateWithoutEditorInput = {\n    id: string\n    post_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_post_editsCreateOrConnectWithoutEditorInput = {\n    where: discussionboard_post_editsWhereUniqueInput\n    create: XOR<discussionboard_post_editsCreateWithoutEditorInput, discussionboard_post_editsUncheckedCreateWithoutEditorInput>\n  }\n\n  export type discussionboard_post_editsCreateManyEditorInputEnvelope = {\n    data: discussionboard_post_editsCreateManyEditorInput | discussionboard_post_editsCreateManyEditorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_post_likesCreateWithoutUserInput = {\n    id: string\n    is_like: boolean\n    created_at: Date | string\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_likesInput\n  }\n\n  export type discussionboard_post_likesUncheckedCreateWithoutUserInput = {\n    id: string\n    post_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_likesCreateOrConnectWithoutUserInput = {\n    where: discussionboard_post_likesWhereUniqueInput\n    create: XOR<discussionboard_post_likesCreateWithoutUserInput, discussionboard_post_likesUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_post_likesCreateManyUserInputEnvelope = {\n    data: discussionboard_post_likesCreateManyUserInput | discussionboard_post_likesCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_post_viewsCreateWithoutUserInput = {\n    id: string\n    session_id?: string | null\n    viewed_at: Date | string\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_post_viewsInput\n  }\n\n  export type discussionboard_post_viewsUncheckedCreateWithoutUserInput = {\n    id: string\n    post_id: string\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_post_viewsCreateOrConnectWithoutUserInput = {\n    where: discussionboard_post_viewsWhereUniqueInput\n    create: XOR<discussionboard_post_viewsCreateWithoutUserInput, discussionboard_post_viewsUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_post_viewsCreateManyUserInputEnvelope = {\n    data: discussionboard_post_viewsCreateManyUserInput | discussionboard_post_viewsCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_commentsCreateWithoutAuthorInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutAuthorInput = {\n    id: string\n    post_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutAuthorInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsCreateManyAuthorInputEnvelope = {\n    data: discussionboard_commentsCreateManyAuthorInput | discussionboard_commentsCreateManyAuthorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_comment_likesCreateWithoutUserInput = {\n    id: string\n    is_like: boolean\n    created_at: Date | string\n    comment: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_likesInput\n  }\n\n  export type discussionboard_comment_likesUncheckedCreateWithoutUserInput = {\n    id: string\n    comment_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_comment_likesCreateOrConnectWithoutUserInput = {\n    where: discussionboard_comment_likesWhereUniqueInput\n    create: XOR<discussionboard_comment_likesCreateWithoutUserInput, discussionboard_comment_likesUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_comment_likesCreateManyUserInputEnvelope = {\n    data: discussionboard_comment_likesCreateManyUserInput | discussionboard_comment_likesCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_comment_editsCreateWithoutEditorInput = {\n    id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n    comment: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_editsInput\n  }\n\n  export type discussionboard_comment_editsUncheckedCreateWithoutEditorInput = {\n    id: string\n    comment_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_comment_editsCreateOrConnectWithoutEditorInput = {\n    where: discussionboard_comment_editsWhereUniqueInput\n    create: XOR<discussionboard_comment_editsCreateWithoutEditorInput, discussionboard_comment_editsUncheckedCreateWithoutEditorInput>\n  }\n\n  export type discussionboard_comment_editsCreateManyEditorInputEnvelope = {\n    data: discussionboard_comment_editsCreateManyEditorInput | discussionboard_comment_editsCreateManyEditorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_comment_viewsCreateWithoutUserInput = {\n    id: string\n    session_id?: string | null\n    viewed_at: Date | string\n    comment: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_comment_viewsInput\n  }\n\n  export type discussionboard_comment_viewsUncheckedCreateWithoutUserInput = {\n    id: string\n    comment_id: string\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_comment_viewsCreateOrConnectWithoutUserInput = {\n    where: discussionboard_comment_viewsWhereUniqueInput\n    create: XOR<discussionboard_comment_viewsCreateWithoutUserInput, discussionboard_comment_viewsUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_comment_viewsCreateManyUserInputEnvelope = {\n    data: discussionboard_comment_viewsCreateManyUserInput | discussionboard_comment_viewsCreateManyUserInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput = {\n    id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutFk_reports_reporting_memberInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput>\n  }\n\n  export type discussionboard_reportsCreateManyFk_reports_reporting_memberInputEnvelope = {\n    data: discussionboard_reportsCreateManyFk_reports_reporting_memberInput | discussionboard_reportsCreateManyFk_reports_reporting_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_actor_memberInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInputEnvelope = {\n    data: discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInput | discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_bansCreateWithoutFk_bans_target_memberInput = {\n    id: string\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    fk_bans_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_target_admin_idInput\n    fk_bans_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_target_moderator_idInput\n    fk_bans_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_bans_of_actor_admin_idInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_bans_of_actor_moderator_idInput\n  }\n\n  export type discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateOrConnectWithoutFk_bans_target_memberInput = {\n    where: discussionboard_bansWhereUniqueInput\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput>\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_target_memberInputEnvelope = {\n    data: discussionboard_bansCreateManyFk_bans_target_memberInput | discussionboard_bansCreateManyFk_bans_target_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningsCreateWithoutFk_warnings_target_memberInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    fk_warnings_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n    fk_warnings_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_warningsInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateOrConnectWithoutFk_warnings_target_memberInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput>\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_target_memberInputEnvelope = {\n    data: discussionboard_warningsCreateManyFk_warnings_target_memberInput | discussionboard_warningsCreateManyFk_warnings_target_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput = {\n    id: string\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_actor_memberInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput>\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInputEnvelope = {\n    data: discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInput | discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput = {\n    id: string\n    type: string\n    related_entity_id?: string | null\n    related_entity_type?: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput = {\n    id: string\n    type: string\n    related_entity_id?: string | null\n    related_entity_type?: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_notificationsCreateOrConnectWithoutDiscussionboard_notifications_recipientInput = {\n    where: discussionboard_notificationsWhereUniqueInput\n    create: XOR<discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput>\n  }\n\n  export type discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInputEnvelope = {\n    data: discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInput | discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput = {\n    id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput = {\n    id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_alert_preferencesCreateOrConnectWithoutDiscussionboard_alert_preferences_ownerInput = {\n    where: discussionboard_alert_preferencesWhereUniqueInput\n    create: XOR<discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput>\n  }\n\n  export type discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInputEnvelope = {\n    data: discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInput | discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_action_logsCreateWithoutFk_action_log_actorInput = {\n    id: string\n    event_type: string\n    event_target_id?: string | null\n    metadata?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput = {\n    id: string\n    event_type: string\n    event_target_id?: string | null\n    metadata?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_action_logsCreateOrConnectWithoutFk_action_log_actorInput = {\n    where: discussionboard_action_logsWhereUniqueInput\n    create: XOR<discussionboard_action_logsCreateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput>\n  }\n\n  export type discussionboard_action_logsCreateManyFk_action_log_actorInputEnvelope = {\n    data: discussionboard_action_logsCreateManyFk_action_log_actorInput | discussionboard_action_logsCreateManyFk_action_log_actorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput = {\n    id: string\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent?: string | null\n    response_time_ms: number\n    created_at: Date | string\n  }\n\n  export type discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput = {\n    id: string\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent?: string | null\n    response_time_ms: number\n    created_at: Date | string\n  }\n\n  export type discussionboard_api_access_logsCreateOrConnectWithoutFk_access_log_actorInput = {\n    where: discussionboard_api_access_logsWhereUniqueInput\n    create: XOR<discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput>\n  }\n\n  export type discussionboard_api_access_logsCreateManyFk_access_log_actorInputEnvelope = {\n    data: discussionboard_api_access_logsCreateManyFk_access_log_actorInput | discussionboard_api_access_logsCreateManyFk_access_log_actorInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_board_subscriptionsUpsertWithWhereUniqueWithoutFk_db_board_subs_memberInput = {\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    update: XOR<discussionboard_board_subscriptionsUpdateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedUpdateWithoutFk_db_board_subs_memberInput>\n    create: XOR<discussionboard_board_subscriptionsCreateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedCreateWithoutFk_db_board_subs_memberInput>\n  }\n\n  export type discussionboard_board_subscriptionsUpdateWithWhereUniqueWithoutFk_db_board_subs_memberInput = {\n    where: discussionboard_board_subscriptionsWhereUniqueInput\n    data: XOR<discussionboard_board_subscriptionsUpdateWithoutFk_db_board_subs_memberInput, discussionboard_board_subscriptionsUncheckedUpdateWithoutFk_db_board_subs_memberInput>\n  }\n\n  export type discussionboard_board_subscriptionsUpdateManyWithWhereWithoutFk_db_board_subs_memberInput = {\n    where: discussionboard_board_subscriptionsScalarWhereInput\n    data: XOR<discussionboard_board_subscriptionsUpdateManyMutationInput, discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberInput>\n  }\n\n  export type discussionboard_notification_settingsUpsertWithoutFk_db_notification_settings_memberInput = {\n    update: XOR<discussionboard_notification_settingsUpdateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedUpdateWithoutFk_db_notification_settings_memberInput>\n    create: XOR<discussionboard_notification_settingsCreateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedCreateWithoutFk_db_notification_settings_memberInput>\n    where?: discussionboard_notification_settingsWhereInput\n  }\n\n  export type discussionboard_notification_settingsUpdateToOneWithWhereWithoutFk_db_notification_settings_memberInput = {\n    where?: discussionboard_notification_settingsWhereInput\n    data: XOR<discussionboard_notification_settingsUpdateWithoutFk_db_notification_settings_memberInput, discussionboard_notification_settingsUncheckedUpdateWithoutFk_db_notification_settings_memberInput>\n  }\n\n  export type discussionboard_notification_settingsUpdateWithoutFk_db_notification_settings_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    receive_board_notifications?: BoolFieldUpdateOperationsInput | boolean\n    receive_mention_notifications?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notification_settingsUncheckedUpdateWithoutFk_db_notification_settings_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    receive_board_notifications?: BoolFieldUpdateOperationsInput | boolean\n    receive_mention_notifications?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_admins_memberInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_admins_memberInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_admins_memberInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_admins_memberInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_admins_memberInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_admins_memberInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_admins_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_admins_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_moderators_memberInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderators_memberInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderators_memberInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_moderators_memberInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_moderators_memberInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderators_memberInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_moderators_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderators_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_user_profilesUpsertWithoutDiscussionboard_user_profiles_memberInput = {\n    update: XOR<discussionboard_user_profilesUpdateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedUpdateWithoutDiscussionboard_user_profiles_memberInput>\n    create: XOR<discussionboard_user_profilesCreateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedCreateWithoutDiscussionboard_user_profiles_memberInput>\n    where?: discussionboard_user_profilesWhereInput\n  }\n\n  export type discussionboard_user_profilesUpdateToOneWithWhereWithoutDiscussionboard_user_profiles_memberInput = {\n    where?: discussionboard_user_profilesWhereInput\n    data: XOR<discussionboard_user_profilesUpdateWithoutDiscussionboard_user_profiles_memberInput, discussionboard_user_profilesUncheckedUpdateWithoutDiscussionboard_user_profiles_memberInput>\n  }\n\n  export type discussionboard_user_profilesUpdateWithoutDiscussionboard_user_profiles_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_profilesUncheckedUpdateWithoutDiscussionboard_user_profiles_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    display_name?: NullableStringFieldUpdateOperationsInput | string | null\n    bio?: NullableStringFieldUpdateOperationsInput | string | null\n    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_emailsUpsertWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput = {\n    where: discussionboard_user_emailsWhereUniqueInput\n    update: XOR<discussionboard_user_emailsUpdateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedUpdateWithoutDiscussionboard_user_emails_memberInput>\n    create: XOR<discussionboard_user_emailsCreateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedCreateWithoutDiscussionboard_user_emails_memberInput>\n  }\n\n  export type discussionboard_user_emailsUpdateWithWhereUniqueWithoutDiscussionboard_user_emails_memberInput = {\n    where: discussionboard_user_emailsWhereUniqueInput\n    data: XOR<discussionboard_user_emailsUpdateWithoutDiscussionboard_user_emails_memberInput, discussionboard_user_emailsUncheckedUpdateWithoutDiscussionboard_user_emails_memberInput>\n  }\n\n  export type discussionboard_user_emailsUpdateManyWithWhereWithoutDiscussionboard_user_emails_memberInput = {\n    where: discussionboard_user_emailsScalarWhereInput\n    data: XOR<discussionboard_user_emailsUpdateManyMutationInput, discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberInput>\n  }\n\n  export type discussionboard_user_emailsScalarWhereInput = {\n    AND?: discussionboard_user_emailsScalarWhereInput | discussionboard_user_emailsScalarWhereInput[]\n    OR?: discussionboard_user_emailsScalarWhereInput[]\n    NOT?: discussionboard_user_emailsScalarWhereInput | discussionboard_user_emailsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_emails\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_emails\"> | string\n    email?: StringFilter<\"discussionboard_user_emails\"> | string\n    is_verified?: BoolFilter<\"discussionboard_user_emails\"> | boolean\n    is_primary?: BoolFilter<\"discussionboard_user_emails\"> | boolean\n    added_at?: DateTimeFilter<\"discussionboard_user_emails\"> | Date | string\n    verified_at?: DateTimeNullableFilter<\"discussionboard_user_emails\"> | Date | string | null\n  }\n\n  export type discussionboard_user_authsUpsertWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput = {\n    where: discussionboard_user_authsWhereUniqueInput\n    update: XOR<discussionboard_user_authsUpdateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedUpdateWithoutDiscussionboard_user_auths_memberInput>\n    create: XOR<discussionboard_user_authsCreateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedCreateWithoutDiscussionboard_user_auths_memberInput>\n  }\n\n  export type discussionboard_user_authsUpdateWithWhereUniqueWithoutDiscussionboard_user_auths_memberInput = {\n    where: discussionboard_user_authsWhereUniqueInput\n    data: XOR<discussionboard_user_authsUpdateWithoutDiscussionboard_user_auths_memberInput, discussionboard_user_authsUncheckedUpdateWithoutDiscussionboard_user_auths_memberInput>\n  }\n\n  export type discussionboard_user_authsUpdateManyWithWhereWithoutDiscussionboard_user_auths_memberInput = {\n    where: discussionboard_user_authsScalarWhereInput\n    data: XOR<discussionboard_user_authsUpdateManyMutationInput, discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberInput>\n  }\n\n  export type discussionboard_user_authsScalarWhereInput = {\n    AND?: discussionboard_user_authsScalarWhereInput | discussionboard_user_authsScalarWhereInput[]\n    OR?: discussionboard_user_authsScalarWhereInput[]\n    NOT?: discussionboard_user_authsScalarWhereInput | discussionboard_user_authsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_auths\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_auths\"> | string\n    provider?: StringFilter<\"discussionboard_user_auths\"> | string\n    provider_user_id?: StringFilter<\"discussionboard_user_auths\"> | string\n    linked_at?: DateTimeFilter<\"discussionboard_user_auths\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_user_auths\"> | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUpsertWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput = {\n    where: discussionboard_user_sessionsWhereUniqueInput\n    update: XOR<discussionboard_user_sessionsUpdateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedUpdateWithoutDiscussionboard_user_sessions_memberInput>\n    create: XOR<discussionboard_user_sessionsCreateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedCreateWithoutDiscussionboard_user_sessions_memberInput>\n  }\n\n  export type discussionboard_user_sessionsUpdateWithWhereUniqueWithoutDiscussionboard_user_sessions_memberInput = {\n    where: discussionboard_user_sessionsWhereUniqueInput\n    data: XOR<discussionboard_user_sessionsUpdateWithoutDiscussionboard_user_sessions_memberInput, discussionboard_user_sessionsUncheckedUpdateWithoutDiscussionboard_user_sessions_memberInput>\n  }\n\n  export type discussionboard_user_sessionsUpdateManyWithWhereWithoutDiscussionboard_user_sessions_memberInput = {\n    where: discussionboard_user_sessionsScalarWhereInput\n    data: XOR<discussionboard_user_sessionsUpdateManyMutationInput, discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberInput>\n  }\n\n  export type discussionboard_user_sessionsScalarWhereInput = {\n    AND?: discussionboard_user_sessionsScalarWhereInput | discussionboard_user_sessionsScalarWhereInput[]\n    OR?: discussionboard_user_sessionsScalarWhereInput[]\n    NOT?: discussionboard_user_sessionsScalarWhereInput | discussionboard_user_sessionsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_user_sessions\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_user_sessions\"> | string\n    session_token?: StringFilter<\"discussionboard_user_sessions\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_user_sessions\"> | Date | string\n    expires_at?: DateTimeFilter<\"discussionboard_user_sessions\"> | Date | string\n    revoked_at?: DateTimeNullableFilter<\"discussionboard_user_sessions\"> | Date | string | null\n  }\n\n  export type discussionboard_postsUpsertWithWhereUniqueWithoutAuthorInput = {\n    where: discussionboard_postsWhereUniqueInput\n    update: XOR<discussionboard_postsUpdateWithoutAuthorInput, discussionboard_postsUncheckedUpdateWithoutAuthorInput>\n    create: XOR<discussionboard_postsCreateWithoutAuthorInput, discussionboard_postsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type discussionboard_postsUpdateWithWhereUniqueWithoutAuthorInput = {\n    where: discussionboard_postsWhereUniqueInput\n    data: XOR<discussionboard_postsUpdateWithoutAuthorInput, discussionboard_postsUncheckedUpdateWithoutAuthorInput>\n  }\n\n  export type discussionboard_postsUpdateManyWithWhereWithoutAuthorInput = {\n    where: discussionboard_postsScalarWhereInput\n    data: XOR<discussionboard_postsUpdateManyMutationInput, discussionboard_postsUncheckedUpdateManyWithoutAuthorInput>\n  }\n\n  export type discussionboard_post_editsUpsertWithWhereUniqueWithoutEditorInput = {\n    where: discussionboard_post_editsWhereUniqueInput\n    update: XOR<discussionboard_post_editsUpdateWithoutEditorInput, discussionboard_post_editsUncheckedUpdateWithoutEditorInput>\n    create: XOR<discussionboard_post_editsCreateWithoutEditorInput, discussionboard_post_editsUncheckedCreateWithoutEditorInput>\n  }\n\n  export type discussionboard_post_editsUpdateWithWhereUniqueWithoutEditorInput = {\n    where: discussionboard_post_editsWhereUniqueInput\n    data: XOR<discussionboard_post_editsUpdateWithoutEditorInput, discussionboard_post_editsUncheckedUpdateWithoutEditorInput>\n  }\n\n  export type discussionboard_post_editsUpdateManyWithWhereWithoutEditorInput = {\n    where: discussionboard_post_editsScalarWhereInput\n    data: XOR<discussionboard_post_editsUpdateManyMutationInput, discussionboard_post_editsUncheckedUpdateManyWithoutEditorInput>\n  }\n\n  export type discussionboard_post_editsScalarWhereInput = {\n    AND?: discussionboard_post_editsScalarWhereInput | discussionboard_post_editsScalarWhereInput[]\n    OR?: discussionboard_post_editsScalarWhereInput[]\n    NOT?: discussionboard_post_editsScalarWhereInput | discussionboard_post_editsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    editor_id?: UuidFilter<\"discussionboard_post_edits\"> | string\n    edit_summary?: StringNullableFilter<\"discussionboard_post_edits\"> | string | null\n    edited_at?: DateTimeFilter<\"discussionboard_post_edits\"> | Date | string\n  }\n\n  export type discussionboard_post_likesUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_post_likesWhereUniqueInput\n    update: XOR<discussionboard_post_likesUpdateWithoutUserInput, discussionboard_post_likesUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_post_likesCreateWithoutUserInput, discussionboard_post_likesUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_post_likesUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_post_likesWhereUniqueInput\n    data: XOR<discussionboard_post_likesUpdateWithoutUserInput, discussionboard_post_likesUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_post_likesUpdateManyWithWhereWithoutUserInput = {\n    where: discussionboard_post_likesScalarWhereInput\n    data: XOR<discussionboard_post_likesUpdateManyMutationInput, discussionboard_post_likesUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussionboard_post_likesScalarWhereInput = {\n    AND?: discussionboard_post_likesScalarWhereInput | discussionboard_post_likesScalarWhereInput[]\n    OR?: discussionboard_post_likesScalarWhereInput[]\n    NOT?: discussionboard_post_likesScalarWhereInput | discussionboard_post_likesScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_post_likes\"> | string\n    is_like?: BoolFilter<\"discussionboard_post_likes\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_post_likes\"> | Date | string\n  }\n\n  export type discussionboard_post_viewsUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_post_viewsWhereUniqueInput\n    update: XOR<discussionboard_post_viewsUpdateWithoutUserInput, discussionboard_post_viewsUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_post_viewsCreateWithoutUserInput, discussionboard_post_viewsUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_post_viewsUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_post_viewsWhereUniqueInput\n    data: XOR<discussionboard_post_viewsUpdateWithoutUserInput, discussionboard_post_viewsUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_post_viewsUpdateManyWithWhereWithoutUserInput = {\n    where: discussionboard_post_viewsScalarWhereInput\n    data: XOR<discussionboard_post_viewsUpdateManyMutationInput, discussionboard_post_viewsUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussionboard_post_viewsScalarWhereInput = {\n    AND?: discussionboard_post_viewsScalarWhereInput | discussionboard_post_viewsScalarWhereInput[]\n    OR?: discussionboard_post_viewsScalarWhereInput[]\n    NOT?: discussionboard_post_viewsScalarWhereInput | discussionboard_post_viewsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_post_views\"> | string\n    post_id?: UuidFilter<\"discussionboard_post_views\"> | string\n    user_id?: UuidNullableFilter<\"discussionboard_post_views\"> | string | null\n    session_id?: UuidNullableFilter<\"discussionboard_post_views\"> | string | null\n    viewed_at?: DateTimeFilter<\"discussionboard_post_views\"> | Date | string\n  }\n\n  export type discussionboard_commentsUpsertWithWhereUniqueWithoutAuthorInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    update: XOR<discussionboard_commentsUpdateWithoutAuthorInput, discussionboard_commentsUncheckedUpdateWithoutAuthorInput>\n    create: XOR<discussionboard_commentsCreateWithoutAuthorInput, discussionboard_commentsUncheckedCreateWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsUpdateWithWhereUniqueWithoutAuthorInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    data: XOR<discussionboard_commentsUpdateWithoutAuthorInput, discussionboard_commentsUncheckedUpdateWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithWhereWithoutAuthorInput = {\n    where: discussionboard_commentsScalarWhereInput\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyWithoutAuthorInput>\n  }\n\n  export type discussionboard_commentsScalarWhereInput = {\n    AND?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n    OR?: discussionboard_commentsScalarWhereInput[]\n    NOT?: discussionboard_commentsScalarWhereInput | discussionboard_commentsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_comments\"> | string\n    post_id?: UuidFilter<\"discussionboard_comments\"> | string\n    author_id?: UuidFilter<\"discussionboard_comments\"> | string\n    parent_id?: UuidNullableFilter<\"discussionboard_comments\"> | string | null\n    body?: StringFilter<\"discussionboard_comments\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    updated_at?: DateTimeFilter<\"discussionboard_comments\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"discussionboard_comments\"> | Date | string | null\n  }\n\n  export type discussionboard_comment_likesUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_comment_likesWhereUniqueInput\n    update: XOR<discussionboard_comment_likesUpdateWithoutUserInput, discussionboard_comment_likesUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_comment_likesCreateWithoutUserInput, discussionboard_comment_likesUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_comment_likesUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_comment_likesWhereUniqueInput\n    data: XOR<discussionboard_comment_likesUpdateWithoutUserInput, discussionboard_comment_likesUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_comment_likesUpdateManyWithWhereWithoutUserInput = {\n    where: discussionboard_comment_likesScalarWhereInput\n    data: XOR<discussionboard_comment_likesUpdateManyMutationInput, discussionboard_comment_likesUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussionboard_comment_likesScalarWhereInput = {\n    AND?: discussionboard_comment_likesScalarWhereInput | discussionboard_comment_likesScalarWhereInput[]\n    OR?: discussionboard_comment_likesScalarWhereInput[]\n    NOT?: discussionboard_comment_likesScalarWhereInput | discussionboard_comment_likesScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    comment_id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    user_id?: UuidFilter<\"discussionboard_comment_likes\"> | string\n    is_like?: BoolFilter<\"discussionboard_comment_likes\"> | boolean\n    created_at?: DateTimeFilter<\"discussionboard_comment_likes\"> | Date | string\n  }\n\n  export type discussionboard_comment_editsUpsertWithWhereUniqueWithoutEditorInput = {\n    where: discussionboard_comment_editsWhereUniqueInput\n    update: XOR<discussionboard_comment_editsUpdateWithoutEditorInput, discussionboard_comment_editsUncheckedUpdateWithoutEditorInput>\n    create: XOR<discussionboard_comment_editsCreateWithoutEditorInput, discussionboard_comment_editsUncheckedCreateWithoutEditorInput>\n  }\n\n  export type discussionboard_comment_editsUpdateWithWhereUniqueWithoutEditorInput = {\n    where: discussionboard_comment_editsWhereUniqueInput\n    data: XOR<discussionboard_comment_editsUpdateWithoutEditorInput, discussionboard_comment_editsUncheckedUpdateWithoutEditorInput>\n  }\n\n  export type discussionboard_comment_editsUpdateManyWithWhereWithoutEditorInput = {\n    where: discussionboard_comment_editsScalarWhereInput\n    data: XOR<discussionboard_comment_editsUpdateManyMutationInput, discussionboard_comment_editsUncheckedUpdateManyWithoutEditorInput>\n  }\n\n  export type discussionboard_comment_editsScalarWhereInput = {\n    AND?: discussionboard_comment_editsScalarWhereInput | discussionboard_comment_editsScalarWhereInput[]\n    OR?: discussionboard_comment_editsScalarWhereInput[]\n    NOT?: discussionboard_comment_editsScalarWhereInput | discussionboard_comment_editsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    comment_id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    editor_id?: UuidFilter<\"discussionboard_comment_edits\"> | string\n    edit_summary?: StringNullableFilter<\"discussionboard_comment_edits\"> | string | null\n    edited_at?: DateTimeFilter<\"discussionboard_comment_edits\"> | Date | string\n  }\n\n  export type discussionboard_comment_viewsUpsertWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_comment_viewsWhereUniqueInput\n    update: XOR<discussionboard_comment_viewsUpdateWithoutUserInput, discussionboard_comment_viewsUncheckedUpdateWithoutUserInput>\n    create: XOR<discussionboard_comment_viewsCreateWithoutUserInput, discussionboard_comment_viewsUncheckedCreateWithoutUserInput>\n  }\n\n  export type discussionboard_comment_viewsUpdateWithWhereUniqueWithoutUserInput = {\n    where: discussionboard_comment_viewsWhereUniqueInput\n    data: XOR<discussionboard_comment_viewsUpdateWithoutUserInput, discussionboard_comment_viewsUncheckedUpdateWithoutUserInput>\n  }\n\n  export type discussionboard_comment_viewsUpdateManyWithWhereWithoutUserInput = {\n    where: discussionboard_comment_viewsScalarWhereInput\n    data: XOR<discussionboard_comment_viewsUpdateManyMutationInput, discussionboard_comment_viewsUncheckedUpdateManyWithoutUserInput>\n  }\n\n  export type discussionboard_comment_viewsScalarWhereInput = {\n    AND?: discussionboard_comment_viewsScalarWhereInput | discussionboard_comment_viewsScalarWhereInput[]\n    OR?: discussionboard_comment_viewsScalarWhereInput[]\n    NOT?: discussionboard_comment_viewsScalarWhereInput | discussionboard_comment_viewsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_comment_views\"> | string\n    comment_id?: UuidFilter<\"discussionboard_comment_views\"> | string\n    user_id?: UuidNullableFilter<\"discussionboard_comment_views\"> | string | null\n    session_id?: UuidNullableFilter<\"discussionboard_comment_views\"> | string | null\n    viewed_at?: DateTimeFilter<\"discussionboard_comment_views\"> | Date | string\n  }\n\n  export type discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_reporting_memberInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    update: XOR<discussionboard_reportsUpdateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedUpdateWithoutFk_reports_reporting_memberInput>\n    create: XOR<discussionboard_reportsCreateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_reporting_memberInput>\n  }\n\n  export type discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_reporting_memberInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    data: XOR<discussionboard_reportsUpdateWithoutFk_reports_reporting_memberInput, discussionboard_reportsUncheckedUpdateWithoutFk_reports_reporting_memberInput>\n  }\n\n  export type discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_reporting_memberInput = {\n    where: discussionboard_reportsScalarWhereInput\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberInput>\n  }\n\n  export type discussionboard_reportsScalarWhereInput = {\n    AND?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n    OR?: discussionboard_reportsScalarWhereInput[]\n    NOT?: discussionboard_reportsScalarWhereInput | discussionboard_reportsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_reports\"> | string\n    reporting_member_id?: UuidFilter<\"discussionboard_reports\"> | string\n    target_post_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    target_comment_id?: UuidNullableFilter<\"discussionboard_reports\"> | string | null\n    reason?: StringFilter<\"discussionboard_reports\"> | string\n    status?: StringFilter<\"discussionboard_reports\"> | string\n    created_at?: DateTimeFilter<\"discussionboard_reports\"> | Date | string\n    reviewed_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    resolved_at?: DateTimeNullableFilter<\"discussionboard_reports\"> | Date | string | null\n    moderation_note?: StringNullableFilter<\"discussionboard_reports\"> | string | null\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_actor_memberInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_memberInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_actor_memberInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_actor_memberInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_memberInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_memberInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_actor_memberInput = {\n    where: discussionboard_moderation_actionsScalarWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberInput>\n  }\n\n  export type discussionboard_bansUpsertWithWhereUniqueWithoutFk_bans_target_memberInput = {\n    where: discussionboard_bansWhereUniqueInput\n    update: XOR<discussionboard_bansUpdateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_target_memberInput>\n    create: XOR<discussionboard_bansCreateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedCreateWithoutFk_bans_target_memberInput>\n  }\n\n  export type discussionboard_bansUpdateWithWhereUniqueWithoutFk_bans_target_memberInput = {\n    where: discussionboard_bansWhereUniqueInput\n    data: XOR<discussionboard_bansUpdateWithoutFk_bans_target_memberInput, discussionboard_bansUncheckedUpdateWithoutFk_bans_target_memberInput>\n  }\n\n  export type discussionboard_bansUpdateManyWithWhereWithoutFk_bans_target_memberInput = {\n    where: discussionboard_bansScalarWhereInput\n    data: XOR<discussionboard_bansUpdateManyMutationInput, discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberInput>\n  }\n\n  export type discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_target_memberInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    update: XOR<discussionboard_warningsUpdateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_memberInput>\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_target_memberInput>\n  }\n\n  export type discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_target_memberInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    data: XOR<discussionboard_warningsUpdateWithoutFk_warnings_target_memberInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_memberInput>\n  }\n\n  export type discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_target_memberInput = {\n    where: discussionboard_warningsScalarWhereInput\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberInput>\n  }\n\n  export type discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_actor_memberInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    update: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_memberInput>\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_actor_memberInput>\n  }\n\n  export type discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_actor_memberInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    data: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_memberInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_memberInput>\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_actor_memberInput = {\n    where: discussionboard_audit_logsScalarWhereInput\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberInput>\n  }\n\n  export type discussionboard_notificationsUpsertWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput = {\n    where: discussionboard_notificationsWhereUniqueInput\n    update: XOR<discussionboard_notificationsUpdateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedUpdateWithoutDiscussionboard_notifications_recipientInput>\n    create: XOR<discussionboard_notificationsCreateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedCreateWithoutDiscussionboard_notifications_recipientInput>\n  }\n\n  export type discussionboard_notificationsUpdateWithWhereUniqueWithoutDiscussionboard_notifications_recipientInput = {\n    where: discussionboard_notificationsWhereUniqueInput\n    data: XOR<discussionboard_notificationsUpdateWithoutDiscussionboard_notifications_recipientInput, discussionboard_notificationsUncheckedUpdateWithoutDiscussionboard_notifications_recipientInput>\n  }\n\n  export type discussionboard_notificationsUpdateManyWithWhereWithoutDiscussionboard_notifications_recipientInput = {\n    where: discussionboard_notificationsScalarWhereInput\n    data: XOR<discussionboard_notificationsUpdateManyMutationInput, discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientInput>\n  }\n\n  export type discussionboard_notificationsScalarWhereInput = {\n    AND?: discussionboard_notificationsScalarWhereInput | discussionboard_notificationsScalarWhereInput[]\n    OR?: discussionboard_notificationsScalarWhereInput[]\n    NOT?: discussionboard_notificationsScalarWhereInput | discussionboard_notificationsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_notifications\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_notifications\"> | string\n    type?: StringFilter<\"discussionboard_notifications\"> | string\n    related_entity_id?: UuidNullableFilter<\"discussionboard_notifications\"> | string | null\n    related_entity_type?: StringNullableFilter<\"discussionboard_notifications\"> | string | null\n    content?: StringFilter<\"discussionboard_notifications\"> | string\n    is_read?: BoolFilter<\"discussionboard_notifications\"> | boolean\n    delivered_at?: DateTimeFilter<\"discussionboard_notifications\"> | Date | string\n    expires_at?: DateTimeNullableFilter<\"discussionboard_notifications\"> | Date | string | null\n  }\n\n  export type discussionboard_alert_preferencesUpsertWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput = {\n    where: discussionboard_alert_preferencesWhereUniqueInput\n    update: XOR<discussionboard_alert_preferencesUpdateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedUpdateWithoutDiscussionboard_alert_preferences_ownerInput>\n    create: XOR<discussionboard_alert_preferencesCreateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedCreateWithoutDiscussionboard_alert_preferences_ownerInput>\n  }\n\n  export type discussionboard_alert_preferencesUpdateWithWhereUniqueWithoutDiscussionboard_alert_preferences_ownerInput = {\n    where: discussionboard_alert_preferencesWhereUniqueInput\n    data: XOR<discussionboard_alert_preferencesUpdateWithoutDiscussionboard_alert_preferences_ownerInput, discussionboard_alert_preferencesUncheckedUpdateWithoutDiscussionboard_alert_preferences_ownerInput>\n  }\n\n  export type discussionboard_alert_preferencesUpdateManyWithWhereWithoutDiscussionboard_alert_preferences_ownerInput = {\n    where: discussionboard_alert_preferencesScalarWhereInput\n    data: XOR<discussionboard_alert_preferencesUpdateManyMutationInput, discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerInput>\n  }\n\n  export type discussionboard_alert_preferencesScalarWhereInput = {\n    AND?: discussionboard_alert_preferencesScalarWhereInput | discussionboard_alert_preferencesScalarWhereInput[]\n    OR?: discussionboard_alert_preferencesScalarWhereInput[]\n    NOT?: discussionboard_alert_preferencesScalarWhereInput | discussionboard_alert_preferencesScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_alert_preferences\"> | string\n    discussionboard_member_id?: UuidFilter<\"discussionboard_alert_preferences\"> | string\n    notification_type?: StringFilter<\"discussionboard_alert_preferences\"> | string\n    delivery_channel?: StringFilter<\"discussionboard_alert_preferences\"> | string\n    updated_at?: DateTimeFilter<\"discussionboard_alert_preferences\"> | Date | string\n  }\n\n  export type discussionboard_action_logsUpsertWithWhereUniqueWithoutFk_action_log_actorInput = {\n    where: discussionboard_action_logsWhereUniqueInput\n    update: XOR<discussionboard_action_logsUpdateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedUpdateWithoutFk_action_log_actorInput>\n    create: XOR<discussionboard_action_logsCreateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedCreateWithoutFk_action_log_actorInput>\n  }\n\n  export type discussionboard_action_logsUpdateWithWhereUniqueWithoutFk_action_log_actorInput = {\n    where: discussionboard_action_logsWhereUniqueInput\n    data: XOR<discussionboard_action_logsUpdateWithoutFk_action_log_actorInput, discussionboard_action_logsUncheckedUpdateWithoutFk_action_log_actorInput>\n  }\n\n  export type discussionboard_action_logsUpdateManyWithWhereWithoutFk_action_log_actorInput = {\n    where: discussionboard_action_logsScalarWhereInput\n    data: XOR<discussionboard_action_logsUpdateManyMutationInput, discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorInput>\n  }\n\n  export type discussionboard_action_logsScalarWhereInput = {\n    AND?: discussionboard_action_logsScalarWhereInput | discussionboard_action_logsScalarWhereInput[]\n    OR?: discussionboard_action_logsScalarWhereInput[]\n    NOT?: discussionboard_action_logsScalarWhereInput | discussionboard_action_logsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_action_logs\"> | string\n    actor_id?: UuidFilter<\"discussionboard_action_logs\"> | string\n    event_type?: StringFilter<\"discussionboard_action_logs\"> | string\n    event_target_id?: UuidNullableFilter<\"discussionboard_action_logs\"> | string | null\n    metadata?: StringNullableFilter<\"discussionboard_action_logs\"> | string | null\n    created_at?: DateTimeFilter<\"discussionboard_action_logs\"> | Date | string\n  }\n\n  export type discussionboard_api_access_logsUpsertWithWhereUniqueWithoutFk_access_log_actorInput = {\n    where: discussionboard_api_access_logsWhereUniqueInput\n    update: XOR<discussionboard_api_access_logsUpdateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedUpdateWithoutFk_access_log_actorInput>\n    create: XOR<discussionboard_api_access_logsCreateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedCreateWithoutFk_access_log_actorInput>\n  }\n\n  export type discussionboard_api_access_logsUpdateWithWhereUniqueWithoutFk_access_log_actorInput = {\n    where: discussionboard_api_access_logsWhereUniqueInput\n    data: XOR<discussionboard_api_access_logsUpdateWithoutFk_access_log_actorInput, discussionboard_api_access_logsUncheckedUpdateWithoutFk_access_log_actorInput>\n  }\n\n  export type discussionboard_api_access_logsUpdateManyWithWhereWithoutFk_access_log_actorInput = {\n    where: discussionboard_api_access_logsScalarWhereInput\n    data: XOR<discussionboard_api_access_logsUpdateManyMutationInput, discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorInput>\n  }\n\n  export type discussionboard_api_access_logsScalarWhereInput = {\n    AND?: discussionboard_api_access_logsScalarWhereInput | discussionboard_api_access_logsScalarWhereInput[]\n    OR?: discussionboard_api_access_logsScalarWhereInput[]\n    NOT?: discussionboard_api_access_logsScalarWhereInput | discussionboard_api_access_logsScalarWhereInput[]\n    id?: UuidFilter<\"discussionboard_api_access_logs\"> | string\n    actor_id?: UuidNullableFilter<\"discussionboard_api_access_logs\"> | string | null\n    method?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    endpoint?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    status_code?: IntFilter<\"discussionboard_api_access_logs\"> | number\n    ip_address?: StringFilter<\"discussionboard_api_access_logs\"> | string\n    user_agent?: StringNullableFilter<\"discussionboard_api_access_logs\"> | string | null\n    response_time_ms?: IntFilter<\"discussionboard_api_access_logs\"> | number\n    created_at?: DateTimeFilter<\"discussionboard_api_access_logs\"> | Date | string\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_user_profilesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_profilesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_profilesInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_profilesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_profilesInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_user_profilesInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_profilesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_profilesInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_profilesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_profilesInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_profilesInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_profilesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_profilesInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_user_profilesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_profilesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_user_emailsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_emailsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_emailsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_emailsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_emailsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_user_emailsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_emailsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_emailsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_emailsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_emailsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_emailsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_emailsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_emailsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_user_emailsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_emailsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_user_authsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_authsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_authsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_authsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_authsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_user_authsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_authsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_authsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_authsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_authsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_authsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_authsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_authsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_user_authsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_authsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_user_sessionsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_sessionsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_user_sessionsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_sessionsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_user_sessionsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_sessionsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_user_sessionsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_user_sessionsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_user_sessionsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_sessionsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_user_sessionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_user_sessionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_boardsCreateWithoutDiscussionboard_postsInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    fk_discussionboard_boards_section: discussionboard_sectionsCreateNestedOneWithoutDiscussionboard_boardsInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_board_settings?: discussionboard_board_settingsCreateNestedOneWithoutFk_db_board_settings_boardInput\n  }\n\n  export type discussionboard_boardsUncheckedCreateWithoutDiscussionboard_postsInput = {\n    id: string\n    discussionboard_section_id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_boardInput\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedCreateNestedOneWithoutFk_db_board_settings_boardInput\n  }\n\n  export type discussionboard_boardsCreateOrConnectWithoutDiscussionboard_postsInput = {\n    where: discussionboard_boardsWhereUniqueInput\n    create: XOR<discussionboard_boardsCreateWithoutDiscussionboard_postsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_postsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_postsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_postsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_postsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_postsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_postsInput>\n  }\n\n  export type discussionboard_post_editsCreateWithoutPostInput = {\n    id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n    editor: discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_editsInput\n  }\n\n  export type discussionboard_post_editsUncheckedCreateWithoutPostInput = {\n    id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_post_editsCreateOrConnectWithoutPostInput = {\n    where: discussionboard_post_editsWhereUniqueInput\n    create: XOR<discussionboard_post_editsCreateWithoutPostInput, discussionboard_post_editsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_editsCreateManyPostInputEnvelope = {\n    data: discussionboard_post_editsCreateManyPostInput | discussionboard_post_editsCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_post_likesCreateWithoutPostInput = {\n    id: string\n    is_like: boolean\n    created_at: Date | string\n    user: discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_likesInput\n  }\n\n  export type discussionboard_post_likesUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_likesCreateOrConnectWithoutPostInput = {\n    where: discussionboard_post_likesWhereUniqueInput\n    create: XOR<discussionboard_post_likesCreateWithoutPostInput, discussionboard_post_likesUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_likesCreateManyPostInputEnvelope = {\n    data: discussionboard_post_likesCreateManyPostInput | discussionboard_post_likesCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_post_viewsCreateWithoutPostInput = {\n    id: string\n    session_id?: string | null\n    viewed_at: Date | string\n    user?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_post_viewsInput\n  }\n\n  export type discussionboard_post_viewsUncheckedCreateWithoutPostInput = {\n    id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_post_viewsCreateOrConnectWithoutPostInput = {\n    where: discussionboard_post_viewsWhereUniqueInput\n    create: XOR<discussionboard_post_viewsCreateWithoutPostInput, discussionboard_post_viewsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_viewsCreateManyPostInputEnvelope = {\n    data: discussionboard_post_viewsCreateManyPostInput | discussionboard_post_viewsCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_commentsCreateWithoutPostInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutPostInput = {\n    id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutPostInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_commentsCreateManyPostInputEnvelope = {\n    data: discussionboard_commentsCreateManyPostInput | discussionboard_commentsCreateManyPostInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_reportsCreateWithoutFk_reports_target_postInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_reporting_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput = {\n    id: string\n    reporting_member_id: string\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutFk_reports_target_postInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput>\n  }\n\n  export type discussionboard_reportsCreateManyFk_reports_target_postInputEnvelope = {\n    data: discussionboard_reportsCreateManyFk_reports_target_postInput | discussionboard_reportsCreateManyFk_reports_target_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_postInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInputEnvelope = {\n    data: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInput | discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_boardsUpsertWithoutDiscussionboard_postsInput = {\n    update: XOR<discussionboard_boardsUpdateWithoutDiscussionboard_postsInput, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_postsInput>\n    create: XOR<discussionboard_boardsCreateWithoutDiscussionboard_postsInput, discussionboard_boardsUncheckedCreateWithoutDiscussionboard_postsInput>\n    where?: discussionboard_boardsWhereInput\n  }\n\n  export type discussionboard_boardsUpdateToOneWithWhereWithoutDiscussionboard_postsInput = {\n    where?: discussionboard_boardsWhereInput\n    data: XOR<discussionboard_boardsUpdateWithoutDiscussionboard_postsInput, discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_postsInput>\n  }\n\n  export type discussionboard_boardsUpdateWithoutDiscussionboard_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_discussionboard_boards_section?: discussionboard_sectionsUpdateOneRequiredWithoutDiscussionboard_boardsNestedInput\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUpdateOneWithoutFk_db_board_settings_boardNestedInput\n  }\n\n  export type discussionboard_boardsUncheckedUpdateWithoutDiscussionboard_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_section_id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedUpdateOneWithoutFk_db_board_settings_boardNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_postsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_postsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_postsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_postsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_postsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_postsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_postsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_postsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_postsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_post_editsUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_editsWhereUniqueInput\n    update: XOR<discussionboard_post_editsUpdateWithoutPostInput, discussionboard_post_editsUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_post_editsCreateWithoutPostInput, discussionboard_post_editsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_editsUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_editsWhereUniqueInput\n    data: XOR<discussionboard_post_editsUpdateWithoutPostInput, discussionboard_post_editsUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_post_editsUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_post_editsScalarWhereInput\n    data: XOR<discussionboard_post_editsUpdateManyMutationInput, discussionboard_post_editsUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_post_likesUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_likesWhereUniqueInput\n    update: XOR<discussionboard_post_likesUpdateWithoutPostInput, discussionboard_post_likesUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_post_likesCreateWithoutPostInput, discussionboard_post_likesUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_likesUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_likesWhereUniqueInput\n    data: XOR<discussionboard_post_likesUpdateWithoutPostInput, discussionboard_post_likesUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_post_likesUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_post_likesScalarWhereInput\n    data: XOR<discussionboard_post_likesUpdateManyMutationInput, discussionboard_post_likesUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_post_viewsUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_viewsWhereUniqueInput\n    update: XOR<discussionboard_post_viewsUpdateWithoutPostInput, discussionboard_post_viewsUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_post_viewsCreateWithoutPostInput, discussionboard_post_viewsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_post_viewsUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_post_viewsWhereUniqueInput\n    data: XOR<discussionboard_post_viewsUpdateWithoutPostInput, discussionboard_post_viewsUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_post_viewsUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_post_viewsScalarWhereInput\n    data: XOR<discussionboard_post_viewsUpdateManyMutationInput, discussionboard_post_viewsUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_commentsUpsertWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    update: XOR<discussionboard_commentsUpdateWithoutPostInput, discussionboard_commentsUncheckedUpdateWithoutPostInput>\n    create: XOR<discussionboard_commentsCreateWithoutPostInput, discussionboard_commentsUncheckedCreateWithoutPostInput>\n  }\n\n  export type discussionboard_commentsUpdateWithWhereUniqueWithoutPostInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    data: XOR<discussionboard_commentsUpdateWithoutPostInput, discussionboard_commentsUncheckedUpdateWithoutPostInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithWhereWithoutPostInput = {\n    where: discussionboard_commentsScalarWhereInput\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyWithoutPostInput>\n  }\n\n  export type discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_postInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    update: XOR<discussionboard_reportsUpdateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedUpdateWithoutFk_reports_target_postInput>\n    create: XOR<discussionboard_reportsCreateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_postInput>\n  }\n\n  export type discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_postInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    data: XOR<discussionboard_reportsUpdateWithoutFk_reports_target_postInput, discussionboard_reportsUncheckedUpdateWithoutFk_reports_target_postInput>\n  }\n\n  export type discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_postInput = {\n    where: discussionboard_reportsScalarWhereInput\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postInput>\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_postInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_target_postInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_postInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_postInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_target_postInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_target_postInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_postInput = {\n    where: discussionboard_moderation_actionsScalarWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postInput>\n  }\n\n  export type discussionboard_postsCreateWithoutDiscussionboard_post_editsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_editsInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_editsInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_editsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_editsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_post_editsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_editsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_editsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_editsInput>\n  }\n\n  export type discussionboard_postsUpsertWithoutDiscussionboard_post_editsInput = {\n    update: XOR<discussionboard_postsUpdateWithoutDiscussionboard_post_editsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_editsInput>\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_editsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_editsInput>\n    where?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_post_editsInput = {\n    where?: discussionboard_postsWhereInput\n    data: XOR<discussionboard_postsUpdateWithoutDiscussionboard_post_editsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_editsInput>\n  }\n\n  export type discussionboard_postsUpdateWithoutDiscussionboard_post_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_post_editsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_post_editsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_editsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_editsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_post_editsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_post_editsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_editsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_post_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_postsCreateWithoutDiscussionboard_post_likesInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_likesInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_likesInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_likesInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_likesInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_post_likesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_likesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_likesInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_likesInput>\n  }\n\n  export type discussionboard_postsUpsertWithoutDiscussionboard_post_likesInput = {\n    update: XOR<discussionboard_postsUpdateWithoutDiscussionboard_post_likesInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_likesInput>\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_likesInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_likesInput>\n    where?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_post_likesInput = {\n    where?: discussionboard_postsWhereInput\n    data: XOR<discussionboard_postsUpdateWithoutDiscussionboard_post_likesInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_likesInput>\n  }\n\n  export type discussionboard_postsUpdateWithoutDiscussionboard_post_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_post_likesInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_post_likesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_likesInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_likesInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_post_likesInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_post_likesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_likesInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_post_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_postsCreateWithoutDiscussionboard_post_viewsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_viewsInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutDiscussionboard_post_viewsInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_viewsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_post_viewsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_viewsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_post_viewsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n  }\n\n  export type discussionboard_postsUpsertWithoutDiscussionboard_post_viewsInput = {\n    update: XOR<discussionboard_postsUpdateWithoutDiscussionboard_post_viewsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_viewsInput>\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_post_viewsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n    where?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_post_viewsInput = {\n    where?: discussionboard_postsWhereInput\n    data: XOR<discussionboard_postsUpdateWithoutDiscussionboard_post_viewsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_viewsInput>\n  }\n\n  export type discussionboard_postsUpdateWithoutDiscussionboard_post_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutDiscussionboard_post_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_post_viewsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_post_viewsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_viewsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_post_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_post_viewsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_post_viewsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_post_viewsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_viewsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_post_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_post_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_postsCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutDiscussionboard_commentsInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_commentsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_commentsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_commentsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_commentsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutRecursiveInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutRecursiveInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutRecursiveInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutParentInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutParentInput = {\n    id: string\n    post_id: string\n    author_id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutParentInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutParentInput, discussionboard_commentsUncheckedCreateWithoutParentInput>\n  }\n\n  export type discussionboard_commentsCreateManyParentInputEnvelope = {\n    data: discussionboard_commentsCreateManyParentInput | discussionboard_commentsCreateManyParentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_comment_likesCreateWithoutCommentInput = {\n    id: string\n    is_like: boolean\n    created_at: Date | string\n    user: discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_likesInput\n  }\n\n  export type discussionboard_comment_likesUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_comment_likesCreateOrConnectWithoutCommentInput = {\n    where: discussionboard_comment_likesWhereUniqueInput\n    create: XOR<discussionboard_comment_likesCreateWithoutCommentInput, discussionboard_comment_likesUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_likesCreateManyCommentInputEnvelope = {\n    data: discussionboard_comment_likesCreateManyCommentInput | discussionboard_comment_likesCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_comment_editsCreateWithoutCommentInput = {\n    id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n    editor: discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_editsInput\n  }\n\n  export type discussionboard_comment_editsUncheckedCreateWithoutCommentInput = {\n    id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_comment_editsCreateOrConnectWithoutCommentInput = {\n    where: discussionboard_comment_editsWhereUniqueInput\n    create: XOR<discussionboard_comment_editsCreateWithoutCommentInput, discussionboard_comment_editsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_editsCreateManyCommentInputEnvelope = {\n    data: discussionboard_comment_editsCreateManyCommentInput | discussionboard_comment_editsCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_comment_viewsCreateWithoutCommentInput = {\n    id: string\n    session_id?: string | null\n    viewed_at: Date | string\n    user?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_comment_viewsInput\n  }\n\n  export type discussionboard_comment_viewsUncheckedCreateWithoutCommentInput = {\n    id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_comment_viewsCreateOrConnectWithoutCommentInput = {\n    where: discussionboard_comment_viewsWhereUniqueInput\n    create: XOR<discussionboard_comment_viewsCreateWithoutCommentInput, discussionboard_comment_viewsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_viewsCreateManyCommentInputEnvelope = {\n    data: discussionboard_comment_viewsCreateManyCommentInput | discussionboard_comment_viewsCreateManyCommentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_reportsCreateWithoutFk_reports_target_commentInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_reporting_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutFk_reports_target_commentInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput>\n  }\n\n  export type discussionboard_reportsCreateManyFk_reports_target_commentInputEnvelope = {\n    data: discussionboard_reportsCreateManyFk_reports_target_commentInput | discussionboard_reportsCreateManyFk_reports_target_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_target_commentInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInputEnvelope = {\n    data: discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInput | discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_postsUpsertWithoutDiscussionboard_commentsInput = {\n    update: XOR<discussionboard_postsUpdateWithoutDiscussionboard_commentsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_commentsInput>\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_commentsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_commentsInput>\n    where?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_commentsInput = {\n    where?: discussionboard_postsWhereInput\n    data: XOR<discussionboard_postsUpdateWithoutDiscussionboard_commentsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_postsUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_commentsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_commentsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_commentsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_commentsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_commentsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_commentsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_commentsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_commentsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_commentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutRecursiveInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutRecursiveInput, discussionboard_commentsUncheckedUpdateWithoutRecursiveInput>\n    create: XOR<discussionboard_commentsCreateWithoutRecursiveInput, discussionboard_commentsUncheckedCreateWithoutRecursiveInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutRecursiveInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutRecursiveInput, discussionboard_commentsUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithWhereUniqueWithoutParentInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    update: XOR<discussionboard_commentsUpdateWithoutParentInput, discussionboard_commentsUncheckedUpdateWithoutParentInput>\n    create: XOR<discussionboard_commentsCreateWithoutParentInput, discussionboard_commentsUncheckedCreateWithoutParentInput>\n  }\n\n  export type discussionboard_commentsUpdateWithWhereUniqueWithoutParentInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    data: XOR<discussionboard_commentsUpdateWithoutParentInput, discussionboard_commentsUncheckedUpdateWithoutParentInput>\n  }\n\n  export type discussionboard_commentsUpdateManyWithWhereWithoutParentInput = {\n    where: discussionboard_commentsScalarWhereInput\n    data: XOR<discussionboard_commentsUpdateManyMutationInput, discussionboard_commentsUncheckedUpdateManyWithoutParentInput>\n  }\n\n  export type discussionboard_comment_likesUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_comment_likesWhereUniqueInput\n    update: XOR<discussionboard_comment_likesUpdateWithoutCommentInput, discussionboard_comment_likesUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussionboard_comment_likesCreateWithoutCommentInput, discussionboard_comment_likesUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_likesUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_comment_likesWhereUniqueInput\n    data: XOR<discussionboard_comment_likesUpdateWithoutCommentInput, discussionboard_comment_likesUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_likesUpdateManyWithWhereWithoutCommentInput = {\n    where: discussionboard_comment_likesScalarWhereInput\n    data: XOR<discussionboard_comment_likesUpdateManyMutationInput, discussionboard_comment_likesUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_editsUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_comment_editsWhereUniqueInput\n    update: XOR<discussionboard_comment_editsUpdateWithoutCommentInput, discussionboard_comment_editsUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussionboard_comment_editsCreateWithoutCommentInput, discussionboard_comment_editsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_editsUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_comment_editsWhereUniqueInput\n    data: XOR<discussionboard_comment_editsUpdateWithoutCommentInput, discussionboard_comment_editsUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_editsUpdateManyWithWhereWithoutCommentInput = {\n    where: discussionboard_comment_editsScalarWhereInput\n    data: XOR<discussionboard_comment_editsUpdateManyMutationInput, discussionboard_comment_editsUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_viewsUpsertWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_comment_viewsWhereUniqueInput\n    update: XOR<discussionboard_comment_viewsUpdateWithoutCommentInput, discussionboard_comment_viewsUncheckedUpdateWithoutCommentInput>\n    create: XOR<discussionboard_comment_viewsCreateWithoutCommentInput, discussionboard_comment_viewsUncheckedCreateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_viewsUpdateWithWhereUniqueWithoutCommentInput = {\n    where: discussionboard_comment_viewsWhereUniqueInput\n    data: XOR<discussionboard_comment_viewsUpdateWithoutCommentInput, discussionboard_comment_viewsUncheckedUpdateWithoutCommentInput>\n  }\n\n  export type discussionboard_comment_viewsUpdateManyWithWhereWithoutCommentInput = {\n    where: discussionboard_comment_viewsScalarWhereInput\n    data: XOR<discussionboard_comment_viewsUpdateManyMutationInput, discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentInput>\n  }\n\n  export type discussionboard_reportsUpsertWithWhereUniqueWithoutFk_reports_target_commentInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    update: XOR<discussionboard_reportsUpdateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedUpdateWithoutFk_reports_target_commentInput>\n    create: XOR<discussionboard_reportsCreateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedCreateWithoutFk_reports_target_commentInput>\n  }\n\n  export type discussionboard_reportsUpdateWithWhereUniqueWithoutFk_reports_target_commentInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    data: XOR<discussionboard_reportsUpdateWithoutFk_reports_target_commentInput, discussionboard_reportsUncheckedUpdateWithoutFk_reports_target_commentInput>\n  }\n\n  export type discussionboard_reportsUpdateManyWithWhereWithoutFk_reports_target_commentInput = {\n    where: discussionboard_reportsScalarWhereInput\n    data: XOR<discussionboard_reportsUpdateManyMutationInput, discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentInput>\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_target_commentInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_target_commentInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_target_commentInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_target_commentInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_target_commentInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_target_commentInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_target_commentInput = {\n    where: discussionboard_moderation_actionsScalarWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_comment_likesInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_likesInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_likesInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_comment_likesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_likesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_likesInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_comment_likesInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_likesInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_comment_likesInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_comment_likesInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_likesInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_comment_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_comment_likesInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_comment_likesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_likesInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_likesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_likesInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_comment_likesInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_comment_likesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_likesInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_comment_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_likesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_comment_editsInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_editsInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_editsInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_comment_editsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_editsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_editsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_comment_editsInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_editsInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_comment_editsInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_comment_editsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_editsInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_comment_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_comment_editsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_comment_editsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_editsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_editsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_editsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_comment_editsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_comment_editsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_editsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_comment_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_editsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_comment_viewsInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_viewsInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_comment_viewsInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_comment_viewsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_viewsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_comment_viewsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_comment_viewsInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_viewsInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_comment_viewsInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_comment_viewsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_viewsInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_comment_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_comment_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_comment_viewsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_viewsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_comment_viewsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_comment_viewsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_comment_viewsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_viewsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_comment_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_comment_viewsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_reportsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_reportsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_postsCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutDiscussionboard_reportsInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_reportsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_reportsInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_moderation_actionInput\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutFk_moderationactions_related_reportInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInputEnvelope = {\n    data: discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInput | discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_warningsCreateWithoutFk_warnings_related_reportInput = {\n    id: string\n    reason: string\n    created_at: Date | string\n    fk_warnings_target_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_target_admin_idInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_target_moderator_idInput\n    fk_warnings_target_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_warningsInput\n    fk_warnings_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_admin_idInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_warnings_of_actor_moderator_idInput\n  }\n\n  export type discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateOrConnectWithoutFk_warnings_related_reportInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput>\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_related_reportInputEnvelope = {\n    data: discussionboard_warningsCreateManyFk_warnings_related_reportInput | discussionboard_warningsCreateManyFk_warnings_related_reportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput = {\n    id: string\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_reportInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput>\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInputEnvelope = {\n    data: discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInput | discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_reportsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_reportsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_reportsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_reportsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_reportsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_reportsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_reportsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_postsUpsertWithoutDiscussionboard_reportsInput = {\n    update: XOR<discussionboard_postsUpdateWithoutDiscussionboard_reportsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_reportsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    where?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_reportsInput = {\n    where?: discussionboard_postsWhereInput\n    data: XOR<discussionboard_postsUpdateWithoutDiscussionboard_reportsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_postsUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_reportsInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_reportsInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_reportsInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_reportsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithWhereUniqueWithoutFk_moderationactions_related_reportInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_related_reportInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedCreateWithoutFk_moderationactions_related_reportInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithWhereUniqueWithoutFk_moderationactions_related_reportInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_related_reportInput, discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_related_reportInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateManyWithWhereWithoutFk_moderationactions_related_reportInput = {\n    where: discussionboard_moderation_actionsScalarWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateManyMutationInput, discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportInput>\n  }\n\n  export type discussionboard_warningsUpsertWithWhereUniqueWithoutFk_warnings_related_reportInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    update: XOR<discussionboard_warningsUpdateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_related_reportInput>\n    create: XOR<discussionboard_warningsCreateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedCreateWithoutFk_warnings_related_reportInput>\n  }\n\n  export type discussionboard_warningsUpdateWithWhereUniqueWithoutFk_warnings_related_reportInput = {\n    where: discussionboard_warningsWhereUniqueInput\n    data: XOR<discussionboard_warningsUpdateWithoutFk_warnings_related_reportInput, discussionboard_warningsUncheckedUpdateWithoutFk_warnings_related_reportInput>\n  }\n\n  export type discussionboard_warningsUpdateManyWithWhereWithoutFk_warnings_related_reportInput = {\n    where: discussionboard_warningsScalarWhereInput\n    data: XOR<discussionboard_warningsUpdateManyMutationInput, discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportInput>\n  }\n\n  export type discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_reportInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    update: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_related_reportInput>\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_reportInput>\n  }\n\n  export type discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_reportInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    data: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_related_reportInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_related_reportInput>\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_reportInput = {\n    where: discussionboard_audit_logsScalarWhereInput\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportInput>\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_moderation_actionsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_reportsCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_reporting_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_postsCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    board: discussionboard_boardsCreateNestedOneWithoutDiscussionboard_postsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_postsInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_postInput\n  }\n\n  export type discussionboard_postsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    board_id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutPostInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_postInput\n  }\n\n  export type discussionboard_postsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput = {\n    where: discussionboard_postsWhereUniqueInput\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    post: discussionboard_postsCreateNestedOneWithoutDiscussionboard_commentsInput\n    author: discussionboard_membersCreateNestedOneWithoutDiscussionboard_commentsInput\n    parent?: discussionboard_commentsCreateNestedOneWithoutRecursiveInput\n    recursive?: discussionboard_commentsCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_target_commentInput\n  }\n\n  export type discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput = {\n    id: string\n    post_id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    recursive?: discussionboard_commentsUncheckedCreateNestedManyWithoutParentInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutCommentInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_target_commentInput\n  }\n\n  export type discussionboard_commentsCreateOrConnectWithoutDiscussionboard_moderation_actionsInput = {\n    where: discussionboard_commentsWhereUniqueInput\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput = {\n    id: string\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_audit_logsInput\n    fk_auditlogs_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_audit_logsInput\n  }\n\n  export type discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateOrConnectWithoutFk_auditlogs_related_moderation_actionInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput>\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInputEnvelope = {\n    data: discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInput | discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_moderation_actionsInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_moderation_actionsInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_moderation_actionsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_reportsUpsertWithoutDiscussionboard_moderation_actionsInput = {\n    update: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    where?: discussionboard_reportsWhereInput\n  }\n\n  export type discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput = {\n    where?: discussionboard_reportsWhereInput\n    data: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_reportsUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_reporting_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_postsUpsertWithoutDiscussionboard_moderation_actionsInput = {\n    update: XOR<discussionboard_postsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n    create: XOR<discussionboard_postsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    where?: discussionboard_postsWhereInput\n  }\n\n  export type discussionboard_postsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput = {\n    where?: discussionboard_postsWhereInput\n    data: XOR<discussionboard_postsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_postsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_postsUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n  }\n\n  export type discussionboard_commentsUpsertWithoutDiscussionboard_moderation_actionsInput = {\n    update: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n    create: XOR<discussionboard_commentsCreateWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUncheckedCreateWithoutDiscussionboard_moderation_actionsInput>\n    where?: discussionboard_commentsWhereInput\n  }\n\n  export type discussionboard_commentsUpdateToOneWithWhereWithoutDiscussionboard_moderation_actionsInput = {\n    where?: discussionboard_commentsWhereInput\n    data: XOR<discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionsInput, discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput>\n  }\n\n  export type discussionboard_commentsUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutDiscussionboard_moderation_actionsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n  }\n\n  export type discussionboard_audit_logsUpsertWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    update: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_related_moderation_actionInput>\n    create: XOR<discussionboard_audit_logsCreateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedCreateWithoutFk_auditlogs_related_moderation_actionInput>\n  }\n\n  export type discussionboard_audit_logsUpdateWithWhereUniqueWithoutFk_auditlogs_related_moderation_actionInput = {\n    where: discussionboard_audit_logsWhereUniqueInput\n    data: XOR<discussionboard_audit_logsUpdateWithoutFk_auditlogs_related_moderation_actionInput, discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_related_moderation_actionInput>\n  }\n\n  export type discussionboard_audit_logsUpdateManyWithWhereWithoutFk_auditlogs_related_moderation_actionInput = {\n    where: discussionboard_audit_logsScalarWhereInput\n    data: XOR<discussionboard_audit_logsUpdateManyMutationInput, discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionInput>\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_target_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_bansInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_bansInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_bansInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_bansInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_bansInput>\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_target_admin_idInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_target_admin_idInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_target_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_target_admin_idInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_target_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_target_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_bansInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_bansInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_bansInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_bansInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_bansInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_bansInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_bansInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_bansInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_bansInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_bansInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_bans_of_actor_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_warningsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_warningsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_warningsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_warningsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_warningsInput>\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n  }\n\n  export type discussionboard_reportsCreateWithoutDiscussionboard_warningsInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_reporting_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutDiscussionboard_warningsInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_related_reportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutDiscussionboard_warningsInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_warningsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_warningsInput>\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_target_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_warningsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_warningsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_warningsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_warningsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_warningsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_warningsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_warningsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_warningsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_warningsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_warningsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_admin_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_warnings_of_actor_moderator_idInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_reportsUpsertWithoutDiscussionboard_warningsInput = {\n    update: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_warningsInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_warningsInput>\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_warningsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_warningsInput>\n    where?: discussionboard_reportsWhereInput\n  }\n\n  export type discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_warningsInput = {\n    where?: discussionboard_reportsWhereInput\n    data: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_warningsInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_warningsInput>\n  }\n\n  export type discussionboard_reportsUpdateWithoutDiscussionboard_warningsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_reporting_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_warningsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_adminsCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_admins_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_adminsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_adminInput\n  }\n\n  export type discussionboard_adminsUncheckedCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_adminInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_adminInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_adminInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_adminInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_adminInput\n  }\n\n  export type discussionboard_adminsCreateOrConnectWithoutDiscussionboard_audit_logsInput = {\n    where: discussionboard_adminsWhereUniqueInput\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_moderatorsCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderators_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderatorsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    discussionboard_member_id: string\n    granted_at: Date | string\n    revoked_at?: Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_moderatorInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_moderatorInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_actor_moderatorInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_moderatorInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_actor_moderatorInput\n  }\n\n  export type discussionboard_moderatorsCreateOrConnectWithoutDiscussionboard_audit_logsInput = {\n    where: discussionboard_moderatorsWhereUniqueInput\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_audit_logsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_audit_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_reportsCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    fk_reports_reporting_member: discussionboard_membersCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_reportsInput\n    fk_reports_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_reportsInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_related_reportInput\n  }\n\n  export type discussionboard_reportsUncheckedCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_related_reportInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_related_reportInput\n  }\n\n  export type discussionboard_reportsCreateOrConnectWithoutDiscussionboard_audit_logsInput = {\n    where: discussionboard_reportsWhereUniqueInput\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_moderation_actionsCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_actor_member?: discussionboard_membersCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_related_report?: discussionboard_reportsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_post?: discussionboard_postsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n    fk_moderationactions_target_comment?: discussionboard_commentsCreateNestedOneWithoutDiscussionboard_moderation_actionsInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedCreateWithoutDiscussionboard_audit_logsInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionsCreateOrConnectWithoutDiscussionboard_audit_logsInput = {\n    where: discussionboard_moderation_actionsWhereUniqueInput\n    create: XOR<discussionboard_moderation_actionsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_adminsUpsertWithoutDiscussionboard_audit_logsInput = {\n    update: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n    create: XOR<discussionboard_adminsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    where?: discussionboard_adminsWhereInput\n  }\n\n  export type discussionboard_adminsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput = {\n    where?: discussionboard_adminsWhereInput\n    data: XOR<discussionboard_adminsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_adminsUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_admins_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_adminsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_adminNestedInput\n  }\n\n  export type discussionboard_adminsUncheckedUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminNestedInput\n    discussionboard_bans_of_target_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminNestedInput\n    discussionboard_bans_of_actor_admin_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminNestedInput\n    discussionboard_warnings_of_target_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminNestedInput\n    discussionboard_warnings_of_actor_admin_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminNestedInput\n  }\n\n  export type discussionboard_moderatorsUpsertWithoutDiscussionboard_audit_logsInput = {\n    update: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n    create: XOR<discussionboard_moderatorsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    where?: discussionboard_moderatorsWhereInput\n  }\n\n  export type discussionboard_moderatorsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput = {\n    where?: discussionboard_moderatorsWhereInput\n    data: XOR<discussionboard_moderatorsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_moderatorsUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderators_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_moderatorsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_moderatorsUncheckedUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    granted_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorNestedInput\n    discussionboard_bans_of_target_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorNestedInput\n    discussionboard_bans_of_actor_moderator_id?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorNestedInput\n    discussionboard_warnings_of_target_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorNestedInput\n    discussionboard_warnings_of_actor_moderator_id?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorNestedInput\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_audit_logsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_audit_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_reportsUpsertWithoutDiscussionboard_audit_logsInput = {\n    update: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n    create: XOR<discussionboard_reportsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    where?: discussionboard_reportsWhereInput\n  }\n\n  export type discussionboard_reportsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput = {\n    where?: discussionboard_reportsWhereInput\n    data: XOR<discussionboard_reportsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_reportsUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_reporting_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUpsertWithoutDiscussionboard_audit_logsInput = {\n    update: XOR<discussionboard_moderation_actionsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n    create: XOR<discussionboard_moderation_actionsCreateWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUncheckedCreateWithoutDiscussionboard_audit_logsInput>\n    where?: discussionboard_moderation_actionsWhereInput\n  }\n\n  export type discussionboard_moderation_actionsUpdateToOneWithWhereWithoutDiscussionboard_audit_logsInput = {\n    where?: discussionboard_moderation_actionsWhereInput\n    data: XOR<discussionboard_moderation_actionsUpdateWithoutDiscussionboard_audit_logsInput, discussionboard_moderation_actionsUncheckedUpdateWithoutDiscussionboard_audit_logsInput>\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutDiscussionboard_audit_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_notificationsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_notificationsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_notificationsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_notificationsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notificationsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_notificationsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_notificationsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notificationsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_notificationsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_notificationsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_notificationsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_notificationsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notificationsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_alert_preferencesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_alert_preferencesInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_alert_preferencesInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_alert_preferencesInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_alert_preferencesInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_alert_preferencesInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_alert_preferencesInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_alert_preferencesInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_alert_preferencesInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_alert_preferencesInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_alert_preferencesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_alert_preferencesInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_action_logsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_action_logsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedCreateNestedManyWithoutFk_access_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_action_logsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_action_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_action_logsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_action_logsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_action_logsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_action_logsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_action_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_action_logsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_action_logsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_action_logsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_action_logsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_action_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_action_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_api_access_logs?: discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorNestedInput\n  }\n\n  export type discussionboard_membersCreateWithoutDiscussionboard_api_access_logsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsCreateNestedManyWithoutFk_action_log_actorInput\n  }\n\n  export type discussionboard_membersUncheckedCreateWithoutDiscussionboard_api_access_logsInput = {\n    id: string\n    username: string\n    password_hash: string\n    created_at: Date | string\n    activated_at?: Date | string | null\n    deactivated_at?: Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedCreateNestedManyWithoutFk_db_board_subs_memberInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedCreateNestedOneWithoutFk_db_notification_settings_memberInput\n    discussionboard_admins?: discussionboard_adminsUncheckedCreateNestedOneWithoutDiscussionboard_admins_memberInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedCreateNestedOneWithoutDiscussionboard_moderators_memberInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedCreateNestedOneWithoutDiscussionboard_user_profiles_memberInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedCreateNestedManyWithoutDiscussionboard_user_emails_memberInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedCreateNestedManyWithoutDiscussionboard_user_auths_memberInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedCreateNestedManyWithoutDiscussionboard_user_sessions_memberInput\n    discussionboard_posts?: discussionboard_postsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comments?: discussionboard_commentsUncheckedCreateNestedManyWithoutAuthorInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedCreateNestedManyWithoutEditorInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedCreateNestedManyWithoutUserInput\n    discussionboard_reports?: discussionboard_reportsUncheckedCreateNestedManyWithoutFk_reports_reporting_memberInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedCreateNestedManyWithoutFk_moderationactions_actor_memberInput\n    discussionboard_bans?: discussionboard_bansUncheckedCreateNestedManyWithoutFk_bans_target_memberInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedCreateNestedManyWithoutFk_warnings_target_memberInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedCreateNestedManyWithoutFk_auditlogs_actor_memberInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedCreateNestedManyWithoutDiscussionboard_notifications_recipientInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedCreateNestedManyWithoutDiscussionboard_alert_preferences_ownerInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedCreateNestedManyWithoutFk_action_log_actorInput\n  }\n\n  export type discussionboard_membersCreateOrConnectWithoutDiscussionboard_api_access_logsInput = {\n    where: discussionboard_membersWhereUniqueInput\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_api_access_logsInput>\n  }\n\n  export type discussionboard_membersUpsertWithoutDiscussionboard_api_access_logsInput = {\n    update: XOR<discussionboard_membersUpdateWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_api_access_logsInput>\n    create: XOR<discussionboard_membersCreateWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUncheckedCreateWithoutDiscussionboard_api_access_logsInput>\n    where?: discussionboard_membersWhereInput\n  }\n\n  export type discussionboard_membersUpdateToOneWithWhereWithoutDiscussionboard_api_access_logsInput = {\n    where?: discussionboard_membersWhereInput\n    data: XOR<discussionboard_membersUpdateWithoutDiscussionboard_api_access_logsInput, discussionboard_membersUncheckedUpdateWithoutDiscussionboard_api_access_logsInput>\n  }\n\n  export type discussionboard_membersUpdateWithoutDiscussionboard_api_access_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUpdateManyWithoutFk_action_log_actorNestedInput\n  }\n\n  export type discussionboard_membersUncheckedUpdateWithoutDiscussionboard_api_access_logsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    username?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    activated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    deactivated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberNestedInput\n    discussionboard_notification_settings?: discussionboard_notification_settingsUncheckedUpdateOneWithoutFk_db_notification_settings_memberNestedInput\n    discussionboard_admins?: discussionboard_adminsUncheckedUpdateOneWithoutDiscussionboard_admins_memberNestedInput\n    discussionboard_moderators?: discussionboard_moderatorsUncheckedUpdateOneWithoutDiscussionboard_moderators_memberNestedInput\n    discussionboard_user_profiles?: discussionboard_user_profilesUncheckedUpdateOneWithoutDiscussionboard_user_profiles_memberNestedInput\n    discussionboard_user_emails?: discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberNestedInput\n    discussionboard_user_auths?: discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberNestedInput\n    discussionboard_user_sessions?: discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutAuthorNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutEditorNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutUserNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberNestedInput\n    discussionboard_bans?: discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberNestedInput\n    discussionboard_notifications?: discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientNestedInput\n    discussionboard_alert_preferences?: discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerNestedInput\n    discussionboard_action_logs?: discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorNestedInput\n  }\n\n  export type discussionboard_boardsCreateManyFk_discussionboard_boards_sectionInput = {\n    id: string\n    name: string\n    description?: string | null\n    rules?: string | null\n    is_active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_boardsUpdateWithoutFk_discussionboard_boards_sectionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUpdateOneWithoutFk_db_board_settings_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_boardsUncheckedUpdateWithoutFk_discussionboard_boards_sectionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_board_subscriptions?: discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardNestedInput\n    discussionboard_board_settings?: discussionboard_board_settingsUncheckedUpdateOneWithoutFk_db_board_settings_boardNestedInput\n    discussionboard_posts?: discussionboard_postsUncheckedUpdateManyWithoutBoardNestedInput\n  }\n\n  export type discussionboard_boardsUncheckedUpdateManyWithoutFk_discussionboard_boards_sectionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    rules?: NullableStringFieldUpdateOperationsInput | string | null\n    is_active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsCreateManyFk_db_board_subs_boardInput = {\n    id: string\n    discussionboard_member_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_postsCreateManyBoardInput = {\n    id: string\n    author_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_board_subscriptionsUpdateWithoutFk_db_board_subs_boardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_db_board_subs_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_board_subscriptionsNestedInput\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateWithoutFk_db_board_subs_boardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_boardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_member_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_postsUpdateWithoutBoardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutBoardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateManyWithoutBoardInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_adminInput = {\n    id: string\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_target_adminInput = {\n    id: string\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_actor_adminInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_target_adminInput = {\n    id: string\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_actor_adminInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_actor_adminInput = {\n    id: string\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUpdateWithoutFk_bans_target_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_bans_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_target_moderator_idNestedInput\n    fk_bans_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_bansNestedInput\n    fk_bans_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_actor_admin_idNestedInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_actor_moderator_idNestedInput\n  }\n\n  export type discussionboard_bansUncheckedUpdateWithoutFk_bans_target_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUpdateWithoutFk_bans_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_bans_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_target_admin_idNestedInput\n    fk_bans_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_target_moderator_idNestedInput\n    fk_bans_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_bansNestedInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_actor_moderator_idNestedInput\n  }\n\n  export type discussionboard_bansUncheckedUpdateWithoutFk_bans_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUpdateWithoutFk_warnings_target_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput\n    fk_warnings_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput\n    fk_warnings_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput\n    fk_warnings_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUpdateWithoutFk_warnings_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput\n    fk_warnings_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput\n    fk_warnings_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateWithoutFk_warnings_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_adminInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_moderatorInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_target_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_actor_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_target_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_actor_moderatorInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_actor_moderatorInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUpdateWithoutFk_bans_target_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_bans_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_target_admin_idNestedInput\n    fk_bans_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_bansNestedInput\n    fk_bans_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_actor_admin_idNestedInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_actor_moderator_idNestedInput\n  }\n\n  export type discussionboard_bansUncheckedUpdateWithoutFk_bans_target_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUpdateWithoutFk_bans_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_bans_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_target_admin_idNestedInput\n    fk_bans_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_target_moderator_idNestedInput\n    fk_bans_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_bansNestedInput\n    fk_bans_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_actor_admin_idNestedInput\n  }\n\n  export type discussionboard_bansUncheckedUpdateWithoutFk_bans_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUpdateWithoutFk_warnings_target_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput\n    fk_warnings_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput\n    fk_warnings_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput\n    fk_warnings_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUpdateWithoutFk_warnings_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput\n    fk_warnings_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput\n    fk_warnings_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput\n    fk_warnings_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateWithoutFk_warnings_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_moderatorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsCreateManyFk_db_board_subs_memberInput = {\n    id: string\n    discussionboard_board_id: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_user_emailsCreateManyDiscussionboard_user_emails_memberInput = {\n    id: string\n    email: string\n    is_verified: boolean\n    is_primary: boolean\n    added_at: Date | string\n    verified_at?: Date | string | null\n  }\n\n  export type discussionboard_user_authsCreateManyDiscussionboard_user_auths_memberInput = {\n    id: string\n    provider: string\n    provider_user_id: string\n    linked_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_user_sessionsCreateManyDiscussionboard_user_sessions_memberInput = {\n    id: string\n    session_token: string\n    created_at: Date | string\n    expires_at: Date | string\n    revoked_at?: Date | string | null\n  }\n\n  export type discussionboard_postsCreateManyAuthorInput = {\n    id: string\n    board_id: string\n    title: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_post_editsCreateManyEditorInput = {\n    id: string\n    post_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_post_likesCreateManyUserInput = {\n    id: string\n    post_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_viewsCreateManyUserInput = {\n    id: string\n    post_id: string\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_commentsCreateManyAuthorInput = {\n    id: string\n    post_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_comment_likesCreateManyUserInput = {\n    id: string\n    comment_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_comment_editsCreateManyEditorInput = {\n    id: string\n    comment_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_comment_viewsCreateManyUserInput = {\n    id: string\n    comment_id: string\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_reportsCreateManyFk_reports_reporting_memberInput = {\n    id: string\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_actor_memberInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_bansCreateManyFk_bans_target_memberInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    ban_reason: string\n    ban_start_at: Date | string\n    ban_end_at?: Date | string | null\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_target_memberInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_actor_memberInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    related_report_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_notificationsCreateManyDiscussionboard_notifications_recipientInput = {\n    id: string\n    type: string\n    related_entity_id?: string | null\n    related_entity_type?: string | null\n    content: string\n    is_read: boolean\n    delivered_at: Date | string\n    expires_at?: Date | string | null\n  }\n\n  export type discussionboard_alert_preferencesCreateManyDiscussionboard_alert_preferences_ownerInput = {\n    id: string\n    notification_type: string\n    delivery_channel: string\n    updated_at: Date | string\n  }\n\n  export type discussionboard_action_logsCreateManyFk_action_log_actorInput = {\n    id: string\n    event_type: string\n    event_target_id?: string | null\n    metadata?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_api_access_logsCreateManyFk_access_log_actorInput = {\n    id: string\n    method: string\n    endpoint: string\n    status_code: number\n    ip_address: string\n    user_agent?: string | null\n    response_time_ms: number\n    created_at: Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUpdateWithoutFk_db_board_subs_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_db_board_subs_board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_board_subscriptionsNestedInput\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateWithoutFk_db_board_subs_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_board_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_board_subscriptionsUncheckedUpdateManyWithoutFk_db_board_subs_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    discussionboard_board_id?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_user_emailsUpdateWithoutDiscussionboard_user_emails_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_emailsUncheckedUpdateWithoutDiscussionboard_user_emails_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_emailsUncheckedUpdateManyWithoutDiscussionboard_user_emails_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    is_verified?: BoolFieldUpdateOperationsInput | boolean\n    is_primary?: BoolFieldUpdateOperationsInput | boolean\n    added_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_authsUpdateWithoutDiscussionboard_user_auths_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_authsUncheckedUpdateWithoutDiscussionboard_user_auths_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_authsUncheckedUpdateManyWithoutDiscussionboard_user_auths_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    provider?: StringFieldUpdateOperationsInput | string\n    provider_user_id?: StringFieldUpdateOperationsInput | string\n    linked_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUpdateWithoutDiscussionboard_user_sessions_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUncheckedUpdateWithoutDiscussionboard_user_sessions_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_user_sessionsUncheckedUpdateManyWithoutDiscussionboard_user_sessions_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_token?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    revoked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_postsUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    board?: discussionboard_boardsUpdateOneRequiredWithoutDiscussionboard_postsNestedInput\n    discussionboard_post_edits?: discussionboard_post_editsUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    discussionboard_post_edits?: discussionboard_post_editsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_likes?: discussionboard_post_likesUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_post_views?: discussionboard_post_viewsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_comments?: discussionboard_commentsUncheckedUpdateManyWithoutPostNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postNestedInput\n  }\n\n  export type discussionboard_postsUncheckedUpdateManyWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    board_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_post_editsUpdateWithoutEditorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_editsNestedInput\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateWithoutEditorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateManyWithoutEditorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_likesNestedInput\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_post_viewsNestedInput\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutAuthorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_comment_likesUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    comment?: discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_likesNestedInput\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsUpdateWithoutEditorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    comment?: discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_editsNestedInput\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateWithoutEditorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateManyWithoutEditorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    comment?: discussionboard_commentsUpdateOneRequiredWithoutDiscussionboard_comment_viewsNestedInput\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateManyWithoutUserInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    comment_id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_reportsUpdateWithoutFk_reports_reporting_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutFk_reports_reporting_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_reporting_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_actor_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_actor_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_actor_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUpdateWithoutFk_bans_target_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_bans_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_target_admin_idNestedInput\n    fk_bans_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_target_moderator_idNestedInput\n    fk_bans_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_bans_of_actor_admin_idNestedInput\n    fk_bans_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_bans_of_actor_moderator_idNestedInput\n  }\n\n  export type discussionboard_bansUncheckedUpdateWithoutFk_bans_target_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_bansUncheckedUpdateManyWithoutFk_bans_target_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    ban_reason?: StringFieldUpdateOperationsInput | string\n    ban_start_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    ban_end_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUpdateWithoutFk_warnings_target_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput\n    fk_warnings_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput\n    fk_warnings_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_warningsNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateWithoutFk_warnings_target_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_target_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateWithoutFk_auditlogs_actor_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_actor_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_actor_memberInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_notificationsUpdateWithoutDiscussionboard_notifications_recipientInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_notificationsUncheckedUpdateWithoutDiscussionboard_notifications_recipientInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_notificationsUncheckedUpdateManyWithoutDiscussionboard_notifications_recipientInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    type?: StringFieldUpdateOperationsInput | string\n    related_entity_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_entity_type?: NullableStringFieldUpdateOperationsInput | string | null\n    content?: StringFieldUpdateOperationsInput | string\n    is_read?: BoolFieldUpdateOperationsInput | boolean\n    delivered_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_alert_preferencesUpdateWithoutDiscussionboard_alert_preferences_ownerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_alert_preferencesUncheckedUpdateWithoutDiscussionboard_alert_preferences_ownerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_alert_preferencesUncheckedUpdateManyWithoutDiscussionboard_alert_preferences_ownerInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_type?: StringFieldUpdateOperationsInput | string\n    delivery_channel?: StringFieldUpdateOperationsInput | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_action_logsUpdateWithoutFk_action_log_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_action_logsUncheckedUpdateWithoutFk_action_log_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_action_logsUncheckedUpdateManyWithoutFk_action_log_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_target_id?: NullableStringFieldUpdateOperationsInput | string | null\n    metadata?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_api_access_logsUpdateWithoutFk_access_log_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_api_access_logsUncheckedUpdateWithoutFk_access_log_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_api_access_logsUncheckedUpdateManyWithoutFk_access_log_actorInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    method?: StringFieldUpdateOperationsInput | string\n    endpoint?: StringFieldUpdateOperationsInput | string\n    status_code?: IntFieldUpdateOperationsInput | number\n    ip_address?: StringFieldUpdateOperationsInput | string\n    user_agent?: NullableStringFieldUpdateOperationsInput | string | null\n    response_time_ms?: IntFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_editsCreateManyPostInput = {\n    id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_post_likesCreateManyPostInput = {\n    id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_viewsCreateManyPostInput = {\n    id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_commentsCreateManyPostInput = {\n    id: string\n    author_id: string\n    parent_id?: string | null\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_reportsCreateManyFk_reports_target_postInput = {\n    id: string\n    reporting_member_id: string\n    target_comment_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_target_postInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_post_editsUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    editor?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_post_editsNestedInput\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_editsUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_post_likesNestedInput\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_likesUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussionboard_membersUpdateOneWithoutDiscussionboard_post_viewsNestedInput\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_post_viewsUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    parent?: discussionboard_commentsUpdateOneWithoutRecursiveNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutPostInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    parent_id?: NullableStringFieldUpdateOperationsInput | string | null\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_reportsUpdateWithoutFk_reports_target_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_reporting_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutFk_reports_target_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_target_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_target_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_postInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_commentsCreateManyParentInput = {\n    id: string\n    post_id: string\n    author_id: string\n    body: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type discussionboard_comment_likesCreateManyCommentInput = {\n    id: string\n    user_id: string\n    is_like: boolean\n    created_at: Date | string\n  }\n\n  export type discussionboard_comment_editsCreateManyCommentInput = {\n    id: string\n    editor_id: string\n    edit_summary?: string | null\n    edited_at: Date | string\n  }\n\n  export type discussionboard_comment_viewsCreateManyCommentInput = {\n    id: string\n    user_id?: string | null\n    session_id?: string | null\n    viewed_at: Date | string\n  }\n\n  export type discussionboard_reportsCreateManyFk_reports_target_commentInput = {\n    id: string\n    reporting_member_id: string\n    target_post_id?: string | null\n    reason: string\n    status: string\n    created_at: Date | string\n    reviewed_at?: Date | string | null\n    resolved_at?: Date | string | null\n    moderation_note?: string | null\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_target_commentInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    target_post_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_commentsUpdateWithoutParentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    post?: discussionboard_postsUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    author?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_commentsNestedInput\n    recursive?: discussionboard_commentsUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateWithoutParentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    recursive?: discussionboard_commentsUncheckedUpdateManyWithoutParentNestedInput\n    discussionboard_comment_likes?: discussionboard_comment_likesUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_edits?: discussionboard_comment_editsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_comment_views?: discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentNestedInput\n    discussionboard_reports?: discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentNestedInput\n  }\n\n  export type discussionboard_commentsUncheckedUpdateManyWithoutParentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    post_id?: StringFieldUpdateOperationsInput | string\n    author_id?: StringFieldUpdateOperationsInput | string\n    body?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type discussionboard_comment_likesUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_comment_likesNestedInput\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_likesUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: StringFieldUpdateOperationsInput | string\n    is_like?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    editor?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_comment_editsNestedInput\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_editsUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    editor_id?: StringFieldUpdateOperationsInput | string\n    edit_summary?: NullableStringFieldUpdateOperationsInput | string | null\n    edited_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    user?: discussionboard_membersUpdateOneWithoutDiscussionboard_comment_viewsNestedInput\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_comment_viewsUncheckedUpdateManyWithoutCommentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    user_id?: NullableStringFieldUpdateOperationsInput | string | null\n    session_id?: NullableStringFieldUpdateOperationsInput | string | null\n    viewed_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_reportsUpdateWithoutFk_reports_target_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    fk_reports_reporting_member?: discussionboard_membersUpdateOneRequiredWithoutDiscussionboard_reportsNestedInput\n    fk_reports_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_reportsNestedInput\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateWithoutFk_reports_target_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n    discussionboard_moderation_actions?: discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportNestedInput\n    discussionboard_warnings?: discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportNestedInput\n  }\n\n  export type discussionboard_reportsUncheckedUpdateManyWithoutFk_reports_target_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reporting_member_id?: StringFieldUpdateOperationsInput | string\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    reviewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    resolved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    moderation_note?: NullableStringFieldUpdateOperationsInput | string | null\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_target_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_target_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_target_commentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_moderation_actionsCreateManyFk_moderationactions_related_reportInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    target_post_id?: string | null\n    target_comment_id?: string | null\n    action_type: string\n    action_reason?: string | null\n    created_at: Date | string\n  }\n\n  export type discussionboard_warningsCreateManyFk_warnings_related_reportInput = {\n    id: string\n    target_admin_id?: string | null\n    target_moderator_id?: string | null\n    target_member_id?: string | null\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    reason: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_related_reportInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_moderation_action_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_moderation_actionsUpdateWithoutFk_moderationactions_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_moderationactions_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_post?: discussionboard_postsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    fk_moderationactions_target_comment?: discussionboard_commentsUpdateOneWithoutDiscussionboard_moderation_actionsNestedInput\n    discussionboard_audit_logs?: discussionboard_audit_logsUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateWithoutFk_moderationactions_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    discussionboard_audit_logs?: discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionNestedInput\n  }\n\n  export type discussionboard_moderation_actionsUncheckedUpdateManyWithoutFk_moderationactions_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_post_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_comment_id?: NullableStringFieldUpdateOperationsInput | string | null\n    action_type?: StringFieldUpdateOperationsInput | string\n    action_reason?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUpdateWithoutFk_warnings_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_warnings_target_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_target_admin_idNestedInput\n    fk_warnings_target_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_target_moderator_idNestedInput\n    fk_warnings_target_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_warningsNestedInput\n    fk_warnings_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_warnings_of_actor_admin_idNestedInput\n    fk_warnings_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_warnings_of_actor_moderator_idNestedInput\n  }\n\n  export type discussionboard_warningsUncheckedUpdateWithoutFk_warnings_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_warningsUncheckedUpdateManyWithoutFk_warnings_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    target_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    target_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    reason?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateWithoutFk_auditlogs_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_moderation_action?: discussionboard_moderation_actionsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_reportInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_moderation_action_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsCreateManyFk_auditlogs_related_moderation_actionInput = {\n    id: string\n    actor_admin_id?: string | null\n    actor_moderator_id?: string | null\n    actor_member_id?: string | null\n    related_report_id?: string | null\n    event_type: string\n    event_detail: string\n    created_at: Date | string\n  }\n\n  export type discussionboard_audit_logsUpdateWithoutFk_auditlogs_related_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    fk_auditlogs_actor_admin?: discussionboard_adminsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_moderator?: discussionboard_moderatorsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_actor_member?: discussionboard_membersUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n    fk_auditlogs_related_report?: discussionboard_reportsUpdateOneWithoutDiscussionboard_audit_logsNestedInput\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateWithoutFk_auditlogs_related_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type discussionboard_audit_logsUncheckedUpdateManyWithoutFk_auditlogs_related_moderation_actionInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    actor_admin_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_moderator_id?: NullableStringFieldUpdateOperationsInput | string | null\n    actor_member_id?: NullableStringFieldUpdateOperationsInput | string | null\n    related_report_id?: NullableStringFieldUpdateOperationsInput | string | null\n    event_type?: StringFieldUpdateOperationsInput | string\n    event_detail?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}","node_modules/.prisma/client/runtime/index-browser.d.ts":"declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/library.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\n/**\r\n * Original `quaint::ValueType` enum tag from Prisma's `quaint`.\r\n * Query arguments marked with this type are sanitized before being sent to the database.\r\n * Notice while a query argument may be `null`, `ArgType` is guaranteed to be defined.\r\n */\r\ndeclare type ArgType = 'Int32' | 'Int64' | 'Float' | 'Double' | 'Text' | 'Enum' | 'EnumArray' | 'Bytes' | 'Boolean' | 'Char' | 'Array' | 'Numeric' | 'Json' | 'Xml' | 'Uuid' | 'DateTime' | 'Date' | 'Time' | 'Unknown';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: object;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\n/**\r\n * Custom fetch function for `DataProxyEngine`.\r\n *\r\n * We can't use the actual type of `globalThis.fetch` because this will result\r\n * in API Extractor referencing Node.js type definitions in the `.d.ts` bundle\r\n * for the client runtime. We can only use such types in internal types that\r\n * don't end up exported anywhere.\r\n\r\n * It's also not possible to write a definition of `fetch` that would accept the\r\n * actual `fetch` function from different environments such as Node.js and\r\n * Cloudflare Workers (with their extensions to `RequestInit` and `Response`).\r\n * `fetch` is used in both covariant and contravariant positions in\r\n * `CustomDataProxyFetch`, making it invariant, so we need the exact same type.\r\n * Even if we removed the argument and left `fetch` in covariant position only,\r\n * then for an extension-supplied function to be assignable to `customDataProxyFetch`,\r\n * the platform-specific (or custom) `fetch` function needs to be assignable\r\n * to our `fetch` definition. This, in turn, requires the third-party `Response`\r\n * to be a subtype of our `Response` (which is not a problem, we could declare\r\n * a minimal `Response` type that only includes what we use) *and* requires the\r\n * third-party `RequestInit` to be a supertype of our `RequestInit` (i.e. we\r\n * have to declare all properties any `RequestInit` implementation in existence\r\n * could possibly have), which is not possible.\r\n *\r\n * Since `@prisma/extension-accelerate` redefines the type of\r\n * `__internalParams.customDataProxyFetch` to its own type anyway (probably for\r\n * exactly this reason), our definition is never actually used and is completely\r\n * ignored, so it doesn't matter, and we can just use `unknown` as the type of\r\n * `fetch` here.\r\n */\r\ndeclare type CustomDataProxyFetch = (fetch: unknown) => unknown;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$use\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    fields: string[];\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    fields: string[];\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    middleware?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_3<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _middlewares: MiddlewareHandler<QueryMiddleware>;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        /**\r\n         * Hook a middleware into the client\r\n         * @param middleware to hook\r\n         */\r\n        $use(middleware: QueryMiddleware): void;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: TransactionOptions_2;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare class MiddlewareHandler<M extends Function> {\r\n    private _middlewares;\r\n    use(middleware: M): void;\r\n    get(id: number): M | undefined;\r\n    has(id: number): boolean;\r\n    length(): number;\r\n}\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: object[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-pg-worker\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): string;\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddleware = (params: QueryMiddlewareParams, next: (params: QueryMiddlewareParams) => Promise<unknown>) => Promise<unknown>;\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_3<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: CustomDataProxyFetch;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        TransactionOptions_2 as Options,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2 = {\r\n    maxWait?: number;\r\n    timeout?: number;\r\n    isolationLevel?: IsolationLevel;\r\n};\r\n\r\ndeclare type TransactionOptions_3<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/wasm.d.ts":"export * from \"./index\"","node_modules/@prisma/client/index.d.ts":"export * from '.prisma/client/default'"},"document":"# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Systematic](#systematic)\n- [Actors](#actors)\n- [Content](#content)\n- [Moderation](#moderation)\n- [Guidelines](#guidelines)\n- [Notifications](#notifications)\n- [Logs](#logs)\n\n## Systematic\n\n```mermaid\nerDiagram\n\"discussionboard_sections\" {\n  String id PK\n  String name UK\n  String description \"nullable\"\n  Int sort_order\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_boards\" {\n  String id PK\n  String discussionboard_section_id FK\n  String name UK\n  String description \"nullable\"\n  String rules \"nullable\"\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_tags\" {\n  String id PK\n  String tag UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_board_subscriptions\" {\n  String id PK\n  String discussionboard_board_id FK\n  String discussionboard_member_id FK\n  DateTime created_at\n}\n\"discussionboard_board_settings\" {\n  String id PK\n  String discussionboard_board_id FK,UK\n  Boolean allow_images\n  Boolean require_moderator_approval\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_notification_settings\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  Boolean receive_board_notifications\n  Boolean receive_mention_notifications\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_boards\" }o--|| \"discussionboard_sections\" : fk_discussionboard_boards_section\n\"discussionboard_board_subscriptions\" }o--|| \"discussionboard_boards\" : fk_db_board_subs_board\n\"discussionboard_board_settings\" |o--|| \"discussionboard_boards\" : fk_db_board_settings_board\n```\n\n### `discussionboard_sections`\n\nBoard Section entity - This implements the requirement for organizing multiple boards into logical sections/category headings as described in the requirements (see Business Overview and Board API). \n\nProvides top-level grouping for boards (e.g., 'Politics', 'Economy'). Each section contains multiple boards but supports explicit sorting and labeling for easy discovery. Maintains 3NF by storing only section-specific data and referencing boards elsewhere. \n\nExample: Used for filtering the board list UI, and configuring board display order in admin settings.\nKey relationships: One section to many boards (referenced from discussionboard_boards). \nSpecial behaviors: Deletions should be restricted if boards exist within a section.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for a section.\n- `name`: Section name - Implements the section/categorization requirement. Human-readable name to display to users (e.g., 'Politics'). 3NF maintained by storing only the atomic label here. Example: Section dropdown in UI.\n- `description`: Section description - Short text clarifying purpose or scope. 3NF compliant atomic text. Example: 'For regional and national issues.'\n- `sort_order`: Explicit sort order for UI display - Allows admin-defined ordering of sections. Maintains 3NF by only storing atomic order number. Example: Integer used for section sorting.\n- `created_at`: Creation timestamp - Implements audit and data retention requirement. 3NF as an atomic date-time value. Example: used for sorting/recently added filter.\n- `updated_at`: Last update timestamp - Used for audits and last-modified displays. Example: UI 'last updated' column.\n\n### `discussionboard_boards`\n\nBoard entity - Implements the requirement for multiple thematic boards within the platform (see Business Overview, API spec). \n\nRepresents a specific discussion board (e.g., 'Elections 2025'). Each board belongs to a section and can have subscriptions, tags, settings, etc. Maintains 3NF by separating board details from posts/content, and referencing only the relevant section. \n\nExample: Used for displaying board list, posting endpoints, and enforcing board-level settings.\nKey relationships: Many-to-one with discussionboard_sections (foreign key); referenced by other tables for posts, subscriptions, and tags.\nSpecial behaviors: Section deletion/renaming cascades/updates needed; cannot delete section if boards exist.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for a board.\n- `discussionboard_section_id`: Belonged section's [discussionboard_sections.id](#discussionboard_sections) - Links board to its section for groupings. Required to ensure boards are organized. Maintains referential integrity and 3NF.\n- `name`: Board name - Implements the logical board separation requirement. Human-readable board title (e.g., 'Elections 2025'). Strictly atomic per 3NF. Example: Board selector UI.\n- `description`: Board description - Explanatory text for users to understand board's focus. Enforces 3NF by storing only description here. Example: Board hover tooltip.\n- `rules`: Custom board-specific rules (markdown/plaintext) - Implements requirement for community rules per board. Maintains 3NF. Example: Board custom code of conduct.\n- `is_active`: Active/inactive flag - Used by admins to hide inactive/archived boards. Follows 3NF by being an atomic status indicator. Example: Board visibility toggle.\n- `created_at`: Creation timestamp for the board - For audits, logs, and recency filters. 3NF atomic timestamp. Example: Used in new board creation tracking.\n- `updated_at`: Last updated time - For audit trail and change tracking. Example: UI listing.\n\n### `discussionboard_tags`\n\nTag entity - Implements the requirement for tagging boards and enabling filtered search/discovery (see Functional Requirements and API spec). \n\nStores tag definitions for use on boards or posts. Tags can be assigned to boards (via M:N relationship implemented in other domain if needed). Maintains 3NF as a definition-only table; actual assignments are managed elsewhere. \n\nExample: Used for board tag suggestions, filtering board/post lists. \nKey relationships: Used in tag-board mappings but maintains strict normalization here.\nSpecial behaviors: Only atomic data stored; all application-side assignment linked elsewhere.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique tag identifier.\n- `tag`: Tag value - Human-friendly tag (e.g., 'policy', 'economy'). Implements tag definition requirement. Enforces normalization by keeping atomic labels only here. Example: Tag chips in UI.\n- `description`: Tag description - Explains scope/purpose of tag for admin and users. Enforces 3NF. Example: Tag hover info.\n- `created_at`: Tag creation timestamp - Required for record keeping. Maintains 3NF. Example: Used for sorting tags by newest.\n- `updated_at`: Last tag update time - For audit logs and change history in admin UI. 3NF compliant.\n\n### `discussionboard_board_subscriptions`\n\nBoard subscription entity - Implements the board subscription/notification feature (see Notification System and Functional Requirements). \n\nTracks which members are subscribed to which boards, to drive notifications and update feeds. Maintains 3NF as a pure M:N/junction entity: each record (subscription) is atomic, linking a single user to a single board. \n\nExample: Used for fast lookup of a member's subscribed boards, or when sending board notifications. \nKey relationships: Foreign keys to boards (this file) and discussionboard_members (external Actors component). \nSpecial behaviors: Unsubscribe (soft delete or remove record); composite uniqueness enforced.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique subscription ID.\n- `discussionboard_board_id`: Subscribed board's [discussionboard_boards.id](#discussionboard_boards) - Enforces which board is subscribed. Enforces 3NF as atomic foreign key. Example: All subscriptions for a board.\n- `discussionboard_member_id`: Subscribed member's [discussionboard_members.id](#discussionboard_members) (from Actors component) - Links subscription to member (ALREADY CREATED in Actors schema). 3NF: purely as a foreign key. Example: All user subscriptions.\n- `created_at`: Time of subscription - For audit/logging, 3NF as single timestamp. Example: Recent subscriber statistics.\n\n### `discussionboard_board_settings`\n\nBoard settings entity - Implements requirement for customizable settings per board (see Functional Requirements and Board API). \n\nStores various administrative or feature settings per board (e.g., allow images, require moderator approval). Maintains 3NF: atomic settings per board, without computed fields; extensible. \n\nExample: Used to toggle features for specific boards or override defaults.\nKey relationships: Unique per board (1:1 with boards). \nSpecial behaviors: Board can have only one settings record; model extensible for future settings.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for board settings.\n- `discussionboard_board_id`: Target board's [discussionboard_boards.id](#discussionboard_boards) - Settings apply to this board. Enforced unique for 1:1. Example: Feature toggle lookup for a specific board.\n- `allow_images`: Allow image uploads - Implements toggle for image posting. 3NF: atomic flag only, actual images handled elsewhere. Example: Image post permissions UI.\n- `require_moderator_approval`: Require moderator approval for new posts - Supports moderation flow requirement. 3NF flag only. Example: Restricted board setup.\n- `created_at`: Creation timestamp for audit/history. 3NF as atomic timestamp. Example: For admin settings log.\n- `updated_at`: Last updated time for settings, for auditing. Example: Settings history tracking.\n\n### `discussionboard_notification_settings`\n\nUser notification setting entity - Implements user preference storage for receiving board/content notifications (see Notification System and Functional Requirements). \n\nStores per-user notification toggles/preferences for the Discussion Board domain. Maintains 3NF by keeping atomic preference values per user. Used to configure which types of notifications are received (thread activity, announcements, etc). \n\nExample: Used when sending notification emails, or rendering notification settings UI. \nKey relationships: Linked to members (via discussionboard_member_id from Actors component).\nSpecial behaviors: Unique-per-user enforced, 1:1 with member record.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique notification setting ID.\n- `discussionboard_member_id`: Belonged member's [discussionboard_members.id](#discussionboard_members) (from Actors component) - Which member these preferences apply to. Unique for 1:1. Example: Editing notification preferences for logged-in member.\n- `receive_board_notifications`: Receive notifications for new board activity/posts - Implements the core notification toggle. 3NF as atomic preference. Example: User settings UI toggle.\n- `receive_mention_notifications`: Receive mention notifications - Controls alerts for mentions/replies. 3NF flag. Example: Mention alert switch on settings page.\n- `created_at`: Creation timestamp for notification prefs history/audit. 3NF.\n- `updated_at`: Last prefs update timestamp, for audit/history. 3NF.\n\n## Actors\n\n```mermaid\nerDiagram\n\"discussionboard_admins\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  DateTime granted_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_moderators\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  DateTime granted_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_members\" {\n  String id PK\n  String username UK\n  String password_hash\n  DateTime created_at\n  DateTime activated_at \"nullable\"\n  DateTime deactivated_at \"nullable\"\n}\n\"discussionboard_guests\" {\n  String id PK\n  String session_token UK\n  DateTime created_at\n}\n\"discussionboard_user_profiles\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  String display_name \"nullable\"\n  String bio \"nullable\"\n  String(80000) avatar_url \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_user_emails\" {\n  String id PK\n  String discussionboard_member_id FK\n  String email UK\n  Boolean is_verified\n  Boolean is_primary\n  DateTime added_at\n  DateTime verified_at \"nullable\"\n}\n\"discussionboard_user_auths\" {\n  String id PK\n  String discussionboard_member_id FK\n  String provider\n  String provider_user_id\n  DateTime linked_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_user_sessions\" {\n  String id PK\n  String discussionboard_member_id FK\n  String session_token UK\n  DateTime created_at\n  DateTime expires_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_admins\" |o--|| \"discussionboard_members\" : discussionboard_admins_member\n\"discussionboard_moderators\" |o--|| \"discussionboard_members\" : discussionboard_moderators_member\n\"discussionboard_user_profiles\" |o--|| \"discussionboard_members\" : discussionboard_user_profiles_member\n\"discussionboard_user_emails\" }o--|| \"discussionboard_members\" : discussionboard_user_emails_member\n\"discussionboard_user_auths\" }o--|| \"discussionboard_members\" : discussionboard_user_auths_member\n\"discussionboard_user_sessions\" }o--|| \"discussionboard_members\" : discussionboard_user_sessions_member\n```\n\n### `discussionboard_admins`\n\nPlatform administrator role assignment - Implements the functional requirement for privileged admin accounts as found in the requirements (see: User Roles & Permissions). \n\nAdministrators oversee content and user moderation at the highest level; this table records accounts with full platform control and is central for RBAC enforcement. Maintains strict 3NF normalization by storing only direct attributes of the admin role, referencing user membership via foreign key. For example, promotes a member to admin role or demotes. \n\nKey relationships: links to discussionboard_members (user basis), may be referenced in audit logs or moderation actions.  Special behaviors: Granting this role cascades full access; must be auditable.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique admin role record identifier.\n- `discussionboard_member_id`: Belonged member's [discussionboard_members.id](#discussionboard_members). Assigns admin privileges to a registered member.\n- `granted_at`: Datetime when admin role was granted. Implements temporal auditability as per action trail requirements. For example, captures promotion time.\n- `revoked_at`: Datetime when admin role was revoked (if applicable). Null unless admin privileges are removed. Supports audit and compliance.\n\n### `discussionboard_moderators`\n\nModerator role assignment - Implements the requirement for a moderation role to enforce community guidelines (see: Moderation Roles & Policies, Permissions Matrix).\n\nThis table records which members serve as moderators. It maintains strict normalization by referencing user membership while tracking assignment and revocation dates. Used for permission elevation, logging, and audit trails. For example, a user promoted from member to moderator.\n\nKey relationships: References discussionboard_members. Special behaviors: Can be demoted; actions logged for accountability.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique moderator assignment record.\n- `discussionboard_member_id`: Belonged member's [discussionboard_members.id](#discussionboard_members) - the member elevated to moderator role.\n- `granted_at`: Datetime when moderator role was granted. Implements temporal audit trail for promotions. For example, captures elevation to moderator.\n- `revoked_at`: Datetime when moderator role was revoked (null if active). Supports demotion/historical queries.\n\n### `discussionboard_members`\n\nRegistered discussion board user accounts (members) - Implements registration/authentication requirements (User Authentication & Roles, CRUD Permissions).\n\nThis table represents all registered, authenticated users. It enforces 3NF by storing only per-user, non-derived data. For example, account creation, activation status, ban integration and role assignment references.\n\nKey relationships: Referenced by admin, moderator, profile, and user email tables. Special behaviors: Used for primary ownership of posts/comments.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique member account identifier.\n- `username`: Account username - unique member login handle fulfilling the registration requirement; not case-sensitive and normalized for identity mapping. Ensures user uniqueness at platform level. Example: johndoe.\n- `password_hash`: Hashed password for secure authentication (never raw password), per non-functional security requirement. Complies with encryption policy and data protection. Example: bcrypt or Argon2 hash string.\n- `created_at`: Datetime when member account was created. Implements registration audit trail and supports search/sorting. Example: upon sign up.\n- `activated_at`: Datetime when account was activated/completed verification. Null if not verified yet. Example: after email confirmation workflow.\n- `deactivated_at`: Datetime of account deactivation (soft delete or permanent). Null if active. Supports retention policy and reactivation scenarios.\n\n### `discussionboard_guests`\n\nGuest user visitation - Implements guest journey tracking for unauthenticated users (see: User Roles & Journeys, Audit Trail).\n\nThis table stores guest/browser sessions for analytics, restrictions, and future up-sell. Maintains normalized structure by storing atomic session info only, not mixing with registered user data. For example, may log guest page views or promote registration.\n\nKey relationships: May later link to discussionboard_members if guest converts to member.\nSpecial behaviors: Short-lived; can be joined to logs for traffic analysis.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique guest session identifier.\n- `session_token`: Opaque session cookie or token identifying the guest browser. Supports uniqueness and privacy tracking. For example: UUID or secure random token.\n- `created_at`: Datetime guest session was initiated. Implements guest activity timeline; supports reporting and session expiry logic.\n\n### `discussionboard_user_profiles`\n\nExtended member profile details - Implements profile customization as per member/user journey requirements.\n\nThis table holds profile metadata (bio, display name, avatar, etc.), referencing the core member account. Maintains normalization by separating profile from core authentication/role. Example: user changes display name or avatar; updates here without affecting core login.\n\nKey relationships: Foreign key to discussionboard_members. Special behaviors: all fields except member linkage are nullable, allowing partial profiles.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique profile record identifier.\n- `discussionboard_member_id`: Belonged member's [discussionboard_members.id](#discussionboard_members). One-to-one mapping from member to user profile.\n- `display_name`: Public display name or nickname for the user (not required to match username). Implements customization requirement as per usability guideline. Example: John R.\n- `bio`: Short user biography or introduction, as per personalization feature. Maintains normalized structure; null if not set.\n- `avatar_url`: Profile image/avatar URI, facilitating multimedia enhancement and personalization. Null if not provided; stored as URI string. Example: https://cdn.site/avatar/123.\n- `created_at`: Datetime profile was created. Implements audit trail for customization events.\n- `updated_at`: Datetime profile was last updated, supports version awareness for profile changes. Enables profile history tracking.\n\n### `discussionboard_user_emails`\n\nEmail addresses associated with member accounts - Implements requirements for registration, verification, contact and notification preferences (Functional: Registration & Email Verification).\n\nMaintains one-to-many normalized mapping for supporting multiple verified emails per account, anti-abuse, and notification flexibility. Only stores atomic email info, never cached tokens or codes. Example: primary and backup email tracking; supports search, notification, verification workflows.\n\nKey relationships: Foreign key to discussionboard_members. Special behaviors: unique constraint on (discussionboard_member_id, email), optional verification per email.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique email record identifier.\n- `discussionboard_member_id`: Belonged member's [discussionboard_members.id](#discussionboard_members). Each email mapped to a registered user.\n- `email`: Email address string associated with the account. Implements registration, notification, and recovery flows - separate from core username for flexibility. Ensures normalization. Example: jane@host.com.\n- `is_verified`: Whether the email has passed verification (registration, notification, etc). Implements email confirmation flow; only verified addresses are used for key system functions. Defaults to false until confirmation.\n- `is_primary`: Whether this email is the primary contact address for the member (UI and system requirement). Each account can have at most one primary email. For example: used for login, password reset.\n- `added_at`: Datetime this email address was added or linked. Supports registration, change tracking, and reporting requirements.\n- `verified_at`: Datetime when verification was completed. Nullable to allow in-progress or failed verifications. Maintains normalization; no denormalized workflow states.\n\n### `discussionboard_user_auths`\n\nExternal/federated authentication records - Implements secure multi-provider authentication flows per non-functional requirements (Authentication API & Security).\n\nNormalizes all external auth connections (OAuth, SSO) for each account, supporting identity linking, revocation, and RBAC; stores only atomic data and references. Example: Google/Facebook/Twitter/SSO logins mapped to a user. Key relationships: Foreign key to discussionboard_members. Special behaviors: Composite uniqueness (member, provider, provider_user_id).\n\nProperties as follows:\n\n- `id`: Primary Key. Unique external authentication record.\n- `discussionboard_member_id`: Belonged member's [discussionboard_members.id](#discussionboard_members) - the member holding this external auth.\n- `provider`: Authentication provider/service name (e.g., google, facebook, github). Implements SSO/federated auth requirement. Normalized string, never contains secrets. Example: 'google'.\n- `provider_user_id`: User identifier from auth provider (not internal ID). Used for provider-based account merging and uniqueness/lookup. Example: OAuth subject ID.\n- `linked_at`: Datetime this external auth connection was established. For sign-on/audit purposes; always required.\n- `revoked_at`: Datetime external auth was revoked/unlinked (null if active). Implements revocation/idle account closure workflows.\n\n### `discussionboard_user_sessions`\n\nActive and historical login sessions for members - Implements authentication, auditing, session management, and inactivity/logout flows (see: Authentication & Security)\n\nEach record represents one signed-in session for a member, using opaque tokens. Maintains security by avoiding caching sensitive credentials; stores only atomic values (tokens, validity timestamps), never pre-calculated or denormalized status. For example, used for login expiration, forced logout, device management.\n\nKey relationships: Foreign key to discussionboard_members. Special behaviors: Tokens unique, support session trace/logs.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique session record identifier.\n- `discussionboard_member_id`: Referenced member's [discussionboard_members.id](#discussionboard_members). Each session is associated with a single member.\n- `session_token`: Opaque authentication token for this session. Used client-side for identifying login state. Uniqueness enforced; never stores raw credentials. Example: random UUID or JWT value.\n- `created_at`: Datetime session was created. Enables security/audit trace, expiry/refresh handling.\n- `expires_at`: Datetime when the session token will expire. Supports session timeout and security policies. Example: set per login policy or on grant.\n- `revoked_at`: Datetime session was revoked/invalidated (e.g., logout, idle timeout, forced admin action). Null if still valid. Maintains data integrity and audit trail.\n\n## Content\n\n```mermaid\nerDiagram\n\"discussionboard_posts\" {\n  String id PK\n  String board_id FK\n  String author_id FK\n  String title\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_post_edits\" {\n  String id PK\n  String post_id FK\n  String editor_id FK\n  String edit_summary \"nullable\"\n  DateTime edited_at\n}\n\"discussionboard_post_likes\" {\n  String id PK\n  String post_id FK\n  String user_id FK\n  Boolean is_like\n  DateTime created_at\n}\n\"discussionboard_post_views\" {\n  String id PK\n  String post_id FK\n  String user_id FK \"nullable\"\n  String session_id \"nullable\"\n  DateTime viewed_at\n}\n\"discussionboard_comments\" {\n  String id PK\n  String post_id FK\n  String author_id FK\n  String parent_id FK \"nullable\"\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_comment_likes\" {\n  String id PK\n  String comment_id FK\n  String user_id FK\n  Boolean is_like\n  DateTime created_at\n}\n\"discussionboard_comment_edits\" {\n  String id PK\n  String comment_id FK\n  String editor_id FK\n  String edit_summary \"nullable\"\n  DateTime edited_at\n}\n\"discussionboard_comment_views\" {\n  String id PK\n  String comment_id FK\n  String user_id FK \"nullable\"\n  String session_id \"nullable\"\n  DateTime viewed_at\n}\n\"discussionboard_post_edits\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_post_likes\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_post_views\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_comments\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_comments\" }o--o| \"discussionboard_comments\" : parent\n\"discussionboard_comment_likes\" }o--|| \"discussionboard_comments\" : comment\n\"discussionboard_comment_edits\" }o--|| \"discussionboard_comments\" : comment\n\"discussionboard_comment_views\" }o--|| \"discussionboard_comments\" : comment\n```\n\n### `discussionboard_posts`\n\nDiscussion Board Posts - This implements the core posting requirement from the requirements document (sections 2.2, 2.3). Represents top-level user posts within boards, tracking authorship, timestamps, and relation to board. Strict 3NF: all aggregate data (like counts, view counts) are handled in separate tables or materialized views. Links to edits, likes, views, comments. Example usage: a member or moderator creates a new discussion topic under a board.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `board_id`: Belonged board's [discussionboard_boards.id](#discussionboard_boards)\n- `author_id`: Author user's [discussionboard_members.id](#discussionboard_members) (or moderator/admin).\n- `title`: Title of the post. Atomic for search and filter.\n- `body`: Full body/content of post. No derived or calculated fields.\n- `created_at`: Created timestamp.\n- `updated_at`: Last updated timestamp.\n- `deleted_at`: Nullable soft-deletion timestamp if deleted by moderation.\n\n### `discussionboard_post_edits`\n\nDiscussion Board Post Edit Log - Implements snapshot pattern for edit/audit trail compliance. Each row records an edit event for a post, including editor identity and timestamp. No aggregation. Used for edit history, moderation transparency (3NF).\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `post_id`: Edited post's [discussionboard_posts.id](#discussionboard_posts)\n- `editor_id`: User who made the edit, references member/mod/admin.\n- `edit_summary`: Optional description of what changed.\n- `edited_at`: Timestamp of edit event.\n\n### `discussionboard_post_likes`\n\nDiscussion Board Post Likes/Dislikes - Each row is a user's like/dislike for a specific post (3NF-compliant; no aggregates). Used for engagement analytics, anti-abuse, audit trail. Unique per (post_id, user_id).\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `post_id`: Liked/disliked post's [discussionboard_posts.id](#discussionboard_posts)\n- `user_id`: Expressing user id (member/mod/admin) [discussionboard_members.id](#discussionboard_members)\n- `is_like`: True if like, false if dislike.\n- `created_at`: Event timestamp.\n\n### `discussionboard_post_views`\n\nDiscussion Board Post Views - Each row is a tracked viewing event, atomic and 3NF. No aggregated view counts stored. References viewer (nullable if anonymous/guest), post, and session. Example usage: user/visitor views a post; a row is logged for analytics and anti-abuse purposes.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `post_id`: Viewed post's [discussionboard_posts.id](#discussionboard_posts)\n- `user_id`: Viewer id (nullable for unauthenticated/guest view) [discussionboard_members.id](#discussionboard_members)\n- `session_id`: Session id for anonymous/guest view tracking; useful for analytics. Nullable.\n- `viewed_at`: Timestamp view occurred.\n\n### `discussionboard_comments`\n\nDiscussion Board Comments (Replies) - Implements comment/nested reply feature. Each row is an atomic comment (not aggregate or summary); threaded/reply-to is enabled via parent_id. Relates to a post, optional parent comment, and has author and timestamps. Example: a reply to a comment will set parent_id; a reply to post will keep parent_id null.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `post_id`: The post this comment is on [discussionboard_posts.id](#discussionboard_posts)\n- `author_id`: Comment author's user id (member/mod/admin) [discussionboard_members.id](#discussionboard_members)\n- `parent_id`: Optional recursive parent for a reply chain (refers to this table's id). Nullable for top-level replies.\n- `body`: Comment text (atomic, not computed).\n- `created_at`: Timestamp created.\n- `updated_at`: Timestamp updated.\n- `deleted_at`: Soft deletion timestamp for moderation/audit purposes.\n\n### `discussionboard_comment_likes`\n\nLikes/Dislikes for Discussion Board Comments - 3NF: one row per user per comment liking or disliking. No aggregate or summary fields. Used for engagement analytics, anti-abuse. Unique per (comment_id, user_id).\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `comment_id`: Liked/disliked comment id [discussionboard_comments.id](#discussionboard_comments)\n- `user_id`: Reacting user id (member/mod/admin) [discussionboard_members.id](#discussionboard_members)\n- `is_like`: True if like, false if dislike.\n- `created_at`: Timestamp like/dislike event was created.\n\n### `discussionboard_comment_edits`\n\nDiscussion Board Comment Edit Log - Each row is an atomic edit event for a comment (snapshot audit pattern). Tracks which comment was edited, who did it, and when. Used for audit transparency in moderation context (3NF).\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `comment_id`: Edited comment's [discussionboard_comments.id](#discussionboard_comments)\n- `editor_id`: User who edited the comment [discussionboard_members.id](#discussionboard_members)\n- `edit_summary`: Optional brief note on edit reason or summary.\n- `edited_at`: Edit event timestamp.\n\n### `discussionboard_comment_views`\n\nUnique view/read tracking for comments (analytics, engagement). Atomic: one row per (comment, user/session); no aggregates. Relates to comment, viewing user (nullable/guest), and session. Used for analytics/reporting (never pre-calculated).\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `comment_id`: Viewed comment's [discussionboard_comments.id](#discussionboard_comments)\n- `user_id`: User id of viewer (nullable/guest) [discussionboard_members.id](#discussionboard_members)\n- `session_id`: Nullable session id to support anonymous/guest visitor analytics.\n- `viewed_at`: Timestamp of view event.\n\n## Moderation\n\n```mermaid\nerDiagram\n\"discussionboard_reports\" {\n  String id PK\n  String reporting_member_id FK\n  String target_post_id FK \"nullable\"\n  String target_comment_id FK \"nullable\"\n  String reason\n  String status\n  DateTime created_at\n  DateTime reviewed_at \"nullable\"\n  DateTime resolved_at \"nullable\"\n  String moderation_note \"nullable\"\n}\n\"discussionboard_moderation_actions\" {\n  String id PK\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String actor_member_id FK \"nullable\"\n  String related_report_id FK \"nullable\"\n  String target_post_id FK \"nullable\"\n  String target_comment_id FK \"nullable\"\n  String action_type\n  String action_reason \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_bans\" {\n  String id PK\n  String target_admin_id FK,UK \"nullable\"\n  String target_moderator_id FK,UK \"nullable\"\n  String target_member_id FK,UK \"nullable\"\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String ban_reason\n  DateTime ban_start_at\n  DateTime ban_end_at \"nullable\"\n  String status\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_warnings\" {\n  String id PK\n  String target_admin_id FK \"nullable\"\n  String target_moderator_id FK \"nullable\"\n  String target_member_id FK \"nullable\"\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String related_report_id FK \"nullable\"\n  String reason\n  DateTime created_at\n}\n\"discussionboard_audit_logs\" {\n  String id PK\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String actor_member_id FK \"nullable\"\n  String related_report_id FK \"nullable\"\n  String related_moderation_action_id FK \"nullable\"\n  String event_type\n  String event_detail\n  DateTime created_at\n}\n\"discussionboard_moderation_actions\" }o--o| \"discussionboard_reports\" : fk_moderationactions_related_report\n\"discussionboard_warnings\" }o--o| \"discussionboard_reports\" : fk_warnings_related_report\n\"discussionboard_audit_logs\" }o--o| \"discussionboard_reports\" : fk_auditlogs_related_report\n\"discussionboard_audit_logs\" }o--o| \"discussionboard_moderation_actions\" : fk_auditlogs_related_moderation_action\n```\n\n### `discussionboard_reports`\n\nUser-generated content reports - This implements requirements from 'Moderation & Community Guidelines' and 'Functional Requirements: Flag/Report Functionality'. \nAllows members to report inappropriate posts or comments for moderator/admin review. Maintains 3NF compliance by storing one report per row with foreign keys linking to reporting member and target content. For example, when a member reports a comment, a record is created with details about the report and the referenced comment. \nKey relationships: References reporter (discussionboard_members), content type (post/comment), and target content.\nSpecial behaviors: Only one active report per content per reporting member is allowed until resolution.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for each report.\n- `reporting_member_id`: Referencing the member who filed the report: [discussionboard_members.id](#discussionboard_members).\n- `target_post_id`: Referenced post if report concerns a post: [discussionboard_posts.id](#discussionboard_posts). Nullable if report is for a comment.\n- `target_comment_id`: Referenced comment if report concerns a comment: [discussionboard_comments.id](#discussionboard_comments). Nullable if report is for a post.\n- `reason`\n  > Reason for reporting - Implements the 'report reason' requirement.\n  > Describes why the member has flagged the content. Ensures normalization by storing descriptive report reasons. For example, 'hate speech', 'spam', 'off-topic'.\n- `status`: Status of the report (e.g., pending, reviewed, resolved, rejected). Implements 'moderation workflow' requirements. Only controlled values allowed through app logic.\n- `created_at`: Timestamp of when the report was filed. Supports moderation audit trails and reporting flow. Always required.\n- `reviewed_at`: Timestamp of when moderators reviewed the report. Nullable until review occurs.\n- `resolved_at`: Timestamp when action was taken or report was closed. Nullable until resolved.\n- `moderation_note`: Moderator/admin remarks/comments for this report. Implements 'reviewer comment' requirement. Nullable if moderators did not leave notes.\n\n### `discussionboard_moderation_actions`\n\nModerator or admin actions taken during moderation - Implements the 'Moderation Dashboards' and 'Action Audit Trail' requirements.\nTracks all key actions performed by moderators/admins (e.g., content removal, warning issued, ban applied). Maintains 3NF compliance by recording one action per row linked to the actor and the relevant report/content. For example, when a moderator removes a violating post, the action is logged with actor ID, action type, timestamp, and optional notes.\nKey relationships: Links to actor (admin/moderator/member), the related report, and optionally, the target post or comment. Supports auditability and moderation transparency.\nSpecial behaviors: Serialized log for moderation actions for full traceability.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for moderation action record.\n- `actor_admin_id`: Actor if admin performed the action: [discussionboard_admins.id](#discussionboard_admins). Nullable if actor is moderator/member.\n- `actor_moderator_id`: Actor if moderator performed the action: [discussionboard_moderators.id](#discussionboard_moderators). Nullable if actor is admin/member.\n- `actor_member_id`: Actor if member performed the action: [discussionboard_members.id](#discussionboard_members). Nullable if actor is admin/moderator. For transparency, in case members can self-resolve or retract reports.\n- `related_report_id`: Linked report this action addresses: [discussionboard_reports.id](#discussionboard_reports). Nullable if not directly linked.\n- `target_post_id`: Target post acted upon (if applicable): [discussionboard_posts.id](#discussionboard_posts).\n- `target_comment_id`: Target comment acted upon (if applicable): [discussionboard_comments.id](#discussionboard_comments).\n- `action_type`\n  > Type of moderation action (e.g. warn, ban, content removal, close report).\n  > Implements moderation workflow requirements. Only controlled values allowed.\n- `action_reason`: Details or reason for the moderation action. Implements 'audit and rationale' requirements. Example: 'Repeated violations', 'Spam content'.\n- `created_at`: Timestamp of when the moderation action was performed. Supports audit trails and workflow sequencing. Required for every action.\n\n### `discussionboard_bans`\n\nUser bans from the platform - Implements business requirements in 'Moderation & Community Guidelines' and 'User Management'.\nRepresents temporary or permanent user bans imposed by admins or moderators. Maintains 3NF compliance with a table per ban event, linking to the banned user (admin, moderator, or member) and the actor imposing the ban. For example, when a moderator bans a user for policy violation, the record logs the target user, actor, period, reason, and status.\nKey relationships: References the banned user (any role) and the actor.\nSpecial behaviors: Only one active ban at a time per user. Ban status updates tracked by action logs.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for ban record.\n- `target_admin_id`: Target if banned user was an admin: [discussionboard_admins.id](#discussionboard_admins). Nullable if target is not an admin.\n- `target_moderator_id`: Target if banned user was a moderator: [discussionboard_moderators.id](#discussionboard_moderators). Nullable if target is not moderator.\n- `target_member_id`: Target if banned user was a member: [discussionboard_members.id](#discussionboard_members). Nullable if not member.\n- `actor_admin_id`: Admin who imposed the ban: [discussionboard_admins.id](#discussionboard_admins). Nullable unless ban imposed by admin.\n- `actor_moderator_id`: Moderator who imposed the ban: [discussionboard_moderators.id](#discussionboard_moderators). Nullable unless ban imposed by moderator.\n- `ban_reason`: Reason for ban - Implements explicit rationale requirement. Describes why user was banned. Ensures normalization. E.g. 'Severe harassment', 'Repeated spam'.\n- `ban_start_at`: When ban starts. Implements requirement for configurable ban durations. Prevents premature enforcement on the record.\n- `ban_end_at`: When ban ends (nullable if permanent). Enforces temporal normalization. E.g. 30-day ban, permanent if null.\n- `status`: Ban status (e.g. active, expired, lifted, scheduled). Controls enforcement by application logic. Implements status audit requirement.\n- `created_at`: Timestamp of ban record creation. Supports timeline and reporting.\n- `updated_at`: Timestamp for last update to ban record. Audits changes, supports compliance requirements.\n\n### `discussionboard_warnings`\n\nWarnings issued to users for infractions - Implements requirements under 'User Management' and 'Moderation Dashboards'.\nRepresents warnings (as opposed to bans) issued by moderators/admins to users for lesser violations. Maintains 3NF normalization: Each warning is linked to the warned user and the actor. Useful for progressive discipline enforcement. For example, members with repeated warnings may escalate to a ban.\nKey relationships: Links to the warned user (admin/mod/member) and the actor (admin/mod). \nSpecial behaviors: Track number and reason for warnings for each user; escalation rules handled externally by application logic.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for warning record.\n- `target_admin_id`: Warned admin (rare): [discussionboard_admins.id](#discussionboard_admins). Nullable if not admin.\n- `target_moderator_id`: Warned moderator (rare): [discussionboard_moderators.id](#discussionboard_moderators). Nullable if not moderator.\n- `target_member_id`: Warned member: [discussionboard_members.id](#discussionboard_members). Nullable if not member.\n- `actor_admin_id`: Admin issuing warning: [discussionboard_admins.id](#discussionboard_admins). Nullable unless admin issued.\n- `actor_moderator_id`: Moderator issuing warning: [discussionboard_moderators.id](#discussionboard_moderators). Nullable unless moderator issued.\n- `related_report_id`: Related report (if warning is result of a report): [discussionboard_reports.id](#discussionboard_reports). Nullable if warning is not report-triggered.\n- `reason`: Reason for issuing warning - Implements rationale requirement. E.g. 'Minor profanity', 'Off-topic'. Required for context audit.\n- `created_at`: When warning was issued. For audit and escalation flows. Required for every warning.\n\n### `discussionboard_audit_logs`\n\nDetailed audit logs for moderation events - Implements all audit and logging requirements outlined under 'Audit & Logging' and referenced throughout Moderation functional requirements. \nStores granular logs about all moderation events, including state changes, permission elevation, and sensitive moderation actions. Maintains 3NF: All fields are atomic, and each log references the related action, actor, and event time. For example, when a moderator changes the status of a report, an audit log is added with actor ID, event type, event detail, and when it occurred.\nKey relationships: Links to actor (admin/mod/member) and optionally to related moderation action or report.\nSpecial behaviors: Immutable by application design - supports regulatory and policy audit needs.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for audit log entry.\n- `actor_admin_id`: Admin actor (if applicable): [discussionboard_admins.id](#discussionboard_admins). Null if not admin.\n- `actor_moderator_id`: Moderator actor (if applicable): [discussionboard_moderators.id](#discussionboard_moderators). Null if not moderator.\n- `actor_member_id`: Member actor (if applicable): [discussionboard_members.id](#discussionboard_members). Null if not member.\n- `related_report_id`: Related report (if log is for a report event): [discussionboard_reports.id](#discussionboard_reports). Nullable if not report-related.\n- `related_moderation_action_id`: Related moderation action (if log is for an action event): [discussionboard_moderation_actions.id](#discussionboard_moderation_actions). Nullable if not related to an action.\n- `event_type`: Type of event (e.g., permission_change, status_update, ban_imposed). Controlled by business logic for audit classification. Only allowed values accepted.\n- `event_detail`: Detail about the event - Implements requirement for detailed traceability. Example: 'Report status changed from pending to resolved by moderator.'\n- `created_at`: Timestamp for the logged event. For compliance and sequencing. Required on every audit entry.\n\n## Guidelines\n\n```mermaid\nerDiagram\n\"discussionboard_community_guidelines\" {\n  String id PK\n  String title UK\n  String body\n  Int order_index\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_content_policies\" {\n  String id PK\n  String policy_code UK\n  String description\n  String category\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_profanity_filters\" {\n  String id PK\n  String word UK\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_automated_spam_rules\" {\n  String id PK\n  String rule_pattern UK\n  String description\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n```\n\n### `discussionboard_community_guidelines`\n\nCommunity Guidelines entity - This implements the clear community rule and code-of-conduct requirements as detailed in the Discussion Board Requirements section 1 (Community Rules & 01 Business Objectives). \n\nBusiness explanation: Stores guideline sections and texts in a normalized form, allowing updates and auditability for evolving community standards. Maintains 3NF compliance by separating each guideline entry, allowing references in moderation and user notifications. For example, guidelines about hate speech, constructive criticism, and post etiquette are stored here, referenced for automated onboarding or user display.\n\nKey relationships: May be referenced by moderation or notification components for contextual messaging. Special behaviors: Only admins can create or update guidelines; each entry is versioned by created_at/updated_at for audit trail.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for this guideline entry.\n- `title`: Title of the guideline section - Implements requirement for clear, organized guideline presentation to users. For example, 'Posting Etiquette' or 'Prohibited Conduct.' Ensures normalization by storing as an atomic value.\n- `body`: Full content text of the guideline - Implements detailed community rule requirements. For example, 'Do not post personal attacks or hate speech.' Normalized 3NF, no derived/consolidated data.\n- `order_index`: Display order for this guideline - Required for user experience sequencing in guideline displays. Ensures atomicity and flexibility, supports updates without data duplication.\n- `is_active`: Whether this guideline is currently enforced - Implements admin control of active/inactive statuses for evolving policy. For example, deactivating outdated rules. Ensures compliance with requirement to support updates and changes.\n- `created_at`: Timestamp when guideline was created - Supports audit logging (requirement 2.6), and helps track policy evolution over time. Atomic value, part of full normalization.\n- `updated_at`: Timestamp when guideline was last updated. Ensures full auditability of content changes. 3NF compliance.\n\n### `discussionboard_content_policies`\n\nContent Policy entity - Implements the explicit, system-level policy and moderation documentation requirements as detailed in requirements section 3 (Content Policies & Moderation Policy).\n\nBusiness purpose: Stores specific, enforceable policy rules that apply to user-generated content (e.g. 'No hate speech', 'No plagiarism'). Maintains normalization by handling each policy as a distinct, queryable record. Can be referenced during automated content checking or manual moderation. For example, policy text on 'Profanity' or 'Spam' detection is kept here.\n\nKey relationships: May be referenced when determining sanction actions. Special behaviors: Only admins can add/update/delete policy entries. Supports audit trail with timestamps.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for this content policy rule.\n- `policy_code`: Short code or name for this content policy - Implements requirement for structured policy documentation and reference. Enables quick lookup and enforcement. For example, 'NO_HATE_SPEECH', 'NO_SPAM'.\n- `description`: Detailed description of the content policy - Implements policy communication and moderator clarity requirements. For example, 'Any content promoting violence is strictly prohibited.' 3NF.\n- `category`: Category or policy group - Implements requirement to organize content policies by type, e.g., 'Spam', 'Abuse', 'Copyright'. Ensures normalization by avoiding transitive dependencies.\n- `is_active`: Whether this policy is active/enforced - Needed for content policy versioning and update flows. For example, deactivating obsolete policies. Ensures atomicity.\n- `created_at`: Timestamp when this policy was created. Required for audit trails and rollback scenarios (requirements 2.6, 4).\n- `updated_at`: Timestamp when this policy was last updated - Ensures full auditability and supports policy review schedules.\n\n### `discussionboard_profanity_filters`\n\nProfanity Filter entity - Implements the system-level requirement for profanity filtering as outlined in requirements section 3.4 (Content Policies, Moderation).\n\nBusiness purpose: Contains normalized words/phrases that trigger system profanity detection on posts and comments. Maintains 3NF by storing each profane word or phrase as a single record, linked to activation status and audit fields. For example, the word 'foobar' or a list of banned words.\n\nKey relationships: May be referenced by automated moderation or content creation APIs. Special behaviors: Admins update/add words as needed, all events are timestamped.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique ID for this profanity filter entry.\n- `word`: Word or phrase to be filtered - Implements requirement for configurable, updatable profanity filtering. Ensures normalized storage. For example, 'badword'.\n- `is_active`: Whether this word is currently being filtered - Required for admin update flexibility. For example, suspending words from filter lists. Atomic value.\n- `created_at`: When this filter entry was created - For auditability and policy management. 3NF value.\n- `updated_at`: When this filter entry was last updated - Needed for rollbacks or removals in system logs, part of full normalization.\n\n### `discussionboard_automated_spam_rules`\n\nAutomated Spam Rule entity - Implements the automated spam rule detection policies required by Functional Requirements 3.3.4 and Moderation Policy.\n\nBusiness purpose: Stores configurable, versioned rules or patterns that the platform's automated spam detector references. Maintains 3NF by separating each spam rule (regex, expression, or keyword) as an atomic record. For example, an entry could define regex matching repeated links or banned spam phrases.\n\nKey relationships: May be consumed by content creation or moderation APIs. Special behaviors: Rule activation handled by admins, all updates tracked in audit logs.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for this spam rule entry.\n- `rule_pattern`: Pattern or expression for spam detection - Implements flexible, updatable automated spam pattern detection. 3NF compliance. For example, regex for repeated links or specific spam syntax.\n- `description`: Explanation of what this rule detects - Implements clarity and auditability. For example, 'Detects repeated posting of phishing URLs.' Atomic, not derived.\n- `is_active`: Whether the rule is currently active - Allows admins to enable/disable detection flexibly for evolving spam tactics. Ensures policy agility.\n- `created_at`: Timestamp when this spam rule was created - Required for audit logging and rule review processes.\n- `updated_at`: Timestamp when this spam rule was last updated - Ensures full auditability of rule changes. 3NF compliance.\n\n## Notifications\n\n```mermaid\nerDiagram\n\"discussionboard_notifications\" {\n  String id PK\n  String discussionboard_member_id FK\n  String type\n  String related_entity_id \"nullable\"\n  String related_entity_type \"nullable\"\n  String content\n  Boolean is_read\n  DateTime delivered_at\n  DateTime expires_at \"nullable\"\n}\n\"discussionboard_alert_preferences\" {\n  String id PK\n  String discussionboard_member_id FK\n  String notification_type\n  String delivery_channel\n  DateTime updated_at\n}\n```\n\n### `discussionboard_notifications`\n\nDiscussion Board Notification Entity - Implements the notification delivery requirement from the Notification System and Audit & Logging sections. \n\nThis model stores each notification event (such as replies, likes, mentions, moderation actions) sent to users. It allows tracking, delivery status, and historic audit for every notification generated by system events across the discussion board.\n\nMaintains 3NF compliance by separating notification records from user profiles and alert preferences (notification delivery configuration is stored in a separate table). For example, when a user receives a reply to their post, a notification record is created here, referencing the recipient, event details, and delivery state.\n\nKey relationships: Links to recipients (discussionboard_members) via foreign key. Optionally relates to specific posts, comments, or moderation events stored in other domains.\nSpecial behaviors: Notifications can be marked as read/unread. Supports expirable and persistent notification types.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for each notification.\n- `discussionboard_member_id`: Recipient's [discussionboard_members.id](#discussionboard_members) - The user who receives this notification. Fulfills the requirement for per-user notification tracking and targeting.\n- `type`: Notification type - Implements the Notification System requirement specifying kind of event (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system'). Defines the user event that triggered notification delivery. Ensures normalization by recording type as a code, not a computed string. Example: 'reply'.\n- `related_entity_id`: Reference ID of the related entity (e.g., post, comment, moderation action) - Implements the Notification System's requirement for contextual notification. Stores the target object relevant to the notification for audit/logging. Can be null if event is generic. Ensures normalization by storing only the ID. Example: the comment being replied to.\n- `related_entity_type`: Type of related entity referenced (e.g., 'post', 'comment', 'moderation_action') - Implements requirement to allow notifications on multiple kinds of entities. Ensures normalization by specifying entity type in a discrete field, not by using polymorphic joins. Example: 'post'.\n- `content`: Notification message content - Implements requirement for human-readable notification body. Stores the message shown to the user. Example: 'Alice replied to your post.' Field is atomic and normalized. No computed values here.\n- `is_read`: Flag indicating whether the notification has been read. Supports UI requirements for marking notifications as read/unread. Ensures normalization by only storing a boolean flag. Example: false (unread).\n- `delivered_at`: Timestamp when notification was delivered to the user. Implements audit/logging requirements for notification delivery history and sequencing. Normalization: Each delivery occurrence is atomic. Example: 2024-06-17T12:00:00Z.\n- `expires_at`: Timestamp when notification expires - Implements event-driven notification expiry (for temporary/scheduled alerts). Ensures normalization by storing expiry per notification, not per user. Example: 2024-07-01T00:00:00Z. May be null if notification does not expire.\n\n### `discussionboard_alert_preferences`\n\nDiscussion Board Alert Preference Entity - Implements the notification preferences requirement from the Notification System and Settings functionality sections. \n\nThis model stores each user's per-type notification delivery preferences (e.g., email, push, in-app, or off). Fulfills the requirement to provide members with fine-grained control over which notification types they receive and how they are delivered.\n\nMaintains 3NF compliance by separating user notification configuration from actual notification data and user profile records. For example, a user may choose in-app alerts for replies but email notifications for moderation actions, which is configured here.\n\nKey relationships: References the user (discussionboard_members) as the owner of these preferences. No denormalized or computed fields.\nSpecial behaviors: Only one set of preferences per (user, notification type) enforced by unique index constraint.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for each alert preference record.\n- `discussionboard_member_id`: Owner's [discussionboard_members.id](#discussionboard_members) - The user who owns this alert preference set. Implements per-user preference requirement for notification delivery.\n- `notification_type`: Notification type for which this preference applies (e.g., 'reply', 'like', 'mention', 'moderation_action', 'system') - Implements the Notification System and Settings requirements for configurable per-type delivery. Ensures normalization by storing type as atomic value. Example: 'moderation_action'.\n- `delivery_channel`: Delivery channel preference (e.g., 'email', 'push', 'in_app', 'none') - Implements requirement for per-type delivery method configuration by user. Ensures normalization by storing as atomic value, not as calculated field. Example: 'email'.\n- `updated_at`: Timestamp when these preferences were last updated. Supports audit/logging for settings changes. Ensures atomic history of preference changes. Example: 2024-06-18T13:31:21Z.\n\n## Logs\n\n```mermaid\nerDiagram\n\"discussionboard_action_logs\" {\n  String id PK\n  String actor_id FK\n  String event_type\n  String event_target_id \"nullable\"\n  String metadata \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_error_logs\" {\n  String id PK\n  String error_code\n  String error_message\n  String stack_trace \"nullable\"\n  String context_id \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_api_access_logs\" {\n  String id PK\n  String actor_id FK \"nullable\"\n  String method\n  String endpoint\n  Int status_code\n  String ip_address\n  String user_agent \"nullable\"\n  Int response_time_ms\n  DateTime created_at\n}\n```\n\n### `discussionboard_action_logs`\n\n[Discussion Board Action Logs] - This implements the audit trail, accountability, and compliance requirements from the requirements document (including 2.6 Audit & Logging, moderation, and transparency mandates).\n\nRecords every critical user or system action, especially for admin/moderator-level events. Maintains 3NF (fully normalized) by separating actor ID, event types, and contextual entity references, supports extensible metadata, and avoids denormalization. Example: logs a moderator deleting a post or editing a comment.\n\nKey relationships: Connects to user tables such as [discussionboard_admins.id](#discussionboard_admins), [discussionboard_moderators.id](#discussionboard_moderators), or other actors by \"actor_id\" field.\nSpecial behaviors: Immutable log entries, supports efficient filtering by actor/event/time; forms basis for compliance reporting and root-cause investigation.\n\nProperties as follows:\n\n- `id`: Primary Key. Unique identifier for each log entry.\n- `actor_id`: Actor's [discussionboard_members.id](#discussionboard_members), [discussionboard_admins.id](#discussionboard_admins), or related user type associated with this action. This ties each log entry to the user responsible for the action, supporting auditability and cross-user queries.\n- `event_type`: Type of action performed. Implements event categorization (e.g., POST_CREATED, COMMENT_DELETED, MODERATOR_BAN). Enables filtering and auditing by action nature. Ensures normalization by not encoding rules in single fields. Example: 'POST_DELETED'.\n- `event_target_id`: Associated entity ID for this action (e.g., post, comment, report), implements requirement for contextual event reference. Maintains normalized design by storing IDs only. Example: The comment or post UUID affected. Nullable if event affects no entity.\n- `metadata`: Additional JSON metadata for extensibility (e.g., IP address, device, moderation reason). Implements extensibility and normalization by not hardcoding new columns for rare event data. Example: '{\"reason\":\"Spam\",\"ip\":\"10.1.2.3\"}'.\n- `created_at`: Timestamp when the action occurred. Implements mandatory audit resolution and helps support sorting/filtering by time. Example: '2025-07-22T13:30:45.969+09:00'.\n\n### `discussionboard_error_logs`\n\n[Error Logging Table] - This implements requirements from 3.1 Security, 3.2 Performance, and 3.5 Compliance regarding platform and API error capture for diagnostics and resilience.\n\nCaptures and audits all system or application errors and exceptions in a normalized, traceable log. 3NF compliance by completely separating error details from business records, with reference context available via \"context_id\". Used in debugging, incident response, or platform monitoring. Example: logs database faults, uncaught exceptions, and failed external API calls.\n\nKey relationships: No direct foreign keys (for privacy and decoupling from actor data).\nSpecial behaviors: Immutable, full-text searchable, supports quick triage by error code and time.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `error_code`: Application-defined error or exception code. Enables quick error categorization and system monitoring. Example: 'API_TIMEOUT', 'UNCAUGHT_EXCEPTION'.\n- `error_message`: Human-readable error message for reporting and debugging. Meets compliance for log clarity. Example: 'Failed to fetch posts due to network timeout.'\n- `stack_trace`: Full stack trace or technical details for debugging. Fulfills non-functional requirements for detailed auditing; normalized by isolating trace info from other data. Nullable if unavailable. Example: JavaScript stack trace or error object.\n- `context_id`: Arbitrary context entity (e.g., API request ID or related entity UUID). Supports linking errors to request or entity. Nullable if not applicable.\n- `created_at`: Timestamp the error was recorded, allows sequencing and SLA tracking. Example: '2025-07-22T13:30:45.969+09:00'.\n\n### `discussionboard_api_access_logs`\n\n[API Access Logs] - Implements non-functional requirements 3.1 Security, 3.2 Performance, and 2.6 Audit by tracing all API interactions for security review, rate-limiting enforcement, and usage analytics.\n\nLogs all API calls, including the user (if authenticated), endpoint, HTTP method, and result. Maintains normalization (3NF) with user linkage by actor_id (nullable for guests), never storing denormalized request payloads. Used for monitoring abuse and generating analytics. Example: logs a member's GET to /api/posts or a failed POST to /api/comments.\n\nKey relationships: May reference the user by actor_id (nullable for guest requests). No other foreign keys.\nSpecial behaviors: Massive write-optimized; may be purged for data retention compliance.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `actor_id`: Authenticated user's [discussionboard_members.id](#discussionboard_members), [discussionboard_admins.id](#discussionboard_admins), or related role. Null if guest/public API. Enables audit and correlation to users.\n- `method`: HTTP method used for this API call (GET, POST, PATCH, DELETE, etc). Implements API audit detail. Example: 'GET'.\n- `endpoint`: API endpoint path or resource accessed. Enables fine-grained analytics. Example: '/api/comments/12345'.\n- `status_code`: Returned HTTP status code. Allows compliance and diagnostics on failed/successful calls. Example: 200, 403, 404.\n- `ip_address`: IP address of the client for this call. Supports abuse monitoring and incident forensics. Example: '203.0.113.5'.\n- `user_agent`: Client user-agent for context in debugging or device profiling. Nullable if unavailable. Example: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X)'.\n- `response_time_ms`: Request processing latency in milliseconds. Enables API performance monitoring. Example: 163.\n- `created_at`: Timestamp of the API call. Supports retention and incident analysis. Example: '2025-07-22T13:30:45.969+09:00'.\n","diagrams":{"Systematic":"```mermaid\nerDiagram\n\"discussionboard_sections\" {\n  String id PK\n  String name UK\n  String description \"nullable\"\n  Int sort_order\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_boards\" {\n  String id PK\n  String discussionboard_section_id FK\n  String name UK\n  String description \"nullable\"\n  String rules \"nullable\"\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_tags\" {\n  String id PK\n  String tag UK\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_board_subscriptions\" {\n  String id PK\n  String discussionboard_board_id FK\n  String discussionboard_member_id FK\n  DateTime created_at\n}\n\"discussionboard_board_settings\" {\n  String id PK\n  String discussionboard_board_id FK,UK\n  Boolean allow_images\n  Boolean require_moderator_approval\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_notification_settings\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  Boolean receive_board_notifications\n  Boolean receive_mention_notifications\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_boards\" }o--|| \"discussionboard_sections\" : fk_discussionboard_boards_section\n\"discussionboard_board_subscriptions\" }o--|| \"discussionboard_boards\" : fk_db_board_subs_board\n\"discussionboard_board_settings\" |o--|| \"discussionboard_boards\" : fk_db_board_settings_board\n```","Actors":"```mermaid\nerDiagram\n\"discussionboard_admins\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  DateTime granted_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_moderators\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  DateTime granted_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_members\" {\n  String id PK\n  String username UK\n  String password_hash\n  DateTime created_at\n  DateTime activated_at \"nullable\"\n  DateTime deactivated_at \"nullable\"\n}\n\"discussionboard_guests\" {\n  String id PK\n  String session_token UK\n  DateTime created_at\n}\n\"discussionboard_user_profiles\" {\n  String id PK\n  String discussionboard_member_id FK,UK\n  String display_name \"nullable\"\n  String bio \"nullable\"\n  String(80000) avatar_url \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_user_emails\" {\n  String id PK\n  String discussionboard_member_id FK\n  String email UK\n  Boolean is_verified\n  Boolean is_primary\n  DateTime added_at\n  DateTime verified_at \"nullable\"\n}\n\"discussionboard_user_auths\" {\n  String id PK\n  String discussionboard_member_id FK\n  String provider\n  String provider_user_id\n  DateTime linked_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_user_sessions\" {\n  String id PK\n  String discussionboard_member_id FK\n  String session_token UK\n  DateTime created_at\n  DateTime expires_at\n  DateTime revoked_at \"nullable\"\n}\n\"discussionboard_admins\" |o--|| \"discussionboard_members\" : discussionboard_admins_member\n\"discussionboard_moderators\" |o--|| \"discussionboard_members\" : discussionboard_moderators_member\n\"discussionboard_user_profiles\" |o--|| \"discussionboard_members\" : discussionboard_user_profiles_member\n\"discussionboard_user_emails\" }o--|| \"discussionboard_members\" : discussionboard_user_emails_member\n\"discussionboard_user_auths\" }o--|| \"discussionboard_members\" : discussionboard_user_auths_member\n\"discussionboard_user_sessions\" }o--|| \"discussionboard_members\" : discussionboard_user_sessions_member\n```","Content":"```mermaid\nerDiagram\n\"discussionboard_posts\" {\n  String id PK\n  String board_id FK\n  String author_id FK\n  String title\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_post_edits\" {\n  String id PK\n  String post_id FK\n  String editor_id FK\n  String edit_summary \"nullable\"\n  DateTime edited_at\n}\n\"discussionboard_post_likes\" {\n  String id PK\n  String post_id FK\n  String user_id FK\n  Boolean is_like\n  DateTime created_at\n}\n\"discussionboard_post_views\" {\n  String id PK\n  String post_id FK\n  String user_id FK \"nullable\"\n  String session_id \"nullable\"\n  DateTime viewed_at\n}\n\"discussionboard_comments\" {\n  String id PK\n  String post_id FK\n  String author_id FK\n  String parent_id FK \"nullable\"\n  String body\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"discussionboard_comment_likes\" {\n  String id PK\n  String comment_id FK\n  String user_id FK\n  Boolean is_like\n  DateTime created_at\n}\n\"discussionboard_comment_edits\" {\n  String id PK\n  String comment_id FK\n  String editor_id FK\n  String edit_summary \"nullable\"\n  DateTime edited_at\n}\n\"discussionboard_comment_views\" {\n  String id PK\n  String comment_id FK\n  String user_id FK \"nullable\"\n  String session_id \"nullable\"\n  DateTime viewed_at\n}\n\"discussionboard_post_edits\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_post_likes\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_post_views\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_comments\" }o--|| \"discussionboard_posts\" : post\n\"discussionboard_comments\" }o--o| \"discussionboard_comments\" : parent\n\"discussionboard_comment_likes\" }o--|| \"discussionboard_comments\" : comment\n\"discussionboard_comment_edits\" }o--|| \"discussionboard_comments\" : comment\n\"discussionboard_comment_views\" }o--|| \"discussionboard_comments\" : comment\n```","Moderation":"```mermaid\nerDiagram\n\"discussionboard_reports\" {\n  String id PK\n  String reporting_member_id FK\n  String target_post_id FK \"nullable\"\n  String target_comment_id FK \"nullable\"\n  String reason\n  String status\n  DateTime created_at\n  DateTime reviewed_at \"nullable\"\n  DateTime resolved_at \"nullable\"\n  String moderation_note \"nullable\"\n}\n\"discussionboard_moderation_actions\" {\n  String id PK\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String actor_member_id FK \"nullable\"\n  String related_report_id FK \"nullable\"\n  String target_post_id FK \"nullable\"\n  String target_comment_id FK \"nullable\"\n  String action_type\n  String action_reason \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_bans\" {\n  String id PK\n  String target_admin_id FK,UK \"nullable\"\n  String target_moderator_id FK,UK \"nullable\"\n  String target_member_id FK,UK \"nullable\"\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String ban_reason\n  DateTime ban_start_at\n  DateTime ban_end_at \"nullable\"\n  String status\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_warnings\" {\n  String id PK\n  String target_admin_id FK \"nullable\"\n  String target_moderator_id FK \"nullable\"\n  String target_member_id FK \"nullable\"\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String related_report_id FK \"nullable\"\n  String reason\n  DateTime created_at\n}\n\"discussionboard_audit_logs\" {\n  String id PK\n  String actor_admin_id FK \"nullable\"\n  String actor_moderator_id FK \"nullable\"\n  String actor_member_id FK \"nullable\"\n  String related_report_id FK \"nullable\"\n  String related_moderation_action_id FK \"nullable\"\n  String event_type\n  String event_detail\n  DateTime created_at\n}\n\"discussionboard_moderation_actions\" }o--o| \"discussionboard_reports\" : fk_moderationactions_related_report\n\"discussionboard_warnings\" }o--o| \"discussionboard_reports\" : fk_warnings_related_report\n\"discussionboard_audit_logs\" }o--o| \"discussionboard_reports\" : fk_auditlogs_related_report\n\"discussionboard_audit_logs\" }o--o| \"discussionboard_moderation_actions\" : fk_auditlogs_related_moderation_action\n```","Guidelines":"```mermaid\nerDiagram\n\"discussionboard_community_guidelines\" {\n  String id PK\n  String title UK\n  String body\n  Int order_index\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_content_policies\" {\n  String id PK\n  String policy_code UK\n  String description\n  String category\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_profanity_filters\" {\n  String id PK\n  String word UK\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n\"discussionboard_automated_spam_rules\" {\n  String id PK\n  String rule_pattern UK\n  String description\n  Boolean is_active\n  DateTime created_at\n  DateTime updated_at\n}\n```","Notifications":"```mermaid\nerDiagram\n\"discussionboard_notifications\" {\n  String id PK\n  String discussionboard_member_id FK\n  String type\n  String related_entity_id \"nullable\"\n  String related_entity_type \"nullable\"\n  String content\n  Boolean is_read\n  DateTime delivered_at\n  DateTime expires_at \"nullable\"\n}\n\"discussionboard_alert_preferences\" {\n  String id PK\n  String discussionboard_member_id FK\n  String notification_type\n  String delivery_channel\n  DateTime updated_at\n}\n```","Logs":"```mermaid\nerDiagram\n\"discussionboard_action_logs\" {\n  String id PK\n  String actor_id FK\n  String event_type\n  String event_target_id \"nullable\"\n  String metadata \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_error_logs\" {\n  String id PK\n  String error_code\n  String error_message\n  String stack_trace \"nullable\"\n  String context_id \"nullable\"\n  DateTime created_at\n}\n\"discussionboard_api_access_logs\" {\n  String id PK\n  String actor_id FK \"nullable\"\n  String method\n  String endpoint\n  Int status_code\n  String ip_address\n  String user_agent \"nullable\"\n  Int response_time_ms\n  DateTime created_at\n}\n```"}},"step":0}]