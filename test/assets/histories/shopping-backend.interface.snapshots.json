[{"event":{"type":"interfaceStart","created_at":"2025-07-22T14:27:57.788Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":1031910,"input":{"total":964239,"cached":13824},"output":{"total":67671,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1031910,"input":{"total":964239,"cached":13824},"output":{"total":67671,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1031910,"input":{"total":964239,"cached":13824},"output":{"total":67671,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1031910,"input":{"total":964239,"cached":13824},"output":{"total":67671,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceEndpoints","endpoints":[{"path":"/aiShop/channels","method":"patch"},{"path":"/aiShop/channels/{id}","method":"get"},{"path":"/aiShop/channels","method":"post"},{"path":"/aiShop/channels/{id}","method":"put"},{"path":"/aiShop/channels/{id}","method":"delete"},{"path":"/aiShop/sections","method":"patch"},{"path":"/aiShop/sections/{id}","method":"get"},{"path":"/aiShop/sections","method":"post"},{"path":"/aiShop/sections/{id}","method":"put"},{"path":"/aiShop/sections/{id}","method":"delete"},{"path":"/aiShop/categories","method":"patch"},{"path":"/aiShop/categories/{id}","method":"get"},{"path":"/aiShop/categories","method":"post"},{"path":"/aiShop/categories/{id}","method":"put"},{"path":"/aiShop/categories/{id}","method":"delete"},{"path":"/aiShop/configurations","method":"patch"},{"path":"/aiShop/configurations/{id}","method":"get"},{"path":"/aiShop/configurations","method":"post"},{"path":"/aiShop/configurations/{id}","method":"put"},{"path":"/aiShop/configurations/{id}","method":"delete"},{"path":"/aiShop/files","method":"patch"},{"path":"/aiShop/files/{id}","method":"get"},{"path":"/aiShop/files","method":"post"},{"path":"/aiShop/files/{id}","method":"put"},{"path":"/aiShop/files/{id}","method":"delete"},{"path":"/aiShop/auditLogs","method":"patch"},{"path":"/aiShop/auditLogs/{id}","method":"get"},{"path":"/aiShop/auditLogs","method":"post"},{"path":"/aiShop/auditLogs/{id}","method":"put"},{"path":"/aiShop/auditLogs/{id}","method":"delete"}],"created_at":"2025-07-22T14:27:57.788Z","step":0},"tokenUsage":{"facade":{"aggregate":{"total":1085592,"input":{"total":1017497,"cached":13824},"output":{"total":68095,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1085592,"input":{"total":1017497,"cached":13824},"output":{"total":68095,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1085592,"input":{"total":1017497,"cached":13824},"output":{"total":68095,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1085592,"input":{"total":1017497,"cached":13824},"output":{"total":68095,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"This operation retrieves a search result list of ai_shop_channels in the system. It supports advanced filtering, pagination, and sorting to enable administrators or system managers to review multiple marketplace channels at once. Typical filters may include code, name, enabled status, and creation/update timestamps. Implements the pagination, search, and ordering requirements detailed in the Systematic module's Prisma schema comments. The results contain the summarized information of multiple channel entities as per admin dashboard needs.","description":"This endpoint allows for the batch retrieval of ai_shop_channels, facilitating management and review of all marketplace channels. As described in the Prisma schema, the ai_shop_channels table stores all atomic information for each distinct channel, including unique code, display name, enabled state, and timestamps for creation and update. This operation enables searching by code, filtering by enabled status, and sorting by name or sort_order to support dynamic shopfront displays and event management.\n\nAccess to this endpoint should be restricted to users authorized for administrative functions, due to the sensitive nature of channel management. Standard pagination and sorting conventions apply; invalid filter values should result in clear errors. The endpoint is designed to work in conjunction with detailed and single-channel endpoints, supporting a complete CRUD lifecycle for channel management.\n\nThe endpoint ensures that the business requirements of comprehensive channel oversight, compliance with business audit policies, and robust performance for large numbers of channels are met, as outlined in both the API planning document and the Prisma schema.","summary":"List/retrieve ai_shop_channels with search, filter, and pagination (Systematic domain table).","parameters":[],"requestBody":{"description":"Parameters for list/search, filtering, and ordering of ai_shop_channels, including page, perPage, searchText, filter, and sorting info.","typeName":"aiShopChannel.IRequest"},"responseBody":{"description":"Paginated list result and summary details for ai_shop_channels, with pagination meta-data included.","typeName":"aiShopChannel.IPage"},"authorizationRoles":["admin"],"path":"/aiShop/channels","method":"patch"},{"specification":"This operation retrieves a single ai_shop_channel detail for a given channel ID. The endpoint serves for detail display or edit form population in admin dashboards. Channel IDs are UUIDs corresponding to the primary key in the ai_shop_channels Prisma schema. Only users with administrative privileges can access this data.","description":"This endpoint provides the full details of a single ai_shop_channel entity, including all atomic and descriptive columns: code, display name, enabled status, display order, and timestamps. It draws directly from the ai_shop_channels table (primary key: id), ensuring consistency and referential integrity with other marketplace configuration entities.\n\nSensitive channel information, such as whether the channel is currently enabled or not, is returned for precise admin management and audit. Requests with invalid or non-existent IDs return clear errors or not found results.\n\nThe operation must be secured for admin or system configuration roles, as improper exposure or modification can directly affect the platform's storefront and section/category scoping.","summary":"Get ai_shop_channel details by channel ID (Systematic domain table, admin only).","parameters":[{"name":"id","description":"UUID of the ai_shop_channel entity to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data of ai_shop_channels entity, including all admin-editable fields and status info.","typeName":"aiShopChannel"},"authorizationRoles":["admin"],"path":"/aiShop/channels/{id}","method":"get"},{"specification":"Create a new ai_shop_channel entity record. Supports administrator workflows for registering new marketplace or event channels. All atomic fields, such as code, name, and enabled state, must be supplied. Upon success, returns the created channel's full details.","description":"This endpoint enables the creation of a new ai_shop_channel, as per platform management requirements. The Prisma schema for ai_shop_channels specifies required atomic fields, including unique code, name, enabled status, and display sort order. The request must supply all non-nullable fields as per the commented schema, and admin workflows may additionally attach an initial section or category.\n\nAfter validating uniqueness constraints (e.g., no duplicate code), the system persists the channel. On creation, the full representation, as returned by the detail endpoint, is provided along with its generated UUID. Invalid data or conflict in codes should yield error responses following REST conventions.\n\nOnly admin or system-level users can register new channels, aligning with compliance and audit requirements established in planning and table comments.","summary":"Create (insert) a new ai_shop_channel entity (Systematic module, admin only).","parameters":[],"requestBody":{"description":"Data for new ai_shop_channel creation. Must include all required atomic fields.","typeName":"aiShopChannel.ICreate"},"responseBody":{"description":"Full ai_shop_channel entity object as persisted in the database.","typeName":"aiShopChannel"},"authorizationRoles":["admin"],"path":"/aiShop/channels","method":"post"},{"specification":"Update a single ai_shop_channel's fields by its ID. Supports complete update (PUT semantics) for atomic attributes such as name, enabled status, and display order. Restricted to authorized admin roles. The full representation of the channel is returned after update.","description":"This endpoint implements the full update (PUT) of an ai_shop_channel given its primary key ID. As dictated by the Systematic domain's schema, the operation must handle all non-nullable fields: code, name, enabled, sort_order, and timestamps for audit. The input must pass validation against uniqueness constraints (such as unique code).\n\nAfter update, the complete new channel data is returned, supporting admin panel editing UX. If the channel ID is invalid or the update violates business logic (e.g., code conflict), error responses are generated as per REST standards.\n\nSecurity for this endpoint aligns with audit and operational risk policies: only platform administrators may perform channel updates.","summary":"Update (PUT) all fields of an ai_shop_channel by ID (Systematic, admin only).","parameters":[{"name":"id","description":"UUID of the ai_shop_channel entity to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full replacement data for all atomic fields of ai_shop_channel. Must include all required fields.","typeName":"aiShopChannel.IUpdate"},"responseBody":{"description":"ai_shop_channel after update as stored in the database.","typeName":"aiShopChannel"},"authorizationRoles":["admin"],"path":"/aiShop/channels/{id}","method":"put"},{"specification":"Delete (remove) a single ai_shop_channel entity by its ID, with admin authorization required. Hard or soft delete is determined by business logic. Relational constraints and referential integrity are enforced according to the database and Systematic domain policy.","description":"This endpoint deletes (or marks deleted, if soft deletion is implemented) an ai_shop_channel by its id. The operation is restricted to admin-level users according to the sensitive nature of channel management. The input ID must be a valid UUID; if not found or already deleted, a suitable error result is returned.\n\nAll referential integrity constraints from the Prisma schema must be adhered to, meaning that sections, categories, or posts associated with this channel are handled per cascading rules or protected from orphaning. Deletion events are to be audit-logged as required by compliance protocols discussed in the requirement docs.\n\nThe result is a confirmation of deletion, possibly including the deleted entity's basic data, or a null body if preferred by REST convention.","summary":"Delete ai_shop_channel by ID (Systematic, admin-only, audit-logged).","parameters":[{"name":"id","description":"UUID of the ai_shop_channel to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of deletion (or the deleted entity's data, if returned).","typeName":"aiShopChannel.IDeleteResponse"},"authorizationRoles":["admin"],"path":"/aiShop/channels/{id}","method":"delete"},{"specification":"List/search all ai_shop_sections in the system. Supports advanced filtering, pagination, and sorting for administrative and configuration use cases. Implements display and configuration requirements from the platform management module.","description":"This endpoint retrieves a paginated and filtered list of ai_shop_sections entities according to the ai_shop_sections Prisma schema. The entity covers marketplace section management within a channel, with atomic fields for code, name, enabled state, and relationships to channel. Filtering may include channel ID, code, name, and enabled status, supporting mall configuration tasks, campaign/event homepages, and admin display control.\n\nThe response includes both section summaries and pagination meta as specified by the IPage pattern. Authorization is restricted to system admin or trusted management roles. This endpoint should support UI for section configuration and business audit requirements, as well as support actions to create or update specific sections via separate endpoints.\n\nError handling covers invalid filter arguments and permission denials, clear error reporting as described in the schema comments and requirements analysis.","summary":"Search/list ai_shop_sections with filtering and pagination (Systematic domain table).","parameters":[],"requestBody":{"description":"List/search filter and pagination parameters for ai_shop_sections. May include channel ID, code, name, enabled, order, etc.","typeName":"aiShopSection.IRequest"},"responseBody":{"description":"Paginated search/list result for ai_shop_sections. Includes section rows and pagination info.","typeName":"aiShopSection.IPage"},"authorizationRoles":["admin"],"path":"/aiShop/sections","method":"patch"},{"specification":"Retrieve the complete details for a single ai_shop_section entity, by its UUID primary key. Used for admin panel detail view and editing workflows. Returns all atomic fields and identifies the parent channel.","description":"This endpoint fetches a single ai_shop_section from the database given its primary key (UUID). The response includes all atomic section fields (code, name, enabled state, sort_order, channel linkage, and timestamps) as defined in the Prisma schema's section comments. The operation is restricted to platform administrators or other configuration-authorized users.\n\nIf the requested section does not exist, a not found or error response is returned. The endpoint is essential for admin-side section editing, home-page configuration, and campaign management. Sections retrieved this way support update and deletion via companion endpoints, supporting the full CRUD lifecycle and business compliance documented in the requirements.\n\nAll access is audit-logged as per security/compliance planning, fulfilling the traceability and platform integrity controls outlined across requirements and data structure descriptions.","summary":"Fetch detail of a single ai_shop_section by UUID (Systematic domain table, admin only).","parameters":[{"name":"id","description":"ai_shop_sections entity UUID to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full ai_shop_section entity details, including all editable/admin fields and channel info.","typeName":"aiShopSection"},"authorizationRoles":["admin"],"path":"/aiShop/sections/{id}","method":"get"},{"specification":"Create a new ai_shop_section entity, with admin authorization required. All required atomic fields, including channel linkage, code, name, sort order, and enabled state must be supplied. Ensures unique constraints within the parent channel. Returns the full section object on success.","description":"This endpoint registers a new ai_shop_section under a specified channel, as detailed in the system architecture and platform management planning. The request body must include all non-nullable atomic attributes (such as channel_id, code, name, enabled flag), with the business logic enforcing uniqueness on the channel+code as per the Prisma schema definition.\n\nAfter verifying input and referential integrity (channel exists), the section is persisted. On success, the response gives the created section entity, supporting further admin editing/workflow, and enabling UI tools for section configuration in the admin panel.\n\nAuthorization is limited to admin roles, since improper configuration can affect mall UX or campaign events. Errors are surfaced per REST and schema guidance, using unique constraint and FK validation.","summary":"Create a new ai_shop_section (insert row, admin only, Systematic domain table).","parameters":[],"requestBody":{"description":"All atomic attributes for new ai_shop_section, including channel linkage and display order.","typeName":"aiShopSection.ICreate"},"responseBody":{"description":"Entity object for the newly created ai_shop_sections row.","typeName":"aiShopSection"},"authorizationRoles":["admin"],"path":"/aiShop/sections","method":"post"},{"specification":"Update all atomic fields of a single ai_shop_section, identified by its UUID. Implements admin edit+replace logic for the section entity. All fields required for update. Returns the updated entity data upon success. Only admins may execute this.","description":"This endpoint implements a complete update (PUT) to an ai_shop_section. The input must supply all non-nullable fields (code, name, order, enabled, channel linkage, etc.), as enforced by the Prisma schema comments and requirements analysis. Update requests validate uniqueness constraints within the parent channel (no duplicate code per channel) and referential channel integrity.\n\nReturns the entity after update for admin dashboard integration. Errors for constraint violations or missing entities are handled per standard REST conventions. Section configuration changes are audit-logged to comply with admin workflow and system compliance needs documented in the requirements files.","summary":"PUT update all fields of ai_shop_section by UUID (Systematic/config, admin-only).","parameters":[{"name":"id","description":"UUID for ai_shop_sections entity to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full put update/set data for ai_shop_section (atomic fields required).","typeName":"aiShopSection.IUpdate"},"responseBody":{"description":"Section record after update, with all properties set.","typeName":"aiShopSection"},"authorizationRoles":["admin"],"path":"/aiShop/sections/{id}","method":"put"},{"specification":"Delete a single ai_shop_section from the system by its UUID. Admin authorization required. Referential integrity and compliance auditing mandatory. Soft or hard deletes per business config. Returns operation result or deleted info as per API design.","description":"This endpoint enables an admin to remove (delete or mark deleted) a ai_shop_section entity from the marketplace configuration by its ID. The operation checks entity existence, handles related referential integrity (e.g., channel linkage), and logs all admin actions for compliance.\n\nReturns a confirmation response or the deleted record, aligned to the business and system configuration needs. Nonexistent IDs or already deleted objects yield error responses per REST and requirements/planning docs.\n\nDeletion is logged per audit/compliance requirements to provide traceability, as described in the planning documentation and schema comments.","summary":"Delete ai_shop_section entity by ID (Systematic domain, admin-only, audit-logged).","parameters":[{"name":"id","description":"ai_shop_sections entity UUID to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of section deletion, or deleted object as preferred by policy.","typeName":"aiShopSection.IDeleteResponse"},"authorizationRoles":["admin"],"path":"/aiShop/sections/{id}","method":"delete"}],"completed":10,"total":30,"step":0,"created_at":"2025-07-22T14:29:13.947Z"},"tokenUsage":{"facade":{"aggregate":{"total":1144846,"input":{"total":1073592,"cached":13824},"output":{"total":71254,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1144846,"input":{"total":1073592,"cached":13824},"output":{"total":71254,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1144846,"input":{"total":1073592,"cached":13824},"output":{"total":71254,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1144846,"input":{"total":1073592,"cached":13824},"output":{"total":71254,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Retrieve a paginated and searchable list of categories in the AI Shop system. This operation reflects the `ai_shop_categories` table in the database, as described by 3NF and the requirements for marketplace category management, navigation, and filtering. The PATCH method is chosen because the query parameters support complex filters (e.g., by channel, parent, status) within a JSON request body. Includes audit fields, parent-child hierarchy, channel linkage, and category status.","description":"This endpoint returns a filtered, paginated list of AI Shop product categories. It reflects the business requirement for dynamic navigation, product organization, and hierarchy management, referencing the normalized `ai_shop_categories` Prisma model.\n\nSecurity: Available to authenticated users with appropriate role (customer, seller, or admin), but the actual filtering rules and returned columns may vary by role (e.g., admin can query all, customer only enabled categories).\n\nQuery supports channel restriction, parent/child structure, enabled/disabled filtering, sorting, and text-based search by name/code. Pagination parameters are mandatory to prevent large result sets. Returns a standardized paginated response containing summary information and essential properties for category navigation or management views.\n\nValidations: Ensures only accessible categories are visible to calling user by role. Error handling includes invalid query parameters, forbidden access, or internal server errors. Works in conjunction with single-category detail, creation, update, and deletion endpoints.","summary":"Paginated and searchable category list retrieval for ai_shop_categories (PATCH /aiShop/categories).","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for category list retrieval.","typeName":"aiShopCategories.IRequest"},"responseBody":{"description":"Page of category summary objects including meta and navigation fields.","typeName":"IPageAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"patch"},{"specification":"Retrieve details of a single category in the AI Shop platform by its unique identifier. This corresponds to the `ai_shop_categories` table and is necessary for editing, detail display, or validation use-cases. The endpoint uses a path parameter for the unique category ID, a UUID field. Returns all atomic, non-derived category attributes and meta-information.","description":"This endpoint fetches the complete details of a single AI Shop product category by its ID, referencing the `ai_shop_categories` schema with strict parity to the Prisma model and business rules. It supports administrators, sellers, or customers depending on access role, but only enabled categories may be visible for non-admin roles.\n\nThe response includes all required atomic fields (ID, channel, parent, code, name, status, ordering, timestamps) and, if applicable, meta fields used for tree navigation (parent/child relationships) and UI display. Handles permission checks and returns well-typed error messages on invalid, not-found, or unauthorized access.\n\nCommonly used in tandem with category list, creation, update, or delete endpoints.","summary":"Get details of a single category by ID (GET /aiShop/categories/{id}), ai_shop_categories table.","parameters":[{"name":"id","description":"Target category's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full AI Shop category entity (all fields, usually for editing or detail view).","typeName":"aiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"get"},{"specification":"Create a new product category in the AI Shop system. This relates to the insertion of records into the `ai_shop_categories` table, mapping to requirements for vendor/admin-driven category management, taxonomy buildup, and navigational structuring. The request body must validate all normalized attributes (channel, parent, code, name, ordering, etc.).","description":"This endpoint creates a new category in the AI Shop platform, strictly following the structure and business rules defined in the `ai_shop_categories` model. All required atomic fields must be provided (channel ID, parent ID if nested, code, name, display order, and status). Validation checks include code uniqueness within the parent/channel, correct parent&channel references, and required attribute presence.\n\nLikely restricted to admin or seller roles depending on tenant configuration. Returns the full created category object, including server-generated IDs and audit timestamps.\n\nWorks in conjunction with endpoints for listing, updating, retrieving, or deleting categories. Errors are returned on validation failure, duplicate codes, or permission denial.","summary":"Create a new category (POST /aiShop/categories), ai_shop_categories.","parameters":[],"requestBody":{"description":"Payload to create a new category with atomic, normalized fields.","typeName":"aiShopCategories.ICreate"},"responseBody":{"description":"Created category object with full field set.","typeName":"aiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"post"},{"specification":"Update an existing product category by its ID in the AI Shop. This operation maps to the update of a record in the `ai_shop_categories` table and supports direct editing of all mutable attributes (excluding ID). Business use includes correcting taxonomy, updating display names, nesting, or status. The PUT method requires the entire payload structure for full update, validated against the Prisma schema and business rules.","description":"Endpoint for updating (fully replacing/modifying) an AI Shop category, using the category's unique ID in the path. The request body must carry all required, normalized mutable attributes of the `ai_shop_categories` Prisma model: code, name, parent ID (if changed), sort order, status, etc. Enforces code uniqueness and referential integrity with parent/channel IDs.\n\nRestricted to users with appropriate admin or manager role; customers typically cannot invoke. Errors are returned for invalid references, uniqueness violations, permission failure, or not-found cases.\n\nSupports category management workflows in admin or backend interfaces. Used closely with create/delete/list/detail endpoints for comprehensive taxonomy and navigation structuring.","summary":"Update an existing category by ID (PUT /aiShop/categories/{id}), ai_shop_categories table.","parameters":[{"name":"id","description":"Target category's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Replacement fieldset for full category update (all mutable attributes).","typeName":"aiShopCategories.IUpdate"},"responseBody":{"description":"Updated category record reflecting server-side changes.","typeName":"aiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"put"},{"specification":"Delete a category from the AI Shop system by its unique identifier. This performs a deletion on the `ai_shop_categories` table, used to remove obsolete, merged, or mistyped taxonomy entries. Enforces referential integrity and may require pre-checks for orphaned children/licensed items. Returns standard success/failure envelope.","description":"This endpoint deletes a single category, identified by its unique ID, from the AI Shop category taxonomy (the `ai_shop_categories` DB table). Typical use is in admin interfaces for removing or consolidating navigation structures. Safety constraints may include pre-validating no orphaned subcategories or dependent products, in accordance with the schema description.\n\nRole-restricted to managers or admins. Returns success indicator or error for cases like not-found, in-use, or permission denial.\n\nPart of a full CRUD suite for categories, including list, detail, update, and create APIs.","summary":"Delete a category by ID (DELETE /aiShop/categories/{id}), ai_shop_categories table.","parameters":[{"name":"id","description":"Target category's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deletion result or status notification (may include success flag, error, or audit info).","typeName":"IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"delete"},{"specification":"Retrieve a list of all platform configuration entries in the AI Shop. This operation covers the `ai_shop_configurations` table, providing admin-level access to key-value pairs that define runtime parameters for the system. PATCH allows for complex filtering by parameter name or description (string search, sort, etc.). Returns all config entries, including audit fields and descriptions for management.","description":"Lists platform configuration records as defined in the `ai_shop_configurations` schema. Intended for admin/ops interfaces for system-wide settings management. Full-text search, sorting, and pagination supported within a complex PATCH request body. Result is a paginated list of configuration records with all atomic fields (ID, name, value, description, timestamps).\n\nShould enforce admin-only access as system settings can affect core platform behavior. Integrates with endpoints for config detail, update, creation, and deletion. Handles errors for query constraints, forbidden access, or database errors.","summary":"Paginated and searchable configuration list (PATCH /aiShop/configurations), ai_shop_configurations.","parameters":[],"requestBody":{"description":"Search, filter, and pagination payload for retrieving configuration list.","typeName":"aiShopConfigurations.IRequest"},"responseBody":{"description":"Page of configuration records with meta, value, and description fields.","typeName":"IPageAiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"patch"},{"specification":"Retrieve details for a single configuration entry by its unique ID in the AI Shop platform. Maps to the `ai_shop_configurations` table and used for inspection/editing of runtime system parameters. Full payload includes atomic fields: name, value, description, and audit timestamps.","description":"Fetches a single configuration entity from the `ai_shop_configurations` catalog using its ID as a path parameter. Response delivers full database row (ID, name, value, description, created/updated timestamps), enabling read/edit UX for system administrators. Relevant for compliance ops, settings dashboards, or config debugging reports.\n\nAccess-limited to administrative roles, usually with audit log enforced. Not-found and forbidden errors handled with secure, explicit semantics. Used in conjunction with configuration CRUD endpoints for platform management.","summary":"Get details of a system configuration entry (GET /aiShop/configurations/{id}), ai_shop_configurations.","parameters":[{"name":"id","description":"Configuration entry's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration record for detail display or editing.","typeName":"aiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"get"},{"specification":"Create a new platform configuration record (name-value pair) in AI Shop. This corresponds to an insert into the `ai_shop_configurations` table for dynamic runtime settings. Required fields are parameter name, value, description, and optional (nullable) comments. Enforces parameter name uniqueness and proper audit information. Only system admin roles may perform this action.","description":"This endpoint creates a new system configuration entry—an atomic parameter for platform settings (see `ai_shop_configurations` entity). Request body must provide unique param_name, param_value, description (optional), observing naming and value structure per system's rules. Enforces key uniqueness and audit fields on insert.\n\nAccess is strictly limited to platform administrators, with success returning the full created config record. Errors include duplicate key, invalid value, or forbidden access.","summary":"Create a new platform configuration (POST /aiShop/configurations), ai_shop_configurations.","parameters":[],"requestBody":{"description":"Payload for creating a new configuration parameter; must include atomic, normalized fields as per schema.","typeName":"aiShopConfigurations.ICreate"},"responseBody":{"description":"The newly created configuration record with all atomic fields and audit info.","typeName":"aiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"post"},{"specification":"Update a system configuration entry by ID in the AI Shop platform. PATCH method not used: full object replacement is required as per strict API standards. This corresponds to an update of `ai_shop_configurations` DB row, requiring full set of mutable attributes. Validation enforces param_name, param_value, and uniqueness. Intended for privileged system administrators.","description":"This replaces (or updates) all mutable fields of a configuration entry, using the row's unique ID as a path parameter. Request requires all atomic fields (name, value, description if present), observing normalization based on the `ai_shop_configurations` schema. Enforces uniqueness, data type requirements, and full audit trail for update.\n\nOperation is admin-only, typically with logs. Errors for unique constraint violation, not found, or validation failures. Used for platform ops, developer settings, or emergency overrides.","summary":"Update an existing platform configuration by ID (PUT /aiShop/configurations/{id}), ai_shop_configurations.","parameters":[{"name":"id","description":"Configuration record ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for full object replacement of system configuration.","typeName":"aiShopConfigurations.IUpdate"},"responseBody":{"description":"Updated configuration object reflecting written changes.","typeName":"aiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"put"},{"specification":"Delete a configuration record from the AI Shop platform by its unique ID. Executes a deletion on the `ai_shop_configurations` table, removing obsolete or erroneous parameters. Returns a standard deletion result envelope (success, error, or reason). Admin-only operation for security reasons.","description":"Endpoint deletes a configuration record, targeted by its unique ID, from the AI Shop `ai_shop_configurations` entity. Used exclusively by authorized admins for cleaning up obsolete, erroneous, or replaced settings. Enforces referential and key integrity. Success is indicated by a result flag (and optional error message/audit trail).\n\nPart of the full configuration settings management API suite, together with create, read, update, and search endpoints.","summary":"Delete a configuration parameter by ID (DELETE /aiShop/configurations/{id}), ai_shop_configurations.","parameters":[{"name":"id","description":"Configuration record's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deletion status/result info for admin/audit logging.","typeName":"IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"delete"}],"completed":20,"total":30,"step":0,"created_at":"2025-07-22T14:29:21.171Z"},"tokenUsage":{"facade":{"aggregate":{"total":1203933,"input":{"total":1129682,"cached":13824},"output":{"total":74251,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1203933,"input":{"total":1129682,"cached":13824},"output":{"total":74251,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1203933,"input":{"total":1129682,"cached":13824},"output":{"total":74251,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1203933,"input":{"total":1129682,"cached":13824},"output":{"total":74251,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"List/search files in the AI Shop platform's file storage. File entity supports all normalized file uploads—refer to ai_shop_files schema. Implements requirements for secure upload/download, atomic metadata, query by mime type/name, uploader, upload timestamp. Typical use cases: media galleries, bulletin attachments, evidence files. Pagination, sorting, and filters by type, uploader, or date are supported. System-level and business compliance roles only. Reference ai_shop_files columns and required business rules for normalization/compliance and search.","description":"This endpoint retrieves a paginated, searchable list of file metadata stored within the AI Shop platform, as described in the ai_shop_files Prisma schema. It allows searching by MIME type, original filename, uploader name, date ranges (uploaded_at), and size. The purpose is to ensure secure, auditable file management, as per compliance and business requirements for all uploads (products, posts, users, admin logs, etc.).\n\nRole-based access applies: only authenticated, authorized actors (admin, seller, or designated customer) may access file storage; file URIs should not be exposed without permission validation. Underlying implementation must ensure links to attachments in posts/comments/products remain normalized, and direct file download occurs only after security checks. \n\nError handling: return 404 for not found or unauthorized visibility; 422 for malformed query filter. For audits and incident response, access is logged (see ai_shop_audit_logs).\n\nCommonly paired with POST for upload, GET for detail, and DELETE for clean-up. May be restricted further by API gateway configuration.","summary":"List/search file storage resources (ai_shop_files).","parameters":[],"requestBody":{"description":"Search parameters for listing files, including paging and complex filters for audit/compliance access.","typeName":"IAiShopFile.IRequest"},"responseBody":{"description":"Paginated file metadata list result matching search/filter criteria.","typeName":"IPageAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files","method":"patch"},{"specification":"Get detail for a single file in AI Shop platform storage (ai_shop_files). Implements detailed audit, access validation, download link generation. Pulls atomic, normalized file info by ID. Used for attachment previews, download links, post review, and compliance controls. Requires strict access checks and audit logs for compliance.","description":"Retrieves all metadata and access information for a specific file as described in ai_shop_files Prisma schema. Returns atomic details: ID, original name, uploaded URI, mime type, size, uploader, and timestamp. Business processes for audit/compliance require strict access validation based on role (customer, seller, admin).\n\nThe endpoint must log access traces (for GDPR/PCI compliance, incident investigation) in ai_shop_audit_logs. Special logic may be needed for signature URLs or managed downloads. Returns 404 if not found, 403 if unauthorized. Paired with PATCH for searching files, POST for upload, and DELETE for removals.","summary":"Get single file detail (ai_shop_files).","parameters":[{"name":"id","description":"Unique file identifier (UUID) to retrieve detail metadata.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed file metadata, access URIs (where permitted), for requested file.","typeName":"IAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"get"},{"specification":"Upload a new file to AI Shop file storage (ai_shop_files), recording atomic metadata (name, mime, URI, size) per the Prisma schema. Fulfills platform-wide upload requirements for all feature domains (products, bulletin board, user uploads, admin evidence, attachment media). Normalized: all metadata via dedicated fields, physical file via securely-managed URI. Upload may originate from multipart form or external source, with post-upload entry creation.","description":"Creates a new file record in ai_shop_files, registering atomic metadata and access URI for newly uploaded content (see schema: original_name, mime_type, uri, size_bytes, uploader_name, uploaded_at, file_id). Supports UI flows for uploading product images, attachment files on posts/comments, compliance document uploads (KYC evidence, etc).\n\nFile integrity and compliance rules apply: validate allowed file types and size before creation. Implementation separates metadata entry (via API) and actual physical upload (which may be handled by a direct transfer to managed storage). For sensitive/large files, use pre-signed URL process, then invoke this endpoint with file metadata on upload completion.\n\nAudit logs must track upload events, and uploader identity reference should match the authenticated actor.\n\nReturns full file record after creation. On validation failure (file type/size/URI), responds 422. Pairs with PATCH (list), GET (detail), and DELETE (removal).","summary":"Upload file and register metadata (ai_shop_files).","parameters":[],"requestBody":{"description":"Required atomic metadata for file registration: original name, URI, mime type, size, (optional) uploader, upload time.","typeName":"IAiShopFile.ICreate"},"responseBody":{"description":"Full created file metadata as saved in ai_shop_files, including ID and registered path.","typeName":"IAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files","method":"post"},{"specification":"Update metadata for an uploaded file record (ai_shop_files). Edits only atomic, non-immutable fields (e.g., name, label, notes), not the underlying file. Maintains audit/trace log via ai_shop_audit_logs. Used for correcting info, annotating evidence files, or enabling admin compliance actions.","description":"Modifies editable metadata for an existing file in ai_shop_files (e.g., update original_name, add uploader_name, or fix mime_type if uploaded with error). Physical file URI/path must remain immutable post-creation for audit/compliance reliability. Edits are logged in ai_shop_audit_logs for traceability and compliance review.\n\nRole-based access: Only uploader/admins may edit certain attributes (subject to business policy). Not all fields are editable (size, uploaded_at typically locked). On success, returns updated metadata; 404 for not found, 403 for unauthorized edits, 422 if validation fails. Pairs with GET for reading file metadata, PATCH for listing, DELETE for removal.","summary":"Update metadata for uploaded file (ai_shop_files).","parameters":[{"name":"id","description":"Target file's unique identifier (UUID) for metadata update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Editable file metadata that may be updated. URI and physical file attachment are not updatable.","typeName":"IAiShopFile.IUpdate"},"responseBody":{"description":"Updated file metadata after validated changes.","typeName":"IAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"put"},{"specification":"Delete (remove) a file record and (optionally) its physical file from storage (ai_shop_files). Implements secure deletion, audit logging, and compliance event capture for uploads across platform domains.","description":"Removes a file metadata record (and, if authorized/configured, the physical file) from platform file storage as per ai_shop_files. Deletion is atomic and logged to ai_shop_audit_logs for compliance/audit. Business logic may enforce soft- or hard-deletion (actual file removal depends on storage integration).\n\nRole-based checks must verify file ownership (only uploader/admin may delete) and block deletion if file is referenced by other entities (e.g., posts, products, KYC docs). Attempts to delete non-existent files return 404; unauthorized attempts return 403. On success, responds with confirmation payload.\n\nPaired with PATCH for list, GET for metadata, and POST for upload. Deletion must be irreversible and traceable.","summary":"Delete uploaded file (ai_shop_files).","parameters":[{"name":"id","description":"File's unique identifier (UUID) to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deletion confirmation response for removed file metadata (and file, if applicable).","typeName":"IAiShopFile.IDeleteResponse"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"delete"},{"specification":"List/search audit log entries for compliance and platform actions (ai_shop_audit_logs). Used by admin/moderator roles for incident investigation, GDPR/PCI compliance, and review of data access/audit trails. Query supports event type, actor, role, date, and free-text filters. Implements full 3NF compliance for logging. Large-scale systems require efficient pagination and sorting.","description":"This endpoint retrieves a paginated, filtered list of audit log entries from ai_shop_audit_logs. Use cases: compliance incident reviews, admin operation audits, legal discovery, system health analysis. Supports complex filtering/search by event_type, actor_role, affected table, date, and details. Provides full traceability and audit support for all sensitive/business events recorded per platform compliance policy.\n\nRole-based access: strictly for admin/authorized roles due to sensitive nature of logs. Search results may be restricted via API gateway policies (PII, sensitive operations). Error handling: 403 if unauthorized, 422 for invalid search parameters. Paired with POST for log creation, GET for detail, DELETE for redaction/removal.\n\nEvents are guaranteed immutable post-creation per compliance/audit design.","summary":"List/search audit logs (ai_shop_audit_logs).","parameters":[],"requestBody":{"description":"Complex search, filter and paging parameters for audit/compliance queries on logs.","typeName":"IAiShopAuditLog.IRequest"},"responseBody":{"description":"Paginated list of audit logs matching filter criteria.","typeName":"IPageAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs","method":"patch"},{"specification":"Get details of a single audit log entry (ai_shop_audit_logs) for compliance, incident, or legal review. Returns atomic audit info (event type, actor, entity affected, before/after). Used to reconstruct actions by user/admin/system actors. Access strictly controlled for compliance.","description":"Retrieves complete metadata for one audit log by ID as in ai_shop_audit_logs Prisma schema, including event ID, type, actor, target, details, and precise timestamps for legal/business audit. Used by admins or legal teams to verify disputed actions, reconstruct user activity, or support investigations. \n\nStrict access controls apply—API gateway must restrict to admin or legal audit roles. All access is itself logged for traceability. Attempts for non-existent or unauthorized logs return 404/403. Typically paired with PATCH for search and POST for log writing; DELETE for redactions if permitted by compliance.","summary":"Get single audit log detail (ai_shop_audit_logs).","parameters":[{"name":"id","description":"Unique audit log entry identifier (UUID) to retrieve details.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of audit log event for compliance/legal use.","typeName":"IAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs/{id}","method":"get"},{"specification":"Create (write) a new audit log entry (ai_shop_audit_logs) for compliance, platform events, or legal traceability. Implements immutable, precise, atomic event recording for all privileged actions (user login/change, data mut, admin action). Per system requirements, audit logs must always be written at event time, never retroactively, and always as an atomic insert. Must cover all critical business and legal actions per requirements.","description":"Creates a new immutable audit log entry in ai_shop_audit_logs. Captures atomic detail: event_id, event_type, actor ID/role, target table/entity, and before/after details as JSON string, timestamped for traceability. Used to record all privileged/admin/user actions, support dispute resolution, compliance, data privacy audits.\n\nNo updates are permitted post-insert per business/audit rules (only delete or redact via privileged admin). On success, returns audit log entry detail. Validation fails for duplicate event_id or missing/invalid data (422). Strictly paired with PATCH (search), GET (detail), DELETE (redaction/removal); update (PUT) is not supported for audit log immutability.\n\nOnly admin/system-privileged actors may write logs directly unless delegated for special workflow.","summary":"Write new audit log entry (ai_shop_audit_logs).","parameters":[],"requestBody":{"description":"Immutable event details for new audit log entry. Must contain all required metadata per schema.","typeName":"IAiShopAuditLog.ICreate"},"responseBody":{"description":"Immutable audit log with all submitted details, plus DB-generated timestamps/ID.","typeName":"IAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs","method":"post"},{"specification":"(DISALLOWED by compliance policy for immutable audit logs, but required for consistency.) Update an audit log entry (ai_shop_audit_logs). For strict audit policy, implementation should reject this with a 405 or similar error for any route/method match, but endpoint is included for consistent API surface. If business allows update, it must enforce chain-of-custody and audit trace. General policy: audit logs must be immutable post-insert.","description":"This endpoint exists only for REST surface consistency; all business and legal requirements strongly recommend audit logs be immutable. If business forces update, all changes must be logged, fully traced, and non-destructive (append-only approach preferred, never actual field overwrite).\n\nIf business supports update (rare), restrict to highest privilege 'super admin/legal' role; on attempt, endpoint should respond 405 unless explicitly enabled. Admins should not expect to use this endpoint routinely. Paired only for formal symmetry with other CRUD endpoints.","summary":"Update audit log entry (ai_shop_audit_logs) [IMMUTABLE: should 405].","parameters":[{"name":"id","description":"Audit log's unique identifier (UUID) to attempt update. Must not allow overwrite—should return error.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attempted update data for audit log (should not be permitted under compliance unless business exception).","typeName":"IAiShopAuditLog.IUpdate"},"responseBody":{"description":"Full audit log entry if (and only if) allowed. Otherwise, a 405 or similar error response indicating immutability.","typeName":"IAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs/{id}","method":"put"},{"specification":"Delete (redact) an audit log entry (ai_shop_audit_logs). Used only by privileged admin/legal for compliance (e.g., GDPR data redaction, legal takedown). Normal business and audit rules require strict chain-of-custody. Deletion is always logged and may be non-destructive (e.g., redaction vs physical delete).","description":"Deletes or redacts a specific audit log entry as per ai_shop_audit_logs Prisma schema. This operation is highly sensitive and must only be permitted for highest-priority compliance or legal cases (e.g., court order, GDPR erasure request, legal takedown). Deletes are always logged to a separate audit workflow for traceability. Can be implemented as hard or soft delete/redaction depending on policy—should default to redacted state with timestamp and reason, not physical removal when possible.\n\nRole-based controls restrict access to admins/legal, and API must deny unauthorized requests with precise error. Pairs with PATCH (search), GET (detail), and POST (creation). Ensures legal chain-of-custody for incident and privacy audit.","summary":"Redact/delete audit log entry (ai_shop_audit_logs).","parameters":[{"name":"id","description":"Target audit log entry identifier (UUID) for redaction/deletion.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation or status for removed/redacted audit log entry.","typeName":"IAiShopAuditLog.IDeleteResponse"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs/{id}","method":"delete"}],"completed":30,"total":30,"step":0,"created_at":"2025-07-22T14:29:29.645Z"},"tokenUsage":{"facade":{"aggregate":{"total":1263439,"input":{"total":1185777,"cached":13824},"output":{"total":77662,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1263439,"input":{"total":1185777,"cached":13824},"output":{"total":77662,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1263439,"input":{"total":1185777,"cached":13824},"output":{"total":77662,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1263439,"input":{"total":1185777,"cached":13824},"output":{"total":77662,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"aiShopChannel.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Page number for aiShopChannel list search, implementing pagination requirements from the system design. Starts from 1.\n\nRefer to standard IPage/IRequest pagination interface. Atomic, normalized."},"limit":{"type":"integer","format":"int32","description":"Limit of records per page. Default is 100. Fulfills system requirement for scalable queries. Refer to standard IPage/IRequest logic."},"searchText":{"type":"string","description":"Full text search query for filtering aiShopChannel list. Used for fuzzy match against code and name fields. Implements advanced search requirement for administration. Optional."},"code":{"type":"string","description":"Exact filter for channel code. Enforces reporting and programmatic reference needs as described in ai_shop_channels schema. Optional."},"name":{"type":"string","description":"Filter for display name. Used for admin UX, reporting, and search. Exact match or partial, per business logic. Referenced by ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Filter by enabled status (true for enabled/active channels, false for hidden/disabled ones). Implements the business rule for channel display control, normalization requirement."},"sort":{"type":"array","items":{"type":"string","description":"Fields for sort ordering. Example: ['sort_order','name','created_at']. Direction may be encoded in field or separately. Aligns with admin UI sort controls."},"description":"Array of fields to apply sorting. Implements admin dashboard sorting options."}},"required":[],"description":"Request for listing/searching aiShopChannel (channels) records, with support for pagination, filtering, search, and sorting as detailed in the system's Prisma schema and admin requirements.\n\nThis type serves as the request object for all list/search index operations for the ai_shop_channels table, supporting both admin dashboard work and API-based management."},"aiShopChannel.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopChannel.ISummary"},"description":"List of aiShopChannel summary objects as per pagination/query settings. Atomic view for list display."}},"required":["pagination","data"],"description":"Paginated page result for aiShopChannel list/search query, matching the IPage interface specification.\n\nEach page carries pagination meta info as well as an array of aiShopChannel summary objects, which are streamlined for efficient administration overview."},"aiShopChannel":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Uniquely identifies each shop channel. Referenced by ai_shop_channels.id in the database. UUID type."},"code":{"type":"string","description":"Channel code - Unique programmatic reference for this channel (e.g., 'main', 'event2025'). Implements channel separation and normalization rules. ai_shop_channels.code."},"name":{"type":"string","description":"Channel display name for human-readable identification in admin/UIs. Referenced in ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Whether this channel is active and visible in storefront/config. Implements enabled/disabled channel status management. ai_shop_channels.enabled."},"sort_order":{"type":"integer","description":"Ordering of channels in UI. Lower numbers sort higher. Implements admin display sequence control. ai_shop_channels.sort_order."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of channel creation for audit trail and history tracking. ai_shop_channels.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for this channel. Enables audit/history log. ai_shop_channels.updated_at."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"],"description":"Full aiShopChannel model representing a marketplace or display channel, as defined in the ai_shop_channels Prisma table and referenced throughout the platform.\n\nThis type implements all core atomic attributes and audit fields described in the schema, providing the foundation for CRUD, admin, and configuration operations. The entity forms the basis for channel management in both database and API contracts."},"aiShopChannel.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"New channel code for unique identification (must be unique among channels, e.g. 'main', 'mobile'). Normalization adheres to ai_shop_channels.code schema comments."},"name":{"type":"string","description":"Human-readable display name for UI/admin listings, as per ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Initial enabled state. True to activate, false to create in draft/hidden state. ai_shop_channels.enabled."},"sort_order":{"type":"integer","description":"Initial UI display order for this channel (1 is highest). Enforces admin control, ai_shop_channels.sort_order."}},"required":["code","name","enabled","sort_order"],"description":"Object used to create (insert) a new aiShopChannel record. All non-nullable atomic fields must be included to satisfy constraints set in the ai_shop_channels Prisma model and business requirements.\n\nActual id, created_at, updated_at fields are generated by the system/database on insert."},"aiShopChannel.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Updated code to uniquely identify this channel. Changing this affects programmatic linking and is restricted by uniqueness/business logic. ai_shop_channels.code."},"name":{"type":"string","description":"Updated channel display name for administrative and UI purposes. ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Update to enabled/disabled state, matching ai_shop_channels.enabled requirements for activation/publishing."},"sort_order":{"type":"integer","description":"Value for adjusting display sequence/order of the channel. ai_shop_channels.sort_order."}},"required":["code","name","enabled","sort_order"],"description":"Object used to update (PUT/overwrite) the attributes of an existing aiShopChannel entity. Contains all non-nullable atomic properties as per ai_shop_channels Prisma table and business contract for admin management tuning."},"aiShopChannel.IDeleteResponse":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"ID of the deleted channel entity. Used for confirmation and audit logging per compliance requirements."},"deleted":{"type":"boolean","description":"Confirmation flag (true if deletion succeeded, false otherwise). Used by admin APIs and UI for result status."}},"required":["id","deleted"],"description":"Standard response for aiShopChannel deletion by ID, supporting audit trail, compliance, and API UI status sync. Used for acknowledging successful or failed delete operations on channel entities."},"aiShopChannel.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key for aiShopChannel, for summary/index list usage."},"code":{"type":"string","description":"Channel code for summary display/search."},"name":{"type":"string","description":"Display name, for list view."},"enabled":{"type":"boolean","description":"Quick flag for list view status."},"sort_order":{"type":"integer","description":"Ordering index. Lower is higher in UI lists."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (for sorting or display)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (for admin UX)."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"],"description":"Summary/list view object for aiShopChannel entity, supporting pagination/index use cases. Contains core list fields but omits related object arrays or heavy audit data."},"aiShopSection.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Page number for aiShopSection list search (used for pagination). Refer to IPage/IRequest standard slot."},"limit":{"type":"integer","format":"int32","description":"Maximum rows per page (default 100). Enables scaling of admin/configuration lists."},"searchText":{"type":"string","description":"Fuzzy search string for section code or name (admin/UX search feature)."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Filter for parent channel (search only sections within a given channel). Fulfillment of platform UI grouping, normalization. ai_shop_sections.ai_shop_channel_id FK."},"code":{"type":"string","description":"Filter by section code, supports search, admin automation."},"name":{"type":"string","description":"Filter by display name, admin dashboard/UX. ai_shop_sections.name."},"enabled":{"type":"boolean","description":"Filter for enabled/active sections. Used in channel display logic."},"sort":{"type":"array","items":{"type":"string","description":"List of fields to sort by (admin control, e.g., ['sort_order','name'])."},"description":"Sorting fields."}},"required":[],"description":"Request object for aiShopSection (section) list/index operations, supporting pagination, filtering, search, and sort as described in the Prisma schema and admin requirements."},"aiShopSection.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopSection.ISummary"},"description":"Array of summarized aiShopSection objects for admin list view."}},"required":["pagination","data"],"description":"Paginated result object for aiShopSection search/list queries. Implements standard IPage<T> contract for section entity list, as required by platform admin tools and config editors."},"aiShopSection":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key for section entity (UUID), referencing ai_shop_sections.id."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Foreign key to parent channel (ai_shop_channels.id), organizing the section within a channel, as described in platform requirements."},"code":{"type":"string","description":"Section code (unique within channel). Implements admin/config logical reference for grouping and API access. ai_shop_sections.code."},"name":{"type":"string","description":"Human-readable section display name. Used in admin UX, navigation UI, and analytics. ai_shop_sections.name."},"sort_order":{"type":"integer","description":"Ordering index of section among siblings. Lower value = higher priority in display. ai_shop_sections.sort_order."},"enabled":{"type":"boolean","description":"Flag to determine whether section is displayed and enabled. ai_shop_sections.enabled."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (audit, analytics). ai_shop_sections.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp. ai_shop_sections.updated_at."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Full aiShopSection model representing a logical section within an AI Shop channel, as per ai_shop_sections Prisma schema, supporting all admin/edit/config use cases referencing the entity.\n\nContains all atomic, normalized and admin-editable fields, with closure for audit and config tools."},"aiShopSection.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Channel UUID to create section under. Validates for platform grouping. ai_shop_sections.ai_shop_channel_id."},"code":{"type":"string","description":"New section code. Enforced unique within the given channel for admin and business logic referential consistency. ai_shop_sections.code."},"name":{"type":"string","description":"Display name for UI/config panel. ai_shop_sections.name."},"sort_order":{"type":"integer","description":"Order index number in channel's section array. Controls position, must match admin UX requirements. ai_shop_sections.sort_order."},"enabled":{"type":"boolean","description":"Enabled state on create. Controls initial visibility of this section. ai_shop_sections.enabled."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"Object for creating a new aiShopSection entry. All non-nullable, atomic, and configured fields for section setup must be present per ai_shop_sections schema.\n\nSystem fills in id, created_at, updated_at after insertion."},"aiShopSection.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"New or existing parent channel UUID for this section. ai_shop_sections.ai_shop_channel_id."},"code":{"type":"string","description":"Section code (unique in channel). Update for admin/business refactoring only. ai_shop_sections.code."},"name":{"type":"string","description":"Section display name (for UI/config). admin control. ai_shop_sections.name."},"sort_order":{"type":"integer","description":"Ordering index in channel section group. ai_shop_sections.sort_order."},"enabled":{"type":"boolean","description":"Flag to display or hide this section (enabled state). ai_shop_sections.enabled."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"PUT-update payload for aiShopSection record, providing new values for all admin-editable atomic fields as per ai_shop_sections schema and configuration needs."},"aiShopSection.IDeleteResponse":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for deleted section entity, for audit, admin confirmation."},"deleted":{"type":"boolean","description":"Flag confirming successful deletion as validated by configuration tools."}},"required":["id","deleted"],"description":"Deletion response for aiShopSection entity (admin audit compliance, UI notification)."},"aiShopSection.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key/UUID for aiShopSection in index/list view."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Parent channel ID, list display for channel grouping."},"code":{"type":"string","description":"Section code for fast reference in admin view or selection."},"name":{"type":"string","description":"Human display name for section summary."},"sort_order":{"type":"integer","description":"Display order index for admin UI."},"enabled":{"type":"boolean","description":"List view enabled/active state."},"created_at":{"type":"string","format":"date-time","description":"Section creation timestamp (for list)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (admin UX)."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Summary index list view object for aiShopSection entity, used in admin config/search tools providing tabular data for navigation and fast management."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"int32","description":"Current page number. Implements standard pagination logic."},"limit":{"type":"integer","format":"int32","description":"Limitation of records per page. System default set to 100, but parameterized in API."},"records":{"type":"integer","format":"int32","description":"Total records in the database that meet the filter/search constraints."},"pages":{"type":"integer","format":"int32","description":"Total number of pages (records/limit rounded up)."}},"required":["current","limit","records","pages"],"description":"Pagination meta-data as used by IPage<T> containers for all list/search results. Required for effective UI paging and auditing."}}},"completed":12,"total":35,"step":0,"created_at":"2025-07-22T14:30:30.404Z"},"tokenUsage":{"facade":{"aggregate":{"total":1327221,"input":{"total":1246290,"cached":13824},"output":{"total":80931,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1327221,"input":{"total":1246290,"cached":13824},"output":{"total":80931,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1327221,"input":{"total":1246290,"cached":13824},"output":{"total":80931,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1327221,"input":{"total":1246290,"cached":13824},"output":{"total":80931,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"aiShopCategories.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"페이지 번호(1부터 시작). 카테고리 목록에 대한 페이지네이션을 지원합니다. 예: 1."},"limit":{"type":"integer","description":"페이지당 항목 개수. 한 번 요청에 반환할 카테고리 개수를 지정합니다. 예: 20."},"search":{"type":"string","description":"카테고리 이름/코드를 부분 일치로 검색하는 텍스트.\n\nUI에서 키워드로 카테고리 검색할 때 사용합니다."},"channelId":{"type":"string","format":"uuid","description":"채널 별 필터링에 사용되는 ai_shop_channels의 UUID.\n\n특정 채널 소속 카테고리만 검색할 때 활용됩니다."},"parentId":{"type":"string","format":"uuid","description":"부모 카테고리(UUID)로 필터 시 사용. null 또는 미지정이면 모든 root 레벨 카테고리 조회."},"enabled":{"type":"boolean","description":"카테고리 활성 여부로 필터."},"sort":{"type":"string","description":"정렬 기준 (예: name, sort_order 등). UI에서 선택한 정렬에 따라 지정."},"order":{"oneOf":[{"const":"asc","description":"정렬 순서 (오름차순 asc / 내림차순 desc)."},{"const":"desc","description":"정렬 순서 (오름차순 asc / 내림차순 desc)."}],"description":"정렬 순서 (오름차순 asc / 내림차순 desc)."}},"required":[],"description":"카테고리 목록 조회, 검색, 페이지네이션을 위한 요청 파라미터 타입입니다. 관련 Prisma ai_shop_categories 테이블의 컬럼 특성과 비즈니스 요구(검색, 필터, UI 셀렉터)를 반영합니다.\n\n각 속성은 완전 선택적이며, 일반적으로 페이지네이션, 검색어, 필터링, 정렬 파라미터로 사용됩니다.\n\n- 예: 특정 채널 내에서 '전자'라는 이름을 가진 활성 카테고리만 10개씩 내려서 최신순으로 조회.\n- 실제 서비스에서는 관리자/셀러/고객 역할별 권한 점검이 필요합니다.\n\n프론트엔드와 어드민의 카테고리 리스트/검색/트리뷰 요청에 사용합니다."},"IPageAiShopCategories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"카테고리 목록 레코드 배열. 각 요소는 카테고리의 요약 정보이거나 전체 엔티티 모두일 수 있으며, 최소한 리스트에 필요한 필드(예: id, name, parent_id 등)는 포함합니다.","items":{"$ref":"#/components/schemas/aiShopCategories.ISummary"}}},"required":["pagination","data"],"description":"카테고리 엔티티(즉, ai_shop_categories 테이블)의 목록 데이터와 페이지네이션 정보를 묶어서 반환하기 위한 표준 컨테이너 타입입니다.\n\npagination은 현재 페이지/전체 건수 등 페이징 메타 데이터, data는 카테고리 목록 레코드들을 포함합니다. 필드 구성/설명은 IPage, IPage.IPagination 표준 타입을 참조하세요."},"aiShopCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"카테고리의 UUID/기본키. 시스템 내 유일 식별자.\n\n원본 ai_shop_categories Prisma 스키마의 id 컬럼에서 참조."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"이 카테고리가 소속된 채널(ai_shop_channels)의 UUID.\n\nPrisma의 ai_shop_channel_id 컬럼에 해당."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 카테고리의 UUID (없으면 root). 트리 구조 지원을 위한 자기참조 필드.\n\nDB의 parent_id 컬럼에 해당합니다."},{"type":"null"}],"description":"상위(부모) 카테고리의 UUID (없으면 root). 트리 구조 지원을 위한 자기참조 필드.\n\nDB의 parent_id 컬럼에 해당합니다."},"code":{"type":"string","description":"프로그램 내에서 사용되는 카테고리 구분 코드. 동일 채널+부모 하위에서 유일함.\n\nPrisma/TDB에서 code 컬럼에 명시된 대로."},"name":{"type":"string","description":"카테고리 UI표시명 혹은 관리 명칭. 비즈니스적으로 카테고리 식별에 사용합니다.\n\nDB의 name 컬럼 명세를 반영."},"sort_order":{"type":"integer","description":"동일 부모 내에서의 표출 순서. 어드민 UI 및 카테고리 트리 렌더링 시 활용.\n\nPrisma sort_order 컬럼 참조."},"enabled":{"type":"boolean","description":"카테고리 노출/비노출 여부.\n\nPrisma enabled 컬럼과 직결. false 시 고객에게 비노출."},"created_at":{"type":"string","format":"date-time","description":"행 생성 타임스탬프.\n\nDB 스키마의 created_at."},"updated_at":{"type":"string","format":"date-time","description":"최종 수정 타임스탬프.\n\nDB의 updated_at."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"카테고리 단일 엔티티 전체 정보 타입입니다. ai_shop_categories Prisma 테이블의 모든 실제 칼럼(원본 컬럼, 관계칼럼 포함)을 1:1로 정의합니다.\n\n각 속성은 ERD/스키마의 컬럼별 코멘트로부터 상세 설명을 찾아 반영했으며\n- id: 고유 식별\n- ai_shop_channel_id: 채널 소속\n- parent_id: 트리 구조 위한 자기참조\n- code/name: 비즈니스, UI\n- sort_order/enabled: UI 정렬, 비노출 처리\n- created_at/updated_at: 감사/동기화에 필요\n\n실제 서비스에서 반환하는 상세 조회 API/행 단위 단건 및 목록형 응답 모델로 통용합니다."},"aiShopCategories.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"카테고리 UUID/기본키.\n- 목록, 요약, 드롭다운 등에 사용\n- ai_shop_categories.id"},"name":{"type":"string","description":"카테고리 표시명.\n- ai_shop_categories.name"},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"부모 카테고리 UUID/null.\n- 트리/네비게이션용"},{"type":"null"}],"description":"부모 카테고리 UUID/null.\n- 트리/네비게이션용"}},"required":["id","name"],"description":"카테고리 리스트, 드롭다운, 검색시 요약정보에 사용되는 축소형 뷰타입. 전체 엔티티가 아닌 리스트/검색 UI에 필요한 필드(보통 id,name,parent_id)만 포함합니다. (Prisma ai_shop_categories.comments 요약 기반)"},"aiShopCategories.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"신규 카테고리가 소속될 채널의 UUID. 필수 입력.\n\nai_shop_categories의 ai_shop_channel_id 컬럼에 해당합니다."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"부모 카테고리의 UUID. 최상위 경우 null.\n\n트리 구조 지원용. Prisma parent_id"},{"type":"null"}],"description":"부모 카테고리의 UUID. 최상위 경우 null.\n\n트리 구조 지원용. Prisma parent_id"},"code":{"type":"string","description":"카테고리 코드 (채널/부모 내에서 유일). 신규 생성시 반드시 입력.\n\nPrisma code 컬럼 명세 반영."},"name":{"type":"string","description":"등록할 카테고리 표시명.\n\nPrisma name 컬럼에 해당."},"sort_order":{"type":"integer","description":"UI 표시/정렬시 사용될 순서."},"enabled":{"type":"boolean","description":"신규 카테고리 노출여부 (true/false)."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"신규 카테고리 생성(등록) API POST 바디로 사용하는 요청 타입입니다. ai_shop_categories Prisma 스키마의 실제 NOT NULL 컬럼군(채널,코드,이름,정렬,노출여부 등)을 필수 속성으로 명시합니다. parent_id는 null 허용(최상위시).\n\n서버에서 식별자/타임스탬프는 생성, 클라이언트에서는 입력 불필요."},"aiShopCategories.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"카테고리가 포함된 채널(UUID).\n변경 시, 존재하는 ai_shop_channels의 id여야 함."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"변경될 부모 카테고리 UUID 또는 null.\nnull이면 트리 최상위 카테고리로 이동."},{"type":"null"}],"description":"변경될 부모 카테고리 UUID 또는 null.\nnull이면 트리 최상위 카테고리로 이동."},"code":{"type":"string","description":"카테고리 코드. 전체 채널/부모 내에서 유일해야 함. 변경 가능."},"name":{"type":"string","description":"카테고리 표시명. 변경 가능."},"sort_order":{"type":"integer","description":"표시/정렬 우선순위."},"enabled":{"type":"boolean","description":"카테고리 노출여부 (수정 가능)."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"카테고리 모든 속성(atomic 필드)에 대한 전체수정(파라미터 교체식) API용 요청 타입입니다. ai_shop_categories의 필수 컬럼군만 required, parent_id는 null/미포함 허용. id/created_at/updated_at은 서버 자동관리이므로 클라(프론트) 입력 불필요.\n\nPrisma 테이블 구조와 비즈니스 업데이트 정책에 따라 설계됨."},"IDeleteResult":{"type":"object","properties":{"ok":{"type":"boolean","description":"삭제 성공시 true 반환(논리/물리). 실패(권한,존재X)시 false."},"message":{"type":"string","description":"삭제결과, 실패시 사유/성공 메시지(선택)."}},"required":["ok"],"description":"삭제(DELETE) 요청 처리 결과를 표준적으로 감싸는 타입입니다.\n\n- ok: true/false로 결과 구분\n- message: 성공/실패 사유, UX용"},"aiShopConfigurations.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"페이지네이션용 페이지 번호(1부터)."},"limit":{"type":"integer","description":"페이지당 항목 개수."},"search":{"type":"string","description":"설정 명(param_name) 또는 설명(description) 검색어.\n\n- UI 또는 어드민에서 설정 항목 검색 시 사용."},"sort":{"type":"string","description":"정렬 컬럼명(예: param_name, created_at 등)."},"order":{"oneOf":[{"const":"asc","description":"정렬순서(오름차순 asc/내림차순 desc)."},{"const":"desc","description":"정렬순서(오름차순 asc/내림차순 desc)."}],"description":"정렬순서(오름차순 asc/내림차순 desc)."}},"required":[],"description":"시스템 환경설정 목록 조회/검색/페이징 용 요청 타입입니다.\nPrisma ai_shop_configurations 구조, 관리콘솔 목록/필터/검색 UI 요구반영.\n- 페이지네이션, 검색, 정렬 요구 모두 처리 가능\n- 전체/필터 결과 반환"},"IPageAiShopConfigurations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"환경설정 레코드 배열.\n각 요소가 설정 요약 또는 전체 엔티티 레코드.\n일반적으로 param_name, param_value, description 등 관리에 반드시 필요한 필드는 포함.","items":{"$ref":"#/components/schemas/aiShopConfigurations.ISummary"}}},"required":["pagination","data"],"description":"환경설정 목록 및 페이징 반환용 표준 컨테이너 타입. data는 실제 설정 목록, pagination은 페이징 정보(IPage.* 사용)."},"aiShopConfigurations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"설정 UUID/기본키.\nPrisma ai_shop_configurations.id"},"param_name":{"type":"string","description":"설정의 논리 변수 이름. 고유."},"param_value":{"type":"string","description":"값(문자열 혹은 직렬화된 json)."},"description":{"oneOf":[{"type":"string","description":"설정 항목 설명"},{"type":"null"}],"description":"설정 항목 설명"}},"required":["id","param_name","param_value"],"description":"환경설정 단일 엔티티 모든 필드. Prisma ai_shop_configurations 테이블 실필드 전부 반영. description만 null 허용."},"aiShopConfigurations.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"설정 UUID/기본키."},"param_name":{"type":"string","description":"논리 변수명."},"param_value":{"type":"string","description":"설정값."}},"required":["id","param_name","param_value"],"description":"환경설정 요약용/리스트용 타입. 단일 행의 핵심값만 포함 (id,param_name,param_value), description 등은 상세에서 확인."},"aiShopConfigurations.ICreate":{"type":"object","properties":{"param_name":{"type":"string","description":"고유 파라미터명. 신규 등록시 필수."},"param_value":{"type":"string","description":"저장할 값(문자열 혹은 직렬화된 json)."},"description":{"oneOf":[{"type":"string","description":"등록 설명(선택, 없으면 null)"},{"type":"null"}],"description":"등록 설명(선택, 없으면 null)"}},"required":["param_name","param_value"],"description":"신규 환경설정 등록시에 사용하는 요청타입 POST 바디용. param_name,param_value는 필수, description은 옵션."},"aiShopConfigurations.IUpdate":{"type":"object","properties":{"param_value":{"type":"string","description":"변경할 값(문자열 혹은 json)."},"description":{"oneOf":[{"type":"string","description":"변경 설명. null 가능."},{"type":"null"}],"description":"변경 설명. null 가능."}},"required":["param_value"],"description":"환경설정 값 변경(수정)시의 파라미터 타입. 설명이 옵션이고 값은 필수."},"IAiShopFile.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"페이지 번호(1부터). 파일 목록 페이지네이션."},"limit":{"type":"integer","description":"한 페이지당 파일 수."},"search":{"type":"string","description":"파일명, mime등 검색 키워드. 전체, 일부일치 모두 허용."},"mime_type":{"type":"string","description":"특정 MIME타입으로 필터링. image/png 등."},"uploader_name":{"type":"string","description":"업로더 이름으로 검색."},"uploaded_from":{"type":"string","format":"date-time","description":"업로드일 기준 검색(시작일, ISO 8601)."},"uploaded_to":{"type":"string","format":"date-time","description":"업로드일 기준 검색(끝일, ISO 8601)."},"sort":{"type":"string","description":"정렬 기준(예: uploaded_at, size_bytes 등)."},"order":{"oneOf":[{"const":"asc","description":"정렬순서(asc, desc)."},{"const":"desc","description":"정렬순서(asc, desc)."}],"description":"정렬순서(asc, desc)."}},"required":[],"description":"파일 목록을 조회할 때 사용되는 요청 쿼리/바디용 객체 타입입니다. 페이지네이션, 필터, 검색어, 업로더 등 다양한 요구조건을 반영했습니다. DB상의 ai_shop_files의 컬럼 기반 및 실제 어드민 요구 사양에 따라 설계됨."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호."},"limit":{"type":"integer","description":"페이지당 최대 레코드 수."},"records":{"type":"integer","description":"DB 총 레코드 수. 전체 건수."},"pages":{"type":"integer","description":"전체 페이지 수."}},"required":["current","limit","records","pages"],"description":"페이지 정보 및 메타데이터 표준 구조체. 전체 결과 개수, 현재 페이지, 페이지당 수, 전체 페이지 수 포함. (공통 컨테이너 구조 참고)"}}},"completed":24,"total":35,"step":0,"created_at":"2025-07-22T14:30:30.455Z"},"tokenUsage":{"facade":{"aggregate":{"total":1391305,"input":{"total":1306799,"cached":13824},"output":{"total":84506,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1391305,"input":{"total":1306799,"cached":13824},"output":{"total":84506,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1391305,"input":{"total":1306799,"cached":13824},"output":{"total":84506,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1391305,"input":{"total":1306799,"cached":13824},"output":{"total":84506,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageAiShopFile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the ai_shop_files result set.\n\nProvides current page number, records per page, total records, and total pages as detailed in the IPage pagination documentation. Used to display results accurately and for audit/compliance monitoring."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFile"},"description":"List of ai_shop_file records in this page.\n\nEach object represents a file's metadata (see IAiShopFile for detailed structure), corresponding to a row in the ai_shop_files table. Handles audit, previews, and UI display in file explorers."}},"required":["pagination","data"],"description":"Paginated result for searching file storage metadata in the AI Shop system.\n\nThis type mirrors the IPage<T> generic interface, pairing a page of IAiShopFile entities with pagination meta-info as required by audit, compliance, and management views. Originates from the ai_shop_files Prisma model."},"IAiShopFile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for this file record in the ai_shop_files table.\n\nPrimary key from database for file lookup, audit, update, or deletion."},"original_name":{"type":"string","description":"Original file name at upload (e.g., 'manual.pdf', 'photo.jpg').\n\nSeparate from URI to facilitate display and download; fulfills the UI preview and audit requirements."},"uri":{"type":"string","description":"Storage URI or physical path to file content (cloud, S3 key, etc).\n\nUniqueness enforced at DB level. Used for file serving and download. For compliance, secure access must be managed."},"mime_type":{"type":"string","description":"File media/content type (e.g., 'image/png', 'application/pdf').\n\nSupports filtering, previewing, and content validation as enforced in both requirements and the ai_shop_files schema."},"size_bytes":{"type":"integer","description":"File size in bytes (e.g., 102400 for a 100 KB file).\n\nFor audit, quota checks, and analytics as described in ai_shop_files table commentary."},"uploader_name":{"oneOf":[{"type":"string","description":"Optional name of uploader at registration time.\n\nSupports compliance audit (especially for admin or KYC-related files)."},{"type":"null","description":"Optional name of uploader at registration time.\n\nSupports compliance audit (especially for admin or KYC-related files)."}],"description":"Optional name of uploader at registration time.\n\nSupports compliance audit (especially for admin or KYC-related files)."},"uploaded_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp recording the file upload event.\n\nUsed for audit trail, reporting, and compliance validation."}},"required":["id","original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"Atomic file metadata for a single platform upload (ai_shop_files row).\n\nFully normalized per the ai_shop_files Prisma schema; includes upload, type, size, and access data. Used for UI display, content search, and compliance auditing throughout the AI Shop e-commerce platform."},"IAiShopFile.ICreate":{"type":"object","properties":{"original_name":{"type":"string","description":"Original upload file name (e.g., 'img1.jpg').\n\nMandatory for UI/preview and fulfills the normalization described in ai_shop_files."},"uri":{"type":"string","description":"Storage URI/path for the uploaded file in persistent external storage.\n\nMust be globally unique. Ensures files can be downloaded or previewed securely."},"mime_type":{"type":"string","description":"MIME/content type (e.g., 'image/png').\n\nEnables content validation and correct previewing as listed in requirements and the Prisma schema."},"size_bytes":{"type":"integer","description":"Size of the file in bytes.\n\nUsed for quota and compliance checks."},"uploader_name":{"oneOf":[{"type":"string","description":"(Optional) uploader's name for audit/compliance contexts.\n\nRecorded if available at upload time; otherwise can be null."},{"type":"null","description":"(Optional) uploader's name for audit/compliance contexts.\n\nRecorded if available at upload time; otherwise can be null."}],"description":"(Optional) uploader's name for audit/compliance contexts.\n\nRecorded if available at upload time; otherwise can be null."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when file was uploaded to storage.\n\nUsed for audit and precise record of evidence/upload."}},"required":["original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"Payload for registering a new file upload under ai_shop_files.\n\nImplements the file creation data documented in the entity's schema and business requirements. Stores original name, storage URI, type, audit info, and (optionally) the uploader's display name for compliance use cases."},"IAiShopFile.IUpdate":{"type":"object","properties":{"original_name":{"oneOf":[{"type":"string","description":"New/file-corrected original name (can be corrected post-upload).\n\nAllows users/admins to fix name metadata in ai_shop_files after upload for enhanced auditability."},{"type":"null","description":"New/file-corrected original name (can be corrected post-upload).\n\nAllows users/admins to fix name metadata in ai_shop_files after upload for enhanced auditability."}],"description":"New/file-corrected original name (can be corrected post-upload).\n\nAllows users/admins to fix name metadata in ai_shop_files after upload for enhanced auditability."},"uploader_name":{"oneOf":[{"type":"string","description":"New/fixed uploader name, or set to null (removal) if correcting audit records.\n\nUsed for KYC/evidence and business compliance records."},{"type":"null","description":"New/fixed uploader name, or set to null (removal) if correcting audit records.\n\nUsed for KYC/evidence and business compliance records."}],"description":"New/fixed uploader name, or set to null (removal) if correcting audit records.\n\nUsed for KYC/evidence and business compliance records."},"mime_type":{"oneOf":[{"type":"string","description":"File's correct MIME/media type if upload error occurred.\n\nEnables accurate content type retrieval after metadata correction."},{"type":"null","description":"File's correct MIME/media type if upload error occurred.\n\nEnables accurate content type retrieval after metadata correction."}],"description":"File's correct MIME/media type if upload error occurred.\n\nEnables accurate content type retrieval after metadata correction."}},"required":[],"description":"Payload for metadata updates to ai_shop_files (not physical file replacement).\n\nAllows admins or authorized uploaders to correct name, type, or attribution for compliance, audit, and UI correctness. Does not affect actual URI, size, or upload time as per audit log integrity."},"IAiShopFile.IDeleteResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Result flag indicating if the file was successfully deleted (true for success, false for failure).\n\nSupports client UI logic and batch admin compliance workflows."},"message":{"type":"string","description":"Status or error message for the deletion operation.\n\nReturns human-readable confirmation, audit record, or error reason."}},"required":["success","message"],"description":"Delete operation result for an ai_shop_files entity.\n\nConfirms successful removal (or error) as required by system compliance and file management logic. Also supports audit/yield log requirements."},"IAiShopAuditLog.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Page number for pagination start (1-based).\n\nApplies to paginated log listing; defaults to 1 if not specified."},"limit":{"type":"integer","minimum":1,"description":"Number of log records per page.\n\nAids client-side and UI audit review for compliance workflows."},"searchText":{"oneOf":[{"type":"string","description":"Optional full-text case-insensitive search on event ID, event type, or details, as described in logs requirements.\n\nAllows UI admin and audit tools to filter logs by key phrase or event."},{"type":"null","description":"Optional full-text case-insensitive search on event ID, event type, or details, as described in logs requirements.\n\nAllows UI admin and audit tools to filter logs by key phrase or event."}],"description":"Optional full-text case-insensitive search on event ID, event type, or details, as described in logs requirements.\n\nAllows UI admin and audit tools to filter logs by key phrase or event."},"filter":{"oneOf":[{"type":"object","description":"Object of optional advanced filters for event_type, actor, target, or date (ISO 8601 ranges).\n\nAligns with audit/compliance requirements for detailed evidence review.","properties":{},"required":[]},{"type":"null","description":"Object of optional advanced filters for event_type, actor, target, or date (ISO 8601 ranges).\n\nAligns with audit/compliance requirements for detailed evidence review."}],"description":"Object of optional advanced filters for event_type, actor, target, or date (ISO 8601 ranges).\n\nAligns with audit/compliance requirements for detailed evidence review."},"sort":{"oneOf":[{"type":"string","description":"Optional sort order key for logs (e.g., '-created_at' for descending timestamp).\n\nSupports sort UX in dashboards and compliance review tools."},{"type":"null","description":"Optional sort order key for logs (e.g., '-created_at' for descending timestamp).\n\nSupports sort UX in dashboards and compliance review tools."}],"description":"Optional sort order key for logs (e.g., '-created_at' for descending timestamp).\n\nSupports sort UX in dashboards and compliance review tools."}},"required":["page","limit"],"description":"Request body for searching and paginating ai_shop_audit_logs entries.\n\nSupports audit/system compliance, enabling full-text search and advanced filter per AI Shop requirements. Pagination ensures scalable UI."},"IPageAiShopAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard page metadata for audit log listings.\n\nProvides page, limit, total count, and page count for compliance review audits."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopAuditLog"},"description":"Array of IAiShopAuditLog objects for the current page.\n\nContains atomic log details for audit and compliance workflows."}},"required":["pagination","data"],"description":"Paginated page of audit logs for compliance and system review, following IPage<T> generic layout.\n\nEach log is compliant with ai_shop_audit_logs atomic record schema, facilitating search, export, and reporting features."},"IAiShopAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) for this log row in ai_shop_audit_logs.\n\nEnables unique lookup, compliance ordering, and export for audit/legal review."},"event_id":{"type":"string","description":"Globally unique event identifier for business, compliance, and duplication checks.\n\nEnforced unique in DB; appears in event streams (e.g., 'ORD20250722-38')."},"event_type":{"type":"string","description":"Business event type for search/classification (e.g., 'USER_LOGIN', 'ORDER_CANCELED').\n\nEnables quick filtering in audit log analysis."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of actor (user, seller, admin, or null for system events).\n\nLinks to actors table for provenance, traceability as described in ERD and Prisma documentation."},{"type":"null","format":"uuid","description":"UUID of actor (user, seller, admin, or null for system events).\n\nLinks to actors table for provenance, traceability as described in ERD and Prisma documentation."}],"description":"UUID of actor (user, seller, admin, or null for system events).\n\nLinks to actors table for provenance, traceability as described in ERD and Prisma documentation."},"actor_role":{"oneOf":[{"type":"string","description":"String role for actor (customer, seller, admin, or null for system-initiated).\n\nAligns log with business context for compliance/regulatory review."},{"type":"null","description":"String role for actor (customer, seller, admin, or null for system-initiated).\n\nAligns log with business context for compliance/regulatory review."}],"description":"String role for actor (customer, seller, admin, or null for system-initiated).\n\nAligns log with business context for compliance/regulatory review."},"target_table":{"oneOf":[{"type":"string","description":"Affected table/entity for the event. For example, 'ai_shop_orders'.\n\nEssential for incident and data breach analysis in audit trails."},{"type":"null","description":"Affected table/entity for the event. For example, 'ai_shop_orders'.\n\nEssential for incident and data breach analysis in audit trails."}],"description":"Affected table/entity for the event. For example, 'ai_shop_orders'.\n\nEssential for incident and data breach analysis in audit trails."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"Row/entity affected by the logged event (UUID format, nullable).\n\nSupports fast log tracing during dispute or compliance checks."},{"type":"null","format":"uuid","description":"Row/entity affected by the logged event (UUID format, nullable).\n\nSupports fast log tracing during dispute or compliance checks."}],"description":"Row/entity affected by the logged event (UUID format, nullable).\n\nSupports fast log tracing during dispute or compliance checks."},"details":{"oneOf":[{"type":"string","description":"JSON string capturing before/after state, reason, and metadata relevant to event.\n\nUsed in root-cause analysis, compliance trace, and legal review (as required by schema's audit log comments)."},{"type":"null","description":"JSON string capturing before/after state, reason, and metadata relevant to event.\n\nUsed in root-cause analysis, compliance trace, and legal review (as required by schema's audit log comments)."}],"description":"JSON string capturing before/after state, reason, and metadata relevant to event.\n\nUsed in root-cause analysis, compliance trace, and legal review (as required by schema's audit log comments)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of event log creation (ISO 8601).\n\nEnables temporal filtering and compliance evidence gathering."}},"required":["id","event_id","event_type","created_at"],"description":"Atomic audit log entry describing compliance, operational, or admin/system actions, as required by audit/compliance policies.\n\nSchema covers business, legal, and root-cause analysis needs of the AI Shop system. Mirrors the ai_shop_audit_logs table, supporting full traceability, search, and external reporting/export."},"IAiShopAuditLog.ICreate":{"type":"object","properties":{"event_id":{"type":"string","description":"Unique business event string primary key (see ai_shop_audit_logs commentary).\n\nRequired for deduplication, compliance, and system integrity."},"event_type":{"type":"string","description":"Enum or code identifying type, e.g., 'USER_LOGIN', 'ORDER_CANCELED'. Fulfills audit reporting need described by the Prisma schema."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"Actor's UUID if present (customer, seller, admin, etc)—see ERD; or null for system events."},{"type":"null","format":"uuid","description":"Actor's UUID if present (customer, seller, admin, etc)—see ERD; or null for system events."}],"description":"Actor's UUID if present (customer, seller, admin, etc)—see ERD; or null for system events."},"actor_role":{"oneOf":[{"type":"string","description":"String actor role for business context, matching identity subsystem; or null for system operations."},{"type":"null","description":"String actor role for business context, matching identity subsystem; or null for system operations."}],"description":"String actor role for business context, matching identity subsystem; or null for system operations."},"target_table":{"oneOf":[{"type":"string","description":"Name of affected table/model as per Prisma schema (e.g., 'ai_shop_orders')."},{"type":"null","description":"Name of affected table/model as per Prisma schema (e.g., 'ai_shop_orders')."}],"description":"Name of affected table/model as per Prisma schema (e.g., 'ai_shop_orders')."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of entity/row affected; null for no target (e.g., login, config edit)."},{"type":"null","format":"uuid","description":"UUID of entity/row affected; null for no target (e.g., login, config edit)."}],"description":"UUID of entity/row affected; null for no target (e.g., login, config edit)."},"details":{"oneOf":[{"type":"string","description":"JSON string detailing changes, reason, or old/new values; aligns with audit log requirements comments."},{"type":"null","description":"JSON string detailing changes, reason, or old/new values; aligns with audit log requirements comments."}],"description":"JSON string detailing changes, reason, or old/new values; aligns with audit log requirements comments."}},"required":["event_id","event_type"],"description":"Payload for new audit log writes, supplying full atomic business/compliance data for ai_shop_audit_logs rows.\n\nTraceable for legal, forensic, or business reporting by compliance tools."},"IAiShopAuditLog.IUpdate":{"type":"object","properties":{"event_type":{"oneOf":[{"type":"string","description":"New/Corrected event type, for business correction or audit tracing. Only updatable if business policy forbids strict immutability."},{"type":"null","description":"New/Corrected event type, for business correction or audit tracing. Only updatable if business policy forbids strict immutability."}],"description":"New/Corrected event type, for business correction or audit tracing. Only updatable if business policy forbids strict immutability."},"details":{"oneOf":[{"type":"string","description":"Correction/append to event JSON detail for exception business flows or compliance response. Only updatable with high-privilege intervention."},{"type":"null","description":"Correction/append to event JSON detail for exception business flows or compliance response. Only updatable with high-privilege intervention."}],"description":"Correction/append to event JSON detail for exception business flows or compliance response. Only updatable with high-privilege intervention."}},"description":"Payload for _exceptional_ updates to audit logs; usually forbidden, but schema supports formal API surface traceability.\n\nFor business flows/incident management requiring post-insert correction, must always trace, log, and document rationale.","required":[]},"IAiShopAuditLog.IDeleteResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Flag: true if entry successfully redacted/removed; false for error/compliance block.\n\nAllows compliance or admin UI to display outcome with high traceability."},"message":{"type":"string","description":"Status/audit message for compliance or legal confirmation (e.g., 'Log entry removed').\n\nDetails reason and context for deletion/redaction."}},"required":["success","message"],"description":"Delete/redact result payload for audit log entry (IAiShopAuditLog row).\n\nConfirms success/error for compliance auditing and regulatory trace."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number returned. 1-based for first page.\n\nEnables business UI/UX convention for paginated results and audit review."},"limit":{"type":"integer","description":"Limit/page size of records per page (default: 100 as per business documentation and system requirements).\n\nMay be user-configurable for UI tools."},"records":{"type":"integer","description":"Total number of records matching query/filters (prior to pagination).\n\nFulfills reporting, audit, and compliance analytics needs."},"pages":{"type":"integer","description":"Total page count, calculated as ceil(records/limit).\n\nUsed for consequence-based UX in admin/audit panel navigation."}},"required":["current","limit","records","pages"],"description":"Standard paginated result info object (IPage.IPagination).\n\nUsed in all paginated listings for admin, audit, and analytics dashboarding. Defined in core platform doc IPage<T>."}}},"completed":35,"total":35,"step":0,"created_at":"2025-07-22T14:30:32.007Z"},"tokenUsage":{"facade":{"aggregate":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComplete","document":{"operations":[{"specification":"This operation retrieves a search result list of ai_shop_channels in the system. It supports advanced filtering, pagination, and sorting to enable administrators or system managers to review multiple marketplace channels at once. Typical filters may include code, name, enabled status, and creation/update timestamps. Implements the pagination, search, and ordering requirements detailed in the Systematic module's Prisma schema comments. The results contain the summarized information of multiple channel entities as per admin dashboard needs.","description":"This endpoint allows for the batch retrieval of ai_shop_channels, facilitating management and review of all marketplace channels. As described in the Prisma schema, the ai_shop_channels table stores all atomic information for each distinct channel, including unique code, display name, enabled state, and timestamps for creation and update. This operation enables searching by code, filtering by enabled status, and sorting by name or sort_order to support dynamic shopfront displays and event management.\n\nAccess to this endpoint should be restricted to users authorized for administrative functions, due to the sensitive nature of channel management. Standard pagination and sorting conventions apply; invalid filter values should result in clear errors. The endpoint is designed to work in conjunction with detailed and single-channel endpoints, supporting a complete CRUD lifecycle for channel management.\n\nThe endpoint ensures that the business requirements of comprehensive channel oversight, compliance with business audit policies, and robust performance for large numbers of channels are met, as outlined in both the API planning document and the Prisma schema.","summary":"List/retrieve ai_shop_channels with search, filter, and pagination (Systematic domain table).","parameters":[],"requestBody":{"description":"Parameters for list/search, filtering, and ordering of ai_shop_channels, including page, perPage, searchText, filter, and sorting info.","typeName":"aiShopChannel.IRequest"},"responseBody":{"description":"Paginated list result and summary details for ai_shop_channels, with pagination meta-data included.","typeName":"aiShopChannel.IPage"},"authorizationRoles":["admin"],"path":"/aiShop/channels","method":"patch"},{"specification":"This operation retrieves a single ai_shop_channel detail for a given channel ID. The endpoint serves for detail display or edit form population in admin dashboards. Channel IDs are UUIDs corresponding to the primary key in the ai_shop_channels Prisma schema. Only users with administrative privileges can access this data.","description":"This endpoint provides the full details of a single ai_shop_channel entity, including all atomic and descriptive columns: code, display name, enabled status, display order, and timestamps. It draws directly from the ai_shop_channels table (primary key: id), ensuring consistency and referential integrity with other marketplace configuration entities.\n\nSensitive channel information, such as whether the channel is currently enabled or not, is returned for precise admin management and audit. Requests with invalid or non-existent IDs return clear errors or not found results.\n\nThe operation must be secured for admin or system configuration roles, as improper exposure or modification can directly affect the platform's storefront and section/category scoping.","summary":"Get ai_shop_channel details by channel ID (Systematic domain table, admin only).","parameters":[{"name":"id","description":"UUID of the ai_shop_channel entity to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data of ai_shop_channels entity, including all admin-editable fields and status info.","typeName":"aiShopChannel"},"authorizationRoles":["admin"],"path":"/aiShop/channels/{id}","method":"get"},{"specification":"Create a new ai_shop_channel entity record. Supports administrator workflows for registering new marketplace or event channels. All atomic fields, such as code, name, and enabled state, must be supplied. Upon success, returns the created channel's full details.","description":"This endpoint enables the creation of a new ai_shop_channel, as per platform management requirements. The Prisma schema for ai_shop_channels specifies required atomic fields, including unique code, name, enabled status, and display sort order. The request must supply all non-nullable fields as per the commented schema, and admin workflows may additionally attach an initial section or category.\n\nAfter validating uniqueness constraints (e.g., no duplicate code), the system persists the channel. On creation, the full representation, as returned by the detail endpoint, is provided along with its generated UUID. Invalid data or conflict in codes should yield error responses following REST conventions.\n\nOnly admin or system-level users can register new channels, aligning with compliance and audit requirements established in planning and table comments.","summary":"Create (insert) a new ai_shop_channel entity (Systematic module, admin only).","parameters":[],"requestBody":{"description":"Data for new ai_shop_channel creation. Must include all required atomic fields.","typeName":"aiShopChannel.ICreate"},"responseBody":{"description":"Full ai_shop_channel entity object as persisted in the database.","typeName":"aiShopChannel"},"authorizationRoles":["admin"],"path":"/aiShop/channels","method":"post"},{"specification":"Update a single ai_shop_channel's fields by its ID. Supports complete update (PUT semantics) for atomic attributes such as name, enabled status, and display order. Restricted to authorized admin roles. The full representation of the channel is returned after update.","description":"This endpoint implements the full update (PUT) of an ai_shop_channel given its primary key ID. As dictated by the Systematic domain's schema, the operation must handle all non-nullable fields: code, name, enabled, sort_order, and timestamps for audit. The input must pass validation against uniqueness constraints (such as unique code).\n\nAfter update, the complete new channel data is returned, supporting admin panel editing UX. If the channel ID is invalid or the update violates business logic (e.g., code conflict), error responses are generated as per REST standards.\n\nSecurity for this endpoint aligns with audit and operational risk policies: only platform administrators may perform channel updates.","summary":"Update (PUT) all fields of an ai_shop_channel by ID (Systematic, admin only).","parameters":[{"name":"id","description":"UUID of the ai_shop_channel entity to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full replacement data for all atomic fields of ai_shop_channel. Must include all required fields.","typeName":"aiShopChannel.IUpdate"},"responseBody":{"description":"ai_shop_channel after update as stored in the database.","typeName":"aiShopChannel"},"authorizationRoles":["admin"],"path":"/aiShop/channels/{id}","method":"put"},{"specification":"Delete (remove) a single ai_shop_channel entity by its ID, with admin authorization required. Hard or soft delete is determined by business logic. Relational constraints and referential integrity are enforced according to the database and Systematic domain policy.","description":"This endpoint deletes (or marks deleted, if soft deletion is implemented) an ai_shop_channel by its id. The operation is restricted to admin-level users according to the sensitive nature of channel management. The input ID must be a valid UUID; if not found or already deleted, a suitable error result is returned.\n\nAll referential integrity constraints from the Prisma schema must be adhered to, meaning that sections, categories, or posts associated with this channel are handled per cascading rules or protected from orphaning. Deletion events are to be audit-logged as required by compliance protocols discussed in the requirement docs.\n\nThe result is a confirmation of deletion, possibly including the deleted entity's basic data, or a null body if preferred by REST convention.","summary":"Delete ai_shop_channel by ID (Systematic, admin-only, audit-logged).","parameters":[{"name":"id","description":"UUID of the ai_shop_channel to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of deletion (or the deleted entity's data, if returned).","typeName":"aiShopChannel.IDeleteResponse"},"authorizationRoles":["admin"],"path":"/aiShop/channels/{id}","method":"delete"},{"specification":"List/search all ai_shop_sections in the system. Supports advanced filtering, pagination, and sorting for administrative and configuration use cases. Implements display and configuration requirements from the platform management module.","description":"This endpoint retrieves a paginated and filtered list of ai_shop_sections entities according to the ai_shop_sections Prisma schema. The entity covers marketplace section management within a channel, with atomic fields for code, name, enabled state, and relationships to channel. Filtering may include channel ID, code, name, and enabled status, supporting mall configuration tasks, campaign/event homepages, and admin display control.\n\nThe response includes both section summaries and pagination meta as specified by the IPage pattern. Authorization is restricted to system admin or trusted management roles. This endpoint should support UI for section configuration and business audit requirements, as well as support actions to create or update specific sections via separate endpoints.\n\nError handling covers invalid filter arguments and permission denials, clear error reporting as described in the schema comments and requirements analysis.","summary":"Search/list ai_shop_sections with filtering and pagination (Systematic domain table).","parameters":[],"requestBody":{"description":"List/search filter and pagination parameters for ai_shop_sections. May include channel ID, code, name, enabled, order, etc.","typeName":"aiShopSection.IRequest"},"responseBody":{"description":"Paginated search/list result for ai_shop_sections. Includes section rows and pagination info.","typeName":"aiShopSection.IPage"},"authorizationRoles":["admin"],"path":"/aiShop/sections","method":"patch"},{"specification":"Retrieve the complete details for a single ai_shop_section entity, by its UUID primary key. Used for admin panel detail view and editing workflows. Returns all atomic fields and identifies the parent channel.","description":"This endpoint fetches a single ai_shop_section from the database given its primary key (UUID). The response includes all atomic section fields (code, name, enabled state, sort_order, channel linkage, and timestamps) as defined in the Prisma schema's section comments. The operation is restricted to platform administrators or other configuration-authorized users.\n\nIf the requested section does not exist, a not found or error response is returned. The endpoint is essential for admin-side section editing, home-page configuration, and campaign management. Sections retrieved this way support update and deletion via companion endpoints, supporting the full CRUD lifecycle and business compliance documented in the requirements.\n\nAll access is audit-logged as per security/compliance planning, fulfilling the traceability and platform integrity controls outlined across requirements and data structure descriptions.","summary":"Fetch detail of a single ai_shop_section by UUID (Systematic domain table, admin only).","parameters":[{"name":"id","description":"ai_shop_sections entity UUID to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full ai_shop_section entity details, including all editable/admin fields and channel info.","typeName":"aiShopSection"},"authorizationRoles":["admin"],"path":"/aiShop/sections/{id}","method":"get"},{"specification":"Create a new ai_shop_section entity, with admin authorization required. All required atomic fields, including channel linkage, code, name, sort order, and enabled state must be supplied. Ensures unique constraints within the parent channel. Returns the full section object on success.","description":"This endpoint registers a new ai_shop_section under a specified channel, as detailed in the system architecture and platform management planning. The request body must include all non-nullable atomic attributes (such as channel_id, code, name, enabled flag), with the business logic enforcing uniqueness on the channel+code as per the Prisma schema definition.\n\nAfter verifying input and referential integrity (channel exists), the section is persisted. On success, the response gives the created section entity, supporting further admin editing/workflow, and enabling UI tools for section configuration in the admin panel.\n\nAuthorization is limited to admin roles, since improper configuration can affect mall UX or campaign events. Errors are surfaced per REST and schema guidance, using unique constraint and FK validation.","summary":"Create a new ai_shop_section (insert row, admin only, Systematic domain table).","parameters":[],"requestBody":{"description":"All atomic attributes for new ai_shop_section, including channel linkage and display order.","typeName":"aiShopSection.ICreate"},"responseBody":{"description":"Entity object for the newly created ai_shop_sections row.","typeName":"aiShopSection"},"authorizationRoles":["admin"],"path":"/aiShop/sections","method":"post"},{"specification":"Update all atomic fields of a single ai_shop_section, identified by its UUID. Implements admin edit+replace logic for the section entity. All fields required for update. Returns the updated entity data upon success. Only admins may execute this.","description":"This endpoint implements a complete update (PUT) to an ai_shop_section. The input must supply all non-nullable fields (code, name, order, enabled, channel linkage, etc.), as enforced by the Prisma schema comments and requirements analysis. Update requests validate uniqueness constraints within the parent channel (no duplicate code per channel) and referential channel integrity.\n\nReturns the entity after update for admin dashboard integration. Errors for constraint violations or missing entities are handled per standard REST conventions. Section configuration changes are audit-logged to comply with admin workflow and system compliance needs documented in the requirements files.","summary":"PUT update all fields of ai_shop_section by UUID (Systematic/config, admin-only).","parameters":[{"name":"id","description":"UUID for ai_shop_sections entity to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full put update/set data for ai_shop_section (atomic fields required).","typeName":"aiShopSection.IUpdate"},"responseBody":{"description":"Section record after update, with all properties set.","typeName":"aiShopSection"},"authorizationRoles":["admin"],"path":"/aiShop/sections/{id}","method":"put"},{"specification":"Delete a single ai_shop_section from the system by its UUID. Admin authorization required. Referential integrity and compliance auditing mandatory. Soft or hard deletes per business config. Returns operation result or deleted info as per API design.","description":"This endpoint enables an admin to remove (delete or mark deleted) a ai_shop_section entity from the marketplace configuration by its ID. The operation checks entity existence, handles related referential integrity (e.g., channel linkage), and logs all admin actions for compliance.\n\nReturns a confirmation response or the deleted record, aligned to the business and system configuration needs. Nonexistent IDs or already deleted objects yield error responses per REST and requirements/planning docs.\n\nDeletion is logged per audit/compliance requirements to provide traceability, as described in the planning documentation and schema comments.","summary":"Delete ai_shop_section entity by ID (Systematic domain, admin-only, audit-logged).","parameters":[{"name":"id","description":"ai_shop_sections entity UUID to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of section deletion, or deleted object as preferred by policy.","typeName":"aiShopSection.IDeleteResponse"},"authorizationRoles":["admin"],"path":"/aiShop/sections/{id}","method":"delete"},{"specification":"Retrieve a paginated and searchable list of categories in the AI Shop system. This operation reflects the `ai_shop_categories` table in the database, as described by 3NF and the requirements for marketplace category management, navigation, and filtering. The PATCH method is chosen because the query parameters support complex filters (e.g., by channel, parent, status) within a JSON request body. Includes audit fields, parent-child hierarchy, channel linkage, and category status.","description":"This endpoint returns a filtered, paginated list of AI Shop product categories. It reflects the business requirement for dynamic navigation, product organization, and hierarchy management, referencing the normalized `ai_shop_categories` Prisma model.\n\nSecurity: Available to authenticated users with appropriate role (customer, seller, or admin), but the actual filtering rules and returned columns may vary by role (e.g., admin can query all, customer only enabled categories).\n\nQuery supports channel restriction, parent/child structure, enabled/disabled filtering, sorting, and text-based search by name/code. Pagination parameters are mandatory to prevent large result sets. Returns a standardized paginated response containing summary information and essential properties for category navigation or management views.\n\nValidations: Ensures only accessible categories are visible to calling user by role. Error handling includes invalid query parameters, forbidden access, or internal server errors. Works in conjunction with single-category detail, creation, update, and deletion endpoints.","summary":"Paginated and searchable category list retrieval for ai_shop_categories (PATCH /aiShop/categories).","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for category list retrieval.","typeName":"aiShopCategories.IRequest"},"responseBody":{"description":"Page of category summary objects including meta and navigation fields.","typeName":"IPageAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"patch"},{"specification":"Retrieve details of a single category in the AI Shop platform by its unique identifier. This corresponds to the `ai_shop_categories` table and is necessary for editing, detail display, or validation use-cases. The endpoint uses a path parameter for the unique category ID, a UUID field. Returns all atomic, non-derived category attributes and meta-information.","description":"This endpoint fetches the complete details of a single AI Shop product category by its ID, referencing the `ai_shop_categories` schema with strict parity to the Prisma model and business rules. It supports administrators, sellers, or customers depending on access role, but only enabled categories may be visible for non-admin roles.\n\nThe response includes all required atomic fields (ID, channel, parent, code, name, status, ordering, timestamps) and, if applicable, meta fields used for tree navigation (parent/child relationships) and UI display. Handles permission checks and returns well-typed error messages on invalid, not-found, or unauthorized access.\n\nCommonly used in tandem with category list, creation, update, or delete endpoints.","summary":"Get details of a single category by ID (GET /aiShop/categories/{id}), ai_shop_categories table.","parameters":[{"name":"id","description":"Target category's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full AI Shop category entity (all fields, usually for editing or detail view).","typeName":"aiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"get"},{"specification":"Create a new product category in the AI Shop system. This relates to the insertion of records into the `ai_shop_categories` table, mapping to requirements for vendor/admin-driven category management, taxonomy buildup, and navigational structuring. The request body must validate all normalized attributes (channel, parent, code, name, ordering, etc.).","description":"This endpoint creates a new category in the AI Shop platform, strictly following the structure and business rules defined in the `ai_shop_categories` model. All required atomic fields must be provided (channel ID, parent ID if nested, code, name, display order, and status). Validation checks include code uniqueness within the parent/channel, correct parent&channel references, and required attribute presence.\n\nLikely restricted to admin or seller roles depending on tenant configuration. Returns the full created category object, including server-generated IDs and audit timestamps.\n\nWorks in conjunction with endpoints for listing, updating, retrieving, or deleting categories. Errors are returned on validation failure, duplicate codes, or permission denial.","summary":"Create a new category (POST /aiShop/categories), ai_shop_categories.","parameters":[],"requestBody":{"description":"Payload to create a new category with atomic, normalized fields.","typeName":"aiShopCategories.ICreate"},"responseBody":{"description":"Created category object with full field set.","typeName":"aiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"post"},{"specification":"Update an existing product category by its ID in the AI Shop. This operation maps to the update of a record in the `ai_shop_categories` table and supports direct editing of all mutable attributes (excluding ID). Business use includes correcting taxonomy, updating display names, nesting, or status. The PUT method requires the entire payload structure for full update, validated against the Prisma schema and business rules.","description":"Endpoint for updating (fully replacing/modifying) an AI Shop category, using the category's unique ID in the path. The request body must carry all required, normalized mutable attributes of the `ai_shop_categories` Prisma model: code, name, parent ID (if changed), sort order, status, etc. Enforces code uniqueness and referential integrity with parent/channel IDs.\n\nRestricted to users with appropriate admin or manager role; customers typically cannot invoke. Errors are returned for invalid references, uniqueness violations, permission failure, or not-found cases.\n\nSupports category management workflows in admin or backend interfaces. Used closely with create/delete/list/detail endpoints for comprehensive taxonomy and navigation structuring.","summary":"Update an existing category by ID (PUT /aiShop/categories/{id}), ai_shop_categories table.","parameters":[{"name":"id","description":"Target category's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Replacement fieldset for full category update (all mutable attributes).","typeName":"aiShopCategories.IUpdate"},"responseBody":{"description":"Updated category record reflecting server-side changes.","typeName":"aiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"put"},{"specification":"Delete a category from the AI Shop system by its unique identifier. This performs a deletion on the `ai_shop_categories` table, used to remove obsolete, merged, or mistyped taxonomy entries. Enforces referential integrity and may require pre-checks for orphaned children/licensed items. Returns standard success/failure envelope.","description":"This endpoint deletes a single category, identified by its unique ID, from the AI Shop category taxonomy (the `ai_shop_categories` DB table). Typical use is in admin interfaces for removing or consolidating navigation structures. Safety constraints may include pre-validating no orphaned subcategories or dependent products, in accordance with the schema description.\n\nRole-restricted to managers or admins. Returns success indicator or error for cases like not-found, in-use, or permission denial.\n\nPart of a full CRUD suite for categories, including list, detail, update, and create APIs.","summary":"Delete a category by ID (DELETE /aiShop/categories/{id}), ai_shop_categories table.","parameters":[{"name":"id","description":"Target category's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deletion result or status notification (may include success flag, error, or audit info).","typeName":"IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"delete"},{"specification":"Retrieve a list of all platform configuration entries in the AI Shop. This operation covers the `ai_shop_configurations` table, providing admin-level access to key-value pairs that define runtime parameters for the system. PATCH allows for complex filtering by parameter name or description (string search, sort, etc.). Returns all config entries, including audit fields and descriptions for management.","description":"Lists platform configuration records as defined in the `ai_shop_configurations` schema. Intended for admin/ops interfaces for system-wide settings management. Full-text search, sorting, and pagination supported within a complex PATCH request body. Result is a paginated list of configuration records with all atomic fields (ID, name, value, description, timestamps).\n\nShould enforce admin-only access as system settings can affect core platform behavior. Integrates with endpoints for config detail, update, creation, and deletion. Handles errors for query constraints, forbidden access, or database errors.","summary":"Paginated and searchable configuration list (PATCH /aiShop/configurations), ai_shop_configurations.","parameters":[],"requestBody":{"description":"Search, filter, and pagination payload for retrieving configuration list.","typeName":"aiShopConfigurations.IRequest"},"responseBody":{"description":"Page of configuration records with meta, value, and description fields.","typeName":"IPageAiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"patch"},{"specification":"Retrieve details for a single configuration entry by its unique ID in the AI Shop platform. Maps to the `ai_shop_configurations` table and used for inspection/editing of runtime system parameters. Full payload includes atomic fields: name, value, description, and audit timestamps.","description":"Fetches a single configuration entity from the `ai_shop_configurations` catalog using its ID as a path parameter. Response delivers full database row (ID, name, value, description, created/updated timestamps), enabling read/edit UX for system administrators. Relevant for compliance ops, settings dashboards, or config debugging reports.\n\nAccess-limited to administrative roles, usually with audit log enforced. Not-found and forbidden errors handled with secure, explicit semantics. Used in conjunction with configuration CRUD endpoints for platform management.","summary":"Get details of a system configuration entry (GET /aiShop/configurations/{id}), ai_shop_configurations.","parameters":[{"name":"id","description":"Configuration entry's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration record for detail display or editing.","typeName":"aiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"get"},{"specification":"Create a new platform configuration record (name-value pair) in AI Shop. This corresponds to an insert into the `ai_shop_configurations` table for dynamic runtime settings. Required fields are parameter name, value, description, and optional (nullable) comments. Enforces parameter name uniqueness and proper audit information. Only system admin roles may perform this action.","description":"This endpoint creates a new system configuration entry—an atomic parameter for platform settings (see `ai_shop_configurations` entity). Request body must provide unique param_name, param_value, description (optional), observing naming and value structure per system's rules. Enforces key uniqueness and audit fields on insert.\n\nAccess is strictly limited to platform administrators, with success returning the full created config record. Errors include duplicate key, invalid value, or forbidden access.","summary":"Create a new platform configuration (POST /aiShop/configurations), ai_shop_configurations.","parameters":[],"requestBody":{"description":"Payload for creating a new configuration parameter; must include atomic, normalized fields as per schema.","typeName":"aiShopConfigurations.ICreate"},"responseBody":{"description":"The newly created configuration record with all atomic fields and audit info.","typeName":"aiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"post"},{"specification":"Update a system configuration entry by ID in the AI Shop platform. PATCH method not used: full object replacement is required as per strict API standards. This corresponds to an update of `ai_shop_configurations` DB row, requiring full set of mutable attributes. Validation enforces param_name, param_value, and uniqueness. Intended for privileged system administrators.","description":"This replaces (or updates) all mutable fields of a configuration entry, using the row's unique ID as a path parameter. Request requires all atomic fields (name, value, description if present), observing normalization based on the `ai_shop_configurations` schema. Enforces uniqueness, data type requirements, and full audit trail for update.\n\nOperation is admin-only, typically with logs. Errors for unique constraint violation, not found, or validation failures. Used for platform ops, developer settings, or emergency overrides.","summary":"Update an existing platform configuration by ID (PUT /aiShop/configurations/{id}), ai_shop_configurations.","parameters":[{"name":"id","description":"Configuration record ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for full object replacement of system configuration.","typeName":"aiShopConfigurations.IUpdate"},"responseBody":{"description":"Updated configuration object reflecting written changes.","typeName":"aiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"put"},{"specification":"Delete a configuration record from the AI Shop platform by its unique ID. Executes a deletion on the `ai_shop_configurations` table, removing obsolete or erroneous parameters. Returns a standard deletion result envelope (success, error, or reason). Admin-only operation for security reasons.","description":"Endpoint deletes a configuration record, targeted by its unique ID, from the AI Shop `ai_shop_configurations` entity. Used exclusively by authorized admins for cleaning up obsolete, erroneous, or replaced settings. Enforces referential and key integrity. Success is indicated by a result flag (and optional error message/audit trail).\n\nPart of the full configuration settings management API suite, together with create, read, update, and search endpoints.","summary":"Delete a configuration parameter by ID (DELETE /aiShop/configurations/{id}), ai_shop_configurations.","parameters":[{"name":"id","description":"Configuration record's ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deletion status/result info for admin/audit logging.","typeName":"IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"delete"},{"specification":"List/search files in the AI Shop platform's file storage. File entity supports all normalized file uploads—refer to ai_shop_files schema. Implements requirements for secure upload/download, atomic metadata, query by mime type/name, uploader, upload timestamp. Typical use cases: media galleries, bulletin attachments, evidence files. Pagination, sorting, and filters by type, uploader, or date are supported. System-level and business compliance roles only. Reference ai_shop_files columns and required business rules for normalization/compliance and search.","description":"This endpoint retrieves a paginated, searchable list of file metadata stored within the AI Shop platform, as described in the ai_shop_files Prisma schema. It allows searching by MIME type, original filename, uploader name, date ranges (uploaded_at), and size. The purpose is to ensure secure, auditable file management, as per compliance and business requirements for all uploads (products, posts, users, admin logs, etc.).\n\nRole-based access applies: only authenticated, authorized actors (admin, seller, or designated customer) may access file storage; file URIs should not be exposed without permission validation. Underlying implementation must ensure links to attachments in posts/comments/products remain normalized, and direct file download occurs only after security checks. \n\nError handling: return 404 for not found or unauthorized visibility; 422 for malformed query filter. For audits and incident response, access is logged (see ai_shop_audit_logs).\n\nCommonly paired with POST for upload, GET for detail, and DELETE for clean-up. May be restricted further by API gateway configuration.","summary":"List/search file storage resources (ai_shop_files).","parameters":[],"requestBody":{"description":"Search parameters for listing files, including paging and complex filters for audit/compliance access.","typeName":"IAiShopFile.IRequest"},"responseBody":{"description":"Paginated file metadata list result matching search/filter criteria.","typeName":"IPageAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files","method":"patch"},{"specification":"Get detail for a single file in AI Shop platform storage (ai_shop_files). Implements detailed audit, access validation, download link generation. Pulls atomic, normalized file info by ID. Used for attachment previews, download links, post review, and compliance controls. Requires strict access checks and audit logs for compliance.","description":"Retrieves all metadata and access information for a specific file as described in ai_shop_files Prisma schema. Returns atomic details: ID, original name, uploaded URI, mime type, size, uploader, and timestamp. Business processes for audit/compliance require strict access validation based on role (customer, seller, admin).\n\nThe endpoint must log access traces (for GDPR/PCI compliance, incident investigation) in ai_shop_audit_logs. Special logic may be needed for signature URLs or managed downloads. Returns 404 if not found, 403 if unauthorized. Paired with PATCH for searching files, POST for upload, and DELETE for removals.","summary":"Get single file detail (ai_shop_files).","parameters":[{"name":"id","description":"Unique file identifier (UUID) to retrieve detail metadata.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed file metadata, access URIs (where permitted), for requested file.","typeName":"IAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"get"},{"specification":"Upload a new file to AI Shop file storage (ai_shop_files), recording atomic metadata (name, mime, URI, size) per the Prisma schema. Fulfills platform-wide upload requirements for all feature domains (products, bulletin board, user uploads, admin evidence, attachment media). Normalized: all metadata via dedicated fields, physical file via securely-managed URI. Upload may originate from multipart form or external source, with post-upload entry creation.","description":"Creates a new file record in ai_shop_files, registering atomic metadata and access URI for newly uploaded content (see schema: original_name, mime_type, uri, size_bytes, uploader_name, uploaded_at, file_id). Supports UI flows for uploading product images, attachment files on posts/comments, compliance document uploads (KYC evidence, etc).\n\nFile integrity and compliance rules apply: validate allowed file types and size before creation. Implementation separates metadata entry (via API) and actual physical upload (which may be handled by a direct transfer to managed storage). For sensitive/large files, use pre-signed URL process, then invoke this endpoint with file metadata on upload completion.\n\nAudit logs must track upload events, and uploader identity reference should match the authenticated actor.\n\nReturns full file record after creation. On validation failure (file type/size/URI), responds 422. Pairs with PATCH (list), GET (detail), and DELETE (removal).","summary":"Upload file and register metadata (ai_shop_files).","parameters":[],"requestBody":{"description":"Required atomic metadata for file registration: original name, URI, mime type, size, (optional) uploader, upload time.","typeName":"IAiShopFile.ICreate"},"responseBody":{"description":"Full created file metadata as saved in ai_shop_files, including ID and registered path.","typeName":"IAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files","method":"post"},{"specification":"Update metadata for an uploaded file record (ai_shop_files). Edits only atomic, non-immutable fields (e.g., name, label, notes), not the underlying file. Maintains audit/trace log via ai_shop_audit_logs. Used for correcting info, annotating evidence files, or enabling admin compliance actions.","description":"Modifies editable metadata for an existing file in ai_shop_files (e.g., update original_name, add uploader_name, or fix mime_type if uploaded with error). Physical file URI/path must remain immutable post-creation for audit/compliance reliability. Edits are logged in ai_shop_audit_logs for traceability and compliance review.\n\nRole-based access: Only uploader/admins may edit certain attributes (subject to business policy). Not all fields are editable (size, uploaded_at typically locked). On success, returns updated metadata; 404 for not found, 403 for unauthorized edits, 422 if validation fails. Pairs with GET for reading file metadata, PATCH for listing, DELETE for removal.","summary":"Update metadata for uploaded file (ai_shop_files).","parameters":[{"name":"id","description":"Target file's unique identifier (UUID) for metadata update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Editable file metadata that may be updated. URI and physical file attachment are not updatable.","typeName":"IAiShopFile.IUpdate"},"responseBody":{"description":"Updated file metadata after validated changes.","typeName":"IAiShopFile"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"put"},{"specification":"Delete (remove) a file record and (optionally) its physical file from storage (ai_shop_files). Implements secure deletion, audit logging, and compliance event capture for uploads across platform domains.","description":"Removes a file metadata record (and, if authorized/configured, the physical file) from platform file storage as per ai_shop_files. Deletion is atomic and logged to ai_shop_audit_logs for compliance/audit. Business logic may enforce soft- or hard-deletion (actual file removal depends on storage integration).\n\nRole-based checks must verify file ownership (only uploader/admin may delete) and block deletion if file is referenced by other entities (e.g., posts, products, KYC docs). Attempts to delete non-existent files return 404; unauthorized attempts return 403. On success, responds with confirmation payload.\n\nPaired with PATCH for list, GET for metadata, and POST for upload. Deletion must be irreversible and traceable.","summary":"Delete uploaded file (ai_shop_files).","parameters":[{"name":"id","description":"File's unique identifier (UUID) to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deletion confirmation response for removed file metadata (and file, if applicable).","typeName":"IAiShopFile.IDeleteResponse"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"delete"},{"specification":"List/search audit log entries for compliance and platform actions (ai_shop_audit_logs). Used by admin/moderator roles for incident investigation, GDPR/PCI compliance, and review of data access/audit trails. Query supports event type, actor, role, date, and free-text filters. Implements full 3NF compliance for logging. Large-scale systems require efficient pagination and sorting.","description":"This endpoint retrieves a paginated, filtered list of audit log entries from ai_shop_audit_logs. Use cases: compliance incident reviews, admin operation audits, legal discovery, system health analysis. Supports complex filtering/search by event_type, actor_role, affected table, date, and details. Provides full traceability and audit support for all sensitive/business events recorded per platform compliance policy.\n\nRole-based access: strictly for admin/authorized roles due to sensitive nature of logs. Search results may be restricted via API gateway policies (PII, sensitive operations). Error handling: 403 if unauthorized, 422 for invalid search parameters. Paired with POST for log creation, GET for detail, DELETE for redaction/removal.\n\nEvents are guaranteed immutable post-creation per compliance/audit design.","summary":"List/search audit logs (ai_shop_audit_logs).","parameters":[],"requestBody":{"description":"Complex search, filter and paging parameters for audit/compliance queries on logs.","typeName":"IAiShopAuditLog.IRequest"},"responseBody":{"description":"Paginated list of audit logs matching filter criteria.","typeName":"IPageAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs","method":"patch"},{"specification":"Get details of a single audit log entry (ai_shop_audit_logs) for compliance, incident, or legal review. Returns atomic audit info (event type, actor, entity affected, before/after). Used to reconstruct actions by user/admin/system actors. Access strictly controlled for compliance.","description":"Retrieves complete metadata for one audit log by ID as in ai_shop_audit_logs Prisma schema, including event ID, type, actor, target, details, and precise timestamps for legal/business audit. Used by admins or legal teams to verify disputed actions, reconstruct user activity, or support investigations. \n\nStrict access controls apply—API gateway must restrict to admin or legal audit roles. All access is itself logged for traceability. Attempts for non-existent or unauthorized logs return 404/403. Typically paired with PATCH for search and POST for log writing; DELETE for redactions if permitted by compliance.","summary":"Get single audit log detail (ai_shop_audit_logs).","parameters":[{"name":"id","description":"Unique audit log entry identifier (UUID) to retrieve details.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of audit log event for compliance/legal use.","typeName":"IAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs/{id}","method":"get"},{"specification":"Create (write) a new audit log entry (ai_shop_audit_logs) for compliance, platform events, or legal traceability. Implements immutable, precise, atomic event recording for all privileged actions (user login/change, data mut, admin action). Per system requirements, audit logs must always be written at event time, never retroactively, and always as an atomic insert. Must cover all critical business and legal actions per requirements.","description":"Creates a new immutable audit log entry in ai_shop_audit_logs. Captures atomic detail: event_id, event_type, actor ID/role, target table/entity, and before/after details as JSON string, timestamped for traceability. Used to record all privileged/admin/user actions, support dispute resolution, compliance, data privacy audits.\n\nNo updates are permitted post-insert per business/audit rules (only delete or redact via privileged admin). On success, returns audit log entry detail. Validation fails for duplicate event_id or missing/invalid data (422). Strictly paired with PATCH (search), GET (detail), DELETE (redaction/removal); update (PUT) is not supported for audit log immutability.\n\nOnly admin/system-privileged actors may write logs directly unless delegated for special workflow.","summary":"Write new audit log entry (ai_shop_audit_logs).","parameters":[],"requestBody":{"description":"Immutable event details for new audit log entry. Must contain all required metadata per schema.","typeName":"IAiShopAuditLog.ICreate"},"responseBody":{"description":"Immutable audit log with all submitted details, plus DB-generated timestamps/ID.","typeName":"IAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs","method":"post"},{"specification":"(DISALLOWED by compliance policy for immutable audit logs, but required for consistency.) Update an audit log entry (ai_shop_audit_logs). For strict audit policy, implementation should reject this with a 405 or similar error for any route/method match, but endpoint is included for consistent API surface. If business allows update, it must enforce chain-of-custody and audit trace. General policy: audit logs must be immutable post-insert.","description":"This endpoint exists only for REST surface consistency; all business and legal requirements strongly recommend audit logs be immutable. If business forces update, all changes must be logged, fully traced, and non-destructive (append-only approach preferred, never actual field overwrite).\n\nIf business supports update (rare), restrict to highest privilege 'super admin/legal' role; on attempt, endpoint should respond 405 unless explicitly enabled. Admins should not expect to use this endpoint routinely. Paired only for formal symmetry with other CRUD endpoints.","summary":"Update audit log entry (ai_shop_audit_logs) [IMMUTABLE: should 405].","parameters":[{"name":"id","description":"Audit log's unique identifier (UUID) to attempt update. Must not allow overwrite—should return error.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attempted update data for audit log (should not be permitted under compliance unless business exception).","typeName":"IAiShopAuditLog.IUpdate"},"responseBody":{"description":"Full audit log entry if (and only if) allowed. Otherwise, a 405 or similar error response indicating immutability.","typeName":"IAiShopAuditLog"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs/{id}","method":"put"},{"specification":"Delete (redact) an audit log entry (ai_shop_audit_logs). Used only by privileged admin/legal for compliance (e.g., GDPR data redaction, legal takedown). Normal business and audit rules require strict chain-of-custody. Deletion is always logged and may be non-destructive (e.g., redaction vs physical delete).","description":"Deletes or redacts a specific audit log entry as per ai_shop_audit_logs Prisma schema. This operation is highly sensitive and must only be permitted for highest-priority compliance or legal cases (e.g., court order, GDPR erasure request, legal takedown). Deletes are always logged to a separate audit workflow for traceability. Can be implemented as hard or soft delete/redaction depending on policy—should default to redacted state with timestamp and reason, not physical removal when possible.\n\nRole-based controls restrict access to admins/legal, and API must deny unauthorized requests with precise error. Pairs with PATCH (search), GET (detail), and POST (creation). Ensures legal chain-of-custody for incident and privacy audit.","summary":"Redact/delete audit log entry (ai_shop_audit_logs).","parameters":[{"name":"id","description":"Target audit log entry identifier (UUID) for redaction/deletion.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation or status for removed/redacted audit log entry.","typeName":"IAiShopAuditLog.IDeleteResponse"},"authorizationRoles":["admin"],"path":"/aiShop/auditLogs/{id}","method":"delete"}],"components":{"schemas":{"aiShopChannel.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Page number for aiShopChannel list search, implementing pagination requirements from the system design. Starts from 1.\n\nRefer to standard IPage/IRequest pagination interface. Atomic, normalized."},"limit":{"type":"integer","format":"int32","description":"Limit of records per page. Default is 100. Fulfills system requirement for scalable queries. Refer to standard IPage/IRequest logic."},"searchText":{"type":"string","description":"Full text search query for filtering aiShopChannel list. Used for fuzzy match against code and name fields. Implements advanced search requirement for administration. Optional."},"code":{"type":"string","description":"Exact filter for channel code. Enforces reporting and programmatic reference needs as described in ai_shop_channels schema. Optional."},"name":{"type":"string","description":"Filter for display name. Used for admin UX, reporting, and search. Exact match or partial, per business logic. Referenced by ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Filter by enabled status (true for enabled/active channels, false for hidden/disabled ones). Implements the business rule for channel display control, normalization requirement."},"sort":{"type":"array","items":{"type":"string","description":"Fields for sort ordering. Example: ['sort_order','name','created_at']. Direction may be encoded in field or separately. Aligns with admin UI sort controls."},"description":"Array of fields to apply sorting. Implements admin dashboard sorting options."}},"required":[],"description":"Request for listing/searching aiShopChannel (channels) records, with support for pagination, filtering, search, and sorting as detailed in the system's Prisma schema and admin requirements.\n\nThis type serves as the request object for all list/search index operations for the ai_shop_channels table, supporting both admin dashboard work and API-based management."},"aiShopChannel.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopChannel.ISummary"},"description":"List of aiShopChannel summary objects as per pagination/query settings. Atomic view for list display."}},"required":["pagination","data"],"description":"Paginated page result for aiShopChannel list/search query, matching the IPage interface specification.\n\nEach page carries pagination meta info as well as an array of aiShopChannel summary objects, which are streamlined for efficient administration overview."},"aiShopChannel":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Uniquely identifies each shop channel. Referenced by ai_shop_channels.id in the database. UUID type."},"code":{"type":"string","description":"Channel code - Unique programmatic reference for this channel (e.g., 'main', 'event2025'). Implements channel separation and normalization rules. ai_shop_channels.code."},"name":{"type":"string","description":"Channel display name for human-readable identification in admin/UIs. Referenced in ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Whether this channel is active and visible in storefront/config. Implements enabled/disabled channel status management. ai_shop_channels.enabled."},"sort_order":{"type":"integer","description":"Ordering of channels in UI. Lower numbers sort higher. Implements admin display sequence control. ai_shop_channels.sort_order."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of channel creation for audit trail and history tracking. ai_shop_channels.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for this channel. Enables audit/history log. ai_shop_channels.updated_at."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"],"description":"Full aiShopChannel model representing a marketplace or display channel, as defined in the ai_shop_channels Prisma table and referenced throughout the platform.\n\nThis type implements all core atomic attributes and audit fields described in the schema, providing the foundation for CRUD, admin, and configuration operations. The entity forms the basis for channel management in both database and API contracts."},"aiShopChannel.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"New channel code for unique identification (must be unique among channels, e.g. 'main', 'mobile'). Normalization adheres to ai_shop_channels.code schema comments."},"name":{"type":"string","description":"Human-readable display name for UI/admin listings, as per ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Initial enabled state. True to activate, false to create in draft/hidden state. ai_shop_channels.enabled."},"sort_order":{"type":"integer","description":"Initial UI display order for this channel (1 is highest). Enforces admin control, ai_shop_channels.sort_order."}},"required":["code","name","enabled","sort_order"],"description":"Object used to create (insert) a new aiShopChannel record. All non-nullable atomic fields must be included to satisfy constraints set in the ai_shop_channels Prisma model and business requirements.\n\nActual id, created_at, updated_at fields are generated by the system/database on insert."},"aiShopChannel.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Updated code to uniquely identify this channel. Changing this affects programmatic linking and is restricted by uniqueness/business logic. ai_shop_channels.code."},"name":{"type":"string","description":"Updated channel display name for administrative and UI purposes. ai_shop_channels.name."},"enabled":{"type":"boolean","description":"Update to enabled/disabled state, matching ai_shop_channels.enabled requirements for activation/publishing."},"sort_order":{"type":"integer","description":"Value for adjusting display sequence/order of the channel. ai_shop_channels.sort_order."}},"required":["code","name","enabled","sort_order"],"description":"Object used to update (PUT/overwrite) the attributes of an existing aiShopChannel entity. Contains all non-nullable atomic properties as per ai_shop_channels Prisma table and business contract for admin management tuning."},"aiShopChannel.IDeleteResponse":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"ID of the deleted channel entity. Used for confirmation and audit logging per compliance requirements."},"deleted":{"type":"boolean","description":"Confirmation flag (true if deletion succeeded, false otherwise). Used by admin APIs and UI for result status."}},"required":["id","deleted"],"description":"Standard response for aiShopChannel deletion by ID, supporting audit trail, compliance, and API UI status sync. Used for acknowledging successful or failed delete operations on channel entities."},"aiShopChannel.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key for aiShopChannel, for summary/index list usage."},"code":{"type":"string","description":"Channel code for summary display/search."},"name":{"type":"string","description":"Display name, for list view."},"enabled":{"type":"boolean","description":"Quick flag for list view status."},"sort_order":{"type":"integer","description":"Ordering index. Lower is higher in UI lists."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (for sorting or display)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (for admin UX)."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"],"description":"Summary/list view object for aiShopChannel entity, supporting pagination/index use cases. Contains core list fields but omits related object arrays or heavy audit data."},"aiShopSection.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Page number for aiShopSection list search (used for pagination). Refer to IPage/IRequest standard slot."},"limit":{"type":"integer","format":"int32","description":"Maximum rows per page (default 100). Enables scaling of admin/configuration lists."},"searchText":{"type":"string","description":"Fuzzy search string for section code or name (admin/UX search feature)."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Filter for parent channel (search only sections within a given channel). Fulfillment of platform UI grouping, normalization. ai_shop_sections.ai_shop_channel_id FK."},"code":{"type":"string","description":"Filter by section code, supports search, admin automation."},"name":{"type":"string","description":"Filter by display name, admin dashboard/UX. ai_shop_sections.name."},"enabled":{"type":"boolean","description":"Filter for enabled/active sections. Used in channel display logic."},"sort":{"type":"array","items":{"type":"string","description":"List of fields to sort by (admin control, e.g., ['sort_order','name'])."},"description":"Sorting fields."}},"required":[],"description":"Request object for aiShopSection (section) list/index operations, supporting pagination, filtering, search, and sort as described in the Prisma schema and admin requirements."},"aiShopSection.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopSection.ISummary"},"description":"Array of summarized aiShopSection objects for admin list view."}},"required":["pagination","data"],"description":"Paginated result object for aiShopSection search/list queries. Implements standard IPage<T> contract for section entity list, as required by platform admin tools and config editors."},"aiShopSection":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key for section entity (UUID), referencing ai_shop_sections.id."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Foreign key to parent channel (ai_shop_channels.id), organizing the section within a channel, as described in platform requirements."},"code":{"type":"string","description":"Section code (unique within channel). Implements admin/config logical reference for grouping and API access. ai_shop_sections.code."},"name":{"type":"string","description":"Human-readable section display name. Used in admin UX, navigation UI, and analytics. ai_shop_sections.name."},"sort_order":{"type":"integer","description":"Ordering index of section among siblings. Lower value = higher priority in display. ai_shop_sections.sort_order."},"enabled":{"type":"boolean","description":"Flag to determine whether section is displayed and enabled. ai_shop_sections.enabled."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (audit, analytics). ai_shop_sections.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp. ai_shop_sections.updated_at."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Full aiShopSection model representing a logical section within an AI Shop channel, as per ai_shop_sections Prisma schema, supporting all admin/edit/config use cases referencing the entity.\n\nContains all atomic, normalized and admin-editable fields, with closure for audit and config tools."},"aiShopSection.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Channel UUID to create section under. Validates for platform grouping. ai_shop_sections.ai_shop_channel_id."},"code":{"type":"string","description":"New section code. Enforced unique within the given channel for admin and business logic referential consistency. ai_shop_sections.code."},"name":{"type":"string","description":"Display name for UI/config panel. ai_shop_sections.name."},"sort_order":{"type":"integer","description":"Order index number in channel's section array. Controls position, must match admin UX requirements. ai_shop_sections.sort_order."},"enabled":{"type":"boolean","description":"Enabled state on create. Controls initial visibility of this section. ai_shop_sections.enabled."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"Object for creating a new aiShopSection entry. All non-nullable, atomic, and configured fields for section setup must be present per ai_shop_sections schema.\n\nSystem fills in id, created_at, updated_at after insertion."},"aiShopSection.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"New or existing parent channel UUID for this section. ai_shop_sections.ai_shop_channel_id."},"code":{"type":"string","description":"Section code (unique in channel). Update for admin/business refactoring only. ai_shop_sections.code."},"name":{"type":"string","description":"Section display name (for UI/config). admin control. ai_shop_sections.name."},"sort_order":{"type":"integer","description":"Ordering index in channel section group. ai_shop_sections.sort_order."},"enabled":{"type":"boolean","description":"Flag to display or hide this section (enabled state). ai_shop_sections.enabled."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"PUT-update payload for aiShopSection record, providing new values for all admin-editable atomic fields as per ai_shop_sections schema and configuration needs."},"aiShopSection.IDeleteResponse":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for deleted section entity, for audit, admin confirmation."},"deleted":{"type":"boolean","description":"Flag confirming successful deletion as validated by configuration tools."}},"required":["id","deleted"],"description":"Deletion response for aiShopSection entity (admin audit compliance, UI notification)."},"aiShopSection.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key/UUID for aiShopSection in index/list view."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Parent channel ID, list display for channel grouping."},"code":{"type":"string","description":"Section code for fast reference in admin view or selection."},"name":{"type":"string","description":"Human display name for section summary."},"sort_order":{"type":"integer","description":"Display order index for admin UI."},"enabled":{"type":"boolean","description":"List view enabled/active state."},"created_at":{"type":"string","format":"date-time","description":"Section creation timestamp (for list)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (admin UX)."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Summary index list view object for aiShopSection entity, used in admin config/search tools providing tabular data for navigation and fast management."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number returned. 1-based for first page.\n\nEnables business UI/UX convention for paginated results and audit review."},"limit":{"type":"integer","description":"Limit/page size of records per page (default: 100 as per business documentation and system requirements).\n\nMay be user-configurable for UI tools."},"records":{"type":"integer","description":"Total number of records matching query/filters (prior to pagination).\n\nFulfills reporting, audit, and compliance analytics needs."},"pages":{"type":"integer","description":"Total page count, calculated as ceil(records/limit).\n\nUsed for consequence-based UX in admin/audit panel navigation."}},"required":["current","limit","records","pages"],"description":"Standard paginated result info object (IPage.IPagination).\n\nUsed in all paginated listings for admin, audit, and analytics dashboarding. Defined in core platform doc IPage<T>."},"aiShopCategories.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"페이지 번호(1부터 시작). 카테고리 목록에 대한 페이지네이션을 지원합니다. 예: 1."},"limit":{"type":"integer","description":"페이지당 항목 개수. 한 번 요청에 반환할 카테고리 개수를 지정합니다. 예: 20."},"search":{"type":"string","description":"카테고리 이름/코드를 부분 일치로 검색하는 텍스트.\n\nUI에서 키워드로 카테고리 검색할 때 사용합니다."},"channelId":{"type":"string","format":"uuid","description":"채널 별 필터링에 사용되는 ai_shop_channels의 UUID.\n\n특정 채널 소속 카테고리만 검색할 때 활용됩니다."},"parentId":{"type":"string","format":"uuid","description":"부모 카테고리(UUID)로 필터 시 사용. null 또는 미지정이면 모든 root 레벨 카테고리 조회."},"enabled":{"type":"boolean","description":"카테고리 활성 여부로 필터."},"sort":{"type":"string","description":"정렬 기준 (예: name, sort_order 등). UI에서 선택한 정렬에 따라 지정."},"order":{"oneOf":[{"const":"asc","description":"정렬 순서 (오름차순 asc / 내림차순 desc)."},{"const":"desc","description":"정렬 순서 (오름차순 asc / 내림차순 desc)."}],"description":"정렬 순서 (오름차순 asc / 내림차순 desc)."}},"required":[],"description":"카테고리 목록 조회, 검색, 페이지네이션을 위한 요청 파라미터 타입입니다. 관련 Prisma ai_shop_categories 테이블의 컬럼 특성과 비즈니스 요구(검색, 필터, UI 셀렉터)를 반영합니다.\n\n각 속성은 완전 선택적이며, 일반적으로 페이지네이션, 검색어, 필터링, 정렬 파라미터로 사용됩니다.\n\n- 예: 특정 채널 내에서 '전자'라는 이름을 가진 활성 카테고리만 10개씩 내려서 최신순으로 조회.\n- 실제 서비스에서는 관리자/셀러/고객 역할별 권한 점검이 필요합니다.\n\n프론트엔드와 어드민의 카테고리 리스트/검색/트리뷰 요청에 사용합니다."},"IPageAiShopCategories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"카테고리 목록 레코드 배열. 각 요소는 카테고리의 요약 정보이거나 전체 엔티티 모두일 수 있으며, 최소한 리스트에 필요한 필드(예: id, name, parent_id 등)는 포함합니다.","items":{"$ref":"#/components/schemas/aiShopCategories.ISummary"}}},"required":["pagination","data"],"description":"카테고리 엔티티(즉, ai_shop_categories 테이블)의 목록 데이터와 페이지네이션 정보를 묶어서 반환하기 위한 표준 컨테이너 타입입니다.\n\npagination은 현재 페이지/전체 건수 등 페이징 메타 데이터, data는 카테고리 목록 레코드들을 포함합니다. 필드 구성/설명은 IPage, IPage.IPagination 표준 타입을 참조하세요."},"aiShopCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"카테고리의 UUID/기본키. 시스템 내 유일 식별자.\n\n원본 ai_shop_categories Prisma 스키마의 id 컬럼에서 참조."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"이 카테고리가 소속된 채널(ai_shop_channels)의 UUID.\n\nPrisma의 ai_shop_channel_id 컬럼에 해당."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 카테고리의 UUID (없으면 root). 트리 구조 지원을 위한 자기참조 필드.\n\nDB의 parent_id 컬럼에 해당합니다."},{"type":"null"}],"description":"상위(부모) 카테고리의 UUID (없으면 root). 트리 구조 지원을 위한 자기참조 필드.\n\nDB의 parent_id 컬럼에 해당합니다."},"code":{"type":"string","description":"프로그램 내에서 사용되는 카테고리 구분 코드. 동일 채널+부모 하위에서 유일함.\n\nPrisma/TDB에서 code 컬럼에 명시된 대로."},"name":{"type":"string","description":"카테고리 UI표시명 혹은 관리 명칭. 비즈니스적으로 카테고리 식별에 사용합니다.\n\nDB의 name 컬럼 명세를 반영."},"sort_order":{"type":"integer","description":"동일 부모 내에서의 표출 순서. 어드민 UI 및 카테고리 트리 렌더링 시 활용.\n\nPrisma sort_order 컬럼 참조."},"enabled":{"type":"boolean","description":"카테고리 노출/비노출 여부.\n\nPrisma enabled 컬럼과 직결. false 시 고객에게 비노출."},"created_at":{"type":"string","format":"date-time","description":"행 생성 타임스탬프.\n\nDB 스키마의 created_at."},"updated_at":{"type":"string","format":"date-time","description":"최종 수정 타임스탬프.\n\nDB의 updated_at."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"카테고리 단일 엔티티 전체 정보 타입입니다. ai_shop_categories Prisma 테이블의 모든 실제 칼럼(원본 컬럼, 관계칼럼 포함)을 1:1로 정의합니다.\n\n각 속성은 ERD/스키마의 컬럼별 코멘트로부터 상세 설명을 찾아 반영했으며\n- id: 고유 식별\n- ai_shop_channel_id: 채널 소속\n- parent_id: 트리 구조 위한 자기참조\n- code/name: 비즈니스, UI\n- sort_order/enabled: UI 정렬, 비노출 처리\n- created_at/updated_at: 감사/동기화에 필요\n\n실제 서비스에서 반환하는 상세 조회 API/행 단위 단건 및 목록형 응답 모델로 통용합니다."},"aiShopCategories.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"카테고리 UUID/기본키.\n- 목록, 요약, 드롭다운 등에 사용\n- ai_shop_categories.id"},"name":{"type":"string","description":"카테고리 표시명.\n- ai_shop_categories.name"},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"부모 카테고리 UUID/null.\n- 트리/네비게이션용"},{"type":"null"}],"description":"부모 카테고리 UUID/null.\n- 트리/네비게이션용"}},"required":["id","name"],"description":"카테고리 리스트, 드롭다운, 검색시 요약정보에 사용되는 축소형 뷰타입. 전체 엔티티가 아닌 리스트/검색 UI에 필요한 필드(보통 id,name,parent_id)만 포함합니다. (Prisma ai_shop_categories.comments 요약 기반)"},"aiShopCategories.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"신규 카테고리가 소속될 채널의 UUID. 필수 입력.\n\nai_shop_categories의 ai_shop_channel_id 컬럼에 해당합니다."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"부모 카테고리의 UUID. 최상위 경우 null.\n\n트리 구조 지원용. Prisma parent_id"},{"type":"null"}],"description":"부모 카테고리의 UUID. 최상위 경우 null.\n\n트리 구조 지원용. Prisma parent_id"},"code":{"type":"string","description":"카테고리 코드 (채널/부모 내에서 유일). 신규 생성시 반드시 입력.\n\nPrisma code 컬럼 명세 반영."},"name":{"type":"string","description":"등록할 카테고리 표시명.\n\nPrisma name 컬럼에 해당."},"sort_order":{"type":"integer","description":"UI 표시/정렬시 사용될 순서."},"enabled":{"type":"boolean","description":"신규 카테고리 노출여부 (true/false)."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"신규 카테고리 생성(등록) API POST 바디로 사용하는 요청 타입입니다. ai_shop_categories Prisma 스키마의 실제 NOT NULL 컬럼군(채널,코드,이름,정렬,노출여부 등)을 필수 속성으로 명시합니다. parent_id는 null 허용(최상위시).\n\n서버에서 식별자/타임스탬프는 생성, 클라이언트에서는 입력 불필요."},"aiShopCategories.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"카테고리가 포함된 채널(UUID).\n변경 시, 존재하는 ai_shop_channels의 id여야 함."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"변경될 부모 카테고리 UUID 또는 null.\nnull이면 트리 최상위 카테고리로 이동."},{"type":"null"}],"description":"변경될 부모 카테고리 UUID 또는 null.\nnull이면 트리 최상위 카테고리로 이동."},"code":{"type":"string","description":"카테고리 코드. 전체 채널/부모 내에서 유일해야 함. 변경 가능."},"name":{"type":"string","description":"카테고리 표시명. 변경 가능."},"sort_order":{"type":"integer","description":"표시/정렬 우선순위."},"enabled":{"type":"boolean","description":"카테고리 노출여부 (수정 가능)."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"카테고리 모든 속성(atomic 필드)에 대한 전체수정(파라미터 교체식) API용 요청 타입입니다. ai_shop_categories의 필수 컬럼군만 required, parent_id는 null/미포함 허용. id/created_at/updated_at은 서버 자동관리이므로 클라(프론트) 입력 불필요.\n\nPrisma 테이블 구조와 비즈니스 업데이트 정책에 따라 설계됨."},"IDeleteResult":{"type":"object","properties":{"ok":{"type":"boolean","description":"삭제 성공시 true 반환(논리/물리). 실패(권한,존재X)시 false."},"message":{"type":"string","description":"삭제결과, 실패시 사유/성공 메시지(선택)."}},"required":["ok"],"description":"삭제(DELETE) 요청 처리 결과를 표준적으로 감싸는 타입입니다.\n\n- ok: true/false로 결과 구분\n- message: 성공/실패 사유, UX용"},"aiShopConfigurations.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"페이지네이션용 페이지 번호(1부터)."},"limit":{"type":"integer","description":"페이지당 항목 개수."},"search":{"type":"string","description":"설정 명(param_name) 또는 설명(description) 검색어.\n\n- UI 또는 어드민에서 설정 항목 검색 시 사용."},"sort":{"type":"string","description":"정렬 컬럼명(예: param_name, created_at 등)."},"order":{"oneOf":[{"const":"asc","description":"정렬순서(오름차순 asc/내림차순 desc)."},{"const":"desc","description":"정렬순서(오름차순 asc/내림차순 desc)."}],"description":"정렬순서(오름차순 asc/내림차순 desc)."}},"required":[],"description":"시스템 환경설정 목록 조회/검색/페이징 용 요청 타입입니다.\nPrisma ai_shop_configurations 구조, 관리콘솔 목록/필터/검색 UI 요구반영.\n- 페이지네이션, 검색, 정렬 요구 모두 처리 가능\n- 전체/필터 결과 반환"},"IPageAiShopConfigurations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"환경설정 레코드 배열.\n각 요소가 설정 요약 또는 전체 엔티티 레코드.\n일반적으로 param_name, param_value, description 등 관리에 반드시 필요한 필드는 포함.","items":{"$ref":"#/components/schemas/aiShopConfigurations.ISummary"}}},"required":["pagination","data"],"description":"환경설정 목록 및 페이징 반환용 표준 컨테이너 타입. data는 실제 설정 목록, pagination은 페이징 정보(IPage.* 사용)."},"aiShopConfigurations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"설정 UUID/기본키.\nPrisma ai_shop_configurations.id"},"param_name":{"type":"string","description":"설정의 논리 변수 이름. 고유."},"param_value":{"type":"string","description":"값(문자열 혹은 직렬화된 json)."},"description":{"oneOf":[{"type":"string","description":"설정 항목 설명"},{"type":"null"}],"description":"설정 항목 설명"}},"required":["id","param_name","param_value"],"description":"환경설정 단일 엔티티 모든 필드. Prisma ai_shop_configurations 테이블 실필드 전부 반영. description만 null 허용."},"aiShopConfigurations.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"설정 UUID/기본키."},"param_name":{"type":"string","description":"논리 변수명."},"param_value":{"type":"string","description":"설정값."}},"required":["id","param_name","param_value"],"description":"환경설정 요약용/리스트용 타입. 단일 행의 핵심값만 포함 (id,param_name,param_value), description 등은 상세에서 확인."},"aiShopConfigurations.ICreate":{"type":"object","properties":{"param_name":{"type":"string","description":"고유 파라미터명. 신규 등록시 필수."},"param_value":{"type":"string","description":"저장할 값(문자열 혹은 직렬화된 json)."},"description":{"oneOf":[{"type":"string","description":"등록 설명(선택, 없으면 null)"},{"type":"null"}],"description":"등록 설명(선택, 없으면 null)"}},"required":["param_name","param_value"],"description":"신규 환경설정 등록시에 사용하는 요청타입 POST 바디용. param_name,param_value는 필수, description은 옵션."},"aiShopConfigurations.IUpdate":{"type":"object","properties":{"param_value":{"type":"string","description":"변경할 값(문자열 혹은 json)."},"description":{"oneOf":[{"type":"string","description":"변경 설명. null 가능."},{"type":"null"}],"description":"변경 설명. null 가능."}},"required":["param_value"],"description":"환경설정 값 변경(수정)시의 파라미터 타입. 설명이 옵션이고 값은 필수."},"IAiShopFile.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"페이지 번호(1부터). 파일 목록 페이지네이션."},"limit":{"type":"integer","description":"한 페이지당 파일 수."},"search":{"type":"string","description":"파일명, mime등 검색 키워드. 전체, 일부일치 모두 허용."},"mime_type":{"type":"string","description":"특정 MIME타입으로 필터링. image/png 등."},"uploader_name":{"type":"string","description":"업로더 이름으로 검색."},"uploaded_from":{"type":"string","format":"date-time","description":"업로드일 기준 검색(시작일, ISO 8601)."},"uploaded_to":{"type":"string","format":"date-time","description":"업로드일 기준 검색(끝일, ISO 8601)."},"sort":{"type":"string","description":"정렬 기준(예: uploaded_at, size_bytes 등)."},"order":{"oneOf":[{"const":"asc","description":"정렬순서(asc, desc)."},{"const":"desc","description":"정렬순서(asc, desc)."}],"description":"정렬순서(asc, desc)."}},"required":[],"description":"파일 목록을 조회할 때 사용되는 요청 쿼리/바디용 객체 타입입니다. 페이지네이션, 필터, 검색어, 업로더 등 다양한 요구조건을 반영했습니다. DB상의 ai_shop_files의 컬럼 기반 및 실제 어드민 요구 사양에 따라 설계됨."},"IPageAiShopFile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the ai_shop_files result set.\n\nProvides current page number, records per page, total records, and total pages as detailed in the IPage pagination documentation. Used to display results accurately and for audit/compliance monitoring."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFile"},"description":"List of ai_shop_file records in this page.\n\nEach object represents a file's metadata (see IAiShopFile for detailed structure), corresponding to a row in the ai_shop_files table. Handles audit, previews, and UI display in file explorers."}},"required":["pagination","data"],"description":"Paginated result for searching file storage metadata in the AI Shop system.\n\nThis type mirrors the IPage<T> generic interface, pairing a page of IAiShopFile entities with pagination meta-info as required by audit, compliance, and management views. Originates from the ai_shop_files Prisma model."},"IAiShopFile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for this file record in the ai_shop_files table.\n\nPrimary key from database for file lookup, audit, update, or deletion."},"original_name":{"type":"string","description":"Original file name at upload (e.g., 'manual.pdf', 'photo.jpg').\n\nSeparate from URI to facilitate display and download; fulfills the UI preview and audit requirements."},"uri":{"type":"string","description":"Storage URI or physical path to file content (cloud, S3 key, etc).\n\nUniqueness enforced at DB level. Used for file serving and download. For compliance, secure access must be managed."},"mime_type":{"type":"string","description":"File media/content type (e.g., 'image/png', 'application/pdf').\n\nSupports filtering, previewing, and content validation as enforced in both requirements and the ai_shop_files schema."},"size_bytes":{"type":"integer","description":"File size in bytes (e.g., 102400 for a 100 KB file).\n\nFor audit, quota checks, and analytics as described in ai_shop_files table commentary."},"uploader_name":{"oneOf":[{"type":"string","description":"Optional name of uploader at registration time.\n\nSupports compliance audit (especially for admin or KYC-related files)."},{"type":"null","description":"Optional name of uploader at registration time.\n\nSupports compliance audit (especially for admin or KYC-related files)."}],"description":"Optional name of uploader at registration time.\n\nSupports compliance audit (especially for admin or KYC-related files)."},"uploaded_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp recording the file upload event.\n\nUsed for audit trail, reporting, and compliance validation."}},"required":["id","original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"Atomic file metadata for a single platform upload (ai_shop_files row).\n\nFully normalized per the ai_shop_files Prisma schema; includes upload, type, size, and access data. Used for UI display, content search, and compliance auditing throughout the AI Shop e-commerce platform."},"IAiShopFile.ICreate":{"type":"object","properties":{"original_name":{"type":"string","description":"Original upload file name (e.g., 'img1.jpg').\n\nMandatory for UI/preview and fulfills the normalization described in ai_shop_files."},"uri":{"type":"string","description":"Storage URI/path for the uploaded file in persistent external storage.\n\nMust be globally unique. Ensures files can be downloaded or previewed securely."},"mime_type":{"type":"string","description":"MIME/content type (e.g., 'image/png').\n\nEnables content validation and correct previewing as listed in requirements and the Prisma schema."},"size_bytes":{"type":"integer","description":"Size of the file in bytes.\n\nUsed for quota and compliance checks."},"uploader_name":{"oneOf":[{"type":"string","description":"(Optional) uploader's name for audit/compliance contexts.\n\nRecorded if available at upload time; otherwise can be null."},{"type":"null","description":"(Optional) uploader's name for audit/compliance contexts.\n\nRecorded if available at upload time; otherwise can be null."}],"description":"(Optional) uploader's name for audit/compliance contexts.\n\nRecorded if available at upload time; otherwise can be null."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when file was uploaded to storage.\n\nUsed for audit and precise record of evidence/upload."}},"required":["original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"Payload for registering a new file upload under ai_shop_files.\n\nImplements the file creation data documented in the entity's schema and business requirements. Stores original name, storage URI, type, audit info, and (optionally) the uploader's display name for compliance use cases."},"IAiShopFile.IUpdate":{"type":"object","properties":{"original_name":{"oneOf":[{"type":"string","description":"New/file-corrected original name (can be corrected post-upload).\n\nAllows users/admins to fix name metadata in ai_shop_files after upload for enhanced auditability."},{"type":"null","description":"New/file-corrected original name (can be corrected post-upload).\n\nAllows users/admins to fix name metadata in ai_shop_files after upload for enhanced auditability."}],"description":"New/file-corrected original name (can be corrected post-upload).\n\nAllows users/admins to fix name metadata in ai_shop_files after upload for enhanced auditability."},"uploader_name":{"oneOf":[{"type":"string","description":"New/fixed uploader name, or set to null (removal) if correcting audit records.\n\nUsed for KYC/evidence and business compliance records."},{"type":"null","description":"New/fixed uploader name, or set to null (removal) if correcting audit records.\n\nUsed for KYC/evidence and business compliance records."}],"description":"New/fixed uploader name, or set to null (removal) if correcting audit records.\n\nUsed for KYC/evidence and business compliance records."},"mime_type":{"oneOf":[{"type":"string","description":"File's correct MIME/media type if upload error occurred.\n\nEnables accurate content type retrieval after metadata correction."},{"type":"null","description":"File's correct MIME/media type if upload error occurred.\n\nEnables accurate content type retrieval after metadata correction."}],"description":"File's correct MIME/media type if upload error occurred.\n\nEnables accurate content type retrieval after metadata correction."}},"required":[],"description":"Payload for metadata updates to ai_shop_files (not physical file replacement).\n\nAllows admins or authorized uploaders to correct name, type, or attribution for compliance, audit, and UI correctness. Does not affect actual URI, size, or upload time as per audit log integrity."},"IAiShopFile.IDeleteResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Result flag indicating if the file was successfully deleted (true for success, false for failure).\n\nSupports client UI logic and batch admin compliance workflows."},"message":{"type":"string","description":"Status or error message for the deletion operation.\n\nReturns human-readable confirmation, audit record, or error reason."}},"required":["success","message"],"description":"Delete operation result for an ai_shop_files entity.\n\nConfirms successful removal (or error) as required by system compliance and file management logic. Also supports audit/yield log requirements."},"IAiShopAuditLog.IRequest":{"type":"object","properties":{"page":{"type":"integer","minimum":1,"description":"Page number for pagination start (1-based).\n\nApplies to paginated log listing; defaults to 1 if not specified."},"limit":{"type":"integer","minimum":1,"description":"Number of log records per page.\n\nAids client-side and UI audit review for compliance workflows."},"searchText":{"oneOf":[{"type":"string","description":"Optional full-text case-insensitive search on event ID, event type, or details, as described in logs requirements.\n\nAllows UI admin and audit tools to filter logs by key phrase or event."},{"type":"null","description":"Optional full-text case-insensitive search on event ID, event type, or details, as described in logs requirements.\n\nAllows UI admin and audit tools to filter logs by key phrase or event."}],"description":"Optional full-text case-insensitive search on event ID, event type, or details, as described in logs requirements.\n\nAllows UI admin and audit tools to filter logs by key phrase or event."},"filter":{"oneOf":[{"type":"object","description":"Object of optional advanced filters for event_type, actor, target, or date (ISO 8601 ranges).\n\nAligns with audit/compliance requirements for detailed evidence review.","properties":{},"required":[]},{"type":"null","description":"Object of optional advanced filters for event_type, actor, target, or date (ISO 8601 ranges).\n\nAligns with audit/compliance requirements for detailed evidence review."}],"description":"Object of optional advanced filters for event_type, actor, target, or date (ISO 8601 ranges).\n\nAligns with audit/compliance requirements for detailed evidence review."},"sort":{"oneOf":[{"type":"string","description":"Optional sort order key for logs (e.g., '-created_at' for descending timestamp).\n\nSupports sort UX in dashboards and compliance review tools."},{"type":"null","description":"Optional sort order key for logs (e.g., '-created_at' for descending timestamp).\n\nSupports sort UX in dashboards and compliance review tools."}],"description":"Optional sort order key for logs (e.g., '-created_at' for descending timestamp).\n\nSupports sort UX in dashboards and compliance review tools."}},"required":["page","limit"],"description":"Request body for searching and paginating ai_shop_audit_logs entries.\n\nSupports audit/system compliance, enabling full-text search and advanced filter per AI Shop requirements. Pagination ensures scalable UI."},"IPageAiShopAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard page metadata for audit log listings.\n\nProvides page, limit, total count, and page count for compliance review audits."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopAuditLog"},"description":"Array of IAiShopAuditLog objects for the current page.\n\nContains atomic log details for audit and compliance workflows."}},"required":["pagination","data"],"description":"Paginated page of audit logs for compliance and system review, following IPage<T> generic layout.\n\nEach log is compliant with ai_shop_audit_logs atomic record schema, facilitating search, export, and reporting features."},"IAiShopAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) for this log row in ai_shop_audit_logs.\n\nEnables unique lookup, compliance ordering, and export for audit/legal review."},"event_id":{"type":"string","description":"Globally unique event identifier for business, compliance, and duplication checks.\n\nEnforced unique in DB; appears in event streams (e.g., 'ORD20250722-38')."},"event_type":{"type":"string","description":"Business event type for search/classification (e.g., 'USER_LOGIN', 'ORDER_CANCELED').\n\nEnables quick filtering in audit log analysis."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of actor (user, seller, admin, or null for system events).\n\nLinks to actors table for provenance, traceability as described in ERD and Prisma documentation."},{"type":"null","format":"uuid","description":"UUID of actor (user, seller, admin, or null for system events).\n\nLinks to actors table for provenance, traceability as described in ERD and Prisma documentation."}],"description":"UUID of actor (user, seller, admin, or null for system events).\n\nLinks to actors table for provenance, traceability as described in ERD and Prisma documentation."},"actor_role":{"oneOf":[{"type":"string","description":"String role for actor (customer, seller, admin, or null for system-initiated).\n\nAligns log with business context for compliance/regulatory review."},{"type":"null","description":"String role for actor (customer, seller, admin, or null for system-initiated).\n\nAligns log with business context for compliance/regulatory review."}],"description":"String role for actor (customer, seller, admin, or null for system-initiated).\n\nAligns log with business context for compliance/regulatory review."},"target_table":{"oneOf":[{"type":"string","description":"Affected table/entity for the event. For example, 'ai_shop_orders'.\n\nEssential for incident and data breach analysis in audit trails."},{"type":"null","description":"Affected table/entity for the event. For example, 'ai_shop_orders'.\n\nEssential for incident and data breach analysis in audit trails."}],"description":"Affected table/entity for the event. For example, 'ai_shop_orders'.\n\nEssential for incident and data breach analysis in audit trails."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"Row/entity affected by the logged event (UUID format, nullable).\n\nSupports fast log tracing during dispute or compliance checks."},{"type":"null","format":"uuid","description":"Row/entity affected by the logged event (UUID format, nullable).\n\nSupports fast log tracing during dispute or compliance checks."}],"description":"Row/entity affected by the logged event (UUID format, nullable).\n\nSupports fast log tracing during dispute or compliance checks."},"details":{"oneOf":[{"type":"string","description":"JSON string capturing before/after state, reason, and metadata relevant to event.\n\nUsed in root-cause analysis, compliance trace, and legal review (as required by schema's audit log comments)."},{"type":"null","description":"JSON string capturing before/after state, reason, and metadata relevant to event.\n\nUsed in root-cause analysis, compliance trace, and legal review (as required by schema's audit log comments)."}],"description":"JSON string capturing before/after state, reason, and metadata relevant to event.\n\nUsed in root-cause analysis, compliance trace, and legal review (as required by schema's audit log comments)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of event log creation (ISO 8601).\n\nEnables temporal filtering and compliance evidence gathering."}},"required":["id","event_id","event_type","created_at"],"description":"Atomic audit log entry describing compliance, operational, or admin/system actions, as required by audit/compliance policies.\n\nSchema covers business, legal, and root-cause analysis needs of the AI Shop system. Mirrors the ai_shop_audit_logs table, supporting full traceability, search, and external reporting/export."},"IAiShopAuditLog.ICreate":{"type":"object","properties":{"event_id":{"type":"string","description":"Unique business event string primary key (see ai_shop_audit_logs commentary).\n\nRequired for deduplication, compliance, and system integrity."},"event_type":{"type":"string","description":"Enum or code identifying type, e.g., 'USER_LOGIN', 'ORDER_CANCELED'. Fulfills audit reporting need described by the Prisma schema."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"Actor's UUID if present (customer, seller, admin, etc)—see ERD; or null for system events."},{"type":"null","format":"uuid","description":"Actor's UUID if present (customer, seller, admin, etc)—see ERD; or null for system events."}],"description":"Actor's UUID if present (customer, seller, admin, etc)—see ERD; or null for system events."},"actor_role":{"oneOf":[{"type":"string","description":"String actor role for business context, matching identity subsystem; or null for system operations."},{"type":"null","description":"String actor role for business context, matching identity subsystem; or null for system operations."}],"description":"String actor role for business context, matching identity subsystem; or null for system operations."},"target_table":{"oneOf":[{"type":"string","description":"Name of affected table/model as per Prisma schema (e.g., 'ai_shop_orders')."},{"type":"null","description":"Name of affected table/model as per Prisma schema (e.g., 'ai_shop_orders')."}],"description":"Name of affected table/model as per Prisma schema (e.g., 'ai_shop_orders')."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of entity/row affected; null for no target (e.g., login, config edit)."},{"type":"null","format":"uuid","description":"UUID of entity/row affected; null for no target (e.g., login, config edit)."}],"description":"UUID of entity/row affected; null for no target (e.g., login, config edit)."},"details":{"oneOf":[{"type":"string","description":"JSON string detailing changes, reason, or old/new values; aligns with audit log requirements comments."},{"type":"null","description":"JSON string detailing changes, reason, or old/new values; aligns with audit log requirements comments."}],"description":"JSON string detailing changes, reason, or old/new values; aligns with audit log requirements comments."}},"required":["event_id","event_type"],"description":"Payload for new audit log writes, supplying full atomic business/compliance data for ai_shop_audit_logs rows.\n\nTraceable for legal, forensic, or business reporting by compliance tools."},"IAiShopAuditLog.IUpdate":{"type":"object","properties":{"event_type":{"oneOf":[{"type":"string","description":"New/Corrected event type, for business correction or audit tracing. Only updatable if business policy forbids strict immutability."},{"type":"null","description":"New/Corrected event type, for business correction or audit tracing. Only updatable if business policy forbids strict immutability."}],"description":"New/Corrected event type, for business correction or audit tracing. Only updatable if business policy forbids strict immutability."},"details":{"oneOf":[{"type":"string","description":"Correction/append to event JSON detail for exception business flows or compliance response. Only updatable with high-privilege intervention."},{"type":"null","description":"Correction/append to event JSON detail for exception business flows or compliance response. Only updatable with high-privilege intervention."}],"description":"Correction/append to event JSON detail for exception business flows or compliance response. Only updatable with high-privilege intervention."}},"description":"Payload for _exceptional_ updates to audit logs; usually forbidden, but schema supports formal API surface traceability.\n\nFor business flows/incident management requiring post-insert correction, must always trace, log, and document rationale.","required":[]},"IAiShopAuditLog.IDeleteResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Flag: true if entry successfully redacted/removed; false for error/compliance block.\n\nAllows compliance or admin UI to display outcome with high traceability."},"message":{"type":"string","description":"Status/audit message for compliance or legal confirmation (e.g., 'Log entry removed').\n\nDetails reason and context for deletion/redaction."}},"required":["success","message"],"description":"Delete/redact result payload for audit log entry (IAiShopAuditLog row).\n\nConfirms success/error for compliance auditing and regulatory trace."}},"authorization":[{"name":"customer","description":"A user who browses, registers, purchases, leaves reviews, and manages personal info. Can authenticate via API for shopping and order management."},{"name":"seller","description":"A member who is permitted to sell products, manage inventory, analyze sales metrics, handle orders, and manage product content. API authentication required for seller dashboard and shop management."},{"name":"admin","description":"Manages the backend system, oversees users and sellers, configures channels, audits logs, handles disputes, ensures compliance and business rule enforcement. API authentication mandatory for system administration."}]}},"created_at":"2025-07-22T14:27:57.788Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1454894,"input":{"total":1367319,"cached":13824},"output":{"total":87575,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}}]