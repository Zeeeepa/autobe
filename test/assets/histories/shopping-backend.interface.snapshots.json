[{"event":{"type":"interfaceStart","created_at":"2025-07-28T08:34:20.497Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":1224238,"input":{"total":1151246,"cached":3840},"output":{"total":72992,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1224238,"input":{"total":1151246,"cached":3840},"output":{"total":72992,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1224238,"input":{"total":1151246,"cached":3840},"output":{"total":72992,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1224238,"input":{"total":1151246,"cached":3840},"output":{"total":72992,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceEndpoints","endpoints":[{"path":"/aiMallBackend/channels","method":"post"},{"path":"/aiMallBackend/channels","method":"patch"},{"path":"/aiMallBackend/channels/{id}","method":"get"},{"path":"/aiMallBackend/channels/{id}","method":"put"},{"path":"/aiMallBackend/channels/{id}","method":"delete"},{"path":"/aiMallBackend/sections","method":"post"},{"path":"/aiMallBackend/sections","method":"patch"},{"path":"/aiMallBackend/sections/{id}","method":"get"},{"path":"/aiMallBackend/sections/{id}","method":"put"},{"path":"/aiMallBackend/sections/{id}","method":"delete"},{"path":"/aiMallBackend/configurations","method":"post"},{"path":"/aiMallBackend/configurations","method":"patch"},{"path":"/aiMallBackend/configurations/{id}","method":"get"},{"path":"/aiMallBackend/configurations/{id}","method":"put"},{"path":"/aiMallBackend/configurations/{id}","method":"delete"},{"path":"/aiMallBackend/apiGateways","method":"post"},{"path":"/aiMallBackend/apiGateways","method":"patch"},{"path":"/aiMallBackend/apiGateways/{id}","method":"get"},{"path":"/aiMallBackend/apiGateways/{id}","method":"put"},{"path":"/aiMallBackend/apiGateways/{id}","method":"delete"},{"path":"/aiMallBackend/tenants","method":"post"},{"path":"/aiMallBackend/tenants","method":"patch"},{"path":"/aiMallBackend/tenants/{id}","method":"get"},{"path":"/aiMallBackend/tenants/{id}","method":"put"},{"path":"/aiMallBackend/tenants/{id}","method":"delete"}],"created_at":"2025-07-28T08:34:20.497Z","step":0},"tokenUsage":{"facade":{"aggregate":{"total":1284780,"input":{"total":1211393,"cached":3840},"output":{"total":73387,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1284780,"input":{"total":1211393,"cached":3840},"output":{"total":73387,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1284780,"input":{"total":1211393,"cached":3840},"output":{"total":73387,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1284780,"input":{"total":1211393,"cached":3840},"output":{"total":73387,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new ai_mall_backend_channels record, representing a new business channel as per the architecture specification. Channel records manage onboarding of web, mobile, or partner integrations, uniquely identified by 'code', and containing 'name', tenant association, enable/disable control, and full auditability. Only reference fields that exist in the schema: 'tenant_id', 'code', 'name', 'enabled', 'created_at', 'updated_at', 'deleted_at' are present; never mention fields like created_by or updated_by. This API is for adding a new channel such as 'web', 'mobile', or a branded storefront. All newly created records are not soft-deleted ('deleted_at' is null'); timestamps are used for tracking creation and update times.","description":"This endpoint allows clients (typically admin users) to create a new business channel as specified in the ai_mall_backend_channels table, implementing the backend's channel registry feature critical for multi-channel onboarding (web, mobile, etc). The request body must include required fields from the schema: 'tenant_id', a unique 'code' (slug), 'name', and 'enabled' (boolean). Timestamps like 'created_at', 'updated_at' are managed automatically; never mention non-existent fields. Upon creation, the record will be available unless deleted, and 'deleted_at' will remain null. The association with the tenant is mandatory and ensures strict multi-tenancy enforcement. Any operation on the created channel will be auditable by 'created_at' and 'updated_at'.","summary":"Create a new ai_mall_backend_channels record (channel registry, multi-channel backend onboarding)","parameters":[],"requestBody":{"description":"Full creation info for ai_mall_backend_channels (channel registry entity)","typeName":"IAiMallBackendChannels.ICreate"},"responseBody":{"description":"Newly created ai_mall_backend_channels record","typeName":"IAiMallBackendChannels"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/channels","method":"post"},{"specification":"List/search ai_mall_backend_channels records using patch semantics, enabling advanced query for multi-channel management. Supports searching by fields: 'tenant_id', 'code', 'name', 'enabled', timestamp windows, and allows paginated results (since this is likely to be called by admins managing many channels). The response will not return soft-deleted channels ('deleted_at' is not null) by default, unless specifically included in search parameters. Only fields defined in the schema can be used for filtering/sorting. Never reference or filter by non-existent fields, and do not assume audit users are tracked by id. Paginated response references a page type with array of channels and pager info.","description":"Allows admin or platform users to list and search existing channels, as registered in the ai_mall_backend_channels table. Search/filter is performed on: 'tenant_id', 'code', 'name', 'enabled', 'created_at', 'updated_at' (per schema). The response is a paginated list for operational navigation of channels across tenants/brands. By default, soft-deleted channels (where 'deleted_at' is not null) are hidden. Only schema fields should be included for queries; never expose or search on non-existent audit fields.","summary":"Search/list paginated ai_mall_backend_channels (channels registry)","parameters":[],"requestBody":{"description":"List/filter criteria for searching channels","typeName":"IAiMallBackendChannels.IRequest"},"responseBody":{"description":"Paginated channel search result set","typeName":"IPageIAiMallBackendChannels"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/channels","method":"patch"},{"specification":"Retrieve details for a single ai_mall_backend_channels record by primary key ('id'), as per schema. All record fields ('id', 'tenant_id', 'code', 'name', 'enabled', 'created_at', 'updated_at', 'deleted_at') are returned. Never include or describe fields not found in the schema. This endpoint is typically used in admin or platform operations to view all meta-information about a specific business channel.","description":"Gets the full record for a specific channel as defined in ai_mall_backend_channels, supporting business processes requiring detail read (platform config, audit, troubleshooting). Path parameter 'id' is the UUID of the channel. The response includes all relevant fields from the schema; only existing fields are documented or accessible. Non-existent schema fields must not be referenced in the description or behavior.","summary":"Get detailed ai_mall_backend_channels info by id (channel)","parameters":[{"name":"id","description":"Channel ID (uuid per primary key in ai_mall_backend_channels)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested ai_mall_backend_channels record (full detail)","typeName":"IAiMallBackendChannels"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/channels/{id}","method":"get"},{"specification":"Update an existing ai_mall_backend_channels record (multi-channel entity) with new field values. All updatable fields must exist in the schema ('tenant_id', 'code', 'name', 'enabled'), and updates must never reference or attempt to modify fields not present (such as created_by or owner). 'id' path parameter identifies the record. 'updated_at' is to be auto-updated by backend logic. Soft-deletion is by setting 'deleted_at' if needed, but normal updates should avoid modifying it without explicit delete intent.","description":"Allows admin users to update an existing channel record, changing properties such as 'code', 'name', 'enabled', and tenant association. The only updatable fields are those explicitly defined in the schema. Never reference or allow mutation of non-existent fields. The 'id' path parameter specifies the channel to update. After update, 'updated_at' will automatically reflect the time of change. Updates must not result in schema violation or introduce audit fields that do not exist.","summary":"Update existing ai_mall_backend_channels (channel) by id","parameters":[{"name":"id","description":"Target channel ID (uuid as per schema primary key)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for ai_mall_backend_channels (fields must exist in schema)","typeName":"IAiMallBackendChannels.IUpdate"},"responseBody":{"description":"The updated ai_mall_backend_channels record","typeName":"IAiMallBackendChannels"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/channels/{id}","method":"put"},{"specification":"Soft-delete the specified ai_mall_backend_channels record using its 'id'. As 'deleted_at' is provided in the schema, deletion will set this field to the current timestamp to implement soft delete logic. No fields are removed permanently. Endpoint should not describe permanent removal or fields not present in the schema. After API execution, the channel remains in the database with 'deleted_at' field set; all original fields retained for audit.","description":"Performs a soft-delete of the channel identified by 'id', as ai_mall_backend_channels includes 'deleted_at'. This operation sets the 'deleted_at' timestamp and retains all channel fields for audit and potential recovery. There is no permanent removal; only the 'deleted_at' field is changed to a timestamp. No non-existent schema fields are referenced in any behavior or description. Operation is strictly auditable and reversible at the application level per retention policy.","summary":"Soft-delete ai_mall_backend_channels (set deleted_at, retain record)","parameters":[{"name":"id","description":"Channel id (uuid) to soft-delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/channels/{id}","method":"delete"},{"specification":"Create a new section record as described in ai_mall_backend_sections. This includes reference to a specific channel using 'channel_id', unique code, name, and enabled/activation state. All mentioned fields must exist in the schema. Audit fields like 'created_at', 'updated_at' are auto-managed by backend logic. No references to non-existent fields allowed. The section supports modular dynamic UI/composition requirements.","description":"Allows a client (typically admin) to create a new business section under a specified channel, using 'channel_id', 'code', 'name', and 'enabled' state as required by the schema. The section implements modular composition of business logic per requirements—each configures a unique part of a channel (e.g. home banner, category carousel). The API must not reference schema-inconsistent fields or business logic. Audit tracking is enforced via automatic management of timestamps. All relationships are enforced through normalized keys as per schema.","summary":"Create a new ai_mall_backend_sections record (modular site section)","parameters":[],"requestBody":{"description":"Section creation data (fields as per schema, no extras)","typeName":"IAiMallBackendSections.ICreate"},"responseBody":{"description":"The new ai_mall_backend_sections record created","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/sections","method":"post"},{"specification":"List/search ai_mall_backend_sections records by patch, supporting advanced filtering for modular UI configuration. Accepts query parameters based only on schema fields: 'channel_id', 'code', 'name', 'enabled', timestamps, etc. Response will include only sections that have not been soft-deleted unless explicit search on 'deleted_at'. Never describe fields not present. Returns paginated result referencing a page/section type.","description":"Allows platform/admin users to search and list all modular business sections configured under channels, using filters on defined schema fields. Query may specify channel context, name/code, enabled state, timestamps (all per schema), supporting modular business structuring. Soft-deleted sections are omitted by default (deleted_at=null). Returns paged result for large sets. No unsupported fields should be present in request or result.","summary":"Paginated search/list of ai_mall_backend_sections (modular section registry)","parameters":[],"requestBody":{"description":"Filter/search data for ai_mall_backend_sections records","typeName":"IAiMallBackendSections.IRequest"},"responseBody":{"description":"Paged result set of ai_mall_backend_sections","typeName":"IPageIAiMallBackendSections"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/sections","method":"patch"},{"specification":"Retrieve a specific ai_mall_backend_sections record by id, returning all defined schema fields. Used in business logic for modular site/app configuration. Never reference non-existent fields. Provides complete section context for site editors or platform-support tools.","description":"Gives full details on a single section as specified by its id—returning all fields ('id', 'channel_id', 'code', 'name', 'enabled', 'created_at', 'updated_at', 'deleted_at'). This endpoint is used for editing/viewing section entity assignments and auditing them across business domains. Fields not found in the schema must not be referenced or returned.","summary":"Get full ai_mall_backend_sections record by id (modular section detail)","parameters":[{"name":"id","description":"Section pk (uuid per schema)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full ai_mall_backend_sections entity","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/sections/{id}","method":"get"},{"specification":"Update an existing section record in ai_mall_backend_sections, strictly using fields from the schema. Accepts updates to: 'channel_id', 'code', 'name', and 'enabled'. 'id' path parameter targets the section. 'updated_at' auto-updated by backend. Never reference or update fields missing from the schema. Use case: site composition redesign, enabling/disabling business units, audit tracking.","description":"This endpoint supports updating a section's details and configuration settings, changing only schema-defined attributes (e.g., channel association, code, name, enabled status). Admins use it to change business logic structure, on/off toggles, or reconfigure domain mappings. 'id' specifies the editable entity. Mutations to fields not defined in ai_mall_backend_sections are rejected and not described here. Timestamps updated to preserve audit log integrity.","summary":"Update an ai_mall_backend_sections entity (modular site section)","parameters":[{"name":"id","description":"Section pk (uuid as per schema)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for ai_mall_backend_sections record (only schema fields)","typeName":"IAiMallBackendSections.IUpdate"},"responseBody":{"description":"Updated ai_mall_backend_sections entity","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/sections/{id}","method":"put"}],"completed":9,"total":25,"step":0,"created_at":"2025-07-28T08:35:04.955Z"},"tokenUsage":{"facade":{"aggregate":{"total":1351474,"input":{"total":1275357,"cached":3840},"output":{"total":76117,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1351474,"input":{"total":1275357,"cached":3840},"output":{"total":76117,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1351474,"input":{"total":1275357,"cached":3840},"output":{"total":76117,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1351474,"input":{"total":1275357,"cached":3840},"output":{"total":76117,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Update the details of an API gateway in the ai_mall_backend_api_gateways table. The endpoint uses the gateway's ID (UUID) to locate the specific record. Permitted fields for update: channel_id, route_base, domain, enabled. Only these fields (and not deleted_at or any that do not exist in the schema) are referenced. The operation will not update created_at or updated_at directly, as these are managed by the system. The gateway can be enabled/disabled, and its routing or domain definition changed. This is used for operations staff/system admins (admin role), not for general users.","description":"This API endpoint allows system administrators to update an existing API gateway's base route, domain mapping, and enabled flag. The ai_mall_backend_api_gateways schema includes fields for identifying the gateway (id), defining which channel it belongs to (channel_id), the base route (route_base), domain, enabled flag, and timestamps. Only the specified fields can be updated—created_at, updated_at, and deleted_at are system-managed and not directly settable here. The API will return the updated api_gateway record. If the specified id does not exist or is soft-deleted (deleted_at is not null), a not found error is returned. All modifications are audit-logged to meet compliance requirements.","summary":"Update an API gateway in ai_mall_backend_api_gateways by id (admin only).","parameters":[{"name":"id","description":"UUID of the api gateway record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable fields for the API gateway: channel_id, route_base, domain, enabled.","typeName":"IAiMallBackendApiGateways.IUpdate"},"responseBody":{"description":"The updated API gateway record after applying changes.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/apiGateways/{id}","method":"put"},{"specification":"Soft-delete an API gateway entry in the ai_mall_backend_api_gateways table using the provided ID (UUID). The entity has a deleted_at field, which is set to the current timestamp when this operation is called. This operation does not fully remove the record from the database, preserving it for retention and audit. Access is restricted to admin users only.","description":"This endpoint enables administrators to perform a soft delete of an API gateway record, setting its deleted_at field to the current timestamp. The id parameter identifies the specific API gateway to be deleted. According to the ai_mall_backend_api_gateways schema, deleted_at is nullable—when set, the record is considered deleted and excluded from active gateway queries. The operation maintains compliance with audit and retention policies. Attempts to delete a non-existent or already deleted API gateway will result in an appropriate error.","summary":"Soft delete (deactivate) an API gateway by id in ai_mall_backend_api_gateways (admin only).","parameters":[{"name":"id","description":"UUID of the API gateway to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The soft-deleted API gateway record with its deleted_at field set.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/apiGateways/{id}","method":"delete"},{"specification":"Create a new tenant (brand, white label, or business subdivision) in the ai_mall_backend_tenants table. This operation is intended for system administration with the ability to define code, name, and archived status at creation. Timestamps are system-managed and not user-provided. No soft delete; archiving is via the archived flag, as per schema.","description":"Creates a new tenant entity in the ai_mall_backend_tenants table. Required fields for creation include code (slug), name (display name), and archived (boolean representing if the tenant is archived at creation or active). The entity also includes timestamps (created_at, updated_at), but these fields are managed by the system and are not part of the request body. There is no soft delete—archival is tracked by the archived flag rather than removal or deleted_at. If the code or name provided already exists (violates unique constraints), the API will reject the request. This endpoint is limited to admin role only, and all creation events are logged for audit.","summary":"Create a new tenant (admin only) in ai_mall_backend_tenants.","parameters":[],"requestBody":{"description":"Requires code, name, and archived status for the new tenant.","typeName":"IAiMallBackendTenants.ICreate"},"responseBody":{"description":"The created tenant entity including system-managed timestamp fields.","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/tenants","method":"post"},{"specification":"Retrieve a paginated, filterable list of tenant records from ai_mall_backend_tenants. Filtering and searching is by code, name, and archived status. This operation is intended for admin use only, as the tenant table contains sensitive business segmentation data. Sorting by created_at and name is supported; supports pagination (limit/offset), sort order, and search by code/name text filters. The response will include tenants even if archived; there is no deleted_at field. Results do not include related resource expansion, only flat tenant info.","description":"Provides a paginated and filterable list of tenant entities. Supported filters: code (slug/text match), name (text match), archived (exact value). Sorting options include created_at descending/ascending and name ascending. Pagination parameters include limit and offset or page/size. All results are limited to administrators, due to system segmentation sensitivity. Returns flat list of tenant records—does not join or expand related channels or resources. If no tenants match, returns empty data set. All queries are logged for audit.","summary":"List and filter tenants with pagination (admin only).","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for tenant listing.","typeName":"IPageIAiMallBackendTenants.IRequest"},"responseBody":{"description":"Paginated list of tenants with search metadata.","typeName":"IPageIAiMallBackendTenants"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/tenants","method":"patch"},{"specification":"Retrieve a single tenant entity by its id (UUID) from ai_mall_backend_tenants. Exposes all normal scalar fields. Intended only for admin users due to sensitive system configuration information. No deleted_at field—archived status is handled via archived flag.","description":"Fetches details for a specific tenant, including code, name, archived status, created_at, and updated_at. Uses the id path parameter (UUID primary key). Timestamps are included in the response. If no tenant with that id exists, an error is returned. Admin-only operation per business and architectural policy. Operation is logged for audit.","summary":"Get detailed info for a single tenant by id (admin only) from ai_mall_backend_tenants.","parameters":[{"name":"id","description":"UUID of the tenant to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete tenant entity record.","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/tenants/{id}","method":"get"},{"specification":"Update a tenant entity in the ai_mall_backend_tenants table. Only code, name, and archived can be changed by admin. System-managed timestamps (created_at, updated_at) are not user-settable. There is no deleted_at or soft-delete; archiving is via the archived boolean field. Admin only, all updates logged for compliance.","description":"This endpoint updates basic attributes of an existing tenant: code, name, and archived status. Timestamps are handled automatically. It does not support full deletion; to archive a tenant for compliance or offboarding, set archived to true. Update is by id (UUID). Attempting to update a non-existent tenant or using a code/name that would violate unique constraints will result in an error. Access is limited to admin role.","summary":"Update a tenant by id (admin only) in ai_mall_backend_tenants.","parameters":[{"name":"id","description":"UUID of the tenant to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields updatable for a tenant: code, name, archived.","typeName":"IAiMallBackendTenants.IUpdate"},"responseBody":{"description":"The tenant entity after update.","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/tenants/{id}","method":"put"},{"specification":"Archive (mark as archived) a tenant by id (UUID) in ai_mall_backend_tenants. This is not a soft-delete; the tenant remains in the database but is flagged as archived by the archived boolean field. There is no deleted_at or physical deletion for tenants—this meets compliance and audit retention requirements. Only admin users can perform this operation.","description":"Sets the archived field of the specified tenant (by id) to true. This endpoint does not remove the entity or flag it as deleted_at, per schema. The entity persists but is excluded from active system use. If the tenant is already archived, returns the entity unchanged. Operation is admin-only and logs the archival event for audit purposes. Attempting to archive a non-existent tenant results in an error.","summary":"Archive (set archived=true) a tenant by id (admin only) in ai_mall_backend_tenants.","parameters":[{"name":"id","description":"UUID of the tenant to archive.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Tenant entity after being archived (archived=true).","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/tenants/{id}","method":"delete"}],"completed":16,"total":25,"step":0,"created_at":"2025-07-28T08:35:08.606Z"},"tokenUsage":{"facade":{"aggregate":{"total":1417518,"input":{"total":1339284,"cached":3840},"output":{"total":78234,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1417518,"input":{"total":1339284,"cached":3840},"output":{"total":78234,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1417518,"input":{"total":1339284,"cached":3840},"output":{"total":78234,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1417518,"input":{"total":1339284,"cached":3840},"output":{"total":78234,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Implements soft-deletion for the ai_mall_backend_sections table. When a section is deleted, the system sets the section's deleted_at field to the current date-time, marking it as archived but retaining the record for audit/auditability. This operation should not actually remove the record from the database, but update the deleted_at field. Only the id path parameter—that matches a real section record—should be allowed. Inaccessible if already deleted or never existed. All other fields are left as-is.","description":"This operation performs a soft delete of a section in the ai_mall_backend_sections table. According to the schema, each section has a deleted_at field that is used for soft-deletion. When this endpoint is called, the deleted_at field for the section will be set to the current timestamp, instead of removing the record from the database permanently. This approach maintains the full audit history of the section, allowing for compliance with business rules that require archival, retention and possible recovery or audit trails. The operation will only set the deleted_at field if it is currently null, and will not perform the operation on already deleted (archived) sections.","summary":"Soft deletes a section in ai_mall_backend_sections by setting deleted_at.","parameters":[{"name":"id","description":"Primary key of the section to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Returns the updated section record after soft-deletion (with deleted_at set).","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/sections/{id}","method":"delete"},{"specification":"Creates a new atomic configuration row in ai_mall_backend_configurations based on the provided request body. Ensures strict normalization by only creating a configuration item with its associated channel and/or section (if provided), unique name, value, and optional description. Adheres to audit/compliance requirements: sets created_at and updated_at to the current timestamp on insert; does not set or manipulate deleted_at, which remains null for new records. Only fields present in the schema are accepted.","description":"Creates a configuration entry in the ai_mall_backend_configurations table. The configuration entity supports atomic settings at the channel and section scope (or global if both are null). Each configuration consists of a unique name within the channel/section (IDs), a normalized value (string), and an optional description for clarity and audit. The request body must include all required fields: channel_id (can be null for global scope), section_id (can be null for channel scope), name, and value. Description is optional. The system will set created_at and updated_at on insert. After creation, the record will have deleted_at as null. Only fields present in the schema are considered; extra fields are not admitted.","summary":"Creates an atomic configuration in ai_mall_backend_configurations.","parameters":[],"requestBody":{"description":"Configuration creation information: must provide name, value, and optional channel_id/section_id/description.","typeName":"IAiMallBackendConfigurations.ICreate"},"responseBody":{"description":"The newly created configuration record.","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/configurations","method":"post"},{"specification":"List or search ai_mall_backend_configurations via a PATCH method, following best practices for advanced searching with complex criteria. Supports filtering on name, channel_id, section_id, is_active (where applicable by logic; must filter by existing schema fields only), and full-text search on description. Allows for pagination and multi-field sort, strictly leveraging indexed or real/virtual fields in the schema. Any data returned respects audit/compliance boundaries by not exposing deleted_at != null records unless explicitly requested. Never invents schema fields.","description":"Performs an advanced search over the ai_mall_backend_configurations records. The endpoint allows query parameters and/or request body for filters such as name, channel_id, section_id, and partial (LIKE) search over the description. Pagination and sorting are supported (by created_at, name, etc.), strictly referencing fields from the schema. Rows where deleted_at is not null are excluded by default unless a flag is set (if field exists in schema). This endpoint enables admin or system users to manage, audit, and review configuration items efficiently, in line with extensible configuration management requirements.","summary":"Lists or searches ai_mall_backend_configurations with complex filters/pagination.","parameters":[],"requestBody":{"description":"Search parameters for configuration listing/filtering, referencing only schema fields.","typeName":"IAiMallBackendConfigurations.IRequest"},"responseBody":{"description":"Paginated result set of configuration records matching the search criteria.","typeName":"IPageIAiMallBackendConfigurations"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/configurations","method":"patch"},{"specification":"Retrieves a single ai_mall_backend_configurations record by its id (primary key), returning all schema fields for the specified row. This operation is used for configuration detail view, referencing each atomic field precisely as in schema. Throws or signals not found error if the id does not match any configuration, or if the record is soft-deleted (i.e., deleted_at is not null) to comply with retention and audit logic. Only legitimate, existing schema fields are ever returned or referenced.","description":"Retrieves the details of a configuration row in ai_mall_backend_configurations by primary key (id). All schema fields—id, channel_id, section_id, name, value, description, created_at, updated_at and deleted_at—are returned as present in the actual record. If a configuration with the specified id does not exist, or is soft-deleted (deleted_at is not null), a not found error is raised in accordance with audit and compliance rules. No business logic is performed; this is a read-only endpoint strictly returning schema-defined fields.","summary":"Fetches configuration detail for given id from ai_mall_backend_configurations.","parameters":[{"name":"id","description":"The id (uuid) of the configuration to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The complete configuration record, or not-found error if missing/soft-deleted.","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/configurations/{id}","method":"get"},{"specification":"Updates an existing atomic configuration row in ai_mall_backend_configurations. The operation is only permitted if the record exists and is not soft-deleted. The API updates schema fields based on request—channel_id, section_id, name, value, description—and sets updated_at to now. The operation does not modify deleted_at. Returns the updated record. Only fields in the actual schema are admitted; non-schema fields are ignored. All changes are subject to audit through the updated_at field.","description":"Updates a configuration item identified by its id in ai_mall_backend_configurations. The request body includes any mutable fields: channel_id, section_id, name, value, description. The endpoint sets updated_at to the current time. It requires that the record is not soft-deleted (deleted_at is null) and exists; otherwise, returns an error. No non-schema fields are considered. This operation supports configuration management objectives for auditability and normalization.","summary":"Updates a configuration record in ai_mall_backend_configurations by id (soft-deleted records ignored).","parameters":[{"name":"id","description":"The id of the configuration row to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update. Only actual schema fields may be updated.","typeName":"IAiMallBackendConfigurations.IUpdate"},"responseBody":{"description":"The updated configuration record.","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/configurations/{id}","method":"put"},{"specification":"Soft-deletes a configuration in ai_mall_backend_configurations by setting deleted_at to now. Record is not physically deleted, but marked for compliance/audit policies. The operation is only allowed if deleted_at is currently null.","description":"This operation performs a soft deletion of a configuration row from ai_mall_backend_configurations. It sets deleted_at to the current timestamp for the specified id, flagging the row as deleted without physical removal. Only acts on schema fields. If the row is already soft-deleted or missing, error is returned. This follows audit/compliance requirements and ensures full traceability of configuration changes and deletions.","summary":"Soft deletes a configuration in ai_mall_backend_configurations by id via deleted_at field.","parameters":[{"name":"id","description":"Configuration id to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The configuration record after soft delete (deleted_at set).","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/configurations/{id}","method":"delete"},{"specification":"Creates a new API gateway record in ai_mall_backend_api_gateways. Accepts request body containing all required schema fields: channel_id, route_base, domain, enabled. Creates the new gateway, setting created_at and updated_at to current timestamp, and ensuring deleted_at is null for newly created records. Does not set or require deleted_at on insert. Only accepts fields from the schema.","description":"Creates a new API gateway in ai_mall_backend_api_gateways. The request must include all required schema fields: channel_id, route_base, domain, and enabled. The operation enforces normalization by only writing atomic, schema-compliant data. Upon successful creation, the result includes all schema fields, with created_at and updated_at auto-set by the server to the current time, and deleted_at as null. No other fields are created or admitted; extra fields in the request are ignored.","summary":"Creates a new API gateway record in ai_mall_backend_api_gateways.","parameters":[],"requestBody":{"description":"All required fields to create an API gateway: channel_id, route_base, domain, enabled.","typeName":"IAiMallBackendApiGateways.ICreate"},"responseBody":{"description":"The complete created API gateway record.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/apiGateways","method":"post"},{"specification":"Advanced search or listing for ai_mall_backend_api_gateways. PATCH method supports filters on channel_id, route_base, domain, enabled (all schema fields), plus pagination and sort parameters. Excludes rows where deleted_at is not null unless explicitly requested. Returns paginated records, never referencing non-schema fields. Used for management, audit, and configuration navigation by admin/system actors.","description":"Allows admin/system users to query or browse api_mall_backend_api_gateways with flexible filters and pagination. Filters accepted: by channel_id, route_base, domain, enabled. Results are ordered, paginated, and only reference indexed schema fields, never derived or absent items. Records flagged as deleted (deleted_at non-null) are omitted unless specified. The operation supports management, audit, and operational dashboarding, using only fields actually defined in the gateway schema.","summary":"Lists or searches ai_mall_backend_api_gateways by schema field filter/pagination.","parameters":[],"requestBody":{"description":"Search and filter parameters for gateway records. Only schema fields allowed.","typeName":"IAiMallBackendApiGateways.IRequest"},"responseBody":{"description":"Paginated, filtered list of API gateway records.","typeName":"IPageIAiMallBackendApiGateways"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/apiGateways","method":"patch"},{"specification":"Retrieves an ai_mall_backend_api_gateways record by its id. Returns full schema record. If not found or soft-deleted (deleted_at non-null), error is returned.","description":"Fetches a single API gateway entry from ai_mall_backend_api_gateways by its primary key (id). Returns all available schema fields. Only returns the record if deleted_at is null. Otherwise, signals not found or gone. Used by admin/system users for gateway detail lookup, edit, or audit trailing.","summary":"Gets detailed API gateway record by id from ai_mall_backend_api_gateways.","parameters":[{"name":"id","description":"Gateway id (uuid) to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full gateway record on success, not-found error otherwise.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/apiGateways/{id}","method":"get"}],"completed":25,"total":25,"step":0,"created_at":"2025-07-28T08:35:10.755Z"},"tokenUsage":{"facade":{"aggregate":{"total":1484158,"input":{"total":1403251,"cached":3840},"output":{"total":80907,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1484158,"input":{"total":1403251,"cached":3840},"output":{"total":80907,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1484158,"input":{"total":1403251,"cached":3840},"output":{"total":80907,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1484158,"input":{"total":1403251,"cached":3840},"output":{"total":80907,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageIAiMallBackendApiGateways":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendApiGateways"}}},"required":["pagination","data"],"description":"Paginated result container for listing ai_mall_backend_api_gateways records, as required by channel-extensible API management. This type is used for responses that need paging over multiple API gateway records, and includes full paging metadata plus an array of API gateway objects. All fields and structure are rooted in system-wide audit and gateway registry requirements (see architecture docs and schema)."},"IAiMallBackendApiGateways.IUpdate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"Foreign key to the associated business channel. References ai_mall_backend_channels.id in the database schema. Determines which channel this API gateway is registered under."},"route_base":{"type":"string","description":"Base routing path for this gateway (e.g., /api/v1, /mobile/). Per schema, this field is required to establish explicit API endpoints and is used for API Gateway routing and registration."},"domain":{"type":"string","description":"Domain or fully-qualified domain name mapped to this gateway, e.g., api.mall.com. All API requests routed through this gateway use this domain. This ensures correct route->domain mapping and is unique per gateway."},"enabled":{"type":"boolean","description":"Enable or suspend the gateway. True if the gateway should actively receive requests; false otherwise. Used for rapid suspension/reactivation of endpoints (see compliance requirements for audit and emergency controls)."}},"required":["channel_id","route_base","domain","enabled"],"description":"Request type for updating ai_mall_backend_api_gateways records. This structure matches the updatable fields for API gateways as defined by the schema and business logic—includes channel association, route path, domain, and enabled flag. All fields must match schema references and constraints. No other fields are accepted."},"IAiMallBackendTenants.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"The unique code/slug for identifying the tenant/brand/sub-platform at onboarding. Used for routing, tenant isolation, label reference, and API scoping. Must not duplicate other tenant codes in the system."},"name":{"type":"string","description":"Human-readable brand or business name for the tenant, used for platform references, reporting, and admin displays. Must be unique within the system (see schema constraints)."},"archived":{"type":"boolean","description":"If true, marks this tenant as archived upon creation, meaning the tenant is not live or accessible to customers (for compliance or initial setup scenarios). False means active tenant."}},"required":["code","name","archived"],"description":"Request body for creating a new business tenant in ai_mall_backend_tenants. Covers all required onboarding fields: unique code (slug), name (display label), and whether tenant is initially active or archived. All properties correspond to atomic fields on the Prisma schema for multi-tenancy management."},"IAiMallBackendTenants":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key; unique identifier for the tenant entity, as assigned in ai_mall_backend_tenants. Used for all entity references, API lookups, and auditing."},"code":{"type":"string","description":"Business-wide unique slug/code representing the logical tenant (brand, sub-platform, or business unit). Enforced as unique per schema, and critical for routing, UI partitioning, and reporting."},"name":{"type":"string","description":"Human-readable name for this tenant. Must be globally unique within the system."},"archived":{"type":"boolean","description":"Boolean indicating whether the tenant is currently archived or active. Archiving a tenant disables it on the platform but does not remove records. Fulfills compliance and regulatory rules for brand/partner offboarding."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the tenant record was created (immutable). Used in onboarding, audit, billing, and compliance processes."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last modification to the tenant record. Enables precise audit trail and change-replay. Always updated on modification."}},"required":["id","code","name","archived","created_at","updated_at"],"description":"The core tenant entity type (ai_mall_backend_tenants). Includes all fields from the Prisma schema: id, code, name, archived, created_at, updated_at. Covers the requirements for global multi-tenancy, platform segmentation, and compliance-driven auditability. This object is returned on detail read, index, or update."},"IPageIAiMallBackendTenants.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Optional: filter for tenants matching this code (business slug, unique per system). Enables searching for brands/sub-platforms by code."},"name":{"type":"string","description":"Optional: filter for tenants with this human-readable name. Text search, case-insensitive, matches schema constraints for uniqueness in real data."},"archived":{"type":"boolean","description":"Optional: include only tenants with this archived status. True for archived brands/partners, false for only active tenants."},"page":{"type":"integer","format":"uint32","description":"Page number to start the paged listing from; for pagination control."},"limit":{"type":"integer","format":"uint32","description":"Maximum number of tenant records to return per page. Defaults typically enforced by API if omitted."},"sort_by":{"oneOf":[{"const":"created_at","description":"Sort key for ordering tenant list results. Allows 'created_at' (default) or 'name'. Only schema/endpoint-supported fields."},{"const":"name","description":"Sort key for ordering tenant list results. Allows 'created_at' (default) or 'name'. Only schema/endpoint-supported fields."}],"description":"Sort key for ordering tenant list results. Allows 'created_at' (default) or 'name'. Only schema/endpoint-supported fields."},"sort_order":{"oneOf":[{"const":"asc","description":"Order of the sort key. 'asc' (ascending, e.g., earliest first, or A-Z); 'desc' (descending, e.g., latest first, or Z-A)."},{"const":"desc","description":"Order of the sort key. 'asc' (ascending, e.g., earliest first, or A-Z); 'desc' (descending, e.g., latest first, or Z-A)."}],"description":"Order of the sort key. 'asc' (ascending, e.g., earliest first, or A-Z); 'desc' (descending, e.g., latest first, or Z-A)."}},"description":"Request body/schema for paginated, filterable listing of ai_mall_backend_tenants for admin/system users. Allows filtering by code, name, active/archived status, as well as paging and sort key/order. Extends the standard paginated search/request pattern for operational backend UIs.","required":[]},"IPageIAiMallBackendTenants":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendTenants"}}},"required":["pagination","data"],"description":"Paginated response type for ai_mall_backend_tenants table. Contains page/lister metadata and the tenant records for each page. Used when retrieving lists of business tenants to the admin UI or external platform dashboard in a paginated fashion."},"IAiMallBackendTenants.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Updatable slug/code for the tenant. Must remain unique across all occupants in the system and compliant with schema uniqueness rules."},"name":{"type":"string","description":"Updatable human-readable tenant name, for dashboard and business references. Uniqueness constraint enforced by schema."},"archived":{"type":"boolean","description":"Archived flag, set to true to archive tenant (offboarding, compliance) or false to reactivate. No deletion is possible, only archival supported."}},"required":["code","name","archived"],"description":"Update type for ai_mall_backend_tenants, matching only those fields which are updatable after initial creation: code, name, archived. Intended for admin APIs that support brand/tenant update and archival, ensuring all compliance and auditability requirements are met."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"Current page number (index, 1-based or 0-based depending on API design). Indicates which chunk of results is being delivered."},"limit":{"type":"integer","format":"uint32","description":"Maximum number of records returned per page; enables consistent listing sizes and navigation."},"records":{"type":"integer","format":"uint32","description":"Total number of records that exist/search-matched in the database; allows frontends to compute max pages."},"pages":{"type":"integer","format":"uint32","description":"Total number of pages available, given the limit and total matching records."}},"required":["current","limit","records","pages"],"description":"Standard pagination metadata type, reused across all paginated result containers. Used in mall backend APIs for chunked record retrieval and operational navigation."}}},"completed":7,"total":25,"step":0,"created_at":"2025-07-28T08:35:55.505Z"},"tokenUsage":{"facade":{"aggregate":{"total":1550473,"input":{"total":1467737,"cached":3840},"output":{"total":82736,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1550473,"input":{"total":1467737,"cached":3840},"output":{"total":82736,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1550473,"input":{"total":1467737,"cached":3840},"output":{"total":82736,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1550473,"input":{"total":1467737,"cached":3840},"output":{"total":82736,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiMallBackendSections.IUpdate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) of the channel to which this section belongs. Used to reassign or update the parent channel for this section.\n\nReferences the 'channel_id' property from the ai_mall_backend_sections schema. Required unless business logic enforces channel immutability."},"code":{"type":"string","description":"Code or slug uniquely identifying this section within the channel. Used for programmatic lookups, referencing the 'code' property in ai_mall_backend_sections. Not null."},"name":{"type":"string","description":"The display name of the section. Intended for admin interfaces or business users, not programmatic logic. Draws from the 'name' column of the ai_mall_backend_sections schema."},"enabled":{"type":"boolean","description":"Logical activation flag for the section. Indicates whether the section is active and visible in the business channel, matching the 'enabled' field in ai_mall_backend_sections. Required for robust business scheduling and modular UI composition."}},"description":"Update object for ai_mall_backend_sections. Allows mutation of the 'channel_id', 'code', 'name', and 'enabled' fields. This type is based directly on the ai_mall_backend_sections Prisma schema, which covers atomic updates for modular, dynamic business sections and is fully compliant with 3NF and the requirement for dynamic UI composition.\n\nAll properties reference strictly schema-defined attributes.","required":[]},"IAiMallBackendConfigurations.ICreate":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional channel UUID for the configuration. If provided, restricts the configuration to that channel context (referencing the 'channel_id' in ai_mall_backend_configurations). Null means global config."},{"type":"null"}],"description":"Optional channel UUID for the configuration. If provided, restricts the configuration to that channel context (referencing the 'channel_id' in ai_mall_backend_configurations). Null means global config."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional section UUID for which this configuration applies, referencing 'section_id' in ai_mall_backend_configurations. Null indicates channel-wide or global configuration."},{"type":"null"}],"description":"Optional section UUID for which this configuration applies, referencing 'section_id' in ai_mall_backend_configurations. Null indicates channel-wide or global configuration."},"name":{"type":"string","description":"Unique configuration item name (string). Implements the 'name' column in ai_mall_backend_configurations. Must be unique within the specified channel/section scope and is required."},"value":{"type":"string","description":"Atomic config value for this item. Reference for the 'value' field in ai_mall_backend_configurations. Stored as a string for maximum flexibility."},"description":{"oneOf":[{"type":"string","description":"Business/admin-facing description for this config row. Documents human intent for audit, never used in production logic. Directly maps to the 'description' column in ai_mall_backend_configurations."},{"type":"null"}],"description":"Business/admin-facing description for this config row. Documents human intent for audit, never used in production logic. Directly maps to the 'description' column in ai_mall_backend_configurations."}},"required":["name","value"],"description":"Object for creating a new atomic configuration row in ai_mall_backend_configurations as per 3NF. Fields correspond to the Prisma schema, supporting configuration at the channel and/or section scope. System-managed fields like created_at/updated_at are handled automatically."},"IAiMallBackendConfigurations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID uniquely identifying each configuration row, corresponding to 'id' in ai_mall_backend_configurations."},"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the business channel (optional), if this config is channel-specific. Follows 'channel_id' in the schema."},{"type":"null"}],"description":"UUID of the business channel (optional), if this config is channel-specific. Follows 'channel_id' in the schema."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the business section for scoping this config, if not channel-wide. 'section_id' field from schema."},{"type":"null"}],"description":"UUID of the business section for scoping this config, if not channel-wide. 'section_id' field from schema."},"name":{"type":"string","description":"Unique configuration item name. Visible for filtering and lookup; must match 'name' in ai_mall_backend_configurations."},"value":{"type":"string","description":"Atomic config value as plain string (see 'value' field in the schema). Could be a number, color-code, JSON, etc., as long as stored as string."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable description. Used for admin clarity, never for business logic execution. Implements 'description' schema field."},{"type":"null"}],"description":"Optional human-readable description. Used for admin clarity, never for business logic execution. Implements 'description' schema field."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the configuration row. Populated by RDBMS as 'created_at' in ai_mall_backend_configurations, required for audit trail."},"updated_at":{"type":"string","format":"date-time","description":"Last-modification timestamp, 'updated_at' column in ai_mall_backend_configurations schema. Not null."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete timestamp. If set, this configuration is inactive/archived but retained for audit, according to 'deleted_at' in ai_mall_backend_configurations."},{"type":"null"}],"description":"Soft-delete timestamp. If set, this configuration is inactive/archived but retained for audit, according to 'deleted_at' in ai_mall_backend_configurations."}},"required":["id","name","value","created_at","updated_at"],"description":"Full entity schema for ai_mall_backend_configurations, matching the atomic, 3NF-compliant configuration rows. Suitable for reading all config entities; fields correlate exactly to the schema's columns and are used for compliance, search, and audit."},"IAiMallBackendConfigurations.IRequest":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by channel ID (uuid). Used when searching for configs that apply to a specific business channel."},{"type":"null"}],"description":"Optional filter by channel ID (uuid). Used when searching for configs that apply to a specific business channel."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by section ID. Used for finding configs attached to a UI section."},{"type":"null"}],"description":"Optional filter by section ID. Used for finding configs attached to a UI section."},"name":{"oneOf":[{"type":"string","description":"Filter/search by exact or partial configuration item name. If null, not applied as filter."},{"type":"null"}],"description":"Filter/search by exact or partial configuration item name. If null, not applied as filter."},"value":{"oneOf":[{"type":"string","description":"Filter by value (supports partial/search in some business logic). If null, not filtered."},{"type":"null"}],"description":"Filter by value (supports partial/search in some business logic). If null, not filtered."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for configs created after this timestamp (ISO 8601)."},{"type":"null"}],"description":"Filter for configs created after this timestamp (ISO 8601)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for configs created before this timestamp (ISO 8601)."},{"type":"null"}],"description":"Filter for configs created before this timestamp (ISO 8601)."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for updated_at >= timestamp."},{"type":"null"}],"description":"Filter for updated_at >= timestamp."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for updated_at <= timestamp."},{"type":"null"}],"description":"Filter for updated_at <= timestamp."}},"description":"Request object for paginated/filtering/searching ai_mall_backend_configurations, directly referencing only those fields that exist in the schema. All filter fields are optional and are used for advanced business logic in searching configuration records.","required":[]},"IPageIAiMallBackendConfigurations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging metadata as defined in the IPage standard type, used for paginated API responses."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendConfigurations"},"description":"Array of configuration entities on the current page, matching the IAiMallBackendConfigurations schema."}},"required":["pagination","data"],"description":"Paginated response structure for ai_mall_backend_configurations collections, conforming to the IPage<T> convention. Used to wrap lists of configuration entities for APIs that support paging, filtering, and sorting."},"IAiMallBackendConfigurations.IUpdate":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. The channel UUID for this configuration row; can be updated if the configuration is being re-scoped. References the 'channel_id' in ai_mall_backend_configurations."},{"type":"null"}],"description":"Optional. The channel UUID for this configuration row; can be updated if the configuration is being re-scoped. References the 'channel_id' in ai_mall_backend_configurations."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. The section UUID for this config; can be updated if reconfiguring the config's scope. Matches 'section_id' in ai_mall_backend_configurations."},{"type":"null"}],"description":"Optional. The section UUID for this config; can be updated if reconfiguring the config's scope. Matches 'section_id' in ai_mall_backend_configurations."},"name":{"type":"string","description":"Configuration item name; updatable for administrative changes only when uniqueness constraints allow it. Must match 'name' in ai_mall_backend_configurations."},"value":{"type":"string","description":"Updated value for the configuration item. All types stored as string (see ai_mall_backend_configurations schema 'value')."},"description":{"oneOf":[{"type":"string","description":"Optional new description for this config, if business/admin comments are updated. Based on 'description' in ai_mall_backend_configurations schema."},{"type":"null"}],"description":"Optional new description for this config, if business/admin comments are updated. Based on 'description' in ai_mall_backend_configurations schema."}},"description":"Update schema for ai_mall_backend_configurations entity. Used to modify atomic fields according to 3NF policy—scope, value, descriptive metadata. All updates correspond to columns in the schema.","required":[]},"IAiMallBackendApiGateways.ICreate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"The UUID of the associated channel for this API gateway. Required per the ai_mall_backend_api_gateways schema."},"route_base":{"type":"string","description":"Base URI path for this gateway (e.g. '/api/v1'). Implements the 'route_base' field in ai_mall_backend_api_gateways."},"domain":{"type":"string","description":"Domain string (FQDN or subdomain) for this gateway's endpoint as per ai_mall_backend_api_gateways schema."},"enabled":{"type":"boolean","description":"Flag for temporary suspension or reactivation of the gateway (corresponds to 'enabled' in ai_mall_backend_api_gateways)."}},"required":["channel_id","route_base","domain","enabled"],"description":"Object for creation of API gateway, matching atomic fields in ai_mall_backend_api_gateways. Does not allow setting timestamps or deleted_at (system managed)."},"IAiMallBackendApiGateways":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID of the API gateway record from ai_mall_backend_api_gateways."},"channel_id":{"type":"string","format":"uuid","description":"Associated channel's UUID for this gateway (must match a valid channel)."},"route_base":{"type":"string","description":"Base URI route for this gateway (see 'route_base' column in ai_mall_backend_api_gateways schema)."},"domain":{"type":"string","description":"Hostname or domain for this gateway endpoint. Enforced unique on (route_base, domain)."},"enabled":{"type":"boolean","description":"Flag indicating whether gateway is live (enabled), matches 'enabled' in ai_mall_backend_api_gateways."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this gateway was created. System-managed (from 'created_at' in ai_mall_backend_api_gateways schema)."},"updated_at":{"type":"string","format":"date-time","description":"Last time this gateway was updated. System-managed column from schema ('updated_at')."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for soft deletion, if the gateway is deactivated or removed (nullable, from 'deleted_at' in schema)."},{"type":"null"}],"description":"Timestamp for soft deletion, if the gateway is deactivated or removed (nullable, from 'deleted_at' in schema)."}},"required":["id","channel_id","route_base","domain","enabled","created_at","updated_at"],"description":"Schema for ai_mall_backend_api_gateways entity, including all atomic/entity fields for gateway registry. This is used for reading, writing, and auditing API gateway data. Follows strict 3NF; never allows illegitimate or derived fields."},"IAiMallBackendApiGateways.IRequest":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by associated channel id (uuid). Used for searching gateways by their business channel assignment."},{"type":"null"}],"description":"Optional filter by associated channel id (uuid). Used for searching gateways by their business channel assignment."},"route_base":{"oneOf":[{"type":"string","description":"Filter/search by base route value, e.g. '/api/v1'."},{"type":"null"}],"description":"Filter/search by base route value, e.g. '/api/v1'."},"domain":{"oneOf":[{"type":"string","description":"Optional. Filter by domain string (supports partial match for search scenarios)."},{"type":"null"}],"description":"Optional. Filter by domain string (supports partial match for search scenarios)."},"enabled":{"oneOf":[{"type":"boolean","description":"Filter by gateway enabled status (true/false/null for both)."},{"type":"null"}],"description":"Filter by gateway enabled status (true/false/null for both)."}},"description":"Request object for searching/filtering API gateways, supporting advanced search in ai_mall_backend_api_gateways registry. Only schema fields are included in filter criteria.","required":[]},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number.","minimum":1},"limit":{"type":"integer","description":"Records per page. Default 100 if not specified. Unsigned 32-bit integer.","minimum":1,"default":100},"records":{"type":"integer","description":"Total number of records in database for this search/filter.","minimum":0},"pages":{"type":"integer","description":"Total number of pages = ceil(records/limit).","minimum":1}},"required":["current","limit","records","pages"],"description":"Pagination information for paginated list responses (standard IPage). Includes page number, page limit, total number of matching records, and the maximum page count."}}},"completed":16,"total":25,"step":0,"created_at":"2025-07-28T08:36:07.923Z"},"tokenUsage":{"facade":{"aggregate":{"total":1617705,"input":{"total":1532236,"cached":3840},"output":{"total":85469,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1617705,"input":{"total":1532236,"cached":3840},"output":{"total":85469,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1617705,"input":{"total":1532236,"cached":3840},"output":{"total":85469,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1617705,"input":{"total":1532236,"cached":3840},"output":{"total":85469,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiMallBackendChannels.ICreate":{"type":"object","properties":{"tenant_id":{"type":"string","format":"uuid","description":"The unique identifier for the tenant (brand, company, or business unit) this channel is associated with. Implements strict multi-tenancy as described in the Systematic schema and backend architecture requirements. This value ensures that each channel is uniquely scoped within a specific tenant context, and all business logic and routing for the channel is constrained accordingly.\n\nReferenced from the 'tenant_id' column in the Prisma schema. Must be a valid UUID referencing an existing tenant entity. Required on creation."},"code":{"type":"string","description":"Unique programmatic code or slug for this channel (e.g., 'web', 'mobile', 'partner1'). Used for routing, API lookups, onboarding, and channel registry. Must be unique across all channels. Ensures the channel can be unambiguously identified in business logic, onboarding, and configuration operations.\n\nDirectly maps to the 'code' column in the ai_mall_backend_channels schema. Required. Unicode string, usually short, lower-case with underscores."},"name":{"type":"string","description":"Human-readable, business-facing display name for the channel (e.g., 'Mobile App Channel (2025)'). Used for admin UI, dashboards, reporting, and human reference across platform operations. Not intended for use as a slug/code.\n\nReferenced from the 'name' column in the Prisma schema. Required. Must be unique in combination with tenant_id. Should be descriptive but not duplicated in channel configuration."},"enabled":{"type":"boolean","description":"Whether this channel is logically enabled/active for routing, onboarding, and access. Used for dynamic composition of the platform across different user touchpoints. When false, business logic, UI, and routing will typically exclude this channel from active use.\n\nDirectly mapped from the 'enabled' column in the ai_mall_backend_channels schema. Required."}},"required":["tenant_id","code","name","enabled"],"description":"Represents the required information to create a new channel (business unit entry) in the ai_mall_backend_channels table, as per the unified platform channel registry in the backend architecture. Each channel is owned by a tenant, identified by a unique code, has a human-friendly name, and an enable/disable flag for composable business logic. All required fields map 1:1 to the Prisma schema columns and their business role descriptions. Used for adding web apps, mobile apps, or partner integrations to the multi-tenant platform. No extra/invisible fields allowed."},"IAiMallBackendChannels":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID for this channel record. Unique per channel, and referenced in all configuration, routing, and audit trails."},"tenant_id":{"type":"string","format":"uuid","description":"The owning tenant's unique identifier. Represents the parent brand, business unit, or client. Enforces multi-tenancy segregation."},"code":{"type":"string","description":"Short unique code/slug (e.g., 'web', 'mobile'). Used for routing, onboarding, configuration lookup. Guaranteed unique per platform instance."},"name":{"type":"string","description":"Display name for admins/UIs. Human-friendly reference for reporting, dashboarding, or platform setup."},"enabled":{"type":"boolean","description":"Active flag. True when channel is available for business logic and customer onboarding. False disables routing, search, and onboarding."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (RFC 3339+timezone) when channel was created. Used in audit trail and change history."},"updated_at":{"type":"string","format":"date-time","description":"Last modification time (RFC 3339+timezone). Updated on any change for audit, conflict resolution, and cache purging."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp. Null if the channel is active; otherwise, records the deletion event for audit/compliance. Used to hide channels from daily operations while retaining full auditability."},{"type":"null","format":"date-time","description":"Soft deletion timestamp. Null if the channel is active; otherwise, records the deletion event for audit/compliance. Used to hide channels from daily operations while retaining full auditability."}],"description":"Soft deletion timestamp. Null if the channel is active; otherwise, records the deletion event for audit/compliance. Used to hide channels from daily operations while retaining full auditability."}},"required":["id","tenant_id","code","name","enabled","created_at","updated_at"],"description":"Represents an ai_mall_backend_channels entity (multi-tenant business channel) as described in the unified platform architecture documentation and Prisma schema. All properties directly reflect the schema columns for full runtime observability and configuration. Used in all admin, onboarding, API gateway, and channel deployment flows. Does not include any fields not present in the schema. Channels define the operational scope for all business and customer-facing features."},"IAiMallBackendChannels.IRequest":{"type":"object","properties":{"tenant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter: Restrict search to channels belonging to a specific tenant (multi-tenant context). Supports UUID of ai_mall_backend_tenants.id as described in schema column comment."},{"type":"null","format":"uuid","description":"Optional filter: Restrict search to channels belonging to a specific tenant (multi-tenant context). Supports UUID of ai_mall_backend_tenants.id as described in schema column comment."}],"description":"Optional filter: Restrict search to channels belonging to a specific tenant (multi-tenant context). Supports UUID of ai_mall_backend_tenants.id as described in schema column comment."},"code":{"oneOf":[{"type":"string","description":"Optional filter: Only return channels whose code/slug matches this string (exact or partial depending on backend implementation)."},{"type":"null","description":"Optional filter: Only return channels whose code/slug matches this string (exact or partial depending on backend implementation)."}],"description":"Optional filter: Only return channels whose code/slug matches this string (exact or partial depending on backend implementation)."},"name":{"oneOf":[{"type":"string","description":"Optional filter: Restrict to channels whose display name matches this value (supports partial or fuzzy if implemented). Schema column: name."},{"type":"null","description":"Optional filter: Restrict to channels whose display name matches this value (supports partial or fuzzy if implemented). Schema column: name."}],"description":"Optional filter: Restrict to channels whose display name matches this value (supports partial or fuzzy if implemented). Schema column: name."},"enabled":{"oneOf":[{"type":"boolean","description":"Optional filter: Only include channels based on enabled/active flag (true for enabled, false for disabled)."},{"type":"null","description":"Optional filter: Only include channels based on enabled/active flag (true for enabled, false for disabled)."}],"description":"Optional filter: Only include channels based on enabled/active flag (true for enabled, false for disabled)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Include only channels created at or after this timestamp (RFC3339/ISO8601 UTC+zone). Not a direct schema column, but standard for temporal filtering."},{"type":"null","format":"date-time","description":"Optional filter: Include only channels created at or after this timestamp (RFC3339/ISO8601 UTC+zone). Not a direct schema column, but standard for temporal filtering."}],"description":"Optional filter: Include only channels created at or after this timestamp (RFC3339/ISO8601 UTC+zone). Not a direct schema column, but standard for temporal filtering."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Only include channels created before or at this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Only include channels created before or at this timestamp."}],"description":"Optional filter: Only include channels created before or at this timestamp."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Restrict to channels updated at/after this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Restrict to channels updated at/after this timestamp."}],"description":"Optional filter: Restrict to channels updated at/after this timestamp."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Restrict to channels updated at/or before this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Restrict to channels updated at/or before this timestamp."}],"description":"Optional filter: Restrict to channels updated at/or before this timestamp."},"include_deleted":{"oneOf":[{"type":"boolean","description":"If true, return both active and soft-deleted channels. If false or not set, return only active (deleted_at is null). Not a schema column but standard in audit/compliance filters."},{"type":"null","description":"If true, return both active and soft-deleted channels. If false or not set, return only active (deleted_at is null). Not a schema column but standard in audit/compliance filters."}],"description":"If true, return both active and soft-deleted channels. If false or not set, return only active (deleted_at is null). Not a schema column but standard in audit/compliance filters."},"page":{"oneOf":[{"type":"integer","description":"Optional: Page number for pagination (1-based). Returns the requested page from paginated result set."},{"type":"null","description":"Optional: Page number for pagination (1-based). Returns the requested page from paginated result set."}],"description":"Optional: Page number for pagination (1-based). Returns the requested page from paginated result set."},"limit":{"oneOf":[{"type":"integer","description":"Optional: Limit number of records per page (pagination)."},{"type":"null","description":"Optional: Limit number of records per page (pagination)."}],"description":"Optional: Limit number of records per page (pagination)."}},"description":"Request filter/query parameters for paginated search/listing of ai_mall_backend_channels records. Supports all relevant queryable fields as defined in the schema—including tenant_id, code (slug), name, enabled flag, and temporal windows for created_at/updated_at. Designed for admins to efficiently search, filter, and audit large-scale channel registries in the platform. Includes optional pagination and audit-style controls (include_deleted). Used by admin frontend and integration automation.","required":[]},"IAiMallBackendChannels.IUpdate":{"type":"object","properties":{"tenant_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) New tenant (business unit/brand) for this channel, updating multi-tenancy context. Changing this should be rare and requires strict audit in production. Must match ai_mall_backend_tenants.id."},{"type":"null","format":"uuid","description":"(Optional) New tenant (business unit/brand) for this channel, updating multi-tenancy context. Changing this should be rare and requires strict audit in production. Must match ai_mall_backend_tenants.id."}],"description":"(Optional) New tenant (business unit/brand) for this channel, updating multi-tenancy context. Changing this should be rare and requires strict audit in production. Must match ai_mall_backend_tenants.id."},"code":{"oneOf":[{"type":"string","description":"(Optional) Updated channel code/slug (may require platform-wide migration if used for routing/onboarding). String per schema—strictly unique."},{"type":"null","description":"(Optional) Updated channel code/slug (may require platform-wide migration if used for routing/onboarding). String per schema—strictly unique."}],"description":"(Optional) Updated channel code/slug (may require platform-wide migration if used for routing/onboarding). String per schema—strictly unique."},"name":{"oneOf":[{"type":"string","description":"(Optional) Updated display name for admin/business reporting (e.g., 'Web (2026 Edition)'). Schema field: name."},{"type":"null","description":"(Optional) Updated display name for admin/business reporting (e.g., 'Web (2026 Edition)'). Schema field: name."}],"description":"(Optional) Updated display name for admin/business reporting (e.g., 'Web (2026 Edition)'). Schema field: name."},"enabled":{"oneOf":[{"type":"boolean","description":"(Optional) Change logical activation status for this channel. True for active, false for suspended. Ref: 'enabled' column in schema."},{"type":"null","description":"(Optional) Change logical activation status for this channel. True for active, false for suspended. Ref: 'enabled' column in schema."}],"description":"(Optional) Change logical activation status for this channel. True for active, false for suspended. Ref: 'enabled' column in schema."}},"description":"Updateable fields for an ai_mall_backend_channels entity. Each property is optional (schema allows partial update); updates are only applied if set. Fields map 1:1 to schema columns, and do not include hidden/audit fields. Use in admin channel ops for code renaming, enabling/disabling, or tenant migration.","required":[]},"IPageIAiMallBackendChannels":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendChannels"},"description":"A list of paginated ai_mall_backend_channels entities resulting from a search, filter, or index operation. Each item is a fully-detailed channel as defined in business logic/documents."}},"required":["pagination","data"],"description":"A paginated response containing a list of ai_mall_backend_channels records, along with standard pagination metadata as per business requirements and architecture. Used for efficient, operable navigation of large channel registries in admin, audit, and platform onboarding scenarios."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number in pagination result (1-based or as used by business logic)."},"limit":{"type":"integer","description":"Number of records per page (page size). For example, 100."},"records":{"type":"integer","description":"Total number of records matching query/filter."},"pages":{"type":"integer","description":"Total number of result pages (calculated as ceil(records/limit))."}},"required":["current","limit","records","pages"],"description":"Standard pagination metadata for paged query responses. Used across all paginated search/list operations in the platform. Includes current page, max per page, total record count, and total pages. Aligns directly with architecture standard IPage<T> interface. Always required in paged list responses."},"IAiMallBackendSections.ICreate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"The UUID of the parent channel for this section (link to ai_mall_backend_channels.id). Implements modular content structure—sections are always scoped to a specific channel (web, mobile, etc.).\n\nRequired per schema. Must reference an existing enabled channel."},"code":{"type":"string","description":"Short unique code (slug) for programmatic reference to this section (e.g., 'main_banner', 'promo_1'). Used to configure routing/composition for a modular channel experience. Required and must be unique per channel."},"name":{"type":"string","description":"Human-friendly display name for the section, as visible to admins/site editors. Typically used in dashboards/UIs and business mapping. Schema column: 'name'.\n\nRequired; not duplicated for each channel."},"enabled":{"type":"boolean","description":"Logical enabled/activation flag. If true, section is included in business logic, rendering, and business workflows for the channel. When false, excluded from live view and automation. Implements per-section scheduling/activation per modular platform requirements."}},"required":["channel_id","code","name","enabled"],"description":"Represents data for creating a new ai_mall_backend_sections record (modular, channel-scoped site section). All required properties per schema, as needed in dynamic UI/business composition modules. Used to register banners, product carousels, promo areas, etc. under a channel, ensuring configurable and extensible business layout."},"IAiMallBackendSections":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID for the section record. Uniquely identifies the section across the platform for update, query, assignment, and business logic routing."},"channel_id":{"type":"string","format":"uuid","description":"Foreign key to ai_mall_backend_channels.id—the parent business channel in which this section exists. Critical for enforcing modular segregation and channel composition at runtime."},"code":{"type":"string","description":"Short programmatic code/slug designating this section (e.g., 'promo_top', 'main_carousel'). Must be unique for each channel. Used by admin, UI, automation, and API onboarding."},"name":{"type":"string","description":"Display name for business, admin, and UI editors. Human-readable, typically mapped to platform/cms UX tools."},"enabled":{"type":"boolean","description":"Section enabled/active status—true if in use, false if hidden/disabled. Central for scheduling, preview, or UI experimentation."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when this section was created (auditing, analytics, and change control per compliance policy)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for most recent change to the section entity (audit, analytics, cache updates)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp—null if section active; otherwise set on archive/removal (required for regulatory retention policy)."},{"type":"null","format":"date-time","description":"Soft deletion timestamp—null if section active; otherwise set on archive/removal (required for regulatory retention policy)."}],"description":"Soft deletion timestamp—null if section active; otherwise set on archive/removal (required for regulatory retention policy)."}},"required":["id","channel_id","code","name","enabled","created_at","updated_at"],"description":"Represents the full ai_mall_backend_sections entity, corresponding 1:1 with the database row in modular site/channel composition management. Used in all detail, paged list, and edit/result displays in admin, UI composition, and workflow. All fields reflect the business requirements and normalization described in the backend requirements and Prisma column-level documentation."},"IAiMallBackendSections.IRequest":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter: restricts search/results to sections of a given channel (UUID per ai_mall_backend_channels.id). Used for channel-centric UI and business ops."},{"type":"null","format":"uuid","description":"Optional filter: restricts search/results to sections of a given channel (UUID per ai_mall_backend_channels.id). Used for channel-centric UI and business ops."}],"description":"Optional filter: restricts search/results to sections of a given channel (UUID per ai_mall_backend_channels.id). Used for channel-centric UI and business ops."},"code":{"oneOf":[{"type":"string","description":"Optional filter: filter by section code (slug)."},{"type":"null","description":"Optional filter: filter by section code (slug)."}],"description":"Optional filter: filter by section code (slug)."},"name":{"oneOf":[{"type":"string","description":"Optional filter/design-time search by display name (fuzzy, exact, or prefix as per backend implementation)."},{"type":"null","description":"Optional filter/design-time search by display name (fuzzy, exact, or prefix as per backend implementation)."}],"description":"Optional filter/design-time search by display name (fuzzy, exact, or prefix as per backend implementation)."},"enabled":{"oneOf":[{"type":"boolean","description":"Optional filter to restrict results to sections enabled/active (true) or only disabled (false)."},{"type":"null","description":"Optional filter to restrict results to sections enabled/active (true) or only disabled (false)."}],"description":"Optional filter to restrict results to sections enabled/active (true) or only disabled (false)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Include only sections created after this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Include only sections created after this timestamp."}],"description":"Optional filter: Include only sections created after this timestamp."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Include only sections created before this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Include only sections created before this timestamp."}],"description":"Optional filter: Include only sections created before this timestamp."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Only results updated after this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Only results updated after this timestamp."}],"description":"Optional filter: Only results updated after this timestamp."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Only results updated before this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Only results updated before this timestamp."}],"description":"Optional filter: Only results updated before this timestamp."},"include_deleted":{"oneOf":[{"type":"boolean","description":"If true, returned results may include soft-deleted sections (where deleted_at is not null). Default false."},{"type":"null","description":"If true, returned results may include soft-deleted sections (where deleted_at is not null). Default false."}],"description":"If true, returned results may include soft-deleted sections (where deleted_at is not null). Default false."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (1-based, as per platform conventions)."},{"type":"null","description":"Page number for pagination (1-based, as per platform conventions)."}],"description":"Page number for pagination (1-based, as per platform conventions)."},"limit":{"oneOf":[{"type":"integer","description":"Records per page (page size). Typically 10, 20, 100, etc. depending on admin frontend config."},{"type":"null","description":"Records per page (page size). Typically 10, 20, 100, etc. depending on admin frontend config."}],"description":"Records per page (page size). Typically 10, 20, 100, etc. depending on admin frontend config."}},"description":"Request parameters for paginated, filtered, or advanced search/listing of ai_mall_backend_sections (modular business sections). Supports searching by schema-defined fields, basic property filters, time windows, and soft/hard deletion compliance. Operates as the parameter bag for admin, editorial, and ops/business tools.","required":[]},"IAiMallBackendSections.IUpdate":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Update parent channel (ai_mall_backend_channels.id). Generally rare except for major reorg—admin only."},{"type":"null","format":"uuid","description":"(Optional) Update parent channel (ai_mall_backend_channels.id). Generally rare except for major reorg—admin only."}],"description":"(Optional) Update parent channel (ai_mall_backend_channels.id). Generally rare except for major reorg—admin only."},"code":{"oneOf":[{"type":"string","description":"(Optional) Change section code/slug for programmatic configuration (e.g., migrate from 'old_banner' to 'main_banner_v2')."},{"type":"null","description":"(Optional) Change section code/slug for programmatic configuration (e.g., migrate from 'old_banner' to 'main_banner_v2')."}],"description":"(Optional) Change section code/slug for programmatic configuration (e.g., migrate from 'old_banner' to 'main_banner_v2')."},"name":{"oneOf":[{"type":"string","description":"(Optional) Change display/business name for section (UI/UX or composition refactoring)."},{"type":"null","description":"(Optional) Change display/business name for section (UI/UX or composition refactoring)."}],"description":"(Optional) Change display/business name for section (UI/UX or composition refactoring)."},"enabled":{"oneOf":[{"type":"boolean","description":"(Optional) Mark section as enabled/disabled for modular activation. Generally toggled for seasonal/promotional blocks."},{"type":"null","description":"(Optional) Mark section as enabled/disabled for modular activation. Generally toggled for seasonal/promotional blocks."}],"description":"(Optional) Mark section as enabled/disabled for modular activation. Generally toggled for seasonal/promotional blocks."}},"description":"Fields in ai_mall_backend_sections that may be updated (all are optional for patch/put semantics). Reflects required change management and refactor flexibility stated in business requirements.","required":[]},"IPageIAiMallBackendSections":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendSections"},"description":"Array of modular section objects (full detail) returned for paged/indexed result listing or advanced search."}},"required":["pagination","data"],"description":"Paged result set containing modular section entities (ai_mall_backend_sections) and standard page navigation metadata for admin/ops workflows."}}},"completed":25,"total":25,"step":0,"created_at":"2025-07-28T08:36:19.751Z"},"tokenUsage":{"facade":{"aggregate":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComplete","document":{"operations":[{"specification":"Create a new ai_mall_backend_channels record, representing a new business channel as per the architecture specification. Channel records manage onboarding of web, mobile, or partner integrations, uniquely identified by 'code', and containing 'name', tenant association, enable/disable control, and full auditability. Only reference fields that exist in the schema: 'tenant_id', 'code', 'name', 'enabled', 'created_at', 'updated_at', 'deleted_at' are present; never mention fields like created_by or updated_by. This API is for adding a new channel such as 'web', 'mobile', or a branded storefront. All newly created records are not soft-deleted ('deleted_at' is null'); timestamps are used for tracking creation and update times.","description":"This endpoint allows clients (typically admin users) to create a new business channel as specified in the ai_mall_backend_channels table, implementing the backend's channel registry feature critical for multi-channel onboarding (web, mobile, etc). The request body must include required fields from the schema: 'tenant_id', a unique 'code' (slug), 'name', and 'enabled' (boolean). Timestamps like 'created_at', 'updated_at' are managed automatically; never mention non-existent fields. Upon creation, the record will be available unless deleted, and 'deleted_at' will remain null. The association with the tenant is mandatory and ensures strict multi-tenancy enforcement. Any operation on the created channel will be auditable by 'created_at' and 'updated_at'.","summary":"Create a new ai_mall_backend_channels record (channel registry, multi-channel backend onboarding)","parameters":[],"requestBody":{"description":"Full creation info for ai_mall_backend_channels (channel registry entity)","typeName":"IAiMallBackendChannels.ICreate"},"responseBody":{"description":"Newly created ai_mall_backend_channels record","typeName":"IAiMallBackendChannels"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/channels","method":"post"},{"specification":"List/search ai_mall_backend_channels records using patch semantics, enabling advanced query for multi-channel management. Supports searching by fields: 'tenant_id', 'code', 'name', 'enabled', timestamp windows, and allows paginated results (since this is likely to be called by admins managing many channels). The response will not return soft-deleted channels ('deleted_at' is not null) by default, unless specifically included in search parameters. Only fields defined in the schema can be used for filtering/sorting. Never reference or filter by non-existent fields, and do not assume audit users are tracked by id. Paginated response references a page type with array of channels and pager info.","description":"Allows admin or platform users to list and search existing channels, as registered in the ai_mall_backend_channels table. Search/filter is performed on: 'tenant_id', 'code', 'name', 'enabled', 'created_at', 'updated_at' (per schema). The response is a paginated list for operational navigation of channels across tenants/brands. By default, soft-deleted channels (where 'deleted_at' is not null) are hidden. Only schema fields should be included for queries; never expose or search on non-existent audit fields.","summary":"Search/list paginated ai_mall_backend_channels (channels registry)","parameters":[],"requestBody":{"description":"List/filter criteria for searching channels","typeName":"IAiMallBackendChannels.IRequest"},"responseBody":{"description":"Paginated channel search result set","typeName":"IPageIAiMallBackendChannels"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/channels","method":"patch"},{"specification":"Retrieve details for a single ai_mall_backend_channels record by primary key ('id'), as per schema. All record fields ('id', 'tenant_id', 'code', 'name', 'enabled', 'created_at', 'updated_at', 'deleted_at') are returned. Never include or describe fields not found in the schema. This endpoint is typically used in admin or platform operations to view all meta-information about a specific business channel.","description":"Gets the full record for a specific channel as defined in ai_mall_backend_channels, supporting business processes requiring detail read (platform config, audit, troubleshooting). Path parameter 'id' is the UUID of the channel. The response includes all relevant fields from the schema; only existing fields are documented or accessible. Non-existent schema fields must not be referenced in the description or behavior.","summary":"Get detailed ai_mall_backend_channels info by id (channel)","parameters":[{"name":"id","description":"Channel ID (uuid per primary key in ai_mall_backend_channels)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested ai_mall_backend_channels record (full detail)","typeName":"IAiMallBackendChannels"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/channels/{id}","method":"get"},{"specification":"Update an existing ai_mall_backend_channels record (multi-channel entity) with new field values. All updatable fields must exist in the schema ('tenant_id', 'code', 'name', 'enabled'), and updates must never reference or attempt to modify fields not present (such as created_by or owner). 'id' path parameter identifies the record. 'updated_at' is to be auto-updated by backend logic. Soft-deletion is by setting 'deleted_at' if needed, but normal updates should avoid modifying it without explicit delete intent.","description":"Allows admin users to update an existing channel record, changing properties such as 'code', 'name', 'enabled', and tenant association. The only updatable fields are those explicitly defined in the schema. Never reference or allow mutation of non-existent fields. The 'id' path parameter specifies the channel to update. After update, 'updated_at' will automatically reflect the time of change. Updates must not result in schema violation or introduce audit fields that do not exist.","summary":"Update existing ai_mall_backend_channels (channel) by id","parameters":[{"name":"id","description":"Target channel ID (uuid as per schema primary key)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for ai_mall_backend_channels (fields must exist in schema)","typeName":"IAiMallBackendChannels.IUpdate"},"responseBody":{"description":"The updated ai_mall_backend_channels record","typeName":"IAiMallBackendChannels"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/channels/{id}","method":"put"},{"specification":"Soft-delete the specified ai_mall_backend_channels record using its 'id'. As 'deleted_at' is provided in the schema, deletion will set this field to the current timestamp to implement soft delete logic. No fields are removed permanently. Endpoint should not describe permanent removal or fields not present in the schema. After API execution, the channel remains in the database with 'deleted_at' field set; all original fields retained for audit.","description":"Performs a soft-delete of the channel identified by 'id', as ai_mall_backend_channels includes 'deleted_at'. This operation sets the 'deleted_at' timestamp and retains all channel fields for audit and potential recovery. There is no permanent removal; only the 'deleted_at' field is changed to a timestamp. No non-existent schema fields are referenced in any behavior or description. Operation is strictly auditable and reversible at the application level per retention policy.","summary":"Soft-delete ai_mall_backend_channels (set deleted_at, retain record)","parameters":[{"name":"id","description":"Channel id (uuid) to soft-delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/channels/{id}","method":"delete"},{"specification":"Create a new section record as described in ai_mall_backend_sections. This includes reference to a specific channel using 'channel_id', unique code, name, and enabled/activation state. All mentioned fields must exist in the schema. Audit fields like 'created_at', 'updated_at' are auto-managed by backend logic. No references to non-existent fields allowed. The section supports modular dynamic UI/composition requirements.","description":"Allows a client (typically admin) to create a new business section under a specified channel, using 'channel_id', 'code', 'name', and 'enabled' state as required by the schema. The section implements modular composition of business logic per requirements—each configures a unique part of a channel (e.g. home banner, category carousel). The API must not reference schema-inconsistent fields or business logic. Audit tracking is enforced via automatic management of timestamps. All relationships are enforced through normalized keys as per schema.","summary":"Create a new ai_mall_backend_sections record (modular site section)","parameters":[],"requestBody":{"description":"Section creation data (fields as per schema, no extras)","typeName":"IAiMallBackendSections.ICreate"},"responseBody":{"description":"The new ai_mall_backend_sections record created","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/sections","method":"post"},{"specification":"List/search ai_mall_backend_sections records by patch, supporting advanced filtering for modular UI configuration. Accepts query parameters based only on schema fields: 'channel_id', 'code', 'name', 'enabled', timestamps, etc. Response will include only sections that have not been soft-deleted unless explicit search on 'deleted_at'. Never describe fields not present. Returns paginated result referencing a page/section type.","description":"Allows platform/admin users to search and list all modular business sections configured under channels, using filters on defined schema fields. Query may specify channel context, name/code, enabled state, timestamps (all per schema), supporting modular business structuring. Soft-deleted sections are omitted by default (deleted_at=null). Returns paged result for large sets. No unsupported fields should be present in request or result.","summary":"Paginated search/list of ai_mall_backend_sections (modular section registry)","parameters":[],"requestBody":{"description":"Filter/search data for ai_mall_backend_sections records","typeName":"IAiMallBackendSections.IRequest"},"responseBody":{"description":"Paged result set of ai_mall_backend_sections","typeName":"IPageIAiMallBackendSections"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/sections","method":"patch"},{"specification":"Retrieve a specific ai_mall_backend_sections record by id, returning all defined schema fields. Used in business logic for modular site/app configuration. Never reference non-existent fields. Provides complete section context for site editors or platform-support tools.","description":"Gives full details on a single section as specified by its id—returning all fields ('id', 'channel_id', 'code', 'name', 'enabled', 'created_at', 'updated_at', 'deleted_at'). This endpoint is used for editing/viewing section entity assignments and auditing them across business domains. Fields not found in the schema must not be referenced or returned.","summary":"Get full ai_mall_backend_sections record by id (modular section detail)","parameters":[{"name":"id","description":"Section pk (uuid per schema)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full ai_mall_backend_sections entity","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/sections/{id}","method":"get"},{"specification":"Update an existing section record in ai_mall_backend_sections, strictly using fields from the schema. Accepts updates to: 'channel_id', 'code', 'name', and 'enabled'. 'id' path parameter targets the section. 'updated_at' auto-updated by backend. Never reference or update fields missing from the schema. Use case: site composition redesign, enabling/disabling business units, audit tracking.","description":"This endpoint supports updating a section's details and configuration settings, changing only schema-defined attributes (e.g., channel association, code, name, enabled status). Admins use it to change business logic structure, on/off toggles, or reconfigure domain mappings. 'id' specifies the editable entity. Mutations to fields not defined in ai_mall_backend_sections are rejected and not described here. Timestamps updated to preserve audit log integrity.","summary":"Update an ai_mall_backend_sections entity (modular site section)","parameters":[{"name":"id","description":"Section pk (uuid as per schema)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for ai_mall_backend_sections record (only schema fields)","typeName":"IAiMallBackendSections.IUpdate"},"responseBody":{"description":"Updated ai_mall_backend_sections entity","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/sections/{id}","method":"put"},{"specification":"Implements soft-deletion for the ai_mall_backend_sections table. When a section is deleted, the system sets the section's deleted_at field to the current date-time, marking it as archived but retaining the record for audit/auditability. This operation should not actually remove the record from the database, but update the deleted_at field. Only the id path parameter—that matches a real section record—should be allowed. Inaccessible if already deleted or never existed. All other fields are left as-is.","description":"This operation performs a soft delete of a section in the ai_mall_backend_sections table. According to the schema, each section has a deleted_at field that is used for soft-deletion. When this endpoint is called, the deleted_at field for the section will be set to the current timestamp, instead of removing the record from the database permanently. This approach maintains the full audit history of the section, allowing for compliance with business rules that require archival, retention and possible recovery or audit trails. The operation will only set the deleted_at field if it is currently null, and will not perform the operation on already deleted (archived) sections.","summary":"Soft deletes a section in ai_mall_backend_sections by setting deleted_at.","parameters":[{"name":"id","description":"Primary key of the section to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Returns the updated section record after soft-deletion (with deleted_at set).","typeName":"IAiMallBackendSections"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/sections/{id}","method":"delete"},{"specification":"Creates a new atomic configuration row in ai_mall_backend_configurations based on the provided request body. Ensures strict normalization by only creating a configuration item with its associated channel and/or section (if provided), unique name, value, and optional description. Adheres to audit/compliance requirements: sets created_at and updated_at to the current timestamp on insert; does not set or manipulate deleted_at, which remains null for new records. Only fields present in the schema are accepted.","description":"Creates a configuration entry in the ai_mall_backend_configurations table. The configuration entity supports atomic settings at the channel and section scope (or global if both are null). Each configuration consists of a unique name within the channel/section (IDs), a normalized value (string), and an optional description for clarity and audit. The request body must include all required fields: channel_id (can be null for global scope), section_id (can be null for channel scope), name, and value. Description is optional. The system will set created_at and updated_at on insert. After creation, the record will have deleted_at as null. Only fields present in the schema are considered; extra fields are not admitted.","summary":"Creates an atomic configuration in ai_mall_backend_configurations.","parameters":[],"requestBody":{"description":"Configuration creation information: must provide name, value, and optional channel_id/section_id/description.","typeName":"IAiMallBackendConfigurations.ICreate"},"responseBody":{"description":"The newly created configuration record.","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/configurations","method":"post"},{"specification":"List or search ai_mall_backend_configurations via a PATCH method, following best practices for advanced searching with complex criteria. Supports filtering on name, channel_id, section_id, is_active (where applicable by logic; must filter by existing schema fields only), and full-text search on description. Allows for pagination and multi-field sort, strictly leveraging indexed or real/virtual fields in the schema. Any data returned respects audit/compliance boundaries by not exposing deleted_at != null records unless explicitly requested. Never invents schema fields.","description":"Performs an advanced search over the ai_mall_backend_configurations records. The endpoint allows query parameters and/or request body for filters such as name, channel_id, section_id, and partial (LIKE) search over the description. Pagination and sorting are supported (by created_at, name, etc.), strictly referencing fields from the schema. Rows where deleted_at is not null are excluded by default unless a flag is set (if field exists in schema). This endpoint enables admin or system users to manage, audit, and review configuration items efficiently, in line with extensible configuration management requirements.","summary":"Lists or searches ai_mall_backend_configurations with complex filters/pagination.","parameters":[],"requestBody":{"description":"Search parameters for configuration listing/filtering, referencing only schema fields.","typeName":"IAiMallBackendConfigurations.IRequest"},"responseBody":{"description":"Paginated result set of configuration records matching the search criteria.","typeName":"IPageIAiMallBackendConfigurations"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/configurations","method":"patch"},{"specification":"Retrieves a single ai_mall_backend_configurations record by its id (primary key), returning all schema fields for the specified row. This operation is used for configuration detail view, referencing each atomic field precisely as in schema. Throws or signals not found error if the id does not match any configuration, or if the record is soft-deleted (i.e., deleted_at is not null) to comply with retention and audit logic. Only legitimate, existing schema fields are ever returned or referenced.","description":"Retrieves the details of a configuration row in ai_mall_backend_configurations by primary key (id). All schema fields—id, channel_id, section_id, name, value, description, created_at, updated_at and deleted_at—are returned as present in the actual record. If a configuration with the specified id does not exist, or is soft-deleted (deleted_at is not null), a not found error is raised in accordance with audit and compliance rules. No business logic is performed; this is a read-only endpoint strictly returning schema-defined fields.","summary":"Fetches configuration detail for given id from ai_mall_backend_configurations.","parameters":[{"name":"id","description":"The id (uuid) of the configuration to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The complete configuration record, or not-found error if missing/soft-deleted.","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/configurations/{id}","method":"get"},{"specification":"Updates an existing atomic configuration row in ai_mall_backend_configurations. The operation is only permitted if the record exists and is not soft-deleted. The API updates schema fields based on request—channel_id, section_id, name, value, description—and sets updated_at to now. The operation does not modify deleted_at. Returns the updated record. Only fields in the actual schema are admitted; non-schema fields are ignored. All changes are subject to audit through the updated_at field.","description":"Updates a configuration item identified by its id in ai_mall_backend_configurations. The request body includes any mutable fields: channel_id, section_id, name, value, description. The endpoint sets updated_at to the current time. It requires that the record is not soft-deleted (deleted_at is null) and exists; otherwise, returns an error. No non-schema fields are considered. This operation supports configuration management objectives for auditability and normalization.","summary":"Updates a configuration record in ai_mall_backend_configurations by id (soft-deleted records ignored).","parameters":[{"name":"id","description":"The id of the configuration row to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update. Only actual schema fields may be updated.","typeName":"IAiMallBackendConfigurations.IUpdate"},"responseBody":{"description":"The updated configuration record.","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/configurations/{id}","method":"put"},{"specification":"Soft-deletes a configuration in ai_mall_backend_configurations by setting deleted_at to now. Record is not physically deleted, but marked for compliance/audit policies. The operation is only allowed if deleted_at is currently null.","description":"This operation performs a soft deletion of a configuration row from ai_mall_backend_configurations. It sets deleted_at to the current timestamp for the specified id, flagging the row as deleted without physical removal. Only acts on schema fields. If the row is already soft-deleted or missing, error is returned. This follows audit/compliance requirements and ensures full traceability of configuration changes and deletions.","summary":"Soft deletes a configuration in ai_mall_backend_configurations by id via deleted_at field.","parameters":[{"name":"id","description":"Configuration id to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The configuration record after soft delete (deleted_at set).","typeName":"IAiMallBackendConfigurations"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/configurations/{id}","method":"delete"},{"specification":"Creates a new API gateway record in ai_mall_backend_api_gateways. Accepts request body containing all required schema fields: channel_id, route_base, domain, enabled. Creates the new gateway, setting created_at and updated_at to current timestamp, and ensuring deleted_at is null for newly created records. Does not set or require deleted_at on insert. Only accepts fields from the schema.","description":"Creates a new API gateway in ai_mall_backend_api_gateways. The request must include all required schema fields: channel_id, route_base, domain, and enabled. The operation enforces normalization by only writing atomic, schema-compliant data. Upon successful creation, the result includes all schema fields, with created_at and updated_at auto-set by the server to the current time, and deleted_at as null. No other fields are created or admitted; extra fields in the request are ignored.","summary":"Creates a new API gateway record in ai_mall_backend_api_gateways.","parameters":[],"requestBody":{"description":"All required fields to create an API gateway: channel_id, route_base, domain, enabled.","typeName":"IAiMallBackendApiGateways.ICreate"},"responseBody":{"description":"The complete created API gateway record.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/apiGateways","method":"post"},{"specification":"Advanced search or listing for ai_mall_backend_api_gateways. PATCH method supports filters on channel_id, route_base, domain, enabled (all schema fields), plus pagination and sort parameters. Excludes rows where deleted_at is not null unless explicitly requested. Returns paginated records, never referencing non-schema fields. Used for management, audit, and configuration navigation by admin/system actors.","description":"Allows admin/system users to query or browse api_mall_backend_api_gateways with flexible filters and pagination. Filters accepted: by channel_id, route_base, domain, enabled. Results are ordered, paginated, and only reference indexed schema fields, never derived or absent items. Records flagged as deleted (deleted_at non-null) are omitted unless specified. The operation supports management, audit, and operational dashboarding, using only fields actually defined in the gateway schema.","summary":"Lists or searches ai_mall_backend_api_gateways by schema field filter/pagination.","parameters":[],"requestBody":{"description":"Search and filter parameters for gateway records. Only schema fields allowed.","typeName":"IAiMallBackendApiGateways.IRequest"},"responseBody":{"description":"Paginated, filtered list of API gateway records.","typeName":"IPageIAiMallBackendApiGateways"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/apiGateways","method":"patch"},{"specification":"Retrieves an ai_mall_backend_api_gateways record by its id. Returns full schema record. If not found or soft-deleted (deleted_at non-null), error is returned.","description":"Fetches a single API gateway entry from ai_mall_backend_api_gateways by its primary key (id). Returns all available schema fields. Only returns the record if deleted_at is null. Otherwise, signals not found or gone. Used by admin/system users for gateway detail lookup, edit, or audit trailing.","summary":"Gets detailed API gateway record by id from ai_mall_backend_api_gateways.","parameters":[{"name":"id","description":"Gateway id (uuid) to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full gateway record on success, not-found error otherwise.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/apiGateways/{id}","method":"get"},{"specification":"Update the details of an API gateway in the ai_mall_backend_api_gateways table. The endpoint uses the gateway's ID (UUID) to locate the specific record. Permitted fields for update: channel_id, route_base, domain, enabled. Only these fields (and not deleted_at or any that do not exist in the schema) are referenced. The operation will not update created_at or updated_at directly, as these are managed by the system. The gateway can be enabled/disabled, and its routing or domain definition changed. This is used for operations staff/system admins (admin role), not for general users.","description":"This API endpoint allows system administrators to update an existing API gateway's base route, domain mapping, and enabled flag. The ai_mall_backend_api_gateways schema includes fields for identifying the gateway (id), defining which channel it belongs to (channel_id), the base route (route_base), domain, enabled flag, and timestamps. Only the specified fields can be updated—created_at, updated_at, and deleted_at are system-managed and not directly settable here. The API will return the updated api_gateway record. If the specified id does not exist or is soft-deleted (deleted_at is not null), a not found error is returned. All modifications are audit-logged to meet compliance requirements.","summary":"Update an API gateway in ai_mall_backend_api_gateways by id (admin only).","parameters":[{"name":"id","description":"UUID of the api gateway record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable fields for the API gateway: channel_id, route_base, domain, enabled.","typeName":"IAiMallBackendApiGateways.IUpdate"},"responseBody":{"description":"The updated API gateway record after applying changes.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/apiGateways/{id}","method":"put"},{"specification":"Soft-delete an API gateway entry in the ai_mall_backend_api_gateways table using the provided ID (UUID). The entity has a deleted_at field, which is set to the current timestamp when this operation is called. This operation does not fully remove the record from the database, preserving it for retention and audit. Access is restricted to admin users only.","description":"This endpoint enables administrators to perform a soft delete of an API gateway record, setting its deleted_at field to the current timestamp. The id parameter identifies the specific API gateway to be deleted. According to the ai_mall_backend_api_gateways schema, deleted_at is nullable—when set, the record is considered deleted and excluded from active gateway queries. The operation maintains compliance with audit and retention policies. Attempts to delete a non-existent or already deleted API gateway will result in an appropriate error.","summary":"Soft delete (deactivate) an API gateway by id in ai_mall_backend_api_gateways (admin only).","parameters":[{"name":"id","description":"UUID of the API gateway to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The soft-deleted API gateway record with its deleted_at field set.","typeName":"IAiMallBackendApiGateways"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/apiGateways/{id}","method":"delete"},{"specification":"Create a new tenant (brand, white label, or business subdivision) in the ai_mall_backend_tenants table. This operation is intended for system administration with the ability to define code, name, and archived status at creation. Timestamps are system-managed and not user-provided. No soft delete; archiving is via the archived flag, as per schema.","description":"Creates a new tenant entity in the ai_mall_backend_tenants table. Required fields for creation include code (slug), name (display name), and archived (boolean representing if the tenant is archived at creation or active). The entity also includes timestamps (created_at, updated_at), but these fields are managed by the system and are not part of the request body. There is no soft delete—archival is tracked by the archived flag rather than removal or deleted_at. If the code or name provided already exists (violates unique constraints), the API will reject the request. This endpoint is limited to admin role only, and all creation events are logged for audit.","summary":"Create a new tenant (admin only) in ai_mall_backend_tenants.","parameters":[],"requestBody":{"description":"Requires code, name, and archived status for the new tenant.","typeName":"IAiMallBackendTenants.ICreate"},"responseBody":{"description":"The created tenant entity including system-managed timestamp fields.","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"create","path":"/aiMallBackend/tenants","method":"post"},{"specification":"Retrieve a paginated, filterable list of tenant records from ai_mall_backend_tenants. Filtering and searching is by code, name, and archived status. This operation is intended for admin use only, as the tenant table contains sensitive business segmentation data. Sorting by created_at and name is supported; supports pagination (limit/offset), sort order, and search by code/name text filters. The response will include tenants even if archived; there is no deleted_at field. Results do not include related resource expansion, only flat tenant info.","description":"Provides a paginated and filterable list of tenant entities. Supported filters: code (slug/text match), name (text match), archived (exact value). Sorting options include created_at descending/ascending and name ascending. Pagination parameters include limit and offset or page/size. All results are limited to administrators, due to system segmentation sensitivity. Returns flat list of tenant records—does not join or expand related channels or resources. If no tenants match, returns empty data set. All queries are logged for audit.","summary":"List and filter tenants with pagination (admin only).","parameters":[],"requestBody":{"description":"Search, filter, sort, and pagination parameters for tenant listing.","typeName":"IPageIAiMallBackendTenants.IRequest"},"responseBody":{"description":"Paginated list of tenants with search metadata.","typeName":"IPageIAiMallBackendTenants"},"authorizationRole":"admin","name":"index","path":"/aiMallBackend/tenants","method":"patch"},{"specification":"Retrieve a single tenant entity by its id (UUID) from ai_mall_backend_tenants. Exposes all normal scalar fields. Intended only for admin users due to sensitive system configuration information. No deleted_at field—archived status is handled via archived flag.","description":"Fetches details for a specific tenant, including code, name, archived status, created_at, and updated_at. Uses the id path parameter (UUID primary key). Timestamps are included in the response. If no tenant with that id exists, an error is returned. Admin-only operation per business and architectural policy. Operation is logged for audit.","summary":"Get detailed info for a single tenant by id (admin only) from ai_mall_backend_tenants.","parameters":[{"name":"id","description":"UUID of the tenant to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete tenant entity record.","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"at","path":"/aiMallBackend/tenants/{id}","method":"get"},{"specification":"Update a tenant entity in the ai_mall_backend_tenants table. Only code, name, and archived can be changed by admin. System-managed timestamps (created_at, updated_at) are not user-settable. There is no deleted_at or soft-delete; archiving is via the archived boolean field. Admin only, all updates logged for compliance.","description":"This endpoint updates basic attributes of an existing tenant: code, name, and archived status. Timestamps are handled automatically. It does not support full deletion; to archive a tenant for compliance or offboarding, set archived to true. Update is by id (UUID). Attempting to update a non-existent tenant or using a code/name that would violate unique constraints will result in an error. Access is limited to admin role.","summary":"Update a tenant by id (admin only) in ai_mall_backend_tenants.","parameters":[{"name":"id","description":"UUID of the tenant to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields updatable for a tenant: code, name, archived.","typeName":"IAiMallBackendTenants.IUpdate"},"responseBody":{"description":"The tenant entity after update.","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"update","path":"/aiMallBackend/tenants/{id}","method":"put"},{"specification":"Archive (mark as archived) a tenant by id (UUID) in ai_mall_backend_tenants. This is not a soft-delete; the tenant remains in the database but is flagged as archived by the archived boolean field. There is no deleted_at or physical deletion for tenants—this meets compliance and audit retention requirements. Only admin users can perform this operation.","description":"Sets the archived field of the specified tenant (by id) to true. This endpoint does not remove the entity or flag it as deleted_at, per schema. The entity persists but is excluded from active system use. If the tenant is already archived, returns the entity unchanged. Operation is admin-only and logs the archival event for audit purposes. Attempting to archive a non-existent tenant results in an error.","summary":"Archive (set archived=true) a tenant by id (admin only) in ai_mall_backend_tenants.","parameters":[{"name":"id","description":"UUID of the tenant to archive.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Tenant entity after being archived (archived=true).","typeName":"IAiMallBackendTenants"},"authorizationRole":"admin","name":"erase","path":"/aiMallBackend/tenants/{id}","method":"delete"}],"components":{"schemas":{"IAiMallBackendChannels.ICreate":{"type":"object","properties":{"tenant_id":{"type":"string","format":"uuid","description":"The unique identifier for the tenant (brand, company, or business unit) this channel is associated with. Implements strict multi-tenancy as described in the Systematic schema and backend architecture requirements. This value ensures that each channel is uniquely scoped within a specific tenant context, and all business logic and routing for the channel is constrained accordingly.\n\nReferenced from the 'tenant_id' column in the Prisma schema. Must be a valid UUID referencing an existing tenant entity. Required on creation."},"code":{"type":"string","description":"Unique programmatic code or slug for this channel (e.g., 'web', 'mobile', 'partner1'). Used for routing, API lookups, onboarding, and channel registry. Must be unique across all channels. Ensures the channel can be unambiguously identified in business logic, onboarding, and configuration operations.\n\nDirectly maps to the 'code' column in the ai_mall_backend_channels schema. Required. Unicode string, usually short, lower-case with underscores."},"name":{"type":"string","description":"Human-readable, business-facing display name for the channel (e.g., 'Mobile App Channel (2025)'). Used for admin UI, dashboards, reporting, and human reference across platform operations. Not intended for use as a slug/code.\n\nReferenced from the 'name' column in the Prisma schema. Required. Must be unique in combination with tenant_id. Should be descriptive but not duplicated in channel configuration."},"enabled":{"type":"boolean","description":"Whether this channel is logically enabled/active for routing, onboarding, and access. Used for dynamic composition of the platform across different user touchpoints. When false, business logic, UI, and routing will typically exclude this channel from active use.\n\nDirectly mapped from the 'enabled' column in the ai_mall_backend_channels schema. Required."}},"required":["tenant_id","code","name","enabled"],"description":"Represents the required information to create a new channel (business unit entry) in the ai_mall_backend_channels table, as per the unified platform channel registry in the backend architecture. Each channel is owned by a tenant, identified by a unique code, has a human-friendly name, and an enable/disable flag for composable business logic. All required fields map 1:1 to the Prisma schema columns and their business role descriptions. Used for adding web apps, mobile apps, or partner integrations to the multi-tenant platform. No extra/invisible fields allowed."},"IAiMallBackendChannels":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID for this channel record. Unique per channel, and referenced in all configuration, routing, and audit trails."},"tenant_id":{"type":"string","format":"uuid","description":"The owning tenant's unique identifier. Represents the parent brand, business unit, or client. Enforces multi-tenancy segregation."},"code":{"type":"string","description":"Short unique code/slug (e.g., 'web', 'mobile'). Used for routing, onboarding, configuration lookup. Guaranteed unique per platform instance."},"name":{"type":"string","description":"Display name for admins/UIs. Human-friendly reference for reporting, dashboarding, or platform setup."},"enabled":{"type":"boolean","description":"Active flag. True when channel is available for business logic and customer onboarding. False disables routing, search, and onboarding."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (RFC 3339+timezone) when channel was created. Used in audit trail and change history."},"updated_at":{"type":"string","format":"date-time","description":"Last modification time (RFC 3339+timezone). Updated on any change for audit, conflict resolution, and cache purging."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp. Null if the channel is active; otherwise, records the deletion event for audit/compliance. Used to hide channels from daily operations while retaining full auditability."},{"type":"null","format":"date-time","description":"Soft deletion timestamp. Null if the channel is active; otherwise, records the deletion event for audit/compliance. Used to hide channels from daily operations while retaining full auditability."}],"description":"Soft deletion timestamp. Null if the channel is active; otherwise, records the deletion event for audit/compliance. Used to hide channels from daily operations while retaining full auditability."}},"required":["id","tenant_id","code","name","enabled","created_at","updated_at"],"description":"Represents an ai_mall_backend_channels entity (multi-tenant business channel) as described in the unified platform architecture documentation and Prisma schema. All properties directly reflect the schema columns for full runtime observability and configuration. Used in all admin, onboarding, API gateway, and channel deployment flows. Does not include any fields not present in the schema. Channels define the operational scope for all business and customer-facing features."},"IAiMallBackendChannels.IRequest":{"type":"object","properties":{"tenant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter: Restrict search to channels belonging to a specific tenant (multi-tenant context). Supports UUID of ai_mall_backend_tenants.id as described in schema column comment."},{"type":"null","format":"uuid","description":"Optional filter: Restrict search to channels belonging to a specific tenant (multi-tenant context). Supports UUID of ai_mall_backend_tenants.id as described in schema column comment."}],"description":"Optional filter: Restrict search to channels belonging to a specific tenant (multi-tenant context). Supports UUID of ai_mall_backend_tenants.id as described in schema column comment."},"code":{"oneOf":[{"type":"string","description":"Optional filter: Only return channels whose code/slug matches this string (exact or partial depending on backend implementation)."},{"type":"null","description":"Optional filter: Only return channels whose code/slug matches this string (exact or partial depending on backend implementation)."}],"description":"Optional filter: Only return channels whose code/slug matches this string (exact or partial depending on backend implementation)."},"name":{"oneOf":[{"type":"string","description":"Optional filter: Restrict to channels whose display name matches this value (supports partial or fuzzy if implemented). Schema column: name."},{"type":"null","description":"Optional filter: Restrict to channels whose display name matches this value (supports partial or fuzzy if implemented). Schema column: name."}],"description":"Optional filter: Restrict to channels whose display name matches this value (supports partial or fuzzy if implemented). Schema column: name."},"enabled":{"oneOf":[{"type":"boolean","description":"Optional filter: Only include channels based on enabled/active flag (true for enabled, false for disabled)."},{"type":"null","description":"Optional filter: Only include channels based on enabled/active flag (true for enabled, false for disabled)."}],"description":"Optional filter: Only include channels based on enabled/active flag (true for enabled, false for disabled)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Include only channels created at or after this timestamp (RFC3339/ISO8601 UTC+zone). Not a direct schema column, but standard for temporal filtering."},{"type":"null","format":"date-time","description":"Optional filter: Include only channels created at or after this timestamp (RFC3339/ISO8601 UTC+zone). Not a direct schema column, but standard for temporal filtering."}],"description":"Optional filter: Include only channels created at or after this timestamp (RFC3339/ISO8601 UTC+zone). Not a direct schema column, but standard for temporal filtering."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Only include channels created before or at this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Only include channels created before or at this timestamp."}],"description":"Optional filter: Only include channels created before or at this timestamp."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Restrict to channels updated at/after this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Restrict to channels updated at/after this timestamp."}],"description":"Optional filter: Restrict to channels updated at/after this timestamp."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Restrict to channels updated at/or before this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Restrict to channels updated at/or before this timestamp."}],"description":"Optional filter: Restrict to channels updated at/or before this timestamp."},"include_deleted":{"oneOf":[{"type":"boolean","description":"If true, return both active and soft-deleted channels. If false or not set, return only active (deleted_at is null). Not a schema column but standard in audit/compliance filters."},{"type":"null","description":"If true, return both active and soft-deleted channels. If false or not set, return only active (deleted_at is null). Not a schema column but standard in audit/compliance filters."}],"description":"If true, return both active and soft-deleted channels. If false or not set, return only active (deleted_at is null). Not a schema column but standard in audit/compliance filters."},"page":{"oneOf":[{"type":"integer","description":"Optional: Page number for pagination (1-based). Returns the requested page from paginated result set."},{"type":"null","description":"Optional: Page number for pagination (1-based). Returns the requested page from paginated result set."}],"description":"Optional: Page number for pagination (1-based). Returns the requested page from paginated result set."},"limit":{"oneOf":[{"type":"integer","description":"Optional: Limit number of records per page (pagination)."},{"type":"null","description":"Optional: Limit number of records per page (pagination)."}],"description":"Optional: Limit number of records per page (pagination)."}},"description":"Request filter/query parameters for paginated search/listing of ai_mall_backend_channels records. Supports all relevant queryable fields as defined in the schema—including tenant_id, code (slug), name, enabled flag, and temporal windows for created_at/updated_at. Designed for admins to efficiently search, filter, and audit large-scale channel registries in the platform. Includes optional pagination and audit-style controls (include_deleted). Used by admin frontend and integration automation.","required":[]},"IAiMallBackendChannels.IUpdate":{"type":"object","properties":{"tenant_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) New tenant (business unit/brand) for this channel, updating multi-tenancy context. Changing this should be rare and requires strict audit in production. Must match ai_mall_backend_tenants.id."},{"type":"null","format":"uuid","description":"(Optional) New tenant (business unit/brand) for this channel, updating multi-tenancy context. Changing this should be rare and requires strict audit in production. Must match ai_mall_backend_tenants.id."}],"description":"(Optional) New tenant (business unit/brand) for this channel, updating multi-tenancy context. Changing this should be rare and requires strict audit in production. Must match ai_mall_backend_tenants.id."},"code":{"oneOf":[{"type":"string","description":"(Optional) Updated channel code/slug (may require platform-wide migration if used for routing/onboarding). String per schema—strictly unique."},{"type":"null","description":"(Optional) Updated channel code/slug (may require platform-wide migration if used for routing/onboarding). String per schema—strictly unique."}],"description":"(Optional) Updated channel code/slug (may require platform-wide migration if used for routing/onboarding). String per schema—strictly unique."},"name":{"oneOf":[{"type":"string","description":"(Optional) Updated display name for admin/business reporting (e.g., 'Web (2026 Edition)'). Schema field: name."},{"type":"null","description":"(Optional) Updated display name for admin/business reporting (e.g., 'Web (2026 Edition)'). Schema field: name."}],"description":"(Optional) Updated display name for admin/business reporting (e.g., 'Web (2026 Edition)'). Schema field: name."},"enabled":{"oneOf":[{"type":"boolean","description":"(Optional) Change logical activation status for this channel. True for active, false for suspended. Ref: 'enabled' column in schema."},{"type":"null","description":"(Optional) Change logical activation status for this channel. True for active, false for suspended. Ref: 'enabled' column in schema."}],"description":"(Optional) Change logical activation status for this channel. True for active, false for suspended. Ref: 'enabled' column in schema."}},"description":"Updateable fields for an ai_mall_backend_channels entity. Each property is optional (schema allows partial update); updates are only applied if set. Fields map 1:1 to schema columns, and do not include hidden/audit fields. Use in admin channel ops for code renaming, enabling/disabling, or tenant migration.","required":[]},"IPageIAiMallBackendChannels":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendChannels"},"description":"A list of paginated ai_mall_backend_channels entities resulting from a search, filter, or index operation. Each item is a fully-detailed channel as defined in business logic/documents."}},"required":["pagination","data"],"description":"A paginated response containing a list of ai_mall_backend_channels records, along with standard pagination metadata as per business requirements and architecture. Used for efficient, operable navigation of large channel registries in admin, audit, and platform onboarding scenarios."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"Current page number (index, 1-based or 0-based depending on API design). Indicates which chunk of results is being delivered."},"limit":{"type":"integer","format":"uint32","description":"Maximum number of records returned per page; enables consistent listing sizes and navigation."},"records":{"type":"integer","format":"uint32","description":"Total number of records that exist/search-matched in the database; allows frontends to compute max pages."},"pages":{"type":"integer","format":"uint32","description":"Total number of pages available, given the limit and total matching records."}},"required":["current","limit","records","pages"],"description":"Standard pagination metadata type, reused across all paginated result containers. Used in mall backend APIs for chunked record retrieval and operational navigation."},"IAiMallBackendSections.ICreate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"The UUID of the parent channel for this section (link to ai_mall_backend_channels.id). Implements modular content structure—sections are always scoped to a specific channel (web, mobile, etc.).\n\nRequired per schema. Must reference an existing enabled channel."},"code":{"type":"string","description":"Short unique code (slug) for programmatic reference to this section (e.g., 'main_banner', 'promo_1'). Used to configure routing/composition for a modular channel experience. Required and must be unique per channel."},"name":{"type":"string","description":"Human-friendly display name for the section, as visible to admins/site editors. Typically used in dashboards/UIs and business mapping. Schema column: 'name'.\n\nRequired; not duplicated for each channel."},"enabled":{"type":"boolean","description":"Logical enabled/activation flag. If true, section is included in business logic, rendering, and business workflows for the channel. When false, excluded from live view and automation. Implements per-section scheduling/activation per modular platform requirements."}},"required":["channel_id","code","name","enabled"],"description":"Represents data for creating a new ai_mall_backend_sections record (modular, channel-scoped site section). All required properties per schema, as needed in dynamic UI/business composition modules. Used to register banners, product carousels, promo areas, etc. under a channel, ensuring configurable and extensible business layout."},"IAiMallBackendSections":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID for the section record. Uniquely identifies the section across the platform for update, query, assignment, and business logic routing."},"channel_id":{"type":"string","format":"uuid","description":"Foreign key to ai_mall_backend_channels.id—the parent business channel in which this section exists. Critical for enforcing modular segregation and channel composition at runtime."},"code":{"type":"string","description":"Short programmatic code/slug designating this section (e.g., 'promo_top', 'main_carousel'). Must be unique for each channel. Used by admin, UI, automation, and API onboarding."},"name":{"type":"string","description":"Display name for business, admin, and UI editors. Human-readable, typically mapped to platform/cms UX tools."},"enabled":{"type":"boolean","description":"Section enabled/active status—true if in use, false if hidden/disabled. Central for scheduling, preview, or UI experimentation."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when this section was created (auditing, analytics, and change control per compliance policy)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for most recent change to the section entity (audit, analytics, cache updates)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp—null if section active; otherwise set on archive/removal (required for regulatory retention policy)."},{"type":"null","format":"date-time","description":"Soft deletion timestamp—null if section active; otherwise set on archive/removal (required for regulatory retention policy)."}],"description":"Soft deletion timestamp—null if section active; otherwise set on archive/removal (required for regulatory retention policy)."}},"required":["id","channel_id","code","name","enabled","created_at","updated_at"],"description":"Represents the full ai_mall_backend_sections entity, corresponding 1:1 with the database row in modular site/channel composition management. Used in all detail, paged list, and edit/result displays in admin, UI composition, and workflow. All fields reflect the business requirements and normalization described in the backend requirements and Prisma column-level documentation."},"IAiMallBackendSections.IRequest":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter: restricts search/results to sections of a given channel (UUID per ai_mall_backend_channels.id). Used for channel-centric UI and business ops."},{"type":"null","format":"uuid","description":"Optional filter: restricts search/results to sections of a given channel (UUID per ai_mall_backend_channels.id). Used for channel-centric UI and business ops."}],"description":"Optional filter: restricts search/results to sections of a given channel (UUID per ai_mall_backend_channels.id). Used for channel-centric UI and business ops."},"code":{"oneOf":[{"type":"string","description":"Optional filter: filter by section code (slug)."},{"type":"null","description":"Optional filter: filter by section code (slug)."}],"description":"Optional filter: filter by section code (slug)."},"name":{"oneOf":[{"type":"string","description":"Optional filter/design-time search by display name (fuzzy, exact, or prefix as per backend implementation)."},{"type":"null","description":"Optional filter/design-time search by display name (fuzzy, exact, or prefix as per backend implementation)."}],"description":"Optional filter/design-time search by display name (fuzzy, exact, or prefix as per backend implementation)."},"enabled":{"oneOf":[{"type":"boolean","description":"Optional filter to restrict results to sections enabled/active (true) or only disabled (false)."},{"type":"null","description":"Optional filter to restrict results to sections enabled/active (true) or only disabled (false)."}],"description":"Optional filter to restrict results to sections enabled/active (true) or only disabled (false)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Include only sections created after this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Include only sections created after this timestamp."}],"description":"Optional filter: Include only sections created after this timestamp."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Include only sections created before this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Include only sections created before this timestamp."}],"description":"Optional filter: Include only sections created before this timestamp."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Only results updated after this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Only results updated after this timestamp."}],"description":"Optional filter: Only results updated after this timestamp."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional filter: Only results updated before this timestamp."},{"type":"null","format":"date-time","description":"Optional filter: Only results updated before this timestamp."}],"description":"Optional filter: Only results updated before this timestamp."},"include_deleted":{"oneOf":[{"type":"boolean","description":"If true, returned results may include soft-deleted sections (where deleted_at is not null). Default false."},{"type":"null","description":"If true, returned results may include soft-deleted sections (where deleted_at is not null). Default false."}],"description":"If true, returned results may include soft-deleted sections (where deleted_at is not null). Default false."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (1-based, as per platform conventions)."},{"type":"null","description":"Page number for pagination (1-based, as per platform conventions)."}],"description":"Page number for pagination (1-based, as per platform conventions)."},"limit":{"oneOf":[{"type":"integer","description":"Records per page (page size). Typically 10, 20, 100, etc. depending on admin frontend config."},{"type":"null","description":"Records per page (page size). Typically 10, 20, 100, etc. depending on admin frontend config."}],"description":"Records per page (page size). Typically 10, 20, 100, etc. depending on admin frontend config."}},"description":"Request parameters for paginated, filtered, or advanced search/listing of ai_mall_backend_sections (modular business sections). Supports searching by schema-defined fields, basic property filters, time windows, and soft/hard deletion compliance. Operates as the parameter bag for admin, editorial, and ops/business tools.","required":[]},"IAiMallBackendSections.IUpdate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) of the channel to which this section belongs. Used to reassign or update the parent channel for this section.\n\nReferences the 'channel_id' property from the ai_mall_backend_sections schema. Required unless business logic enforces channel immutability."},"code":{"type":"string","description":"Code or slug uniquely identifying this section within the channel. Used for programmatic lookups, referencing the 'code' property in ai_mall_backend_sections. Not null."},"name":{"type":"string","description":"The display name of the section. Intended for admin interfaces or business users, not programmatic logic. Draws from the 'name' column of the ai_mall_backend_sections schema."},"enabled":{"type":"boolean","description":"Logical activation flag for the section. Indicates whether the section is active and visible in the business channel, matching the 'enabled' field in ai_mall_backend_sections. Required for robust business scheduling and modular UI composition."}},"description":"Update object for ai_mall_backend_sections. Allows mutation of the 'channel_id', 'code', 'name', and 'enabled' fields. This type is based directly on the ai_mall_backend_sections Prisma schema, which covers atomic updates for modular, dynamic business sections and is fully compliant with 3NF and the requirement for dynamic UI composition.\n\nAll properties reference strictly schema-defined attributes.","required":[]},"IPageIAiMallBackendSections":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendSections"},"description":"Array of modular section objects (full detail) returned for paged/indexed result listing or advanced search."}},"required":["pagination","data"],"description":"Paged result set containing modular section entities (ai_mall_backend_sections) and standard page navigation metadata for admin/ops workflows."},"IAiMallBackendConfigurations.ICreate":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional channel UUID for the configuration. If provided, restricts the configuration to that channel context (referencing the 'channel_id' in ai_mall_backend_configurations). Null means global config."},{"type":"null"}],"description":"Optional channel UUID for the configuration. If provided, restricts the configuration to that channel context (referencing the 'channel_id' in ai_mall_backend_configurations). Null means global config."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional section UUID for which this configuration applies, referencing 'section_id' in ai_mall_backend_configurations. Null indicates channel-wide or global configuration."},{"type":"null"}],"description":"Optional section UUID for which this configuration applies, referencing 'section_id' in ai_mall_backend_configurations. Null indicates channel-wide or global configuration."},"name":{"type":"string","description":"Unique configuration item name (string). Implements the 'name' column in ai_mall_backend_configurations. Must be unique within the specified channel/section scope and is required."},"value":{"type":"string","description":"Atomic config value for this item. Reference for the 'value' field in ai_mall_backend_configurations. Stored as a string for maximum flexibility."},"description":{"oneOf":[{"type":"string","description":"Business/admin-facing description for this config row. Documents human intent for audit, never used in production logic. Directly maps to the 'description' column in ai_mall_backend_configurations."},{"type":"null"}],"description":"Business/admin-facing description for this config row. Documents human intent for audit, never used in production logic. Directly maps to the 'description' column in ai_mall_backend_configurations."}},"required":["name","value"],"description":"Object for creating a new atomic configuration row in ai_mall_backend_configurations as per 3NF. Fields correspond to the Prisma schema, supporting configuration at the channel and/or section scope. System-managed fields like created_at/updated_at are handled automatically."},"IAiMallBackendConfigurations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID uniquely identifying each configuration row, corresponding to 'id' in ai_mall_backend_configurations."},"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the business channel (optional), if this config is channel-specific. Follows 'channel_id' in the schema."},{"type":"null"}],"description":"UUID of the business channel (optional), if this config is channel-specific. Follows 'channel_id' in the schema."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the business section for scoping this config, if not channel-wide. 'section_id' field from schema."},{"type":"null"}],"description":"UUID of the business section for scoping this config, if not channel-wide. 'section_id' field from schema."},"name":{"type":"string","description":"Unique configuration item name. Visible for filtering and lookup; must match 'name' in ai_mall_backend_configurations."},"value":{"type":"string","description":"Atomic config value as plain string (see 'value' field in the schema). Could be a number, color-code, JSON, etc., as long as stored as string."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable description. Used for admin clarity, never for business logic execution. Implements 'description' schema field."},{"type":"null"}],"description":"Optional human-readable description. Used for admin clarity, never for business logic execution. Implements 'description' schema field."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the configuration row. Populated by RDBMS as 'created_at' in ai_mall_backend_configurations, required for audit trail."},"updated_at":{"type":"string","format":"date-time","description":"Last-modification timestamp, 'updated_at' column in ai_mall_backend_configurations schema. Not null."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete timestamp. If set, this configuration is inactive/archived but retained for audit, according to 'deleted_at' in ai_mall_backend_configurations."},{"type":"null"}],"description":"Soft-delete timestamp. If set, this configuration is inactive/archived but retained for audit, according to 'deleted_at' in ai_mall_backend_configurations."}},"required":["id","name","value","created_at","updated_at"],"description":"Full entity schema for ai_mall_backend_configurations, matching the atomic, 3NF-compliant configuration rows. Suitable for reading all config entities; fields correlate exactly to the schema's columns and are used for compliance, search, and audit."},"IAiMallBackendConfigurations.IRequest":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by channel ID (uuid). Used when searching for configs that apply to a specific business channel."},{"type":"null"}],"description":"Optional filter by channel ID (uuid). Used when searching for configs that apply to a specific business channel."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by section ID. Used for finding configs attached to a UI section."},{"type":"null"}],"description":"Optional filter by section ID. Used for finding configs attached to a UI section."},"name":{"oneOf":[{"type":"string","description":"Filter/search by exact or partial configuration item name. If null, not applied as filter."},{"type":"null"}],"description":"Filter/search by exact or partial configuration item name. If null, not applied as filter."},"value":{"oneOf":[{"type":"string","description":"Filter by value (supports partial/search in some business logic). If null, not filtered."},{"type":"null"}],"description":"Filter by value (supports partial/search in some business logic). If null, not filtered."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for configs created after this timestamp (ISO 8601)."},{"type":"null"}],"description":"Filter for configs created after this timestamp (ISO 8601)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for configs created before this timestamp (ISO 8601)."},{"type":"null"}],"description":"Filter for configs created before this timestamp (ISO 8601)."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for updated_at >= timestamp."},{"type":"null"}],"description":"Filter for updated_at >= timestamp."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for updated_at <= timestamp."},{"type":"null"}],"description":"Filter for updated_at <= timestamp."}},"description":"Request object for paginated/filtering/searching ai_mall_backend_configurations, directly referencing only those fields that exist in the schema. All filter fields are optional and are used for advanced business logic in searching configuration records.","required":[]},"IPageIAiMallBackendConfigurations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging metadata as defined in the IPage standard type, used for paginated API responses."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendConfigurations"},"description":"Array of configuration entities on the current page, matching the IAiMallBackendConfigurations schema."}},"required":["pagination","data"],"description":"Paginated response structure for ai_mall_backend_configurations collections, conforming to the IPage<T> convention. Used to wrap lists of configuration entities for APIs that support paging, filtering, and sorting."},"IAiMallBackendConfigurations.IUpdate":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. The channel UUID for this configuration row; can be updated if the configuration is being re-scoped. References the 'channel_id' in ai_mall_backend_configurations."},{"type":"null"}],"description":"Optional. The channel UUID for this configuration row; can be updated if the configuration is being re-scoped. References the 'channel_id' in ai_mall_backend_configurations."},"section_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. The section UUID for this config; can be updated if reconfiguring the config's scope. Matches 'section_id' in ai_mall_backend_configurations."},{"type":"null"}],"description":"Optional. The section UUID for this config; can be updated if reconfiguring the config's scope. Matches 'section_id' in ai_mall_backend_configurations."},"name":{"type":"string","description":"Configuration item name; updatable for administrative changes only when uniqueness constraints allow it. Must match 'name' in ai_mall_backend_configurations."},"value":{"type":"string","description":"Updated value for the configuration item. All types stored as string (see ai_mall_backend_configurations schema 'value')."},"description":{"oneOf":[{"type":"string","description":"Optional new description for this config, if business/admin comments are updated. Based on 'description' in ai_mall_backend_configurations schema."},{"type":"null"}],"description":"Optional new description for this config, if business/admin comments are updated. Based on 'description' in ai_mall_backend_configurations schema."}},"description":"Update schema for ai_mall_backend_configurations entity. Used to modify atomic fields according to 3NF policy—scope, value, descriptive metadata. All updates correspond to columns in the schema.","required":[]},"IAiMallBackendApiGateways.ICreate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"The UUID of the associated channel for this API gateway. Required per the ai_mall_backend_api_gateways schema."},"route_base":{"type":"string","description":"Base URI path for this gateway (e.g. '/api/v1'). Implements the 'route_base' field in ai_mall_backend_api_gateways."},"domain":{"type":"string","description":"Domain string (FQDN or subdomain) for this gateway's endpoint as per ai_mall_backend_api_gateways schema."},"enabled":{"type":"boolean","description":"Flag for temporary suspension or reactivation of the gateway (corresponds to 'enabled' in ai_mall_backend_api_gateways)."}},"required":["channel_id","route_base","domain","enabled"],"description":"Object for creation of API gateway, matching atomic fields in ai_mall_backend_api_gateways. Does not allow setting timestamps or deleted_at (system managed)."},"IAiMallBackendApiGateways":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID of the API gateway record from ai_mall_backend_api_gateways."},"channel_id":{"type":"string","format":"uuid","description":"Associated channel's UUID for this gateway (must match a valid channel)."},"route_base":{"type":"string","description":"Base URI route for this gateway (see 'route_base' column in ai_mall_backend_api_gateways schema)."},"domain":{"type":"string","description":"Hostname or domain for this gateway endpoint. Enforced unique on (route_base, domain)."},"enabled":{"type":"boolean","description":"Flag indicating whether gateway is live (enabled), matches 'enabled' in ai_mall_backend_api_gateways."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this gateway was created. System-managed (from 'created_at' in ai_mall_backend_api_gateways schema)."},"updated_at":{"type":"string","format":"date-time","description":"Last time this gateway was updated. System-managed column from schema ('updated_at')."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for soft deletion, if the gateway is deactivated or removed (nullable, from 'deleted_at' in schema)."},{"type":"null"}],"description":"Timestamp for soft deletion, if the gateway is deactivated or removed (nullable, from 'deleted_at' in schema)."}},"required":["id","channel_id","route_base","domain","enabled","created_at","updated_at"],"description":"Schema for ai_mall_backend_api_gateways entity, including all atomic/entity fields for gateway registry. This is used for reading, writing, and auditing API gateway data. Follows strict 3NF; never allows illegitimate or derived fields."},"IAiMallBackendApiGateways.IRequest":{"type":"object","properties":{"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by associated channel id (uuid). Used for searching gateways by their business channel assignment."},{"type":"null"}],"description":"Optional filter by associated channel id (uuid). Used for searching gateways by their business channel assignment."},"route_base":{"oneOf":[{"type":"string","description":"Filter/search by base route value, e.g. '/api/v1'."},{"type":"null"}],"description":"Filter/search by base route value, e.g. '/api/v1'."},"domain":{"oneOf":[{"type":"string","description":"Optional. Filter by domain string (supports partial match for search scenarios)."},{"type":"null"}],"description":"Optional. Filter by domain string (supports partial match for search scenarios)."},"enabled":{"oneOf":[{"type":"boolean","description":"Filter by gateway enabled status (true/false/null for both)."},{"type":"null"}],"description":"Filter by gateway enabled status (true/false/null for both)."}},"description":"Request object for searching/filtering API gateways, supporting advanced search in ai_mall_backend_api_gateways registry. Only schema fields are included in filter criteria.","required":[]},"IPageIAiMallBackendApiGateways":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendApiGateways"}}},"required":["pagination","data"],"description":"Paginated result container for listing ai_mall_backend_api_gateways records, as required by channel-extensible API management. This type is used for responses that need paging over multiple API gateway records, and includes full paging metadata plus an array of API gateway objects. All fields and structure are rooted in system-wide audit and gateway registry requirements (see architecture docs and schema)."},"IAiMallBackendApiGateways.IUpdate":{"type":"object","properties":{"channel_id":{"type":"string","format":"uuid","description":"Foreign key to the associated business channel. References ai_mall_backend_channels.id in the database schema. Determines which channel this API gateway is registered under."},"route_base":{"type":"string","description":"Base routing path for this gateway (e.g., /api/v1, /mobile/). Per schema, this field is required to establish explicit API endpoints and is used for API Gateway routing and registration."},"domain":{"type":"string","description":"Domain or fully-qualified domain name mapped to this gateway, e.g., api.mall.com. All API requests routed through this gateway use this domain. This ensures correct route->domain mapping and is unique per gateway."},"enabled":{"type":"boolean","description":"Enable or suspend the gateway. True if the gateway should actively receive requests; false otherwise. Used for rapid suspension/reactivation of endpoints (see compliance requirements for audit and emergency controls)."}},"required":["channel_id","route_base","domain","enabled"],"description":"Request type for updating ai_mall_backend_api_gateways records. This structure matches the updatable fields for API gateways as defined by the schema and business logic—includes channel association, route path, domain, and enabled flag. All fields must match schema references and constraints. No other fields are accepted."},"IAiMallBackendTenants.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"The unique code/slug for identifying the tenant/brand/sub-platform at onboarding. Used for routing, tenant isolation, label reference, and API scoping. Must not duplicate other tenant codes in the system."},"name":{"type":"string","description":"Human-readable brand or business name for the tenant, used for platform references, reporting, and admin displays. Must be unique within the system (see schema constraints)."},"archived":{"type":"boolean","description":"If true, marks this tenant as archived upon creation, meaning the tenant is not live or accessible to customers (for compliance or initial setup scenarios). False means active tenant."}},"required":["code","name","archived"],"description":"Request body for creating a new business tenant in ai_mall_backend_tenants. Covers all required onboarding fields: unique code (slug), name (display label), and whether tenant is initially active or archived. All properties correspond to atomic fields on the Prisma schema for multi-tenancy management."},"IAiMallBackendTenants":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key; unique identifier for the tenant entity, as assigned in ai_mall_backend_tenants. Used for all entity references, API lookups, and auditing."},"code":{"type":"string","description":"Business-wide unique slug/code representing the logical tenant (brand, sub-platform, or business unit). Enforced as unique per schema, and critical for routing, UI partitioning, and reporting."},"name":{"type":"string","description":"Human-readable name for this tenant. Must be globally unique within the system."},"archived":{"type":"boolean","description":"Boolean indicating whether the tenant is currently archived or active. Archiving a tenant disables it on the platform but does not remove records. Fulfills compliance and regulatory rules for brand/partner offboarding."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the tenant record was created (immutable). Used in onboarding, audit, billing, and compliance processes."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last modification to the tenant record. Enables precise audit trail and change-replay. Always updated on modification."}},"required":["id","code","name","archived","created_at","updated_at"],"description":"The core tenant entity type (ai_mall_backend_tenants). Includes all fields from the Prisma schema: id, code, name, archived, created_at, updated_at. Covers the requirements for global multi-tenancy, platform segmentation, and compliance-driven auditability. This object is returned on detail read, index, or update."},"IPageIAiMallBackendTenants.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Optional: filter for tenants matching this code (business slug, unique per system). Enables searching for brands/sub-platforms by code."},"name":{"type":"string","description":"Optional: filter for tenants with this human-readable name. Text search, case-insensitive, matches schema constraints for uniqueness in real data."},"archived":{"type":"boolean","description":"Optional: include only tenants with this archived status. True for archived brands/partners, false for only active tenants."},"page":{"type":"integer","format":"uint32","description":"Page number to start the paged listing from; for pagination control."},"limit":{"type":"integer","format":"uint32","description":"Maximum number of tenant records to return per page. Defaults typically enforced by API if omitted."},"sort_by":{"oneOf":[{"const":"created_at","description":"Sort key for ordering tenant list results. Allows 'created_at' (default) or 'name'. Only schema/endpoint-supported fields."},{"const":"name","description":"Sort key for ordering tenant list results. Allows 'created_at' (default) or 'name'. Only schema/endpoint-supported fields."}],"description":"Sort key for ordering tenant list results. Allows 'created_at' (default) or 'name'. Only schema/endpoint-supported fields."},"sort_order":{"oneOf":[{"const":"asc","description":"Order of the sort key. 'asc' (ascending, e.g., earliest first, or A-Z); 'desc' (descending, e.g., latest first, or Z-A)."},{"const":"desc","description":"Order of the sort key. 'asc' (ascending, e.g., earliest first, or A-Z); 'desc' (descending, e.g., latest first, or Z-A)."}],"description":"Order of the sort key. 'asc' (ascending, e.g., earliest first, or A-Z); 'desc' (descending, e.g., latest first, or Z-A)."}},"description":"Request body/schema for paginated, filterable listing of ai_mall_backend_tenants for admin/system users. Allows filtering by code, name, active/archived status, as well as paging and sort key/order. Extends the standard paginated search/request pattern for operational backend UIs.","required":[]},"IPageIAiMallBackendTenants":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiMallBackendTenants"}}},"required":["pagination","data"],"description":"Paginated response type for ai_mall_backend_tenants table. Contains page/lister metadata and the tenant records for each page. Used when retrieving lists of business tenants to the admin UI or external platform dashboard in a paginated fashion."},"IAiMallBackendTenants.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Updatable slug/code for the tenant. Must remain unique across all occupants in the system and compliant with schema uniqueness rules."},"name":{"type":"string","description":"Updatable human-readable tenant name, for dashboard and business references. Uniqueness constraint enforced by schema."},"archived":{"type":"boolean","description":"Archived flag, set to true to archive tenant (offboarding, compliance) or false to reactivate. No deletion is possible, only archival supported."}},"required":["code","name","archived"],"description":"Update type for ai_mall_backend_tenants, matching only those fields which are updatable after initial creation: code, name, archived. Intended for admin APIs that support brand/tenant update and archival, ensuring all compliance and auditability requirements are met."}},"authorization":[{"name":"customer","description":"End users who browse, purchase, and interact with the mall. Can register, authenticate, make orders, manage favorites, write reviews, and access personalized AI services."},{"name":"seller","description":"Vendors/partners who manage product listings, monitor sales, view analytics, fulfill orders, respond to reviews and inquiries, and utilize AI-powered sales/marketing tools. Authenticate via seller APIs."},{"name":"admin","description":"Administrators with full access to all system functions, user management, compliance reporting, configuration, AI training, and audit logging. Authenticate via admin APIs, manage permissions and business rules."},{"name":"ai-agent","description":"Internal service account representing AI modules responsible for recommendations, analytics, sentiment analysis, and automation tasks. Authenticates via service APIs and restricted to delegated intelligent operations."}]}},"created_at":"2025-07-28T08:34:20.497Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1685782,"input":{"total":1596729,"cached":3840},"output":{"total":89053,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}}]