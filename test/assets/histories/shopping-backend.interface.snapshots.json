[{"event":{"type":"interfaceStart","created_at":"2025-07-23T07:04:52.889Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceEndpoints","endpoints":[{"path":"/aiShop/channels","method":"patch"},{"path":"/aiShop/channels/{id}","method":"get"},{"path":"/aiShop/channels","method":"post"},{"path":"/aiShop/channels/{id}","method":"put"},{"path":"/aiShop/channels/{id}","method":"delete"},{"path":"/aiShop/sections","method":"patch"},{"path":"/aiShop/sections/{id}","method":"get"},{"path":"/aiShop/sections","method":"post"},{"path":"/aiShop/sections/{id}","method":"put"},{"path":"/aiShop/sections/{id}","method":"delete"},{"path":"/aiShop/configurations","method":"patch"},{"path":"/aiShop/configurations/{id}","method":"get"},{"path":"/aiShop/configurations","method":"post"},{"path":"/aiShop/configurations/{id}","method":"put"},{"path":"/aiShop/configurations/{id}","method":"delete"},{"path":"/aiShop/categories","method":"patch"},{"path":"/aiShop/categories/{id}","method":"get"},{"path":"/aiShop/categories","method":"post"},{"path":"/aiShop/categories/{id}","method":"put"},{"path":"/aiShop/categories/{id}","method":"delete"},{"path":"/aiShop/files","method":"patch"},{"path":"/aiShop/files/{id}","method":"get"},{"path":"/aiShop/files","method":"post"},{"path":"/aiShop/files/{id}","method":"put"},{"path":"/aiShop/files/{id}","method":"delete"},{"path":"/aiShop/auditLogs","method":"patch"},{"path":"/aiShop/auditLogs/{id}","method":"get"},{"path":"/aiShop/auditLogs","method":"post"},{"path":"/aiShop/auditLogs/{id}","method":"put"},{"path":"/aiShop/auditLogs/{id}","method":"delete"},{"path":"/aiShop/customers","method":"patch"},{"path":"/aiShop/customers/{id}","method":"get"},{"path":"/aiShop/customers","method":"post"},{"path":"/aiShop/customers/{id}","method":"put"},{"path":"/aiShop/customers/{id}","method":"delete"},{"path":"/aiShop/sellers","method":"patch"},{"path":"/aiShop/sellers/{id}","method":"get"},{"path":"/aiShop/sellers","method":"post"},{"path":"/aiShop/sellers/{id}","method":"put"},{"path":"/aiShop/sellers/{id}","method":"delete"},{"path":"/aiShop/admins","method":"patch"},{"path":"/aiShop/admins/{id}","method":"get"},{"path":"/aiShop/admins","method":"post"},{"path":"/aiShop/admins/{id}","method":"put"},{"path":"/aiShop/admins/{id}","method":"delete"},{"path":"/aiShop/authProviders","method":"patch"},{"path":"/aiShop/authProviders/{id}","method":"get"},{"path":"/aiShop/authProviders","method":"post"},{"path":"/aiShop/authProviders/{id}","method":"put"},{"path":"/aiShop/authProviders/{id}","method":"delete"},{"path":"/aiShop/userSessions","method":"patch"},{"path":"/aiShop/userSessions/{id}","method":"get"},{"path":"/aiShop/userSessions","method":"post"},{"path":"/aiShop/userSessions/{id}","method":"put"},{"path":"/aiShop/userSessions/{id}","method":"delete"},{"path":"/aiShop/customerProfiles","method":"patch"},{"path":"/aiShop/customerProfiles/{id}","method":"get"},{"path":"/aiShop/customerProfiles","method":"post"},{"path":"/aiShop/customerProfiles/{id}","method":"put"},{"path":"/aiShop/customerProfiles/{id}","method":"delete"},{"path":"/aiShop/sellerProfiles","method":"patch"},{"path":"/aiShop/sellerProfiles/{id}","method":"get"},{"path":"/aiShop/sellerProfiles","method":"post"},{"path":"/aiShop/sellerProfiles/{id}","method":"put"},{"path":"/aiShop/sellerProfiles/{id}","method":"delete"},{"path":"/aiShop/adminProfiles","method":"patch"},{"path":"/aiShop/adminProfiles/{id}","method":"get"},{"path":"/aiShop/adminProfiles","method":"post"},{"path":"/aiShop/adminProfiles/{id}","method":"put"},{"path":"/aiShop/adminProfiles/{id}","method":"delete"},{"path":"/aiShop/products","method":"patch"},{"path":"/aiShop/products/{id}","method":"get"},{"path":"/aiShop/products","method":"post"},{"path":"/aiShop/products/{id}","method":"put"},{"path":"/aiShop/products/{id}","method":"delete"},{"path":"/aiShop/productVariants","method":"patch"},{"path":"/aiShop/productVariants/{id}","method":"get"},{"path":"/aiShop/productVariants","method":"post"},{"path":"/aiShop/productVariants/{id}","method":"put"},{"path":"/aiShop/productVariants/{id}","method":"delete"},{"path":"/aiShop/inventories","method":"patch"},{"path":"/aiShop/inventories/{id}","method":"get"},{"path":"/aiShop/inventories","method":"post"},{"path":"/aiShop/inventories/{id}","method":"put"},{"path":"/aiShop/inventories/{id}","method":"delete"},{"path":"/aiShop/productSnapshots","method":"patch"},{"path":"/aiShop/productSnapshots/{id}","method":"get"},{"path":"/aiShop/productSnapshots","method":"post"},{"path":"/aiShop/productSnapshots/{id}","method":"put"},{"path":"/aiShop/productSnapshots/{id}","method":"delete"},{"path":"/aiShop/productImages","method":"patch"},{"path":"/aiShop/productImages/{id}","method":"get"},{"path":"/aiShop/productImages","method":"post"},{"path":"/aiShop/productImages/{id}","method":"put"},{"path":"/aiShop/productImages/{id}","method":"delete"},{"path":"/aiShop/productTags","method":"patch"},{"path":"/aiShop/productTags/{id}","method":"get"},{"path":"/aiShop/productTags","method":"post"},{"path":"/aiShop/productTags/{id}","method":"put"},{"path":"/aiShop/productTags/{id}","method":"delete"},{"path":"/aiShop/productImportLogs","method":"patch"},{"path":"/aiShop/productImportLogs/{id}","method":"get"},{"path":"/aiShop/productImportLogs","method":"post"},{"path":"/aiShop/productImportLogs/{id}","method":"put"},{"path":"/aiShop/productImportLogs/{id}","method":"delete"},{"path":"/aiShop/posts","method":"patch"},{"path":"/aiShop/posts/{id}","method":"get"},{"path":"/aiShop/posts","method":"post"},{"path":"/aiShop/posts/{id}","method":"put"},{"path":"/aiShop/posts/{id}","method":"delete"},{"path":"/aiShop/postComments","method":"patch"},{"path":"/aiShop/postComments/{id}","method":"get"},{"path":"/aiShop/postComments","method":"post"},{"path":"/aiShop/postComments/{id}","method":"put"},{"path":"/aiShop/postComments/{id}","method":"delete"},{"path":"/aiShop/postAttachments","method":"patch"},{"path":"/aiShop/postAttachments/{id}","method":"get"},{"path":"/aiShop/postAttachments","method":"post"},{"path":"/aiShop/postAttachments/{id}","method":"put"},{"path":"/aiShop/postAttachments/{id}","method":"delete"},{"path":"/aiShop/postSnapshots","method":"patch"},{"path":"/aiShop/postSnapshots/{id}","method":"get"},{"path":"/aiShop/postSnapshots","method":"post"},{"path":"/aiShop/postSnapshots/{id}","method":"put"},{"path":"/aiShop/postSnapshots/{id}","method":"delete"},{"path":"/aiShop/postRecommendations","method":"patch"},{"path":"/aiShop/postRecommendations/{id}","method":"get"},{"path":"/aiShop/postRecommendations","method":"post"},{"path":"/aiShop/postRecommendations/{id}","method":"put"},{"path":"/aiShop/postRecommendations/{id}","method":"delete"},{"path":"/aiShop/postReports","method":"patch"},{"path":"/aiShop/postReports/{id}","method":"get"},{"path":"/aiShop/postReports","method":"post"},{"path":"/aiShop/postReports/{id}","method":"put"},{"path":"/aiShop/postReports/{id}","method":"delete"},{"path":"/aiShop/commentAttachments","method":"patch"},{"path":"/aiShop/commentAttachments/{id}","method":"get"},{"path":"/aiShop/commentAttachments","method":"post"},{"path":"/aiShop/commentAttachments/{id}","method":"put"},{"path":"/aiShop/commentAttachments/{id}","method":"delete"},{"path":"/aiShop/moderationActions","method":"patch"},{"path":"/aiShop/moderationActions/{id}","method":"get"},{"path":"/aiShop/moderationActions","method":"post"},{"path":"/aiShop/moderationActions/{id}","method":"put"},{"path":"/aiShop/moderationActions/{id}","method":"delete"},{"path":"/aiShop/carts","method":"patch"},{"path":"/aiShop/carts/{id}","method":"get"},{"path":"/aiShop/carts","method":"post"},{"path":"/aiShop/carts/{id}","method":"put"},{"path":"/aiShop/carts/{id}","method":"delete"},{"path":"/aiShop/cartItems","method":"patch"},{"path":"/aiShop/cartItems/{id}","method":"get"},{"path":"/aiShop/cartItems","method":"post"},{"path":"/aiShop/cartItems/{id}","method":"put"},{"path":"/aiShop/cartItems/{id}","method":"delete"},{"path":"/aiShop/cartSessions","method":"patch"},{"path":"/aiShop/cartSessions/{id}","method":"get"},{"path":"/aiShop/cartSessions","method":"post"},{"path":"/aiShop/cartSessions/{id}","method":"put"},{"path":"/aiShop/cartSessions/{id}","method":"delete"},{"path":"/aiShop/orders","method":"patch"},{"path":"/aiShop/orders/{id}","method":"get"},{"path":"/aiShop/orders","method":"post"},{"path":"/aiShop/orders/{id}","method":"put"},{"path":"/aiShop/orders/{id}","method":"delete"},{"path":"/aiShop/orderItems","method":"patch"},{"path":"/aiShop/orderItems/{id}","method":"get"},{"path":"/aiShop/orderItems","method":"post"},{"path":"/aiShop/orderItems/{id}","method":"put"},{"path":"/aiShop/orderItems/{id}","method":"delete"},{"path":"/aiShop/orderStatusHistories","method":"patch"},{"path":"/aiShop/orderStatusHistories/{id}","method":"get"},{"path":"/aiShop/orderStatusHistories","method":"post"},{"path":"/aiShop/orderStatusHistories/{id}","method":"put"},{"path":"/aiShop/orderStatusHistories/{id}","method":"delete"},{"path":"/aiShop/orderRefunds","method":"patch"},{"path":"/aiShop/orderRefunds/{id}","method":"get"},{"path":"/aiShop/orderRefunds","method":"post"},{"path":"/aiShop/orderRefunds/{id}","method":"put"},{"path":"/aiShop/orderRefunds/{id}","method":"delete"},{"path":"/aiShop/returnRequests","method":"patch"},{"path":"/aiShop/returnRequests/{id}","method":"get"},{"path":"/aiShop/returnRequests","method":"post"},{"path":"/aiShop/returnRequests/{id}","method":"put"},{"path":"/aiShop/returnRequests/{id}","method":"delete"},{"path":"/aiShop/orderAbandonments","method":"patch"},{"path":"/aiShop/orderAbandonments/{id}","method":"get"},{"path":"/aiShop/orderAbandonments","method":"post"},{"path":"/aiShop/orderAbandonments/{id}","method":"put"},{"path":"/aiShop/orderAbandonments/{id}","method":"delete"},{"path":"/aiShop/orderDeliveries","method":"patch"},{"path":"/aiShop/orderDeliveries/{id}","method":"get"},{"path":"/aiShop/orderDeliveries","method":"post"},{"path":"/aiShop/orderDeliveries/{id}","method":"put"},{"path":"/aiShop/orderDeliveries/{id}","method":"delete"},{"path":"/aiShop/coupons","method":"patch"},{"path":"/aiShop/coupons/{id}","method":"get"},{"path":"/aiShop/coupons","method":"post"},{"path":"/aiShop/coupons/{id}","method":"put"},{"path":"/aiShop/coupons/{id}","method":"delete"},{"path":"/aiShop/couponAssignments","method":"patch"},{"path":"/aiShop/couponAssignments/{id}","method":"get"},{"path":"/aiShop/couponAssignments","method":"post"},{"path":"/aiShop/couponAssignments/{id}","method":"put"},{"path":"/aiShop/couponAssignments/{id}","method":"delete"},{"path":"/aiShop/promotions","method":"patch"},{"path":"/aiShop/promotions/{id}","method":"get"},{"path":"/aiShop/promotions","method":"post"},{"path":"/aiShop/promotions/{id}","method":"put"},{"path":"/aiShop/promotions/{id}","method":"delete"},{"path":"/aiShop/deposits","method":"patch"},{"path":"/aiShop/deposits/{id}","method":"get"},{"path":"/aiShop/deposits","method":"post"},{"path":"/aiShop/deposits/{id}","method":"put"},{"path":"/aiShop/deposits/{id}","method":"delete"},{"path":"/aiShop/mileages","method":"patch"},{"path":"/aiShop/mileages/{id}","method":"get"},{"path":"/aiShop/mileages","method":"post"},{"path":"/aiShop/mileages/{id}","method":"put"},{"path":"/aiShop/mileages/{id}","method":"delete"},{"path":"/aiShop/donationCoupons","method":"patch"},{"path":"/aiShop/donationCoupons/{id}","method":"get"},{"path":"/aiShop/donationCoupons","method":"post"},{"path":"/aiShop/donationCoupons/{id}","method":"put"},{"path":"/aiShop/donationCoupons/{id}","method":"delete"},{"path":"/aiShop/inquiries","method":"patch"},{"path":"/aiShop/inquiries/{id}","method":"get"},{"path":"/aiShop/inquiries","method":"post"},{"path":"/aiShop/inquiries/{id}","method":"put"},{"path":"/aiShop/inquiries/{id}","method":"delete"},{"path":"/aiShop/inquiryReplies","method":"patch"},{"path":"/aiShop/inquiryReplies/{id}","method":"get"},{"path":"/aiShop/inquiryReplies","method":"post"},{"path":"/aiShop/inquiryReplies/{id}","method":"put"},{"path":"/aiShop/inquiryReplies/{id}","method":"delete"},{"path":"/aiShop/reviews","method":"patch"},{"path":"/aiShop/reviews/{id}","method":"get"},{"path":"/aiShop/reviews","method":"post"},{"path":"/aiShop/reviews/{id}","method":"put"},{"path":"/aiShop/reviews/{id}","method":"delete"},{"path":"/aiShop/reviewModerations","method":"patch"},{"path":"/aiShop/reviewModerations/{id}","method":"get"},{"path":"/aiShop/reviewModerations","method":"post"},{"path":"/aiShop/reviewModerations/{id}","method":"put"},{"path":"/aiShop/reviewModerations/{id}","method":"delete"},{"path":"/aiShop/reviewRatings","method":"patch"},{"path":"/aiShop/reviewRatings/{id}","method":"get"},{"path":"/aiShop/reviewRatings","method":"post"},{"path":"/aiShop/reviewRatings/{id}","method":"put"},{"path":"/aiShop/reviewRatings/{id}","method":"delete"},{"path":"/aiShop/inquiryModerations","method":"patch"},{"path":"/aiShop/inquiryModerations/{id}","method":"get"},{"path":"/aiShop/inquiryModerations","method":"post"},{"path":"/aiShop/inquiryModerations/{id}","method":"put"},{"path":"/aiShop/inquiryModerations/{id}","method":"delete"},{"path":"/aiShop/favoritesProducts","method":"patch"},{"path":"/aiShop/favoritesProducts/{id}","method":"get"},{"path":"/aiShop/favoritesProducts","method":"post"},{"path":"/aiShop/favoritesProducts/{id}","method":"put"},{"path":"/aiShop/favoritesProducts/{id}","method":"delete"},{"path":"/aiShop/favoritesInquiries","method":"patch"},{"path":"/aiShop/favoritesInquiries/{id}","method":"get"},{"path":"/aiShop/favoritesInquiries","method":"post"},{"path":"/aiShop/favoritesInquiries/{id}","method":"put"},{"path":"/aiShop/favoritesInquiries/{id}","method":"delete"},{"path":"/aiShop/favoritesAddresses","method":"patch"},{"path":"/aiShop/favoritesAddresses/{id}","method":"get"},{"path":"/aiShop/favoritesAddresses","method":"post"},{"path":"/aiShop/favoritesAddresses/{id}","method":"put"},{"path":"/aiShop/favoritesAddresses/{id}","method":"delete"},{"path":"/aiShop/favoritesNotifications","method":"patch"},{"path":"/aiShop/favoritesNotifications/{id}","method":"get"},{"path":"/aiShop/favoritesNotifications","method":"post"},{"path":"/aiShop/favoritesNotifications/{id}","method":"put"},{"path":"/aiShop/favoritesNotifications/{id}","method":"delete"}],"created_at":"2025-07-23T07:04:52.889Z","step":0},"tokenUsage":{"facade":{"aggregate":{"total":57485,"input":{"total":53555,"cached":0},"output":{"total":3930,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":57485,"input":{"total":53555,"cached":0},"output":{"total":3930,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":57485,"input":{"total":53555,"cached":0},"output":{"total":3930,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":57485,"input":{"total":53555,"cached":0},"output":{"total":3930,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new configuration parameter for the AI Shop platform. The parameter must include a unique parameter name (param_name), a value (param_value), an optional human-readable description, and audit fields (created_at, updated_at). All these columns are described in the ai_shop_configurations table: id (PK), param_name (unique), param_value, description (nullable), created_at, updated_at. When creating the configuration, ensure param_name is unique. Do not reference any fields not in the schema. No deleted_at or similar soft-delete fields exist, so all fields referenced must directly match schema columns.","description":"This endpoint allows for the creation of a new configuration parameter in the ai_shop_configurations table of the Systematic namespace. The request must supply a unique param_name, a param_value (which may be a string or JSON-stringified), and may optionally include a description to clarify its business purpose. Timestamps for created_at and updated_at must be included for auditing and compliance. This operation does not reference any soft delete or auditing fields beyond what exists in the schema (no deleted_at). On creation, all fields should align exactly with the schema documentation, and an id will be generated as the PK. No soft-delete behavior is possible; records are permanent unless hard deleted via /delete.","summary":"Create an ai_shop_configurations row (Systematic/configuration parameter).","parameters":[],"requestBody":{"description":"Configuration parameter creation details for ai_shop_configurations.","typeName":"IAiShopConfigurations.ICreate"},"responseBody":{"description":"Newly created configuration parameter record.","typeName":"IAiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"post"},{"specification":"Update an existing configuration parameter entry by ID. The operation should allow changes only to fields explicitly defined in the ai_shop_configurations schema: param_name, param_value, description (nullable), updated_at (timestamp for audit). id is the primary key and must be referenced in the path. No deleted_at or soft delete fields are present. The update request must not reference or create fields that don't exist in the schema.","description":"This endpoint updates a specific configuration parameter entry within the ai_shop_configurations table based on its primary key (id). The only updatable fields are param_name, param_value, description, and updated_at as per the schema. The client must supply the id path parameter to identify the record. No soft delete, deleted_at, or non-existent audit fields should be referenced in either the request or generated SQL. All logic and field names strictly follow the schema documentation. The operation is a hard update; only allowed fields are updated, and no soft delete is possible.","summary":"Update a configuration parameter by id in ai_shop_configurations (Systematic/config).","parameters":[{"name":"id","description":"Unique identifier of the configuration parameter to update (PK of ai_shop_configurations).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update information for the configuration parameter.","typeName":"IAiShopConfigurations.IUpdate"},"responseBody":{"description":"Updated configuration parameter record.","typeName":"IAiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"put"},{"specification":"Delete a configuration parameter by id. The ai_shop_configurations table does not have any soft-delete fields (e.g., deleted_at or is_deleted), so this operation must perform a permanent, hard delete. The only field that identifies the target is id (PK, uuid). Reference only fields that exist in the schema.","description":"This operation performs a hard delete of a configuration parameter record from ai_shop_configurations by its PK (id). Since there is no deleted_at or any soft delete logic in the schema, the record is permanently removed from the table. The id path parameter must be provided and must be a valid UUID. No fields beyond those defined in the schema are referenced in any logic or response.","summary":"Hard delete a configuration parameter by id (Systematic/configuration, hard delete enforced).","parameters":[{"name":"id","description":"Unique identifier of the configuration parameter to delete (PK of ai_shop_configurations).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"delete"},{"specification":"Retrieve a filtered, paginated list of categories (ai_shop_categories) with flexible searching and filtering. This endpoint supports listing/searching of all fields in the ai_shop_categories schema: id (PK), ai_shop_channel_id (FK), parent_id (nullable), code, name, sort_order, enabled, created_at, updated_at. Pagination, sorting, and complex filters can be passed in the request body. No deleted_at, is_deleted, or similar soft delete/audit fields exist in the schema: only the fields above can be referenced in business logic and documentation.","description":"Returns a paginated, filtered list of categories (ai_shop_categories) according to flexible query parameters passed in the request body. All filtering, sorting, and search logic refer only to fields actually defined in the schema—namely: id, ai_shop_channel_id, parent_id, code, name, sort_order, enabled, created_at, updated_at. This endpoint implements list/search logic for hierarchical or flat category management, suitable for admin, seller, or system views. There is no reference or logic related to soft delete fields, since none exist in the schema.","summary":"List/search categories in ai_shop_categories with filtering and pagination (Systematic/category).","parameters":[],"requestBody":{"description":"Query/filter/sort info for listing categories.","typeName":"IAiShopCategories.IRequest"},"responseBody":{"description":"Paginated list of category records (ai_shop_categories).","typeName":"IPageAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"patch"},{"specification":"Retrieve details for a single category (ai_shop_categories) by id. Only fields in the schema are presented: id, ai_shop_channel_id, parent_id (nullable), code, name, sort_order, enabled, created_at, updated_at. The id must be a valid UUID and match the PK. There are no deleted_at, is_deleted, or other soft delete indicators in the schema, so the logic/retrieved fields are strictly limited to existing attributes.","description":"Returns the details of a specific ai_shop_categories row by its primary key (id). The response contains only those fields found in the schema—id, ai_shop_channel_id, parent_id, code, name, sort_order, enabled, created_at, updated_at. No deleted_at or soft delete indication will be provided or referenced. The id parameter is mandatory and must match a real PK. All field names and logic follow the exact database schema.","summary":"Get category details by id (Systematic/category detail info).","parameters":[{"name":"id","description":"Unique category identifier (PK of ai_shop_categories) to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All schema fields for the target category.","typeName":"IAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"get"},{"specification":"Create a new category in ai_shop_categories. Requires ai_shop_channel_id (FK), parent_id (can be null for root), code (unique in channel/tree), name, sort_order (int), enabled (bool), plus auditing fields created_at and updated_at. parent_id is nullable for root-level categories. Do NOT reference deleted_at, created_by, or is_deleted fields. All referenced columns must exist in the schema. Example: registering a root or child category with full normalization and auditable timestamps.","description":"Registers a new ai_shop_categories row to either a root or subcategory level. It must supply all required fields: ai_shop_channel_id (FK), optional parent_id (for subcategories), unique code, name, sort_order, enabled, and the auditing fields created_at, updated_at. The system enforces uniqueness on ai_shop_channel_id+parent_id+code for normalization. There are no soft delete, is_deleted, or deleted_at fields referenced. All logic fully aligns to the schema, and no extra audit fields beyond schema are present.","summary":"Create a new category (insert ai_shop_categories, Systematic).","parameters":[],"requestBody":{"description":"Category creation info for ai_shop_categories.","typeName":"IAiShopCategories.ICreate"},"responseBody":{"description":"Created category record (all schema fields returned).","typeName":"IAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"post"},{"specification":"Update an existing category (ai_shop_categories) by id. The endpoint allows updates to any field defined in the schema: ai_shop_channel_id, parent_id (nullable), code, name, sort_order, enabled, updated_at. The id PK must be supplied as a path parameter. Do not reference or implement logic with any fields not exactly matching the schema (e.g., no soft delete, deleted_at, or is_deleted fields).","description":"Updates (overwrites) an existing ai_shop_categories record by id. Allows changes to ai_shop_channel_id, parent_id (can be null), code, name, sort_order, enabled, and updated_at only. The primary key id must be present in the path. The endpoint strictly limits updates to schema-defined fields. There is no soft deletion or references to deleted_at or undefined audit fields. All changes are hard updates only.","summary":"Update a category by id (Systematic, ai_shop_categories edit).","parameters":[{"name":"id","description":"Unique identifier for the category to update (ai_shop_categories PK).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Category update info for ai_shop_categories.","typeName":"IAiShopCategories.IUpdate"},"responseBody":{"description":"All updated fields from the schema for the category.","typeName":"IAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"put"},{"specification":"Delete a category row by id from ai_shop_categories. The table does not have a soft delete field nor a deleted_at column, so the delete operation is a hard/permanent removal. The only field in the schema to identify the record is id (PK, uuid). No soft delete logic exists.","description":"Permanently deletes the target ai_shop_categories row by its id (PK). Since the schema includes no deleted_at or similar soft delete fields, this operation drops the row irreversibly. The only supported way to identify the record is the id PK. All references and logic map directly to the schema and use only actual fields.","summary":"Hard delete of ai_shop_categories row by id (permanent, Systematic).","parameters":[{"name":"id","description":"ID (PK, uuid) of the category to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"delete"},{"specification":"List/search ai_shop_files with pagination and filtering. This operation should only reference actual fields in the schema: id, original_name, uri, mime_type, size_bytes, uploader_name (nullable), uploaded_at. Filtering/sorting logic is strictly on these fields. No deleted_at, created_by, or soft delete columns exist. Returns a paginated list with these fields for audit and business display.","description":"Returns a paginated, filterable list of files (ai_shop_files), fully normalized and compliant with Systematic/file schema. Filters and sorts can be applied to any column in the schema: id, original_name, uri, mime_type, size_bytes, uploader_name (nullable), uploaded_at. All list and search logic only use schema fields—there is no use or reference of deleted_at or extra soft delete logic. Use the request body for flexible pagination, sorting, and query parameters as per business UX needs.","summary":"List and search ai_shop_files (Systematic).","parameters":[],"requestBody":{"description":"Flexible search/filter/sort/pagination info for files (ai_shop_files).","typeName":"IAiShopFiles.IRequest"},"responseBody":{"description":"Paginated list of ai_shop_files records.","typeName":"IPageAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files","method":"patch"},{"specification":"Get ai_shop_files (Systematic/file) record by id. Only the PK field (id, uuid) is required as a path parameter. Returns all columns defined in ai_shop_files: id, original_name, uri, mime_type, size_bytes, uploader_name (nullable), uploaded_at. No soft delete or extra audit fields exist beyond those in the schema.","description":"Fetches the full file metadata row from ai_shop_files using its id PK (uuid). Only fields in the schema can be read and returned (id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at). There is no deleted_at or other soft delete mechanism, so deletion/recovery logic is not present. Always returns only fields that are documented in the schema table, no more or less.","summary":"Get full ai_shop_files record by id (Systematic/file detail).","parameters":[{"name":"id","description":"File PK (uuid) to get info for (ai_shop_files.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All columns for ai_shop_files row (metadata).","typeName":"IAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"get"},{"specification":"Create new record in ai_shop_files for file metadata. All columns must be supplied as required in the schema: original_name, uri (unique), mime_type, size_bytes, uploader_name (nullable), uploaded_at; no reference to any deleted_at or extra audit field is possible. Returned payload and request fields map directly to schema field names.","description":"Registers file metadata in ai_shop_files, enforcing normalization and referential integrity. All columns must be supplied (original_name, uri (unique), mime_type, size_bytes, uploader_name nullable, uploaded_at). No deleted_at, is_deleted, or extra audit field exists—only business metadata in the schema. The id (PK) is generated upon insert. No soft delete logic or fields can be referenced in either creation or downstream logic.","summary":"Create/register metadata for new file (ai_shop_files, Systematic).","parameters":[],"requestBody":{"description":"Payload for file creation (ai_shop_files, Systematic).","typeName":"IAiShopFiles.ICreate"},"responseBody":{"description":"Full ai_shop_files row for the created file metadata record.","typeName":"IAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files","method":"post"},{"specification":"Update the file metadata in ai_shop_files by id. The only updatable fields are original_name, uri (unique), mime_type, size_bytes, uploader_name (nullable), uploaded_at (audit update required). id (PK) is the path parameter to select the record. No reference to deleted_at, is_deleted, or soft delete is permitted—the ai_shop_files schema does not include those fields, and only updatable field logic or documentation is allowed.","description":"Overwrites a single ai_shop_files row selected by id. The payload must map directly to fields in the schema: original_name, uri, mime_type, size_bytes, uploader_name nullable, and uploaded_at. Id is a PK path parameter. The endpoint documents and allows editing of these columns only—extra soft delete or audit fields cannot be referenced or implemented. There is no way to soft delete files; all operations are hard and use the schema columns only.","summary":"Update ai_shop_files metadata by id (Systematic/file edit).","parameters":[{"name":"id","description":"PK of ai_shop_files to update (uuid).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for ai_shop_files fields (Systematic/file update).","typeName":"IAiShopFiles.IUpdate"},"responseBody":{"description":"Full ai_shop_files row (all editable fields updated).","typeName":"IAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"put"}],"completed":12,"total":275,"step":0,"created_at":"2025-07-23T07:06:16.574Z"},"tokenUsage":{"facade":{"aggregate":{"total":117437,"input":{"total":110086,"cached":0},"output":{"total":7351,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":117437,"input":{"total":110086,"cached":0},"output":{"total":7351,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":117437,"input":{"total":110086,"cached":0},"output":{"total":7351,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":117437,"input":{"total":110086,"cached":0},"output":{"total":7351,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"List ai_shop_channels records (channels) using advanced searching criteria with filtering and pagination. Based strictly on the Prisma schema, supports searching by any existing channel columns such as code, name, enabled, and sort_order. Returns an array of channel records with all fields defined in the schema. There is no soft delete mechanism in the schema.","description":"This API operation lists all channel entities (ai_shop_channels) with advanced search, pagination, and filtering based strictly on the fields present in the Prisma schema. The returned list includes full details for each channel: id, code, name, enabled, sort_order, created_at, and updated_at. The code and name fields support fuzzy and trigram search for administration and UI display. The enabled field can be filtered to distinguish active and inactive channels. As there is no soft-delete (deleted_at) field present in the schema, all records fetched are actual persisted data. Sorting and paging must operate on valid schema fields. No references to non-existent fields are made. This API is used with channel management interfaces and must comply with security rules for read/list permissions. No assumptions beyond present schema fields are allowed.","summary":"Get a filtered and paginated list of ai_shop_channels records (channels).","parameters":[],"requestBody":{"description":"Searching and pagination parameters for listing channel records based on allowed query fields (code, name, enabled, sort_order).","typeName":"IAiShopChannel.IListRequest"},"responseBody":{"description":"A paginated list of ai_shop_channels matching search criteria.","typeName":"IPageAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels","method":"patch"},{"specification":"Get one ai_shop_channels record by its unique id. Follows the Prisma schema exactly; references only fields present (id, code, name, enabled, sort_order, created_at, updated_at). Returns null or 404 if id is not present; there are no deleted_at or soft delete columns.","description":"This API operation returns the full information for a single ai_shop_channels (channel) record identified by id, using the fields defined in the Prisma schema: id, code, name, enabled, sort_order, created_at, and updated_at. It does not include or consider any non-existent column, such as soft delete or metadata. If the provided id does not correspond to any existing record, a null or 404 response should be returned. This endpoint is essential for channel detail views and editing scenarios in admin and system management. Security rules for appropriate role permissions must be enforced as per business policy. No references are made to schema fields that do not exist.","summary":"Get details of one ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique identifier of the ai_shop_channels record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the channel (ai_shop_channels) record.","typeName":"IAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels/{id}","method":"get"},{"specification":"Create a new ai_shop_channels record with all required and optional fields, as per the Prisma schema. All inserted fields must correspond to actual columns (code, name, enabled, sort_order, created_at, updated_at), and there is no support for non-schema properties (e.g., no deleted_at).","description":"This operation creates a new channel in the ai_shop_channels table, accepting all required and optional properties as defined in the schema: code, name, enabled, sort_order, created_at, updated_at. The id is generated automatically (UUID). No soft-delete or user-trace columns are referenced, because they do not exist in the schema. Failure to provide required fields results in an error. This is used for admin/system interfaces where new marketplace, event, or shopfront channels need to be created.","summary":"Create a new ai_shop_channels record (channel).","parameters":[],"requestBody":{"description":"Properties for the new ai_shop_channels record, limited strictly to the schema (code, name, enabled, sort_order, created_at, updated_at).","typeName":"IAiShopChannel.ICreate"},"responseBody":{"description":"The newly created ai_shop_channel record.","typeName":"IAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels","method":"post"},{"specification":"Update an existing ai_shop_channels record identified by id, using only fields that exist in the Prisma schema (code, name, enabled, sort_order, created_at, updated_at). The id is a path parameter and must exist. No soft delete or audit columns beyond those incuded in the schema are referenced.","description":"This operation updates an existing ai_shop_channels entity by its id, modifying only the fields that are present in the schema: code, name, enabled, sort_order, created_at, updated_at. It does not reference or handle any non-existent columns such as deleted_at or metadata. If the record does not exist, return an error (e.g., 404). Only schema-compliant fields are updated. Used in admin/system channels management functionality.","summary":"Update an ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique identifier of the ai_shop_channels record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for ai_shop_channels record, strictly following the schema.","typeName":"IAiShopChannel.IUpdate"},"responseBody":{"description":"The updated ai_shop_channels record.","typeName":"IAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels/{id}","method":"put"},{"specification":"Delete an ai_shop_channels record by id, corresponding to a hard delete since there is no soft delete support in the Prisma schema (no deleted_at or is_deleted fields). The channel is physically removed from the database.","description":"This endpoint permanently deletes an ai_shop_channels record identified by its id. As the Prisma schema for ai_shop_channels does not include any deleted_at or is_deleted field, this is a hard delete: the record is removed entirely and cannot be recovered. It does not reference, set, or require any non-existent soft delete field. The operation is commonly used in admin and system management of marketplace channels. Proper authorization and business rules for delete permissions are required.","summary":"Delete (hard delete) an ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique identifier of the ai_shop_channels record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Result of the delete operation (success/failure).","typeName":"IAiShopChannel.IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/channels/{id}","method":"delete"},{"specification":"List ai_shop_sections (sections) using search and pagination, returning only schema-defined fields. Supports filtering on ai_shop_channel_id, code, name, enabled, and sort_order, strictly per schema. No soft delete or extra metadata fields exist.","description":"This API lists all ai_shop_sections entities, supporting filtering and paging on actual schema fields, including id, ai_shop_channel_id, code, name, enabled, sort_order, created_at, and updated_at. No assumption is made for deleted_at or audit columns that do not exist. The endpoint is used for admin/system front-ends managing sections (logical groupings within channels). Search and paging operate only on allowed schema fields, and all listing, filtering, and result structure match the normalized schema.","summary":"Get a filtered and paginated list of ai_shop_sections records.","parameters":[],"requestBody":{"description":"Searching and pagination data for listed ai_shop_sections (filter on ai_shop_channel_id, code, name, enabled, and sort_order).","typeName":"IAiShopSection.IListRequest"},"responseBody":{"description":"A paginated list of sections (ai_shop_sections) based on search/paging query.","typeName":"IPageAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections","method":"patch"},{"specification":"Fetch full details of a section (ai_shop_sections) entity by unique id, using only valid schema fields. Does not support soft deletion recovery or extra data.","description":"This operation fetches a single ai_shop_sections record by id, returning all schema-defined fields: id, ai_shop_channel_id, code, name, enabled, sort_order, created_at, and updated_at. There are no soft delete, deleted_at, or extra audit fields, and these must not be referenced in the operation descriptions. A missing id yields a null or error. The result is used for section detail and management in admin/system UIs.","summary":"Get an ai_shop_sections record by id.","parameters":[{"name":"id","description":"The unique id of the section to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the ai_shop_sections record.","typeName":"IAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections/{id}","method":"get"},{"specification":"Create a new ai_shop_sections entity, filling all required (and optional) fields as per the Prisma schema definition. Does not reference or allow any non-schema fields.","description":"This creates a new ai_shop_sections entity using the fields provided in the Prisma schema: ai_shop_channel_id, code, name, enabled, sort_order, created_at, updated_at. The id is system-generated. There is no support or mention for deleted_at or irrelevant auditing columns. Errors are returned if schema-required fields are missing. Used by admin/system users for UI registration of new sections/channel groupings.","summary":"Create a new ai_shop_sections record.","parameters":[],"requestBody":{"description":"Values for all fields required to create a new section, strictly following the schema.","typeName":"IAiShopSection.ICreate"},"responseBody":{"description":"The newly created section record (ai_shop_sections).","typeName":"IAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections","method":"post"},{"specification":"Update an existing ai_shop_sections record by unique id. Only schema-defined fields may be updated, including code, name, enabled, sort_order, created_at, and updated_at. No extra or soft-delete fields may be referenced in description or data, and errors are returned for invalid ids.","description":"This updates schema-allowed fields for a section (ai_shop_sections) record by id, changing only those columns that exist in the schema. Neither soft delete nor so-called extra audit columns are referenced in this operation. Used in admin/system tools for hierarchy/content management. Errors appear if id is invalid/nonexistent, or prohibited fields are referenced in the data.","summary":"Update an ai_shop_sections record by id.","parameters":[{"name":"id","description":"The unique identifier for the ai_shop_sections record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update details for ai_shop_sections, limited to schema fields (code, name, enabled, sort_order, created_at, updated_at).","typeName":"IAiShopSection.IUpdate"},"responseBody":{"description":"The up-to-date ai_shop_sections record.","typeName":"IAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections/{id}","method":"put"},{"specification":"Delete an ai_shop_sections entity by id. Since the schema lacks any soft delete column, this performs a hard delete. Entity is permanently removed from the table.","description":"This operation deletes an ai_shop_sections record from the database (by id) permanently, as no deleted_at or equivalent soft delete column exists in the schema. This is a hard delete—no recovery is supported or described. Used for admin system and UI channel/section management. All references must be for fields present in the schema. Proper permission checks and business process requirements apply.","summary":"Hard-delete an ai_shop_sections record by id.","parameters":[{"name":"id","description":"The unique id of the ai_shop_sections record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Result of the section delete operation.","typeName":"IAiShopSection.IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/sections/{id}","method":"delete"},{"specification":"List platform configurations (ai_shop_configurations) using only schema-defined parameters, with fuzzy search, filtering, and pagination on fields param_name, param_value, and description. Returns full configuration entries. There is no deleted_at or soft deletion supported in the schema.","description":"This operation lists configuration parameters (ai_shop_configurations) based strictly on the schema. Results are filterable and sortable by param_name, param_value, and description, with pagination. Only present schema fields (id, param_name, param_value, description, created_at, updated_at) are referenced. The endpoint is used by admin/system configuration management and does not assume any soft delete behavior. Returned results are always actual persisted records.","summary":"List all ai_shop_configurations records (platform configurations) with full search and paging.","parameters":[],"requestBody":{"description":"Search, filter, and pagination data, limited to param_name, param_value, description, and base schema fields.","typeName":"IAiShopConfiguration.IListRequest"},"responseBody":{"description":"A page of ai_shop_configurations records matching query/filter.","typeName":"IPageAiShopConfiguration"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"patch"},{"specification":"Get a single ai_shop_configurations record by id. Only valid schema fields (id, param_name, param_value, description, created_at, updated_at) are referenced. No soft/hard deletes—if record does not exist, returns null/404.","description":"This operation fetches a single ai_shop_configurations entry by id, returning all schema-defined columns. If the entry does not exist, null or 404 is returned. It cannot and does not reference any columns other than those defined in the schema. Used for admin/system configuration detail management. Security and access rules apply.","summary":"Get an ai_shop_configurations record by id.","parameters":[{"name":"id","description":"The uuid of the configuration record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the ai_shop_configurations record by id.","typeName":"IAiShopConfiguration"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"get"}],"completed":24,"total":275,"step":0,"created_at":"2025-07-23T07:06:17.407Z"},"tokenUsage":{"facade":{"aggregate":{"total":177018,"input":{"total":166626,"cached":0},"output":{"total":10392,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":177018,"input":{"total":166626,"cached":0},"output":{"total":10392,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":177018,"input":{"total":166626,"cached":0},"output":{"total":10392,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":177018,"input":{"total":166626,"cached":0},"output":{"total":10392,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Retrieve a single product tag by ID. This operation fetches details for a tag on a specific product as defined in the ai_shop_product_tags table. Only fields present in the Prisma schema are used: id (PK), ai_shop_product_id (product this tag is assigned to), tag_text (atomic tag label), and created_at (when tag created). This GET does not reference any other fields and will not include any non-existent properties. There are no soft delete fields on ai_shop_product_tags, so all returned data is current records only.","description":"This endpoint is used to fetch a specific product tag by its unique identifier from the ai_shop_product_tags table. \n\nThe response includes: id (primary key), ai_shop_product_id (foreign key to the parent product), tag_text (label text, e.g. 'eco-friendly'), and created_at (timestamp when the tag was set). The endpoint will not include any soft/hard-deletion behavior as the schema does not include fields such as deleted_at or is_deleted.\n\nError responses are provided if the tag does not exist. All fields in the response are directly matched to the database schema for accuracy and compliance.","summary":"Fetch details of a product tag from ai_shop_product_tags by ID.","parameters":[{"name":"id","description":"Target product tag's ID (UUID) from ai_shop_product_tags.id","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The product tag detail object.","typeName":"IAiShopProductTag"},"authorizationRoles":null,"path":"/aiShop/productTags/{id}","method":"get"},{"specification":"Create a new product tag for a product, as defined by the ai_shop_product_tags table. Requires a POST body matching the actual schema: ai_shop_product_id (FK to product), tag_text (the tag's string), and will automatically set created_at (timestamp). The API does not reference or manage any fields except for those present in the schema (no soft deletion, no status).","description":"This operation allows clients to create a new product tag linked to an existing product. \n\nRequest body should include: ai_shop_product_id (UUID, points to the product being tagged) and tag_text (the tag's label, string type). The created record will also have its id (UUID, primary key) and created_at timestamp generated by the database. \n\nThe endpoint will return a detailed product tag object upon success. Any attempt to include properties not present in ai_shop_product_tags (such as deletion, status, etc.) will be rejected.","summary":"Create a new product tag in ai_shop_product_tags.","parameters":[],"requestBody":{"description":"Payload for creating a new product tag. Must only include fields present in the schema: ai_shop_product_id and tag_text.","typeName":"IAiShopProductTag.ICreate"},"responseBody":{"description":"The created product tag record.","typeName":"IAiShopProductTag"},"authorizationRoles":null,"path":"/aiShop/productTags","method":"post"},{"specification":"Update an existing product tag identified by ID as represented in ai_shop_product_tags. Updatable fields are those present in the schema: ai_shop_product_id, tag_text. The updated_at field may be set automatically by the underlying system/database for auditing, but update operations should only modify user-supplied fields. Soft deletion and other fields are NOT present and must not be referenced.","description":"This endpoint updates an existing product tag given its UUID. The only fields that may be updated are those present in the ai_shop_product_tags schema: ai_shop_product_id and tag_text. The system may automatically update the updated_at timestamp as part of record modification for audit compliance, but this field is handled internally.\n\nAny fields not present in the schema are strictly excluded. No soft deletion or status modification is performed.\n\nReturns the updated product tag object as defined in the schema.","summary":"Update a product tag in ai_shop_product_tags by ID.","parameters":[{"name":"id","description":"Unique ID (UUID) of the product tag to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for updating a product tag. Only ai_shop_product_id and tag_text may be provided as per schema.","typeName":"IAiShopProductTag.IUpdate"},"responseBody":{"description":"The updated product tag record.","typeName":"IAiShopProductTag"},"authorizationRoles":null,"path":"/aiShop/productTags/{id}","method":"put"},{"specification":"Delete a product tag by its unique ID. Examining the ai_shop_product_tags schema shows there are NO soft delete fields; thus, this operation must perform a hard delete (permanent removal) of the product tag record from the database. Only present fields are referenced in the process, with no support for soft deletion logic.","description":"This API endpoint deletes a product tag with the given unique ID. Since the ai_shop_product_tags table does NOT contain soft deletion fields (no deleted_at, is_deleted, etc.), this DELETE operation performs a hard delete—the record is permanently removed from the database.\n\nAttempting to delete a non-existent product tag will yield an appropriate error. All operations reference only the actual columns of the schema and do not add or manipulate any fields outside of those present.","summary":"Hard delete a product tag from ai_shop_product_tags by ID.","parameters":[{"name":"id","description":"UUID of the target product tag to hard delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productTags/{id}","method":"delete"},{"specification":"Search and filter product import logs as defined by the ai_shop_product_import_logs table. Supports flexible retrieval with pagination, filtering, and search parameters operating only on actual fields: id, ai_shop_seller_id, imported_at, source_file, record_count, status, error_message. All fields in this operation match the schema. No deletion fields present; only retrieves current records.","description":"This endpoint retrieves a list of product import log records, supporting search, pagination, and filtering strictly on fields available in ai_shop_product_import_logs: id, ai_shop_seller_id, imported_at, source_file, record_count, status, and error_message. \n\nClient may specify search terms or filters (e.g., by seller, status, date range, etc.) only on these fields. No fields for deletion or status outside those described in the schema are referenced.\n\nResponses are paginated and contain only schema-compliant properties.","summary":"Search and paginate product import logs from ai_shop_product_import_logs.","parameters":[],"requestBody":{"description":"Optional search and pagination payload for product import logs. Accepts only column-compliant properties.","typeName":"IAiShopProductImportLog.IRequest"},"responseBody":{"description":"Paginated result of product import log records.","typeName":"IPageIAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs","method":"patch"},{"specification":"Retrieve a single product import log by ID, as defined by ai_shop_product_import_logs. Only fields defined in the schema (id, ai_shop_seller_id, imported_at, source_file, record_count, status, error_message) are referenced. There are no soft delete or status fields outside those in the schema. The operation returns a single log record matching the ID or an error.","description":"This operation fetches a product import log record by its unique ID from ai_shop_product_import_logs. Only properties that exist in the schema are included in the response: id, ai_shop_seller_id (FK to the seller who imported), imported_at, source_file, record_count, status, and error_message. \n\nSoft deletion or hard deletion concerns do not apply, as the table contains no relevant delete fields. Missing records result in an error response.","summary":"Fetch a product import log from ai_shop_product_import_logs by ID.","parameters":[{"name":"id","description":"UUID for the product import log record to fetch (ai_shop_product_import_logs.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed product import log record object.","typeName":"IAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs/{id}","method":"get"},{"specification":"Create a new product import log entry as represented in ai_shop_product_import_logs. Requires a POST body matching the schema: ai_shop_seller_id, imported_at, source_file, record_count, status, and (optionally) error_message. Only these fields may be included. Database will auto-set the new record's id.","description":"This endpoint creates a new record in ai_shop_product_import_logs. The request body must include all required fields from the schema: ai_shop_seller_id (FK), imported_at (datetime), source_file (URI string), record_count (integer), and status (string - e.g. 'pending', 'completed', 'failed'). error_message may be provided for failed imports as a nullable string.\n\nThe database will return the created log object containing all actual fields, including the generated id. No deletion or status fields outside of the schema are referenced or affected.","summary":"Create a product import log record in ai_shop_product_import_logs.","parameters":[],"requestBody":{"description":"Payload for creating a product import log. Accepts only defined schema fields.","typeName":"IAiShopProductImportLog.ICreate"},"responseBody":{"description":"Created product import log record.","typeName":"IAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs","method":"post"},{"specification":"Update an existing product import log record by ID, using the actual fields defined in ai_shop_product_import_logs. Updatable fields are: ai_shop_seller_id, imported_at, source_file, record_count, status, error_message. Soft delete is not supported and status field is only as defined. Only these fields are referenced/changed.","description":"This API updates a product import log record given its ID. Allowed updatable fields are: ai_shop_seller_id, imported_at, source_file, record_count, status, and error_message. The endpoint will not reference fields outside the schema. 'id' is path parameter and not modifiable. Returns the updated log entry (all schema-defined properties).\n\nNo deletion or special status transitions are supported in this operation; only schema-defined status and error_message are allowed.","summary":"Update a product import log record in ai_shop_product_import_logs.","parameters":[{"name":"id","description":"UUID for the product import log record being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for updating product import logs. Accepts only schema-defined updatable fields.","typeName":"IAiShopProductImportLog.IUpdate"},"responseBody":{"description":"Updated product import log record.","typeName":"IAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs/{id}","method":"put"},{"specification":"Delete a product import log record by its ID. As there are NO soft deletion fields in ai_shop_product_import_logs, this DELETE operation will permit hard deletion (permanent removal) of the record. All related operations reference only the actual schema fields.","description":"Deletes a product import log record with the specified ID. Since ai_shop_product_import_logs does not implement soft deletion fields (like deleted_at or is_deleted), this operation results in a hard delete: the log record is permanently removed from the database.\n\nNo attempt is made to update non-existent soft delete/status fields. Non-existent IDs will return error responses indicating the record is not found.","summary":"Hard delete a product import log from ai_shop_product_import_logs by ID.","parameters":[{"name":"id","description":"UUID of the product import log record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productImportLogs/{id}","method":"delete"},{"specification":"Patch/search ai_shop_posts records with filtering and pagination. Supports searching by fields present in the schema: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. No support for soft delete on this entity.","description":"Retrieves a filtered, paginated list of bulletin board posts (ai_shop_posts) based strictly on fields present in the schema: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. \n\nClient can supply search/pagination criteria only for those fields. No deletion logic is supported, and any non-schema fields are ignored.\n\nReturns paginated response set with schema-compliant objects. All fields referenced map directly to actual columns in the Prisma schema.","summary":"Search and paginate bulletin board posts from ai_shop_posts.","parameters":[],"requestBody":{"description":"Optional search and pagination request body; accepts only fields present in ai_shop_posts.","typeName":"IAiShopPost.IRequest"},"responseBody":{"description":"Paginated result of post objects.","typeName":"IPageIAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts","method":"patch"},{"specification":"Fetch a bulletin board post by ID as stored in ai_shop_posts. Uses ONLY fields from the schema: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. No soft or hard delete is handled on fetch. Returns the requested post record or an error.","description":"Retrieves a single post by its unique ID identifier, returning all schema-defined properties: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. \n\nNo deletion or status logic is performed; all data matches actual schema fields.","summary":"Fetch a single bulletin board post from ai_shop_posts by ID.","parameters":[{"name":"id","description":"UUID of the bulletin post to fetch from ai_shop_posts.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed post object as per schema.","typeName":"IAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts/{id}","method":"get"},{"specification":"Create a new bulletin board post record in ai_shop_posts. Request body must use only fields defined in the schema: ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status. created_at and updated_at are managed by system. No deletion or status logic outside schema is referenced.","description":"This operation creates a new post in the ai_shop_posts table. Allowed fields are: ai_shop_customer_id (nullable), ai_shop_seller_id (nullable), ai_shop_admin_id (nullable), channel_id (required, FK), title (string), body (string, may include rich content), role_type (e.g. 'customer','seller','admin'), and status (e.g. published/draft/etc). The created post will contain id and system-managed timestamps.\n\nNo deletion logic is included. Only schema-compliant properties are accepted. Returns the full post record as just created.","summary":"Create a new bulletin board post in ai_shop_posts.","parameters":[],"requestBody":{"description":"New post creation payload, containing only schema-defined fields.","typeName":"IAiShopPost.ICreate"},"responseBody":{"description":"Created post object.","typeName":"IAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts","method":"post"}],"completed":36,"total":275,"step":0,"created_at":"2025-07-23T07:06:20.180Z"},"tokenUsage":{"facade":{"aggregate":{"total":236883,"input":{"total":223168,"cached":0},"output":{"total":13715,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":236883,"input":{"total":223168,"cached":0},"output":{"total":13715,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":236883,"input":{"total":223168,"cached":0},"output":{"total":13715,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":236883,"input":{"total":223168,"cached":0},"output":{"total":13715,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new inquiry moderation action. This operation inserts a record into the 'ai_shop_inquiry_moderations' table, which tracks all moderation actions (such as approve, flag, or delete) performed by an admin on a customer inquiry. The relevant fields in the schema are: id (auto-generated), ai_shop_inquiry_id (the inquiry being moderated), ai_shop_admin_id (the admin performing the action), action (the moderation action type as a string, e.g., approve/flag/delete), reason (justification for the action), and created_at (the timestamp when the action was taken). Business and compliance requirements are ensured through full auditability of these records. No soft-delete is present: once created, the record is immutable and retained for audit compliance. This API supports workflow and platform compliance management.","description":"This endpoint allows an admin to create a new moderation record for a customer inquiry. The request must include the inquiry ID being moderated, admin ID performing the action, the action type (approve, flag, delete, etc.), and the reason for the moderation. The API stores these details atomically, as described in the ai_shop_inquiry_moderations Prisma schema, maintaining a full audit trail. Each moderation action is irreversible—there is no soft-delete or update for moderation logs for compliance and traceability. Only fields defined in the schema (ai_shop_inquiry_id, ai_shop_admin_id, action, reason, created_at) are processed. This adheres to strict 3NF normalization, separation of content and audit logs, and satisfies audit/compliance requirements for inquiry moderation workflows.","summary":"Create a new inquiry moderation record (ai_shop_inquiry_moderations).","parameters":[],"requestBody":{"description":"Information required to create an inquiry moderation record.","typeName":"IAiShopInquiryModerations.ICreate"},"responseBody":{"description":"The newly created inquiry moderation record.","typeName":"IAiShopInquiryModerations"},"authorizationRoles":["admin"],"path":"/aiShop/inquiryModerations","method":"post"},{"specification":"Update an existing inquiry moderation action. This operation modifies a record in the 'ai_shop_inquiry_moderations' table. The only updatable fields as per Prisma schema are 'action' and 'reason'. The record is identified by its 'id' path parameter (UUID). There is no soft-delete or hard-delete for this entity — moderation logs are intended to be immutable by default, but if update is supported, only annotated business fields can change (such as annotating or correcting the action/reason, not operational audit fields). This endpoint is compliance driven; schema fields are strictly followed. No fields outside of schema allowed.","description":"Update an existing inquiry moderation action by its unique ID. According to ai_shop_inquiry_moderations schema, only the action type and reason fields can be modified. All audit trail requirements are maintained, with edits officially tracked. This endpoint only updates fields that exist in the schema: 'action' and 'reason'. Fields such as 'id', 'ai_shop_inquiry_id', 'ai_shop_admin_id', and 'created_at' cannot be altered. No soft-delete mechanism is present; modification is allowed only for correction or annotation purposes.","summary":"Update the action and reason of an inquiry moderation record (ai_shop_inquiry_moderations).","parameters":[{"name":"id","description":"The unique identifier (UUID) of the moderation record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated moderation action and/or reason.","typeName":"IAiShopInquiryModerations.IUpdate"},"responseBody":{"description":"The updated inquiry moderation record.","typeName":"IAiShopInquiryModerations"},"authorizationRoles":["admin"],"path":"/aiShop/inquiryModerations/{id}","method":"put"},{"specification":"Delete (hard delete) an inquiry moderation record. The 'ai_shop_inquiry_moderations' schema does not contain any fields indicating soft delete (no deleted_at, is_deleted, etc.). This API will permanently remove the specified moderation action from the database using its 'id' as the path parameter. This operation is irreversible and should be restricted to compliance contexts (such as removal after retention policy expiration), as audit traceability is lost upon deletion.","description":"Permanently delete an inquiry moderation record by its unique ID. The ai_shop_inquiry_moderations table has no soft delete field; this operation will hard delete the record from storage, and the moderation record cannot be recovered. This endpoint must be limited to system administrators or processes that enforce retention policy compliance, as deleting a moderation action may have audit implications. Only the id path parameter, corresponding to a real schema field, is required. No request body is needed.","summary":"Permanently delete an inquiry moderation record (ai_shop_inquiry_moderations) by ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the moderation record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/inquiryModerations/{id}","method":"delete"},{"specification":"Retrieve a list of product favorites (ai_shop_favorites_products) for the current user. The schema supports atomic retrieval by fields: id, ai_shop_customer_id (owner), ai_shop_product_id (target product), created_at (timestamp). This PATCH endpoint may support filtering (by customer, product), sorting (by date, etc.), and pagination, but only for fields present in the schema. No soft delete present—deletion is hard removal. This aligns with the AI Shop favorites requirements and entity design.","description":"Get a list of product favorite entries for a user, optionally supporting search, filter by product/customer, sorting by created_at, and pagination. All search and filter operations are only allowed on schema-defined fields: id, ai_shop_customer_id, ai_shop_product_id, created_at. This endpoint does not return deleted entries, as deletion is hard by schema. The response is paginated and includes only records matching the current user's account or specified filter values.","summary":"List product favorites for a user (ai_shop_favorites_products).","parameters":[],"requestBody":{"description":"Query parameters for filtering and pagination of favorites (all fields must be present in ai_shop_favorites_products schema).","typeName":"IAiShopFavoritesProducts.IListRequest"},"responseBody":{"description":"Paginated list of product favorites.","typeName":"IPageIAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts","method":"patch"},{"specification":"Retrieve the details of a single product favorite entry. The GET uses the id path parameter to fetch the ai_shop_favorites_products record, with fields: id, ai_shop_customer_id, ai_shop_product_id, created_at. This provides information on the specific product favorited by the user. No soft-deletion is present; only real entries are returned.","description":"Fetch a specific product favorite by its unique ID. Returns all schema-defined information for the ai_shop_favorites_products entity, ensuring that only existing hard entries are returned (no soft-deletion field in schema). Only retrieves schema fields: id, ai_shop_customer_id, ai_shop_product_id, created_at. Used for detail display and audit tracing of favorites.","summary":"Get details of a product favorite by ID (ai_shop_favorites_products).","parameters":[{"name":"id","description":"The unique identifier (UUID) of the favoritesProducts record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Schema-defined fields for a single product favorite entry.","typeName":"IAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts/{id}","method":"get"},{"specification":"Create a new favorite product entry. Inserts a record into 'ai_shop_favorites_products' with required fields: ai_shop_customer_id, ai_shop_product_id, and created_at. No soft delete field exists; favoriting an already-favorited item should result in an error or no-op per unique constraint on (ai_shop_customer_id, ai_shop_product_id).","description":"Add a product to the current user's favorites. The request requires customer ID, product ID, and timestamp as per ai_shop_favorites_products schema. Duplicate requests for the same product by the same customer should be blocked or handled as defined by business rules; the unique constraint enforces uniqueness at the data level. No soft-deletion tracking present.","summary":"Create a new product favorite (ai_shop_favorites_products).","parameters":[],"requestBody":{"description":"Fields required to create a new favorite entry.","typeName":"IAiShopFavoritesProducts.ICreate"},"responseBody":{"description":"Resulting favorite product record created.","typeName":"IAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts","method":"post"},{"specification":"Update a product favorite entry. This updates mutable fields defined in the ai_shop_favorites_products schema, namely ai_shop_product_id and potentially created_at. The entry is identified by the unique id path parameter. No soft-delete behavior present. Only schema-defined fields are allowed.","description":"Update a product favorite entry by its unique ID. Permitted fields for update include ai_shop_product_id and created_at, following the ai_shop_favorites_products schema. No fields outside of schema, such as deleted indicators, are processed. Uniqueness constraint still applies (cannot reassign to an already-favorited product by the user).","summary":"Update an existing favorite product entry (ai_shop_favorites_products).","parameters":[{"name":"id","description":"The unique identifier (UUID) of the favorite entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Mutable fields for updating a favorite entry (ai_shop_product_id, created_at).","typeName":"IAiShopFavoritesProducts.IUpdate"},"responseBody":{"description":"Returned updated favorite product record.","typeName":"IAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts/{id}","method":"put"},{"specification":"Delete (hard delete) a product favorite entry. The ai_shop_favorites_products schema does not have a soft delete field; deletion is permanent removal by unique id. Only the id path parameter is required for this operation. Deletion cannot be undone.","description":"Permanently remove a product from the user's favorites by its unique ID. Operation is a hard delete (no soft delete presence in schema), and is irreversible. Used for favorites management and user experience. Only id exists in schema; no additional fields are operated on or returned on successful deletion.","summary":"Delete a product favorite entry by ID (ai_shop_favorites_products) - hard delete.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the favorite record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts/{id}","method":"delete"},{"specification":"Retrieve a list of inquiry favorites (ai_shop_favorites_inquiries) for a user. Fields present in the schema are id, ai_shop_customer_id (owner), ai_shop_inquiry_id (target inquiry), created_at (timestamp). Supports filtering, search, pagination ONLY by fields present in the schema. No soft delete indicated; deletion is permanent removal from the table. This endpoint adheres to the Favorites System requirements and is 3NF-compliant.","description":"Fetch, filter, and list inquiry favorites for a user. Search/filter can only be performed on existing schema fields: id, ai_shop_customer_id, ai_shop_inquiry_id, created_at. The endpoint allows for paginated results; only actual, non-deleted entries are available, as hard delete is enforced. Output contains a paginated list of ai_shop_favorites_inquiries records as described in the schema.","summary":"List inquiry favorites for a user (ai_shop_favorites_inquiries).","parameters":[],"requestBody":{"description":"Schema-compliant query parameters for searching, filtering, and paginating inquiry favorites.","typeName":"IAiShopFavoritesInquiries.IListRequest"},"responseBody":{"description":"Page of inquiry favorites, as per ai_shop_favorites_inquiries schema.","typeName":"IPageIAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries","method":"patch"},{"specification":"Retrieve the detail of a single inquiry favorite by ID. The ai_shop_favorites_inquiries schema includes fields: id, ai_shop_customer_id, ai_shop_inquiry_id, created_at. This operation fetches only schema-compliant data for the specified favorite. No soft delete present in this entity.","description":"Fetch a specific inquiry favorite by its unique ID. Returns atomic fields as in ai_shop_favorites_inquiries: id, ai_shop_customer_id, ai_shop_inquiry_id, created_at. This API serves display, management, and audit needs, always returning only records existing at query time (no soft delete in schema).","summary":"Get details of an inquiry favorite by ID (ai_shop_favorites_inquiries).","parameters":[{"name":"id","description":"Unique identifier (UUID) for the inquiry favorite entity.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Single inquiry favorite, schema-compliant.","typeName":"IAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries/{id}","method":"get"},{"specification":"Create a new inquiry favorite for a user. This operation inserts a row into ai_shop_favorites_inquiries, requiring ai_shop_customer_id, ai_shop_inquiry_id, created_at per the schema. No soft deletion is present; attempts to favorite an already-favorited inquiry must respect the unique constraint (ai_shop_customer_id + ai_shop_inquiry_id).","description":"Add a new inquiry to the user's favorites. The request body must contain the customer's user ID, inquiry ID, and the created_at timestamp. If the combination already exists, error or no-op behavior is governed by the database unique constraint. Fields not present in the schema are ignored. No soft delete is supported; deletion is hard remove.","summary":"Create a new inquiry favorite (ai_shop_favorites_inquiries).","parameters":[],"requestBody":{"description":"Fields required to create a new inquiry favorite record.","typeName":"IAiShopFavoritesInquiries.ICreate"},"responseBody":{"description":"The created inquiry favorite record.","typeName":"IAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries","method":"post"},{"specification":"Update fields of an existing inquiry favorite record. Only schema-defined mutable fields (ai_shop_inquiry_id, created_at) can be updated. The entry is uniquely identified by its id. No soft-deletion is present. Adheres strictly to the ai_shop_favorites_inquiries schema specification.","description":"Update an inquiry favorite record by ID. Only fields ai_shop_inquiry_id and/or created_at can be modified according to schema; other fields like id and ai_shop_customer_id are not mutable. No non-schema, virtual, or deleted fields are allowed. Duplicate combinations based on uniqueness are not permitted (unique constraint enforced).","summary":"Update fields of an inquiry favorite record (ai_shop_favorites_inquiries).","parameters":[{"name":"id","description":"Unique identifier (UUID) for the inquiry favorite record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating ai_shop_inquiry_id or created_at, if needed.","typeName":"IAiShopFavoritesInquiries.IUpdate"},"responseBody":{"description":"Updated inquiry favorite entity.","typeName":"IAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries/{id}","method":"put"}],"completed":48,"total":275,"step":0,"created_at":"2025-07-23T07:06:22.332Z"},"tokenUsage":{"facade":{"aggregate":{"total":296757,"input":{"total":279727,"cached":0},"output":{"total":17030,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":296757,"input":{"total":279727,"cached":0},"output":{"total":17030,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":296757,"input":{"total":279727,"cached":0},"output":{"total":17030,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":296757,"input":{"total":279727,"cached":0},"output":{"total":17030,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Delete a moderation action by its unique identifier. This endpoint is associated with the ai_shop_moderation_actions table in the Prisma schema, which tracks moderation responses by admins for posts or comments for audit and compliance purposes. The operation will perform a hard delete, as the schema does NOT have any soft delete fields such as deleted_at. The target record corresponding to the given ID will be permanently removed from the dataset. Only the id field (primary key) is used for identifying the moderation action to delete. Related audit trails and moderation logs will remain unaffected by this action, preserving historical compliance data. Security considerations dictate that only authorized administrators should have access, and appropriate audit logging should be enforced at the application layer.","description":"Deletes a moderation action entity referenced by its id from the ai_shop_moderation_actions table. This action is irreversible and permanently removes the record, as no soft delete field (such as deleted_at) exists in the schema. The operation requires specifying the moderation action's id in the URL path, which is a string UUID. All other fields—such as moderator_id, post_id, comment_id, action_type, and reason—are not necessary for deletion. After successful deletion, the related moderation action is no longer accessible or restorable via API, although audit records referencing this id will remain for compliance. Ensure that deletion events are logged for audit purposes, in fulfillment of moderation and compliance requirements. The endpoint is designed for admin-level use cases and should not be exposed to general users or non-administrative clients.\n\nIf you need to query for existing moderation actions prior to deletion, use a corresponding GET or PATCH operation on the same entity.","summary":"Hard delete a moderation action from ai_shop_moderation_actions by id.","parameters":[{"name":"id","description":"Target moderation action's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/moderationActions/{id}","method":"delete"},{"specification":"List ai_shop_carts entities matching search/filter criteria. This PATCH endpoint is based on the ai_shop_carts table, which represents persistent user and guest shopping carts, including status (active, abandoned, converted), customer or session association, and audit fields. Supports pagination, sorting, and multi-criteria filtering (e.g., by status, customer_id, creation time). Returns a paginated response, allowing admin or user dashboards to list and manage carts. The request body is expected to use aiShopCarts.IRequest for search/filter parameters, supporting precise queries.","description":"Performs a filtered and paginated search for carts in the ai_shop_carts table. This endpoint supports searching by cart status (active, abandoned, converted), associated customer_id, session_id, and date ranges using a structured request body (aiShopCarts.IRequest). Results include all atomic fields: id, ai_shop_customer_id (nullable), ai_shop_cart_session_id (nullable), status, created_at, updated_at, abandoned_at (nullable). Useful for integration with front-end dashboards or admin panels, enabling efficient management and reporting across all user carts in the platform. Results are returned in aiShopCarts.IPage format for pagination compliance.","summary":"Paginated and filtered cart listing for ai_shop_carts.","parameters":[],"requestBody":{"description":"Search, filter, and pagination info for listing ai_shop_carts records.","typeName":"aiShopCarts.IRequest"},"responseBody":{"description":"Paginated cart results with all atomic fields from ai_shop_carts.","typeName":"aiShopCarts.IPage"},"authorizationRoles":null,"path":"/aiShop/carts","method":"patch"},{"specification":"Get a single cart's details by its unique identifier (id) from the ai_shop_carts table. The primary key id is used to retrieve the target cart, which contains details such as status, created_at, updated_at, and associations with a customer or guest session. The endpoint provides core audit and cart state data for use cases like cart recovery, detailed view in checkout flow, or admin inspection.","description":"Retrieves all atomic, normalized details for a single cart (ai_shop_carts), identified by its id (UUID). Response fields include: id, ai_shop_customer_id (nullable), ai_shop_cart_session_id (nullable), status, created_at, updated_at, abandoned_at (nullable). No additional or denormalized fields are included. The operation is suitable for customer, admin, or guest flows that require full state and audit information for a shopping cart. Ensures referential integrity for related details such as customer or cart session (which can be resolved via their respective endpoints). Errors are returned if the id is not found.","summary":"Get one cart by id from ai_shop_carts.","parameters":[{"name":"id","description":"Target cart's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed single cart record from ai_shop_carts table.","typeName":"aiShopCarts"},"authorizationRoles":null,"path":"/aiShop/carts/{id}","method":"get"},{"specification":"Create a new shopping cart in the ai_shop_carts table. This endpoint implements cart creation for registered users or guests (session-based), storing audit and association fields as specified in the requirements and schema. Accepts all necessary cart attributes via aiShopCarts.ICreate request body—such as customer ID, cart session ID (mutually exclusive), and status.","description":"Creates a new ai_shop_carts record using POST. The request body (aiShopCarts.ICreate) must include all required cart attributes: either ai_shop_customer_id (for registered users) or ai_shop_cart_session_id (for guests), plus the cart status (active, abandoned, etc.). Also supports optional fields: created_at, updated_at, abandoned_at, if used for custom flows or legacy import. Does not accept fields not present in the schema. Returns the full details of the newly created cart as aiShopCarts, including assigned id and any auto-generated audit fields. Business logic enforces mutual exclusivity of customer/session, and API should validate these constraints accordingly.","summary":"Create a new cart record in ai_shop_carts.","parameters":[],"requestBody":{"description":"Cart creation info based on ai_shop_carts schema.","typeName":"aiShopCarts.ICreate"},"responseBody":{"description":"Full cart record after creation.","typeName":"aiShopCarts"},"authorizationRoles":null,"path":"/aiShop/carts","method":"post"},{"specification":"Update an existing shopping cart's attributes by id, in the ai_shop_carts table. This endpoint enables changes to cart association (e.g., linking session to customer on login), status flag (active, abandoned, etc.), or audit fields as described in schema fields. All updatable attributes are atomic and normalized. The target is identified by the cart's id (UUID).","description":"Updates an existing cart in ai_shop_carts using PUT. The cart is specified by id (path parameter, UUID). The request body (aiShopCarts.IUpdate) may update: ai_shop_customer_id, ai_shop_cart_session_id, status, abandoned_at, as well as audit fields such as updated_at. Mutually exclusive logic between customer_id and session_id must be enforced by the API handler. Only the fields defined in the schema ai_shop_carts are accepted for update; any extra fields will be rejected. Returns the full, updated cart record (aiShopCarts). If the target record does not exist, returns an error. Audit requirements mandate that updates to cart status, association, or abandonment timestamp are all properly logged for compliance and analytics.","summary":"Update an existing cart by id in ai_shop_carts.","parameters":[{"name":"id","description":"Target cart's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable cart fields as defined in ai_shop_carts schema.","typeName":"aiShopCarts.IUpdate"},"responseBody":{"description":"Updated cart record after modification.","typeName":"aiShopCarts"},"authorizationRoles":null,"path":"/aiShop/carts/{id}","method":"put"},{"specification":"Delete a shopping cart by its id from ai_shop_carts. This endpoint performs a hard delete, as the schema has no soft delete or archived field (no deleted_at or is_deleted). The operation is auditable, removing the cart record entirely from the table. Key integrity is maintained, but audit logs or related analytics will continue to reference the deleted cart's id for traceability. Only the id field (UUID primary key) is required to target the cart.","description":"Deletes a cart from ai_shop_carts by its id (UUID). As the schema does not include soft delete capabilities, this action will permanently erase the target cart from the database. All associated atomic fields are removed, but references from audit trails or analytics may persist to provide historical traceability. The delete operation is irreversible. Business logic should enforce that only non-converted carts (not yet checked out as orders) can be deleted; post-order deletion may cause data integrity issues but this logic is not enforced at DB level. Errors will be returned if the specified id is not found. Ensure user authorization and audit logging are handled at the API platform layer.","summary":"Hard delete a cart by id from ai_shop_carts.","parameters":[{"name":"id","description":"Target cart's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/carts/{id}","method":"delete"},{"specification":"Paginated, filtered list carts items (ai_shop_cart_items) matching specific search criteria. Based on ai_shop_cart_items schema, each record represents a product/variant line item in a customer's or guest's shopping cart. Allows querying by cart id, customer, product id, variant id, added_at time, or quantity. Supports pagination and sorting. The request body uses aiShopCartItems.IRequest for search parameters.","description":"Retrieves a paginated and filtered list of cart items from ai_shop_cart_items. Allows search by ai_shop_cart_id (parent cart), ai_shop_product_id, ai_shop_product_variant_id, quantity, and added_at/updated_at. Request body (aiShopCartItems.IRequest) defines the search and pagination logic. Useful for building shopping cart detail views, analytics, and admin tools where itemized product lines are needed. Results are returned in aiShopCartItems.IPage format, with atomic fields only (id, ai_shop_cart_id, ai_shop_product_id, ai_shop_product_variant_id, quantity, added_at, updated_at).","summary":"List and paginate cart item records from ai_shop_cart_items.","parameters":[],"requestBody":{"description":"Search, filter, and pagination info for cart items listing.","typeName":"aiShopCartItems.IRequest"},"responseBody":{"description":"Paginated cart item list response based on ai_shop_cart_items.","typeName":"aiShopCartItems.IPage"},"authorizationRoles":null,"path":"/aiShop/cartItems","method":"patch"},{"specification":"Get a single cart item by id from ai_shop_cart_items. Each cart item record identifies a specific product/variant, quantity, parent cart, and timestamps for auditing. The endpoint targets a single cart item using the id (UUID). Used for viewing/editing a particular item in customer or admin flows.","description":"Fetches details of a single cart item from ai_shop_cart_items, identified by the id path parameter (UUID). The response includes the atomic normalized fields: id, ai_shop_cart_id, ai_shop_product_id, ai_shop_product_variant_id, quantity, added_at, updated_at. The fetched record provides a snapshot of a single cart line for front-end display or editing within shopping cart management workflows. Referenced products and variants should be fetched separately as needed. Errors will be returned if the id is not found or invalid.","summary":"Get one cart item by id from ai_shop_cart_items.","parameters":[{"name":"id","description":"Target cart item's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the specified cart item from ai_shop_cart_items.","typeName":"aiShopCartItems"},"authorizationRoles":null,"path":"/aiShop/cartItems/{id}","method":"get"},{"specification":"Create a new cart item entity in ai_shop_cart_items. The endpoint receives all attributes needed to add a product/variant to an existing cart, such as cart ID, product ID, variant ID, and quantity. This fulfills the platform's requirement for precise shopping cart itemization and auditing. The creation request body must follow the aiShopCartItems.ICreate schema.","description":"Creates a new cart item in ai_shop_cart_items, using request body (aiShopCartItems.ICreate) with all required fields: ai_shop_cart_id (UUID of the parent cart), ai_shop_product_id, ai_shop_product_variant_id, and quantity. Optional audit/timestamp fields can also be provided if mandated by the interface. Response returns full aiShopCartItems record, including assigned id, and all audit fields (added_at, updated_at). Product details are not denormalized and should be queried separately as needed. Business logic should check for uniqueness constraints (cart cannot have duplicate product-variant lines). Errors are returned for invalid references or duplicate lines.","summary":"Add a new cart item record to ai_shop_cart_items.","parameters":[],"requestBody":{"description":"Creation info for the new cart item (product/variant/quantity).","typeName":"aiShopCartItems.ICreate"},"responseBody":{"description":"Full newly created cart item record.","typeName":"aiShopCartItems"},"authorizationRoles":null,"path":"/aiShop/cartItems","method":"post"},{"specification":"Update an existing cart item in ai_shop_cart_items by id. Allows changing the product's variant, quantity, or cart association, reflecting direct user edits or cart synchronization logic. Requires path id (UUID) to uniquely identify the cart item. Request body follows aiShopCartItems.IUpdate for permissible editable fields.","description":"Updates a cart item in ai_shop_cart_items, with id as the path parameter. The request body (aiShopCartItems.IUpdate) allows updating ai_shop_cart_id, ai_shop_product_id, ai_shop_product_variant_id, and quantity, as well as audit fields (updated_at). Product/variant updates must obey platform logic against duplicating cart lines. Response returns the complete updated aiShopCartItems record. Errors are returned for invalid id, reference violations, or attempted duplication of unique lines. Timestamps and audit requirements must be applied at the API service layer.","summary":"Update a cart item by id in ai_shop_cart_items.","parameters":[{"name":"id","description":"Target cart item's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable cart item fields as per ai_shop_cart_items schema.","typeName":"aiShopCartItems.IUpdate"},"responseBody":{"description":"Updated cart item record after modification.","typeName":"aiShopCartItems"},"authorizationRoles":null,"path":"/aiShop/cartItems/{id}","method":"put"},{"specification":"Delete a cart item from ai_shop_cart_items by its id. This operation is a hard delete, as there is no soft delete field in the schema. The action is used in cart management flows for customers, guest sessions, or admin intervention. Only the id path parameter is required for permanent removal. No extra fields are referenced.","description":"Deletes a cart item from ai_shop_cart_items using the id path parameter (UUID). This is a permanent delete operation—no deleted_at or is_deleted exist in the schema, so the record is fully removed. Business logic should ensure cart validity after deletion; orphaned or empty carts should be handled appropriately in consuming services. The operation is irreversible, and any cart summary or analytics logic downstream must account for instant data removal. Errors are returned if the record doesn't exist or is already deleted.","summary":"Hard delete a cart item by id from ai_shop_cart_items.","parameters":[{"name":"id","description":"Target cart item's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/cartItems/{id}","method":"delete"},{"specification":"Paginated, filtered search for ai_shop_cart_sessions, representing shopping cart sessions for guest users. Enables dashboard, analytics, admin, or API-group querying of session-based cart flows. The PATCH method allows for advanced searching by creation/update time, session_token, or other atomic fields as specified in ai_shop_cart_sessions schema. Returns a paginated response (aiShopCartSessions.IPage).","description":"Returns a paginated and filtered list of shopping cart session records from the ai_shop_cart_sessions table, as per supplied search criteria in the request body (aiShopCartSessions.IRequest). Supports filtering by session_token, created_at, updated_at, and provides all normalized fields in each record. Used for admin monitoring, analytics, troubleshooting cart session flows, or merging guest-to-user carts on login. Output in aiShopCartSessions.IPage, with all audit fields, for direct integration with paging-based UI or BI dashboards.","summary":"List/search guest cart sessions from ai_shop_cart_sessions with pagination.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for ai_shop_cart_sessions.","typeName":"aiShopCartSessions.IRequest"},"responseBody":{"description":"Paginated list of cart session records from ai_shop_cart_sessions.","typeName":"aiShopCartSessions.IPage"},"authorizationRoles":null,"path":"/aiShop/cartSessions","method":"patch"}],"completed":60,"total":275,"step":0,"created_at":"2025-07-23T07:06:26.196Z"},"tokenUsage":{"facade":{"aggregate":{"total":356999,"input":{"total":336269,"cached":0},"output":{"total":20730,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":356999,"input":{"total":336269,"cached":0},"output":{"total":20730,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":356999,"input":{"total":336269,"cached":0},"output":{"total":20730,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":356999,"input":{"total":336269,"cached":0},"output":{"total":20730,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"This API operation updates an existing post (ai_shop_posts) by its primary key, supporting title and body updates, publishing changes, or transitioning post status (such as 'draft' to 'published'). It relies strictly on fields present in the ai_shop_posts schema: id (PK, UUID), title (string), body (string), role_type (string), status (string), and updated_at (DateTime). It does NOT reference any fields not in schema, such as deleted_at or created_by. Security is enforced by role_type and authentication context, ensuring only authorized users (customer, seller, or admin as appropriate) can update posts. This operation returns the updated post on success, or an error if the id does not exist or access is denied. Hard delete or soft delete is NOT performed here. Relationship: updates an existing ai_shop_posts record; dependencies: relies on path parameter id (uuid). Validation ensures that all required fields for post updating are strictly set according to schema constraints. Related operation: DELETE /aiShop/posts/{id} will perform hard delete, as the ai_shop_posts table does not have a soft-delete field.","description":"Updates a post in the ai_shop_posts table, using the id path parameter for direct lookup and modification. The operation covers title, body, status, and role_type (if permitted by business logic), but will never reference or update any non-existent fields. Each update is timestamped via updated_at (which must be provided in requestBody). Access control ensures only permitted user role types may update a post. If the id does not match an existing post, a 404 is returned. Business logic validates new title/body per business rules. Related: hard delete is handled by DELETE /aiShop/posts/{id} as no soft-delete field exists in schema. Strict schema verification: all referenced fields must exist.","summary":"Update an ai_shop_posts record by id (PUT) — hard update, no soft-delete reference; fields: id, title, body, status, role_type, updated_at; no extraneous fields.","parameters":[{"name":"id","description":"Target ai_shop_posts record's ID (UUID) for update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated record info for target post. Only contains fields from ai_shop_posts: title, body, status, role_type, updated_at.","typeName":"IAiShopPost.IUpdate"},"responseBody":{"description":"The updated ai_shop_posts record.","typeName":"IAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts/{id}","method":"put"},{"specification":"This API operation deletes a post by its id in ai_shop_posts. According to the schema, there is NO deleted_at or is_deleted field (no soft delete), so the operation performs a hard (permanent) delete. Requires the id path parameter. This irreversibly removes a post record from the database. The operation returns a success status or error if id not found. No reference should be made to non-existent soft delete fields; no fields in the response, only standard delete confirmation. All field mentions match the schema exactly. Related: Use PUT for updates, not deletes.","description":"Permanently deletes an ai_shop_posts record. This is a hard delete — there are NO soft-delete fields (such as deleted_at or is_deleted) in ai_shop_posts. The operation requires an id (UUID) as specified in the path. On success, the record is removed from storage and will not appear in any query. Security and access control are enforced as appropriate for the current user role. If the record does not exist, a 404 response is given. No audit trail is created in ai_shop_posts (use audit log table separately).","summary":"Hard-delete an ai_shop_posts record by id ({id}); destructive remove as there are no soft-delete fields in schema.","parameters":[{"name":"id","description":"Target ai_shop_posts record's ID (UUID) for deletion.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/posts/{id}","method":"delete"},{"specification":"This API operation retrieves a list of post comments (from ai_shop_post_comments table) with optional filters or searching. Implements listing, search, and pagination; returns only fields from schema: id, post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. No deleted_at or is_deleted fields exist, so the list is always hard query. Related operations: GET /aiShop/postComments/{id} for details.","description":"Retrieves multiple ai_shop_post_comments records using patch (to enable complex search/pagination in requestBody). Returns a set of comment objects, each with only schema-defined fields. Permits searching by post_id, author ID, status, or creation/update time. Does not support soft-deleted queries (no such field in schema). Returns a paginated or filtered list. If no matching records, data array is empty.","summary":"List or search ai_shop_post_comments records, strictly using schema fields (PATCH) — advanced querying, no soft delete.","parameters":[],"requestBody":{"description":"Search or filter info for ai_shop_post_comments listing; uses only fields present in schema (no deleted_at/is_deleted support).","typeName":"IAiShopPostComment.IRequest"},"responseBody":{"description":"A paginated or filtered list of ai_shop_post_comments records.","typeName":"IPageIAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments","method":"patch"},{"specification":"Retrieves a single post comment by its id from ai_shop_post_comments. Only existing fields are referenced in the response: id, post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. There is NO soft delete or deleted_at field. Returns 404 if the ID is not found. This is a detail-get, not a list/search endpoint.","description":"Fetches a single ai_shop_post_comments record by primary key. Returns all fields specified by the schema. There are no deleted_at or is_deleted fields; response is strictly schema-compliant. Returns 404 if no record is found. Use PATCH for search/listing, POST for creation, PUT for update.","summary":"Get ai_shop_post_comments detail by id (GET) — returns schema fields only, no soft-delete reference.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_comments record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The found ai_shop_post_comments record, or 404 if not found.","typeName":"IAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments/{id}","method":"get"},{"specification":"Creates a new ai_shop_post_comments record, assigning a comment to a post or parent comment. Request body strictly limited to fields in the schema: post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. No soft delete or extra fields. Returns the new record. Security: only authenticated/comment-authorized roles may create. Related: PATCH for searching/listing, GET for detail, PUT for update.","description":"Creates a comment record in ai_shop_post_comments. Required fields: post_id, body, role_type, created_at. Optional author fields (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id) and parent_id may be supplied. Request and returned object strictly adhere to schema; no reference to deleted_at or non-existent fields. Returns the record created if successful.","summary":"Create a new ai_shop_post_comments record (POST), only valid schema fields, no soft-delete reference.","parameters":[],"requestBody":{"description":"Fields for the new post comment. Only schema fields are accepted: post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at.","typeName":"IAiShopPostComment.ICreate"},"responseBody":{"description":"The newly created ai_shop_post_comments record.","typeName":"IAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments","method":"post"},{"specification":"Updates a comment in ai_shop_post_comments by its id. Allows updating only schema-defined fields: post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. There is NO deleted_at field (no soft/hard delete here). Strictly validates that only these fields are referenced. Returns the updated comment. PUT method: full object update. Related: use DELETE for hard delete, PATCH for listing, POST for create.","description":"Updates a single ai_shop_post_comments record by id. Only accepts valid fields from the schema; no reference to deleted_at, created_by, or any extra fields. Requires id in path, updates all supplied fields as per schema. Responds with the updated object. Responds with 404 if not found or unauthorized. ","summary":"Update ai_shop_post_comments by id (PUT) — only supports updating schema fields; full object update; no soft delete.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_comments record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The complete object to update the ai_shop_post_comments record, using only fields LITERALLY present in schema.","typeName":"IAiShopPostComment.IUpdate"},"responseBody":{"description":"The updated ai_shop_post_comments record (all schema fields).","typeName":"IAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments/{id}","method":"put"},{"specification":"Deletes a comment from ai_shop_post_comments by id. No soft delete or 'deleted_at' field exists in this table, so DELETE is a hard delete (permanent removal). Only requires id in the path. On success, comment is permanently erased; 404 if not found. No soft/hard delete field is used. Operation effect is irreversible; comment cannot be recovered.","description":"Hard-deletes an ai_shop_post_comments record. As there is no soft delete field (no deleted_at column), this operation permanently removes the record. Requires only id in path; responds with confirmation or 404 if not found. Follows strict schema and ERD: deletes the entire comment from the database. Does not allow for soft deletion or reversible operation.","summary":"Hard-delete ai_shop_post_comments by id (DELETE) — irreversible removal because no soft-delete field exists.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_comments record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/postComments/{id}","method":"delete"},{"specification":"List/search endpoint for ai_shop_post_attachments, supporting search, pagination, and advanced filtering. Patch method allows for passing requestBody as complex query parameters. Only schema-defined fields (id, post_id, file_id, name, type, size) are relevant. There are no deleted_at or soft-delete fields; responses and queries are hard. Returns a paginated or filtered set of attachment records. Related: GET for details, POST for creation, PUT for update, DELETE for removal.","description":"Returns a filtered or paginated list of ai_shop_post_attachments. Only the following fields are possible in search results: id, post_id, file_id, name, type, size. Pagination and filter settings are passed in request body (IAiShopPostAttachment.IRequest). Returns a collection under strict schema compliance (no references to deleted_at or extra fields). There is no soft deletion logic. Related: use GET for details, DELETE for hard delete.","summary":"List/search ai_shop_post_attachments (PATCH) — supports only real schema fields; patch for advanced querying.","parameters":[],"requestBody":{"description":"IAiShopPostAttachment.IRequest: complex query for paginated/filterable list, matching only schema fields. No soft-delete option available.","typeName":"IAiShopPostAttachment.IRequest"},"responseBody":{"description":"A paginated/filterable list of ai_shop_post_attachments records, strictly using schema fields.","typeName":"IPageIAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments","method":"patch"},{"specification":"GET endpoint for retrieving a single ai_shop_post_attachments record by id. Only fields allowed in response are those literally present in schema: id, post_id, file_id, name, type, size. No soft-deletion field is available; 404 if not found. Related operations: PATCH (list/paginate), POST (create), PUT (update), DELETE (hard-delete).","description":"Retrieves a single ai_shop_post_attachments record by id. Only schema fields are present. Returns 404 if not found. Does not reference non-existent soft-delete or deleted_at fields. Related: PATCH for list, POST for creation, PUT for update, DELETE for hard removal.","summary":"Get ai_shop_post_attachments detail by id (GET), supports only schema fields, 404 if not found.","parameters":[{"name":"id","description":"The id (UUID) of ai_shop_post_attachments record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_post_attachments record for given id, or 404 if not exists.","typeName":"IAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments/{id}","method":"get"},{"specification":"POST endpoint to create a new ai_shop_post_attachments record. Only fields from schema are accepted (id, post_id, file_id, name, type, size). No deleted_at/soft delete/is_deleted fields are referenced or affected; creates a new attachment for an existing post. Dependencies: post_id (FK), file_id (FK) must reference existing records, error if not. Security validation on parent post/file is handled in business logic. Returns the new ai_shop_post_attachments record with all schema fields populated.","description":"Creates a new record in ai_shop_post_attachments, returning the created record. Only schema fields (id, post_id, file_id, name, type, size) are allowed; other extra fields are rejected. No soft/hard delete reference. Business validation ensures post_id/file_id refer to existing records. Related: PATCH for batch/pagination, GET for detail, PUT for update, DELETE for hard removal.","summary":"Create ai_shop_post_attachments (POST), creates record with only schema-compliant fields, no soft-delete reference.","parameters":[],"requestBody":{"description":"Attachment creation data — id optional or auto-generated; post_id, file_id, name, type, size required. Only schema fields accepted.","typeName":"IAiShopPostAttachment.ICreate"},"responseBody":{"description":"The newly created ai_shop_post_attachments record, with only schema-compliant fields.","typeName":"IAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments","method":"post"},{"specification":"PUT endpoint for updating an existing ai_shop_post_attachments record by id. Only fields from schema (id, post_id, file_id, name, type, size) are used. No soft delete or deleted_at logic. All field references must exist in the schema (no extra fields). Returns the updated attachment on success, 404 if id not found. Related: PATCH for search, POST create, DELETE hard remove.","description":"Updates an ai_shop_post_attachments record by id; only valid schema fields (id, post_id, file_id, name, type, size) are valid for update. No reference to soft/hard delete field. PUT is a full update. If id is not found, returns 404. Security handled at business layer. Related: PATCH for searching, POST for create, DELETE for hard remove.","summary":"Update ai_shop_post_attachments by id (PUT), updates schema fields only (no deleted_at), 404 if not found.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_attachments record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attachment data to update (full replacement, all required schema fields for attachment).","typeName":"IAiShopPostAttachment.IUpdate"},"responseBody":{"description":"The updated ai_shop_post_attachments record (schema fields only).","typeName":"IAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments/{id}","method":"put"},{"specification":"DELETE endpoint for removing an ai_shop_post_attachments record by id. There is no soft delete field; deletion is permanent. Only parameter required is id in the path; operation cannot be reversed (no deleted_at field in schema). Returns 204 or confirmation on success, 404 if id does not exist. Related: use PATCH for list, POST for creation, PUT for update.","description":"Permanently deletes an ai_shop_post_attachments record. No soft/hard deleted_at/is_deleted field is present; this is a hard delete per schema. Operation removes the record from all queries and storage. If the record is not found, returns 404. There is no way to restore deleted records from this endpoint.","summary":"Hard delete ai_shop_post_attachments by id (DELETE) — destructive; no soft delete; no deleted_at in schema.","parameters":[{"name":"id","description":"The id (UUID) of ai_shop_post_attachments record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/postAttachments/{id}","method":"delete"}],"completed":72,"total":275,"step":0,"created_at":"2025-07-23T07:06:36.126Z"},"tokenUsage":{"facade":{"aggregate":{"total":417320,"input":{"total":392809,"cached":0},"output":{"total":24511,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":417320,"input":{"total":392809,"cached":0},"output":{"total":24511,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":417320,"input":{"total":392809,"cached":0},"output":{"total":24511,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":417320,"input":{"total":392809,"cached":0},"output":{"total":24511,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new ai_shop_post_reports record, which tracks a user-submitted report against a post for abuse, toxicity, or moderation request. This table holds an F-key to the reported post, optional F-keys to the reporting customer/seller/admin, an optional link to the moderation action (nullable), a textual reason, and a created_at timestamp. All fields referenced must exist in the Prisma schema (id, post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, moderation_action_id, reason, created_at). This endpoint is for registering new reports and complies with 3NF as per requirements.","description":"This operation allows any authenticated actor (customer, seller, or admin) to file a report against a board post (ai_shop_posts) for content moderation, abuse, policy violation, or audit purposes. The required fields are the target post's ID (post_id), at least one reporter ID (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id), a reason for the report, and a generated created_at timestamp. The moderation_action_id link is nullable and not set on creation.\n\nAll provided fields reflect the actual columns in ai_shop_post_reports:\n- id: generated automatically by the system\n- post_id: must exist on creation and match ai_shop_posts.id\n- ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id: at least one required (actor polymorphism)\n- moderation_action_id: nullable; omitted on creation\n- reason: string, required (explains why the post is reported)\n- created_at: timestamp of report creation\n\nNo fields are referenced that do not exist in schema. On valid creation, a new ai_shop_post_reports row is registered for auditability, with exact field mapping to Prisma schema.","summary":"Create a new post report in ai_shop_post_reports.","parameters":[],"requestBody":{"description":"New post report data for ai_shop_post_reports creation.","typeName":"IAiShopPostReports.ICreate"},"responseBody":{"description":"The created post report entity.","typeName":"IAiShopPostReports"},"authorizationRoles":null,"path":"/aiShop/postReports","method":"post"},{"specification":"Update an existing ai_shop_post_reports record, as per 3NF schema. This operation allows updating only existing fields in schema (reason, moderation_action_id, reporter IDs if needed). The entity is identified strictly by id (primary key) as in schema; non-existent, redundant, or virtual fields are never referenced.","description":"Updates a report in ai_shop_post_reports by its primary key (id). Valid fields for update are those in schema: reason, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, moderation_action_id. Every reference is validated at the application layer to ensure referential integrity. Reporter fields are polymorphic, only edit if actor identity was misattributed; moderation_action_id can be linked if the report is addressed; reason can be amended for clarification.\n\nNo references to deleted_at, created_by, updated_by, or any fields not present in the schema. All updates are constrained to column definitions in ai_shop_post_reports. Audit fields (created_at) are not changeable; id identifies the row.\n\nRequest and response strictly adhere to schema—any attempt to update fields outside those defined in Prisma is rejected. Returns the up-to-date report entity on success.","summary":"Update an existing post report in ai_shop_post_reports.","parameters":[{"name":"id","description":"Target post report's ID (ai_shop_post_reports.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the post report entity.","typeName":"IAiShopPostReports.IUpdate"},"responseBody":{"description":"The updated post report entity.","typeName":"IAiShopPostReports"},"authorizationRoles":null,"path":"/aiShop/postReports/{id}","method":"put"},{"specification":"Delete (hard delete) an existing ai_shop_post_reports record by primary key (id). Since the Prisma schema for ai_shop_post_reports does NOT include a deleted_at or is_deleted field, this is a permanent, physical deletion. All field and behavior descriptions are limited to schema-defined columns. Endpoint is only permitted on records identified by id, with no reference to soft-delete or extra audit fields.","description":"Deletes a post report entity in ai_shop_post_reports using its id. Because there is NO deleted_at, is_deleted, or equivalent soft-delete field in the schema, this operation irreversibly removes the record from the database. As per the schema, only id is required as input; all deletions are hard deletes.\n\nOperation never references or modifies any out-of-schema, redundant, or derived columns. This operation is for permanent removal of the target post report. It is irreversible and does not alter any audit trail fields on the entity itself. Uses standard referential integrity checks per schema.","summary":"Permanently delete a post report from ai_shop_post_reports (hard delete).","parameters":[{"name":"id","description":"Target post report's ID (ai_shop_post_reports.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/postReports/{id}","method":"delete"},{"specification":"List ai_shop_comment_attachments with query/search/filtering. Supports advanced filtering, pagination, and sorting as necessary. The ai_shop_comment_attachments table links attachments to post comments (by comment_id) and underlying file metadata (by file_id); all fields referenced must physically exist in schema: id, comment_id, file_id, name, type, size. No references made to deleted_at, created_by, or any absent field.","description":"Retrieves a paginated, optionally-filtered list of comment attachment records (ai_shop_comment_attachments). Supports searching by fields defined in the schema: comment_id, file_id, name, type, and range/sorting by size. References to deleted_at, created_by, etc. are never made. The response is a paged list of attested, schema-valid attachment metadata rows directly from ai_shop_comment_attachments, as per required 3NF normalization for file relationship tracking.","summary":"List comment attachments from ai_shop_comment_attachments with search, paging.","parameters":[],"requestBody":{"description":"Attachment list search and filter criteria.","typeName":"IAiShopCommentAttachments.IRequest"},"responseBody":{"description":"Paginated list of comment attachment records.","typeName":"IPageAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments","method":"patch"},{"specification":"Read details of a single ai_shop_comment_attachments record by its primary key. Every value in the response is mapped strictly to fields in the Prisma schema: id, comment_id, file_id, name, type, size. No reference made to created_at, deleted_at, or any non-existent column.","description":"Returns a single comment attachment entity from ai_shop_comment_attachments by its id. Response contains only those fields defined in the schema: id, comment_id, file_id, name, type, size. This endpoint never references additional fields beyond those present in the Prisma definition. Used in detail views or file retrieval UIs. Returns 404 if id is not found.","summary":"Get a single comment attachment entity (ai_shop_comment_attachments) by id.","parameters":[{"name":"id","description":"Target comment attachment's ID (ai_shop_comment_attachments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the requested comment attachment entity.","typeName":"IAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments/{id}","method":"get"},{"specification":"Create a new ai_shop_comment_attachments record, which ties an attachment to a comment and a physical file. The POST body must only include fields present in the schema: comment_id, file_id, name, type, size. No attribute is referenced beyond those defined in ai_shop_comment_attachments. Implements normalized upload/file association as per requirements.","description":"This operation creates a new comment attachment, linking a file asset to a post comment using atomic, schema-defined fields: comment_id (reference to ai_shop_post_comments), file_id (reference to ai_shop_files), name (display name), type (MIME/type string), and size (file size in bytes). No other fields or derived/soft-deletion logic is referenced.\n\nThe response returns the created entity, exactly as stored in ai_shop_comment_attachments. On creation, referential integrity checks ensure comment_id and file_id both exist. No deleted_at, updated_at, or creator-tracking fields are ever referenced, per schema definition.","summary":"Create a new comment attachment (ai_shop_comment_attachments record).","parameters":[],"requestBody":{"description":"Data for comment attachment creation.","typeName":"IAiShopCommentAttachments.ICreate"},"responseBody":{"description":"The created comment attachment entity.","typeName":"IAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments","method":"post"},{"specification":"Update (edit) an existing ai_shop_comment_attachments record, as identified by primary key (id). Only those fields in the Prisma schema are permitted for updating: comment_id, file_id, name, type, size. No soft deletion, creator audit, or timestamp update logic is referenced unless stated in schema.","description":"Modifies an existing comment attachment entity (ai_shop_comment_attachments). Permits editing all mutable fields as defined in schema: comment_id, file_id, name, type, size. The record is identified by id. All update logic restricts changes to fields present in the schema, with referential integrity enforced on referenced ids. Any attempt to update a non-schema field is an error. Response is the fully updated entity, always matching the schema definition.","summary":"Update a comment attachment entity (ai_shop_comment_attachments).","parameters":[{"name":"id","description":"Target comment attachment's ID (ai_shop_comment_attachments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the attachment record.","typeName":"IAiShopCommentAttachments.IUpdate"},"responseBody":{"description":"The updated comment attachment record.","typeName":"IAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments/{id}","method":"put"},{"specification":"Delete a single ai_shop_comment_attachments record by id. The table does NOT include any soft delete, deleted_at, or equivalent fields, so this is a hard/persistent removal. Only the id is referenced as an input, and no non-existent fields or audit behavior is described.","description":"Permanently deletes a comment attachment row in ai_shop_comment_attachments by id. This is a hard delete; since there is no deleted_at or is_deleted flag in the Prisma schema for this table, the record is physically removed from the database. Only references properties defined in the schema; referential/audit consistency maintained by application logic elsewhere.","summary":"Hard delete a comment attachment record from ai_shop_comment_attachments.","parameters":[{"name":"id","description":"Target comment attachment's ID (ai_shop_comment_attachments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/commentAttachments/{id}","method":"delete"},{"specification":"Query (search, list) ai_shop_moderation_actions records with advanced filter and pagination. Table implements moderation logs—audit trails for post/comment actions. All referenced fields MUST exist: id, moderator_id (admin), post_id, comment_id, action_type, reason, created_at. This endpoint enables admins to find actions by actor, target, type, time, or reason. No virtual/derived/soft-deleted fields are referenced.","description":"Returns a paginated, filtered list of moderation actions (ai_shop_moderation_actions) based entirely on fields in the schema: id, moderator_id (admin actor), post_id (optional), comment_id (optional), action_type, reason, created_at. No soft-delete, updated_by, or similar attributes are referenced. Filters are applied only to schema-defined attributes using application-level logic. Each row in the response is directly mapped from the database and all output fields exist in the schema.","summary":"List ai_shop_moderation_actions entities with filtering, paging, search.","parameters":[],"requestBody":{"description":"Filter/search parameters for moderation action log listing.","typeName":"IAiShopModerationActions.IRequest"},"responseBody":{"description":"Paginated response listing moderation action records.","typeName":"IPageAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions","method":"patch"},{"specification":"Retrieve full ai_shop_moderation_actions entity details by its primary key. Only uses fields actually present: id, moderator_id, post_id, comment_id, action_type, reason, created_at. Returns a 404 if id not present. No auditing, creator, or update fields are referenced beyond schema definition.","description":"Gets a moderation action record by id, mapped exactly to the schema's columns: id, moderator_id (admin), post_id (optional), comment_id (optional), action_type, reason, created_at. The endpoint never references or returns attributes not found in the schema. This operation is typically part of audit trail or admin dashboard logic.","summary":"Get moderation action record (ai_shop_moderation_actions) by id.","parameters":[{"name":"id","description":"Target moderation action's ID (ai_shop_moderation_actions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Moderation action entity details as stored in the schema.","typeName":"IAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions/{id}","method":"get"},{"specification":"Create a new moderation action log entry in ai_shop_moderation_actions, which tracks post/comment moderation events. Only schema-defined fields are valid: moderator_id (admin actor), post_id (optional), comment_id (optional), action_type, reason, created_at. No soft delete, update, or derived columns. Referenced records should maintain referential integrity.","description":"Creates a record in ai_shop_moderation_actions to log a new moderation event. The schema requires moderator_id (admin id), action_type, and reason; post_id and comment_id are optional for scoping to specific post/comment targets. All referenced ids are validated for schema and referential compliance. No fields other than those present (including created_at, populated by audit logic) are referenced or written. Response returns the created moderation action entity as per schema.","summary":"Create a new moderation action record in ai_shop_moderation_actions.","parameters":[],"requestBody":{"description":"Moderation action log data for creation operation.","typeName":"IAiShopModerationActions.ICreate"},"responseBody":{"description":"The created moderation action record.","typeName":"IAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions","method":"post"},{"specification":"Update an existing ai_shop_moderation_actions record identified by id. Fields permitted for update are only those in the schema: moderator_id (admin), post_id, comment_id, action_type, reason. No fields are referenced that do not exist. Updates are audit-tracked elsewhere as there is no updated_at or similar column in schema.","description":"Updates a moderation action in ai_shop_moderation_actions by id, allowing changes only to: moderator_id, post_id (optional), comment_id (optional), action_type, reason. Each reference is validated; any references to non-existent fields cause rejection. The response includes the full updated entity. No update-at, deleted_at, or audit fields exist or are referenced in request or response.","summary":"Update an existing moderation action record in ai_shop_moderation_actions.","parameters":[{"name":"id","description":"Target moderation action's ID (ai_shop_moderation_actions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Editable fields for the moderation action entity.","typeName":"IAiShopModerationActions.IUpdate"},"responseBody":{"description":"The updated moderation action entity.","typeName":"IAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions/{id}","method":"put"}],"completed":84,"total":275,"step":0,"created_at":"2025-07-23T07:06:36.683Z"},"tokenUsage":{"facade":{"aggregate":{"total":477317,"input":{"total":449357,"cached":0},"output":{"total":27960,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":477317,"input":{"total":449357,"cached":0},"output":{"total":27960,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":477317,"input":{"total":449357,"cached":0},"output":{"total":27960,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":477317,"input":{"total":449357,"cached":0},"output":{"total":27960,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new product in the AI Shop. This operation is based on the ai_shop_products table and requires all mandatory fields as defined in the schema: 'ai_shop_seller_id', 'category_id', 'name', 'description', 'status', as well as audit fields 'created_at' and 'updated_at'. The operation should not include or reference any fields not present in the schema, such as 'created_by', 'deleted_by', or 'updated_by'. No extraneous fields are permitted. On success, the complete product entity, as defined by the ai_shop_products schema, will be returned.","description":"This endpoint registers a new product with all required data: the seller it belongs to (ai_shop_seller_id), its category (category_id), its name, description (content), and business status (one of: 'active', 'inactive', 'draft', 'suspended', 'deleted'). Dates for creation and update must be provided, complying precisely with audit and business requirements. This operation references the ai_shop_products table and strictly matches the fields defined therein — no assumption of soft-delete, no created_by fields, and no omitted requirements. All business logic for category and seller validation must be enforced, and foreign key relationships must refer to existing records. Any attempt to include unsupported fields or omit required fields will result in an error. On successful creation, the endpoint responds with the newly created ai_shop_products object, including all defined fields. Error handling reflects schema violations, such as duplicate product per seller (unique constraint), invalid category or seller references, or omitted required fields.","summary":"Create a new product (ai_shop_products) with all required fields from the Prisma schema.","parameters":[],"requestBody":{"description":"New product registration data, strictly matching ai_shop_products creation requirements.","typeName":"IAiShopProducts.ICreate"},"responseBody":{"description":"The complete created product entity, matching ai_shop_products schema.","typeName":"IAiShopProducts"},"authorizationRoles":null,"path":"/aiShop/products","method":"post"},{"specification":"Update the details of an existing product in the AI Shop. This operation corresponds to the ai_shop_products table. Updates can be performed for most product fields except the primary key. The operation does not reference or require nonexistent fields such as 'deleted_at' (unless updating for soft delete), 'created_by', or 'updated_by'. All updatable fields in the schema are permitted: 'ai_shop_seller_id', 'category_id', 'name', 'description', 'status', and 'updated_at'. The operation requires the product ID as a path parameter. All schema validations and foreign key integrity must be enforced.","description":"Performs an update of the ai_shop_products record with the specified ID. Only fields defined in the Prisma schema can be updated, including seller, category, product name, description, status, and updated_at. Soft deletion is supported by updating the 'deleted_at' field when applicable since it exists in the schema; if 'deleted_at' is set, the product is treated as deleted in business logic. No extra fields (e.g., created_by, updated_by) should be included or expected. All updates must comply with unique and foreign key constraints as defined on the ai_shop_products table. If the product does not exist, or required fields are missing, or nonexistent fields are referenced, an error will be returned. On successful update, the complete updated ai_shop_products object is returned.","summary":"Update a product in ai_shop_products using its ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated product data for ai_shop_products; must match schema fields exactly.","typeName":"IAiShopProducts.IUpdate"},"responseBody":{"description":"The updated product record (ai_shop_products).","typeName":"IAiShopProducts"},"authorizationRoles":null,"path":"/aiShop/products/{id}","method":"put"},{"specification":"Delete (soft delete) an existing product in ai_shop_products. This operation performs a soft delete using the 'deleted_at' field, which exists in the Prisma schema. No hard deletion of records occurs. The path parameter is the product's primary key. No additional fields are required or referenced. The record will be excluded from business use but retained for auditability.","description":"This endpoint sets the 'deleted_at' field on the given product (ID provided via path parameter) to the current timestamp, marking it as soft deleted according to the ai_shop_products schema. No hard deletion or removal from the database occurs—deleted_at provides logical removal while supporting audit and potential undeletion. No other fields ('created_by', 'updated_by', etc.) are referenced or manipulated as they do NOT exist in the schema. Attempts to delete non-existent products will result in an error. On success, the now-soft-deleted ai_shop_products record is returned. All business logic for record exclusion relies on 'deleted_at' being non-null.","summary":"Soft-delete a product (ai_shop_products), setting deleted_at (soft delete) via ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the product to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The updated ai_shop_products record, with deleted_at set.","typeName":"IAiShopProducts"},"authorizationRoles":null,"path":"/aiShop/products/{id}","method":"delete"},{"specification":"Retrieve a filtered, paginated list of product variants (ai_shop_product_variants). Supports searching, filtering, and pagination based solely on fields in the schema: 'id', 'ai_shop_product_id', 'sku', 'option_combo', 'barcode', and 'is_active'. No extraneous filters or soft-deletion logic are referenced. The request body structure must comply with a request DTO that supports search and pagination for the permitted fields. The response will return a paginated result set.","description":"Retrieve a list of product variants using filters on actual schema fields such as product ID, SKU, option_combo, barcode, or is_active. The schema provides no fields for soft deletion, so only live records matching given criteria will be listed and no deleted_at filtering is performed. Pagination and sorting are supported. Response contains a paginated list of ai_shop_product_variants records with relevant metadata. Any attempts to filter or sort by non-existent fields will result in error. The result structure strictly matches the response DTO, listing only permitted fields.","summary":"List/search product variants (ai_shop_product_variants) with schema-valid filters/pagination.","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_product_variants; must reference actual schema fields only.","typeName":"IPageAiShopProductVariants.IRequest"},"responseBody":{"description":"Paginated result of product variants (ai_shop_product_variants).","typeName":"IPageAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants","method":"patch"},{"specification":"Retrieve a single product variant (ai_shop_product_variants) by its primary key. Uses the 'id' field (UUID) for lookup. Returns the complete variant record with all defined fields: 'id', 'ai_shop_product_id', 'sku', 'option_combo', 'barcode', 'is_active.' No non-existent fields are referenced. Returns an error if not found.","description":"Find and return details for a specific product variant in ai_shop_product_variants given its ID. Only fields as defined in the schema are returned: id, ai_shop_product_id (parent product), sku (unique per product+variant), option_combo (atomic encoding of options), barcode, and is_active. No extra data is included. If the id is not found, a not-found error is returned. No soft deletion is present, so absence means missing.","summary":"Get a product variant record (ai_shop_product_variants) by ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the product variant to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_product_variants record with given ID.","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants/{id}","method":"get"},{"specification":"Create a new product variant (ai_shop_product_variants), linked to a parent product and containing all property fields supported by the schema. Requires 'ai_shop_product_id', 'sku', 'option_combo', may supply 'barcode' and 'is_active'. Does not reference or expect any fields outside the schema. Returns the full variant record as the response body.","description":"Registers a product variant, referencing a parent product (ai_shop_product_id), SKU, option_combo, barcode (optional), and is_active. No non-existent or extraneous fields (e.g., created_by, deleted_at) are referenced; only those defined in ai_shop_product_variants may be present. All foreign relationships and uniqueness constraints (sku per product) must be validated. On success, the full ai_shop_product_variants object as defined by the schema is returned.","summary":"Create a product variant (ai_shop_product_variants), linked to ai_shop_products.","parameters":[],"requestBody":{"description":"Product variant registration info; must have all required ai_shop_product_variants fields, no extras.","typeName":"IAiShopProductVariants.ICreate"},"responseBody":{"description":"The created product variant entity (ai_shop_product_variants).","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants","method":"post"},{"specification":"Update an existing product variant (ai_shop_product_variants) identified by ID. Updatable fields are defined in the schema: 'ai_shop_product_id', 'sku', 'option_combo', 'barcode', 'is_active.' The operation NEVER references or expects non-existent fields. The path parameter is the ID of the record to update. Returns the updated variant as defined in the schema.","description":"Update the details for an existing product variant (ai_shop_product_variants), addressing only fields from the schema. Acceptable updates include parent product assignment, SKU, option_combo, barcode, and is_active. If the record is not found or if there is an attempt to update by referencing or including fields not in schema, an error is returned. No soft delete logic is present for ai_shop_product_variants, so updates do not consider deleted_at. Responses include the new state of the updated record with all schema fields.","summary":"Update a product variant (ai_shop_product_variants) using its ID.","parameters":[{"name":"id","description":"UUID of the product variant to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for ai_shop_product_variants; schema fields only.","typeName":"IAiShopProductVariants.IUpdate"},"responseBody":{"description":"The updated product variant record.","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants/{id}","method":"put"},{"specification":"Delete a product variant (ai_shop_product_variants) by ID. As the Prisma schema does NOT define a soft delete (no deleted_at), this operation performs a HARD delete — the record is removed from the database. No soft deletion, audit logging, or field such as 'deleted_at' is referenced. Path parameter is UUID of the variant.","description":"This operation removes a product variant (ai_shop_product_variants) permanently from the database. The schema does not contain a soft deletion field (such as deleted_at), so the DELETE is a hard delete: the entity is physically removed and cannot be restored. The request defines no body, only the ID as a path parameter. If the variant is not found, a not-found error will be returned. No audit or soft deletion is done in this operation — no deleted_at field exists. Only exact schema fields are referenced or manipulated.","summary":"Hard-delete a product variant from ai_shop_product_variants by ID (no soft delete field).","parameters":[{"name":"id","description":"UUID of product variant to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deleted ai_shop_product_variants record (hard deleted, if audit supported elsewhere).","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants/{id}","method":"delete"},{"specification":"List and search inventory records from ai_shop_inventories using schema-supported filters. Provides paginated, searchable inventory data including main fields: 'id', 'ai_shop_product_variant_id', 'ai_shop_seller_id', 'stock', 'restock_threshold', 'turnover_rate', 'created_at', 'updated_at', 'deleted_at' (if applicable). Filters for hard/soft deleted records by checking 'deleted_at' field (since this DOES exist in the schema). Supports full pagination and search as defined in request/response DTOs. Only valid fields may be used for searching and response.","description":"Retrieves a paginated list of inventory records from ai_shop_inventories. Filtering may include any fields actually present in the schema, such as stock, seller, variant, deleted_at (for soft deletion filtering, as the field is present), or date ranges. No fields are referenced that do not exist in the schema and all search, filter, and pagination logic complies with the schema. Only records not soft-deleted (deleted_at is null) are normally returned, unless specified otherwise in filters. Returns structured results in the paginated page DTO. Attempts to query on non-existent fields are rejected.","summary":"Paginated, filtered list of ai_shop_inventories records; supports 'deleted_at' filtering.","parameters":[],"requestBody":{"description":"List/search/pagination parameters (all must reference defined inventory fields only).","typeName":"IPageAiShopInventories.IRequest"},"responseBody":{"description":"Paginated page result of ai_shop_inventories records.","typeName":"IPageAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories","method":"patch"},{"specification":"Retrieve an inventory record from ai_shop_inventories by ID. Response is the complete inventory record, as defined in the schema. Requires the ID path parameter. Returns all fields including possible soft delete (deleted_at); if a record has a non-null deleted_at, it is considered soft deleted for business logic but can still be read via this endpoint if the ID is valid. All fields returned must exist in the schema; not-found error on missing records.","description":"Find a single ai_shop_inventories record by its ID, returning all atomic, schema-defined fields (including deleted_at for visibility of soft deletion state). If the record is not found, or the ID is invalid, an error is returned. No references or expectations for nonexistent fields. All business logic for audit and compliance must be limited to those defined in the inventory schema.","summary":"Get a specific inventory record by ID from ai_shop_inventories (including deleted_at).","parameters":[{"name":"id","description":"UUID of inventory record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"ai_shop_inventories record for given ID.","typeName":"IAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories/{id}","method":"get"},{"specification":"Create a new inventory record in ai_shop_inventories. Requires all required fields as defined in the schema: 'ai_shop_product_variant_id', 'ai_shop_seller_id', 'stock', 'restock_threshold', 'turnover_rate' (optional), 'created_at', and 'updated_at'. The operation does NOT reference or expect any additional or invented fields. The new record is returned matching the complete schema.","description":"Registers a new inventory entry, referencing only schema-permitted fields: ai_shop_product_variant_id, ai_shop_seller_id, stock, restock_threshold, optional turnover_rate, and timestamps. Cannot create or populate fields beyond those defined in the ai_shop_inventories table. All required fields must be present and valid; any foreign keys must refer to existing, valid records. On success, the response is the complete ai_shop_inventories record (with all defined fields, including deleted_at null for active entries). Errors occur for validation failures, omitted required fields, or references to non-existent entities. No soft delete performed on create.","summary":"Create an inventory record (ai_shop_inventories) with schema-required data only.","parameters":[],"requestBody":{"description":"Inventory creation data, matching all required ai_shop_inventories fields and nothing more.","typeName":"IAiShopInventories.ICreate"},"responseBody":{"description":"Created ai_shop_inventories record.","typeName":"IAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories","method":"post"},{"specification":"Update an inventory record in ai_shop_inventories by primary key. Only fields contained in the schema should be modified: 'ai_shop_product_variant_id', 'ai_shop_seller_id', 'stock', 'restock_threshold', 'turnover_rate', 'updated_at', and 'deleted_at' (for soft deletion handling). 'deleted_at' can be set to mark the record as soft deleted; all other updates are strictly schema-bound. The operation must ignore or reject any attempt to update fields not in ai_shop_inventories, and will error if the inventory ID does not exist. Success returns the full updated inventory record.","description":"Updates an existing ai_shop_inventories record with new information for specific fields (schema-only). Possible updates include product variant assignment, seller, stock, restock threshold, turnover_rate, and setting of deleted_at for soft deletion. The record's primary key (id) must not change. Returns the full updated inventory record with all fields present in the schema, including potentially a non-null deleted_at to indicate soft deletion per business/compliance logic. Attempts to update nonexistent fields or update without a matching ID are rejected with errors. No invented audit or tracking fields are used.","summary":"Update an ai_shop_inventories record by ID; supports field updates, soft delete via deleted_at.","parameters":[{"name":"id","description":"UUID of inventory record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inventory data to update for ai_shop_inventories fields only.","typeName":"IAiShopInventories.IUpdate"},"responseBody":{"description":"The updated ai_shop_inventories record.","typeName":"IAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories/{id}","method":"put"}],"completed":96,"total":275,"step":0,"created_at":"2025-07-23T07:06:37.175Z"},"tokenUsage":{"facade":{"aggregate":{"total":537761,"input":{"total":505898,"cached":0},"output":{"total":31863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":537761,"input":{"total":505898,"cached":0},"output":{"total":31863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":537761,"input":{"total":505898,"cached":0},"output":{"total":31863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":537761,"input":{"total":505898,"cached":0},"output":{"total":31863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Implements paginated, filtered listing of all return requests. This operation targets the ai_shop_return_requests table, supporting business reporting, moderation, and workflow analytics as specified in the Cart and Order System requirements. Clients can search by customer, product, order_item, or workflow status. Description and filtering logic must reference only actual schema fields. NO reference to deleted_at or non-existent fields. Accepts search/filter/sort parameters modeled after real schema fields only.","description":"Retrieves a paginated, searchable list of return request records from ai_shop_return_requests. Each return request record contains immutable, normalized data for item-level returns, supporting compliance with audit and business reporting needs. Filtering is available by ai_shop_order_item_id, requested_by_customer_id, return_status, and date fields (requested_at, processed_at). Each returned record contains: id, ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at, processed_at, and admin_note, matching the schema exactly. No fields not in the Prisma schema are referenced anywhere. The API does not allow for soft-deleted filtering as no such field exists (no deleted_at on this model). Errors are returned for invalid filter parameters or query failures. This operation is compliant with all requirements regarding audit-logging and regulatory reporting for product returns.","summary":"List/search return requests (ai_shop_return_requests) with filtering, paging, and search options.","parameters":[],"requestBody":{"description":"Filtering, pagination, and sort criteria for list/search of return requests. Must reference only valid schema fields, e.g. requested_by_customer_id, ai_shop_order_item_id, return_status, requested_at, processed_at, and admin_note. All filtering options must match actual field types and existence in the schema.","typeName":"IAiShopReturnRequest.IRequest"},"responseBody":{"description":"Paginated list of return requests with full schema-based details for each ai_shop_return_requests record.","typeName":"IPageAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests","method":"patch"},{"specification":"Retrieves the details of a single return request by its primary key. Target entity is ai_shop_return_requests. This endpoint is for fetching the full detail of a specific product/order item return, primarily for customer, seller, or admin dashboard views. Description must not mention nonexistent fields or business logic outside the DB schema. Only actual fields present in ai_shop_return_requests are returned.","description":"Fetches all detailed, atomic fields from ai_shop_return_requests for the provided ID, including: id, ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at, processed_at, and admin_note. No reference is made to any missing or virtual fields. Designed for case detail review, workflow progress display, and auditing. Throws 404 on not found or invalid ID, and never reveals non-schema properties. This endpoint supports business needs for compliance-facing, item-level transparency for returns.","summary":"Get details of one return request (ai_shop_return_requests) by ID.","parameters":[{"name":"id","description":"Unique identifier (uuid) for the target return request, corresponding to the PK of ai_shop_return_requests.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All fields for the requested ai_shop_return_requests record.","typeName":"IAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests/{id}","method":"get"},{"specification":"Creates a new return request in ai_shop_return_requests according to the functional requirements for customer-initiated returns. All writable fields (ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at, processed_at, admin_note) must match actual schema fields; NO reference to deleted_at or suggested fields. The new record must comply with 3NF normalization and be immediately auditable.","description":"Accepts a request body compliant with ai_shop_return_requests schema for creation of a new return request. Only fields defined in the schema may be supplied: ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at (required), processed_at (optional), admin_note (optional). Validation errors are returned if submitted data references any field not present in schema, or if type/enum errors occur. After success, returns complete created object. No soft delete logic as there is no such field.","summary":"Create a new return request (ai_shop_return_requests).","parameters":[],"requestBody":{"description":"All required fields for new return request creation. Based strictly on ai_shop_return_requests schema fields (see actual DB columns).","typeName":"IAiShopReturnRequest.ICreate"},"responseBody":{"description":"Created return request entity as per ai_shop_return_requests fields.","typeName":"IAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests","method":"post"},{"specification":"Updates an existing return request based on its primary key, using only permissible schema fields for modification. The operation targets ai_shop_return_requests. The update logic must not reference or handle any fields outside the schema (e.g., deleted_at or soft delete logic). Only updatable fields such as return_status, processed_at, or admin_note are allowed. The primary key is specified in the path. Implement full validation and type enforcement based on the schema only.","description":"Modifies one ai_shop_return_requests record specified by its ID with only permitted schema fields. Only allows updating fields such as return_status (workflow status), processed_at (date processed), admin_note (admin note), and any others that exist in the schema and are not strictly immutable. Ensures data consistency, respects 3NF, and never leaks or mutates non-existent data. Throws errors if patch attempts to update fields outside the schema. No soft/hard delete mechanics as no such fields exist for this entity.","summary":"Update return request (ai_shop_return_requests) fields by ID.","parameters":[{"name":"id","description":"Primary key (uuid) of the ai_shop_return_requests record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for partial/full update, all validated against ai_shop_return_requests schema only.","typeName":"IAiShopReturnRequest.IUpdate"},"responseBody":{"description":"Updated ai_shop_return_requests record with all schema fields populated.","typeName":"IAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests/{id}","method":"put"},{"specification":"Deletes a return request (ai_shop_return_requests) entity by its primary key. This is a hard delete operation as the model does not have soft deletion fields such as deleted_at or is_deleted. The endpoint permanently removes the record from the database, enforcing referential integrity and compliance with 3NF normalization.","description":"Permanently deletes a single ai_shop_return_requests record identified by its id (uuid). As the table does not have any deleted_at or is_deleted fields, the row is physically removed from the database. Attempts to reference non-existent id return a 404. Operation is irreversible: Once deleted, the row cannot be recovered. No soft deletion occurs. No audit log is implemented at this layer; higher layers must issue audit records if needed.","summary":"Hard-delete one ai_shop_return_requests row by ID (hard delete, no soft delete in schema).","parameters":[{"name":"id","description":"Unique identifier (uuid) of the ai_shop_return_requests record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/returnRequests/{id}","method":"delete"},{"specification":"Implements paginated list/search for order abandonment log records, as stored in ai_shop_order_abandonments. Used for analytics, reporting, and customer/seller support. Filtering must support actual schema fields only (ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method); must NOT reference any soft-delete status or fields that do not exist. All search and sort logic should be compliant with 3NF and Prisma schema.","description":"Fetches a paginated list of abandonment log records from ai_shop_order_abandonments, with support for search and filtering by ai_shop_order_id, ai_shop_customer_id, abandoned_at, and detection_method (all actual schema fields). Each returned record contains: id, ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method. No reference to virtual/delete fields. Returns error on invalid identifiers or query errors. This endpoint supports audit, business intelligence, and support reporting for dropped carts/orders.","summary":"List/search order abandonment (abandoned purchase) logs (ai_shop_order_abandonments).","parameters":[],"requestBody":{"description":"Filtering, sort, and paging options, only for valid fields of ai_shop_order_abandonments (e.g. ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method). No non-existent fields.","typeName":"IAiShopOrderAbandonment.IRequest"},"responseBody":{"description":"Paginated results of ai_shop_order_abandonments records per schema; delivers actual DB fields only.","typeName":"IPageAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments","method":"patch"},{"specification":"Fetches details of a single ai_shop_order_abandonments record, by its primary key (uuid). Target: ai_shop_order_abandonments. Used by BI dashboards, customer service, admin review tools. Must return all fields as defined in schema, no additional or virtual fields.","description":"Returns a full record from ai_shop_order_abandonments matching the specified id (uuid). Returned data includes: id, ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method—all as stored in schema. Any invalid or non-matching ID triggers 404. Never exposes non-schema properties. Supports audit, reporting, and dashboard workflows for abandoned order monitoring.","summary":"Get ai_shop_order_abandonments record by ID for dashboard/audit BI reporting.","parameters":[{"name":"id","description":"UUID PK of ai_shop_order_abandonments to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Single ai_shop_order_abandonments schema record.","typeName":"IAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments/{id}","method":"get"},{"specification":"Creates a new order abandonment log record, as stored in ai_shop_order_abandonments per schema. Used to log new abandonment events detected in user/order workflows. All fields must match schema: ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method. Write logic must be restricted to existing fields, none invented. Post-success delivers complete DB schema object.","description":"Accepts details for new ai_shop_order_abandonments record, matching only actual table fields. Required body must include ai_shop_order_id, ai_shop_customer_id, abandoned_at (timestamp), detection_method. Any extra-field or type violation returns error. On success, the new row is returned including its PK and all schema values. This is for server and analytics logging of abandoned cart/order events.","summary":"Create new order abandonment record; log new abandonment event in ai_shop_order_abandonments.","parameters":[],"requestBody":{"description":"Complete schema-compliant payload for inserting ai_shop_order_abandonments record: ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method.","typeName":"IAiShopOrderAbandonment.ICreate"},"responseBody":{"description":"Created ai_shop_order_abandonments record with all DB fields returned.","typeName":"IAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments","method":"post"},{"specification":"Updates an order abandonment log record by its PK, using only fields in the DB schema. Typically, only detection_method or abandoned_at might be updatable; business logic may restrict field edits, but API respects only schema fields. All paths and operations comply with 3NF and Prisma schema requirements. Never reference soft/hard or logical delete, as those fields do not exist.","description":"Updates the fields of one ai_shop_order_abandonments record. Path PK is used to determine the target. Only fields existing in the table (e.g., detection_method, abandoned_at) can be updated via this endpoint; any attempt to modify non-existent fields or include any logically deleted handling results in validation error. Returns the post-update object with all real fields present. This endpoint supports admin and BI log correction workflows.","summary":"Update one ai_shop_order_abandonments record by ID (schema-only updatable fields).","parameters":[{"name":"id","description":"UUID PK of ai_shop_order_abandonments row to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update (schema-only): detection_method, abandoned_at. No invented or virtual fields permitted.","typeName":"IAiShopOrderAbandonment.IUpdate"},"responseBody":{"description":"Updated ai_shop_order_abandonments record, all fields as in schema.","typeName":"IAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments/{id}","method":"put"},{"specification":"Deletes an abandoned order/carts log (ai_shop_order_abandonments) row. This model has no deleted_at, so this is a hard delete (physical delete from the db). The operation is irreversible and will cause the row to be purged from storage. Referential/integrity rules from Prisma apply. This endpoint supports cleanup and correction of analytic logs; it does not support soft delete.","description":"Deletes a single ai_shop_order_abandonments row by its id (uuid). This is a hard delete: after operation, the row is not recoverable and no historical markers are left. 404 returned for unknown ID. This endpoint supports order analytics cleanup in the admin panel or automated jobs. Caution: operation is non-reversible.","summary":"Hard-delete ai_shop_order_abandonments log entry by ID (permanently delete, no soft delete in schema).","parameters":[{"name":"id","description":"UUID of ai_shop_order_abandonments row to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderAbandonments/{id}","method":"delete"},{"specification":"Implements paginated listing and search for all order delivery records (ai_shop_order_deliveries), as required for operational monitoring and analytics. This is a list/search endpoint over all table fields. All filters, sorts, and paging must strictly match actual fields as defined in schema; soft/hard delete or virtual fields must never be referenced here. Business usage: Admin, seller, customer dashboards, delivery reports, shipment analytics.","description":"Returns paginated search/results for ai_shop_order_deliveries. Accepts request body specifying filters by real DB fields (e.g. ai_shop_order_id, ai_shop_order_item_id, ai_shop_seller_id, delivery_status, tracking_number, shipper_code, shipped_at, delivered_at, seller_memo, admin_note). Only valid table fields may be used for search or filtering; no invented or virtual schema is present. Each record returned in the page includes all schema fields. Used for shipment dashboards, fulfillment monitoring, and seller KPIs.","summary":"Paginated list/search of all ai_shop_order_deliveries, using only real DB columns.","parameters":[],"requestBody":{"description":"Search/filter/sort/paging params using ai_shop_order_deliveries schema fields only. Example: delivery_status, ai_shop_order_id, tracking_number, etc.","typeName":"IAiShopOrderDelivery.IRequest"},"responseBody":{"description":"Paginated list of ai_shop_order_deliveries records, each including all expected DB fields.","typeName":"IPageAiShopOrderDelivery"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries","method":"patch"},{"specification":"Retrieves a single ai_shop_order_deliveries record by primary key (id, uuid), exposing every actual schema field for operational review or audit purposes. This operation is necessary for per-order shipment tracking views, admin analytics, or customer support tooling. Schema compliance is enforced: returned fields are as modeled, non-existent fields are never exposed or referenced.","description":"Returns the full details of one ai_shop_order_deliveries record as per DB schema, referencing only actual DB fields: id, ai_shop_order_id, ai_shop_order_item_id, ai_shop_seller_id, delivery_status, tracking_number, shipper_code, shipped_at, delivered_at, seller_memo, admin_note. Attempts to reference a record by unknown ID result in 404. Designed for shipment resolution, customer support, BI reporting, and audit logging.","summary":"Get a single ai_shop_order_deliveries record by ID; all DB fields are returned unaltered.","parameters":[{"name":"id","description":"Primary key (uuid) of ai_shop_order_deliveries row to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All DB fields of requested ai_shop_order_deliveries for BI/audit/delivery tracing.","typeName":"IAiShopOrderDelivery"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries/{id}","method":"get"}],"completed":108,"total":275,"step":0,"created_at":"2025-07-23T07:06:39.117Z"},"tokenUsage":{"facade":{"aggregate":{"total":597950,"input":{"total":562455,"cached":0},"output":{"total":35495,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":597950,"input":{"total":562455,"cached":0},"output":{"total":35495,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":597950,"input":{"total":562455,"cached":0},"output":{"total":35495,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":597950,"input":{"total":562455,"cached":0},"output":{"total":35495,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Implements searching/listing API for ai_shop_post_snapshots table, which holds version histories of bulletin board posts, including immutable snapshots of title, body, role_type, status, snapshot_reason, and associated foreign keys (post/customer/seller/admin), as per requirements for audit, rollback, and moderation review. Returns paginated or filtered list of post snapshots for admins or moderators.","description":"This operation provides a searchable, paginated, and filterable list of all post snapshots stored in the ai_shop_post_snapshots table. A snapshot records the exact state of a bulletin board post each time it is edited or moderated, including the title, body content, role_type (customer/seller/admin at the time), status, snapshot_reason, and associated references (post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id).\n\nThis endpoint facilitates compliance, rollback capabilities, and auditing by allowing users (with appropriate permissions) to access a complete version history for any given post, filtered by post_id, author, date ranges, or snapshot_reason. No non-existent fields (such as created_by, updated_by, deleted_at) are referenced; only the exact properties in the schema are utilized.\n\nSecurity and access must be controlled: only admins, moderators, or relevant role owners may access full histories. Requests can include filtering, pagination, and sorting controls (see ai_shop_post_snapshots indexes for supported queries). If the entity is deleted, snapshots persist for audit purposes, as there is no deleted_at on this table.\n\nSoft deletion is NOT applicable, as there is no deleted_at on ai_shop_post_snapshots; all data retrieval is live. This operation is primarily used alongside GET/PUT/DELETE for audit trails and rollback panels.","summary":"List and search post snapshots in ai_shop_post_snapshots (bulletin post version history/audit).","parameters":[],"requestBody":{"description":"Search and filtering options for ai_shop_post_snapshots (supports filters on post_id, author, reason, status, created_at, updated_at, pagination and sort).","typeName":"IAiShopPostSnapshot.IRequest"},"responseBody":{"description":"Paginated or filtered list of post snapshot records matching search.","typeName":"IPageAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots","method":"patch"},{"specification":"Implements detail retrieval API for single post snapshot in ai_shop_post_snapshots table (bulletin audit/versioning), uniquely identified by id (UUID).","description":"Returns detailed information about a single post snapshot from the ai_shop_post_snapshots table, providing all versioned fields: title, body, category, status, snapshot_reason, author references (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, role_type), and immutable timestamps. The operation is designed for audit panels, compliance dashboards, or rollback UI, and is accessible only to authorized users (e.g., admins, owners).\n\nIt accesses ONLY exact properties defined in ai_shop_post_snapshots. No deleted_at/soft deletion is referenced since the table doesn't include that field, so retrieval is always for live (extant) snapshot data. Error handling covers not found (404) or permission denied (403).\n\nThis operation is typically used after searching/listing in PATCH operation to examine a specific post revision in detail.","summary":"Retrieve a specific post snapshot's full version data from ai_shop_post_snapshots by id.","parameters":[{"name":"id","description":"Target post snapshot's unique identifier (UUID, primary key) in ai_shop_post_snapshots.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed post snapshot data for the specified id.","typeName":"IAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots/{id}","method":"get"},{"specification":"Implements CREATE operation for ai_shop_post_snapshots, recording a new immutable version of a post state (title, body, role_type, status, snapshot_reason, author/admin references, timestamping, and post linkage), strictly following schema field definitions.","description":"Creates a new immutable post snapshot record in ai_shop_post_snapshots, capturing all versioned data for audit, rollback, or content moderation. The POST body must contain only schema-defined fields: title, body, category_id, status, snapshot_reason, references to author (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id), role_type, post_id, and timestamps as per schema.\n\nThis action is typically invoked automatically when a post is edited or a moderation event occurs, generating version history. There is no soft delete on this table, so snapshots are persistent and must be stored precisely as submitted. Security rules restrict creation to the application (on post change), admins, or authorized systems.\n\nResponse includes the full persisted record as confirmation. No deleted_at or similar field: record is permanently written. API is not used for updating/deleting existing snapshots.","summary":"Create a new post snapshot/version in ai_shop_post_snapshots for edit/moderation audit/rollback.","parameters":[],"requestBody":{"description":"All required data for post snapshot creation (title, body, post_id, author/admin references, status, snapshot_reason, timestamps).","typeName":"IAiShopPostSnapshot.ICreate"},"responseBody":{"description":"The created post snapshot/version record (all schema fields returned).","typeName":"IAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots","method":"post"},{"specification":"Implements UPDATE (full replace) for ai_shop_post_snapshots, allowing only fields in schema to be updated for an existing version (by id). Used for correcting audit errors or moderation correction only; typically, post snapshots are append-only except for exceptional compliance needs.","description":"Updates (overwrites/replaces) an existing post snapshot in ai_shop_post_snapshots identified by id (UUID). Only fields defined in the schema may be updated, such as title, body, role_type, status, snapshot_reason, author/admin FK, and post_id. Typically reserved for exceptional correction (compliance, moderation correction, or audit—snapshots are usually immutable in business logic).\n\nAll updates are restricted to schema fields—no deleted_at or meta fields beyond what exists in ai_shop_post_snapshots. Security: only compliance auditors or system maintainers may perform this operation, and all changes must be logged in audit logs. Returns the full updated record, or error on not found/forbidden/update conflict.","summary":"Update an existing post snapshot (rare, audit/compliance fix) in ai_shop_post_snapshots by id.","parameters":[{"name":"id","description":"Target post snapshot's unique identifier (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All updatable data for post snapshot, strictly using schema fields (title, body, post_id, authors, status, snapshot_reason, etc).","typeName":"IAiShopPostSnapshot.IUpdate"},"responseBody":{"description":"The updated post snapshot object after modification.","typeName":"IAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots/{id}","method":"put"},{"specification":"Implements DELETE (hard delete) for ai_shop_post_snapshots. Since the entity does NOT have a deleted_at or soft delete field, this operation physically removes the record from the DB by id. Used only in strict audit/compliance/maintenance scenarios.","description":"Permanently deletes a post snapshot from ai_shop_post_snapshots by id (UUID). Because this table does NOT define a deleted_at or soft delete marker, deletion is hard/permanent: the record will be fully erased from the database. This operation is allowed only for strict compliance, maintenance, or admin-level correction; business logic generally dictates that snapshots are append-only, not deleted.\n\nSecurity: only high-privilege users should access this operation, and all deletions must be auditable and justified. Attempts to delete a non-existent record result in NOT FOUND. No soft deletion logic applies.","summary":"Permanently delete a post snapshot/version from ai_shop_post_snapshots (no soft delete present).","parameters":[{"name":"id","description":"Target post snapshot's unique identifier (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of hard deletion for the specified id (no object returned, just status).","typeName":"IStandardDeleteResult"},"authorizationRoles":null,"path":"/aiShop/postSnapshots/{id}","method":"delete"},{"specification":"Implements list/search operation (PATCH) for ai_shop_post_recommendations, which stores AI-powered or rule-based post personalization records. Returns paginated or filtered array of records for admin dashboards or recommendation analytics.","description":"Returns a searchable, paginated, and filterable list of post recommendations from ai_shop_post_recommendations, each representing a personalized content recommendation for a customer, seller, or global audience according to AI or campaign logic. Attributes include post_id, customer/seller references, target_type, reason, and created_at.\n\nThis API is used for admin panels, analytics reviews, or AI/marketing automation backends. Only fields specified in ai_shop_post_recommendations are included in queries and results. No soft delete is present (no deleted_at), so all entries are live records. Security: access must be restricted to admin or AI system roles as required. This complements GET/PUT/DELETE for individual post recommendations.","summary":"List/search post recommendation records in ai_shop_post_recommendations (AI/personalization audit/log).","parameters":[],"requestBody":{"description":"Paging, filtering, or search options using only schema fields (post_id, customer_id, seller_id, target_type, reason, created_at).","typeName":"IAiShopPostRecommendation.IRequest"},"responseBody":{"description":"Paginated or filtered array of ai_shop_post_recommendations matching request.","typeName":"IPageAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations","method":"patch"},{"specification":"Implements detail retrieval (GET) for ai_shop_post_recommendations entity by id. Returns complete recommendation record for analytics, debugging, or dashboard display.","description":"Retrieves the detail for a specific post recommendation entry in ai_shop_post_recommendations, uniquely identified by id. Returns all schema-defined fields such as post_id, ai_shop_customer_id, ai_shop_seller_id, target_type, reason, and created_at, enabling admin/AI/analytics users to examine why and how this post was recommended to a given audience.\n\nStrict schema field compliance is observed—no deleted_at or unrelated fields are referenced. This operation is mainly used for audit, personalization debugging, and dashboard deep-linking. Returns 404 if not found, 403 if unauthorized.","summary":"Retrieve detail of a specific post recommendation (AI-driven or campaign) from ai_shop_post_recommendations by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) for post recommendation in ai_shop_post_recommendations.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified ai_shop_post_recommendations record with all defined fields returned.","typeName":"IAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations/{id}","method":"get"},{"specification":"Implements CREATE (POST) operation for ai_shop_post_recommendations. Used to log new AI/campaign/post recommendation events as personalized targeting records. Stores only fields present in schema (post_id, customer/seller reference, target_type, reason, created_at).","description":"Creates a new post recommendation record in ai_shop_post_recommendations, capturing the details of an AI-driven or manually triggered recommendation: post_id, audience type (customer, seller, global, etc), optional references to ai_shop_customer_id or ai_shop_seller_id, reason, and created_at.\n\nData submitted must strictly adhere to the available schema fields with no soft deletion or extra metadata. This operation is intended for AI pipelines, analytics, or admin interfaces to create new targeting events. Security: may be restricted to automation or admin roles. The response provides the full record as confirmation.","summary":"Create a new post recommendation entry in ai_shop_post_recommendations (AI/campaign/personalization log).","parameters":[],"requestBody":{"description":"Schema-compliant data for a new post recommendation: references to post, recipient, audience type, and reason.","typeName":"IAiShopPostRecommendation.ICreate"},"responseBody":{"description":"The created ai_shop_post_recommendations record, including auto-generated ID and timestamps.","typeName":"IAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations","method":"post"},{"specification":"Implements UPDATE (PUT) operation for ai_shop_post_recommendations by id (UUID). Permits changes only to allowed schema fields. Used for updating targeting, correcting audience, or campaign adjustment.","description":"Updates an existing post recommendation record in ai_shop_post_recommendations identified by id. All updated fields must be present in the schema (post_id, customer/seller references, target_type, reason, created_at). Usually used to correct or adjust AI targeting, campaign status, or audience assignments for a recommendation event.\n\nBecause this table has no deleted_at or soft deletion capability, this API physically updates the fields. Security: access must be restricted to admins or automated AI/campaign systems. Returns the updated record for confirmation, or error if not found/forbidden.","summary":"Update a post recommendation entry in ai_shop_post_recommendations (for campaign/AI fix) by id.","parameters":[{"name":"id","description":"Unique post recommendation entry ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All modifiable data fields for a post recommendation (must exist in schema; post_id, recipient, audience, reason, created_at, etc).","typeName":"IAiShopPostRecommendation.IUpdate"},"responseBody":{"description":"The updated ai_shop_post_recommendations record.","typeName":"IAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations/{id}","method":"put"},{"specification":"Implements DELETE (hard) for ai_shop_post_recommendations entity. Since table lacks any soft deletion/deleted_at, removes record completely.","description":"Permanently deletes a post recommendation record from ai_shop_post_recommendations by id. There is no soft delete or deleted_at for this entity; deletion is immediate and full removal from the database. Used for removing obsolete, incorrect, or test recommendation log events. Security: should be restricted to admins or maintenance roles.\n\nDeletes only one record (by id) and will return a standard confirmation; if not found, 404 returned. Always leaves audit log externally.","summary":"Hard delete a post recommendation from ai_shop_post_recommendations (no soft delete present).","parameters":[{"name":"id","description":"Unique recommendation entry ID (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of delete operation for post recommendation by id.","typeName":"IStandardDeleteResult"},"authorizationRoles":null,"path":"/aiShop/postRecommendations/{id}","method":"delete"},{"specification":"Implements list/search (PATCH) operation for ai_shop_post_reports, supporting moderation, abuse reporting, and audit across the bulletin board system. Returns paginated or filtered array of report records (each referencing post, reporter, reason, moderation outcome if any, and timestamps), as per schema fields.","description":"Provides list/search functionality for ai_shop_post_reports, allowing admin/moderation systems to query, filter, and page through report records. Each report is associated with a post (post_id), reporter (customer, seller, admin with optional foreign keys), reason, and may reference a moderation action. Only schema fields are included—no deleted_at/soft deletion is present on this entity.\n\nThis endpoint is the basis for moderation analytics/audit or dashboard paneling. Soft deletion is not applicable. Security: restricted to admins and moderation users. Used together with detail GET and moderation endpoints for triage workflows.","summary":"List/search all bulletin post reports for moderation/audit (ai_shop_post_reports).","parameters":[],"requestBody":{"description":"Search, filter, or page options (post_id, reporter references, reason, moderation_action_id, created_at, etc per schema).","typeName":"IAiShopPostReport.IRequest"},"responseBody":{"description":"Paginated or filtered list of ai_shop_post_reports matching options.","typeName":"IPageAiShopPostReport"},"authorizationRoles":null,"path":"/aiShop/postReports","method":"patch"},{"specification":"Implements detail (GET) operation for a single ai_shop_post_reports record, supporting moderation view/audit workflow. Returns all schema fields: references, reason, and optionally moderation outcome, timestamps, etc.","description":"Retrieves a single ai_shop_post_reports record, identified by unique id (UUID). Returns all defined schema fields: post_id, customer/seller/admin reporter references, moderation_action_id, reason, and created_at. Soft deletion is NOT present in this table; record is always live until hard deleted by a separate process.\n\nMainly used for moderation audit panels, compliance dashboards, and reporting tools. If the record does not exist or access is denied, appropriate error is returned.","summary":"Get a single bulletin post report's details from ai_shop_post_reports by id.","parameters":[{"name":"id","description":"Unique ai_shop_post_reports identifier (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All fields of the ai_shop_post_reports record with the given id.","typeName":"IAiShopPostReport"},"authorizationRoles":null,"path":"/aiShop/postReports/{id}","method":"get"}],"completed":120,"total":275,"step":0,"created_at":"2025-07-23T07:06:42.503Z"},"tokenUsage":{"facade":{"aggregate":{"total":658251,"input":{"total":618995,"cached":0},"output":{"total":39256,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":658251,"input":{"total":618995,"cached":0},"output":{"total":39256,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":658251,"input":{"total":618995,"cached":0},"output":{"total":39256,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":658251,"input":{"total":618995,"cached":0},"output":{"total":39256,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"List review moderation actions from the ai_shop_review_moderations table. Supports advanced filtering, sorting, and pagination. Each record represents a single moderation decision taken by an admin on a customer review, such as approval, rejection, or flagging, and includes the moderation action, reason, and timestamp. Used for compliance and complete auditability of all review moderation actions. Only the fields in the schema can be referenced: id, ai_shop_review_id, ai_shop_admin_id, action, reason, created_at. No non-existent fields should be referenced in filtering or descriptions.","description":"This endpoint retrieves a list of review moderation records from the ai_shop_review_moderations table. Each record corresponds to a moderation action taken by an admin on a specific review. All properties in the response directly match the actual database schema fields: id, ai_shop_review_id (the review that was moderated), ai_shop_admin_id (the admin who performed the action), action (the moderation type: 'approve', 'reject', 'flag'), reason (why the moderation was performed), and created_at (when the action occurred). No referencing of fields not present in the schema is allowed. Filtering and searching can be offered only on these fields. This is essential for building moderation dashboards and compliance tooling. Deletion status or user-tracking fields must not be referenced, as they are not present in the schema. Pagination is supported.","summary":"List review moderation actions (ai_shop_review_moderations table) with search and filtering.","parameters":[],"requestBody":{"description":"Request body specifying filtering, searching, sorting, and pagination options for retrieving review moderation actions. All fields must map directly to existing schema fields.","typeName":"IAiShopReviewModerations.IRequest"},"responseBody":{"description":"Paginated list of review moderation records. Only actual fields in ai_shop_review_moderations are included.","typeName":"IPageAiShopReviewModerations"},"authorizationRoles":null,"path":"/aiShop/reviewModerations","method":"patch"},{"specification":"Retrieve a specific review moderation action from the ai_shop_review_moderations table by unique id. Returns the moderation record details including admin, review, action, reason, and timestamp. Only fields defined in the schema are included. There is no soft delete field, so missing records are considered not found (hard delete only).","description":"This API fetches the details of a specific review moderation record given its id. The response includes only fields present in the ai_shop_review_moderations schema: id, ai_shop_review_id, ai_shop_admin_id, action, reason, and created_at. If the record does not exist, a 404 is returned. There are no soft delete capabilities for this entity, so absence means permanent removal. Only actual fields are returned or referenced. Used for audit trail, legal review, or frontend drill-downs.","summary":"Get a specific review moderation action from ai_shop_review_moderations by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the target review moderation record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed moderation action record from ai_shop_review_moderations table for the given id.","typeName":"IAiShopReviewModerations"},"authorizationRoles":null,"path":"/aiShop/reviewModerations/{id}","method":"get"},{"specification":"Create a review moderation record in the ai_shop_review_moderations table. Records moderation actions such as approval, rejection, or flag for a review, including admin, review, action, and justification. All required and optional fields must be mapped to schema fields. Soft delete is not supported; records are immutable after creation except via update endpoint.","description":"This endpoint allows creation of a new review moderation record in the ai_shop_review_moderations table. The request body must contain all data required for a valid moderation entry, including ai_shop_review_id (the review being moderated), ai_shop_admin_id (the admin performing the action), action (one of 'approve', 'reject', 'flag'), and reason (justification for moderation). Timestamps and uuid id are managed by the system. All field references strictly follow the schema; no soft delete or non-existent fields. Used by admins for compliance, workflow automation, and audit trail maintenance.","summary":"Create a new review moderation record (ai_shop_review_moderations table).","parameters":[],"requestBody":{"description":"Content required to create a review moderation record. Only schema fields allowed.","typeName":"IAiShopReviewModerations.ICreate"},"responseBody":{"description":"Created review moderation record reflecting the moderation action.","typeName":"IAiShopReviewModerations"},"authorizationRoles":["admin"],"path":"/aiShop/reviewModerations","method":"post"},{"specification":"Update a review moderation record in ai_shop_review_moderations by id. Supports changing fields such as action or reason. Only defined schema fields are updatable. No soft delete is supported; delete operations are always hard delete. All field references must exist in the schema.","description":"This API updates an existing review moderation record identified by id. The request body includes only those fields from the ai_shop_review_moderations schema that are allowed to be changed. Typically, action and reason may be editable if policy allows. All references must conform strictly to actual entity fields. There are no soft or logical deletes on this record; only actual changes to the allowed columns are processed. Used for correction or compliance post-facto update by admins.","summary":"Update an existing review moderation record (ai_shop_review_moderations table) by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the target review moderation record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Content allowed for updating a review moderation record. Only schema fields permitted.","typeName":"IAiShopReviewModerations.IUpdate"},"responseBody":{"description":"Updated moderation action record after modification.","typeName":"IAiShopReviewModerations"},"authorizationRoles":["admin"],"path":"/aiShop/reviewModerations/{id}","method":"put"},{"specification":"Delete a review moderation record by id. There is no soft delete field in ai_shop_review_moderations; this operation permanently removes the record. All references must adhere to the schema. Absence is hard delete; cannot be restored. Used for data clean-up or compliance error correction.","description":"This endpoint deletes a review moderation record specified by id from the ai_shop_review_moderations table. Since there is no soft delete field, the deletion is immediate and irreversible (hard delete). Only a valid id field is used for deletion and only the schema-defined fields are allowed in parameters. No fields for restoration or logical deletion are present. Used for error correction or audit compliance where records must be removed from the system.","summary":"Delete a review moderation record by id (permanently, as hard delete).","parameters":[{"name":"id","description":"Unique identifier (UUID) of the review moderation record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/reviewModerations/{id}","method":"delete"},{"specification":"List review helpfulness ratings from ai_shop_review_ratings table, supporting search, filter, pagination. Each record represents a single customer's helpfulness vote (true/false) on a specific review. Only the schema fields—id, ai_shop_review_id, ai_shop_customer_id, helpful, created_at—are referenced in filtering, sorting, or searching. No soft delete or status fields exist.","description":"This endpoint returns a paginated list of review helpfulness ratings (votes) from the ai_shop_review_ratings table. Each entry records a customer's upvote/downvote (helpful boolean) on a review. Filtering, searching, and sorting are allowed only on the actual schema fields. There are no deletion status or custom metadata fields. Pagination is included; used for analytics, abuse monitoring, and engagement reporting.","summary":"List review helpfulness ratings (votes) in ai_shop_review_ratings table.","parameters":[],"requestBody":{"description":"Request body specifying filtering, search, sorting, and pagination for review ratings. All keys must map to schema fields.","typeName":"IAiShopReviewRatings.IRequest"},"responseBody":{"description":"Paginated list of review helpfulness rating (vote) records.","typeName":"IPageAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings","method":"patch"},{"specification":"Fetch a specific review helpfulness rating by id from ai_shop_review_ratings. Returns all defined fields: id, ai_shop_review_id, ai_shop_customer_id, helpful, created_at. There is no soft delete; missing records are considered permanently deleted. Only actual schema fields are referenced or returned.","description":"This retrieves a single review helpfulness rating record from the ai_shop_review_ratings table, identified by its id. The response includes id, ai_shop_review_id, ai_shop_customer_id, helpful (boolean), and created_at. If the record is missing, a 404 is returned (hard delete). All field references are strictly as per the actual schema; additional flags, soft delete, or non-existent fields are not permitted.","summary":"Get a specific review helpfulness rating from ai_shop_review_ratings by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) for the review helpfulness rating record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed review helpfulness rating record for the given id.","typeName":"IAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings/{id}","method":"get"},{"specification":"Create a review helpfulness rating record in ai_shop_review_ratings. Each record designates a customer's upvote (helpful=true) or downvote (helpful=false) for a review. All mandatory and optional fields map directly to schema fields. Deletions are hard; no restoration features exist.","description":"This endpoint enables creation of a new helpfulness vote (upvote or downvote) for a review by a customer. Input must map to schema fields: ai_shop_review_id, ai_shop_customer_id, helpful (boolean). System-managed fields such as id and timestamps are managed internally. No soft delete or logical delete supported; every vote is an atomic, auditable record as mandated by the schema. Used for review ranking, abuse detection, and trust analytics.","summary":"Create a review helpfulness rating record (customer upvote/downvote for a review).","parameters":[],"requestBody":{"description":"Content required for creation of a review helpfulness vote. Only schema fields allowed.","typeName":"IAiShopReviewRatings.ICreate"},"responseBody":{"description":"Created review helpfulness rating record reflecting the user's vote.","typeName":"IAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings","method":"post"},{"specification":"Update an existing review helpfulness rating record by id in ai_shop_review_ratings. Permits changing only allowed schema fields, such as helpful (boolean). System fields (id, created_at) may not be changed. No soft delete—removals are hard delete only. Strict enforcement of field compliance with schema.","description":"This API updates a review helpfulness rating (upvote/downvote) recorded in ai_shop_review_ratings, as referenced by id. Only the field helpful can be changed upon update; other system fields such as id or created_at should not be altered. There is no soft delete flag: delete, if needed, will be a hard delete. Used for resolving accidental voting mistakes, abuse handling, or data correction. All inputs and outputs reflect only actual schema fields.","summary":"Update an existing review helpfulness rating record (upvote/downvote) by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the review rating record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Content permitted for update (e.g., helpful boolean). Only schema fields allowed.","typeName":"IAiShopReviewRatings.IUpdate"},"responseBody":{"description":"Updated review rating record.","typeName":"IAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings/{id}","method":"put"},{"specification":"Delete a review helpfulness rating record by id from ai_shop_review_ratings. No soft delete is supported, so this will permanently remove the record (hard delete). Only fields present in the schema may be referenced as parameters. This is for clean-up or error correction.","description":"This endpoint deletes (hard deletes) a review helpfulness rating record (vote) from ai_shop_review_ratings by its id. There is no field for soft deletion; the operation is irreversible. Only the 'id' parameter is accepted. Used to clean up spam, remove abuse, or correct mistakes. Additional properties or parameters are strictly disallowed.","summary":"Delete a review helpfulness rating record by id (permanently, hard delete).","parameters":[{"name":"id","description":"Unique identifier (UUID) of the vote record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/reviewRatings/{id}","method":"delete"},{"specification":"List inquiry moderation records from ai_shop_inquiry_moderations table, supporting search, filtering, and pagination. Each row represents an action taken by an admin on a customer inquiry, such as approving, flagging, or deleting. Only schema fields are allowed as filters or in descriptions: id, ai_shop_inquiry_id, ai_shop_admin_id, action, reason, created_at.","description":"Retrieves a paginated list of inquiry moderation records from ai_shop_inquiry_moderations. Each row reflects a moderation action (such as approval, flag, or deletion) performed by an admin on an inquiry. Only the actual schema fields can be used: id, ai_shop_inquiry_id (the inquiry moderated), ai_shop_admin_id (the acting admin), action (moderation type), reason (rationale for moderation), and created_at (when moderation occurred). No non-existent fields, soft delete, or status flags are allowed. This endpoint is used in backoffice and legal compliance workflows. Pagination and filtering allowed only by schema fields.","summary":"List inquiry moderation records in ai_shop_inquiry_moderations table.","parameters":[],"requestBody":{"description":"Specifies filtering, search, sorting, and pagination for moderation event retrieval. All keys must match actual schema fields.","typeName":"IAiShopInquiryModerations.IRequest"},"responseBody":{"description":"Paginated list of inquiry moderation records.","typeName":"IPageAiShopInquiryModerations"},"authorizationRoles":null,"path":"/aiShop/inquiryModerations","method":"patch"},{"specification":"Get details for a specific inquiry moderation record from ai_shop_inquiry_moderations table by id. Returns record with admin, action type, reason, and timestamp. Soft delete is not present; missing equals hard delete. Only defined schema fields are included.","description":"This API fetches a specific inquiry moderation record by id from ai_shop_inquiry_moderations. Response fields match the schema: id, ai_shop_inquiry_id, ai_shop_admin_id, action, reason, created_at. If not found, 404 is returned. All properties are actual schema fields. Used for audit, compliance, and workflow reporting.","summary":"Get an inquiry moderation record by id from ai_shop_inquiry_moderations table.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the inquiry moderation record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed inquiry moderation record.","typeName":"IAiShopInquiryModerations"},"authorizationRoles":null,"path":"/aiShop/inquiryModerations/{id}","method":"get"}],"completed":132,"total":275,"step":0,"created_at":"2025-07-23T07:06:49.213Z"},"tokenUsage":{"facade":{"aggregate":{"total":718149,"input":{"total":675554,"cached":0},"output":{"total":42595,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":718149,"input":{"total":675554,"cached":0},"output":{"total":42595,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":718149,"input":{"total":675554,"cached":0},"output":{"total":42595,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":718149,"input":{"total":675554,"cached":0},"output":{"total":42595,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"List seller profiles with searching and pagination. This operation retrieves all entries from the ai_shop_seller_profiles table based strictly on its normalized schema. It supports filtered, paginated retrieval of extended seller profile fields: id, seller_id, contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at. No references to fields like created_by or deleted_at. All filters, sorts, and results must work on actual columns only. Used by admins for compliance, onboarding, or audit review.","description":"This endpoint enables the admin or platform to retrieve a paginated, searchable list of all seller profiles. Each record is based strictly on the ai_shop_seller_profiles Prisma schema, exposing contact_name, contact_email, company_phone, address, kyc_documents, created_at, updated_at, and foreign key for seller_id. No derived, aggregated, or non-existent properties are referenced. All filters and sorts must match schema columns. Sensitive information is only accessible by authorized roles. Error handling must reject any requests for non-existent schema fields. Related endpoints include the seller profile detail endpoint and profile create/update endpoints. Soft delete is not supported for this table, so all results are active records.","summary":"List seller profiles with advanced searching from ai_shop_seller_profiles.","parameters":[],"requestBody":{"description":"Request body defining filtering, pagination, and sort options for listing seller profiles.","typeName":"IAiShopSellerProfile.IRequest"},"responseBody":{"description":"Paginated list of seller profiles matching the search options.","typeName":"IPageAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles","method":"patch"},{"specification":"Retrieve a specific seller profile from the ai_shop_seller_profiles table. Uses the id primary key and returns all atomic, normalized fields as described in the schema. No reference to non-existent metadata fields. Used by admin, compliance, or seller onboarding systems.","description":"Retrieves a single seller profile using its unique primary key id. Returns all schema-defined fields: id, seller_id, contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at in their exact data types. Strictly avoids any reference to non-existent fields (e.g., deleted_at, created_by). This API is crucial for admin, compliance, and onboarding systems to review or manage individual seller profiles. Only defined relationships and fields are exposed. Error is returned for missing or non-existent IDs. Relies on the CREATE and UPDATE endpoints for data population and modification.","summary":"Get a specific seller profile by id from ai_shop_seller_profiles.","parameters":[{"name":"id","description":"Unique seller profile ID (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed seller profile record for the requested id.","typeName":"IAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles/{id}","method":"get"},{"specification":"Create a new seller profile entry in ai_shop_seller_profiles using the core and extended fields as modeled in the schema. No non-existent fields are referenced. Successful creation is based strictly on atomic values for id, seller_id, contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at. Used during seller onboarding or compliance updates.","description":"This operation inserts a new record in the ai_shop_seller_profiles table, using values for the atomic fields defined in the schema: id, seller_id (FK), contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at. Incoming data is strictly validated against schema types. No additional or missing fields are permitted. Endpoint is used for onboarding, updating compliance data, or correcting records. Any missing required fields or attempts to reference non-schema fields (like deleted_at) lead to validation errors.","summary":"Create a new seller profile in ai_shop_seller_profiles.","parameters":[],"requestBody":{"description":"Data for new seller profile, matching all required schema columns.","typeName":"IAiShopSellerProfile.ICreate"},"responseBody":{"description":"Created seller profile record.","typeName":"IAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles","method":"post"},{"specification":"Update an existing seller profile in ai_shop_seller_profiles by its primary key id. Permitted updates are fields present in the schema definition. No operation on non-existent fields. Returns the updated full resource. Used by admins for compliance, audit, or onboarding correction.","description":"Updates a seller profile identified by id, modifying only properties in the ai_shop_seller_profiles schema (contact_name, contact_email, company_phone, address, kyc_documents, updated_at). No support for non-existent fields like deleted_at, created_by, or extra metadata. The endpoint performs full or partial updates in accordance with Prisma schema constraints, requiring strict field validation. Error handling occurs for requests referencing undefined fields or missing required values. Commonly linked with profile GET and PATCH endpoints for listing, and the DELETE endpoint for removal.","summary":"Update an existing seller profile in ai_shop_seller_profiles by id.","parameters":[{"name":"id","description":"Unique seller profile ID (UUID) to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for seller profile, restricted to defined schema columns.","typeName":"IAiShopSellerProfile.IUpdate"},"responseBody":{"description":"Updated seller profile record after change.","typeName":"IAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles/{id}","method":"put"},{"specification":"Delete a seller profile from ai_shop_seller_profiles by its id primary key. As there is NO soft-delete (deleted_at) field in this schema, this operation performs a permanent, hard delete. Strictly deletes only the database row corresponding to the given id, with no soft-deletion logic.","description":"Removes a seller profile resource identified by its unique id field, permanently deleting the row from ai_shop_seller_profiles. Since the schema lacks deleted_at or is_deleted fields, this operation is a hard delete and is irreversible. All requests referencing non-existent ids return an explicit error. This endpoint is used for admin purposes, seller off-boarding, or compliance-driven data cleanup. The operation is tightly controlled and audit-logged externally if needed. No references to non-existent metadata fields are permitted.","summary":"Delete a seller profile by id (hard delete) from ai_shop_seller_profiles.","parameters":[{"name":"id","description":"Unique seller profile ID (UUID) to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles/{id}","method":"delete"},{"specification":"List admin profiles with searching and pagination. Retrieves all entries in ai_shop_admin_profiles using only fields in schema: id, admin_id, duty_region, ip_allowlist, contact_email, created_at, updated_at. No extra or omitted fields are permitted. Used for admin user management and compliance review by authorized personnel.","description":"Enables authorized admin or compliance personnel to retrieve a paginated and searchable list of admin profiles, strictly based on ai_shop_admin_profiles schema. Returns id, admin_id (FK), duty_region, ip_allowlist, contact_email, created_at, and updated_at for each entry. No references to non-existent fields; all filtering, pagination, and sorting must use schema fields. Error handling must reject requests for additional attributes. Closely related to single admin profile GET and profile resource CRUD endpoints. No support for soft delete or logical deletion—only active records are listed.","summary":"List admin profiles with advanced searching from ai_shop_admin_profiles.","parameters":[],"requestBody":{"description":"Request body with pagination, filtering, and sort options for admin profiles search.","typeName":"IAiShopAdminProfile.IRequest"},"responseBody":{"description":"Paginated list of admin profiles matching query.","typeName":"IPageAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles","method":"patch"},{"specification":"Retrieve a specific admin profile from ai_shop_admin_profiles by its unique id. Returns all allowed schema fields (id, admin_id, duty_region, ip_allowlist, contact_email, created_at, updated_at). Used by admin management or compliance for profile review, audit, or privilege assignment.","description":"Fetches one admin profile by its id and returns only the properties defined in the ai_shop_admin_profiles schema: id, admin_id (FK), duty_region, ip_allowlist, contact_email, created_at, and updated_at. No virtual/aggregate/non-existent fields are present ever. Common failure mode: referencing non-schema columns. This endpoint is essential for managing admin access, reviewing audit history, or updating privileges. Relies on the PATCH (list) and PUT (update) endpoints for broader administration flows.","summary":"Get a specific admin profile by id from ai_shop_admin_profiles.","parameters":[{"name":"id","description":"Unique admin profile ID (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed resource for the requested admin profile id.","typeName":"IAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles/{id}","method":"get"},{"specification":"Create a new admin profile entry using ai_shop_admin_profiles, applying values only to fields in the schema. All data must be validated; missing or extra fields cause error. Used for onboarding, role assignment, or compliance configuration by authorized roles.","description":"Inserts a new admin profile row in the ai_shop_admin_profiles table, setting only allowed fields: id, admin_id (FK), duty_region, ip_allowlist, contact_email, created_at, and updated_at. Validates input strictly against the schema, not permitting derived/extra fields. Used by head admins for account creation, privilege assignment, or jurisdiction allocation. Errors are returned for non-conforming requests. Closely related to the PATCH (list), GET (detail), UPDATE, and DELETE endpoints for full admin management. All field requirements strictly follow the normalized schema.","summary":"Create a new admin profile in ai_shop_admin_profiles.","parameters":[],"requestBody":{"description":"Admin profile data, strictly constrained to defined schema fields.","typeName":"IAiShopAdminProfile.ICreate"},"responseBody":{"description":"Created admin profile entry as per schema.","typeName":"IAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles","method":"post"},{"specification":"Update an existing admin profile in ai_shop_admin_profiles, using only the fields defined by the table. Returns the updated profile resource. Used for privilege assignments, contact changes, or compliance updates. All validations strictly follow Prisma schema. No operation on non-existent properties.","description":"Updates an admin profile identified by its primary key id with new values for only schema-defined properties: duty_region, ip_allowlist, contact_email, or similar. No non-existent or derived properties allowed. All validations are by schema and write to only the actual underlying columns. Invalid columns cause error; required values are enforced. Used as part of broader admin management, often paired with GET (detail), PATCH (list), and DELETE endpoints. Soft delete is not supported in admin profiles.","summary":"Update an admin profile by id in ai_shop_admin_profiles.","parameters":[{"name":"id","description":"Unique admin profile ID (UUID) to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated admin profile data, strictly as defined in schema.","typeName":"IAiShopAdminProfile.IUpdate"},"responseBody":{"description":"Admin profile after update.","typeName":"IAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles/{id}","method":"put"},{"specification":"Delete an admin profile from ai_shop_admin_profiles using its id (primary key). As this table does NOT implement soft deletion, this API performs a hard/permanent delete. Only the actual record is deleted with no logical removal field supported. Operation is audit-logged externally if needed. Used by compliance, head admin, or for revocation purposes.","description":"Removes an admin profile by its unique id, permanently deleting the corresponding row from ai_shop_admin_profiles. No logical or soft delete logic supported since the schema lacks a deleted_at field. All non-existent or extra parameters are rejected. Used rarely, typically for security/compliance cleanup. Operation is closely tied to CREATE, UPDATE, and GET endpoints. Requests for non-existent ids return error. All field mapping/behavior follows normalized schema exclusively.","summary":"Delete an admin profile by id (hard delete) from ai_shop_admin_profiles.","parameters":[{"name":"id","description":"Unique admin profile ID (UUID) to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles/{id}","method":"delete"},{"specification":"List AI Shop products with advanced searching and pagination. Operates only on fields defined in ai_shop_products, strictly correlating Prisma columns for request filter/sorting. Used by admin/product managers for catalog review, seller enforcement, or analytics integration. No virtual/derived fields used.","description":"Retrieves a advanced searchable and paginated list of products from the ai_shop_products table, projecting only the actual schema-defined columns (id, ai_shop_seller_id, category_id, name, description, status, created_at, updated_at, deleted_at). Supports flexible filtering and sorting on any of these actual columns, but never references non-existent columns or fields. Used primarily for admin/product management, compliance, and catalog monitoring. Any attempt to filter or sort on non-schema (e.g., created_by) fields must be rejected. Linked to product detail (GET), create (POST), update (PUT), and delete endpoints.","summary":"List AI Shop products using advanced searching from ai_shop_products.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination info for product listing.","typeName":"IAiShopProduct.IRequest"},"responseBody":{"description":"Paginated product search result.","typeName":"IPageAiShopProduct"},"authorizationRoles":["admin","seller"],"path":"/aiShop/products","method":"patch"},{"specification":"Retrieve a single product from ai_shop_products by its primary key id. All columns and data must map exactly to the Prisma schema, avoiding any reference to non-existent/derived metadata fields. Used by sellers/admins for catalog review, update, or setup.","description":"Gets one product entity by its id from ai_shop_products, returning the row as individual atomic fields: id, ai_shop_seller_id, category_id, name, description, status, created_at, updated_at, and deleted_at (which is nullable; see soft delete logic). Response exactly matches schema definition. Never references non-existent or derived fields (e.g., created_by). Used by product manager, admin, seller for auditing and lifecycle management. Error if resource is not found. This endpoint relates to PATCH (list), POST (create), PUT (update), and DELETE (delete) endpoints for product lifecycle.","summary":"Get a specific product by id from ai_shop_products.","parameters":[{"name":"id","description":"Unique product ID (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Product resource for the provided id.","typeName":"IAiShopProduct"},"authorizationRoles":["admin","seller"],"path":"/aiShop/products/{id}","method":"get"}],"completed":144,"total":275,"step":0,"created_at":"2025-07-23T07:06:50.779Z"},"tokenUsage":{"facade":{"aggregate":{"total":777953,"input":{"total":732097,"cached":0},"output":{"total":45856,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":777953,"input":{"total":732097,"cached":0},"output":{"total":45856,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":777953,"input":{"total":732097,"cached":0},"output":{"total":45856,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":777953,"input":{"total":732097,"cached":0},"output":{"total":45856,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Implements deletion for a single inventory record, identified by its primary key. The inventory model in the Prisma schema has a soft deletion field: deleted_at (nullable). This means delete requests should set this timestamp, rather than physically removing the row from the database. The endpoint should ensure that only the record with the exact matching id is soft-deleted, and do nothing if soft-deleted already. All logic and returned information must reference ONLY fields that actually exist in the ai_shop_inventories schema.","description":"This endpoint allows for soft-deletion of a single inventory record in the ai_shop_inventories table. Upon request, the API will look up the row by its id (of type string, UUID) and, if found and not already deleted (where deleted_at is null), will set the deleted_at field to the current timestamp. If the record is already soft-deleted (deleted_at not null), no further update is performed.\n\nThe API strictly prohibits the physical/hard removal of records due to the existence of deleted_at. No other fields apart from id and deleted_at will be modified. This is intended to maintain a full audit trail of inventory changes for legal and business compliance, as per requirements.\n\nNo non-existent fields will be referenced. Error cases (not found or already deleted) should be clearly signaled. Only the actual schema columns for ai_shop_inventories (id, ai_shop_product_variant_id, ai_shop_seller_id, stock, restock_threshold, turnover_rate, created_at, updated_at, deleted_at) are relevant.\n\nThis delete is soft: sets deleted_at, does not remove the row.","summary":"Soft-delete an inventory record by marking deleted_at (ai_shop_inventories table)","parameters":[{"name":"id","description":"Target inventory record's ID (UUID) to soft-delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The inventory record after soft-deletion. Only fields from ai_shop_inventories table are present, reflecting updated deleted_at.","typeName":"aiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories/{id}","method":"delete"},{"specification":"Implements complex, paginated search or batch lookup for product snapshot version data. The endpoint corresponds to the ai_shop_product_snapshots table in the Prisma schema, which holds immutable, append-only version rows for product edits. Designed for listing multiple product snapshots with search, sort, and pagination (by product ID, created_at, name, or other fields present in the schema only). No non-existent fields may be referenced.","description":"This endpoint returns a paginated, searchable list of product snapshots from the ai_shop_product_snapshots table. Clients may filter by parent product (ai_shop_product_id), created_at timestamp, name, and other actual schema fields (but never fields that don't exist). Sorting and pagination should be supported using actual table fields only. \n\nNo snapshot can be modified via this endpoint; it is strictly for querying read-only version history as each snapshot row is immutable and append-only, complying with strict audit/compliance requirements. No deleted_at/soft delete field exists here, so all records are visible unless specifically filtered by client-side logic.\n\nThis endpoint is crucial for audit, rollback, and viewing historical product states. All returned fields must map directly to ai_shop_product_snapshots: id, ai_shop_product_id, name, description, category_id, status, created_at, updated_at, and nothing more.","summary":"Query/search/list product snapshot versions (ai_shop_product_snapshots table)","parameters":[],"requestBody":{"description":"Product snapshot search/filter criteria (product id, created_at, name, status, etc.). All fields must exist in the ai_shop_product_snapshots schema.","typeName":"aiShopProductSnapshots.IRequest"},"responseBody":{"description":"Paginated result of product snapshots with only actual schema fields per ai_shop_product_snapshots table.","typeName":"IPageAiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots","method":"patch"},{"specification":"Implements GET by ID for a single product snapshot record. This endpoint retrieves a product version history snapshot by its primary key (id), using the ai_shop_product_snapshots table as defined in the schema. Only fields present in the schema are allowed to be referenced or returned. No update, delete, or version rollback logic is permitted here; this is a pure detail/info endpoint.","description":"This endpoint fetches a single product snapshot/version row from the ai_shop_product_snapshots table by its id (UUID). All returned data maps strictly to actual fields present: id, ai_shop_product_id, name, description, category_id, status, created_at, updated_at. No non-existent properties or logic are involved. All fields are immutable, and there is no deleted_at or soft delete logic in this table; every read is of an immutable, append-only history record.\n\nThis endpoint is for UI detail views and audit/rollback flow support. No business logic about deletes or upserts is implemented here. All Prisma schema constraints apply strictly.","summary":"Get detail for a product snapshot/version by id (ai_shop_product_snapshots table)","parameters":[{"name":"id","description":"ID of the product snapshot to retrieve (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full product snapshot/version row per ai_shop_product_snapshots fields.","typeName":"aiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots/{id}","method":"get"},{"specification":"Implements create/insert for a new product snapshot/version row. The target is ai_shop_product_snapshots table from the Prisma schema, which strictly enforces only append (no overwrites, as per audit policy). Every field in the request body must map to a real schema column; no deleted_at, created_by, or similar fake fields allowed. The snapshot row is always a new immutable record; no soft delete, update, or patch semantics are allowed for this POST.","description":"This endpoint creates a new immutable product snapshot (version entry) in the ai_shop_product_snapshots table. All input fields must exactly correspond to ai_shop_product_snapshots schema: ai_shop_product_id, name, description, category_id, status, created_at, updated_at (or system-assigned). On success, a new row is created, representing a complete version of the product at a given moment.\n\nThis operation supports strict audit and compliance requirements (append-only). No update/delete/soft delete is permitted. No fields outside the schema may be referenced in request or response. The returned object is the full row as-inserted with system-generated fields (id, timestamps).","summary":"Create new immutable product snapshot version row (ai_shop_product_snapshots table)","parameters":[],"requestBody":{"description":"Required fields for creating a product snapshot (version). All must match ai_shop_product_snapshots columns.","typeName":"aiShopProductSnapshots.ICreate"},"responseBody":{"description":"Full snapshot row after creation, matching ai_shop_product_snapshots fields exactly.","typeName":"aiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots","method":"post"},{"specification":"Implements update/replace (PUT) for a product snapshot record, by primary key (id). Since ai_shop_product_snapshots rows are designed as immutable append-only audit records, PUT on this route must be treated as a compliance-corner-case (for correction/super-admin flow). All updatable fields must exist in the schema and only legitimate modifications allowed. No soft delete (no deleted_at) is implemented; overwriting a record is rare and logged. All non-existent fields are forbidden.","description":"This endpoint updates (typically, super-admin use or legal correction) a single product snapshot record in the ai_shop_product_snapshots table by its id (UUID). Only real schema fields are allowed in request and response (id, ai_shop_product_id, name, description, category_id, status, created_at, updated_at). No deleted_at or is_deleted exists.\n\nRegular client usage should favor audit-friendly append-only logic; however, in exceptional circumstances (audit correction or system fix), fields can be replaced via this endpoint, and must be logged and reviewed per compliance. If record does not exist, proper error is returned.","summary":"Update/replace an immutable product snapshot row (CORRECTION ONLY, ai_shop_product_snapshots table)","parameters":[{"name":"id","description":"ID of the product snapshot to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All updatable fields per ai_shop_product_snapshots schema. No fields not present in schema allowed.","typeName":"aiShopProductSnapshots.IUpdate"},"responseBody":{"description":"The updated product snapshot record, per ai_shop_product_snapshots schema.","typeName":"aiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots/{id}","method":"put"},{"specification":"Implements hard deletion for a single immutable product snapshot row by id, as defined in ai_shop_product_snapshots. There are no deleted_at or soft-delete fields present, so this operation must perform a physical hard delete (permanent removal) of the row. All field references must map directly to schema; error if not found. Return object or status reflecting post-deletion state.","description":"This endpoint permanently removes a product snapshot version row from the ai_shop_product_snapshots table by its id (UUID), as there are no soft-delete/deleted_at fields defined in the schema. This action is destructive and cannot be undone. Only actual table fields are referenced and impacted. If the row does not exist, an appropriate error is returned. This operation should be protected by authorization, as it circumvents audit/rollback guarantee.","summary":"Hard delete a product snapshot row (ai_shop_product_snapshots table)","parameters":[{"name":"id","description":"ID of the product snapshot to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productSnapshots/{id}","method":"delete"},{"specification":"Implements complex search or batch query for product images, as defined in the ai_shop_product_images table in Prisma schema. Supports only actual fields (id, ai_shop_product_id, image_uri, alt_text, position) and never refers to deleted_at or similar fields. Intended to provide paginated, filtered search results for product gallery images.","description":"This endpoint provides paginated and filtered search/query of product images from the ai_shop_product_images table. Clients can filter based on ai_shop_product_id, alt_text, or position, sort and paginate results using only fields defined in schema. No deleted_at or soft delete columns exist in product_images, so every record is treated as active unless filtered otherwise.\n\nNo modification is permitted through this endpoint. Only actual schema columns are referenced. Query is strictly read-only, serving image browsing and management UI.","summary":"List/search product gallery images (ai_shop_product_images table, paginated)","parameters":[],"requestBody":{"description":"Product image search, filter, and pagination criteria. All fields must exist in ai_shop_product_images schema.","typeName":"aiShopProductImages.IRequest"},"responseBody":{"description":"Paginated result of product images using fields from ai_shop_product_images only.","typeName":"IPageAiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages","method":"patch"},{"specification":"Implements a GET by ID/detail retrieval of a product image (ui/gallery) based on ai_shop_product_images table schema. Only uses id, ai_shop_product_id, image_uri, alt_text, and position columns - no deleted_at, created_by, or updated_by or other non-existent fields referenced. No modification allowed via GET.","description":"This endpoint retrieves a specific product image record by id (UUID) from the ai_shop_product_images table, mapped exactly to columns defined in the schema: id, ai_shop_product_id, image_uri, alt_text, position. No deleted_at or soft delete fields exist. Only detail retrieval is supported - modification or deletion must use other endpoints. All field names and return structure strictly follow the schema.","summary":"Get product image by id (ai_shop_product_images table)","parameters":[{"name":"id","description":"ID of the product image to retrieve (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of a single product image based on ai_shop_product_images fields.","typeName":"aiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages/{id}","method":"get"},{"specification":"Implements POST (creation/insertion) for new product image record in the ai_shop_product_images table. All client-provided data must correspond to real columns: ai_shop_product_id, image_uri, alt_text, position. No non-existent/soft delete fields. Returns record as created with all schema fields populated. Only insertion, never update or delete.","description":"This endpoint inserts a new product image (gallery/photo) row into the ai_shop_product_images table using only columns from the schema: ai_shop_product_id, image_uri, alt_text, position. No deleted_at or soft delete, no extraneous properties allowed. On success, a new record is created and returned, reflecting all defined schema fields. No batch or bulk operation logic included. This can be used in seller product registration, admin UI, or imports.","summary":"Create/product gallery image (ai_shop_product_images table)","parameters":[],"requestBody":{"description":"Fields required to add product image. Only schema fields accepted: ai_shop_product_id, image_uri, alt_text, position.","typeName":"aiShopProductImages.ICreate"},"responseBody":{"description":"Full product image record after creation, only fields from ai_shop_product_images.","typeName":"aiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages","method":"post"},{"specification":"Implements update/replace operation (PUT) for a specific product image entry by id. The ai_shop_product_images table supports update with only schema fields: ai_shop_product_id, image_uri, alt_text, position. No soft-delete/deleted_at or non-existent fields permitted. Returns the updated record as per schema. No batch update logic supported here.","description":"This endpoint updates an individual product image record by id (UUID), using only ai_shop_product_images fields. Permitted updatable properties: ai_shop_product_id, image_uri, alt_text, position. No soft/hard delete logic supported here. Record is replaced/updated for seller/admin correction, image changes, or similar use case.\n\nSuccessfully updated record is returned. If not found, error is returned. Only schema-documented fields allowed in input/output.","summary":"Update/replace a specific product image (ai_shop_product_images table)","parameters":[{"name":"id","description":"ID of the product image record to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable fields for a product image. Only ai_shop_product_images fields allowed.","typeName":"aiShopProductImages.IUpdate"},"responseBody":{"description":"The updated product image, with all fields from ai_shop_product_images schema.","typeName":"aiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages/{id}","method":"put"},{"specification":"Implements hard-delete by id for a single product image in ai_shop_product_images. No deleted_at or soft delete fields exist per schema, so row must be physically/permanently removed. No non-existent columns mentioned; if not found, error is returned. This is a destructive operation and should be protected by authorization logic (e.g., admin or seller).","description":"This endpoint permanently deletes a product image record by id (UUID) from the ai_shop_product_images table, as there is no soft delete/deleted_at field present. The row is physically removed if exists; if not, an appropriate error is sent. All logic references only columns in the schema. This operation is destructive and cannot be undone; reserved for seller/administrator use only.","summary":"Hard-delete product image by id (ai_shop_product_images table)","parameters":[{"name":"id","description":"ID of the product image to hard-delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productImages/{id}","method":"delete"},{"specification":"Implements paginated/batch query for product tag data from ai_shop_product_tags table. This endpoint only supports search, filter, and pagination logic using actual schema fields: id, ai_shop_product_id, tag_text, created_at. Returns list using only schema fields, never non-existent properties. Modifications/deletes must be done via other endpoints.","description":"This endpoint lists/searches product tags from the ai_shop_product_tags table, supporting filter (e.g., by product id, tag_text, created_at) and pagination. All fields referenced must map to the schema. Returned results include only: id, ai_shop_product_id, tag_text, created_at. No soft-delete or modification capability provided here.\n\nThis is used for management UI, search, or tag analytics. Input/output must not refer to missing columns like deleted_at or created_by.","summary":"List/search product tags (ai_shop_product_tags table, paginated)","parameters":[],"requestBody":{"description":"Product tag filter/search criteria. Only ai_shop_product_tags fields may be present.","typeName":"aiShopProductTags.IRequest"},"responseBody":{"description":"Paginated list of product tags, all fields from ai_shop_product_tags only.","typeName":"IPageAiShopProductTags"},"authorizationRoles":null,"path":"/aiShop/productTags","method":"patch"}],"completed":156,"total":275,"step":0,"created_at":"2025-07-23T07:06:52.905Z"},"tokenUsage":{"facade":{"aggregate":{"total":838402,"input":{"total":788638,"cached":0},"output":{"total":49764,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":838402,"input":{"total":788638,"cached":0},"output":{"total":49764,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":838402,"input":{"total":788638,"cached":0},"output":{"total":49764,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":838402,"input":{"total":788638,"cached":0},"output":{"total":49764,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new order delivery record for the ai_shop_order_deliveries table. The operation requires submitting all atomic and required fields as defined in the Prisma schema: ai_shop_order_id (order being delivered), ai_shop_order_item_id (nullable for full vs partial deliveries), ai_shop_seller_id (delivery owner/processor), delivery_status (progress state), tracking_number (nullable), shipper_code (express/courier code), shipped_at (nullable), delivered_at (nullable), seller_memo (nullable), and admin_note (nullable). Ensure referential integrity with linked orders, sellers, and order items. This operation enables order fulfillment tracking per business legal and audit requirements. All provided fields must match their definition and constraints in the schema. There is no deleted_at or similar field related to soft deletion, so the entity will be hard deleted in DELETE operations.","description":"This operation creates a new order delivery record tied to a specific order in the ai_shop_order_deliveries table. All required atomic fields must be provided, including links to ai_shop_orders (ai_shop_order_id), optionally ai_shop_order_items (ai_shop_order_item_id), and ai_shop_sellers (ai_shop_seller_id). delivery_status represents stage (e.g., pending, ready, shipped, delivered). Optional fields—tracking_number, shipped_at, delivered_at, seller_memo, admin_note—should be included as needed by business logic and workflow. Audit fields guaranteed by schema are managed internally (not directly submitted). Referential integrity to order, seller, and order item is enforced. There is no soft deletion in this entity—the record is permanently removed with DELETE.","summary":"Create a new order delivery record in ai_shop_order_deliveries (hard create).","parameters":[],"requestBody":{"description":"Information for order delivery creation (including order, seller, delivery metadata).","typeName":"aiShopOrderDeliveries.ICreate"},"responseBody":{"description":"Created order delivery record.","typeName":"aiShopOrderDeliveries"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries","method":"post"},{"specification":"Update an existing order delivery record (ai_shop_order_deliveries table) by 'id'. Accepts fields available for update: any atomic property present in the schema except the primary key. Allowed fields include ai_shop_order_id, ai_shop_order_item_id (nullable), ai_shop_seller_id, delivery_status, tracking_number (nullable), shipper_code, shipped_at (nullable), delivered_at (nullable), seller_memo (nullable), admin_note (nullable). Audit timestamp fields are updated automatically per schema. There is no soft delete; removed records are permanently deleted. Batch fields or referential links must respect foreign key constraints. Only schema-specified fields may be updated.","description":"This operation updates an order delivery entry in ai_shop_order_deliveries by its primary key. The updatable fields, as per the schema, include delivery_status, tracking_number, shipper_code, shipped_at, delivered_at, seller_memo, admin_note, and referential fields ai_shop_order_id, ai_shop_order_item_id, and ai_shop_seller_id. Only fields that exist in the schema may be specified (no synthetic or computed properties). There is no soft deletion marker; deletions are hard. Foreign key validations must succeed when updating referential fields.","summary":"Update an order delivery record in ai_shop_order_deliveries by id (hard update).","parameters":[{"name":"id","description":"Target order delivery's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order delivery update data per ai_shop_order_deliveries schema.","typeName":"aiShopOrderDeliveries.IUpdate"},"responseBody":{"description":"Updated order delivery record.","typeName":"aiShopOrderDeliveries"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries/{id}","method":"put"},{"specification":"Delete an order delivery record from the ai_shop_order_deliveries table by 'id'. As the schema does not include a soft delete field (e.g., deleted_at), this operation will perform a hard (permanent) deletion of the record. The operation expects a valid primary key id and will remove the record irreversibly. Only the id parameter is required; no request body is necessary.","description":"This operation deletes a single order delivery entry from ai_shop_order_deliveries identified by the id parameter. The record is permanently removed since there is no deleted_at or equivalent soft deletion field in the schema. This operation is irreversible for compliance and audit history. Minimal input is required: only a valid UUID id referencing the order delivery to delete. Ensure all business and referential constraints are considered before deletion, as per schema.","summary":"Delete an order delivery record in ai_shop_order_deliveries by id (hard delete).","parameters":[{"name":"id","description":"Target order delivery's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderDeliveries/{id}","method":"delete"},{"specification":"List/search coupon records in the ai_shop_coupons table with flexible query/filter/search criteria. Response includes paginated coupon entities conforming to atomic fields in the schema: id, ai_shop_promotion_id, code, type, description, valid_from, valid_until, max_uses, max_uses_per_customer, min_purchase_amount, discount_amount, discount_percent, is_active, created_at, updated_at. This operation is for searching and paginating results and not for creation or modification. All search and filter fields must exist in the schema.","description":"This operation retrieves a paginated list of coupon records from the ai_shop_coupons table. Fields included in the results and available for searching/filtering are defined by the schema: id, ai_shop_promotion_id, code, type, description, validity period, usage limits, amount/percent discount, activation, audit fields. The operation supports advanced querying and pagination. No non-schema fields are referenced. Creation, update, and deletion operations use their own endpoints.","summary":"Fetch and search ai_shop_coupons records (paginated, filterable).","parameters":[],"requestBody":{"description":"Search and pagination criteria for coupons (all fields must be schema-compliant).","typeName":"aiShopCoupons.IRequest"},"responseBody":{"description":"Paginated coupon search result.","typeName":"IPageAiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons","method":"patch"},{"specification":"Retrieve a single coupon record by 'id' from the ai_shop_coupons table. Only fields defined in the schema are included in the response: id, ai_shop_promotion_id, code, type, description, valid_from, valid_until, max_uses, max_uses_per_customer, min_purchase_amount, discount_amount, discount_percent, is_active, created_at, updated_at. Hard errors are returned for missing or deleted records. No soft delete field exists in the schema, thus results only reflect actually present rows.","description":"This operation returns the full atomic record for a coupon from ai_shop_coupons, identified by the unique id parameter. Returns all coupon details specified in the schema. No soft delete is implemented, so only existing records are returned. If the id does not exist, a not-found error is returned. The output only includes schema-defined fields.","summary":"Get ai_shop_coupons record by id.","parameters":[{"name":"id","description":"Coupon's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Coupon details for the given id.","typeName":"aiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons/{id}","method":"get"},{"specification":"Create a new coupon in ai_shop_coupons using only atomic fields defined in the schema: ai_shop_promotion_id (optional promo linkage), code (unique string), type, description, valid_from, valid_until, usage limits, discount amounts/percent, is_active status, and audit fields. The operation does not reference or create any non-schema fields. Creation requires all mandatory fields, referential integrity for promo linkage, and field-level validation per schema. Coupon code must be unique.","description":"Creates a new entry in ai_shop_coupons for digital coupons, single or multi-use, as defined by the schema. The request body must match ICreate: ai_shop_promotion_id, code, type, description, validity, usage caps, discount, is_active flag. All values are strictly validated; extra fields are ignored or rejected. No soft delete or hidden status is available. Upon success, returns the created coupon entity.","summary":"Create a new coupon in ai_shop_coupons (hard create).","parameters":[],"requestBody":{"description":"Coupon creation payload per schema (all required coupon fields).","typeName":"aiShopCoupons.ICreate"},"responseBody":{"description":"Created coupon entity.","typeName":"aiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons","method":"post"},{"specification":"Update a coupon in ai_shop_coupons by 'id'. Modifiable fields are those defined in the schema: ai_shop_promotion_id, code, type, description, valid_from, valid_until, usage caps, discount amounts, is_active status, and audit fields. No non-schema fields permitted. Coupon code uniqueness is enforced. No soft delete in this entity—removal is permanent via DELETE. All foreign keys, if altered, must remain valid.","description":"This operation updates an existing coupon in the ai_shop_coupons table. All updatable properties are strict to the schema (ai_shop_promotion_id, code, type, description, period, usage/max caps, discount values, is_active, audit fields). All updates will be checked for code uniqueness and FK validity. There are no soft delete semantics here—DELETE will remove permanently. Audit timestamps are updated automatically.","summary":"Update ai_shop_coupons record by id (hard update only).","parameters":[{"name":"id","description":"The target coupon's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Coupon update data per ai_shop_coupons schema.","typeName":"aiShopCoupons.IUpdate"},"responseBody":{"description":"Updated coupon entity.","typeName":"aiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons/{id}","method":"put"},{"specification":"Delete a coupon record from ai_shop_coupons by 'id'. No soft delete marker is present in the schema so this operation will perform a hard (permanent) deletion. Only the id parameter is required. Operation removes the coupon entirely from the table.","description":"Deletes (hard delete) a coupon in ai_shop_coupons referenced by the id parameter. As there is no soft delete (deleted_at or similar) in the schema, DELETE operations permanently remove the record. Coupon code uniqueness is not preserved after deletion, so reusing deleted codes is supported. Only referential constraints must be considered. No request body required.","summary":"Delete ai_shop_coupons record by id (hard delete only).","parameters":[{"name":"id","description":"Coupon record's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/coupons/{id}","method":"delete"},{"specification":"List/search coupon assignment records (ai_shop_coupon_assignments table) using flexible query/filters, supporting paging. Fields surfaced: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. Operation is only for listing; creation and update are handled elsewhere.","description":"Lists and paginates coupon assignment records from ai_shop_coupon_assignments. Available filter/search fields are: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state—strictly as present in the schema. Operation does not allow for creation/modification. Output is a paginated response including all atomic/required fields from schema. Only schema fields may be referenced in requests/results.","summary":"Paginated search of ai_shop_coupon_assignments records.","parameters":[],"requestBody":{"description":"Search/filter/pagination criteria for coupon assignments (all fields must be schema-compliant).","typeName":"aiShopCouponAssignments.IRequest"},"responseBody":{"description":"Paginated coupon assignment search result.","typeName":"IPageAiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments","method":"patch"},{"specification":"Retrieve a single coupon assignment entity by 'id' from ai_shop_coupon_assignments. Response includes all atomic fields: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. No non-schema fields present. No soft delete exists, so only extant records are returned.","description":"Returns a coupon assignment record from ai_shop_coupon_assignments by a provided id. All returned fields precisely reflect the schema: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. If the id does not exist, a not-found is raised. There is no soft deletion or hidden status field.","summary":"Get ai_shop_coupon_assignments record by id.","parameters":[{"name":"id","description":"Coupon assignment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Coupon assignment details for the given id.","typeName":"aiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments/{id}","method":"get"},{"specification":"Create a new coupon assignment record for ai_shop_coupon_assignments. Required fields: ai_shop_coupon_id (FK to coupon), ai_shop_customer_id (FK to customer), ai_shop_order_id (nullable, links assigned coupon to an order on use), assigned_at (datetime), redeemed_at (nullable), state. No soft delete or hidden flag is available. No non-schema fields are permitted. Atomic field validation, referential checks, and audit constraints enforced per business policy.","description":"This operation creates a new coupon assignment linking a coupon, customer, and, if applicable, order. All required atomic fields in ICreate must be provided and comply strictly with the schema: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. Upon successful validation, returns the full created assignment entity. No soft delete or synthetic fields.","summary":"Create a new ai_shop_coupon_assignments record (hard create only).","parameters":[],"requestBody":{"description":"Coupon assignment creation payload (all required fields strictly schema-based).","typeName":"aiShopCouponAssignments.ICreate"},"responseBody":{"description":"Created coupon assignment entity.","typeName":"aiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments","method":"post"},{"specification":"Update an existing coupon assignment (ai_shop_coupon_assignments) by id. Allowed fields are schema-specified: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id (nullable), assigned_at, redeemed_at, state. All updates validate referential integrity and field-level constraints per schema. No soft delete; updated records persist unless explicitly deleted via DELETE. Only schema fields are accepted; extraneous fields cause error.","description":"Updates a coupon assignment entry in ai_shop_coupon_assignments by id. The updatable fields must be strictly present in the schema: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. All referential requirements are enforced. The record persists unless explicitly deleted, as there is no soft delete. Audit trail maintained via internal mechanisms, not exposed directly. No synthetic or extra fields allowed.","summary":"Update ai_shop_coupon_assignments record by id (only schema fields allowed).","parameters":[{"name":"id","description":"Coupon assignment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Coupon assignment update data (all updatable schema fields).","typeName":"aiShopCouponAssignments.IUpdate"},"responseBody":{"description":"Updated coupon assignment entity for the given id.","typeName":"aiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments/{id}","method":"put"}],"completed":168,"total":275,"step":0,"created_at":"2025-07-23T07:06:54.763Z"},"tokenUsage":{"facade":{"aggregate":{"total":898395,"input":{"total":845190,"cached":0},"output":{"total":53205,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":898395,"input":{"total":845190,"cached":0},"output":{"total":53205,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":898395,"input":{"total":845190,"cached":0},"output":{"total":53205,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":898395,"input":{"total":845190,"cached":0},"output":{"total":53205,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Update an existing order item (ai_shop_order_items) by order item ID. This operation allows modification of properties such as quantity, unit price, variant information, and memo fields. It references only the fields present in the ai_shop_order_items schema, such as ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, and seller_memo. There are no soft delete fields in this entity; updates are strictly on the fields defined. This endpoint is used when the details of a specific order item need to be changed after initial creation (e.g., quantity adjustment, correcting pricing, or updating memo fields). The function will validate all input to ensure proper references and data integrity. Related endpoints include creation (POST), retrieval (GET), and hard delete (DELETE).","description":"This endpoint supports full update of a single order item's properties in the ai_shop_order_items table. Updateable fields are limited to those actually present in the schema, notably: ai_shop_order_id (order FK), ai_shop_product_id (product FK), ai_shop_product_variant_id (nullable SKU/variant FK), product_name, variant_name (nullable), quantity, unit_price (float), currency, and seller_memo (nullable memo for the seller). There are no soft delete fields (e.g., deleted_at), so the focus is on updating business-relevant atomic fields only. Security: Only authorized users (typically the customer, seller, or admin of the order) can update the order item. The relation between entities is strictly enforced (all FKs must be valid). Any invalid or missing data will result in validation errors with descriptive feedback. Business logic prohibits modification of completed or fully paid orders unless specific admin permission is granted. All related changes are logged for compliance. The behavior and fields for this endpoint are strictly dictated by the Prisma schema and do not involve any unlisted fields or logic.","summary":"Update an order item (ai_shop_order_items) by its ID.","parameters":[{"name":"id","description":"Target order item ID","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated values for the order item. Only accepts valid fields for ai_shop_order_items.","typeName":"IAiShopOrderItems.IUpdate"},"responseBody":{"description":"The updated order item returned after successful update.","typeName":"IAiShopOrderItems"},"authorizationRoles":null,"path":"/aiShop/orderItems/{id}","method":"put"},{"specification":"Delete an existing order item by its ID from ai_shop_order_items. As there are no soft delete fields (such as deleted_at or is_deleted) defined in the schema, this endpoint performs a hard delete, resulting in permanent removal of the order item record from the database. It strictly enforces referential integrity as defined in the schema; attempts to delete an item referenced by other entities may result in error. This should only be done by users with appropriate permissions, and usually when the order is in an editable/reversible state.","description":"Permanently deletes an order item record by its primary key in the ai_shop_order_items table. As there is no soft delete logic (no deleted_at or similar field in the schema), the operation erases the row from the database. This operation is to be used carefully and typically restricted to cases where data removal is appropriate, such as cancellation before payment or admin removal for error correction. The API will reject attempts to delete items from completed or locked orders. The operation logs the removal as part of compliance/audit requirements but does not retain the row data. Related endpoints: retrieval (GET), update (PUT), and creation (POST).","summary":"Delete an order item (ai_shop_order_items) by its ID; this is a hard delete.","parameters":[{"name":"id","description":"Target order item ID to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderItems/{id}","method":"delete"},{"specification":"Retrieve a paginated, filterable list of order status history records from ai_shop_order_status_histories. Used for auditing changes and tracing the status change timeline for one or more orders. Supports searching by order ID, admin ID, date range, and status transitions (from_status, to_status). Underlying DB schema: ai_shop_order_status_histories, which only contains actual change history, no soft delete fields. The endpoint should provide efficient querying and ordering of results for admin, seller, or customer audit purposes.","description":"Fetches a list of order status change records from ai_shop_order_status_histories based strictly on fields in the schema: ai_shop_order_id (FK), changed_by_admin_id (nullable FK), from_status, to_status, changed_at, change_reason (nullable). The operation supports filtering (e.g., by order, admin, date) and paginates the results. This endpoint enables compliance and traceability for all workflow state changes. There are no soft/hard delete nuances as this is a purely audit/history table and only select is permitted. Error handling includes invalid filter or pagination parameters; permissions depend on user role/context. This endpoint acts as a foundation for full lifecycle order tracking in the marketplace.","summary":"List and search order status change history records (ai_shop_order_status_histories).","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_order_status_histories list retrieval. Only allows filtering by schema fields (e.g., order ID, date range).","typeName":"IAiShopOrderStatusHistories.IRequest"},"responseBody":{"description":"Paginated, filterable list of order status history records.","typeName":"IPageIAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories","method":"patch"},{"specification":"Get the detail record for a single order status change by its ID from ai_shop_order_status_histories. Returns all the tracked fields for the specified record, such as ai_shop_order_id (FK), changed_by_admin_id (FK), from_status, to_status, changed_at, and change_reason. This supports audit workflows and single-record traceability. The ID is the primary unique identifier; there are no soft delete semantics in this purely historical table.","description":"Retrieves an order status change record from ai_shop_order_status_histories given its ID. Returns from_status, to_status, referenced order/admin, timestamp, and other schema fields. API will only return data for a valid existing record, else will return a 404 not found. This endpoint is used for deep audit trail viewing, compliance audit, and reconstructing order/process transitions. No delete/update semantics are involved as this is an immutable audit/history table.","summary":"Get a single order status history record by ID (ai_shop_order_status_histories).","parameters":[{"name":"id","description":"Order status history record ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detail record for the order status change.","typeName":"IAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories/{id}","method":"get"},{"specification":"Create a new order status history record in ai_shop_order_status_histories. This table records each change in an order status for full auditability and compliance. The payload must include all required schema fields: ai_shop_order_id (FK), changed_by_admin_id (nullable FK), from_status, to_status, changed_at, and any optional change_reason. The operation strictly follows the schema structure—no soft delete or update fields exist for this entity. Upon successful creation, the new history record is returned.","description":"Creates and saves a new order status history record in ai_shop_order_status_histories. The request body must provide valid data for all the schema fields. This operation is to be performed whenever an order status transition occurs that needs to be logged for traceability (pending → paid, shipped → delivered, etc). API validates that FKs are valid and no extraneous fields are provided. No deleted_at or updated_at fields exist in this table: only the audit-relevant data per the schema. Typical API behavior: returns the full created record with server-generated ID and timestamps. Used by order-processing, workflow automation, and admin workflows.","summary":"Create a new order status history record (ai_shop_order_status_histories).","parameters":[],"requestBody":{"description":"Body for creating a new status history record—must strictly follow ai_shop_order_status_histories schema fields.","typeName":"IAiShopOrderStatusHistories.ICreate"},"responseBody":{"description":"The newly created order status history record.","typeName":"IAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories","method":"post"},{"specification":"Update an order status history record in ai_shop_order_status_histories by its ID. Allows modification of change_reason or other editable fields as specified in the schema. The entity only records atomic change history (from_status, to_status, etc.), with no soft delete or updated_at fields. ID parameter references the status history record to be modified. This endpoint is typically restricted to admin workflows when a correction or note must be added to a prior status change audit row.","description":"Updates an existing order status history record by unique ID. Permitted updates include change_reason (nullable) or correcting the references (admin, order) if entered in error. Only fields in ai_shop_order_status_histories can be set on update (ai_shop_order_id, changed_by_admin_id, from_status, to_status, changed_at, change_reason). API enforces referential integrity for all FKs and validates the update against the immutable/atomic nature of audit trails. No soft delete or updated_at logic is present. Normally, status history records are immutable, but controlled corrections may be allowed as a business exception.","summary":"Update an order status history record by ID (ai_shop_order_status_histories).","parameters":[{"name":"id","description":"Order status history record ID to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the order status history record—must match ai_shop_order_status_histories schema only.","typeName":"IAiShopOrderStatusHistories.IUpdate"},"responseBody":{"description":"The updated order status history record.","typeName":"IAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories/{id}","method":"put"},{"specification":"Delete an order status history record by ID from ai_shop_order_status_histories. No soft delete fields (deleted_at/is_deleted) exist in this entity; this operation performs a hard delete, permanently removing the row from the audit table. Deletions should only be performed by system admins and for exceptional correction purposes, never as part of routine workflow. This removal is permanent, so use with caution.","description":"Permanently deletes an order status history record from ai_shop_order_status_histories based on its unique ID. As no soft deletion is supported (no deleted_at field), this is a hard delete operation and removes all trace of the row from future audit queries. Should only be performed with strict business justification and audit logging. API validates ID existence before deletion, and referential integrity is enforced per schema relationships. Related endpoints: read (GET), create (POST), update (PUT).","summary":"Delete an order status history record by ID (ai_shop_order_status_histories) - hard delete only.","parameters":[{"name":"id","description":"Order status history record ID to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderStatusHistories/{id}","method":"delete"},{"specification":"Retrieve a paginated, filterable list of order refund records from ai_shop_order_refunds. This allows admins, customers, and sellers to query status and detail of refunds, optionally by order, customer, refund status, or date. The schema permits filtering on ai_shop_order_id, requested_by_customer_id, refund_status, requested_at, processed_at. This endpoint strictly returns schema-compliant objects and does not support soft deletion (no deleted_at or similar field present).","description":"Fetches a list of refund records from ai_shop_order_refunds with advanced filtering and pagination, based strictly on the existing schema. Filterable fields include ai_shop_order_id, requested_by_customer_id, refund_status, requested_at, processed_at, and admin_note. The result schema returns only fields defined for ai_shop_order_refunds, as per Prisma schema. Used for administration, audit trail, and user history purposes. Validation errors will be provided if filters or pagination parameters are invalid. Permission to see refunds is based on user role and order relationship. No soft delete capabilities are involved; only read is allowed from this endpoint.","summary":"List and search order refund records (ai_shop_order_refunds).","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_order_refunds list retrieval. Only allows filtering by schema-defined fields.","typeName":"IAiShopOrderRefunds.IRequest"},"responseBody":{"description":"Paginated and filterable list of order refund records.","typeName":"IPageIAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds","method":"patch"},{"specification":"Get a single order refund record from ai_shop_order_refunds by its unique ID. The return fields include all data present in the schema: ai_shop_order_id (FK), requested_by_customer_id (FK), refund_reason, refund_status, requested_at, processed_at, admin_note. The primary key is used for precise row identification; no soft delete is present in this table. Used in admin review, customer self-service, seller audit, and compliance scenarios. Returns 404 if the record is not found.","description":"Retrieves a detailed order refund record from ai_shop_order_refunds by ID. Only the precise schema-defined fields are returned. The endpoint is strictly for returning the state and progress of a requested refund. Any missing or invalid ID results in not found. No soft/hard delete logic is applicable on this endpoint; only select is supported. API returns details for use in UI, reporting, compliance, and workflow dashboards.","summary":"Get detail for a single order refund record by ID (ai_shop_order_refunds).","parameters":[{"name":"id","description":"Order refund record ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The single order refund record for the provided ID.","typeName":"IAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds/{id}","method":"get"},{"specification":"Create a new order refund record in ai_shop_order_refunds. This inserts an atomic entry for a refund request or process on a specific order and customer. All required fields per schema (ai_shop_order_id, requested_by_customer_id, refund_reason, refund_status, requested_at, processed_at, admin_note) must be supplied in the body. The request is validated for referential integrity, proper status values, and business rules. The database does not track soft delete or update semantics for this entity. Upon success, returns the created refund entry.","description":"Creates and returns a new entry in ai_shop_order_refunds with the provided field values, strictly according to schema specification. Accepts only atomic field values as specified (no additional logic or fields). API checks that IDs match existing orders/customers. Used in refund creation workflows triggered by customers, sellers, or admins, depending on the context. No soft delete or update logic exists; change tracking relies on new row insertion and retrieval only. Returns the created record on success for immediate feedback and UI display.","summary":"Create a new order refund record in ai_shop_order_refunds.","parameters":[],"requestBody":{"description":"Request body to create a refund record, fields must match ai_shop_order_refunds schema exactly.","typeName":"IAiShopOrderRefunds.ICreate"},"responseBody":{"description":"The new refund record that was created with the supplied data.","typeName":"IAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds","method":"post"},{"specification":"Update an order refund record by its ID in ai_shop_order_refunds. This enables updating atomic fields as present in the schema (refund_reason, refund_status, processed_at, admin_note, etc.). There are no soft delete or updated_at fields. Only the referenced refund entry is modified, and referential integrity (order, customer) is enforced. Used in refund progression workflows when state or audit/admin memo needs to be changed. Returns the updated refund object with all schema-compliant fields.","description":"Updates an existing order refund entry in ai_shop_order_refunds by its primary key. Editable fields per schema include refund_reason, refund_status, processed_at, admin_note, and referenced order/customer if needed. The request body must adhere precisely to the schema for ai_shop_order_refunds, and only atomic updates are supported. Security rules limit who can update refunds. No soft delete or non-schema field logic is ever involved in this update endpoint. Returns the full updated state on success; validation covers foreign keys and business rules for legitimate update conditions.","summary":"Update an order refund record by ID (ai_shop_order_refunds).","parameters":[{"name":"id","description":"Refund record ID to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated refund object values, all fields must match ai_shop_order_refunds schema.","typeName":"IAiShopOrderRefunds.IUpdate"},"responseBody":{"description":"The updated refund object as persisted in ai_shop_order_refunds.","typeName":"IAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds/{id}","method":"put"},{"specification":"Delete an order refund record by ID from ai_shop_order_refunds. Hard delete: There are no deleted_at/is_deleted or similar fields supporting soft delete, so this permanently removes the refund entry from the system. Must only be performed by authorized actors and in accordance with audit/business process. This is an irreversible operation, and all validation on referential integrity is performed prior to execution. Use with caution and audit all such removes. Related endpoints handle creation, update, and retrieval.","description":"Hard-deletes a refund record in ai_shop_order_refunds based on the unique ID parameter. This endpoint removes the row from the database entirely; it does not support soft delete or logical flagging. Deletion is irreversible, and only permitted by users with business/admin permission and justification. Attempting to delete a non-existent or referenced refund record may result in API error. Logs such events for compliance tracking. API checks for valid ID and referential integrity before deletion. Related endpoints: retrieve, create, update, list.","summary":"Delete a refund record by ID (ai_shop_order_refunds); hard delete only (no soft delete in schema).","parameters":[{"name":"id","description":"Refund record ID to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderRefunds/{id}","method":"delete"}],"completed":180,"total":275,"step":0,"created_at":"2025-07-23T07:06:56.855Z"},"tokenUsage":{"facade":{"aggregate":{"total":958966,"input":{"total":901747,"cached":0},"output":{"total":57219,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":958966,"input":{"total":901747,"cached":0},"output":{"total":57219,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":958966,"input":{"total":901747,"cached":0},"output":{"total":57219,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":958966,"input":{"total":901747,"cached":0},"output":{"total":57219,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Get operation for ai_shop_sellers. Retrieves detailed information for a seller entity with the specified id. Returns the full seller record, including business_name, business_registration_number, status, approved_at, created_at, and updated_at. This operation enables role-based access for platform staff to obtain comprehensive seller account data by UUID. No soft delete—if the record doesn't exist by id, a 404 should be returned. Suitable for business/operations workflows and platform audits. Only references fields present in the Prisma schema.","description":"This operation returns complete details of a specific seller entity, as defined by the ai_shop_sellers table in the schema. The unique seller id (UUID) serves as the path parameter, enabling platform roles (like admin or business staff) to look up a seller's full profile. All returned fields are strictly mapped to the schema: id (primary key, UUID), business_name (official store/business name), business_registration_number (unique legal identifier), status (onboarding/active/suspended), approved_at (timestamp of admin approval), created_at, and updated_at. The operation does not reference any field not present in the schema, ensuring strict schema compliance. Security may restrict access to privileged roles only. If the id does not correspond to a valid record, a 404 is returned. This operation forms part of seller lifecycle management, admin dashboard reporting, and regulatory audits.","summary":"Get detailed view of a seller (ai_shop_sellers table) by id.","parameters":[{"name":"id","description":"Globally unique identifier for the seller (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed info of the seller corresponding to the id.","typeName":"aiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers/{id}","method":"get"},{"specification":"Create operation for ai_shop_sellers. Inserts a new seller record into the database, requiring all needed fields except for id, timestamps, and the nullable approved_at. Only schema-defined properties are included: business_name, business_registration_number, status, and approved_at (nullable). The id is auto-generated. This operation forms the basis for seller onboarding/business registration. No extra properties beyond the schema should ever be referenced.","description":"Creates a new seller entity based strictly on the ai_shop_sellers schema. The request body must specify: business_name (required, unique for store/legal entity identification), business_registration_number (required, unique legal identifier), status (required lifecycle status such as onboarding, active, or suspended), and an optional approved_at (timestamp, nullable) per approval workflow. Upon creation, auto-generated fields such as id, created_at, and updated_at are initialized. No soft delete or extraneous audit fields are present in the schema; only what is specified. Response contains the full created seller record. Input validation must respect unique constraints on business_name and business_registration_number. This endpoint is critical for onboarding new sellers, compliance, and business workflows.","summary":"Create new seller entity in ai_shop_sellers table.","parameters":[],"requestBody":{"description":"New seller information (all required fields as defined in ai_shop_sellers schema).","typeName":"aiShopSellers.ICreate"},"responseBody":{"description":"Full seller record just created.","typeName":"aiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers","method":"post"},{"specification":"Update operation for ai_shop_sellers. Replaces a seller's information for the specified id. All updatable fields in the schema are required in the request, except for id and auto-generated timestamps. Supported fields are business_name, business_registration_number, status, and approved_at. This operation overwrites the existing record with the new values. Input must match schema types and business rules. No extraneous or computed fields allowed.","description":"Updates an existing seller entity's information, strictly according to the ai_shop_sellers schema. The input body must include business_name, business_registration_number, status, and approved_at (nullable). Auto-managed fields like created_at and updated_at are updated by the database. The unique id (UUID) is supplied as a path parameter. No soft delete—only hard updates of existing fields as per the schema are supported. This endpoint is vital for maintaining accurate business and compliance records of sellers, supporting admin modifications, and platform audit requirements.","summary":"Update seller information (ai_shop_sellers) by id.","parameters":[{"name":"id","description":"Globally unique identifier of the seller to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated seller information (fields must match ai_shop_sellers schema, id excluded).","typeName":"aiShopSellers.IUpdate"},"responseBody":{"description":"The full updated seller record.","typeName":"aiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers/{id}","method":"put"},{"specification":"Delete operation for ai_shop_sellers. Performs a hard delete (permanent data removal) because ai_shop_sellers table does not have a soft delete field. Deletion is by unique identifier (UUID) and, upon success, the seller record is permanently removed from the database—cannot be restored. If no such id exists, operation is idempotent (404 or 204 as appropriate). No reference to non-existent fields: no deleted_at or is_deleted in schema.","description":"Permanently deletes the seller entity with the given id, as specified by the ai_shop_sellers table. Since this entity has no soft delete indicator (e.g., deleted_at), the operation results in the complete removal of the record from the database. The unique id (UUID) is the path parameter. Operation supports idempotency: if the seller does not exist, a no-content or not found response is provided. Security considerations should restrict operation to admin/business ops roles. This method is necessary for regulatory removals and admin controls, but use is tightly governed due to permanent loss.","summary":"Hard delete seller record (ai_shop_sellers) by id; irreversible.","parameters":[{"name":"id","description":"UUID of the seller to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/sellers/{id}","method":"delete"},{"specification":"List/search operation (PATCH) for ai_shop_admins. Allows search, filter, and pagination for all admin records in the ai_shop_admins table, returning a paginated result set strictly based on schema fields: id, username, status, created_at, and updated_at. Designed to support admin directory, workflow, and operations auditing. All referenced properties must exist in the schema.","description":"Returns a paginated, optionally filtered collection of admin user entities from the ai_shop_admins table. Only schema-defined fields are selectable: id (UUID), username (login identifier), status (active/suspended/pending), created_at and updated_at (timestamps). The request body can include search, filter, sort, and pagination controls, with all operations conforming strictly to the available fields. Security and access should be managed per business requirements. No extraneous fields or unsupported search properties should be included; all responses and query mechanics are schema-driven. This operation is used for admin directory functionality, audit logs, and compliance search.","summary":"Paginated list/search of admin records (ai_shop_admins).","parameters":[],"requestBody":{"description":"Search, filter, and pagination details for listing admins as per ai_shop_admins schema.","typeName":"aiShopAdmins.IRequest"},"responseBody":{"description":"Paginated collection of admin entities matching search and filter parameters.","typeName":"IPageaiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins","method":"patch"},{"specification":"Get operation for ai_shop_admins. Retrieves the record and details of a single admin user by UUID, as defined in the schema. Returns id, username, status, created_at, and updated_at only—no undocumented properties permitted. This is required for admin management, access verification, and audit logging dashboards. All value returns correspond directly to schema fields.","description":"Fetches complete admin user details by ID, referencing only the columns defined in ai_shop_admins: id, username, status, created_at, and updated_at. The UUID path parameter ensures precise retrieval. This operation supports backoffice management flows, admin self-service, and audit controls. 404 is returned if the admin is not found. Role-based access may be required. Functionality is limited strictly to what the schema supports—no access to other tables or extended admin profiles; only core entity information is provided as per security best practices.","summary":"Get an admin record (ai_shop_admins) by id.","parameters":[{"name":"id","description":"UUID of the admin record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete admin record if found, mapped to ai_shop_admins columns.","typeName":"aiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins/{id}","method":"get"},{"specification":"Create operation for ai_shop_admins. Inserts a new admin user row in the database. Request body must match ai_shop_admins schema: username (required, unique), status (required). id, created_at, and updated_at are auto-generated. This endpoint is essential for onboarding platform and system admin accounts. No inexistent fields are to be referenced.","description":"Creates a new admin user entity per the ai_shop_admins schema. The request body details include: username (unique user identity for admins; required) and status (account status as defined—active, suspended, pending; required). Auto-managed columns, such as id, created_at, and updated_at, are initialized by the system/database. Uniqueness constraints are enforced on username. This is used for privileged onboarding, role escalation, and backoffice expansion. No soft delete field exists; only hard creation is supported. All values and references must strictly follow the schema provided for ai_shop_admins.","summary":"Create admin record (ai_shop_admins table).","parameters":[],"requestBody":{"description":"Details of new admin user (username, status) for creation, as mapped to ai_shop_admins schema fields.","typeName":"aiShopAdmins.ICreate"},"responseBody":{"description":"The full admin record just created.","typeName":"aiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins","method":"post"},{"specification":"Update operation for ai_shop_admins by id. Overwrites the username and/or status for the specified admin (UUID). Only fields defined in ai_shop_admins schema can be updated. The operation is used for account management, status changes, and compliance. Strict schema reference is enforced: no invented fields beyond username and status; id, timestamps handled by system.","description":"Updates admin user account details in ai_shop_admins by id (UUID). The request body may provide username (unique identifier for login/audit) and status (active/suspended/pending/lifecycle); only these fields can be altered. All auto-generated fields (created_at and updated_at) are managed internally by the system. 404 is returned if the record to be updated is not found. No references are made to any undocumented or unsupported attributes. This endpoint is used by admin team leads or compliance automation for user maintenance and operational state transitions.","summary":"Update admin record (ai_shop_admins) by id.","parameters":[{"name":"id","description":"UUID identifying the admin to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for specified admin (username/status) only, per ai_shop_admins schema.","typeName":"aiShopAdmins.IUpdate"},"responseBody":{"description":"The updated admin record, strictly conforming to schema.","typeName":"aiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins/{id}","method":"put"},{"specification":"Delete operation for ai_shop_admins. Since schema lacks soft delete, this is a hard delete removing the admin record completely and permanently by UUID identifier. Irreversible; if record doesn't exist, return appropriate not found.","description":"Permanently deletes the admin user from ai_shop_admins, identified by UUID in the path parameter. The absence of soft delete fields in the schema means deletion is hard, with no return or recovery via 'deleted_at' or similar. Admins should be warned before deletion. The operation is idempotent: a missing UUID results in a no-content or not found response. This operation is used only in sensitive deprovisioning and compliance workflows.","summary":"Hard delete admin record (ai_shop_admins) by id.","parameters":[{"name":"id","description":"UUID of admin record to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/admins/{id}","method":"delete"},{"specification":"Paginated list/search operation for ai_shop_auth_providers using PATCH. Allows for searching, filtering, and paginating through external authentication provider linkages, returning full records mapped exactly to the schema: id, customer_id, seller_id, admin_id, provider_type, external_id, linked_at. No invented or extended properties. Designed for user directory, troubleshooting, integrations, and audits.","description":"Returns a filtered and/or paginated list of authentication provider association records from ai_shop_auth_providers. Supported columns: id (UUID), customer_id, seller_id, admin_id (nullable FKs), provider_type (enum string describing auth mode), external_id (provider's identifier), and linked_at (datetime). Request body may include pagination, sort, and search fields limited strictly to what exists in the schema. This operation enables admin and integration teams to diagnose external authentication linkages, resolve login issues, and support OAuth/SNS provider management. All query and response properties are rigorously schema-compliant.","summary":"Paginated list/search for auth providers (ai_shop_auth_providers).","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters, strictly as per ai_shop_auth_providers schema.","typeName":"aiShopAuthProviders.IRequest"},"responseBody":{"description":"Paginated records of authentication providers matching search criteria.","typeName":"IPageaiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders","method":"patch"},{"specification":"Get operation for ai_shop_auth_providers by id (UUID). Returns only documented, schema-defined fields: id, customer_id, seller_id, admin_id, provider_type, external_id, linked_at. Used for detailed log/troubleshooting of an auth linkage. 404 if none found. All field references strictly to schema.","description":"Gets details for a specific authentication provider linkage, according to ai_shop_auth_providers. The id (UUID) path parameter uniquely identifies the linkage. Output fields are id, customer_id (nullable UUID), seller_id (nullable UUID), admin_id (nullable UUID), provider_type (e.g., google, kakao, email), external_id, and linked_at (timestamp). Security policy may restrict this operation to privileged roles. All values are presented exactly as in schema—no computed or extended attributes. Used to troubleshoot auth issues, compliance, and user mapping reconciliation workflows.","summary":"Get auth provider record by id (ai_shop_auth_providers).","parameters":[{"name":"id","description":"UUID for the provider linkage to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full auth provider linkage record for specified id.","typeName":"aiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders/{id}","method":"get"},{"specification":"Create operation for ai_shop_auth_providers. Inserts a new authentication provider linkage record. Request must include provider_type, external_id, linked_at, and exactly one of customer_id, seller_id, or admin_id to associate (nullable but one required). The system manages id creation. This endpoint is critical for onboarding users via OAuth/social login, 2FA provisioning, and integration with external auth.","description":"Creates a new association record between a user role (customer, seller, or admin) and an external authentication provider as defined in ai_shop_auth_providers. The input must specify provider_type (e.g., google, kakao, totp), external_id, linked_at (datetime when verified/added), and only one of customer_id, seller_id, or admin_id (all UUIDs, at least one required, the others null). This enables login with external providers and advanced auth methods. All values are strictly as defined in the Prisma schema—no fields outside the model may be sent/returned. Upon success, returns the full linkage record including UUID id. This operation is essential for SSO, federated login, and cross-role integrations. Input validation ensures assignment to only one role type at a time (as per schema intent).","summary":"Create new authentication provider linkage (ai_shop_auth_providers table).","parameters":[],"requestBody":{"description":"New external auth linkage details (all required fields for ai_shop_auth_providers, including role linkage).","typeName":"aiShopAuthProviders.ICreate"},"responseBody":{"description":"The full auth linkage record created.","typeName":"aiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders","method":"post"}],"completed":192,"total":275,"step":0,"created_at":"2025-07-23T07:06:57.842Z"},"tokenUsage":{"facade":{"aggregate":{"total":1019137,"input":{"total":958287,"cached":0},"output":{"total":60850,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1019137,"input":{"total":958287,"cached":0},"output":{"total":60850,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1019137,"input":{"total":958287,"cached":0},"output":{"total":60850,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1019137,"input":{"total":958287,"cached":0},"output":{"total":60850,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Update an existing authentication provider mapping (ai_shop_auth_providers). Only fields present in the actual Prisma schema can be referenced in the operation. Permitted updatable fields are 'customer_id', 'seller_id', 'admin_id', 'provider_type', 'external_id', and 'linked_at'. This endpoint is for updating a specific external auth linkage for a customer, seller, or admin. All fields updated must exactly match those in the model. No non-existent fields (like created_by, updated_by, deleted_at) can be referenced.","description":"This operation updates an existing authentication provider mapping in the ai_shop_auth_providers table. Each provider mapping links a customer, seller, or admin to an external authentication system (such as Google, Kakao, TOTP, SMS, etc.).\n\nThe update can change any of the following fields: 'customer_id', 'seller_id', 'admin_id' (each nullable for polymorphic reference), 'provider_type', 'external_id', and 'linked_at'. This enables, for instance, rebinding a social login, or updating a linkage time. Every update is validated against referential integrity constraints for actor entities per schema rules. No audit fields outside the schema (e.g., deleted_at, created_by) are supported. Business validation (e.g., uniqueness of provider/customer) follows database constraints.\n\nThis endpoint requires that the specified ID exists; otherwise, a not found error is returned. Partial updates are not supported—supply the full set of updatable fields. Related records and linkage are maintained per schema. Only data existing in the schema can be modified.","summary":"Update authentication provider mapping (ai_shop_auth_providers) by ID.","parameters":[{"name":"id","description":"ID of the authentication provider mapping to update (ai_shop_auth_providers.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update information for the authentication provider mapping. Only schema-defined fields are allowed. No extra fields accepted.","typeName":"IAiShopAuthProviders.IUpdate"},"responseBody":{"description":"The updated authentication provider mapping record.","typeName":"IAiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders/{id}","method":"put"},{"specification":"Delete an authentication provider mapping (ai_shop_auth_providers) by ID. The schema does NOT have a deleted_at or soft delete field, so this endpoint performs a hard delete (permanent removal) of the corresponding row.","description":"This operation deletes an authentication provider mapping from the ai_shop_auth_providers table by its unique identifier. As the ai_shop_auth_providers model in the schema does not have any soft delete (e.g., deleted_at) or is_deleted field, this action irreversibly removes the record from the database.\n\nThis is a permanent delete and cannot be undone. All linkage between the actor and the external authentication provider will be lost. This operation should be protected by business logic as per your access control requirements. It will only delete if the ID matches an existing row.","summary":"Hard delete authentication provider mapping (ai_shop_auth_providers) by ID.","parameters":[{"name":"id","description":"ID of the authentication provider mapping to delete (ai_shop_auth_providers.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/authProviders/{id}","method":"delete"},{"specification":"List authentication sessions (ai_shop_user_sessions) with search/filter capabilities. All returned information must reflect only schema presence. Typical filter fields include 'customer_id', 'seller_id', 'admin_id', 'issued_at', 'expires_at', 'terminated_at', and 'ip_address'. There is NO deleted_at field; all session lifecycle fields must match schema.","description":"This operation returns a list of authentication user sessions from the ai_shop_user_sessions table, supporting filter and search queries based solely on schema fields. User sessions may link to a customer, seller, or admin (polymorphic reference) and record details like session_token, issued_at, expires_at, terminated_at (nullable), and ip_address as defined in the schema.\n\nCommon filters may include session status (active vs. terminated), IP address, issued date range, and actor references, but queries and responses are strictly limited to the actual model fields—no audit fields outside those defined are supported. Pagination, query, and sorting are supported as appropriate.\n\nThe result is a paginated list of session objects, each containing only fields present in the ai_shop_user_sessions schema.","summary":"List/search authentication user sessions (ai_shop_user_sessions) with schema-limited filtering.","parameters":[],"requestBody":{"description":"Search and filter parameters for user session listing. Only schema fields are allowed for filtering/sorting. No soft delete support.","typeName":"IAiShopUserSessions.IRequest"},"responseBody":{"description":"Paginated user session records matching search and filter criteria.","typeName":"IPageIAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions","method":"patch"},{"specification":"Get a single authentication session (ai_shop_user_sessions) by ID. All returned session properties must reflect the actual Prisma schema fields.","description":"This operation retrieves a specific authentication user session from the ai_shop_user_sessions table, identified by its unique id. The returned session contains all fields defined in the schema, such as customer_id, seller_id, admin_id (for the account owning the session), session_token, issued_at, expires_at, terminated_at (if forcibly ended), and ip_address.\n\nNo extra metadata or audit fields (such as deleted_at, updated_by, etc.) are included, as these do not exist in the Prisma schema. If the session with the specified ID is not found, a not found error is returned.","summary":"Get user session (ai_shop_user_sessions) by ID.","parameters":[{"name":"id","description":"ID of the authentication user session to retrieve (ai_shop_user_sessions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"User session record matching the provided ID.","typeName":"IAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions/{id}","method":"get"},{"specification":"Create a new authentication user session (ai_shop_user_sessions). Only schema-defined fields are permitted in both request and response.","description":"This operation creates a new authentication user session record in the ai_shop_user_sessions table. Sessions are polymorphically linked to customers, sellers, or admins (customer_id, seller_id, admin_id; all nullable for correct referencing), and require a unique session_token, issued_at and expires_at timestamps, and an ip_address as defined in the schema.\n\nAll fields in the request body must exist in the ai_shop_user_sessions schema. The operation does not support fields not present in the schema, and soft delete is not relevant. The response is the full new session object with all defined fields in the schema.","summary":"Create user authentication session (ai_shop_user_sessions).","parameters":[],"requestBody":{"description":"Information for a new authentication user session. Mandatory and optional fields as per Prisma schema only.","typeName":"IAiShopUserSessions.ICreate"},"responseBody":{"description":"The created user session object, with only schema-defined fields included.","typeName":"IAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions","method":"post"},{"specification":"Update an existing authentication user session (ai_shop_user_sessions) by ID. Only actual Prisma schema fields are permitted for an update. There is no deleted_at or soft delete field; only real fields in schema can be updated.","description":"This operation updates the details of a specific authentication user session in the ai_shop_user_sessions table. Updatable fields include customer_id, seller_id, admin_id (all nullable for correct actor linkage), session_token, issued_at, expires_at, terminated_at, and ip_address (all schema-defined).\n\nNo non-existent fields (such as created_by or soft delete markers) are allowed. The operation requires the full set of updatable fields in the request. If the target session does not exist, a not found error is returned. All referential integrity constraints are enforced per schema relationships.","summary":"Update user session (ai_shop_user_sessions) by ID.","parameters":[{"name":"id","description":"ID of the authentication user session to update (ai_shop_user_sessions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update payload with all updatable fields, matching the ai_shop_user_sessions schema.","typeName":"IAiShopUserSessions.IUpdate"},"responseBody":{"description":"The updated user session record.","typeName":"IAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions/{id}","method":"put"},{"specification":"Delete a user authentication session (ai_shop_user_sessions) by ID. Hard delete, as there is no soft delete field in the schema.","description":"This operation deletes a user authentication session with the specified id from the ai_shop_user_sessions table. Since the model does NOT support soft delete fields (e.g., deleted_at), this is an irreversible, permanent removal. Once deleted, the session is no longer available for access or audit queries in this table. Deletion is final, so business logic must ensure this action is intentional and authorized.","summary":"Delete user session (ai_shop_user_sessions) by ID (hard delete, no soft delete).","parameters":[{"name":"id","description":"ID of the user session to delete (ai_shop_user_sessions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/userSessions/{id}","method":"delete"},{"specification":"List/search customer profiles (ai_shop_customer_profiles) with filtering. Returned data strictly limited to actual schema fields. There is no soft delete; all queries and output must match the active schema.","description":"This operation lists and searches customer profiles from the ai_shop_customer_profiles table, returning only schema-defined fields. Supported filter fields include customer_id, name, preferences, dob, gender, locale, shipping_addresses, created_at, and updated_at—all as defined in the schema. There are NO audit fields like deleted_at, created_by, etc.\n\nSearches or filters by schema fields, supports pagination and sorting per implementation standards. Result objects contain only properties present in ai_shop_customer_profiles.","summary":"List/search customer profiles (ai_shop_customer_profiles) with strict schema filtering.","parameters":[],"requestBody":{"description":"Search and filter parameters for customer profile listing. Only schema fields from ai_shop_customer_profiles are allowed.","typeName":"IAiShopCustomerProfiles.IRequest"},"responseBody":{"description":"Paginated customer profile records, only with schema-defined fields.","typeName":"IPageIAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles","method":"patch"},{"specification":"Get a single customer profile (ai_shop_customer_profiles) by ID. Only actual model fields are returned—description, preferences, etc. No audit fields outside schema are present.","description":"Get the customer profile by ID from the ai_shop_customer_profiles table. The result includes only the properties defined in the schema (customer_id, name, preferences, dob, gender, locale, shipping_addresses, created_at, updated_at). No soft delete or non-schema fields are allowed. If no profile is found, a not found error is returned.","summary":"Get customer profile (ai_shop_customer_profiles) by ID.","parameters":[{"name":"id","description":"ID of the customer profile to retrieve (ai_shop_customer_profiles.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The customer profile record, matching schema fields only.","typeName":"IAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles/{id}","method":"get"},{"specification":"Create a new customer profile (ai_shop_customer_profiles). Only schema fields are permitted in the request and response.","description":"This operation creates a new customer profile by inserting a row into the ai_shop_customer_profiles table. All data must match the schema fields: customer_id (FK), name, preferences, dob, gender, locale, shipping_addresses, created_at, and updated_at. No audit or soft delete fields (deleted_at, created_by, etc.) are accepted.\n\nThe response includes all resulting fields, as defined in the schema, for the newly created customer profile.","summary":"Create customer profile (ai_shop_customer_profiles).","parameters":[],"requestBody":{"description":"Information required to create a new customer profile; only schema fields allowed.","typeName":"IAiShopCustomerProfiles.ICreate"},"responseBody":{"description":"The created customer profile object.","typeName":"IAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles","method":"post"},{"specification":"Update an existing customer profile (ai_shop_customer_profiles) by ID. Only the fields in the model can be updated. There is NO deleted_at or soft delete in the schema—operation is a strict update of actual fields only.","description":"Update an existing customer profile (ai_shop_customer_profiles) by its id. Only schema fields—customer_id, name, preferences, dob, gender, locale, shipping_addresses, created_at, updated_at—are updatable. There are no non-schema fields. This operation will error if the record does not exist. All referential and field-level constraints are respected.","summary":"Update customer profile (ai_shop_customer_profiles) by ID.","parameters":[{"name":"id","description":"ID of the customer profile to update (ai_shop_customer_profiles.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update information for the customer profile, fields strictly matching the schema.","typeName":"IAiShopCustomerProfiles.IUpdate"},"responseBody":{"description":"The updated customer profile object, schema fields only.","typeName":"IAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles/{id}","method":"put"},{"specification":"Delete customer profile (ai_shop_customer_profiles) by ID. This is a hard delete; soft delete is not supported since there is no deleted_at field in the schema.","description":"This operation deletes a customer profile with the given id from the ai_shop_customer_profiles table. Since there is no soft delete (e.g., deleted_at) field, this record is removed permanently. This operation should be restricted per business rules as deletion cannot be undone. Upon success, the record is removed immediately and cannot be recovered via this table.","summary":"Delete customer profile (ai_shop_customer_profiles) by ID (hard delete, no soft delete).","parameters":[{"name":"id","description":"ID of the customer profile to delete (ai_shop_customer_profiles.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/customerProfiles/{id}","method":"delete"}],"completed":204,"total":275,"step":0,"created_at":"2025-07-23T07:07:09.034Z"},"tokenUsage":{"facade":{"aggregate":{"total":1078834,"input":{"total":1014829,"cached":0},"output":{"total":64005,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1078834,"input":{"total":1014829,"cached":0},"output":{"total":64005,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1078834,"input":{"total":1014829,"cached":0},"output":{"total":64005,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1078834,"input":{"total":1014829,"cached":0},"output":{"total":64005,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Retrieve a single mileage record by its unique identifier from the ai_shop_mileages table. Returns all atomic fields: id, ai_shop_customer_id, ai_shop_order_id, type, amount, description, created_at. Every field mentioned is present in the Prisma schema and is strictly adhered to. The operation allows any authorized actor to fetch a detailed, audit-compliant representation of the customer’s individual mileage transaction for compliance, analytics, or application display. Deleted_at or similar soft-delete handling does not exist for this entity, so all reads target existing rows with no mention of such logic.","description":"This GET operation fetches a single mileage entry from the ai_shop_mileages table using the provided ID path parameter. The returned resource strictly contains only the atomic, normalized data columns from the Prisma schema: unique identifier (id), associated customer (ai_shop_customer_id), potentially linked order (ai_shop_order_id), transaction type (type), amount (integer), optional description, and timestamp of record creation (created_at). This endpoint enables audit-compliant retrieval for financial record-keeping and customer loyalty analytics. As there are no fields like deleted_at, the operation targets only present rows and never references soft-deleted logic or user fields not defined in the schema. Errors are generated for invalid or missing mileage IDs. Related API operations: PATCH for listing, POST for creation, PUT for update, DELETE for removal.","summary":"Retrieve a single ai_shop_mileages record by ID (ai_shop_mileages table).","parameters":[{"name":"id","description":"Unique identifier of the mileage record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The target ai_shop_mileages record with all schema-defined fields.","typeName":"IAiShopMileage"},"authorizationRoles":null,"path":"/aiShop/mileages/{id}","method":"get"},{"specification":"Create a new row in the ai_shop_mileages table. Required fields are ai_shop_customer_id, type, amount, with optional ai_shop_order_id and description, as per strict schema definitions. All fields used in the operation exist in the schema and are required to meet normalization and compliance requirements. No unlisted columns (e.g., deleted_at, created_by) are referenced or used.","description":"This POST operation adds a new mileage record to the ai_shop_mileages table. It consumes a request body containing atomic, schema-defined fields: ai_shop_customer_id (required, UUID), optional ai_shop_order_id (UUID), type (required, defines transaction event), amount (required, integer, positive/negative for earning/spending), description (optional), and system-assigned created_at timestamp. Field validation ensures compliance with loyalty logic, analytics, and user auditability. The endpoint never references or uses fields that do not exist in schema, such as deleted_at or updated_by. Error handling includes missing or invalid input, or failed business logic checks. Related endpoints: PATCH (list), GET (single), PUT (update), DELETE (remove).","summary":"Create a new ai_shop_mileages record in the ai_shop_mileages table.","parameters":[],"requestBody":{"description":"Atomic, schema-compliant values for mileage creation.","typeName":"IAiShopMileage.ICreate"},"responseBody":{"description":"The newly created ai_shop_mileages record.","typeName":"IAiShopMileage"},"authorizationRoles":null,"path":"/aiShop/mileages","method":"post"},{"specification":"Update an existing ai_shop_mileages record by its primary key ID in the database. The only modifiable fields are those atomic fields present in the schema: ai_shop_customer_id, ai_shop_order_id, type, amount, description. No additional fields beyond what exists are ever updated or referenced. Soft-delete or additional audit logic is not present on this entity.","description":"This PUT operation updates a mileage entry in the ai_shop_mileages table, strictly allowing modifications only to those fields present in its schema: ai_shop_customer_id, ai_shop_order_id (optional), type, amount, description. Updates must supply all required values for the entity; partial updates and any reference to fields like deleted_at or created_by are prohibited, as those columns do not exist. The operation identifies the entry by ID and applies the new values for all non-read-only properties. Errors are returned for invalid ID, missing/invalid fields, or attempting to update immutable data. Audit trail columns such as created_at are not updated. Related endpoints: PATCH (list), GET (single), POST (create), DELETE (delete).","summary":"Update an existing ai_shop_mileages record by ID (ai_shop_mileages table).","parameters":[{"name":"id","description":"Unique identifier of the mileage record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full object of fields for mileage record update; only fields defined in the schema are accepted.","typeName":"IAiShopMileage.IUpdate"},"responseBody":{"description":"The updated ai_shop_mileages record.","typeName":"IAiShopMileage"},"authorizationRoles":null,"path":"/aiShop/mileages/{id}","method":"put"},{"specification":"Delete an ai_shop_mileages record by its primary key ID from the database. The ai_shop_mileages table does NOT include a deleted_at or other soft delete column, so this operation performs a hard delete (permanent removal). No attempt is made to update or check for any soft delete logic, as none exists in schema.","description":"This DELETE operation irreversibly removes a mileage record from the ai_shop_mileages table based on its unique ID. Since the schema does NOT contain a deleted_at or similar column, the deletion is hard and permanently removes the row. There is no mechanism for restoration or soft-deletion: once deleted, the record cannot be recovered through the API. The operation returns a success indicator or error if the ID is not found. No field outside the schema is referenced; fields like created_by or is_deleted are never used. Related: PATCH (list), GET (single), POST (create), PUT (update).","summary":"Permanently delete an ai_shop_mileages record (hard delete, as no soft delete present).","parameters":[{"name":"id","description":"Unique identifier of the mileage record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of deletion (usually null or success code).","typeName":"IVoid"},"authorizationRoles":null,"path":"/aiShop/mileages/{id}","method":"delete"},{"specification":"List donation coupon records with filtering, searching, and pagination in the ai_shop_donation_coupons table. Only schema-defined fields (id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, amount_donated, donation_type, created_at) are used for filtering or output. There is no support for soft delete as no deleted_at or similar column is present in this entity.","description":"This PATCH operation queries the ai_shop_donation_coupons table for a filtered, paginated list of donation coupon records. Search filters can be applied to any atomic field from the schema (coupon, customer, order, donation_type, creation time, etc.). Returned items only include explicitly defined schema columns. Output supports pagination metadata as per standard conventions. No fields such as deleted_at are present or referenced; hard deletes only apply. Related endpoints: GET (single), POST (create), PUT (update), DELETE (remove).","summary":"List/filter/paginate ai_shop_donation_coupons records (from ai_shop_donation_coupons table).","parameters":[],"requestBody":{"description":"Filtering, pagination, and search parameters for donation coupons list.","typeName":"IAiShopDonationCoupon.IRequest"},"responseBody":{"description":"Paginated list of donation coupons, with only schema fields included.","typeName":"IPageAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons","method":"patch"},{"specification":"Retrieve a single donation coupon record by its unique identifier from the ai_shop_donation_coupons table. Returns all atomic schema fields: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, amount_donated, donation_type, created_at. No extra fields are referenced. No soft delete or audit logic outside schema.","description":"This GET operation fetches a single donation coupon record by ID. Output strictly includes fields present in the Prisma schema: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, amount_donated, donation_type, created_at. No fields such as deleted_at are referenced or used in this endpoint. The record is returned if it exists with the specified ID; errors are returned otherwise. Related: PATCH (list), POST (create), PUT (update), DELETE (remove).","summary":"Fetch a single ai_shop_donation_coupons record by ID (ai_shop_donation_coupons table).","parameters":[{"name":"id","description":"Unique identifier of donation coupon to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The donation coupon record (all schema fields).","typeName":"IAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons/{id}","method":"get"},{"specification":"Create a donation coupon record in ai_shop_donation_coupons with atomic schema fields: ai_shop_coupon_id, ai_shop_customer_id, optional ai_shop_order_id, amount_donated, donation_type. No fields outside schema are referenced. No soft-delete or extra audit field handling.","description":"This POST operation inserts a new record into ai_shop_donation_coupons table. Request body must include all required and optional fields defined in the schema: ai_shop_coupon_id, ai_shop_customer_id, possibly ai_shop_order_id, amount_donated, and donation_type. No reference to deleted_at or created_by, as those do not exist. System populates created_at automatically. Field validation is strictly schema-based. Related: PATCH (list), GET (single), PUT (update), DELETE (remove).","summary":"Create a new ai_shop_donation_coupons record (ai_shop_donation_coupons table).","parameters":[],"requestBody":{"description":"All required and optional fields for donation coupon creation (per schema).","typeName":"IAiShopDonationCoupon.ICreate"},"responseBody":{"description":"The created donation coupon resource.","typeName":"IAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons","method":"post"},{"specification":"Update an existing ai_shop_donation_coupons record by ID. The only modifiable fields are those present in the schema: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id (optional), amount_donated, donation_type. No non-schema columns are referenced, and no soft-delete restoration logic is present.","description":"This PUT operation updates a donation coupon entry in the database (ai_shop_donation_coupons table) using its unique ID. All modifiable and required fields are from the schema: ai_shop_coupon_id, ai_shop_customer_id, optional ai_shop_order_id, amount_donated, donation_type. All fields must be assigned values as per schema normalization. Restoration or update of a deleted_at or similar field is not performed, as the column does not exist. Errors are returned for invalid ID, missing or invalid body fields, or partial updates.","summary":"Update a donation coupon record (ai_shop_donation_coupons table) by ID.","parameters":[{"name":"id","description":"The unique identifier of the donation coupon record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full set of fields to update this donation coupon (all schema fields)","typeName":"IAiShopDonationCoupon.IUpdate"},"responseBody":{"description":"The updated donation coupon resource.","typeName":"IAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons/{id}","method":"put"},{"specification":"Delete a donation coupon record by its unique ID (ai_shop_donation_coupons table). The table does NOT include deleted_at or any other soft delete logic, so deletion is always permanent. No deleted_at, restored, or similar fields are updated during the operation.","description":"This DELETE endpoint permanently removes a donation coupon row from the ai_shop_donation_coupons table using its unique ID as the path variable. Because the table lacks a deleted_at column, this is a hard delete (permanent, non-reversible). The endpoint never references or updates any non-schema column such as deleted_at. Success or error is returned based purely on existence of the record with the specified ID.","summary":"Permanently delete a donation coupon record (hard delete; ai_shop_donation_coupons table).","parameters":[{"name":"id","description":"The unique identifier of the donation coupon record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of deletion (typically null or status only).","typeName":"IVoid"},"authorizationRoles":null,"path":"/aiShop/donationCoupons/{id}","method":"delete"},{"specification":"List/filter/search ai_shop_inquiries records, providing pagination and query on all atomic fields included in schema: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at. Only existing columns in schema are referenced. The operation does not cover retrieval of replies or moderation actions, which are covered in related endpoints.","description":"This PATCH operation provides a paginated, filterable listing of ai_shop_inquiries entries, returning only the schema-defined atomic fields: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at. Search, filtering, and sorting can be applied to any present column. Output pagination follows platform conventions. Related data such as replies, moderation actions, or customer details are not included in the response; only the atomic inquiry records. No fields outside the schema (e.g., deleted_at, created_by, etc.) are referenced. Error handling includes bad queries or search patterns. Associated endpoints: GET (single), POST (create), PUT (update), DELETE (delete).","summary":"Search and paginate ai_shop_inquiries entries (from ai_shop_inquiries table).","parameters":[],"requestBody":{"description":"Filtering, sorting, and paging parameters based strictly on schema fields.","typeName":"IAiShopInquiry.IRequest"},"responseBody":{"description":"Paginated list of inquiries with only schema-defined fields.","typeName":"IPageAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries","method":"patch"},{"specification":"Fetch a single inquiry by its unique identifier from the ai_shop_inquiries table. The record contains only fields present in the schema: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at. No other fields are returned or referenced.","description":"This GET endpoint retrieves a single inquiry entry from the ai_shop_inquiries table using the specified ID as a path parameter. The response strictly adheres to schema: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at are included. No outside columns or soft-delete logic are referenced, since deleted_at and related fields are not defined. This operation is concerned solely with the direct inquiry record; related entities such as replies or moderation events are not returned.","summary":"Retrieve a single ai_shop_inquiries entry by ID (ai_shop_inquiries table).","parameters":[{"name":"id","description":"Unique ID of the inquiry record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested ai_shop_inquiries record (schema fields only).","typeName":"IAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries/{id}","method":"get"},{"specification":"Insert a new inquiry record into ai_shop_inquiries, consuming only atomic schema fields: ai_shop_customer_id (required), ai_shop_product_id (optional), title, body, status. No other fields are referenced or created. The created_at and updated_at columns are automatically handled by the system/database.","description":"This POST endpoint inserts a new row into ai_shop_inquiries table. The request body must supply all required schema fields: ai_shop_customer_id (customer writing the inquiry), ai_shop_product_id (optional association), title (subject), body (content), and status (set at creation; e.g., 'open', 'answered', etc.). Only explicit schema fields are permitted; deleted_at, created_by, or other non-schema fields are never referenced or used. Timestamp fields are managed by the backend/database automatically. Related endpoints: PATCH (list/filter), GET (single), PUT (update), DELETE (remove).","summary":"Create a new ai_shop_inquiries row in the ai_shop_inquiries table.","parameters":[],"requestBody":{"description":"Schema-based request body for creating a new inquiry record.","typeName":"IAiShopInquiry.ICreate"},"responseBody":{"description":"The created inquiry resource.","typeName":"IAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries","method":"post"}],"completed":216,"total":275,"step":0,"created_at":"2025-07-23T07:07:14.955Z"},"tokenUsage":{"facade":{"aggregate":{"total":1139013,"input":{"total":1071378,"cached":0},"output":{"total":67635,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1139013,"input":{"total":1071378,"cached":0},"output":{"total":67635,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1139013,"input":{"total":1071378,"cached":0},"output":{"total":67635,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1139013,"input":{"total":1071378,"cached":0},"output":{"total":67635,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Updates an existing inquiry specified by ID. Referenced model: ai_shop_inquiries from the Prisma schema. This operation replaces atomic fields of the inquiry, all of which are actually present in the schema. Specifically, the operation allows updating fields like title, body, status, and the referenced ai_shop_product_id if permitted in business logic. It NEVER assumes existence of deleted_at or audit-tracking fields beyond those present. This endpoint is used for workflows such as correcting inquiry details, changing the status (e.g., from open to answered or closed), or updating reference to a product. Required permission and input validation must check incoming fields against those actually defined in ai_shop_inquiries schema.","description":"This operation allows an authorized user to update an existing inquiry identified by its unique ID. Only those properties that are defined in the ai_shop_inquiries table can be updated (title, body, status, ai_shop_product_id). Attempting to update properties that do not exist, such as deleted_at or non-defined audit fields, will result in a validation failure. The updated fields will overwrite the current values in the inquiry record. Any attempts to alter ID or immutable audit fields (created_at) should be rejected by system validation. Use this endpoint when a customer or authorized actor (such as an admin) must correct the inquiry details for compliance, business clarification, or workflow updates.","summary":"Updates a single inquiry in ai_shop_inquiries (PUT by ID).","parameters":[{"name":"id","description":"The unique ID of the inquiry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inquiry object containing only schema-defined fields that can be updated in ai_shop_inquiries (title, body, status, ai_shop_product_id)","typeName":"IAiShopInquiry.IUpdate"},"responseBody":{"description":"The updated inquiry object defined by ai_shop_inquiries schema","typeName":"IAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries/{id}","method":"put"},{"specification":"Deletes an inquiry by the given ID, following behavior strictly as defined by the ai_shop_inquiries schema. There is NO field like 'deleted_at' present, so this endpoint performs a HARD DELETE – the inquiry will be permanently removed from the database, without soft delete behavior. This endpoint is used to purge records that must be erased for regulatory or business purposes. Hard delete operations are irreversible, and system validation must confirm record existence before deletion.","description":"This operation deletes the inquiry record with the provided ID. Since the ai_shop_inquiries table does not have any soft delete field (e.g., deleted_at), the deletion is permanent and irreversible. No record of the deleted inquiry is retained in this table. The operation is only allowed to authorized actors with deletion rights to ensure compliance and prevent accidental loss of data.","summary":"Deletes a single inquiry in ai_shop_inquiries (HARD DELETE).","parameters":[{"name":"id","description":"The unique ID of the inquiry to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/inquiries/{id}","method":"delete"},{"specification":"Retrieves a list of inquiry replies with search/pagination or filtering logic. Referenced model: ai_shop_inquiry_replies in the Prisma schema. The endpoint supports business needs for filtering replies (e.g., by inquiry, by author, or by creation date) depending on the request body structure. Returned data only includes real schema fields. Useful for dashboards, threaded conversation views, or moderation interfaces. Pagination and search/sort fields must adhere to the schema-defined field names.","description":"Fetch a list of inquiry replies based on search, filter, or pagination parameters. All returned properties correspond directly to the ai_shop_inquiry_replies model – there are no non-existent or denormalized fields included in output. Only filter on fields that are defined in the actual schema, such as ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, and created_at. No 'deleted_at' or similar fields exist. Use for displaying response threads, powering moderation queues, or implementing conversational UIs.","summary":"List/search of inquiry replies in ai_shop_inquiry_replies (PATCH with filters/pagination).","parameters":[],"requestBody":{"description":"Request body for searching and paginating inquiry replies, filtering strictly on actual ai_shop_inquiry_replies schema fields","typeName":"IAiShopInquiryReply.IRequest"},"responseBody":{"description":"Page response of ai_shop_inquiry_replies (paginated list with schema-compliant fields only)","typeName":"IPageIAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies","method":"patch"},{"specification":"Retrieves a single inquiry reply by its ID, referencing the actual ai_shop_inquiry_replies Prisma table. The reply includes only fields present in this model (body, ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, created_at). Excludes any audit or deletion fields not actual in the Prisma schema. Use this operation to display detailed content for a conversation reply, for support, moderation, or threaded discussion UIs.","description":"Fetch a single inquiry reply record from the ai_shop_inquiry_replies table using its unique ID. All fields in the response (body, ai_shop_inquiry_id, etc.) exactly match those present in the schema. No phantom or derived fields will appear; only atomic and normalized data is returned, as per schema design. This endpoint is used in moderation tools, threaded UI viewers, or for detailed review workflows.","summary":"Get detail of a single inquiry reply (ai_shop_inquiry_replies GET by ID).","parameters":[{"name":"id","description":"Unique ID of the inquiry reply","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The inquiry reply object as stored in the ai_shop_inquiry_replies table","typeName":"IAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies/{id}","method":"get"},{"specification":"Creates a new inquiry reply. Relies entirely on the fields defined in the ai_shop_inquiry_replies Prisma schema: ai_shop_inquiry_id (required), ai_shop_seller_id or ai_shop_admin_id (depending on role), body, parent_id (for threading). No fields outside of the actual schema may be posted or set. This is used by sellers & admins responding to customer inquiries, including threaded replies. System validation must ensure all required schema fields are present and that foreign key relationships are valid on creation.","description":"Create a new reply to an inquiry, setting only the properties present in the ai_shop_inquiry_replies schema: target inquiry (ai_shop_inquiry_id), reply author (ai_shop_seller_id or ai_shop_admin_id depending on actor), body (text reply), and optional parent_id if creating a threaded/nested reply. Any attempt to set fields not present in the schema will be rejected. System must enforce foreign key constraints and require all non-nullable fields for a reply to be created.","summary":"Create new inquiry reply (ai_shop_inquiry_replies POST).","parameters":[],"requestBody":{"description":"Inquiry reply creation body, containing only fields from ai_shop_inquiry_replies schema (ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body)","typeName":"IAiShopInquiryReply.ICreate"},"responseBody":{"description":"Created inquiry reply object, as stored in ai_shop_inquiry_replies table","typeName":"IAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies","method":"post"},{"specification":"Updates an existing inquiry reply specified by ID. References ai_shop_inquiry_replies model. Permits updates to body, parent_id, ai_shop_seller_id, ai_shop_admin_id, never anything outside the schema. Attempting to update fields not present (deleted_at, etc.) will fail. Used to correct reply content or adjust relationships (e.g., reparent a reply).","description":"Update an inquiry reply with given ID, providing as request body only those fields which are permitted by the ai_shop_inquiry_replies schema. Includes fields like ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, and body. No ability to update created_at or any non-existent audit field. Used for content correction, author change (by admin), or thread structure management. System validation enforces constraints.","summary":"Update single inquiry reply (ai_shop_inquiry_replies PUT by ID).","parameters":[{"name":"id","description":"ID of the inquiry reply to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request body for updating the inquiry reply; only ai_shop_inquiry_replies schema fields accepted","typeName":"IAiShopInquiryReply.IUpdate"},"responseBody":{"description":"The updated reply object, schema-compliant fields only","typeName":"IAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies/{id}","method":"put"},{"specification":"Deletes an inquiry reply by ID. Table ai_shop_inquiry_replies has NO soft delete (deleted_at, is_deleted) field. Thus, this performs a HARD DELETE, permanently removing the record. This operation is irreversible. All deletion rights and access validation must be enforced by system per business rules. Only available to authorized actors (e.g., admin, owner).","description":"Permanently removes the inquiry reply record with the given ID from ai_shop_inquiry_replies. There is no soft delete mechanism in this schema; data is erased from the table. Used for compliance, moderation, or post-incident cleanup. The operation must check for record existence before performing the removal and must verify delete permissions. No fields are left in the database; this action cannot be reversed.","summary":"Delete single inquiry reply (ai_shop_inquiry_replies HARD DELETE by ID).","parameters":[{"name":"id","description":"ID of the reply to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/inquiryReplies/{id}","method":"delete"},{"specification":"Returns a paginated list of reviews, supporting filtering/sorting solely on fields defined in ai_shop_reviews from the Prisma schema. Allows searching on attributes such as ai_shop_customer_id, ai_shop_product_id, rating, status, body, created_at. Used for browse, moderation, dashboards. All fields mentioned or returned are actually present in the review table.","description":"Retrieves review records using filters/pagination that match ai_shop_reviews actual columns. Filters may include customer ID, product ID, status, or search on body text/rating/created_at within the boundary of schema. Only uses fields that physically exist in the table. Used for review management UIs, analytics, or moderation workflows. Does not assume any non-existent audit or deletion fields. Returned reviews contain only valid, atomic fields of the review object.","summary":"Fetch a list of reviews from ai_shop_reviews (PATCH with search/pagination).","parameters":[],"requestBody":{"description":"Search/pagination fields for review list; must match ai_shop_reviews schema field names (customer_id, product_id, body, status, rating, created_at, etc.)","typeName":"IAiShopReview.IRequest"},"responseBody":{"description":"Paginated results containing valid review objects only","typeName":"IPageIAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews","method":"patch"},{"specification":"Retrieves a single review record by its unique ID. All returned properties are present in ai_shop_reviews Prisma schema (body, ai_shop_customer_id, ai_shop_product_id, rating, status, created_at, updated_at). This endpoint is used for detailed review readout, in workflows such as product feedback, moderation, or analytics. No phantom or soft delete logic exists or is referenced.","description":"Get a single review by ID, returning only schema fields as described in ai_shop_reviews. No assumption of soft-deletion, extended audit, or joined data. All information provided directly reflects atomic record data. Used by customer dashboards, moderation, or seller product analytics detail views.","summary":"Get single review detail (ai_shop_reviews GET by ID).","parameters":[{"name":"id","description":"Unique identifier for a review","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The review record as stored in ai_shop_reviews, with only schema-defined properties","typeName":"IAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews/{id}","method":"get"},{"specification":"Creates a new review in the ai_shop_reviews table. Accepts only defined fields from the schema: ai_shop_customer_id, ai_shop_product_id, body, rating, status, and created_at (system-generated). Used by customers providing product feedback. Input validation will reject any non-schema fields. Business and foreign key constraints must be enforced at creation time for referential integrity.","description":"Creates a new product review, accepting only schema-defined fields (required: ai_shop_customer_id, ai_shop_product_id, body, rating, status). User must not provide audit, deleted, or joined fields. Record is inserted atomically and cannot initially be soft-deleted or altered outside mutable fields. Input validation ensures that required keys are supplied and valid.","summary":"Create new review (ai_shop_reviews POST).","parameters":[],"requestBody":{"description":"Review creation body, limited strictly to ai_shop_reviews schema-defined properties: ai_shop_customer_id, ai_shop_product_id, body, rating, status","typeName":"IAiShopReview.ICreate"},"responseBody":{"description":"Review as inserted into ai_shop_reviews; all data is from actual schema columns","typeName":"IAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews","method":"post"},{"specification":"Updates an existing review identified by ID. All updates are limited strictly to the fields present in ai_shop_reviews: body, rating, status, ai_shop_customer_id, ai_shop_product_id (if business logic allows). No non-existent properties, deletion fields, or hidden columns are ever referenced. Used for correcting review details, handling moderation workflow, or correcting user input mistakes. Input strictly filtered to allow only updates of real, allowed fields.","description":"Updates a single review using provided body and allowed fields, ensuring no non-existent fields are referenced. Operations on ID and audit fields are prohibited. Used for updating review text, rating, or status after moderation or user correction. Cannot set soft/hard deleted state—record remains present until actively deleted with the delete endpoint.","summary":"Update review (ai_shop_reviews PUT by ID).","parameters":[{"name":"id","description":"Unique identifier for the review to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Object with updatable review fields that exist in ai_shop_reviews schema (body, rating, status, ai_shop_customer_id, ai_shop_product_id)","typeName":"IAiShopReview.IUpdate"},"responseBody":{"description":"Fully updated review object, all properties as in ai_shop_reviews table","typeName":"IAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews/{id}","method":"put"},{"specification":"Deletes a review identified by ID. The ai_shop_reviews table DOES NOT have a deleted_at or soft delete column. This operation is a HARD DELETE; the review record is physically removed from the table. No soft delete or hidden retention behaviors will be triggered. This is irreversible and must be limited to authorized actors.","description":"Permanently and irreversibly deletes a review record in ai_shop_reviews by ID. Since no soft delete field exists, there is no record left behind after a successful call. Used for moderation, user request deletion, or for compliance reasons. System must verify record existence and ensure the operation is permitted to prevent data loss from unauthorized use.","summary":"Delete review (ai_shop_reviews HARD DELETE by ID).","parameters":[{"name":"id","description":"Unique ID of the review to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/reviews/{id}","method":"delete"}],"completed":228,"total":275,"step":0,"created_at":"2025-07-23T07:07:15.715Z"},"tokenUsage":{"facade":{"aggregate":{"total":1198990,"input":{"total":1127925,"cached":0},"output":{"total":71065,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1198990,"input":{"total":1127925,"cached":0},"output":{"total":71065,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1198990,"input":{"total":1127925,"cached":0},"output":{"total":71065,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1198990,"input":{"total":1127925,"cached":0},"output":{"total":71065,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Delete ai_shop_files entity by ID. This operation allows for the removal of a file record from the file management table, which stores metadata and URIs for uploaded files. The operation performs a hard (permanent) delete because the ai_shop_files table does NOT have a soft delete (e.g., deleted_at) field. All fields referenced (id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at) are present in the actual Prisma schema. Ensure referential integrity is maintained and handle any constraint errors if this file is referenced elsewhere.","description":"Permanently removes a file record from the ai_shop_files table. This endpoint is used to delete the file's metadata and storage URI, making the file inaccessible via the AI Shop platform. The operation does a hard delete, since no soft-delete field exists; thus, the data is physically removed from the database. If other objects refer to this file, deletion may fail due to foreign key constraints. Proper error messages are provided for non-existent records or violated relationships. All behavior and field references align strictly with the actual schema definition. This operation is NOT reversible, and administrators should verify before execution.","summary":"Hard delete a file record from ai_shop_files (no soft delete field present).","parameters":[{"name":"id","description":"Unique identifier of the file record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"delete"},{"specification":"Patch (search and list) ai_shop_audit_logs entries. This endpoint enables filtered, paginated, or sorted retrieval of audit log records, according to their actual database fields as defined in the Prisma schema. Filter and pagination parameters may include event_id, event_type, actor_id, actor_role, target_table, created_at, and others. The operation does NOT modify records, only retrieves a filtered list.","description":"Fetches a filtered, paginated list of audit log records from the ai_shop_audit_logs table. Parameters for filtering (such as event_id, event_type, actor_id, etc.) can be sent in the request body for flexible search and listing. Response provides structured audit log objects, each representing a compliance, trace, or user/admin action log. This operation is strictly read-only (PATCH for complex queries), based solely on the schema-defined columns: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at, etc. All logic, filters, and output fields must correspond to real table columns only.","summary":"List/query ai_shop_audit_logs with filtering and pagination (strictly based on schema).","parameters":[],"requestBody":{"description":"Filter, pagination, or search criteria for listing audit logs. Must reference only schema fields.","typeName":"IAiShopAuditLogs.IRequest"},"responseBody":{"description":"Paginated or filtered list of ai_shop_audit_logs entries, with only schema-defined fields in each object.","typeName":"IPageIAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs","method":"patch"},{"specification":"Retrieve a single audit log record by its unique ID. This endpoint reads a specific row in ai_shop_audit_logs, exposing all its schema-defined columns (id, event_id, event_type, etc.) for further inspection, auditing, or dispute investigation. All fields referenced are verified as present in the actual schema.","description":"Fetches an individual ai_shop_audit_logs record by its unique identifier. Response includes all columns as defined by the schema: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. This operation is for detailed view, traceability, and compliance use cases. The record is only returned if the ID exists; else, an error describing not-found is returned. No modifications to the data are made by this endpoint.","summary":"Retrieve a single ai_shop_audit_logs record by ID (read-only).","parameters":[{"name":"id","description":"Unique identifier of the audit log record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Audit log record object, reflecting all schema-defined fields.","typeName":"IAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs/{id}","method":"get"},{"specification":"Create a new audit log entry in ai_shop_audit_logs table. Operation records a fresh compliance or business event as described by actual schema fields. Only accepts fields actually present in the Prisma schema, such as event_id, event_type, actor_id, actor_role, target_table, etc. The operation provides error handling for unique constraint violations and missing required fields.","description":"Creates a new log entry in the ai_shop_audit_logs table, capturing all relevant audit details according to schema. Accepts only the following fields: event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. Any unique index violations (e.g., event_id) yield appropriate errors. Standard compliance and audit requirements are enforced by this operation, as all fields in the request align with real schema column definitions. No omitted or assumed fields are referenced.","summary":"Create an audit log entry in ai_shop_audit_logs (using schema fields only).","parameters":[],"requestBody":{"description":"Audit log data (schema-defined fields only) for new entry.","typeName":"IAiShopAuditLogs.ICreate"},"responseBody":{"description":"Newly created audit log object with all schema fields.","typeName":"IAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs","method":"post"},{"specification":"Update (replace) an existing audit log entry by ID. This operation updates all fields in the ai_shop_audit_logs record, referenced directly from the actual Prisma schema (no invented/implicit columns). All updated data is validated against real schema constraints such as unique event_id and data type/length for each property.","description":"Updates (fully replaces) a single ai_shop_audit_logs row based on the provided ID, using ONLY schema-defined properties: event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. Validates for unique indexes/constraints and returns an error on conflict. The new data must strictly comply with the db schema. No other columns or soft-delete semantics are assumed. On success, returns the entire updated log entry object. Inputs and outputs use only schema-exact properties.","summary":"Update all fields of an audit log record by ID (replace, schema-verified only).","parameters":[{"name":"id","description":"Unique identifier of the audit log record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Complete updated audit log data (all schema-defined fields).","typeName":"IAiShopAuditLogs.IUpdate"},"responseBody":{"description":"The updated audit log object.","typeName":"IAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs/{id}","method":"put"},{"specification":"Delete audit log record from ai_shop_audit_logs by ID. This operation removes a single compliance/audit row from the database. No soft-delete fields are present in the Prisma schema, so this endpoint must perform a hard delete (permanent removal). Only columns referenced in the actual schema are involved. Errors returned on FK violations or not found.","description":"Permanently deletes an audit log entry by its ID from ai_shop_audit_logs table. Since the schema lacks a soft delete field, the record is fully removed from storage. Attempts to delete non-existing or linked entries (due to FK constraints elsewhere) will yield error responses. This operation references only schema-defined columns: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. The deletion is irreversible.","summary":"Hard delete a single audit log record by ID (no soft delete field present).","parameters":[{"name":"id","description":"Unique identifier of the audit log record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/auditLogs/{id}","method":"delete"},{"specification":"Fetch list of customer records with filter/pagination/search. Uses PATCH method and a request body for complex queries, strictly limited to existing fields per Prisma schema (e.g., id, email, phone, status, created_at, updated_at) in ai_shop_customers. Does NOT alter or modify records. Only columns present in the schema are to be manipulated or returned.","description":"Queries ai_shop_customers table for customer records matching filter criteria, pagination, or search constraints, sent in the request body. Permissible filter fields include id, email, phone, status, created_at, updated_at, following the actual schema. Returns a paginated list of customers, each object strictly containing properties from the table definition. No write or update function occurs in this operation; it is purely for complex list retrieval based on schema-defined criteria.","summary":"List/query ai_shop_customers with filter/pagination (PATCH, schema columns only).","parameters":[],"requestBody":{"description":"Filter, pagination, or advanced search parameters, only referencing schema fields.","typeName":"IAiShopCustomers.IRequest"},"responseBody":{"description":"Paginated or filtered customer object array (only schema-defined fields).","typeName":"IPageIAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers","method":"patch"},{"specification":"Retrieve a single customer record from ai_shop_customers by ID. This endpoint fetches a customer row, exposing only real fields per the schema (id, email, phone, status, created_at, updated_at). Returns all information as stored in the db; if not found, communicates error. No implicit fields referenced.","description":"Fetches a customer record from ai_shop_customers by unique ID. Only the schema-defined columns (id, email, phone, status, created_at, updated_at) are returned in the response. Used for profile viewing, compliance, or reference audit. If the target record does not exist, returns a not-found error. This operation does not manipulate any data, only retrieves one row exactly as recorded in the database.","summary":"Retrieve a single ai_shop_customers record by its ID (all columns in schema only).","parameters":[{"name":"id","description":"Unique ID of the customer record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Customer object from ai_shop_customers, as per schema fields only.","typeName":"IAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers/{id}","method":"get"},{"specification":"Create a new customer record in ai_shop_customers. The operation receives required core customer data (email, status, and optional phone, created_at, updated_at) based exclusively on the actual db schema. Returns the full new record, with all fields as defined in schema. Validation errors are returned if inputs violate db constraints.","description":"Creates a new row in the ai_shop_customers table, storing a new user or customer account. Accepts and validates only schema-defined fields: email, phone, status, created_at, updated_at. Does not use or assume any implicit columns. Returns the complete created object, including computed or default primary key, as stored in db. Unique constraint on email is enforced; duplicate values cause an error.","summary":"Create and return a new ai_shop_customers record (using only schema field definitions).","parameters":[],"requestBody":{"description":"New customer object data; must map to schema.","typeName":"IAiShopCustomers.ICreate"},"responseBody":{"description":"Created ai_shop_customers object (full schema fields).","typeName":"IAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers","method":"post"},{"specification":"Update all fields in a customer record by ID. This endpoint fully replaces all main fields (email, phone, status, etc.) for the given ID, based ONLY on the Prisma schema definition. Does not reference any implicit/audit/soft-delete columns outside the schema. Returns the updated row, or error on not found or constraint violations.","description":"Performs a full update of an ai_shop_customers row for a specific ID, replacing all columns (email, phone, status, created_at, updated_at). Every updated field must be present in the payload as defined by the schema. Strictly rejects any extraneous columns. Returns the new object state as saved. This operation is critical for user management edits and must not use or assume fields not found in the actual db schema.","summary":"Replace all fields for a customer by ID (full-record update via schema fields only).","parameters":[{"name":"id","description":"Unique id of customer to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full customer object to use as replacement; all must be defined by schema.","typeName":"IAiShopCustomers.IUpdate"},"responseBody":{"description":"Returned customer, schema fields only.","typeName":"IAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers/{id}","method":"put"},{"specification":"Delete ai_shop_customers record by unique identifier. Because ai_shop_customers does NOT have a soft delete field in its schema, this operation will perform a hard (permanent) delete. References only id and other schema-present fields. Any FK constraints or not-found cases must return error messages. Irreversible action.","description":"Physically deletes (hard) a single row in ai_shop_customers by ID. No soft delete logic applies because there is NO deleted_at or is_deleted column in the schema. If the customer is referenced by other entities, FK errors may prevent deletion; otherwise, record is removed. All field references are strictly limited to those defined in the Prisma schema.","summary":"Permanently delete a customer record (hard delete, no soft delete supported).","parameters":[{"name":"id","description":"Unique ID of the customer to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/customers/{id}","method":"delete"},{"specification":"Query ai_shop_sellers (seller entities) for complex paginated/filter/search listings. Uses PATCH and request body for flexible query, only actual schema properties allowed (id, business_name, business_registration_number, status, approved_at, created_at, updated_at). This operation is strictly for data retrieval and does NOT perform record updates.","description":"Lists seller entries in ai_shop_sellers table, using complex filter/search/pagination logic provided in the request payload (body). Only database fields present in schema can be queried or returned, including id, business_name, business_registration_number, status, approved_at, created_at, and updated_at. No assumed/implicit/audit fields present. Returns paginated objects with schema-verified columns only, for seller management and reviews. No data modification is performed.","summary":"List/query sellers with flexible filter/pagination (PATCH; uses only schema fields).","parameters":[],"requestBody":{"description":"Optional filter/pagination/search settings, referencing only table columns.","typeName":"IAiShopSellers.IRequest"},"responseBody":{"description":"Paginated list of sellers using schema-only fields for each row.","typeName":"IPageIAiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers","method":"patch"}],"completed":240,"total":275,"step":0,"created_at":"2025-07-23T07:07:25.700Z"},"tokenUsage":{"facade":{"aggregate":{"total":1258807,"input":{"total":1184469,"cached":0},"output":{"total":74338,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1258807,"input":{"total":1184469,"cached":0},"output":{"total":74338,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1258807,"input":{"total":1184469,"cached":0},"output":{"total":74338,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1258807,"input":{"total":1184469,"cached":0},"output":{"total":74338,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Deletes a single inquiry favorite record specified by ID. This operation targets a unique favorite linkage between a customer and an inquiry, as stored in the ai_shop_favorites_inquiries table. The favorite entity consists of: id (PK), ai_shop_customer_id (FK), ai_shop_inquiry_id (FK), created_at (timestamp). There are no soft deletion fields (such as deleted_at), so this DELETE operation performs an immediate and permanent delete of the record from the database. This aligns with full removal of the favorite linkage between the user and the inquiry, making the inquiry no longer appear in the user's favorites. If the ID does not exist, a not-found error should be returned. There are no relationships that require cascading deletes for this operation. No additional fields are updated or set on delete; only physical deletion is performed.","description":"This endpoint permanently deletes a record in the ai_shop_favorites_inquiries table given its primary key ID. No soft delete or archival occurs, as there are no deleted_at or similar fields present; the row is irreversibly removed from the table. This endpoint is typically called when a user removes an inquiry from their favorites. Proper authentication and ownership enforcement must be applied to ensure users cannot delete favorites they do not own. Errors such as not-found, unauthorized, or forbidden should be handled appropriately. There are no cascading relationship effects for this record within this operation, as the favorite is an atomic link between customer and inquiry only. Related tables (customer, inquiry) are unaffected.","summary":"Permanently delete a favorite inquiry link from ai_shop_favorites_inquiries by ID (hard delete, no soft-delete).","parameters":[{"name":"id","description":"Primary key of the favorite inquiry link to be deleted (ai_shop_favorites_inquiries.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/favoritesInquiries/{id}","method":"delete"},{"specification":"Retrieves a paginated, filtered list of customer favorite addresses. This endpoint accesses ai_shop_favorites_addresses, which models the relationship between a customer and a favorited shipping/billing address. Columns: id (PK), ai_shop_customer_id (FK), ai_shop_profile_id (FK to customer profiles), created_at (timestamp). There are no additional metadata columns. Filtering and pagination are typically handled by customer ID, profile ID, and/or date. No soft-delete present; only current favorites are surfaced. The data returned consists of the atomic relationship and creation timestamp; the endpoint does NOT resolve or embed address/profile details itself.","description":"Retrieves a list (possibly paginated and/or filterable) of a user's favorited addresses as formalized in the ai_shop_favorites_addresses table. Each result consists of: the unique favorite row ID, the user/customer ID, the customer_profile ID (which links to the address data itself outside this entity), and the created_at timestamp. This API endpoint does not return address contents, only the mapping to customers and profiles. Authentication requires that the requesting user can only see their own favorites. Filtering is supported via customer_id, profile_id, or created_at ranges; results may be sorted as requested. No soft delete or hidden states exist—favorites are either present or not. Access control for address visibility is enforced at the business layer.","summary":"Get a filterable, paginated list of a user's favorited addresses from ai_shop_favorites_addresses.","parameters":[],"requestBody":{"description":"Parameters for searching, filtering, or paginating the favorites address list. Typical fields are customerId, profileId, date range, or pagination info.","typeName":"IAiShopFavoritesAddresses.IRequest"},"responseBody":{"description":"A paginated or filtered list of ai_shop_favorites_addresses objects. Each entry is a mapping between a user and a favorited shipping/billing address profile with a creation timestamp.","typeName":"IPageAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses","method":"patch"},{"specification":"Fetches a single favorite address record by its primary key from ai_shop_favorites_addresses. This table defines a direct mapping between a customer and an address/profile they have marked as favorite. Fields: id (PK), ai_shop_customer_id (FK), ai_shop_profile_id (FK to customer profile), created_at (timestamp). No soft-deletion or archival logic present; only current linkage exists. Used to verify if a specific address-profile combination is favorited, or to retrieve metadata about the favorite relationship (not the address details themselves). All output properties come directly from this schema. Address profile resolution, if needed, must use ai_shop_customer_profiles in a separate query.","description":"Retrieve a specific record from ai_shop_favorites_addresses by its unique ID. The returned object contains: id (the favorite link PK), ai_shop_customer_id (user), ai_shop_profile_id (references actual shipping/billing data in profiles), created_at (when this favorite was marked). This does NOT return or resolve detailed address or customer information itself, only the atomic linkage. The existence of this record allows applications to show if an address is currently favorited by a user. Access control must ensure that only the owner (customer) or authorized admin can view this mapping.","summary":"Get a single favorite address mapping from ai_shop_favorites_addresses by ID.","parameters":[{"name":"id","description":"Unique primary key for the favorite address entry (ai_shop_favorites_addresses.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested ai_shop_favorites_addresses record linking a customer and address profile.","typeName":"IAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses/{id}","method":"get"},{"specification":"Creates a new favorite address record for a user, linking them to a specific shipping/billing address profile. This operation inserts into ai_shop_favorites_addresses with required fields: ai_shop_customer_id (FK), ai_shop_profile_id (FK to ai_shop_customer_profiles), created_at (auto timestamp, or from request if auditable). No other fields present. Proper uniqueness/enforcement is required to prevent duplicate (customer_id, profile_id) combinations. No soft delete logic: all links are active. A successful creation returns the new favorite entry. Business logic must check existence of both customer and profile IDs, and only allow users to favorite their own addresses (enforced at API layer).","description":"Accepts a request to create a favorite address link (ai_shop_favorites_addresses) between a customer and a specific shipping/billing profile. Required input fields: ai_shop_customer_id (the favoriting user), ai_shop_profile_id (profile/address to be favorited). created_at is set at insert time. The endpoint enforces uniqueness so a user cannot favorite the same address/profile twice. No state/archival metadata present. Errors are returned for duplicate favorites or foreign key violations. Output is the newly created favorite relationship record. Does not modify or return underlying address data.","summary":"Create a new favorite address relationship in ai_shop_favorites_addresses for a customer and a profile.","parameters":[],"requestBody":{"description":"Favorite address creation parameters: customer ID, profile ID. No meta fields accepted; all values must correspond to fields in ai_shop_favorites_addresses.","typeName":"IAiShopFavoritesAddresses.ICreate"},"responseBody":{"description":"The new ai_shop_favorites_addresses record representing the link between customer and address profile.","typeName":"IAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses","method":"post"},{"specification":"Updates an existing favorite address link with new foreign keys, typically to reassign a favorite to a different profile (address update or correction). Operates on ai_shop_favorites_addresses where id matches the provided path parameter. Modifiable fields: ai_shop_customer_id, ai_shop_profile_id. created_at is not updated; no archive or soft-delete is present. Strict uniqueness and referential integrity enforced (cannot duplicate favorite pair). Must only allow user to update their own favorites. Returns the updated mapping record after success. Related address or profile data not impacted.","description":"Updates fields on a favorite address row in ai_shop_favorites_addresses by id. Updatable columns: ai_shop_customer_id (new owner) and/or ai_shop_profile_id (new profile/address favored). Cannot update created_at. Duplicate favorite records (same customer/profile pair) are forbidden by unique constraint. Must enforce ownership and referential integrity: updates allowed only by/for proper user and profile IDs. The endpoint does not cascade or impact underlying customer or profile records. Returns updated mapping. Soft delete is not available. Errors include not-found, unique violation, or forbidden.","summary":"Update a favorite address relationship in ai_shop_favorites_addresses by ID (customer/profile mapping edit).","parameters":[{"name":"id","description":"PK of the favorite address mapping to update (ai_shop_favorites_addresses.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for ai_shop_customer_id and/or ai_shop_profile_id to update the mapping. Only these fields are writable.","typeName":"IAiShopFavoritesAddresses.IUpdate"},"responseBody":{"description":"The updated ai_shop_favorites_addresses mapping object.","typeName":"IAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses/{id}","method":"put"},{"specification":"Deletes a single favorite address record from ai_shop_favorites_addresses, removing the mapping between the customer and the favorited address/profile. Table fields: id (PK), ai_shop_customer_id (FK), ai_shop_profile_id (FK), created_at (timestamp). There is no deleted_at or soft-delete support; the record is physically deleted from the database by this operation. This permanently erases the user's favorite mapping to a given address/profile and cannot be undone. Cascade effects to customer or profile data do not occur.","description":"Permanently deletes a favorite address relationship by primary key ID from ai_shop_favorites_addresses. As the schema has no soft delete or archival field, the row is removed completely. The operation is only permitted for the owning customer or authorized admin. If the provided ID does not exist, a not-found error is returned. This operation is idempotent: repeated calls with the same ID after deletion have no effect. No related records (customer, profile) are modified or deleted. Proper access and ownership checks enforced.","summary":"Permanently (hard) delete a favorite address record by ID from ai_shop_favorites_addresses.","parameters":[{"name":"id","description":"Primary key of the ai_shop_favorites_addresses record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/favoritesAddresses/{id}","method":"delete"},{"specification":"Fetches a paginated, filterable list of favorited notifications linked to a given user. This endpoint operates on ai_shop_favorites_notifications (fields: id (PK), ai_shop_customer_id (FK), ai_shop_notification_id (domain notification), created_at (timestamp)). No soft delete or state columns—exists if favorited. Used to display all notifications a user has bookmarked/saved. Output includes only the relationship metadata, not the notification content or push details. Filtering, sorting, and pagination parameters may include customer_id, notification_id, or created_at. Owner-only access enforced.","description":"Retrieves a list of records from ai_shop_favorites_notifications, representing notifications a user has favorited. Each row includes: id (unique favorite relationship), ai_shop_customer_id (user), ai_shop_notification_id (domain notification being favorited), created_at (addition timestamp). The endpoint restricts visibility to the owner. Only atomic relationship data is returned—actual notification content should be resolved externally. Pagination, filtering, and sorting supported by input fields. No soft-delete; the favorite exists or does not.","summary":"Get paginated/filtered list of favorited notifications for a user from ai_shop_favorites_notifications.","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for querying favorite notification entries.","typeName":"IAiShopFavoritesNotifications.IRequest"},"responseBody":{"description":"A pageable or filterable collection of ai_shop_favorites_notifications links between user and notification.","typeName":"IPageAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications","method":"patch"},{"specification":"Retrieves a favorite notification mapping by its unique ID from ai_shop_favorites_notifications. Table columns: id (PK), ai_shop_customer_id (FK), ai_shop_notification_id (arbitrary notification PK), created_at (timestamp). No archival or soft delete—mapping either exists or not. Used to show if a specific notification has been favorited by a given customer or to display favorite link creation date. The notification content itself is NOT returned. Typically, only the owning user or admin can access this record.","description":"Get a favorite notification entry from ai_shop_favorites_notifications by its primary key. Returned data contains: id (row PK), ai_shop_customer_id (user), ai_shop_notification_id (notification being favorited), created_at (timestamp of bookmarking). This endpoint does not resolve or expose notification details—only the favorite relationship metadata. Used for UI logic (e.g., highlight as favorited). Only the owner user or authorized admin is allowed access.","summary":"Retrieve a favorite notification mapping from ai_shop_favorites_notifications by ID, returning mapping metadata.","parameters":[{"name":"id","description":"PK of the favorite notification link (ai_shop_favorites_notifications.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_favorites_notifications record that maps between user and notification.","typeName":"IAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications/{id}","method":"get"},{"specification":"Creates a new favorite notification linkage between a customer and a notification they wish to bookmark/save. Inserts a row into ai_shop_favorites_notifications with the required columns: ai_shop_customer_id (FK), ai_shop_notification_id (PK of notification being favorited), created_at (insert timestamp, can be supplied or defaulted by DB). Table is strictly normalized; no extra or state/archival columns. Duplicates (by customer, notification) blocked by unique constraint. Output is the newly created link; no notification content returned. Proper authentication required.","description":"Accepts a create request to add a customer-notification favorite mapping in ai_shop_favorites_notifications. Input fields: ai_shop_customer_id (customer), ai_shop_notification_id (notification), created_at (if provided; otherwise current time). Output is the favorite relationship or error on duplicate, invalid reference, or unauthorized. No soft delete or additional metadata—atomic linkage. Only owner user or admin may create. No actual notification data returned.","summary":"Create a new favorite notification link between customer and notification in ai_shop_favorites_notifications.","parameters":[],"requestBody":{"description":"Input data to create a new ai_shop_favorites_notifications row (customer, notification IDs).","typeName":"IAiShopFavoritesNotifications.ICreate"},"responseBody":{"description":"Resulting ai_shop_favorites_notifications favorite link record for user and notification.","typeName":"IAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications","method":"post"},{"specification":"Updates an existing favorite notification record in ai_shop_favorites_notifications, identified by PK. Only ai_shop_customer_id and ai_shop_notification_id fields can be modified (no state/archival fields exist). No address or content resolution—pure mapping update. Uniqueness of (customer, notification) enforced. Ownership and authorization required, ensuring users can update only their own mappings. created_at remains unchanged. Returns updated object. No soft-delete exists; absence of record implies non-favorited notification.","description":"Updates ai_shop_favorites_notifications row with new customer and/or notification ID, based on the given PK. Only updatable columns: ai_shop_customer_id and ai_shop_notification_id. created_at timestamp is not writable. Must ensure unique constraint is not violated and only the owner may update. Endpoint returns the edited favorite mapping. No cascades or effects on notifications or users beyond updating this favorite link. Errors: not found, forbidden, unique violation.","summary":"Update a favorite notification relationship by ID in ai_shop_favorites_notifications (customer, notification mapping).","parameters":[{"name":"id","description":"PK value for the favorite notification mapping (ai_shop_favorites_notifications.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New mapping values (ai_shop_customer_id and/or ai_shop_notification_id).","typeName":"IAiShopFavoritesNotifications.IUpdate"},"responseBody":{"description":"The updated ai_shop_favorites_notifications favorite notification link record.","typeName":"IAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications/{id}","method":"put"},{"specification":"Permanently deletes a favorite notification mapping by unique ID from ai_shop_favorites_notifications. The schema includes: id (PK), ai_shop_customer_id (FK), ai_shop_notification_id (notification/entity PK), created_at (timestamp). No deleted_at or soft delete, so the delete is a hard removal. Only the explicit mapping row is affected. After deletion, the notification will not be marked as favorited for the user. No notification content or user record alteration occurs. Access and authorization must restrict operation to the owner or admin.","description":"Removes favorite notification mapping for a user and notification by row ID from ai_shop_favorites_notifications via hard delete. This is a physical removal, as soft delete or archived state does not exist in the schema. Only the owner may remove their own notification favorites, or an admin with suitable permissions. Related notification or customer records are not altered. Errors: not found, forbidden (unauthorized). No cascade operations.","summary":"Permanently delete a favorite notification mapping by ID from ai_shop_favorites_notifications (hard delete, no soft-delete).","parameters":[{"name":"id","description":"PK for the favorite notification mapping row to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/favoritesNotifications/{id}","method":"delete"}],"completed":251,"total":275,"step":0,"created_at":"2025-07-23T07:07:29.654Z"},"tokenUsage":{"facade":{"aggregate":{"total":1319150,"input":{"total":1241000,"cached":0},"output":{"total":78150,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1319150,"input":{"total":1241000,"cached":0},"output":{"total":78150,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1319150,"input":{"total":1241000,"cached":0},"output":{"total":78150,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1319150,"input":{"total":1241000,"cached":0},"output":{"total":78150,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Implements DELETE for a coupon assignment (ai_shop_coupon_assignments). Each assignment is a record of a coupon assigned to a user—it links to a user (ai_shop_customer_id), a coupon (ai_shop_coupon_id), and optionally an order (ai_shop_order_id). This operation removes the assignment, which is a hard delete because the table DOES NOT have any soft delete fields such as 'deleted_at' in the schema. Business impact: Once deleted, there is no record of this assignment remaining in the DB, so this should only be used for administrative reversals or error correction, not for 'soft deactivations' or marking as unused. All referenced fields MUST exist in the schema.","description":"This endpoint permanently deletes a coupon assignment record from the ai_shop_coupon_assignments table, identified by its unique ID. The table does NOT feature any kind of soft delete mechanism; there is no 'deleted_at', 'is_active', or equivalent flag column. Hard deletion is irreversible—once removed, the linkage between the customer, coupon, and order (if set) is fully deleted and unrecoverable. Administrators are responsible for maintaining any audit log externally, as the assignment will not exist for future reporting. This should be used strictly for administrative error resolution or irreversible business logic.\n\nThe primary key for the assignment is 'id', and all field references (ai_shop_customer_id, ai_shop_coupon_id, ai_shop_order_id) are verified as present in the schema. All validations and security restrictions should be implemented application side prior to actual data removal. The endpoint must enforce that ONLY existing records are deleted, and return an appropriate error if the record does not exist. Related business logic (handling coupon state, recalculating eligible uses) should be handled in service layer or via DB triggers for downstream effects.","summary":"Hard-deletes a coupon assignment from ai_shop_coupon_assignments by ID (no soft delete).","parameters":[{"name":"id","description":"Primary key (UUID) of the coupon assignment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/couponAssignments/{id}","method":"delete"},{"specification":"Implements PATCH for promotions (ai_shop_promotions) to support list/search of promotion campaign records. The ai_shop_promotions table contains campaigns/events for coupons with fields such as name, description, type, is_active, start_at, end_at. This endpoint accepts filtering/search criteria in the body and returns JSON with paginated list and search results. Only fields defined in the schema (e.g., name, type, is_active, start_at, end_at) can be used for filtering/sorting. No soft delete fields exist here, so only active records can be returned based on current implementation.","description":"This endpoint supports querying and searching the ai_shop_promotions table for bulk/paginated retrieval of promotion campaign records. It follows the functional requirement that campaign management needs filtering by name, type, active flag, and time window. There are NO soft delete fields on this model, so hard delete is the only supported method for removal of promotions.\n\nSearch parameters can include any direct fields from ai_shop_promotions such as type, is_active, date windows, and text search within name or description. Results must be paginated and sorted in a consistent way. Only columns defined in the schema (name, type, is_active, start_at, end_at, etc.) can be used for searching/sorting—do NOT include any implicit fields such as deleted_at. Security and field-level filtering should be enforced by the service layer depending on the requesting user's role.","summary":"Paginates and filters promotions in ai_shop_promotions via search parameters (no soft delete).","parameters":[],"requestBody":{"description":"Search/filter/pagination parameters for listing ai_shop_promotions (promotion campaigns).","typeName":"IAiShopPromotions.IRequest"},"responseBody":{"description":"Paginated and filtered list of ai_shop_promotions objects matching the request criteria.","typeName":"IPageAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions","method":"patch"},{"specification":"Implements GET for a single ai_shop_promotions record by ID. This retrieves the full details (name, description, type, start_at, end_at, is_active, etc.) for a specific promotion campaign. There are NO soft delete columns in ai_shop_promotions—data is only retrievable if it exists and hasn't been hard deleted.","description":"This operation returns the details for a single promotion from ai_shop_promotions, uniquely identified by its 'id'. All returned properties are strictly those described in the Prisma schema (name, description, type, start_at, end_at, is_active, etc.). Since there are no soft delete columns, if a promotion is deleted, it will not be available to retrieve with this endpoint.\n\nSecurity and role restrictions should be enforced application-side before invoking this endpoint. Data returned should match the ai_shop_promotions schema exactly, and missing records should return a standard not-found error. Field-level access is determined by the service layer, but this operation does not reference or return any additional/implicit columns.","summary":"Retrieves one ai_shop_promotions (promotion campaign) record by ID.","parameters":[{"name":"id","description":"UUID primary key for the promotion campaign to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the promotion campaign for the given ID.","typeName":"IAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions/{id}","method":"get"},{"specification":"Implements POST for creating a new promotion (ai_shop_promotions). The ai_shop_promotions table manages campaign and event configuration for couponing, with fields like name, description, type, start_at, end_at, is_active (all must be validated as present in schema). Only fields ACTUALLY present in the Prisma schema can be referenced in request and response. The endpoint creates a new campaign row and returns the resulting object.","description":"This operation creates a new promotion campaign in ai_shop_promotions. Fields must include only those defined in the schema: name, description, type, start_at, end_at, is_active, etc. There is no soft delete mechanism, so removal is permanent and not referenced here. All business logic for valid status transitions, uniqueness of name+start_at, and time checks must be enforced in the application logic, not by the API itself.\n\nReturns the newly-created promotion campaign object as defined in the ai_shop_promotions schema. Any required fields missing in the request body will result in error. No other fields are accepted, and no extraneous columns may be returned. Audit and compliance are managed externally via other mechanisms.","summary":"Creates a new promotion (ai_shop_promotions) campaign and returns it.","parameters":[],"requestBody":{"description":"Input data for creating a new promotion (only schema-defined fields).","typeName":"IAiShopPromotions.ICreate"},"responseBody":{"description":"The created ai_shop_promotions object.","typeName":"IAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions","method":"post"},{"specification":"Implements PUT for updating a promotion campaign in ai_shop_promotions by ID. Allows direct editing of fields like name, type, description, start_at, end_at, is_active. Only updates columns that exist in the Prisma schema; there is no soft or hard delete logic handled here. The endpoint receives the values to update and returns the updated row.","description":"This endpoint updates an existing ai_shop_promotions record (promotion campaign) identified by its 'id', modifying only the columns defined in the schema (e.g., name, description, type, start_at, end_at, is_active). There are no soft delete columns, so the operation edits only factual values, not removal state. ID must be an existing valid record, and all validation for time window or unique name+start_at combinations must be performed in service logic, not the API layer.\n\nReturns the full, updated ai_shop_promotions object on success. Any attempt to edit columns that do not exist in the schema must raise an error. No implicit/extra fields (such as deleted_at) can be referenced or set, and the endpoint ignores any that may be present in the request or business logic. Field-level security is handled outside the API contract.","summary":"Updates a promotion in ai_shop_promotions by ID (only schema fields).","parameters":[{"name":"id","description":"Primary key (UUID) for the promotion campaign to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Partial or full update values for ai_shop_promotions; only schema fields allowed.","typeName":"IAiShopPromotions.IUpdate"},"responseBody":{"description":"The updated ai_shop_promotions object.","typeName":"IAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions/{id}","method":"put"},{"specification":"Implements DELETE for a promotion campaign record in ai_shop_promotions by ID. The table DOES NOT feature any soft delete column (e.g., deleted_at, is_deleted)—removal is a hard delete. This is an irreversible operation, and once deleted, the record is gone from DB. Used for admin-level removal only.","description":"This endpoint performs a permanent, hard delete of a promotion campaign from ai_shop_promotions, given its 'id'. As the model does not contain any soft delete field (such as deleted_at), the row is physically removed from the database and cannot be recovered. This operation is reserved for administrators and should be accompanied by external audit logging for compliance, as all relational links are severed with deletion. Returns success or not-found depending on presence of record. No other fields may be referenced, and audit/compliance are handled outside the table.","summary":"Hard deletes a promotion campaign from ai_shop_promotions by ID (no soft delete).","parameters":[{"name":"id","description":"Primary key (UUID) of the ai_shop_promotions record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/promotions/{id}","method":"delete"},{"specification":"Implements PATCH for ai_shop_deposits to support search and pagination. This retrieves deposit entries for customers/sellers, using criteria only from schema fields (ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at, etc.). Filtering, sorting, and pagination parameters must match schema and NOT reference any non-existent or implicit columns. No soft delete fields; returns only live records.","description":"This endpoint supports retrieval of deposit events from ai_shop_deposits with flexible search and pagination. Query body may include filter criteria by customer, seller, order, type, amount, or created_at window, all strictly typed based on schema fields. No extra columns, especially soft delete fields, are present—data returned are only the ones not physically removed. Pagination and sorting must use only schema columns, and all business logic for field-level filtering (e.g., customer can only see their rows) is enforced at the service layer.\n\nReturns a paged result of deposit entries (ai_shop_deposits) as present in the schema; only schema columns are returned, and no implicit/omitted fields are present.","summary":"Searches and paginates ai_shop_deposits entries via filter/pagination parameters (no soft delete).","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_deposits; all based on schema fields.","typeName":"IAiShopDeposits.IRequest"},"responseBody":{"description":"Paginated/filtered list of ai_shop_deposits objects matching search criteria.","typeName":"IPageAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits","method":"patch"},{"specification":"Implements GET for a single deposit (ai_shop_deposits) by ID. Retrieves a deposit ledger row with fields like ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at, etc., if present. Table does NOT include any kind of soft delete or logical delete. Only hard delete removes a record. All output fields strictly match those in the schema.","description":"This operation retrieves full deposit transaction details for a single ai_shop_deposits record, selected by its UUID primary key. Only returns data if the deposit has not been physically deleted—there are no soft delete or logical delete columns, so historical/removed data is not available via this endpoint. All properties in the response are strictly those described in the Prisma schema (ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at, etc.)\n\nIf the record does not exist, returns standard not-found. All business logic for field-level filtering (e.g., whether the admin or user is allowed to view this deposit) must be enforced in API service or middleware.","summary":"Retrieves an ai_shop_deposits record by ID (no soft delete).","parameters":[{"name":"id","description":"UUID primary key of the deposit to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the ai_shop_deposits record matching the ID.","typeName":"IAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits/{id}","method":"get"},{"specification":"Implements POST for recording a new deposit (ai_shop_deposits). This creates a deposit ledger entry for a customer (and optionally seller/order), per the schema. Request body only accepts schema-defined fields: ai_shop_customer_id, ai_shop_seller_id (optional), ai_shop_order_id (optional), type, amount, description, created_at. No soft delete or logical delete is performed; only record creation and atomic return of the inserted object per schema.","description":"This endpoint creates a new row in ai_shop_deposits, representing a deposit event such as customer payment, rewards, etc. Only fields present in the schema are accepted and returned: ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at. Extra fields are ignored/rejected. The endpoint returns the full inserted record, including any DB-assigned UUID or timestamps. No soft delete applies; if a deposit is removed, it is a hard delete and not referenced here.\n\nService logic must enforce business rules (customer can only deposit for self, admin can create deposit for user, details must be accurate, etc.) outside the endpoint logic.","summary":"Creates a new deposit (ai_shop_deposits) and returns the created record.","parameters":[],"requestBody":{"description":"Deposit event details to be recorded (only schema fields allowed).","typeName":"IAiShopDeposits.ICreate"},"responseBody":{"description":"AI shop deposit record just created, matching schema fields.","typeName":"IAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits","method":"post"},{"specification":"Implements PUT to update a single deposit record in ai_shop_deposits by ID. Editable fields are strictly those in schema: ai_shop_customer_id, ai_shop_seller_id (optional), ai_shop_order_id (optional), type, amount, description, created_at. No soft delete applies: operation is for factual value changes only, not removal or logical deactivation. Returns the fully updated row matching the schema.","description":"This operation updates an existing deposit ledger entry by its 'id', editing only the columns in ai_shop_deposits: ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at. There is no soft delete or logical removal: to delete a deposit, use DELETE (hard remove). Response is the full, updated object with all fields per schema, including any audit/compliance relevant values.\n\nAny field sent in the body but not defined in the schema causes error. Field-level permissions (whether an admin or user is allowed to update a record) is checked in the service logic, not here.","summary":"Updates an ai_shop_deposits record by ID (strict schema columns only).","parameters":[{"name":"id","description":"UUID primary key of the deposit record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated deposit detail fields (schema-only values) for ai_shop_deposits.","typeName":"IAiShopDeposits.IUpdate"},"responseBody":{"description":"The updated ai_shop_deposits object matching ID and schema fields.","typeName":"IAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits/{id}","method":"put"},{"specification":"Implements DELETE for a deposit record in ai_shop_deposits by ID. Hard removal only, since there are NO soft delete columns like 'deleted_at' for this table. This is a permanent operation. Returns success or not-found, removing the row from DB. Should be restricted to admin users, with audit logging handled externally.","description":"This endpoint irrevocably deletes a deposit ledger record from ai_shop_deposits, using its 'id' primary key. There is no soft delete, so all links to this ledger entry are lost on delete. This operation must only be available to admins. It is critical to ensure that audit/compliance information is tracked outside this table, since the record cannot be restored. Any attempt to delete a non-existent record yields an error. No references to columns outside the schema should be made in this process.","summary":"Hard deletes a deposit record from ai_shop_deposits by ID (no soft delete).","parameters":[{"name":"id","description":"Primary key (UUID) of the deposit ledger entry to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/deposits/{id}","method":"delete"},{"specification":"Implements PATCH for ai_shop_mileages to support search and pagination. This retrieves loyalty/mileage entries for customers, based only on fields physically present in the schema (ai_shop_customer_id, ai_shop_order_id, type, amount, description, created_at, etc.). No soft delete exists—results are only for live records. Filtering, sorting, and pagination must only use defined schema fields. Business rules for user/view access must be enforced at service level.","description":"This endpoint supports searching, filtering, and paginating ai_shop_mileages (loyalty points) transactions. Query filter/request body may include only fields from the schema: ai_shop_customer_id, ai_shop_order_id, type, amount, description, created_at. Attempts to filter/sort by columns not present in the schema will result in errors. There is no soft delete or logical deactivation column—all results represent current, non-deleted entries. Security permissions must be handled outside this operation. Paginated result is returned per request. The core fields must directly mirror the schema, with no invented or extraneous columns being referenced.","summary":"Lists and searches ai_shop_mileages with filter/sort/pagination (no soft delete).","parameters":[],"requestBody":{"description":"Search/pagination parameters permitted for querying ai_shop_mileages (only schema-definable fields).","typeName":"IAiShopMileages.IRequest"},"responseBody":{"description":"Paged result of mileage/loyalty transactions matching search criteria.","typeName":"IPageAiShopMileages"},"authorizationRoles":["admin"],"path":"/aiShop/mileages","method":"patch"}],"completed":263,"total":275,"step":0,"created_at":"2025-07-23T07:07:34.103Z"},"tokenUsage":{"facade":{"aggregate":{"total":1380002,"input":{"total":1297547,"cached":0},"output":{"total":82455,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1380002,"input":{"total":1297547,"cached":0},"output":{"total":82455,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1380002,"input":{"total":1297547,"cached":0},"output":{"total":82455,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1380002,"input":{"total":1297547,"cached":0},"output":{"total":82455,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Retrieve a specific shopping cart session entity using its ID. This endpoint accesses the ai_shop_cart_sessions table, which contains session-linked cart information—including session_token (unique for guest carts), created_at, and updated_at. Only these fields and relations exist in this table, with no soft delete or deleted_at field present. This operation returns precise details about a single cart session, supporting flows such as cart migration or restoration for unauthenticated users. This endpoint is needed for reading guest cart data based on a session ID, e.g., to verify session-token state during shopping cart recovery.","description":"This operation retrieves a single ai_shop_cart_sessions record by its unique identifier. The ai_shop_cart_sessions table consists of the following fields: id (primary key), session_token (unique guest session identifier), created_at, and updated_at. There are no deleted_at or is_deleted fields; thus, only existing records are returned, and deleted sessions will be permanently unavailable (hard delete applies at deletion). This endpoint is used for accessing guest cart session data for cross-session cart merging, audit, or forensic purposes. Since there is no soft delete, record lookup will fail for permanently removed session tokens. Security should be applied so that only authorized server processes or the owning user/session can retrieve this object. Typical error: 404 if session not found.","summary":"Get a specific cart session from ai_shop_cart_sessions by ID.","parameters":[{"name":"id","description":"Unique identifier of the cart session in ai_shop_cart_sessions table.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Session data matching a single ai_shop_cart_sessions record.","typeName":"IAiShopCartSession"},"authorizationRoles":null,"path":"/aiShop/cartSessions/{id}","method":"get"},{"specification":"Create a new cart session object for guest users in the ai_shop_cart_sessions table. The only required fields for creation are session_token, and creation/update timestamps are automatically managed by the system. This endpoint supports guest user flows for persistent cart storage. There is no soft delete field on the entity; deletion removes the record entirely (hard delete).","description":"This operation creates a new guest-oriented shopping cart session by inserting a record into ai_shop_cart_sessions. The required field is session_token (a unique identifier for the guest user/session); created_at and updated_at are managed automatically by the system. This design enables anonymous shopping carts for visitors without logins. The table does not track any deleted or is_deleted fields; thus, sessions are not recoverable after deletion. Only genuine, system-generated session_tokens should be allowed. Security should restrict abuse and rate of session creation. Typical error: duplicate session_token (conflict).","summary":"Create a cart session in ai_shop_cart_sessions (guest cart container).","parameters":[],"requestBody":{"description":"Payload to create a guest cart session (session_token required).","typeName":"IAiShopCartSession.ICreate"},"responseBody":{"description":"Newly created cart session data.","typeName":"IAiShopCartSession"},"authorizationRoles":null,"path":"/aiShop/cartSessions","method":"post"},{"specification":"Update (replace) the data for an existing cart session by its unique ID in the ai_shop_cart_sessions table. The table includes: id, session_token, created_at, updated_at. There are no deleted_at or is_deleted columns; deleted objects are permanently removed. Update can change the session_token or refresh timestamps but cannot recover deleted sessions.","description":"This operation updates the information for an existing cart session in ai_shop_cart_sessions, identified by its primary key. Fields include session_token and updated_at (for session renewal). The entity does not support soft delete; if the session was deleted, no recovery is possible (404 on missing record). This operation should be restricted to valid session renewals to avoid hijacking/takeover. There are no additional fields outside the schema. Typical error: no matching session, 409 (conflict) for duplicate session_token.","summary":"Update a cart session in ai_shop_cart_sessions by ID.","parameters":[{"name":"id","description":"Unique identifier for the cart session to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for cart session update (session_token allowed).","typeName":"IAiShopCartSession.IUpdate"},"responseBody":{"description":"Updated cart session object.","typeName":"IAiShopCartSession"},"authorizationRoles":null,"path":"/aiShop/cartSessions/{id}","method":"put"},{"specification":"Delete (permanently remove) a cart session by its unique identifier from the ai_shop_cart_sessions table. This model does NOT include any deleted_at or soft delete field; removal is a hard delete with permanent loss of all cart session data.","description":"This operation deletes a cart session record from ai_shop_cart_sessions using the primary key id. The schema for this entity lacks soft delete capabilities, so the deletion will be permanent and unrecoverable. Fields in the entity consist ONLY of id, session_token, created_at, updated_at. This operation is used to clean up guest sessions or expired carts. Once deleted, the cart session and its relations will be lost forever. Clients/user-agents must take caution when calling this operation. Typical error: 404 if id does not exist.","summary":"Hard delete a cart session from ai_shop_cart_sessions by its ID.","parameters":[{"name":"id","description":"Unique identifier for the cart session to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/cartSessions/{id}","method":"delete"},{"specification":"Retrieve a list of orders from the ai_shop_orders table using complex filter/search logic. The table contains primary order records: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note, and deleted_at (for soft deletion). This endpoint supports paginated, filtered, and/or sorted queries across the entity. Filtering can include status, customer, seller, order_number, or date ranges. Only records without deleted_at set (null) should be considered active orders in most business logic, but inclusion rules depend on request logic.","description":"This PATCH endpoint enables filtered, paginated, and/or sorted retrieval of ai_shop_orders records. Supported query input can include filtering by order_number, status, ai_shop_customer_id, ai_shop_seller_id, and date ranges (using submitted_at or updated_at). The ai_shop_orders table includes a deleted_at field (DateTime nullable) for soft deletion; standard queries should exclude orders with deleted_at set, unless explicitly searched (e.g., for audit or admin recovery). The endpoint enables clients to retrieve page-wise results, adaptable for reporting, UI dashboards, and admin analytics. Typical errors include invalid filter values or requesting pages beyond available data.","summary":"Query/search ai_shop_orders with filters (list endpoint, supports pagination).","parameters":[],"requestBody":{"description":"Query, filter, and/or pagination information for order list retrieval.","typeName":"IAiShopOrder.IRequest"},"responseBody":{"description":"Paginated set of matching order records.","typeName":"IPageAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders","method":"patch"},{"specification":"Retrieve a single order from ai_shop_orders using its unique identifier. The table fields are: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note, deleted_at (nullable for soft delete). When deleted_at is set, the record should be considered soft-deleted and not visible to normal users, but may be accessible to authorized admin clients. This endpoint is used for display, analytics, or workflow actions on a specific order.","description":"This operation fetches the details of an ai_shop_orders record using its primary key. The table's fields are: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note, deleted_at (nullable). If the deleted_at field is non-null, the order is soft deleted and not part of standard business flows, except for audit or admin investigation endpoints. The endpoint is essential for order detail screens and audit trail purposes. Typical error: 404 if the order is missing or has been soft deleted.","summary":"Get a specific order from ai_shop_orders by ID, honors soft delete (deleted_at).","parameters":[{"name":"id","description":"Primary key UUID for the target order record in ai_shop_orders.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Order record from ai_shop_orders.","typeName":"IAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders/{id}","method":"get"},{"specification":"Insert a new order in the ai_shop_orders table by customer action (checkout). This table includes soft delete (deleted_at), but insert only uses actual input fields: ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note. The inserted order is active and visible. Id is generated. Soft deletion is only relevant on later delete actions.","description":"Creates a new ai_shop_orders record, representing a customer checkout or manual admin insertion. Required fields: ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number (must be unique), status, submitted_at, updated_at, payment_method (e.g., 'card'), with optional customer_memo and admin_note. The deleted_at field is not used on insert (remains null, indicating an active order). Security should validate references for customer, seller, and cart. This operation enables actual order placement or external order ingest by admin. Typical errors include duplicate order_number, missing foreign keys, or validation failure.","summary":"Create a new ai_shop_orders record (order placement).","parameters":[],"requestBody":{"description":"Order creation request, with all necessary and optional fields except id/deleted_at.","typeName":"IAiShopOrder.ICreate"},"responseBody":{"description":"The newly created order object.","typeName":"IAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders","method":"post"},{"specification":"Update (replace) an order's record in ai_shop_orders, using the entity's primary key. Supports updating order_number, status, payment_method, customer_memo, admin_note, and related fields. If the record's deleted_at is non-null, the update should be rejected as the record is considered soft deleted. The endpoint does not handle partial field updates—full replacement/payload only.","description":"This operation fully updates an ai_shop_orders record, replacing values for order_number, status, payment_method, customer_memo, admin_note, and similar fields. Fields not present in the schema are not supported. If deleted_at is non-null, the order should be considered soft deleted and not eligible for update unless specifically allowed for admin recovery workflows. Typical errors include updates to soft deleted or missing orders, validation failures, or uniqueness conflict on order_number.","summary":"Full update of ai_shop_orders record (by ID), forbidden if soft deleted (deleted_at set).","parameters":[{"name":"id","description":"Primary key UUID for the target order in ai_shop_orders.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All fields for the updated order (matching ai_shop_orders schema, cannot update deleted_at).","typeName":"IAiShopOrder.IUpdate"},"responseBody":{"description":"Updated order object after replacement.","typeName":"IAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders/{id}","method":"put"},{"specification":"Soft delete an order from ai_shop_orders by setting deleted_at to the current timestamp. The schema includes a nullable deleted_at column for this purpose. On successful invocation, the row will not be returned in standard business queries, but is retained for audit/log analysis.","description":"This operation performs a soft delete on an ai_shop_orders record by setting its deleted_at field (timestamp) to the current time. The field deleted_at is nullable, and its presence (non-null) indicates the order is soft-deleted for compliance, audit, and recovery. Hard deletes are not supported for this entity. After invoking this endpoint, the row is kept for recovery or audit, but excluded from all user/standard business pipelines. Typical errors: trying to delete an already soft-deleted or non-existent record (404).","summary":"Soft delete an order (ai_shop_orders) by ID (sets deleted_at).","parameters":[{"name":"id","description":"Primary key UUID for the order to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orders/{id}","method":"delete"},{"specification":"Search multiple order items from ai_shop_order_items using filtered/paginated logic (complex retrieval). This model contains id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, seller_memo. No deleted_at or is_deleted field exists; all deletions are hard deletes. List endpoint supports filtering by order, product, and other allowed fields, as well as pagination for reporting/UI purposes.","description":"This PATCH operation retrieves a filtered and/or paginated list of ai_shop_order_items records. Fields available in the model: id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, seller_memo. There is no soft delete or deleted_at/is_deleted field; missing items after deletion are hard-removed. Filtering is possible by associated order or product IDs and other business criteria. Suitable for analytics, reporting, or per-order detail views. Typical errors: invalid filters or requesting non-existent pages.","summary":"Query/search ai_shop_order_items with filters (paginated order line-item retrieval).","parameters":[],"requestBody":{"description":"Query, search, or pagination request to retrieve order items list.","typeName":"IAiShopOrderItem.IRequest"},"responseBody":{"description":"Paginated result set of order item records.","typeName":"IPageAiShopOrderItem"},"authorizationRoles":null,"path":"/aiShop/orderItems","method":"patch"},{"specification":"Get a single ai_shop_order_items record by its unique identifier. This entity has no deleted_at or is_deleted columns, so deletions are permanent (hard delete). The fields in ai_shop_order_items are id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, and seller_memo. Returns the precise order item detail for a single purchase line item in an order.","description":"This GET operation returns full detail for a single ai_shop_order_items row, identified by its primary key id. Fields: id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, seller_memo. No deleted_at/is_deleted in this entity, so deleted rows are unrecoverable. Used for per-line detail screens, audit, or forensic analysis. Security: only actors with order-level or line-level access should call this endpoint. Typical error: not found/404 if missing or deleted.","summary":"Get order item details by ID from ai_shop_order_items (no soft delete; hard delete only).","parameters":[{"name":"id","description":"UUID primary key for the order item record in ai_shop_order_items.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_order_items detail object.","typeName":"IAiShopOrderItem"},"authorizationRoles":null,"path":"/aiShop/orderItems/{id}","method":"get"},{"specification":"Create a new order item entry in ai_shop_order_items. This table has mandatory fields: ai_shop_order_id, ai_shop_product_id, product_name, quantity, unit_price, currency. Optionally, ai_shop_product_variant_id, variant_name, seller_memo. The entity is fully normalized and includes NO soft deletion; deletions are permanent (hard delete). Used as part of order management, either by the platform during order placement or manual admin intervention. Id is auto-generated.","description":"This POST operation inserts a new atomic order line item (ai_shop_order_items record). Required: ai_shop_order_id, ai_shop_product_id, product_name, quantity, unit_price, currency. Optional: ai_shop_product_variant_id, variant_name, seller_memo. There is no soft delete field, so any deletion after insertion is a hard delete. All business and referential constraints should be enforced externally. Used by business logic handling order insert/update workflows and rare admin cases for retroactive order fix-up. Typical error: invalid FK references or duplicate composite keys.","summary":"Create order item in ai_shop_order_items (one order line/entry).","parameters":[],"requestBody":{"description":"Payload for order item creation. All required and optional fields except id.","typeName":"IAiShopOrderItem.ICreate"},"responseBody":{"description":"The newly inserted order item record.","typeName":"IAiShopOrderItem"},"authorizationRoles":null,"path":"/aiShop/orderItems","method":"post"}],"completed":275,"total":275,"step":0,"created_at":"2025-07-23T07:07:45.992Z"},"tokenUsage":{"facade":{"aggregate":{"total":1440208,"input":{"total":1354082,"cached":0},"output":{"total":86126,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1440208,"input":{"total":1354082,"cached":0},"output":{"total":86126,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1440208,"input":{"total":1354082,"cached":0},"output":{"total":86126,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1440208,"input":{"total":1354082,"cached":0},"output":{"total":86126,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"aiShopCarts.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Belonged customer's {@link ai_shop_customers.id} or null for guest carts."},{"type":"null","format":"uuid","description":"Belonged customer's {@link ai_shop_customers.id} or null for guest carts."}],"description":"Belonged customer's {@link ai_shop_customers.id} or null for guest carts."},"ai_shop_cart_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Belonged cart session's {@link ai_shop_cart_sessions.id} for unauthenticated/guest carts."},{"type":"null","format":"uuid","description":"Belonged cart session's {@link ai_shop_cart_sessions.id} for unauthenticated/guest carts."}],"description":"Belonged cart session's {@link ai_shop_cart_sessions.id} for unauthenticated/guest carts."},"status":{"type":"string","description":"Cart status flag, e.g. 'active', 'abandoned', etc."},"created_at":{"type":"string","format":"date-time","description":"Cart creation timestamp (audit field, required)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last cart update (audit, required)."},"abandoned_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when cart was considered abandoned (nullable)."},{"type":"null","format":"date-time","description":"Timestamp when cart was considered abandoned (nullable)."}],"description":"Timestamp when cart was considered abandoned (nullable)."}},"required":["status","created_at","updated_at"],"description":"Request body schema for creating a new ai_shop_carts entity. Represents a persistent cart for registered or guest users. All fields map to 3NF atomic columns in the ai_shop_carts table. Does NOT allow properties outside this set.\n\n- ai_shop_customer_id: Customer UUID or null for guest carts—mutually exclusive with ai_shop_cart_session_id.\n- ai_shop_cart_session_id: For guest carts only, references guest session.\n- status: 'active', 'abandoned', etc. as per business process.\n- created_at / updated_at: Auditing/timestamp, required.\n- abandoned_at: Optional; set only if the cart became abandoned.\n\nNo soft delete fields exist, so this is purely an insertion payload."},"aiShopCarts.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer to assign the cart to (can only be set if cart is not already linked to a customer)."},{"type":"null","format":"uuid","description":"Customer to assign the cart to (can only be set if cart is not already linked to a customer)."}],"description":"Customer to assign the cart to (can only be set if cart is not already linked to a customer)."},"ai_shop_cart_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Guest cart session (nullable)."},{"type":"null","format":"uuid","description":"Guest cart session (nullable)."}],"description":"Guest cart session (nullable)."},"status":{"type":"string","description":"Update cart status, e.g. 'active', 'abandoned', etc."},"abandoned_at":{"oneOf":[{"type":"string","format":"date-time","description":"Update abandoned_at timestamp if applicable."},{"type":"null","format":"date-time","description":"Update abandoned_at timestamp if applicable."}],"description":"Update abandoned_at timestamp if applicable."},"updated_at":{"type":"string","format":"date-time","description":"Set to now on modification."}},"required":["status","updated_at"],"description":"Update DTO for ai_shop_carts entity. Used when linking a cart to a customer on login, toggling status, or marking as abandoned. \n\n- ai_shop_customer_id: Updates association with a user (nullable for guest carts).\n- ai_shop_cart_session_id: For session merges, this may be set to null on login linkage.\n- status: New status.\n- abandoned_at: Set when cart is detected as abandoned.\n- updated_at: Current system timestamp."},"aiShopCartItems.IRequest":{"type":"object","properties":{"ai_shop_cart_id":{"type":"string","format":"uuid","description":"Parent cart id to filter by."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product id to filter by."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Product variant id to filter by."},"quantity":{"type":"integer","description":"Exact quantity to filter by."},"added_at__gte":{"type":"string","format":"date-time","description":"Include only items added after this date (inclusive)."},"added_at__lt":{"type":"string","format":"date-time","description":"Include only items added before this date (exclusive)."},"page":{"type":"integer","description":"Current page number in pagination."},"limit":{"type":"integer","description":"Max records per page."},"sort":{"type":"string","description":"Sort order for results."}},"required":[],"description":"Request DTO for searching, filtering and paginating ai_shop_cart_items entities. Only uses fields defined in the schema. Examples: filter by cart id, product, variant, or time windows for added_at. Pagination (page, limit) supported; sort field applies to SQL sort clause."},"aiShopCartItems.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page info meta."},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCartItems"},"description":"Array of cart item objects for the current page."}},"required":["pagination","data"],"description":"Paginated page result for cart items listing. Always contains 'pagination' object and a 'data' array of aiShopCartItems objects."},"aiShopCartItems":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique cart item id."},"ai_shop_cart_id":{"type":"string","format":"uuid","description":"Parent cart id."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product id for this cart item."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Variant id for this cart item."},"quantity":{"type":"integer","description":"Requested quantity of product variant (>=1)."},"added_at":{"type":"string","format":"date-time","description":"Time added to cart."},"updated_at":{"type":"string","format":"date-time","description":"Time last updated."}},"required":["id","ai_shop_cart_id","ai_shop_product_id","ai_shop_product_variant_id","quantity","added_at","updated_at"],"description":"Represents a line item in a cart—one SKU/variant with quantity. All fields are atomic per 3NF."},"aiShopCartItems.ICreate":{"type":"object","properties":{"ai_shop_cart_id":{"type":"string","format":"uuid","description":"ID of parent cart to add item to."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product being added."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Variant of product being added."},"quantity":{"type":"integer","description":"Quantity to add."},"added_at":{"type":"string","format":"date-time","description":"When added to cart."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for cart item."}},"required":["ai_shop_cart_id","ai_shop_product_id","ai_shop_product_variant_id","quantity","added_at","updated_at"],"description":"Request DTO for creating a new cart item in ai_shop_cart_items. All fields map to normalized schema: cart, product, variant, quantity, timestamps."},"aiShopCartItems.IUpdate":{"type":"object","properties":{"ai_shop_cart_id":{"type":"string","format":"uuid","description":"(Optional) Move to different cart."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Change product reference."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Change variant reference."},"quantity":{"type":"integer","description":"Set new quantity."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for update."}},"required":["updated_at"],"description":"Update DTO for a cart item; use for changing quantity or updating product/variant reference. Only 'updated_at' required for audit compliance."},"aiShopCartSessions.IRequest":{"type":"object","properties":{"session_token":{"type":"string","description":"Session token for guest cart identification."},"created_at__gte":{"type":"string","format":"date-time","description":"Search only sessions created after this date (inclusive)."},"created_at__lt":{"type":"string","format":"date-time","description":"Search only sessions created before this date (exclusive)."},"page":{"type":"integer","description":"Current pagination page."},"limit":{"type":"integer","description":"Page size."}},"required":[],"description":"Search/filter/pagination parameters for ai_shop_cart_sessions list. Provides flexible lookup by session token, date, with standard paging controls."},"aiShopCartSessions.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCartSession"}}},"required":["pagination","data"],"description":"Paginated response for guest cart sessions; array of session objects."},"IAiShopCartSession":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of cart session."},"session_token":{"type":"string","description":"Unique session token for unauthenticated/guest carts.\n"},"created_at":{"type":"string","format":"date-time","description":"Creation time for the session."},"updated_at":{"type":"string","format":"date-time","description":"Time of latest cart session activity/update."}},"required":["id","session_token","created_at","updated_at"],"description":"Represents guest cart session—persistence object for unauthenticated shopping. Linked to ai_shop_carts via ai_shop_cart_session_id."},"IAiShopCartSession.ICreate":{"type":"object","properties":{"session_token":{"type":"string","description":"Unique guest session token. Should be generated and unique per session."}},"required":["session_token"],"description":"Create a guest cart session record. Only non-null/session_token is required; timestamping handled by system."},"IAiShopCartSession.IUpdate":{"type":"object","properties":{"session_token":{"type":"string","description":"Change guest cart session token (rarely updated)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for session renewal."}},"required":["updated_at"],"description":"Update guest cart session, e.g. refreshing updated_at or transferring cart to a new guest token. Only updated_at required for compliance."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number."},"limit":{"type":"integer","description":"Records per page."},"records":{"type":"integer","description":"Total records in the database."},"pages":{"type":"integer","description":"Total number of pages."}},"required":["current","limit","records","pages"],"description":"Standardized page info structure for paginated responses."}}},"completed":12,"total":286,"step":0,"created_at":"2025-07-23T07:08:15.364Z"},"tokenUsage":{"facade":{"aggregate":{"total":1575040,"input":{"total":1486731,"cached":0},"output":{"total":88309,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1575040,"input":{"total":1486731,"cached":0},"output":{"total":88309,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1575040,"input":{"total":1486731,"cached":0},"output":{"total":88309,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1575040,"input":{"total":1486731,"cached":0},"output":{"total":88309,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopConfiguration.IListRequest":{"type":"object","properties":{"page":{"type":"integer","description":"The page number for pagination. Indicates which page of the results should be returned."},"limit":{"type":"integer","description":"The number of results to return per page."},"param_name":{"type":"string","description":"Optional filter: configuration parameter name. Filters by partial or exact name, supporting UI search."},"param_value":{"type":"string","description":"Optional filter: configuration value. Filters by the value of the parameter."},"description":{"type":"string","description":"Optional filter: configuration explanation. Filter for human-readable descriptions."}},"description":"Search and pagination request type for listing ai_shop_configurations records (platform configuration parameters). Supports pagination and fuzzy search on parameter name, value, and description.\n\nAll properties are optional and allow flexible filtering. Used by admin/settings list UI to deliver search queries to backend.","required":[]},"IPageAiShopConfiguration":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopConfiguration"},"description":"The list of configuration records in the current page."}},"required":["pagination","data"],"description":"Paginated response type containing configuration entries as returned from list/search queries. Each page includes metadata (size, current page, etc) and a list of ai_shop_configuration records.\n\nLinks to IPage.IPagination for metadata and schema-compliant configuration records."},"IAiShopConfiguration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for each configuration parameter (UUID)."},"param_name":{"type":"string","description":"Configuration parameter name. Implements atomic, normalized key/value store of platform configuration. Example: 'max_cart_size', 'maintenance_mode'. Unique."},"param_value":{"type":"string","description":"Value for the configuration parameter. May be stringified JSON for complex settings. Example: 'true', '50', '{\"allowed\":true}'."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable description of what this config controls. Assists admin understanding, auditing. Example: 'The maximum number of items allowed in a cart.'"},{"type":"null"}],"description":"Optional human-readable description of what this config controls. Assists admin understanding, auditing. Example: 'The maximum number of items allowed in a cart.'"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when configuration was created. Enables auditing, rollback, compliance."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for audit and synchronization."}},"description":"Represents a single platform configuration parameter as defined in the ai_shop_configurations table. Each row is a name-value pair (sometimes with JSON value), and may have human-readable explanation and audit dates.\n\nMapped directly to the ai_shop_configurations schema, enforcing 3NF storage for dynamic settings. Used throughout platform for dynamic/feature flag system control.","required":["id","param_name","param_value","created_at","updated_at"]},"IAiShopConfigurations.ICreate":{"type":"object","properties":{"param_name":{"type":"string","description":"Configuration parameter name. Must be unique for each record. Used as the atomic key for config lookup."},"param_value":{"type":"string","description":"The value for the configuration parameter (may be string or stringified JSON)."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable explanation of parameter purpose."},{"type":"null"}],"description":"Optional human-readable explanation of parameter purpose."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp. Set automatically if not supplied."},"updated_at":{"type":"string","format":"date-time","description":"Last modified timestamp. Set automatically or equals created_at on insert."}},"description":"Request object for creating a new ai_shop_configurations record. Supplies all fields except the ID (generated). Used for the POST endpoint for adding configuration settings to the platform system.","required":["param_name","param_value","created_at","updated_at"]},"IAiShopConfigurations":{"type":"object","description":"Deprecated: Use IAiShopConfiguration for base entity and IAiShopConfigurations.ICreate/IAiShopConfigurations.IUpdate for operation-specific DTOs. (Kept for backward compatibility where needed).","properties":{},"required":[]},"IAiShopConfigurations.IUpdate":{"type":"object","properties":{"param_name":{"type":"string","description":"Configuration parameter name. Must be unique and identifies what is being updated."},"param_value":{"type":"string","description":"The value for the configuration parameter to be set (may be string or stringified JSON)."},"description":{"oneOf":[{"type":"string","description":"Human-readable explanation for the configuration entry."},{"type":"null"}],"description":"Human-readable explanation for the configuration entry."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the configuration update (audit and compliance)."}},"description":"Request object for updating ai_shop_configurations records. Used in PUT, supplies modifiable fields as per schema - does not include id or created_at, but requires updated_at for audit purposes.","required":["param_name","param_value","updated_at"]},"IAiShopCategories.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Requested page number for pagination."},"limit":{"type":"integer","description":"Max number of records per page."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Optional filter: channel to scope category listing results. Enables multi-channel support."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: filter to show only subcategories of a certain parent (or root if null)."},{"type":"null"}],"description":"Optional: filter to show only subcategories of a certain parent (or root if null)."},"code":{"type":"string","description":"Optional: category code to search (partial or exact, supports UI searching/filtering)."},"name":{"type":"string","description":"Optional: category display name (for UI search or admin filtering)."},"sort_order":{"type":"integer","description":"Optional: filter or sort by UI display ordering value."},"enabled":{"type":"boolean","description":"Optional: restrict to categories marked as enabled/disabled."}},"required":[],"description":"Request object for searching, paging, or filtering category data (ai_shop_categories) for admin/sys UI. All fields map directly to DB schema.\n\nProperties allow hierarchical exploration of category trees, support for multichannel filtering, soft/hard filtering by business logic."},"IPageAiShopCategories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCategories"},"description":"List of categories in this page of results."}},"required":["pagination","data"],"description":"Paginated result of ai_shop_categories browse/search operation. Metadata in pagination; data is array of IAiShopCategories records."},"IAiShopCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) of the category."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Reference to ai_shop_channels.id; enables multi-channel category scoping."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable parent_id for hierarchical trees. Null for root-level categories."},{"type":"null"}],"description":"Nullable parent_id for hierarchical trees. Null for root-level categories."},"code":{"type":"string","description":"Category business code (unique per channel/parent), used for programmatic access."},"name":{"type":"string","description":"Category display name."},"sort_order":{"type":"integer","description":"Ordering among siblings; controls UI arrangement, drag-sort, etc."},"enabled":{"type":"boolean","description":"Category enabled/disabled status (UI/business logic control)."},"created_at":{"type":"string","format":"date-time","description":"Category record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (UI/audit logic)."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Represents an atomic row in ai_shop_categories for category management in AI shop. Fields support hierarchical trees, UI drag-sort, channel-scoping, and enabled/hidden categorization."},"IAiShopCategories.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Channel reference for category (required for all categories in multi-channel shop)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: parent category UUID for subcategory setup. Null for root-level categories."},{"type":"null"}],"description":"Optional: parent category UUID for subcategory setup. Null for root-level categories."},"code":{"type":"string","description":"Category code; business-unique per channel/parent, enforces normalization."},"name":{"type":"string","description":"Category display name (UI/admin/marketing)."},"sort_order":{"type":"integer","description":"Display order among sibling categories (used for drag-&-sort, UI layouts etc)."},"enabled":{"type":"boolean","description":"Flag indicating if the category is visible or not."},"created_at":{"type":"string","format":"date-time","description":"Category creation timestamp (auto-set if not supplied)."},"updated_at":{"type":"string","format":"date-time","description":"Category last update timestamp (set = created_at if not changing)."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"DTO for inserting a new ai_shop_categories row in backend DB; requires all non-PK/auto fields except nullable parent_id. Used for category management UIs and integrations."},"IAiShopCategories.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Channel reference for changing category assignment. Must reference existing channel id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: parent category to update hierarchical assignment."},{"type":"null"}],"description":"Optional: parent category to update hierarchical assignment."},"code":{"type":"string","description":"Category code (business logic unique per parent/channel combo)."},"name":{"type":"string","description":"Category display name (UI/marketing/admin)."},"sort_order":{"type":"integer","description":"Ordering position in the UI for sibling categories."},"enabled":{"type":"boolean","description":"Category enabled/disabled state (UI/business logic toggle)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for latest modification."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled","updated_at"],"description":"DTO for editing/updating ai_shop_categories categories; includes all non-PK fields except created_at (immutable), with nullable parent_id to move category in tree structure. Used by admin/ops UI for editing."},"IAiShopFiles.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Requested page for pagination, zero or one-based index depending on API convention."},"limit":{"type":"integer","description":"Maximum number of file records to return per page."},"original_name":{"type":"string","description":"Search or filter by original uploaded file name (partial/fuzzy search supported)."},"mime_type":{"type":"string","description":"Filter files by MIME type (e.g., 'image/png','application/pdf')."},"uploader_name":{"type":"string","description":"Search for files uploaded by a particular uploader (name as saved during upload, if available)."},"uploaded_at_from":{"type":"string","format":"date-time","description":"Optional: filter files uploaded on or after this timestamp (inclusive)."},"uploaded_at_to":{"type":"string","format":"date-time","description":"Optional: filter files uploaded on or before this timestamp (inclusive)."}},"description":"Type for searching/listing files in ai_shop_files table. Used by admin/storage UI and asset managers to filter/search uploaded files by meta-metadata.\n\nAll properties are optional; page and limit enable paging. Filtering is by file name, type, or uploader, or time range.","required":[]}}},"completed":24,"total":286,"step":0,"created_at":"2025-07-23T07:08:20.593Z"},"tokenUsage":{"facade":{"aggregate":{"total":1710263,"input":{"total":1619374,"cached":0},"output":{"total":90889,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1710263,"input":{"total":1619374,"cached":0},"output":{"total":90889,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1710263,"input":{"total":1619374,"cached":0},"output":{"total":90889,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1710263,"input":{"total":1619374,"cached":0},"output":{"total":90889,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopPostComment.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"The unique ID of the parent post that this comment belongs to, as defined in ai_shop_post_comments.post_id. Used to maintain direct relation to the bulletin board post. Refer to the ai_shop_post_comments schema column descriptions for details about data consistency and referential integrity."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer author ID for the comment (nullable). If supplied, must match an existing customer. Enforces the polymorphic reference to a customer as described in ai_shop_post_comments.ai_shop_customer_id. See Prisma schema and ERD for business logic."},{"type":"null","format":"uuid","description":"Customer author ID for the comment (nullable). If supplied, must match an existing customer. Enforces the polymorphic reference to a customer as described in ai_shop_post_comments.ai_shop_customer_id. See Prisma schema and ERD for business logic."}],"description":"Customer author ID for the comment (nullable). If supplied, must match an existing customer. Enforces the polymorphic reference to a customer as described in ai_shop_post_comments.ai_shop_customer_id. See Prisma schema and ERD for business logic."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller author ID for the comment (nullable). If supplied, must match an existing seller. Provides proper reference for seller role author, aligned with ai_shop_post_comments.ai_shop_seller_id in the schema. See ERD and schema for more."},{"type":"null","format":"uuid","description":"Seller author ID for the comment (nullable). If supplied, must match an existing seller. Provides proper reference for seller role author, aligned with ai_shop_post_comments.ai_shop_seller_id in the schema. See ERD and schema for more."}],"description":"Seller author ID for the comment (nullable). If supplied, must match an existing seller. Provides proper reference for seller role author, aligned with ai_shop_post_comments.ai_shop_seller_id in the schema. See ERD and schema for more."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin author ID for the comment (nullable). If supplied, must match an admin account. Polymorphic author referencing for system compliance and moderation, as in ai_shop_post_comments.ai_shop_admin_id."},{"type":"null","format":"uuid","description":"Admin author ID for the comment (nullable). If supplied, must match an admin account. Polymorphic author referencing for system compliance and moderation, as in ai_shop_post_comments.ai_shop_admin_id."}],"description":"Admin author ID for the comment (nullable). If supplied, must match an admin account. Polymorphic author referencing for system compliance and moderation, as in ai_shop_post_comments.ai_shop_admin_id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the parent comment, if this is a reply (nullable for root comments). Implements hierarchical comment tree as described in ai_shop_post_comments.parent_id."},{"type":"null","format":"uuid","description":"ID of the parent comment, if this is a reply (nullable for root comments). Implements hierarchical comment tree as described in ai_shop_post_comments.parent_id."}],"description":"ID of the parent comment, if this is a reply (nullable for root comments). Implements hierarchical comment tree as described in ai_shop_post_comments.parent_id."},"body":{"type":"string","description":"Content of the comment, atomic and normalized. This property directly maps to ai_shop_post_comments.body. String corresponding to the user's comment."},"role_type":{"type":"string","description":"Role type of commenter: 'customer', 'seller', or 'admin'. Implements polymorphic author tracking, as defined in ai_shop_post_comments.role_type. Must match one of the supported role enums in business logic. No enum defined in DB, but constrained by application rules."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of comment creation, in ISO 8601 format. Referenced in schema as ai_shop_post_comments.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last edit/moderation for this comment. Matches ai_shop_post_comments.updated_at in database schema."}},"required":["post_id","body","role_type","created_at","updated_at"],"description":"Update DTO for ai_shop_post_comments entity. Contains all schema-compliant fields for updating or replacing a comment record. Aligns to requirements described in the ERD and Prisma schema documentation."},"IAiShopPostAttachment.IRequest":{"type":"object","properties":{"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by bulletin post ID (ai_shop_post_attachments.post_id). Used to find attachments belonging to a certain post."},{"type":"null","format":"uuid","description":"Optional filter by bulletin post ID (ai_shop_post_attachments.post_id). Used to find attachments belonging to a certain post."}],"description":"Optional filter by bulletin post ID (ai_shop_post_attachments.post_id). Used to find attachments belonging to a certain post."},"file_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by file ID (ai_shop_post_attachments.file_id). Used to narrow by attached file."},{"type":"null","format":"uuid","description":"Optional filter by file ID (ai_shop_post_attachments.file_id). Used to narrow by attached file."}],"description":"Optional filter by file ID (ai_shop_post_attachments.file_id). Used to narrow by attached file."},"name":{"oneOf":[{"type":"string","description":"Fuzzy search for attachment display name. Implements text search on ai_shop_post_attachments.name using trigram or similar search in DB."},{"type":"null","description":"Fuzzy search for attachment display name. Implements text search on ai_shop_post_attachments.name using trigram or similar search in DB."}],"description":"Fuzzy search for attachment display name. Implements text search on ai_shop_post_attachments.name using trigram or similar search in DB."},"type":{"oneOf":[{"type":"string","description":"Filter by attachment MIME/type or category. Matches ai_shop_post_attachments.type for searching by type group (e.g., image/png)."},{"type":"null","description":"Filter by attachment MIME/type or category. Matches ai_shop_post_attachments.type for searching by type group (e.g., image/png)."}],"description":"Filter by attachment MIME/type or category. Matches ai_shop_post_attachments.type for searching by type group (e.g., image/png)."},"size":{"oneOf":[{"type":"number","description":"Optional filter for file size in bytes. Matches ai_shop_post_attachments.size."},{"type":"null","description":"Optional filter for file size in bytes. Matches ai_shop_post_attachments.size."}],"description":"Optional filter for file size in bytes. Matches ai_shop_post_attachments.size."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (starting from 1; optional)"},{"type":"null","description":"Page number for pagination (starting from 1; optional)"}],"description":"Page number for pagination (starting from 1; optional)"},"limit":{"oneOf":[{"type":"integer","description":"Results per page. Applies for paginated queries (optional; default as per API/system setting)."},{"type":"null","description":"Results per page. Applies for paginated queries (optional; default as per API/system setting)."}],"description":"Results per page. Applies for paginated queries (optional; default as per API/system setting)."}},"required":[],"description":"Request search/filter/pagination DTO for listing ai_shop_post_attachments based on schema-defined fields."},"IPageIAiShopPostAttachment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostAttachment"},"description":"The page's array of attachment records."}},"required":["pagination","data"],"description":"Paginated result model for listing ai_shop_post_attachments with page navigation information."},"IAiShopPostAttachment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique PK for post attachment (ai_shop_post_attachments.id)"},"post_id":{"type":"string","format":"uuid","description":"FK to the parent ai_shop_posts entry. See ai_shop_post_attachments.post_id."},"file_id":{"type":"string","format":"uuid","description":"FK to ai_shop_files, as structured in ai_shop_post_attachments.file_id."},"name":{"type":"string","description":"Filename or display name for attachment. Part of ai_shop_post_attachments schema."},"type":{"type":"string","description":"Attachment type/MIME/type or group, as per ai_shop_post_attachments.type."},"size":{"type":"integer","description":"File size in bytes (ai_shop_post_attachments.size)."}},"required":["id","post_id","file_id","name","type","size"],"description":"Complete attachment record for bulletin post, per ai_shop_post_attachments schema."},"IAiShopPostAttachment.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to post (ai_shop_post_attachments.post_id) - required."},"file_id":{"type":"string","format":"uuid","description":"FK to file metadata (ai_shop_post_attachments.file_id) - required."},"name":{"type":"string","description":"Display/filename for attachment."},"type":{"type":"string","description":"Attachment MIME/type/category."},"size":{"type":"integer","description":"File size in bytes."}},"required":["post_id","file_id","name","type","size"],"description":"Create DTO for ai_shop_post_attachments. Required for POST endpoint as per schema."},"IAiShopPostAttachment.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to parent post for update."},"file_id":{"type":"string","format":"uuid","description":"FK to file being associated."},"name":{"type":"string","description":"Filename for the attachment."},"type":{"type":"string","description":"Attachment type/MIME."},"size":{"type":"integer","description":"File size in bytes."}},"required":["post_id","file_id","name","type","size"],"description":"Full update model for ai_shop_post_attachments table. Overwrites all fields except PK as per the schema."},"IAiShopPostSnapshot.IRequest":{"type":"object","properties":{"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by bulletin post ID (ai_shop_post_snapshots.post_id)."},{"type":"null","format":"uuid","description":"Filter by bulletin post ID (ai_shop_post_snapshots.post_id)."}],"description":"Filter by bulletin post ID (ai_shop_post_snapshots.post_id)."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by customer author (nullable)."},{"type":"null","format":"uuid","description":"Filter by customer author (nullable)."}],"description":"Filter by customer author (nullable)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by seller author (nullable)."},{"type":"null","format":"uuid","description":"Filter by seller author (nullable)."}],"description":"Filter by seller author (nullable)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by admin author (nullable)."},{"type":"null","format":"uuid","description":"Filter by admin author (nullable)."}],"description":"Filter by admin author (nullable)."},"title":{"oneOf":[{"type":"string","description":"Text query for title in version history."},{"type":"null","description":"Text query for title in version history."}],"description":"Text query for title in version history."},"status":{"oneOf":[{"type":"string","description":"Filter by post status at this version."},{"type":"null","description":"Filter by post status at this version."}],"description":"Filter by post status at this version."},"snapshot_reason":{"oneOf":[{"type":"string","description":"Filter by versioning/moderation reason."},{"type":"null","description":"Filter by versioning/moderation reason."}],"description":"Filter by versioning/moderation reason."},"created_at_range":{"oneOf":[{"type":"array","items":{"type":"string","format":"date-time"},"description":"Optional array of two ISO8601 date-times: [from, to] to limit by snapshot time."},{"type":"null","items":{"type":"string","format":"date-time"},"description":"Optional array of two ISO8601 date-times: [from, to] to limit by snapshot time."}],"description":"Optional array of two ISO8601 date-times: [from, to] to limit by snapshot time."},"page":{"oneOf":[{"type":"integer","description":"Pagination: page number."},{"type":"null","description":"Pagination: page number."}],"description":"Pagination: page number."},"limit":{"oneOf":[{"type":"integer","description":"Pagination: results per page."},{"type":"null","description":"Pagination: results per page."}],"description":"Pagination: results per page."}},"required":[],"description":"Complex search/filter DTO for ai_shop_post_snapshots version/audit record listing."},"IPageAiShopPostSnapshot":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostSnapshot"},"description":"Array of snapshot version records for this page."}},"required":["pagination","data"],"description":"Page result model for ai_shop_post_snapshots, including snapshot version array and pagination."},"IAiShopPostSnapshot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique PK for the version/snapshot row."},"post_id":{"type":"string","format":"uuid","description":"FK to ai_shop_posts; which post is this a snapshot of."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK to customer who authored version."},{"type":"null","format":"uuid","description":"Optional FK to customer who authored version."}],"description":"Optional FK to customer who authored version."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK to seller author."},{"type":"null","format":"uuid","description":"Optional FK to seller author."}],"description":"Optional FK to seller author."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK to admin author."},{"type":"null","format":"uuid","description":"Optional FK to admin author."}],"description":"Optional FK to admin author."},"title":{"type":"string","description":"Title at version time."},"body":{"type":"string","description":"Post content/body at this version."},"role_type":{"type":"string","description":"Role of author—customer/seller/admin—at version time."},"status":{"type":"string","description":"Status value for post at time of versioning."},"snapshot_reason":{"type":"string","description":"Reason this version was created: edit/moderation/audit event."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of this snapshot creation."}},"required":["id","post_id","title","body","role_type","status","snapshot_reason","created_at"],"description":"Record for post version snapshot (ai_shop_post_snapshots table). For audit/log/rollback."},"IAiShopPostSnapshot.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to bulletin post for snapshot versioning."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer author id (nullable)—version snapshot reflection."},{"type":"null","format":"uuid","description":"Customer author id (nullable)—version snapshot reflection."}],"description":"Customer author id (nullable)—version snapshot reflection."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller author id (nullable)—for version trace."},{"type":"null","format":"uuid","description":"Seller author id (nullable)—for version trace."}],"description":"Seller author id (nullable)—for version trace."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin author id (nullable)—for moderation versioning."},{"type":"null","format":"uuid","description":"Admin author id (nullable)—for moderation versioning."}],"description":"Admin author id (nullable)—for moderation versioning."},"title":{"type":"string","description":"Title at snapshot creation."},"body":{"type":"string","description":"Body/content at snapshot creation."},"role_type":{"type":"string","description":"Role of author ('customer', 'seller', 'admin')."},"status":{"type":"string","description":"Post status at snapshot time."},"snapshot_reason":{"type":"string","description":"Reason for version: edit/moderation/audit note."}},"required":["post_id","title","body","role_type","status","snapshot_reason"],"description":"DTO for post version creation (audit, rollback, moderation event tracing)."},"IAiShopPostSnapshot.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to post for version update/correction."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer FK (nullable) for new version authoring."},{"type":"null","format":"uuid","description":"Customer FK (nullable) for new version authoring."}],"description":"Customer FK (nullable) for new version authoring."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller FK (nullable) for version update."},{"type":"null","format":"uuid","description":"Seller FK (nullable) for version update."}],"description":"Seller FK (nullable) for version update."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin FK (nullable) for correction/version fix."},{"type":"null","format":"uuid","description":"Admin FK (nullable) for correction/version fix."}],"description":"Admin FK (nullable) for correction/version fix."},"title":{"type":"string","description":"Title to update version with."},"body":{"type":"string","description":"Body/content to update."},"role_type":{"type":"string","description":"Role (customer/seller/admin) for update context."},"status":{"type":"string","description":"Status string for this version update."},"snapshot_reason":{"type":"string","description":"Update/correction reason—reflects why version update exists."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for updated version (override if business logic allows)."}},"required":["post_id","title","body","role_type","status","snapshot_reason","created_at"],"description":"Update/replace request DTO for ai_shop_post_snapshots (rare, audit/compliance fix case)."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":1,"description":"Current page number."},"limit":{"type":"integer","description":"Records per page, default 100."},"records":{"type":"integer","description":"Total items in DB (matching search/filter)."},"pages":{"type":"integer","description":"Total available pages (ceiling of records/limit)."}},"required":["current","limit","records","pages"],"description":"Pagination metadata for all list/page endpoints."},"IStandardDeleteResult":{"type":"object","properties":{"success":{"type":"boolean","description":"True if deletion was successful; false if not."},"message":{"type":"string","description":"Optional human-readable status message, especially for failures or business-logic rejections (e.g., FK constraint or non-existent row)."}},"required":["success"],"description":"Standard result for DELETE operations, indicating if operation was successful and optional message (failure/cause)."}}},"completed":36,"total":286,"step":0,"created_at":"2025-07-23T07:08:21.785Z"},"tokenUsage":{"facade":{"aggregate":{"total":1845799,"input":{"total":1752028,"cached":0},"output":{"total":93771,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1845799,"input":{"total":1752028,"cached":0},"output":{"total":93771,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1845799,"input":{"total":1752028,"cached":0},"output":{"total":93771,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1845799,"input":{"total":1752028,"cached":0},"output":{"total":93771,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopFavoritesAddresses.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 ID입니다. 즐겨찾는 주소를 조회하는 요청에 사용됩니다. 각 고객은 여러 배송지(프로필)를 즐겨찾기로 등록할 수 있으며, 이 필드를 통해 특정 고객의 즐겨찾기 주소들만 필터링해 조회할 수 있습니다.\n\nPrisma 스키마 ai_shop_favorites_addresses 테이블의 ai_shop_customer_id 컬럼을 참조합니다."},"ai_shop_profile_id":{"type":"string","format":"uuid","description":"고객 주소 프로필 ID입니다. 특정 프로필(배송지)이 즐겨찾기에 추가되었는지 조회할 때 사용합니다.\n\nPrisma 스키마 ai_shop_favorites_addresses 테이블의 ai_shop_profile_id 컬럼을 참조합니다."},"created_at_from":{"type":"string","format":"date-time","description":"주소 즐겨찾기 추가 일자(이후)를 기준으로 필터링할 때 사용합니다. ISO8601 datetime 포맷이어야 하며, 예를 들어 특정 기간 내 추가된 주소만 조회할 때 활용합니다."},"created_at_to":{"type":"string","format":"date-time","description":"주소 즐겨찾기 추가 일자(이전)를 기준으로 필터링할 때 사용합니다. ISO8601 datetime 포맷이어야 하며, 기간 종료 조건으로 사용합니다."},"page":{"type":"integer","format":"int32","minimum":1,"description":"페이지네이션 시 사용할 페이지 번호입니다. 1 이상의 값이어야 하며, 기본값은 1입니다."},"limit":{"type":"integer","format":"int32","minimum":1,"maximum":200,"description":"한 페이지당 조회할 즐겨찾기 주소 개수. 최대 200까지 지정 가능합니다. 기본값은 20 등 서비스 정책에 맞게 처리하세요."}},"description":"즐겨찾기(배송지) 조회, 필터, 페이징 요청 DTO. 고객별, 프로필별, 기간별로 즐겨찾기 주소를 검색/조회하기 위해 사용합니다.\n\n각 필드는 Prisma의 ai_shop_favorites_addresses와 연관되며, 고객 ID 및 주소 프로필 ID로 필터링, 추가 시점으로 기간검색, 페이지네이션을 지원합니다.","required":["page","limit"]},"IPageAiShopFavoritesAddresses":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesAddresses"},"description":"조회된 즐겨찾기 주소 리스트입니다. 각 항목이 ai_shop_favorites_addresses 단일 레코드를 의미합니다."}},"required":["pagination","data"],"description":"페이지네이션 기반의 즐겨찾기(배송지) 주소 조회 결과 객체.\n\n프론트엔드, 관리자 UI, 통합 데이터 서비스가 페이징 처리가 필요한 목록 조회 시 사용합니다."},"IAiShopFavoritesAddresses":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"즐겨찾기 주소 고유 ID, ai_shop_favorites_addresses 테이블의 PK입니다."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"해당 즐겨찾기 주소를 소유한 고객의 고유 ID(PK).\nPrisma 스키마 참조: ai_shop_favorites_addresses.ai_shop_customer_id"},"ai_shop_profile_id":{"type":"string","format":"uuid","description":"즐겨찾기 대상으로 지정된 고객 주소 프로필 ID.\nPrisma 스키마 참조: ai_shop_favorites_addresses.ai_shop_profile_id"},"created_at":{"type":"string","format":"date-time","description":"이 즐겨찾기 주소가 등록된 일시(ISO8601 포맷)."}},"required":["id","ai_shop_customer_id","ai_shop_profile_id","created_at"],"description":"고객의 즐겨찾는 주소를 나타내는 단일 엔터티. 각 row가 고객 - 주소프로필 간의 favorite 관계를 나타냄.\n\nPrisma의 ai_shop_favorites_addresses 테이블 컬럼과 직접 매핑되며, DB 단 에서 unique(customer_id, profile_id)로 관리됨."},"IAiShopFavoritesAddresses.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"즐겨찾기 주소를 추가하는 주체 고객의 고유 ID입니다. 필수이며, 외래키 제약이 있습니다."},"ai_shop_profile_id":{"type":"string","format":"uuid","description":"즐겨찾기에 추가할 배송지(고객프로필) ID입니다. 필수이며, ai_shop_customer_profiles 테이블의 id와 연결됩니다."}},"required":["ai_shop_customer_id","ai_shop_profile_id"],"description":"즐겨찾기 주소 생성(추가) 요청 DTO. 고객 및 프로필 ID만 있으면 등록 가능하며, 중복(unique) 제약이 있습니다."},"IAiShopFavoritesAddresses.IUpdate":{"type":"object","properties":{"ai_shop_profile_id":{"type":"string","format":"uuid","description":"수정 시 새로운 배송지(프로필)로 변경할 경우 사용. 기존 ai_shop_customer_id는 변경 불가."}},"required":["ai_shop_profile_id"],"description":"즐겨찾기 주소 정보(주소 프로필 ID) 수정 요청 객체. PK 기반으로 수정하며, 실제 변경은 프로필 ID 교체만 가능합니다."},"IAiShopFavoritesNotifications.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객의 고유 ID. 본인이 즐겨찾기한 알림만 조회하도록 특정 고객으로 제한할 때 사용합니다."},"ai_shop_notification_id":{"type":"string","format":"uuid","description":"즐겨찾기된 알림의 고유 ID. 특정 알림이 즐겨찾기에 등록되어 있는지 체크할 때 사용합니다."},"created_at_from":{"type":"string","format":"date-time","description":"즐겨찾기 알림 추가(등록) 일자 기준 - 시작. ISO8601 datetime, 기간 필터에 활용."},"created_at_to":{"type":"string","format":"date-time","description":"즐겨찾기 알림 추가(등록) 일자 기준 - 종료. ISO8601 datetime, 기간 필터에 활용."},"page":{"type":"integer","format":"int32","minimum":1,"description":"페이지 번호(1 이상), 기본 1"},"limit":{"type":"integer","format":"int32","minimum":1,"maximum":200,"description":"페이지당 반환할 레코드 수. 최대 200. 기본값은 20 등 서비스 정책에 맞춤."}},"required":["page","limit"],"description":"고객의 즐겨찾기 알림(Notification) 조회, 검색, 필터, 페이징 요청 DTO.\n\n고객ID, 알림ID, 즐겨찾기 등록기간, 페이징 옵션을 받아 필터링함."},"IPageAiShopFavoritesNotifications":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesNotifications"},"description":"조회된 즐겨찾기 알림(Notification) 목록"}},"required":["pagination","data"],"description":"페이지네이션/필터 기반 즐겨찾기 알림 목록 조회 응답 DTO. data는 알림 즐겨찾기 엔터티 배열."},"IAiShopFavoritesNotifications":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"알림 즐겨찾기 레코드 고유 ID (PK)"},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"알림 즐겨찾기를 등록한 고객의 고유 식별자 (PK, FK)"},"ai_shop_notification_id":{"type":"string","format":"uuid","description":"고객이 즐겨찾기로 지정한 특정 알림(시스템, 캠페인, 정보, 트랜잭션 등)의 고유 ID"},"created_at":{"type":"string","format":"date-time","description":"이 즐겨찾기 알림이 등록된 시각 (ISO8601)"}},"required":["id","ai_shop_customer_id","ai_shop_notification_id","created_at"],"description":"고객-알림 간 즐겨찾기 관계를 나타내는 엔티티. ai_shop_favorites_notifications 테이블 row에 해당됨."},"IAiShopFavoritesNotifications.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"알림 즐겨찾기를 추가하는 고객의 ID. 필수, FK 관계 존재"},"ai_shop_notification_id":{"type":"string","format":"uuid","description":"즐겨찾기에 등록할 알림(notification)의 고유 ID. 필수, 외부 시스템/DB 참조"}},"required":["ai_shop_customer_id","ai_shop_notification_id"],"description":"알림 즐겨찾기 등록(추가) 요청 DTO. 고객은 자신에게 온 알림을 즐겨찾기로 지정할 수 있습니다."},"IAiShopFavoritesNotifications.IUpdate":{"type":"object","properties":{"ai_shop_notification_id":{"type":"string","format":"uuid","description":"(선택) 즐겨찾기 알림을 다른 알림 ID로 변경할 때 사용."}},"required":["ai_shop_notification_id"],"description":"알림 즐겨찾기 정보(알림ID) 수정 요청 DTO. PK 기반으로, 알림 ID만 교체 가능."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"현재 페이지 번호(1부터 시작)"},"limit":{"type":"integer","format":"uint32","description":"페이지당 레코드 수. 기본 100"},"records":{"type":"integer","format":"uint32","description":"전체 데이터 레코드 개수"},"pages":{"type":"integer","format":"uint32","description":"총 페이지 수(ceil(records/limit))"}},"description":"페이지네이션 정보 객체 표준","required":[]}}},"completed":46,"total":286,"step":0,"created_at":"2025-07-23T07:08:24.029Z"},"tokenUsage":{"facade":{"aggregate":{"total":1980625,"input":{"total":1884664,"cached":0},"output":{"total":95961,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1980625,"input":{"total":1884664,"cached":0},"output":{"total":95961,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":1980625,"input":{"total":1884664,"cached":0},"output":{"total":95961,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":1980625,"input":{"total":1884664,"cached":0},"output":{"total":95961,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopInquiryModerations.ICreate":{"type":"object","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Unique identifier of the inquiry being moderated. This field links the moderation action to the specific ai_shop_inquiries entity.\n\nReflects business requirement for audit and compliance: every moderation action must be traceable to its inquiry object."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"Unique identifier of the admin performing the moderation action. This field establishes the responsible actor for compliance, audit, and traceability.\n\nCorresponds directly to admin user database record and is required for accountability."},"action":{"type":"string","description":"Moderation action type that was performed. This value describes what operation took place: e.g., 'approve', 'flag', or 'delete'.\n\nSupported values are governed by the application layer, reflecting business logic for moderation flows (approve/flag/delete)."},"reason":{"type":"string","description":"Rationale or explanation for why the moderation action was taken. Required for audit, transparency, and regulatory compliance.\n\nExample: 'Spam content', 'Off-topic', 'Abusive language'. Clarifies the context of the moderation decision."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp indicating when the moderation action was made. Required for audit trail, SLAs, and workflow timelining.\n\nSet at creation time; not modifiable afterwards."}},"required":["ai_shop_inquiry_id","ai_shop_admin_id","action","reason","created_at"],"description":"Creation payload for an inquiry moderation action. Required for AI Shop audit/compliance and workflow history. All fields correspond to normalized database columns and are required by business rules."},"IAiShopInquiryModerations.IUpdate":{"type":"object","properties":{"action":{"type":"string","description":"The updated moderation action (e.g., approve, flag, delete). Changing this value must be a justified business or compliance correction only; changes are audit-logged externally."},"reason":{"type":"string","description":"The revised justification or annotation for the moderation action. Permitted updates only to clarify or correct moderation rationale for business/policy compliance."}},"required":["action","reason"],"description":"Update payload for an inquiry moderation action. Supports correction/annotation of moderation record in AI Shop system; only allowed fields per strict schema normalization."},"IAiShopFavoritesProducts.IListRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Unique identifier of the customer whose favorites are to be listed. Required for scoping search and enforcing access control—the result set includes only favorites for this user.\n\nBusiness context: user-centered engagement, personalization, and compliance. Typically set by authentication/session context."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Optional filter: Only favorites for a specific product. Allows targeted querying for a user's favorite status regarding a particular catalog item.\n\nNull if not filtering by product."},"created_at_before":{"type":"string","format":"date-time","description":"Optional: Only favorites added before this ISO8601 timestamp are included. Enables historic reporting or business logic for time-dependent personalization. Null if omitted."},"created_at_after":{"type":"string","format":"date-time","description":"Optional: Only favorites added after this ISO8601 timestamp are returned. Enables querying for recent additions (e.g., for activity feeds, batch syncs). Null if omitted."},"limit":{"type":"integer","format":"int32","description":"Maximum number of results to return in this page. Used for pagination and UI efficiency; default/maximum enforced at service level."},"offset":{"type":"integer","format":"int32","description":"Number of objects to skip before returning results. Used for pagination flows; default is 0."}},"required":["ai_shop_customer_id"],"description":"Filter, query, and pagination parameters for listing product favorites in ai_shop_favorites_products. Used for personalized engagement and analytics."},"IPageIAiShopFavoritesProducts":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata (current page, limit, records, pages). Standard format for tabular/paged API responses in AI Shop."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesProducts"},"description":"List of favorite product records (links between user and product) in this page of results. Each record corresponds to the strict schema normalization of ai_shop_favorites_products."}},"required":["pagination","data"],"description":"Page result type for ai_shop_favorites_products record searches/listing. Bundles pagination info and product favorite records for listing endpoints."},"IAiShopFavoritesProducts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for this favorite product entry. Used for update/delete by resource."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Owner's unique customer id. Links to the customer in ai_shop_customers."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Favorited product id. Links to the ai_shop_products catalog table."},"created_at":{"type":"string","format":"date-time","description":"Datetime set at creation time; when product was favorited by the user."}},"required":["id","ai_shop_customer_id","ai_shop_product_id","created_at"],"description":"Atomic record mapping a user's 'favorite' relationship to a product. Strictly normalized, matches ai_shop_favorites_products table for AI Shop—supports auditing, personalization, engagement scoring."},"IAiShopFavoritesProducts.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer (user) adding the product to favorites. FK to ai_shop_customers."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product that is being favorited. FK to ai_shop_products."},"created_at":{"type":"string","format":"date-time","description":"Datetime the product is favorited by the user. Set by client or system; always included for audit/analytics."}},"required":["ai_shop_customer_id","ai_shop_product_id","created_at"],"description":"Create payload for a new user-product favorite relation. Strictly schema-bound for compliance."},"IAiShopFavoritesProducts.IUpdate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"The new product id to favorite (if moving favorite to another product). FK to ai_shop_products. \n\nUpdate only permitted for correcting user error or changing product context in business flows."},"created_at":{"type":"string","format":"date-time","description":"Update the favorited-at timestamp in audit situations (rare, business-exception only). Usually not altered except to correct for timezone/late adjustment."}},"required":["ai_shop_product_id","created_at"],"description":"Update payload for an existing favorite product record. Mutations are rare except for historical corrections or business exceptions; modification permitted only on defined schema fields."},"IAiShopFavoritesInquiries.IListRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"User id whose inquiry favorites are being listed. Required for owner-scoping, access control, and compliance. Must match authenticated or managed user's id."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Optional filter: Only return favorite entries for specified inquiry. Enables dashboard, analytics, or detail UI use cases."},"created_at_before":{"type":"string","format":"date-time","description":"Optional: Filter for favorites added before a certain ISO8601 timestamp; for cold-storage, reporting, or personal history flows."},"created_at_after":{"type":"string","format":"date-time","description":"Optional: Favorites after a certain ISO8601 timestamp only; for activity feeds or engagement analytics."},"limit":{"type":"integer","format":"int32","description":"Page size (maximum items returned). Used for UI or platform pagination flow."},"offset":{"type":"integer","format":"int32","description":"Page offset (for cursor/skip pagination). Start of this result window."}},"required":["ai_shop_customer_id"],"description":"Filter, query, and pagination parameters for listing inquiry favorites for a given user in ai_shop_favorites_inquiries. Used for dashboard/engagement flows."},"IPageIAiShopFavoritesInquiries":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesInquiries"}}},"required":["pagination","data"],"description":"Response schema for a paged result of inquiry favorites listing (ai_shop_favorites_inquiries records). Bundles records with pagination and metadata."},"IAiShopFavoritesInquiries":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for favorite entry (id of ai_shop_favorites_inquiries)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer id who favorited this inquiry (FK to ai_shop_customers)."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"The inquiry id being favorited (FK to ai_shop_inquiries)."},"created_at":{"type":"string","format":"date-time","description":"When this inquiry was favorited (audit window/engagement measure)."}},"required":["id","ai_shop_customer_id","ai_shop_inquiry_id","created_at"],"description":"Entity record mapping between a customer's favorites and a specific inquiry/question. Used for analytics, engagement, and compliance; strictly schema aligned."},"IAiShopFavoritesInquiries.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Unique ID of owner (customer/user) making this favorite."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Unique ID of the inquiry being favorited."},"created_at":{"type":"string","format":"date-time","description":"Datetime of action (when favorited); audit-required and set by system or client."}},"required":["ai_shop_customer_id","ai_shop_inquiry_id","created_at"],"description":"Payload for creating a new user-inquiry favorite relationship; atomic per schema for full normalization and audit logging."},"IAiShopFavoritesInquiries.IUpdate":{"type":"object","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Allows reassignment of favorite to a different inquiry (correction only, rare). FK to ai_shop_inquiries."},"created_at":{"type":"string","format":"date-time","description":"Correction of created_at for audit/engagement measurement. Only modifiable as business exception."}},"required":["ai_shop_inquiry_id","created_at"],"description":"Update payload for an inquiry favorite record; only schema-modifiable fields permitted, used for business exceptions or audit corrections."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"Current page number for this result set."},"limit":{"type":"integer","format":"uint32","description":"Result set limitation per page; default and max are enforced at service boundary."},"records":{"type":"integer","format":"uint32","description":"Total records matching the user's search/query parameters."},"pages":{"type":"integer","format":"uint32","description":"Total number of pages; always equals ceil(records/limit)."}},"required":["current","limit","records","pages"],"description":"Standard container for pagination metadata in paged result sets. Used by all listing endpoints in AI Shop backends; supports UI navigation and bulk data retrieval."}}},"completed":58,"total":286,"step":0,"created_at":"2025-07-23T07:08:24.953Z"},"tokenUsage":{"facade":{"aggregate":{"total":2115775,"input":{"total":2017331,"cached":0},"output":{"total":98444,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2115775,"input":{"total":2017331,"cached":0},"output":{"total":98444,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2115775,"input":{"total":2017331,"cached":0},"output":{"total":98444,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2115775,"input":{"total":2017331,"cached":0},"output":{"total":98444,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageIAiShopCustomerProfiles":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the page of customer profiles. See IPage.IPagination for full details."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCustomerProfiles"},"description":"Array of customer profile objects as defined by IAiShopCustomerProfiles."}},"required":["pagination","data"],"description":"Paginated container for customer profile objects (IAiShopCustomerProfiles). Follows standard IPage<T> convention. Includes pagination metadata (current page, limit, record count, total pages) plus an array of customer profiles for the current page. Used for advanced search and filter API responses."},"IAiShopCustomerProfiles":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique profile identity. Corresponds to ai_shop_customer_profiles.id in the database. Example: 'a69b557e-8f3a-4fa2-9c3c-596625c18454'."},"customer_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_customers.id, strictly unique for 1:1 customer/profile mapping. Represents the owning customer of this profile."},"name":{"type":"string","description":"Full customer name for address and display. This is required for all shipments and customer-facing UIs."},"preferences":{"oneOf":[{"type":"string","description":"Serialized preferences JSON. Used for AI personalization, UI configuration, and advanced analytics. Optional."},{"type":"null","description":"Serialized preferences JSON. Used for AI personalization, UI configuration, and advanced analytics. Optional."}],"description":"Serialized preferences JSON. Used for AI personalization, UI configuration, and advanced analytics. Optional."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Date of birth, if collected for compliance/age restrictions. ISO 8601 datetime. Optional."},{"type":"null","format":"date-time","description":"Date of birth, if collected for compliance/age restrictions. ISO 8601 datetime. Optional."}],"description":"Date of birth, if collected for compliance/age restrictions. ISO 8601 datetime. Optional."},"gender":{"oneOf":[{"type":"string","description":"Customer's gender, if provided, for analytics/marketing. Optional. Example: 'male', 'female', or custom domain value."},{"type":"null","description":"Customer's gender, if provided, for analytics/marketing. Optional. Example: 'male', 'female', or custom domain value."}],"description":"Customer's gender, if provided, for analytics/marketing. Optional. Example: 'male', 'female', or custom domain value."},"locale":{"oneOf":[{"type":"string","description":"Language/locale code. Example: 'en', 'ko', 'fr'. Used for localized experiences. Optional."},{"type":"null","description":"Language/locale code. Example: 'en', 'ko', 'fr'. Used for localized experiences. Optional."}],"description":"Language/locale code. Example: 'en', 'ko', 'fr'. Used for localized experiences. Optional."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Serialized JSON array of addresses, if customer supports multi-shipping. Optional. Used to simplify downstream address selection in checkout or profile."},{"type":"null","description":"Serialized JSON array of addresses, if customer supports multi-shipping. Optional. Used to simplify downstream address selection in checkout or profile."}],"description":"Serialized JSON array of addresses, if customer supports multi-shipping. Optional. Used to simplify downstream address selection in checkout or profile."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the profile was created. Used for audit/compliance. Example: '2025-07-23T10:23:18Z'."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp. For auditing and synchronization. Example: '2025-07-23T10:32:41Z'."}},"required":["id","customer_id","name","created_at","updated_at"],"description":"Customer profile entity as defined in ai_shop_customer_profiles. Contains extended customer data (name, preferences, contact info, date of birth, gender, locale, shipping addresses), audit fields (created_at, updated_at), and references to the core customer account. Strict 1:1 with ai_shop_customers. All optional fields may be null, but id, customer_id, and name are always required. Used in advanced onboarding, personalization, and checkout."},"IAiShopCustomerProfiles.ICreate":{"type":"object","properties":{"customer_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_customers.id, strictly unique for 1:1 customer/profile mapping. The owning customer for this profile."},"name":{"type":"string","description":"Full customer name for address, display, and compliance. Required."},"preferences":{"oneOf":[{"type":"string","description":"Optional serialized JSON string of customer preferences/configuration. Used for AI personalization and analytics."},{"type":"null","description":"Optional serialized JSON string of customer preferences/configuration. Used for AI personalization and analytics."}],"description":"Optional serialized JSON string of customer preferences/configuration. Used for AI personalization and analytics."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Optional date of birth for compliance/age-restricted purchases. ISO 8601."},{"type":"null","format":"date-time","description":"Optional date of birth for compliance/age-restricted purchases. ISO 8601."}],"description":"Optional date of birth for compliance/age-restricted purchases. ISO 8601."},"gender":{"oneOf":[{"type":"string","description":"Optional gender info for personalization/marketing. Example: 'male', 'female', or domain-controlled value."},{"type":"null","description":"Optional gender info for personalization/marketing. Example: 'male', 'female', or domain-controlled value."}],"description":"Optional gender info for personalization/marketing. Example: 'male', 'female', or domain-controlled value."},"locale":{"oneOf":[{"type":"string","description":"Optional locale or language preference (e.g. 'en', 'ko', 'fr')."},{"type":"null","description":"Optional locale or language preference (e.g. 'en', 'ko', 'fr')."}],"description":"Optional locale or language preference (e.g. 'en', 'ko', 'fr')."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Optional serialized JSON array of addresses for multi-shipment or address book features."},{"type":"null","description":"Optional serialized JSON array of addresses for multi-shipment or address book features."}],"description":"Optional serialized JSON array of addresses for multi-shipment or address book features."}},"required":["customer_id","name"],"description":"Schema for creating a new customer profile (ai_shop_customer_profiles). All required data must be present (customer_id, name). Optional fields include preferences, dob, gender, locale, shipping_addresses. Used for API POST/registration flows."},"IAiShopCustomerProfiles.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Full customer name, required for shipment or updated display. Cannot be null."},"preferences":{"oneOf":[{"type":"string","description":"Optional preferences, personalized settings or configuration for the user."},{"type":"null","description":"Optional preferences, personalized settings or configuration for the user."}],"description":"Optional preferences, personalized settings or configuration for the user."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Optional date of birth, for compliance or targeted experiences."},{"type":"null","format":"date-time","description":"Optional date of birth, for compliance or targeted experiences."}],"description":"Optional date of birth, for compliance or targeted experiences."},"gender":{"oneOf":[{"type":"string","description":"Optional gender field, for personalization/analytics."},{"type":"null","description":"Optional gender field, for personalization/analytics."}],"description":"Optional gender field, for personalization/analytics."},"locale":{"oneOf":[{"type":"string","description":"Optional locale field for language/region preference."},{"type":"null","description":"Optional locale field for language/region preference."}],"description":"Optional locale field for language/region preference."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Optional serialized JSON array of addresses for address book or shipment tracking."},{"type":"null","description":"Optional serialized JSON array of addresses for address book or shipment tracking."}],"description":"Optional serialized JSON array of addresses for address book or shipment tracking."}},"required":["name"],"description":"Schema for updating an existing customer profile (ai_shop_customer_profiles) by id. At minimum, name must be supplied. Optional updated fields include preferences, dob, gender, locale, shipping_addresses. Used in API PUT/PATCH for profile management."},"IAiShopSellerProfile.IRequest":{"type":"object","properties":{"seller_id":{"type":"string","format":"uuid","description":"Optional filter or search by unique seller ID."},"contact_name":{"type":"string","description":"Optional filter to match (fuzzy or exact) contact name."},"contact_email":{"type":"string","description":"Optional filter for searching by seller contact email address."},"company_phone":{"type":"string","description":"Optional search for profiles with a matching or partial business phone (contact number)."},"address":{"type":"string","description":"Optional search/filter by address string, for seller region or geolocation based queries."},"created_at__gt":{"type":"string","format":"date-time","description":"Optional filter for profiles created after this timestamp."},"created_at__lt":{"type":"string","format":"date-time","description":"Optional filter for profiles created before this timestamp."},"kyc_documents":{"type":"string","description":"Optional filter for profiles with a specific KYC document string present (advanced filtering only)."}},"required":[],"description":"Request filter/search schema for querying seller profiles (ai_shop_seller_profiles). All fields are optional. Used for PATCH/search APIs to support admin onboarding review, compliance audit, or business region filtering. All filtering is on atomic fields present in the Prisma model."},"IPageAiShopSellerProfile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the returned page of seller profiles."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopSellerProfile"},"description":"Array of seller profile objects (IAiShopSellerProfile) for the page."}},"required":["pagination","data"],"description":"Paginated results for seller profiles as defined by IPage<T> convention. The data array contains seller profile objects, and pagination holds the standard pagination metadata. Used in admin compliance, onboarding review, and directory pages."},"IAiShopSellerProfile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique seller profile identity. ai_shop_seller_profiles.id."},"seller_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_sellers.id, 1:1 mapping. The seller for this profile."},"contact_name":{"type":"string","description":"Required seller business/legal contact name. Used for onboarding, compliance, and admin display."},"contact_email":{"type":"string","description":"Required business contact email for the seller (may differ from login)."},"company_phone":{"oneOf":[{"type":"string","description":"Optional business phone for compliance, shipping, or customer support."},{"type":"null","description":"Optional business phone for compliance, shipping, or customer support."}],"description":"Optional business phone for compliance, shipping, or customer support."},"address":{"oneOf":[{"type":"string","description":"Optional legal or operational address for the seller profile."},{"type":"null","description":"Optional legal or operational address for the seller profile."}],"description":"Optional legal or operational address for the seller profile."},"kyc_documents":{"oneOf":[{"type":"string","description":"Optional serialized JSON list of attached KYC/ID files or document URIs."},{"type":"null","description":"Optional serialized JSON list of attached KYC/ID files or document URIs."}],"description":"Optional serialized JSON list of attached KYC/ID files or document URIs."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the seller profile was created (ISO8601 UTC datetime)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (for profile edit/compliance tracking)."}},"required":["id","seller_id","contact_name","contact_email","created_at","updated_at"],"description":"Seller business/profile entity as defined by ai_shop_seller_profiles. Contains business contact details, KYC documents, address, and audit fields. 1:1 to ai_shop_sellers. Used for onboarding, compliance, and admin operational review. Optional fields may be null but required contact fields are always mandatory."},"IAiShopSellerProfile.ICreate":{"type":"object","properties":{"seller_id":{"type":"string","format":"uuid","description":"FK to ai_shop_sellers.id, required. The seller entity for which the new profile is being registered."},"contact_name":{"type":"string","description":"Required legal/business contact name for compliance/audit."},"contact_email":{"type":"string","description":"Required contact/business email for onboarding, support, or compliance."},"company_phone":{"oneOf":[{"type":"string","description":"Optional business phone number for all regulatory, shipping, or contact logic."},{"type":"null","description":"Optional business phone number for all regulatory, shipping, or contact logic."}],"description":"Optional business phone number for all regulatory, shipping, or contact logic."},"address":{"oneOf":[{"type":"string","description":"Optional registered address for the seller (legal, operational, or shipping address)."},{"type":"null","description":"Optional registered address for the seller (legal, operational, or shipping address)."}],"description":"Optional registered address for the seller (legal, operational, or shipping address)."},"kyc_documents":{"oneOf":[{"type":"string","description":"Optional serialized JSON or URI for KYC/ID documents as needed for compliance."},{"type":"null","description":"Optional serialized JSON or URI for KYC/ID documents as needed for compliance."}],"description":"Optional serialized JSON or URI for KYC/ID documents as needed for compliance."}},"required":["seller_id","contact_name","contact_email"],"description":"Schema for registering a new seller profile in ai_shop_seller_profiles. Required: seller_id, contact_name, contact_email. Optional: company_phone, address, kyc_documents. Used for seller onboarding or admin-defined registration flows."},"IAiShopSellerProfile.IUpdate":{"type":"object","properties":{"contact_name":{"type":"string","description":"Edit/legal contact name of the seller profile. Cannot be null."},"contact_email":{"type":"string","description":"Edit/email address for business/operational contact. Cannot be null."},"company_phone":{"oneOf":[{"type":"string","description":"Optional new/edited business contact phone."},{"type":"null","description":"Optional new/edited business contact phone."}],"description":"Optional new/edited business contact phone."},"address":{"oneOf":[{"type":"string","description":"Optional new/edited business/legal address."},{"type":"null","description":"Optional new/edited business/legal address."}],"description":"Optional new/edited business/legal address."},"kyc_documents":{"oneOf":[{"type":"string","description":"Optional new KYC/ID documentation, serialized or URI."},{"type":"null","description":"Optional new KYC/ID documentation, serialized or URI."}],"description":"Optional new KYC/ID documentation, serialized or URI."}},"required":["contact_name","contact_email"],"description":"Schema for editing/updating a seller profile (ai_shop_seller_profiles) by id. Required: contact_name, contact_email. Optional: company_phone, address, kyc_documents. Used for admin/compliance edit flows."},"IAiShopAdminProfile.IRequest":{"type":"object","properties":{"admin_id":{"type":"string","format":"uuid","description":"Optional filter by unique admin id (UUID)."},"duty_region":{"type":"string","description":"Optional filter for compliance duty region. Fuzzy or exact."},"ip_allowlist":{"type":"string","description":"Optional filter for IP allowlist values or search for presence of a subnet."},"contact_email":{"type":"string","description":"Optional filter or exact match on admin profile contact email."},"created_at__gt":{"type":"string","format":"date-time","description":"Optional filter for retrieving admin profiles created after a specific timestamp."},"created_at__lt":{"type":"string","format":"date-time","description":"Optional filter for admin profiles created before a specific timestamp."}},"required":[],"description":"Request schema for searching/filtering admin profiles. All fields are optional for PATCH/list endpoints. Used for compliance, regional management, or admin audit dashboards. Maps directly to ai_shop_admin_profiles atomic fields."},"IPageAiShopAdminProfile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for admin profile page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopAdminProfile"},"description":"Array of admin profile objects for the requested page."}},"required":["pagination","data"],"description":"Paginated container for admin profiles following standard IPage<T> convention. Holds IPage.IPagination and data array of IAiShopAdminProfile objects. Used for admin audit dashboards, compliance tools, or advanced admin profile search."},"IAiShopAdminProfile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the admin profile (ai_shop_admin_profiles.id)."},"admin_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_admins.id, 1:1 mapping to admin user."},"duty_region":{"oneOf":[{"type":"string","description":"Optional compliance jurisdiction/region assigned to this admin. Used for regulatory scope, localization logic, or vertical market boundaries."},{"type":"null","description":"Optional compliance jurisdiction/region assigned to this admin. Used for regulatory scope, localization logic, or vertical market boundaries."}],"description":"Optional compliance jurisdiction/region assigned to this admin. Used for regulatory scope, localization logic, or vertical market boundaries."},"ip_allowlist":{"oneOf":[{"type":"string","description":"Optional serialized JSON array or single CIDR/IP(s) representing network allowlist for admin console access."},{"type":"null","description":"Optional serialized JSON array or single CIDR/IP(s) representing network allowlist for admin console access."}],"description":"Optional serialized JSON array or single CIDR/IP(s) representing network allowlist for admin console access."},"contact_email":{"oneOf":[{"type":"string","description":"Optional backup/escalation or alternate contact email for admin use or compliance escalation."},{"type":"null","description":"Optional backup/escalation or alternate contact email for admin use or compliance escalation."}],"description":"Optional backup/escalation or alternate contact email for admin use or compliance escalation."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when profile was created (ISO8601 UTC datetime)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when profile was last changed for audit."}},"required":["id","admin_id","created_at","updated_at"],"description":"Admin user profile entity as described by ai_shop_admin_profiles. Contains admin compliance jurisdiction, IP whitelisting (for console or sensitive operations), escalation email, and system audit timestamps. Used for supporting compliance division of roles, audit logging, and high security admin flows."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number. Must be >= 1."},"limit":{"type":"integer","description":"Maximum items per page. Defaults to 100 if client does not specify."},"records":{"type":"integer","description":"Total number of records in the database for this search/filter."},"pages":{"type":"integer","description":"Total pages available for this result. Calculated as ceiling(records/limit)."}},"required":["current","limit","records","pages"],"description":"Pagination metadata for paginated list containers (IPage<T>). Contains information about the pagination state: current page, items per page (limit), total records, and calculated total pages available. Used in all paginated search and list endpoints."}}},"completed":70,"total":286,"step":0,"created_at":"2025-07-23T07:08:25.766Z"},"tokenUsage":{"facade":{"aggregate":{"total":2251605,"input":{"total":2149985,"cached":0},"output":{"total":101620,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2251605,"input":{"total":2149985,"cached":0},"output":{"total":101620,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2251605,"input":{"total":2149985,"cached":0},"output":{"total":101620,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2251605,"input":{"total":2149985,"cached":0},"output":{"total":101620,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopCustomers.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"이 필드는 ai_shop_customers 테이블에 정의된 고객의 이메일 주소로, 고유한 로그인 및 연락처 역할을 합니다. 예시: `user@example.com`.\n\n필수 값이며, 고객의 주 알림 및 인증 식별자로 사용되므로 정확한 형식을 갖추어야 합니다. 플랫폼 고유성 제약(@@unique)도 적용됩니다."},"phone":{"oneOf":[{"type":"string","description":"고객의 전화번호 필드로, 문자 메시지 알림 또는 2단계 인증(MFA)에 활용됩니다. 선택 사항이며, 존재하는 경우 국제 표준 포맷(E.164 등)이어야 합니다. 예: `+821012345678`.\n\n플랫폼 정책상 SMS 인증, 고객센터 연락 등에 사용됩니다."},{"type":"null","description":"고객의 전화번호 필드로, 문자 메시지 알림 또는 2단계 인증(MFA)에 활용됩니다. 선택 사항이며, 존재하는 경우 국제 표준 포맷(E.164 등)이어야 합니다. 예: `+821012345678`.\n\n플랫폼 정책상 SMS 인증, 고객센터 연락 등에 사용됩니다."}],"description":"고객의 전화번호 필드로, 문자 메시지 알림 또는 2단계 인증(MFA)에 활용됩니다. 선택 사항이며, 존재하는 경우 국제 표준 포맷(E.164 등)이어야 합니다. 예: `+821012345678`.\n\n플랫폼 정책상 SMS 인증, 고객센터 연락 등에 사용됩니다."},"status":{"type":"string","description":"고객의 계정 상태를 나타내는 문자열(enum 성격, 'active', 'withdrawn', 'suspended' 등 관리 시스템에 의해 제어).\n\n계정이 활성(로그인 가능), 탈퇴, 혹은 정지 상태임을 관리하는 데 사용됩니다."},"created_at":{"type":"string","format":"date-time","description":"이 필드는 고객 계정이 생성된 시간(타임스탬프)입니다. 자체 생성 필드로, 모든 변경·생성 이력 기록 및 준법/감사를 위함입니다."},"updated_at":{"type":"string","format":"date-time","description":"고객 계정의 최신 수정 시각(타임스탬프)입니다. 실시간 동기화 및 변경 추적(Audit Trail)에 사용됩니다."}},"required":["email","status","created_at","updated_at"],"description":"AI Shop 고객 신규 등록용 요청 DTO.\n\n이 스키마는 고객 등록 시 필수로 요구되는 필드(email, status 등) 및 선택 가능 필드(phone 등)를 정의합니다. email의 고유성, 상태 enum 패턴, 시간 필드의 감사 목적 등 각 필드는 DB 컬럼 및 요구사양과 1:1로 설명됩니다.\n\n사업적 측면에서는 신규 가입, 관리 시스템 프로비저닝, 외부 OAuth 인증 연동 등에 활용되어야 합니다."},"IAiShopCustomers.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"고객 이메일을 업데이트합니다. 문자 형식과 고유 제약을 따릅니다."},"phone":{"oneOf":[{"type":"string","description":"고객 전화번호 수정 가능. 없으면 null로 설정합니다."},{"type":"null","description":"고객 전화번호 수정 가능. 없으면 null로 설정합니다."}],"description":"고객 전화번호 수정 가능. 없으면 null로 설정합니다."},"status":{"type":"string","description":"계정 상태 필드 (예: 'active', 'withdrawn', 'suspended')."},"created_at":{"type":"string","format":"date-time","description":"계정 생성 시각으로, 일반적으로 변경되지 않지만 시스템 간 동기화 시 포함될 수 있습니다."},"updated_at":{"type":"string","format":"date-time","description":"수정 시각으로, 값을 갱신해야 합니다."}},"required":["email","status","created_at","updated_at"],"description":"AI Shop 고객 정보 갱신(전체 교체) 요청 DTO.\n\n이 스키마는 고객 정보 수정 시 사용됩니다. email 등 주요 필드는 항상 존재하고, phone 등은 null 허용. 상태 변경 로직과 최신화 관리에 활용됩니다. 모든 값은 Prisma 스키마와 일치해야 합니다.\n\n주로 관리자, 고객서비스 담당자, 개인정보 API에서 사용할 수 있습니다."},"IAiShopSellers.IRequest":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"판매자 고유 식별자(UUID). 단건 검색이나 리스트 페이징 시 식별용."},{"type":"null","format":"uuid","description":"판매자 고유 식별자(UUID). 단건 검색이나 리스트 페이징 시 식별용."}],"description":"판매자 고유 식별자(UUID). 단건 검색이나 리스트 페이징 시 식별용."},"business_name":{"oneOf":[{"type":"string","description":"판매자 공식 사업자 또는 상호명. 마켓노출, 송장, 관리자조회 등 이용."},{"type":"null","description":"판매자 공식 사업자 또는 상호명. 마켓노출, 송장, 관리자조회 등 이용."}],"description":"판매자 공식 사업자 또는 상호명. 마켓노출, 송장, 관리자조회 등 이용."},"business_registration_number":{"oneOf":[{"type":"string","description":"사업자등록번호. 법적 고유성(유니크) 기준이며, KYC/계정심사 등에 활용."},{"type":"null","description":"사업자등록번호. 법적 고유성(유니크) 기준이며, KYC/계정심사 등에 활용."}],"description":"사업자등록번호. 법적 고유성(유니크) 기준이며, KYC/계정심사 등에 활용."},"status":{"oneOf":[{"type":"string","description":"판매자 계정의 상태. 인증, 대기, 정지 등 관리 대장용. Enum은 시스템 레이어에서 관리."},{"type":"null","description":"판매자 계정의 상태. 인증, 대기, 정지 등 관리 대장용. Enum은 시스템 레이어에서 관리."}],"description":"판매자 계정의 상태. 인증, 대기, 정지 등 관리 대장용. Enum은 시스템 레이어에서 관리."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자 심사 통과 시점. 승인완료된 판매자만 노출 등 정책에 따라 사용."},{"type":"null","format":"date-time","description":"관리자 심사 통과 시점. 승인완료된 판매자만 노출 등 정책에 따라 사용."}],"description":"관리자 심사 통과 시점. 승인완료된 판매자만 노출 등 정책에 따라 사용."},"created_at":{"oneOf":[{"type":"string","format":"date-time","description":"판매자 레코드 생성 시각. 가입, 심사 이슈, 감사 기록에 참고."},{"type":"null","format":"date-time","description":"판매자 레코드 생성 시각. 가입, 심사 이슈, 감사 기록에 참고."}],"description":"판매자 레코드 생성 시각. 가입, 심사 이슈, 감사 기록에 참고."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"판매자 정보 최근 갱신 시각. 변경 요청 트래킹 등에 사용."},{"type":"null","format":"date-time","description":"판매자 정보 최근 갱신 시각. 변경 요청 트래킹 등에 사용."}],"description":"판매자 정보 최근 갱신 시각. 변경 요청 트래킹 등에 사용."}},"description":"판매자 목록을 검색·필터링·페이지네이션할 때 입력하는 요청 파라미터 DTO입니다.\n\n각 property는 ai_shop_sellers 테이블 컬럼을 엄격히 반영합니다. 모든 값은 null 허용(AND/OR) 조건 검색 지원을 위함입니다.\n\n사업적 예시: 판매자 관리 화면, 심사 증빙, 관리자 대량 검색 등에서 사용됩니다.","required":[]},"IPageIAiShopSellers":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopSellers"}}},"required":["pagination","data"],"description":"판매자 목록의 페이지네이션 결과 컨테이너.\n\npagination 속성은 현재/전체 페이지 및 레코드 총계 등 페이지 정보 제공. data는 aiShopSellers 배열(데이터 레코드)로 반환됨.\n\n이 구조는 List API의 공통 페이징 패턴을 따르며 serializer와 UI 전시 모두에 직접 쓰입니다."},"aiShopSellers":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"판매자 고유 PK(UUID). ai_shop_sellers 테이블의 id 칼럼."},"business_name":{"type":"string","description":"공식 상호명. 송장, 쇼핑몰 Bakcoffice 등 공개용 식별자."},"business_registration_number":{"type":"string","description":"사업자등록번호 (대한민국 기준 10자리 숫자 등, 외국도 형태 상이 가능). KYC/제휴계정 검증, 유니크 제약."},"status":{"type":"string","description":"판매자 상태. 예시: 'onboarding', 'active', 'suspended'. Enum 패턴은 서비스 계층에서 적용."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자에 의해 승인된 시각(승인 전이면 null)."},{"type":"null","format":"date-time","description":"관리자에 의해 승인된 시각(승인 전이면 null)."}],"description":"관리자에 의해 승인된 시각(승인 전이면 null)."},"created_at":{"type":"string","format":"date-time","description":"가입/레코드 생성 시간."},"updated_at":{"type":"string","format":"date-time","description":"최근 정보 갱신 시각."}},"required":["id","business_name","business_registration_number","status","created_at","updated_at"],"description":"판매자 엔터티 AI Shop DB 스키마 정의에 따른 상세 객체.\n\n실제 DB Row와 1:1로 맵핑되는 Read/Write용. KYC절차에서 필수 정보, 제휴 입점/광고주 관리에서 주요 식별자 역할.\n\n상태(status) 및 승인일(approved_at)로 검수 여부 판단 가능."},"aiShopSellers.ICreate":{"type":"object","properties":{"business_name":{"type":"string","description":"판매자(상점, 사업체) 공식 상호. 반드시 필요, DB/CD 정책상 고유."},"business_registration_number":{"type":"string","description":"사업자등록증에 명시된 공식번호(일반적으로 10자리). 고유 제약이 반드시 걸려 있음."},"status":{"type":"string","description":"계정상태 필드. 'onboarding', 'active', 'suspended' 등 Enum 패턴을 서비스단에서 관리. 최초 등록 시 'onboarding' 또는 'pending' 사용 우려됨."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자 승인 시각. 미승인 판매자일 경우 null. 선택 입력."},{"type":"null","format":"date-time","description":"관리자 승인 시각. 미승인 판매자일 경우 null. 선택 입력."}],"description":"관리자 승인 시각. 미승인 판매자일 경우 null. 선택 입력."}},"required":["business_name","business_registration_number","status"],"description":"ai_shop_sellers 신규 입력 DTO. 판매자 입점(신규등록) 시 필요한 필수 속성만 작성하도록 설계됨.\n\n사업자등록번호, 상호 등은 유니크/규제 제약 존재. approved_at은 최초 등록 시 일반적으로 null 상태."},"aiShopSellers.IUpdate":{"type":"object","properties":{"business_name":{"type":"string","description":"공식 상호명. 수정 시 중복 및 고유성 정책 체크 필요."},"business_registration_number":{"type":"string","description":"사업자등록번호. 수정 시 기존 등록제한 등 비즈니스 룰 체크."},"status":{"type":"string","description":"계정 현황 필드. Enum 패턴: onboarding, active, suspended 등. 상태이관(승인,정지,활성화 등) 단건 수정 허용."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"승인 시각. 미승인 → 승인 상태 전환 시만 값 부여, 그 외 null 유지 권장."},{"type":"null","format":"date-time","description":"승인 시각. 미승인 → 승인 상태 전환 시만 값 부여, 그 외 null 유지 권장."}],"description":"승인 시각. 미승인 → 승인 상태 전환 시만 값 부여, 그 외 null 유지 권장."}},"required":["business_name","business_registration_number","status"],"description":"판매자 정보 전체 교체용(최신화) 업데이트 DTO.\n\n필수 속성에 대해 AI Shop 요구사항에 맞추어 Prisma 컬럼 스키마와 일치하는 구조임.\n\n관리자 승인(날짜), 상태 케이스 상태 전환 시 각별히 비즈니스 정책과 연동하여 사용."},"aiShopAdmins.IRequest":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"관리자 고유 ID(UUID). 개별 단건 조회/필터링용."},{"type":"null","format":"uuid","description":"관리자 고유 ID(UUID). 개별 단건 조회/필터링용."}],"description":"관리자 고유 ID(UUID). 개별 단건 조회/필터링용."},"username":{"oneOf":[{"type":"string","description":"관리자 계정 로그인/감사용 ID. 목록검색·권한자 식별 등에 활용."},{"type":"null","description":"관리자 계정 로그인/감사용 ID. 목록검색·권한자 식별 등에 활용."}],"description":"관리자 계정 로그인/감사용 ID. 목록검색·권한자 식별 등에 활용."},"status":{"oneOf":[{"type":"string","description":"관리자 계정의 상태(활성/정지/대기 등 시스템 레이어 enum 패턴)."},{"type":"null","description":"관리자 계정의 상태(활성/정지/대기 등 시스템 레이어 enum 패턴)."}],"description":"관리자 계정의 상태(활성/정지/대기 등 시스템 레이어 enum 패턴)."},"created_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자 레코드 생성일(감사/화이트리스트 등에 필요)."},{"type":"null","format":"date-time","description":"관리자 레코드 생성일(감사/화이트리스트 등에 필요)."}],"description":"관리자 레코드 생성일(감사/화이트리스트 등에 필요)."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"최근 정보 변경 시각. 동기화 감사 트래킹에 사용."},{"type":"null","format":"date-time","description":"최근 정보 변경 시각. 동기화 감사 트래킹에 사용."}],"description":"최근 정보 변경 시각. 동기화 감사 트래킹에 사용."}},"description":"관리자(admin) 목록 조회·검색·페이징/필터용 요청 객체 DTO입니다.\n\n각 필드는 Prisma ai_shop_admins 테이블 컬럼을 반영하며 null 허용(AND/OR 조건검색). 관리자 계정 관리/운영 대시보드, 감사 로깅에 주로 사용.","required":[]},"IPageaiShopAdmins":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopAdmins"}}},"required":["pagination","data"],"description":"관리자 목록의 페이지네이션 결과 컨테이너.\n\npagination엔 페이지/레코드 집계 정보가 담기고, data엔 aiShopAdmins 개별 레코드 데이터가 배열로 전달됨.\n\n전체/검색 결과 페이징 UX뿐 아니라 통계 관리자 보고서에도 사용 가능."},"aiShopAdmins":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"관리자 아이디(PK, UUID), ai_shop_admins DB 기준."},"username":{"type":"string","description":"로그인 및 트래킹용 관리자 계정명. 유니크 강제(ID/PW 업무)."},"status":{"type":"string","description":"관리자 계정 상태로, 예: 'active', 'suspended', 'pending' 등 Enum정책은 서비스 레이어 관리."},"created_at":{"type":"string","format":"date-time","description":"계정 생성 시각, 감사지표 등 활용."},"updated_at":{"type":"string","format":"date-time","description":"마지막 레코드 업데이트 시각, 변경 트래킹/통합감사에 사용."}},"required":["id","username","status","created_at","updated_at"],"description":"관리자(Admin) 엔터티 DB Row 정의에 따른 상세 데이터 객체.\n\nAI Shop 컨솔/감사 모듈에서 사용하는 '관리자' 계정 정보로, 각 컬럼 의미/정책/운영 목적에 맞는 속성으로 해석해야 합니다."},"aiShopAdmins.ICreate":{"type":"object","properties":{"username":{"type":"string","description":"신규 관리자 계정 ID. 시스템 전체 유니크 제약을 통과해야 합니다."},"status":{"type":"string","description":"계정 생성 당시의 상태. 일반적으로 'pending','active','suspended' 중 하나로 시작."}},"required":["username","status"],"description":"관리자 신규 등록 시 필요한 최소 정보 입력 DTO.\n\nusername는 고유해야 하며, status는 Enum성 패턴을 사전정의해 사용합니다."},"aiShopAdmins.IUpdate":{"type":"object","properties":{"username":{"type":"string","description":"계정명(로그인 ID), 유니크 제약(NSG Unique ID for 관리/감사/로그)."},"status":{"type":"string","description":"관리자 계정 상태(enum: 'active', 'pending', 'suspended' 등)."}},"required":["username","status"],"description":"관리자 정보 전체 교체(수정)용 DTO. username/status 모두 기입 필요하며, 일부 필드만 업데이트시에도 이 구조 준수."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"현 페이지 번호(1-base)."},"limit":{"type":"integer","format":"uint32","description":"페이지당 반환 레코드 개수.\n\n기본값 100."},"records":{"type":"integer","format":"uint32","description":"데이터베이스 내 총 레코드 개수."},"pages":{"type":"integer","format":"uint32","description":"전체 페이지 개수.\n\nrecords/limit를 올림한 결과."}},"required":["current","limit","records","pages"],"description":"페이지네이션 정보 오브젝트.\n\n현재페이지, 페이지 당 레코드수, 전체 레코드 및 전체 페이지 정보를 제공하여, 리스트 UX 또는 서버페이지네이션 시 활용."}}},"completed":82,"total":286,"step":0,"created_at":"2025-07-23T07:08:26.542Z"},"tokenUsage":{"facade":{"aggregate":{"total":2387468,"input":{"total":2282628,"cached":0},"output":{"total":104840,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2387468,"input":{"total":2282628,"cached":0},"output":{"total":104840,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2387468,"input":{"total":2282628,"cached":0},"output":{"total":104840,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2387468,"input":{"total":2282628,"cached":0},"output":{"total":104840,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageAiShopReviewModerations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the review moderation list.\n\nContains the current page, limit, total record count, and total page count for the paginated review moderation query."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReviewModerations"},"description":"List of ai_shop_review_moderations records for the current page.\n\nEach record contains the detailed moderation audit data for a single review moderation operation."}},"required":["pagination","data"],"description":"A paginated result set for review moderation actions (ai_shop_review_moderations).\n\nThis result contains both the list of moderation actions for the current page and the encapsulated pagination metadata.\n\nThis schema enables consistent paginated access for admin/moderator tools and audit reporting on review moderation events."},"IAiShopReviewModerations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the review moderation action.\n\nAuto-generated unique identifier for each moderation record, used to reference exact audit entries in the moderation flow.\n\nReferenced from the ai_shop_review_moderations.id column."},"ai_shop_review_id":{"type":"string","format":"uuid","description":"Reference to the target review being moderated (foreign key to ai_shop_reviews).\n\nThis field links the moderation action to the specific product review it was taken against.\n\nMatches the ai_shop_review_moderations.ai_shop_review_id column."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"Reference to the admin user who performed the moderation action (foreign key to ai_shop_admins).\n\nThis records which administrator acted on the review (for compliance and audit).\n\nMatches the ai_shop_review_moderations.ai_shop_admin_id column."},"action":{"type":"string","description":"Moderation action taken: 'approve', 'reject', or 'flag'.\n\nThis string captures the result/outcome of the moderation operation.\n\nCorresponds to ai_shop_review_moderations.action."},"reason":{"type":"string","description":"Reason or justification for the moderation action.\n\nMay include free-text explanation for the audit trail, such as 'Spam', 'Offensive Language', or policy reference.\n\nCorresponds to ai_shop_review_moderations.reason."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the moderation action occurred.\n\nIndicates the audit event time for compliance records.\n\nMatches ai_shop_review_moderations.created_at."}},"required":["id","ai_shop_review_id","ai_shop_admin_id","action","reason","created_at"],"description":"Review moderation action entity for ai_shop_review_moderations.\n\nRepresents a single moderation event (approve, reject, flag, etc) executed by an admin on a customer review.\n\nAuditable and immutable for compliance. Used to record moderation workflow, trace history, and compliance response to flagged or disputed reviews."},"IAiShopReviewModerations.ICreate":{"type":"object","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"ID of the review to be moderated (foreign key to ai_shop_reviews).\n\nDetermines which review the moderation action targets.\n\nMust match an existing ai_shop_reviews.id value."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"ID of the administrator taking the moderation action (foreign key to ai_shop_admins).\n\nIndicates which admin initiated the moderation event.\n\nMust match an existing ai_shop_admins.id value."},"action":{"type":"string","description":"Moderation action to apply: 'approve', 'reject', or 'flag'.\n\nDetermines the moderation state to set for the review.\n\nCommon values include: 'approve', 'reject', 'flag'."},"reason":{"type":"string","description":"Required justification for the moderation action, referencing the business/compliance reason or free text.\n\nCorresponds to ai_shop_review_moderations.reason column."}},"required":["ai_shop_review_id","ai_shop_admin_id","action","reason"],"description":"Payload to create a review moderation action for ai_shop_review_moderations.\n\nRepresents an auditable action by an administrator to approve, flag, or reject a specific review with required justification (reason).\n\nUsed for admin system, compliance logic, or moderation automation integrations."},"IAiShopReviewModerations.IUpdate":{"type":"object","properties":{"action":{"type":"string","description":"Updated moderation action value, such as 'approve', 'reject', or 'flag'.\n\nMust be consistent with ai_shop_review_moderations.action requirements."},"reason":{"type":"string","description":"Updated moderation reason or justification, corresponding to the new moderation decision.\n\nMay be used to append further explanation to the moderation action."}},"required":["action","reason"],"description":"Update payload for review moderation actions (ai_shop_review_moderations).\n\nThis object allows an admin to correct, annotate, or update the moderation decision and justification for an existing moderation audit record."},"IAiShopReviewRatings.IRequest":{"type":"object","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"ID of the review for helpfulness voting (foreign key to ai_shop_reviews).\n\nUsed to filter or select ratings relating to a specific product review."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"ID of the customer casting the helpfulness vote (foreign key to ai_shop_customers).\n\nUsed to filter for helpfulness votes from or by a particular customer."},"helpful":{"type":"boolean","description":"Whether the helpfulness vote is an upvote (true) or a downvote (false).\n\nUsed to filter upvoted or downvoted review ratings."},"created_at":{"type":"string","format":"date-time","description":"Date/time when the vote was cast.\n\nMay be used for filtering by creation window in search APIs."}},"required":[],"description":"Filter/search request schema for paginated listing of review helpfulness ratings in ai_shop_review_ratings.\n\nUsed in analytics dashboards and admin tools to search, filter, or sort customer helpfulness voting records."},"IPageAiShopReviewRatings":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for review ratings list.\n\nIncludes paging state, total count, and current page for the review helpfulness rating search."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReviewRatings"},"description":"Array of ai_shop_review_ratings records listed for this page.\n\nEach object details one customer's upvote/downvote on a specific product review."}},"required":["pagination","data"],"description":"Paginated result set for review helpfulness ratings (ai_shop_review_ratings).\n\nReturned by query/search endpoints to provide both current page of results and detailed pagination metadata."},"IAiShopReviewRatings":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for a review rating record.\n\nMaps to ai_shop_review_ratings.id—identifies one helpfulness vote."},"ai_shop_review_id":{"type":"string","format":"uuid","description":"Product review being rated (foreign key to ai_shop_reviews).\n\nLinks vote to specific customer review.\n\nMatches ai_shop_review_ratings.ai_shop_review_id."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer providing the upvote/downvote (foreign key to ai_shop_customers).\n\nSignifies who rated the review as helpful or not."},"helpful":{"type":"boolean","description":"True if the vote is an upvote (helpful), false if downvote (not helpful).\n\nAtomic boolean for analytics, fraud prevention, and review ranking.\n\nCorresponds to ai_shop_review_ratings.helpful."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when this rating was cast (audit/replay support).\n\nPopulated from ai_shop_review_ratings.created_at."}},"required":["id","ai_shop_review_id","ai_shop_customer_id","helpful","created_at"],"description":"atomic record for a single customer review helpfulness vote (ai_shop_review_ratings).\n\nThis entity records a customer marking a review as helpful (true/upvote) or not helpful (false/downvote). Used for engagement metrics, fraud/scam detection, and powering product feedback analytics.\n\nStrictly atomic: One row per customer/review pair; multiple votes result in updating or overwriting the current record."},"IAiShopReviewRatings.ICreate":{"type":"object","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"The ID of the review being rated (foreign key to ai_shop_reviews).\n\nDetermines the review for which the helpfulness vote is being registered."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"The ID of the customer providing the helpfulness vote (foreign key to ai_shop_customers).\n\nSpecifies which user cast the upvote/downvote."},"helpful":{"type":"boolean","description":"Whether this is a positive (upvote, true) or negative (downvote, false) rating for the review.\n\nCorresponds to ai_shop_review_ratings.helpful."}},"required":["ai_shop_review_id","ai_shop_customer_id","helpful"],"description":"Creation payload for adding a review helpfulness rating (ai_shop_review_ratings).\n\nRepresents a customer marking a review as either helpful or unhelpful."},"IAiShopReviewRatings.IUpdate":{"type":"object","properties":{"helpful":{"type":"boolean","description":"Updated boolean value for the helpfulness vote.\n\nSet to true for upvote/helpful or false for downvote/not helpful.\n\nCorresponds to ai_shop_review_ratings.helpful."}},"required":["helpful"],"description":"Update schema for review helpfulness rating (ai_shop_review_ratings).\n\nAllows a customer to change their previous helpful/unhelpful vote on a review."},"IAiShopInquiryModerations.IRequest":{"type":"object","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"The inquiry being moderated (foreign key to ai_shop_inquiries).\n\nUsed to filter results for moderation logs of a single inquiry."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"The administrator performing the moderation action (foreign key to ai_shop_admins).\n\nUsed to filter moderation actions by responsible moderator."},"action":{"type":"string","description":"Type of moderation action performed: 'approve', 'flag', or 'delete'.\n\nUsed to filter by moderation type."},"reason":{"type":"string","description":"Business/compliance explanation for the moderation decision.\n\nMay be used in search for logs by cause or outcome."},"created_at":{"type":"string","format":"date-time","description":"Date/time when the moderation action was performed.\n\nSupports search or reporting use cases for moderation event logs."}},"required":[],"description":"Filter/search schema for paginated listing of inquiry moderation logs (ai_shop_inquiry_moderations).\n\nUsed in admin UI, compliance search, or moderation dashboards."},"IPageAiShopInquiryModerations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging state information for the inquiry moderation log list.\n\nProvides current page number, record limit, total record count, and page count."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInquiryModerations"},"description":"Page of inquiry moderation actions (ai_shop_inquiry_moderations) matching the search query, for the current result set."}},"required":["pagination","data"],"description":"Paginated result structure for inquiry moderation logs (ai_shop_inquiry_moderations).\n\nUsed by compliance/Audit dashboards to present lists or search results for moderation actions across inquiries."},"IAiShopInquiryModerations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID for this moderation log entry.\n\nUnambiguously identifies the moderation action in system records."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"The inquiry (ai_shop_inquiries) being moderated.\n\nIndicates which inquiry was the subject of the moderation process."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"Reference to the administrator (ai_shop_admins) who performed the moderation.\n\nEvery moderation event logs the actor for compliance.\n\nMaps to ai_shop_inquiry_moderations.ai_shop_admin_id."},"action":{"type":"string","description":"Type of moderation action taken (e.g., 'approve', 'flag', 'delete').\n\nThis field captures the moderation decision made on the inquiry."},"reason":{"type":"string","description":"Moderator-supplied explanation or cause for moderation.\n\nUsed in audit trails to provide compliance rationale.\n\nMatches ai_shop_inquiry_moderations.reason."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of the moderation event (audit trail column).\n\nPopulated by system on event creation.\n\nMaps to ai_shop_inquiry_moderations.created_at."}},"required":["id","ai_shop_inquiry_id","ai_shop_admin_id","action","reason","created_at"],"description":"Entity for a single inquiry moderation event (ai_shop_inquiry_moderations).\n\nCaptures a single audit record of an admin moderation action on a customer inquiry, including actor, action, explanation, and event timestamp."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"Current page number for pagination."},"limit":{"type":"integer","format":"uint32","description":"Maximum number of records per page.\n\n@default 100"},"records":{"type":"integer","format":"uint32","description":"Total number of records in the result set (for all pages)."},"pages":{"type":"integer","format":"uint32","description":"Total number of pages in the result set (records divided by limit, ceiling)."}},"required":["current","limit","records","pages"],"description":"Page information object for paginated result containers.\n\nUsed for all entities in AI Shop that support paginated listing APIs."}}},"completed":94,"total":286,"step":0,"created_at":"2025-07-23T07:08:29.031Z"},"tokenUsage":{"facade":{"aggregate":{"total":2523212,"input":{"total":2415288,"cached":0},"output":{"total":107924,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2523212,"input":{"total":2415288,"cached":0},"output":{"total":107924,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2523212,"input":{"total":2415288,"cached":0},"output":{"total":107924,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2523212,"input":{"total":2415288,"cached":0},"output":{"total":107924,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"aiShopOrderDeliveries.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"The unique ID of the related order. Foreign key referencing ai_shop_orders.id. Used to associate this delivery with a specific order."},"ai_shop_order_item_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional reference to the order item if this delivery is not for the whole order. Foreign key referencing ai_shop_order_items.id. Nullable; null means full-order delivery."},{"type":"null","format":"uuid","description":"Optional reference to the order item if this delivery is not for the whole order. Foreign key referencing ai_shop_order_items.id. Nullable; null means full-order delivery."}],"description":"Optional reference to the order item if this delivery is not for the whole order. Foreign key referencing ai_shop_order_items.id. Nullable; null means full-order delivery."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"The unique ID of the seller responsible for this delivery. Foreign key referencing ai_shop_sellers.id."},"delivery_status":{"type":"string","description":"Status of the delivery. Business logic may support values like 'pending', 'ready', 'shipped', 'delivered', 'returned'. Check enum or app constraints for exact permitted values."},"tracking_number":{"oneOf":[{"type":"string","description":"Tracking number for the parcel or shipment, if available. Nullable; may not be known at all stages."},{"type":"null","description":"Tracking number for the parcel or shipment, if available. Nullable; may not be known at all stages."}],"description":"Tracking number for the parcel or shipment, if available. Nullable; may not be known at all stages."},"shipper_code":{"type":"string","description":"Business courier code for the shipping provider. Example: 'CJ', 'FEDEX', etc."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Date-time when order/parcel was shipped. Nullable if not yet shipped."},{"type":"null","format":"date-time","description":"Date-time when order/parcel was shipped. Nullable if not yet shipped."}],"description":"Date-time when order/parcel was shipped. Nullable if not yet shipped."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Date-time when order was delivered. Nullable if not yet delivered."},{"type":"null","format":"date-time","description":"Date-time when order was delivered. Nullable if not yet delivered."}],"description":"Date-time when order was delivered. Nullable if not yet delivered."},"seller_memo":{"oneOf":[{"type":"string","description":"Optional memo/note for the seller on delivery. Nullable; used for internal comments."},{"type":"null","description":"Optional memo/note for the seller on delivery. Nullable; used for internal comments."}],"description":"Optional memo/note for the seller on delivery. Nullable; used for internal comments."},"admin_note":{"oneOf":[{"type":"string","description":"Optional internal admin note for auditing, troubleshooting, or workflow explanation. Nullable; may not be set."},{"type":"null","description":"Optional internal admin note for auditing, troubleshooting, or workflow explanation. Nullable; may not be set."}],"description":"Optional internal admin note for auditing, troubleshooting, or workflow explanation. Nullable; may not be set."}},"required":["ai_shop_order_id","ai_shop_seller_id","delivery_status","shipper_code"],"description":"Update schema for an order delivery entry (ai_shop_order_deliveries). Updates can be made to status, memo fields, tracking number, timestamps, as well as seller or order/item references. All fields exactly match database columns, and nullability reflects 3NF, audit, and business process granularity. Refer to the Orders schema documentation for business context and constraints. Admin and seller notes are for internal purposes only. Provides compliance for logistics workflows, audit trails, and external integrations."},"aiShopCoupons.IRequest":{"type":"object","properties":{"search":{"oneOf":[{"type":"string","description":"Full text or fuzzy search parameter across coupon code, description, or other text fields."},{"type":"null","description":"Full text or fuzzy search parameter across coupon code, description, or other text fields."}],"description":"Full text or fuzzy search parameter across coupon code, description, or other text fields."},"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter to restrict list to a specific promotion campaign by its UUID."},{"type":"null","format":"uuid","description":"Optional filter to restrict list to a specific promotion campaign by its UUID."}],"description":"Optional filter to restrict list to a specific promotion campaign by its UUID."},"code":{"oneOf":[{"type":"string","description":"Filter to coupons matching this exact code."},{"type":"null","description":"Filter to coupons matching this exact code."}],"description":"Filter to coupons matching this exact code."},"type":{"oneOf":[{"type":"string","description":"Filter for coupon type (e.g., 'single_use','multi_use','stackable','exclusive')."},{"type":"null","description":"Filter for coupon type (e.g., 'single_use','multi_use','stackable','exclusive')."}],"description":"Filter for coupon type (e.g., 'single_use','multi_use','stackable','exclusive')."},"is_active":{"oneOf":[{"type":"boolean","description":"Optionally filter by whether the coupon is currently active or not."},{"type":"null","description":"Optionally filter by whether the coupon is currently active or not."}],"description":"Optionally filter by whether the coupon is currently active or not."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (starts at 1)."},{"type":"null","description":"Page number for pagination (starts at 1)."}],"description":"Page number for pagination (starts at 1)."},"limit":{"oneOf":[{"type":"integer","description":"Number of results per page for pagination."},{"type":"null","description":"Number of results per page for pagination."}],"description":"Number of results per page for pagination."}},"required":[],"description":"Request schema for searching/filtering/paginating coupon records as defined in ai_shop_coupons. All fields are optional. Used for search UX, admin panels, campaign overviews, and reporting as required by Discount and Payment System requirements."},"IPageAiShopCoupons":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCoupons"}}},"required":["pagination","data"],"description":"Paginated response schema for coupon searches/listing in the AI Shop system. Includes pagination metadata and an array of coupon records. Applies to discount, campaign, or code management as described in requirements and database model."},"aiShopCoupons":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique coupon identifier (primary key in ai_shop_coupons)."},"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"Promotion or campaign ID (optional, if part of a campaign)."},{"type":"null","format":"uuid","description":"Promotion or campaign ID (optional, if part of a campaign)."}],"description":"Promotion or campaign ID (optional, if part of a campaign)."},"code":{"type":"string","description":"Unique coupon code string. Used for redemption and tracking. Imposes strict uniqueness at database level."},"type":{"type":"string","description":"Coupon type string. Example values: 'single_use', 'multi_use', 'stackable', 'exclusive'."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable explanation for the coupon. Nullable, assists UX and reporting."},{"type":"null","description":"Optional human-readable explanation for the coupon. Nullable, assists UX and reporting."}],"description":"Optional human-readable explanation for the coupon. Nullable, assists UX and reporting."},"valid_from":{"type":"string","format":"date-time","description":"Start time of coupon validity period, in ISO 8601 date-time format."},"valid_until":{"type":"string","format":"date-time","description":"End time of coupon validity period, in ISO 8601 date-time format. After this, coupon is invalid."},"max_uses":{"oneOf":[{"type":"integer","description":"Maximum total number of uses before expiration. Nullable if unlimited."},{"type":"null","description":"Maximum total number of uses before expiration. Nullable if unlimited."}],"description":"Maximum total number of uses before expiration. Nullable if unlimited."},"max_uses_per_customer":{"oneOf":[{"type":"integer","description":"Maximum uses per individual customer. Nullable for unlimited."},{"type":"null","description":"Maximum uses per individual customer. Nullable for unlimited."}],"description":"Maximum uses per individual customer. Nullable for unlimited."},"min_purchase_amount":{"oneOf":[{"type":"number","description":"Optional minimum order value for coupon to be eligible. Can be null for no constraint."},{"type":"null","description":"Optional minimum order value for coupon to be eligible. Can be null for no constraint."}],"description":"Optional minimum order value for coupon to be eligible. Can be null for no constraint."},"discount_amount":{"oneOf":[{"type":"number","description":"Fixed absolute discount provided by this coupon (e.g. $5 off). Null if only percent discount applies."},{"type":"null","description":"Fixed absolute discount provided by this coupon (e.g. $5 off). Null if only percent discount applies."}],"description":"Fixed absolute discount provided by this coupon (e.g. $5 off). Null if only percent discount applies."},"discount_percent":{"oneOf":[{"type":"number","description":"Discount amount as percentage (e.g. 10 for 10%). Null if only absolute amount applies."},{"type":"null","description":"Discount amount as percentage (e.g. 10 for 10%). Null if only absolute amount applies."}],"description":"Discount amount as percentage (e.g. 10 for 10%). Null if only absolute amount applies."},"is_active":{"type":"boolean","description":"Whether the coupon is currently active and can be redeemed."},"created_at":{"type":"string","format":"date-time","description":"Coupon creation timestamp. UTC/ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to coupon record."}},"required":["id","code","type","valid_from","valid_until","is_active","created_at","updated_at"],"description":"AI Shop coupon entity. Implements all requirements for digital campaign codes, promotions, customer discount tracking, soft business logic for payment and redemption in compliance with Discount and Payment System plan. Strictly maps ai_shop_coupons table. All nullable fields correspond to flexible/optional parameters for modern campaign logic."},"aiShopCoupons.ICreate":{"type":"object","properties":{"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Promotion/campaign ID if coupon is part of a campaign."},{"type":"null","format":"uuid","description":"(Optional) Promotion/campaign ID if coupon is part of a campaign."}],"description":"(Optional) Promotion/campaign ID if coupon is part of a campaign."},"code":{"type":"string","description":"Unique coupon code string."},"type":{"type":"string","description":"Coupon type string ('single_use','multi_use','stackable','exclusive')."},"description":{"oneOf":[{"type":"string","description":"Human-readable explanation for coupon (optional)."},{"type":"null","description":"Human-readable explanation for coupon (optional)."}],"description":"Human-readable explanation for coupon (optional)."},"valid_from":{"type":"string","format":"date-time","description":"Start date/time for coupon validity (UTC ISO8601)."},"valid_until":{"type":"string","format":"date-time","description":"End date/time for coupon validity (UTC ISO8601)."},"max_uses":{"oneOf":[{"type":"integer","description":"Global maximum uses (optional/unlimited)."},{"type":"null","description":"Global maximum uses (optional/unlimited)."}],"description":"Global maximum uses (optional/unlimited)."},"max_uses_per_customer":{"oneOf":[{"type":"integer","description":"Max uses per customer (optional/unlimited)."},{"type":"null","description":"Max uses per customer (optional/unlimited)."}],"description":"Max uses per customer (optional/unlimited)."},"min_purchase_amount":{"oneOf":[{"type":"number","description":"Minimum purchase amount (optional)."},{"type":"null","description":"Minimum purchase amount (optional)."}],"description":"Minimum purchase amount (optional)."},"discount_amount":{"oneOf":[{"type":"number","description":"Fixed (absolute) discount value (optional)."},{"type":"null","description":"Fixed (absolute) discount value (optional)."}],"description":"Fixed (absolute) discount value (optional)."},"discount_percent":{"oneOf":[{"type":"number","description":"Percent discount value (optional)."},{"type":"null","description":"Percent discount value (optional)."}],"description":"Percent discount value (optional)."},"is_active":{"type":"boolean","description":"Whether this coupon is currently active and redeemable."}},"required":["code","type","valid_from","valid_until","is_active"],"description":"Schema for creation of an AI Shop coupon. Maps to all required and optional fields for campaign/promotion logic and business workflows. See Discount and Payment System plan and ai_shop_coupons table for use and audit guidelines."},"aiShopCoupons.IUpdate":{"type":"object","properties":{"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"Promotion/campaign ID (optional)."},{"type":"null","format":"uuid","description":"Promotion/campaign ID (optional)."}],"description":"Promotion/campaign ID (optional)."},"code":{"type":"string","description":"Coupon code string."},"type":{"type":"string","description":"Coupon type string."},"description":{"oneOf":[{"type":"string","description":"Human-readable description (optional)."},{"type":"null","description":"Human-readable description (optional)."}],"description":"Human-readable description (optional)."},"valid_from":{"type":"string","format":"date-time","description":"Start of coupon validity (UTC ISO8601)."},"valid_until":{"type":"string","format":"date-time","description":"End of coupon validity (UTC ISO8601)."},"max_uses":{"oneOf":[{"type":"integer","description":"Maximum uses overall (optional/unlimited)."},{"type":"null","description":"Maximum uses overall (optional/unlimited)."}],"description":"Maximum uses overall (optional/unlimited)."},"max_uses_per_customer":{"oneOf":[{"type":"integer","description":"Maximum uses per customer (optional/unlimited)."},{"type":"null","description":"Maximum uses per customer (optional/unlimited)."}],"description":"Maximum uses per customer (optional/unlimited)."},"min_purchase_amount":{"oneOf":[{"type":"number","description":"Minimum purchase amount (optional)."},{"type":"null","description":"Minimum purchase amount (optional)."}],"description":"Minimum purchase amount (optional)."},"discount_amount":{"oneOf":[{"type":"number","description":"Fixed discount amount (optional)."},{"type":"null","description":"Fixed discount amount (optional)."}],"description":"Fixed discount amount (optional)."},"discount_percent":{"oneOf":[{"type":"number","description":"Percent discount (optional)."},{"type":"null","description":"Percent discount (optional)."}],"description":"Percent discount (optional)."},"is_active":{"type":"boolean","description":"Is coupon currently active."}},"required":["code","type","valid_from","valid_until","is_active"],"description":"Schema for updating an AI Shop coupon. Contains all updatable fields as per business logic, campaign management, and compliance requirements. Maps directly to ai_shop_coupons table."},"aiShopCouponAssignments.IRequest":{"type":"object","properties":{"ai_shop_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for a specific coupon assignment by the coupon's UUID."},{"type":"null","format":"uuid","description":"Optional filter for a specific coupon assignment by the coupon's UUID."}],"description":"Optional filter for a specific coupon assignment by the coupon's UUID."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by customer UUID."},{"type":"null","format":"uuid","description":"Optional filter by customer UUID."}],"description":"Optional filter by customer UUID."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for assignments associated with a specific order (if coupon was redeemed in an order)."},{"type":"null","format":"uuid","description":"Optional filter for assignments associated with a specific order (if coupon was redeemed in an order)."}],"description":"Optional filter for assignments associated with a specific order (if coupon was redeemed in an order)."},"assigned_at_start":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: assigned_at greater than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: assigned_at greater than or equal to this date/time."}],"description":"Filter: assigned_at greater than or equal to this date/time."},"assigned_at_end":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: assigned_at less than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: assigned_at less than or equal to this date/time."}],"description":"Filter: assigned_at less than or equal to this date/time."},"redeemed_at_start":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: redeemed_at greater than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: redeemed_at greater than or equal to this date/time."}],"description":"Filter: redeemed_at greater than or equal to this date/time."},"redeemed_at_end":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: redeemed_at less than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: redeemed_at less than or equal to this date/time."}],"description":"Filter: redeemed_at less than or equal to this date/time."},"state":{"oneOf":[{"type":"string","description":"Assignment state filter (e.g., 'assigned', 'redeemed', 'expired')."},{"type":"null","description":"Assignment state filter (e.g., 'assigned', 'redeemed', 'expired')."}],"description":"Assignment state filter (e.g., 'assigned', 'redeemed', 'expired')."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination."},{"type":"null","description":"Page number for pagination."}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Number of results per page."},{"type":"null","description":"Number of results per page."}],"description":"Number of results per page."}},"required":[],"description":"Request schema to search/filter coupon assignments. Used for admin, compliance, and customer dashboard logic. All fields are optional and support complex search across assignment and redemption history."},"IPageAiShopCouponAssignments":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCouponAssignments"}}},"required":["pagination","data"],"description":"Paginated response page for coupon assignment search/listing. Returns pagination metadata and results array of aiShopCouponAssignments records."},"aiShopCouponAssignments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for the coupon assignment."},"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"The coupon's UUID referenced by this assignment. Foreign key."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer assigned this coupon (UUID). Foreign key."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order associated with coupon use, if redeemed (nullable)."},{"type":"null","format":"uuid","description":"Order associated with coupon use, if redeemed (nullable)."}],"description":"Order associated with coupon use, if redeemed (nullable)."},"assigned_at":{"type":"string","format":"date-time","description":"Timestamp when this assignment was created (coupon assigned to customer)."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when coupon was redeemed (if used). Nullable."},{"type":"null","format":"date-time","description":"Timestamp when coupon was redeemed (if used). Nullable."}],"description":"Timestamp when coupon was redeemed (if used). Nullable."},"state":{"type":"string","description":"Current assignment state. Example: 'assigned', 'redeemed', 'expired'."}},"required":["id","ai_shop_coupon_id","ai_shop_customer_id","assigned_at","state"],"description":"Entity representing an assignment of a coupon to a customer (may or may not be redeemed/used). Implements Discount and Payment System assignment, usage, and compliance tracking logic. Maps ai_shop_coupon_assignments table, as required by audit/trace and campaign logic."},"aiShopCouponAssignments.ICreate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"UUID of the coupon being assigned (required)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"UUID of customer to whom coupon is assigned (required)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"If redeemed at order, the order's UUID (optional/nullable)."},{"type":"null","format":"uuid","description":"If redeemed at order, the order's UUID (optional/nullable)."}],"description":"If redeemed at order, the order's UUID (optional/nullable)."},"assigned_at":{"type":"string","format":"date-time","description":"Assignment timestamp (UTC ISO8601)."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Redemption timestamp (nullable, set on redemption only)."},{"type":"null","format":"date-time","description":"Redemption timestamp (nullable, set on redemption only)."}],"description":"Redemption timestamp (nullable, set on redemption only)."},"state":{"type":"string","description":"Assignment state. E.g., 'assigned', 'redeemed', 'expired'."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","assigned_at","state"],"description":"Schema for assigning a coupon to a customer, as part of campaign, event, or admin flow. Required for compliance and redemption audits, as per Discount/Payment System requirements. All nullable fields support deferred or conditional population."},"aiShopCouponAssignments.IUpdate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"Coupon UUID to assign (required on update)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"UUID of customer assigned to (required on update)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order UUID (nullable, for assignment to order or redemption tracking)."},{"type":"null","format":"uuid","description":"Order UUID (nullable, for assignment to order or redemption tracking)."}],"description":"Order UUID (nullable, for assignment to order or redemption tracking)."},"assigned_at":{"type":"string","format":"date-time","description":"Timestamp when assignment record was created."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp on redemption (nullable, optional for update if not redeemed)."},{"type":"null","format":"date-time","description":"Timestamp on redemption (nullable, optional for update if not redeemed)."}],"description":"Timestamp on redemption (nullable, optional for update if not redeemed)."},"state":{"type":"string","description":"Assignment state: 'assigned', 'redeemed', 'expired', etc."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","assigned_at","state"],"description":"Schema for updating coupon assignment tracking and lifecycle, as part of Discount and Payment System use case. Supports both redemption and admin-correction flows for compliance."},"IAiShopPromotions.IRequest":{"type":"object","properties":{"name":{"oneOf":[{"type":"string","description":"Text/substring or fuzzy search within campaign/promotion name."},{"type":"null","description":"Text/substring or fuzzy search within campaign/promotion name."}],"description":"Text/substring or fuzzy search within campaign/promotion name."},"type":{"oneOf":[{"type":"string","description":"Promotion/campaign type (e.g., 'bulk_coupon', 'auto_discount', etc.)."},{"type":"null","description":"Promotion/campaign type (e.g., 'bulk_coupon', 'auto_discount', etc.)."}],"description":"Promotion/campaign type (e.g., 'bulk_coupon', 'auto_discount', etc.)."},"is_active":{"oneOf":[{"type":"boolean","description":"Whether the campaign is currently active and visible."},{"type":"null","description":"Whether the campaign is currently active and visible."}],"description":"Whether the campaign is currently active and visible."},"start_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns starting after this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns starting after this date/time."}],"description":"Filter: campaigns starting after this date/time."},"start_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns starting before this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns starting before this date/time."}],"description":"Filter: campaigns starting before this date/time."},"end_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns ending after this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns ending after this date/time."}],"description":"Filter: campaigns ending after this date/time."},"end_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns ending before this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns ending before this date/time."}],"description":"Filter: campaigns ending before this date/time."},"page":{"oneOf":[{"type":"integer","description":"Requested page for pagination."},{"type":"null","description":"Requested page for pagination."}],"description":"Requested page for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Number of records per page."},{"type":"null","description":"Number of records per page."}],"description":"Number of records per page."}},"required":[],"description":"Request body for listing/searching promotions/campaigns as per ai_shop_promotions. All fields are optional and support admin campaign table UX, analytics, or service logic."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number (starts at 1)."},"limit":{"type":"integer","description":"Number of records per page."},"records":{"type":"integer","description":"Total number of records in DB for current query or filter."},"pages":{"type":"integer","description":"Total number of pages (ceil(records/limit))."}},"required":["current","limit","records","pages"],"description":"Pagination DTO used for all paginated response types, as defined by AutoBe API design and IPage<T> patterns. Used throughout admin/customer UX for consistent pagination."}}},"completed":106,"total":286,"step":0,"created_at":"2025-07-23T07:08:32.095Z"},"tokenUsage":{"facade":{"aggregate":{"total":2659552,"input":{"total":2547931,"cached":0},"output":{"total":111621,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2659552,"input":{"total":2547931,"cached":0},"output":{"total":111621,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2659552,"input":{"total":2547931,"cached":0},"output":{"total":111621,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2659552,"input":{"total":2547931,"cached":0},"output":{"total":111621,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopProductImportLog":{"type":"object","description":"Product import log entity for recording bulk import or batch registration events for products. This model links to the seller performing the import and includes info such as timestamp, source file, record count, status (pending/completed/failed), and optional error message if failures occur. Required for audit, error tracking, and analytics. Fulfills product management requirements for tracking external or bulk upload campaigns. All fields must match ai_shop_product_import_logs Prisma schema.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique product import event identifier. References ai_shop_product_import_logs.id in Prisma schema."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller who performed import event. Foreign key to ai_shop_sellers.id, for audit control and traceability."},"imported_at":{"type":"string","format":"date-time","description":"Timestamp when the import completed. Used for historical monitoring and compliance."},"source_file":{"type":"string","description":"URI to source batch file/artifact. E.g., path to a csv, xlsx, or export JSON. May be cloud or local storage reference."},"record_count":{"type":"integer","description":"Number of products/items handled in this import event. Must be >= 1."},"status":{"type":"string","description":"Import operation status. Enum: pending/completed/failed. Application-managed state transition."},"error_message":{"oneOf":[{"type":"string","description":"Import failure or error reason, present if status is 'failed'. Can be null. Used for debugging and compliance review."},{"type":"null","description":"Import failure or error reason, present if status is 'failed'. Can be null. Used for debugging and compliance review."}],"description":"Import failure or error reason, present if status is 'failed'. Can be null. Used for debugging and compliance review."}},"required":["id","ai_shop_seller_id","imported_at","source_file","record_count","status"]},"IAiShopProductImportLog.ICreate":{"type":"object","description":"Request body for creating a new product import log event. All required fields must match ai_shop_product_import_logs, except 'id' which is generated by the database.","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller performing the import."},"imported_at":{"type":"string","format":"date-time","description":"Datetime the import is completed (set to now or source log time)."},"source_file":{"type":"string","description":"URI or path to source batch file (as supplied/uploaded)."},"record_count":{"type":"integer","description":"Number of products in this import batch. Must be > 0."},"status":{"type":"string","description":"Status at creation: use 'pending', 'completed', or 'failed'."},"error_message":{"oneOf":[{"type":"string","description":"Optional error message if import failed. Null for success, required for status=='failed'."},{"type":"null","description":"Optional error message if import failed. Null for success, required for status=='failed'."}],"description":"Optional error message if import failed. Null for success, required for status=='failed'."}},"required":["ai_shop_seller_id","imported_at","source_file","record_count","status"]},"IAiShopProductImportLog.IUpdate":{"type":"object","description":"Request body for updating existing product import log information. Only fields in Prisma schema may be included. 'id' cannot be updated. Used for error correction, status update, or late error recording.","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller performing/importing; may update if needed for correction."},"imported_at":{"type":"string","format":"date-time","description":"Timestamp if updating/correcting event date."},"source_file":{"type":"string","description":"Source file URI, if replacement needed."},"record_count":{"type":"integer","description":"Count of items imported; correct if previous entry was wrong."},"status":{"type":"string","description":"Updated status string: 'pending','completed','failed', etc."},"error_message":{"oneOf":[{"type":"string","description":"Updated error message or resolution/diagnostics."},{"type":"null","description":"Updated error message or resolution/diagnostics."}],"description":"Updated error message or resolution/diagnostics."}},"required":["ai_shop_seller_id","imported_at","source_file","record_count","status"]},"IAiShopPost.IRequest":{"type":"object","description":"Request type for searching, filtering, and pagination of bulletin board posts (ai_shop_posts). Supports all legitimate filter/sort/search fields such as post id, author id, role, status, channel, created/updated timestamp, title/body search, and paging controls. This DTO is used in the PATCH operation for advanced bulletin board search/query interfaces. Fields must precisely match ai_shop_posts schema and not reference non-schema properties. No soft-delete logic included—see schema.","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by unique post id."},{"type":"null","format":"uuid","description":"Optional filter by unique post id."}],"description":"Optional filter by unique post id."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter posts authored by a specific customer; null means no filter."},{"type":"null","format":"uuid","description":"Filter posts authored by a specific customer; null means no filter."}],"description":"Filter posts authored by a specific customer; null means no filter."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter posts authored by this seller."},{"type":"null","format":"uuid","description":"Filter posts authored by this seller."}],"description":"Filter posts authored by this seller."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter posts authored by this admin."},{"type":"null","format":"uuid","description":"Filter posts authored by this admin."}],"description":"Filter posts authored by this admin."},"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by associated channel/shopfront."},{"type":"null","format":"uuid","description":"Filter by associated channel/shopfront."}],"description":"Filter by associated channel/shopfront."},"title":{"oneOf":[{"type":"string","description":"Fuzzy search for posts by title."},{"type":"null","description":"Fuzzy search for posts by title."}],"description":"Fuzzy search for posts by title."},"body":{"oneOf":[{"type":"string","description":"Fuzzy body/content keyword search."},{"type":"null","description":"Fuzzy body/content keyword search."}],"description":"Fuzzy body/content keyword search."},"role_type":{"oneOf":[{"type":"string","description":"Filter by authoring role (customer/seller/admin)."},{"type":"null","description":"Filter by authoring role (customer/seller/admin)."}],"description":"Filter by authoring role (customer/seller/admin)."},"status":{"oneOf":[{"type":"string","description":"Filter by post status (draft/published/hidden/deleted)."},{"type":"null","description":"Filter by post status (draft/published/hidden/deleted)."}],"description":"Filter by post status (draft/published/hidden/deleted)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by creation time range (start)."},{"type":"null","format":"date-time","description":"Filter by creation time range (start)."}],"description":"Filter by creation time range (start)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by creation time range (end)."},{"type":"null","format":"date-time","description":"Filter by creation time range (end)."}],"description":"Filter by creation time range (end)."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by update time range (start)."},{"type":"null","format":"date-time","description":"Filter by update time range (start)."}],"description":"Filter by update time range (start)."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by update time range (end)."},{"type":"null","format":"date-time","description":"Filter by update time range (end)."}],"description":"Filter by update time range (end)."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number (1-based)."},"limit":{"type":"integer","minimum":1,"description":"Pagination: results per page."},"sort":{"oneOf":[{"type":"string","description":"Sort order (e.g. 'created_at desc')."},{"type":"null","description":"Sort order (e.g. 'created_at desc')."}],"description":"Sort order (e.g. 'created_at desc')."}},"required":["page","limit"]},"IPageIAiShopPost":{"type":"object","description":"Paginated results DTO for ai_shop_posts. Follows the IPage<T> container structure, wrapping results with paging metadata per standard convention.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPost"},"description":"List of post entity results for this page."}},"required":["pagination","data"]},"IAiShopPost":{"type":"object","description":"Bulletin post entity representing a top-level post in ai_shop_posts. Fulfills bulletin/board/documentation, announcement, or system community logic. Properties all correspond to ai_shop_posts schema.","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key (uuid) for this post."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Post author customer (nullable)."},{"type":"null","format":"uuid","description":"Post author customer (nullable)."}],"description":"Post author customer (nullable)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Post author seller (nullable)."},{"type":"null","format":"uuid","description":"Post author seller (nullable)."}],"description":"Post author seller (nullable)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Post author admin (nullable)."},{"type":"null","format":"uuid","description":"Post author admin (nullable)."}],"description":"Post author admin (nullable)."},"channel_id":{"type":"string","format":"uuid","description":"Channel/shopfront (FK reference)."},"title":{"type":"string","description":"Summary/subject/title of bulletin post."},"body":{"type":"string","description":"Main content body of post (rich markdown/plain/HTML)."},"role_type":{"type":"string","description":"Type of authoring role—customer/seller/admin."},"status":{"type":"string","description":"System work status: draft/published/hidden/deleted."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."}},"required":["id","channel_id","title","body","role_type","status","created_at","updated_at"]},"IAiShopPost.ICreate":{"type":"object","description":"Request body for creating a new ai_shop_posts bulletin post. All relevant and required fields must match Prisma schema properties, but id is not needed (database generated). Used for admin, seller, or customer bulletin creation.","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (customer, nullable for seller/admin authored posts)."},{"type":"null","format":"uuid","description":"Author (customer, nullable for seller/admin authored posts)."}],"description":"Author (customer, nullable for seller/admin authored posts)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (seller, nullable if authored by customer/admin)."},{"type":"null","format":"uuid","description":"Author (seller, nullable if authored by customer/admin)."}],"description":"Author (seller, nullable if authored by customer/admin)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (admin, nullable if authored by customer/seller)."},{"type":"null","format":"uuid","description":"Author (admin, nullable if authored by customer/seller)."}],"description":"Author (admin, nullable if authored by customer/seller)."},"channel_id":{"type":"string","format":"uuid","description":"Shopfront/channel for post publication (FK required)."},"title":{"type":"string","description":"Post subject/title."},"body":{"type":"string","description":"Main post body/content."},"role_type":{"type":"string","description":"Type of author role (one of 'customer','seller','admin')."},"status":{"type":"string","description":"Workflow status for post (draft/published/hidden/deleted)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for post (system-generated or passed explicitly)."},"updated_at":{"type":"string","format":"date-time","description":"Time of latest update (should equal created_at on creation)."}},"required":["channel_id","title","body","role_type","status","created_at","updated_at"]},"IAiShopPost.IUpdate":{"type":"object","description":"Request body for updating an ai_shop_posts record by id. Only properties in Prisma table may be set.","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (customer), must match or null."},{"type":"null","format":"uuid","description":"Author (customer), must match or null."}],"description":"Author (customer), must match or null."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (seller), must match or null."},{"type":"null","format":"uuid","description":"Author (seller), must match or null."}],"description":"Author (seller), must match or null."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (admin), must match or null."},{"type":"null","format":"uuid","description":"Author (admin), must match or null."}],"description":"Author (admin), must match or null."},"channel_id":{"type":"string","format":"uuid","description":"Shopfront channel to update to."},"title":{"type":"string","description":"Updated post title/subject."},"body":{"type":"string","description":"Updated main body."},"role_type":{"type":"string","description":"Updated post authoring role type."},"status":{"type":"string","description":"Status after update."},"created_at":{"type":"string","format":"date-time","description":"Original creation date/time."},"updated_at":{"type":"string","format":"date-time","description":"Time of update, must be adjusted."}},"required":["channel_id","title","body","role_type","status","created_at","updated_at"]},"IAiShopPostComment.IRequest":{"type":"object","description":"DTO for search, filter, and pagination of ai_shop_post_comments (bulletin board comments/replies). Used for threading/browsing comments. All fields match the table schema. No soft-delete or extra metadata supported.","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"Unique PK for comment."},{"type":"null","format":"uuid","description":"Unique PK for comment."}],"description":"Unique PK for comment."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK: post this comment belongs to."},{"type":"null","format":"uuid","description":"FK: post this comment belongs to."}],"description":"FK: post this comment belongs to."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by customer author."},{"type":"null","format":"uuid","description":"Filter by customer author."}],"description":"Filter by customer author."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by seller author."},{"type":"null","format":"uuid","description":"Filter by seller author."}],"description":"Filter by seller author."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by admin author."},{"type":"null","format":"uuid","description":"Filter by admin author."}],"description":"Filter by admin author."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent comment for thread filtering. Null for top-level."},{"type":"null","format":"uuid","description":"Parent comment for thread filtering. Null for top-level."}],"description":"Parent comment for thread filtering. Null for top-level."},"body":{"oneOf":[{"type":"string","description":"Keyword search body/content."},{"type":"null","description":"Keyword search body/content."}],"description":"Keyword search body/content."},"role_type":{"oneOf":[{"type":"string","description":"Role type filter (customer/seller/admin)."},{"type":"null","description":"Role type filter (customer/seller/admin)."}],"description":"Role type filter (customer/seller/admin)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Creation range start."},{"type":"null","format":"date-time","description":"Creation range start."}],"description":"Creation range start."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Creation range end."},{"type":"null","format":"date-time","description":"Creation range end."}],"description":"Creation range end."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Update range start."},{"type":"null","format":"date-time","description":"Update range start."}],"description":"Update range start."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Update range end."},{"type":"null","format":"date-time","description":"Update range end."}],"description":"Update range end."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number."},"limit":{"type":"integer","minimum":1,"description":"Results per page."},"sort":{"oneOf":[{"type":"string","description":"Sort expression, e.g., 'created_at desc'."},{"type":"null","description":"Sort expression, e.g., 'created_at desc'."}],"description":"Sort expression, e.g., 'created_at desc'."}},"required":["page","limit"]},"IPageIAiShopPostComment":{"type":"object","description":"Paginated results for bulletin board post comments (ai_shop_post_comments). Structure matches IPage<T>.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostComment"}}},"required":["pagination","data"]},"IAiShopPostComment":{"type":"object","description":"Bulletin post comment entity. Represents threaded reply/comment to a post, following ai_shop_post_comments schema. Includes basic authoring, threading and audit fields. No soft delete or edit history—edit and moderation handled separately.","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key (uuid) for comment."},"post_id":{"type":"string","format":"uuid","description":"FK for post being commented."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (customer, nullable if seller/admin)."},{"type":"null","format":"uuid","description":"Comment author (customer, nullable if seller/admin)."}],"description":"Comment author (customer, nullable if seller/admin)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (seller, nullable if customer/admin)."},{"type":"null","format":"uuid","description":"Comment author (seller, nullable if customer/admin)."}],"description":"Comment author (seller, nullable if customer/admin)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (admin, nullable if customer/seller)."},{"type":"null","format":"uuid","description":"Comment author (admin, nullable if customer/seller)."}],"description":"Comment author (admin, nullable if customer/seller)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent comment PK for thread. Null for top-level/root comments."},{"type":"null","format":"uuid","description":"Parent comment PK for thread. Null for top-level/root comments."}],"description":"Parent comment PK for thread. Null for top-level/root comments."},"body":{"type":"string","description":"Main comment content."},"role_type":{"type":"string","description":"Authoring role: customer/seller/admin."},"created_at":{"type":"string","format":"date-time","description":"Creation datetime."},"updated_at":{"type":"string","format":"date-time","description":"Last update datetime."}},"required":["id","post_id","body","role_type","created_at","updated_at"]},"IAiShopPostComment.ICreate":{"type":"object","description":"Request body for creating new bulletin board comment. Fields must exactly match schema and only required ones are necessary. Id PK is generated and not included.","properties":{"post_id":{"type":"string","format":"uuid","description":"FK for post being commented."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (customer)."},{"type":"null","format":"uuid","description":"Comment author (customer)."}],"description":"Comment author (customer)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (seller)."},{"type":"null","format":"uuid","description":"Comment author (seller)."}],"description":"Comment author (seller)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (admin)."},{"type":"null","format":"uuid","description":"Comment author (admin)."}],"description":"Comment author (admin)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent comment for thread. Null if top-level/root."},{"type":"null","format":"uuid","description":"Parent comment for thread. Null if top-level/root."}],"description":"Parent comment for thread. Null if top-level/root."},"body":{"type":"string","description":"Comment main content."},"role_type":{"type":"string","description":"Author role (customer/seller/admin)."},"created_at":{"type":"string","format":"date-time","description":"Creation datetime point."},"updated_at":{"type":"string","format":"date-time","description":"Update timestamp (should match created_at on insertion)."}},"required":["post_id","body","role_type","created_at","updated_at"]},"IPage.IPagination":{"type":"object","description":"Pagination metadata for paginated results, standard across all IPage<T> response containers.","properties":{"current":{"type":"integer","description":"Current page number (1-based)","minimum":1},"limit":{"type":"integer","description":"Page size (max records per page), default 100. ","minimum":1},"records":{"type":"integer","description":"Total number of records matching query/criteria."},"pages":{"type":"integer","description":"Total pages in result set, computed as ceil(records/limit)."}},"required":["current","limit","records","pages"]}}},"completed":118,"total":286,"step":0,"created_at":"2025-07-23T07:08:32.615Z"},"tokenUsage":{"facade":{"aggregate":{"total":2795808,"input":{"total":2680585,"cached":0},"output":{"total":115223,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2795808,"input":{"total":2680585,"cached":0},"output":{"total":115223,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2795808,"input":{"total":2680585,"cached":0},"output":{"total":115223,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2795808,"input":{"total":2680585,"cached":0},"output":{"total":115223,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopPostRecommendation.IRequest":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"The unique identifier of the post (ai_shop_posts) being recommended. Used as a filter or search parameter in listing personalized recommendation logs.\n\nThis property is critical for searching recommendations that target or reference a specific post, reflecting business needs for traceability and analytics."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"The unique identifier of the customer for whom the recommendation is personalized, or null if searching for global or non-customer recommendations. Referenced from ai_shop_customers.id in the schema.\n\nEnables searching for customer-specific recommendations or analytics aggregation."},{"type":"null","format":"uuid","description":"The unique identifier of the customer for whom the recommendation is personalized, or null if searching for global or non-customer recommendations. Referenced from ai_shop_customers.id in the schema.\n\nEnables searching for customer-specific recommendations or analytics aggregation."}],"description":"The unique identifier of the customer for whom the recommendation is personalized, or null if searching for global or non-customer recommendations. Referenced from ai_shop_customers.id in the schema.\n\nEnables searching for customer-specific recommendations or analytics aggregation."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"The unique identifier of the seller entity for whom the recommendation was made, or null for non-seller targeting. From ai_shop_sellers.id in the schema.\n\nThis allows filtering for recommendations relevant to sellers, such as personalized content or campaign targeting. Nullable for audience flexibility."},{"type":"null","format":"uuid","description":"The unique identifier of the seller entity for whom the recommendation was made, or null for non-seller targeting. From ai_shop_sellers.id in the schema.\n\nThis allows filtering for recommendations relevant to sellers, such as personalized content or campaign targeting. Nullable for audience flexibility."}],"description":"The unique identifier of the seller entity for whom the recommendation was made, or null for non-seller targeting. From ai_shop_sellers.id in the schema.\n\nThis allows filtering for recommendations relevant to sellers, such as personalized content or campaign targeting. Nullable for audience flexibility."},"target_type":{"type":"string","description":"The audience type for the recommendation, defining whether the recommendation targets a customer, seller, or global audience. E.g., 'customer', 'seller', 'global'.\n\nThis controls how recommendations are analyzed and filtered in analytics or personalization reporting."},"reason":{"type":"string","description":"Textual reason or code for why the recommendation was made. E.g., 'AI', 'trending', 'campaign'.\n\nUsed for filtering or aggregating recommendations by algorithm or marketing reason. Enables business logic for effectiveness and attribution analyses."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 Datetime string for when the recommendation was created. Allows searching for recommendations in a specific time window for analytics or reporting.\n\nRefers to ai_shop_post_recommendations.created_at."}},"description":"Request and filter body for querying ai_shop_post_recommendations (post recommendation logs) with advanced parameters. This object is used for PATCH/list/search endpoints and enables flexible business filtering for analytics, reporting, or debugging of AI-powered post recommendations.\n\nAll properties strictly align with the ai_shop_post_recommendations Prisma schema. Only atomic filter/search controls are present with support for nulls to enable broad audience/target searches.","required":[]},"IPageAiShopPostRecommendation":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata and controls for the current page of ai_shop_post_recommendations. See standard IPage definition."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostRecommendation"},"description":"Array of ai_shop_post_recommendation records for the returned page. Each entry represents a recommendation event, as persisted in the database."}},"required":["pagination","data"],"description":"A paginated result set for ai_shop_post_recommendations query operations, as required by administrative analytics panels and listing UIs.\n\nThis object follows the standard IPage<T> format. Each record is a normalized instance of IAiShopPostRecommendation, allowing for structured table views or detail navigation."},"IAiShopPostRecommendation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier for the post recommendation record.\n\nSee ai_shop_post_recommendations.id in the Prisma schema. Used for audit, page navigation, and analytics."},"post_id":{"type":"string","format":"uuid","description":"Foreign key reference to the recommended post in ai_shop_posts. Identifies the post this recommendation refers to.\n\nRequired for audit and traceability of recommendation targets."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional foreign key to the recommended customer (target of personalization). Null if recommendation is not customer-specific.\n\nFrom ai_shop_post_recommendations.ai_shop_customer_id."},{"type":"null","format":"uuid","description":"Optional foreign key to the recommended customer (target of personalization). Null if recommendation is not customer-specific.\n\nFrom ai_shop_post_recommendations.ai_shop_customer_id."}],"description":"Optional foreign key to the recommended customer (target of personalization). Null if recommendation is not customer-specific.\n\nFrom ai_shop_post_recommendations.ai_shop_customer_id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional foreign key to the recommended seller (for seller-personalized views). Null if not seller-specific.\n\nEnables analytics/reporting on seller-targeted events."},{"type":"null","format":"uuid","description":"Optional foreign key to the recommended seller (for seller-personalized views). Null if not seller-specific.\n\nEnables analytics/reporting on seller-targeted events."}],"description":"Optional foreign key to the recommended seller (for seller-personalized views). Null if not seller-specific.\n\nEnables analytics/reporting on seller-targeted events."},"target_type":{"type":"string","description":"The type of recommendation targeting: 'customer', 'seller', 'global', etc. Used for analysis, UI filtering, and audience-specific reporting.\n\nPopulated from ai_shop_post_recommendations.target_type."},"reason":{"type":"string","description":"Business or AI reason for the recommendation (e.g., 'AI', 'trending', 'campaign'). Used for diagnostic and analytics workflows.\n\nPopulated from ai_shop_post_recommendations.reason."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the recommendation event record was created. Audit and time-series reporting uses this field.\n\nPopulated from ai_shop_post_recommendations.created_at."}},"required":["id","post_id","target_type","reason","created_at"],"description":"Represents a single AI-powered or campaign-driven post recommendation in the ai_shop_post_recommendations table.\n\nThis schema is strictly normalized according to the AI Shop requirements and Prisma schema. Used for analytics, personalization debugging, admin drill-down, and automated dashboarding. Only atomic, schema-defined fields are present; all referential fields are included for foreign key navigation and auditability."},"IAiShopPostRecommendation.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"Foreign key to the post being recommended (ai_shop_posts.id). Required for all recommendations.\n\nThis property forms the backbone of post-centric recommendations, allowing analytics and personalization workflows to trace targets accurately."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID FK to customer (ai_shop_customers.id), required if the recommendation is personalized for a specific customer. Nullable for global/campaign recommendations.\n\nAllows for targeting and audit of personalization events."},{"type":"null","format":"uuid","description":"UUID FK to customer (ai_shop_customers.id), required if the recommendation is personalized for a specific customer. Nullable for global/campaign recommendations.\n\nAllows for targeting and audit of personalization events."}],"description":"UUID FK to customer (ai_shop_customers.id), required if the recommendation is personalized for a specific customer. Nullable for global/campaign recommendations.\n\nAllows for targeting and audit of personalization events."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID FK to seller (ai_shop_sellers.id), required if recommendation addresses a specific seller view. Nullable for broader targeting.\n\nEnables specialized campaign targeting or seller-specific AI workflows."},{"type":"null","format":"uuid","description":"UUID FK to seller (ai_shop_sellers.id), required if recommendation addresses a specific seller view. Nullable for broader targeting.\n\nEnables specialized campaign targeting or seller-specific AI workflows."}],"description":"UUID FK to seller (ai_shop_sellers.id), required if recommendation addresses a specific seller view. Nullable for broader targeting.\n\nEnables specialized campaign targeting or seller-specific AI workflows."},"target_type":{"type":"string","description":"Required. Audience or targeting type. Must match business logic for audience separation (e.g., 'customer', 'seller', 'global'). Populates target_type in db.\n\nUsed for downstream analytics and operational segmentation."},"reason":{"type":"string","description":"Required. Encodes 'why' for the recommendation (AI, trending, campaign, manual, etc). Describes business logic for auditing/attribution.\n\nPopulates ai_shop_post_recommendations.reason. This is critical for campaign effectiveness and diagnostics."}},"required":["post_id","target_type","reason"],"description":"Create schema for a new post recommendation record in ai_shop_post_recommendations. Used in AI pipelines, campaign workflows, or admin/driven post recommendation targeting.\n\nRequired properties strictly mirror the Prisma schema fields required for successful DB insert. Optional customer/seller IDs allow polymorphic audience targeting as defined by business rules."},"IAiShopPostRecommendation.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"Foreign key to the post being recommended (ai_shop_posts.id). Only update if post association changes.\n\nRequired for invariant recommendation context."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer FK, nullable, for updating/retargeting personalization."},{"type":"null","format":"uuid","description":"Customer FK, nullable, for updating/retargeting personalization."}],"description":"Customer FK, nullable, for updating/retargeting personalization."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller FK, nullable. Used when retargeting recommendation towards another seller."},{"type":"null","format":"uuid","description":"Seller FK, nullable. Used when retargeting recommendation towards another seller."}],"description":"Seller FK, nullable. Used when retargeting recommendation towards another seller."},"target_type":{"type":"string","description":"Updated audience type or scope, if changed in business logic for the recommendation target."},"reason":{"type":"string","description":"Update or correction for the recommendation's reason (AI algorithm, trending, manual, etc). Adjusted for campaign/audit traces."}},"description":"Update schema for mutable fields of ai_shop_post_recommendations record. Supports retargeting, audience reclassification, or campaign correction workflows. Does not include id or system-generated fields (created_at). Business validation required for referential changes.","required":[]},"IAiShopPostReport.IRequest":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"Filter by the reported post's unique identifier (ai_shop_posts.id). Enables searching for all reports claiming issues with a specific post. Required for audit, moderation workflows, and analytics."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by the customer reporter's uuid. Enables search/aggregation of all reports filed by a particular customer for moderation, compliance, or abuse detection.\n\nSchema aligns with ai_shop_post_reports.ai_shop_customer_id."},{"type":"null","format":"uuid","description":"Optional filter by the customer reporter's uuid. Enables search/aggregation of all reports filed by a particular customer for moderation, compliance, or abuse detection.\n\nSchema aligns with ai_shop_post_reports.ai_shop_customer_id."}],"description":"Optional filter by the customer reporter's uuid. Enables search/aggregation of all reports filed by a particular customer for moderation, compliance, or abuse detection.\n\nSchema aligns with ai_shop_post_reports.ai_shop_customer_id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by seller reporter's uuid. Used for tracking/surfacing seller-originated reports. From ai_shop_post_reports.ai_shop_seller_id. Used in seller-centric moderation dashboards."},{"type":"null","format":"uuid","description":"Optional filter by seller reporter's uuid. Used for tracking/surfacing seller-originated reports. From ai_shop_post_reports.ai_shop_seller_id. Used in seller-centric moderation dashboards."}],"description":"Optional filter by seller reporter's uuid. Used for tracking/surfacing seller-originated reports. From ai_shop_post_reports.ai_shop_seller_id. Used in seller-centric moderation dashboards."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by admin reporter's uuid. Useful for analytics of admin-originated post reports. Referenced from ai_shop_post_reports.ai_shop_admin_id in schema."},{"type":"null","format":"uuid","description":"Optional filter by admin reporter's uuid. Useful for analytics of admin-originated post reports. Referenced from ai_shop_post_reports.ai_shop_admin_id in schema."}],"description":"Optional filter by admin reporter's uuid. Useful for analytics of admin-originated post reports. Referenced from ai_shop_post_reports.ai_shop_admin_id in schema."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by the moderation action FK (nullable). Useful for finding all reports addressed by a specific moderation action, or for triaging unresolved reports.\n\nField is nullable and aligns with ai_shop_post_reports.moderation_action_id."},{"type":"null","format":"uuid","description":"Filter by the moderation action FK (nullable). Useful for finding all reports addressed by a specific moderation action, or for triaging unresolved reports.\n\nField is nullable and aligns with ai_shop_post_reports.moderation_action_id."}],"description":"Filter by the moderation action FK (nullable). Useful for finding all reports addressed by a specific moderation action, or for triaging unresolved reports.\n\nField is nullable and aligns with ai_shop_post_reports.moderation_action_id."},"reason":{"type":"string","description":"Search/filter all post reports for a particular reason, as specified by the reporter. Textual filter. Useful for analytics, reporting, and moderation dashboards focused on content or policy breaches."},"created_at":{"type":"string","format":"date-time","description":"Filter by the creation timestamp (ISO8601). Allows searching for reports within a specific time window for audit, compliance, or moderation queue processing.\n\nSchemas aligns with ai_shop_post_reports.created_at."}},"description":"Request/filter/search schema for listing post reports in ai_shop_post_reports for moderation, audit, or compliance workflows. All optional filters map directly to the schema and support advanced dashboard analytics, triage, and root cause investigation flows.","required":[]},"IPageAiShopPostReport":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard IPage pagination info for page-aware UI and reporting."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostReport"},"description":"Array of ai_shop_post_reports (post report) records on this page. Each row is a normalized report instance."}},"required":["pagination","data"],"description":"A paginated result set containing post report entities from ai_shop_post_reports. Used for admin, moderation, or compliance modules that manage large volumes of report events."},"IAiShopPostReport":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique report record ID from ai_shop_post_reports.id. Used for navigation, audit, and linking moderation events."},"post_id":{"type":"string","format":"uuid","description":"FK reference to reported post in ai_shop_posts. Links the report to the content in question for traceability and UI display."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to the reporting customer. Populated if report originated from a customer actor. Used for audit, abuse detection, and compliance. From ai_shop_post_reports.ai_shop_customer_id."},{"type":"null","format":"uuid","description":"Nullable FK to the reporting customer. Populated if report originated from a customer actor. Used for audit, abuse detection, and compliance. From ai_shop_post_reports.ai_shop_customer_id."}],"description":"Nullable FK to the reporting customer. Populated if report originated from a customer actor. Used for audit, abuse detection, and compliance. From ai_shop_post_reports.ai_shop_customer_id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to reporting seller, per ai_shop_post_reports.ai_shop_seller_id. Used to separate seller-initiated reports from customer/admin flows."},{"type":"null","format":"uuid","description":"Nullable FK to reporting seller, per ai_shop_post_reports.ai_shop_seller_id. Used to separate seller-initiated reports from customer/admin flows."}],"description":"Nullable FK to reporting seller, per ai_shop_post_reports.ai_shop_seller_id. Used to separate seller-initiated reports from customer/admin flows."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to the admin reporter, as per ai_shop_post_reports.ai_shop_admin_id. Used for reporting by platform staff and audit traceability."},{"type":"null","format":"uuid","description":"Nullable FK to the admin reporter, as per ai_shop_post_reports.ai_shop_admin_id. Used for reporting by platform staff and audit traceability."}],"description":"Nullable FK to the admin reporter, as per ai_shop_post_reports.ai_shop_admin_id. Used for reporting by platform staff and audit traceability."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to moderation action log (ai_shop_moderation_actions.id). Links report to moderation outcome/action for root-cause/case review."},{"type":"null","format":"uuid","description":"Nullable FK to moderation action log (ai_shop_moderation_actions.id). Links report to moderation outcome/action for root-cause/case review."}],"description":"Nullable FK to moderation action log (ai_shop_moderation_actions.id). Links report to moderation outcome/action for root-cause/case review."},"reason":{"type":"string","description":"Reporter-provided reason for filing this report. Required and atomic. Used for filtering, analytics, and moderation triage."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the report was created. Audit and time-series features reference this field for ordering and compliance checks."}},"required":["id","post_id","reason","created_at"],"description":"Represents a single report event filed against a bulletin board post in ai_shop_post_reports. Used for moderation intake, diagnostics, triage, and compliance auditing.\n\nSchema-compliant with Prisma; includes all foreign key and content fields required for root-cause investigation and dashboard linking."},"IAiShopPostReports.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"UUID FK to the post being reported (ai_shop_posts.id). Required for all report entity creation; identifies the subject of the report.\n\nPopulating this field enables moderation traceability and abuse analytics."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. Reporting customer UUID (ai_shop_customers.id). Used for customer-originated reports and attribution. Optional for polymorphic actor scenarios. Nullable for seller or admin reports.\n\nThis enables correct source tracking for analytics."},{"type":"null","format":"uuid","description":"Nullable. Reporting customer UUID (ai_shop_customers.id). Used for customer-originated reports and attribution. Optional for polymorphic actor scenarios. Nullable for seller or admin reports.\n\nThis enables correct source tracking for analytics."}],"description":"Nullable. Reporting customer UUID (ai_shop_customers.id). Used for customer-originated reports and attribution. Optional for polymorphic actor scenarios. Nullable for seller or admin reports.\n\nThis enables correct source tracking for analytics."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. Reporting seller UUID (ai_shop_sellers.id). Used for seller-originated reports and compliance attribution workflows."},{"type":"null","format":"uuid","description":"Nullable. Reporting seller UUID (ai_shop_sellers.id). Used for seller-originated reports and compliance attribution workflows."}],"description":"Nullable. Reporting seller UUID (ai_shop_sellers.id). Used for seller-originated reports and compliance attribution workflows."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. Admin reporting the issue (ai_shop_admins.id). Enables triage and audit traceability for policy breach detection.\n\nThis structure aligns with flexible role assignment for reporting flows."},{"type":"null","format":"uuid","description":"Nullable. Admin reporting the issue (ai_shop_admins.id). Enables triage and audit traceability for policy breach detection.\n\nThis structure aligns with flexible role assignment for reporting flows."}],"description":"Nullable. Admin reporting the issue (ai_shop_admins.id). Enables triage and audit traceability for policy breach detection.\n\nThis structure aligns with flexible role assignment for reporting flows."},"reason":{"type":"string","description":"Required. Subject/reason text for filing the report. Directly populates ai_shop_post_reports.reason. Used for dashboarding and abusive content detection. Not nullable."}},"required":["post_id","reason"],"description":"DTO for creating a new post report entity in ai_shop_post_reports. Allows polymorphic actor reporting (customer/seller/admin) via nullable FKs. All fields strictly per schema. Every creation must specify the post and a textual reason; actor fields are used for audit and compliance flows."},"IAiShopPostReports":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the report entry, generated at creation. Required for linking, navigation, and compliance."},"post_id":{"type":"string","format":"uuid","description":"The reported post's id. Foreign key; required for core linkage and moderation workflows."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the reporting customer, if present. Nullable for flexibility in actor identity."},{"type":"null","format":"uuid","description":"FK to the reporting customer, if present. Nullable for flexibility in actor identity."}],"description":"FK to the reporting customer, if present. Nullable for flexibility in actor identity."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the reporting seller, if present. Nullable."},{"type":"null","format":"uuid","description":"FK to the reporting seller, if present. Nullable."}],"description":"FK to the reporting seller, if present. Nullable."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the reporting admin, if present. Nullable."},{"type":"null","format":"uuid","description":"FK to the reporting admin, if present. Nullable."}],"description":"FK to the reporting admin, if present. Nullable."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. FKey to action table if the report has been addressed or linked to a specific moderation action."},{"type":"null","format":"uuid","description":"Nullable. FKey to action table if the report has been addressed or linked to a specific moderation action."}],"description":"Nullable. FKey to action table if the report has been addressed or linked to a specific moderation action."},"reason":{"type":"string","description":"Non-nullable. The reporter's textual explanation for the issue. Basis for triage, analytics, moderation queue intake."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601). Allows time-series navigation and audit compliance."}},"required":["id","post_id","reason","created_at"],"description":"Serialized entity DTO for ai_shop_post_reports. Used as part of paginated lists, moderation panels, compliance review, and detailed links from admin workflow UIs. FKs to all reporting actor scenarios included for flexible business logic."},"IAiShopPostReports.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK. If needed, changes the subject post of the report. Only used in error correction/audit fix scenarios. Not for regular business update."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Correction field for changing the reporting customer actor. Nullable; used if actor attribution must be changed."},{"type":"null","format":"uuid","description":"Correction field for changing the reporting customer actor. Nullable; used if actor attribution must be changed."}],"description":"Correction field for changing the reporting customer actor. Nullable; used if actor attribution must be changed."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Correction field for reporting seller actor, nullable for flexibility in audit correction."},{"type":"null","format":"uuid","description":"Correction field for reporting seller actor, nullable for flexibility in audit correction."}],"description":"Correction field for reporting seller actor, nullable for flexibility in audit correction."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Correction field for reporting admin actor, nullable as above."},{"type":"null","format":"uuid","description":"Correction field for reporting admin actor, nullable as above."}],"description":"Correction field for reporting admin actor, nullable as above."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for directly linking the report to a moderation action, e.g. after adjudication or manual workflow."},{"type":"null","format":"uuid","description":"FK for directly linking the report to a moderation action, e.g. after adjudication or manual workflow."}],"description":"FK for directly linking the report to a moderation action, e.g. after adjudication or manual workflow."},"reason":{"type":"string","description":"Editable field for correcting or supplementing the report's subject or notes. Used in audit compliance and legal scenarios."}},"description":"DTO for updating ai_shop_post_reports records. Only atomic, schema-defined fields included. Used in compliance, legal correction, and audit fix scenarios for moderation records.","required":[]},"IAiShopCommentAttachments.IRequest":{"type":"object","properties":{"comment_id":{"type":"string","format":"uuid","description":"FK reference to ai_shop_post_comments. Filter/search for attachments to a specific comment for thread views."},"file_id":{"type":"string","format":"uuid","description":"FK to ai_shop_files. Enables search for all attachments referencing a specific file asset for analytics or moderation purposes."},"name":{"type":"string","description":"Filter by attachment filename (original or logical name). Enables textual search for matching file display names in comment attachments."},"type":{"type":"string","description":"Filter by attachment type, such as 'image/png', 'application/pdf', etc. Used for document filtering or type-based moderation queues."},"size":{"type":"integer","description":"Attachment size (bytes). Filter for files of a certain size in comment attachment listings."}},"description":"Search/filter/page DTO for query operations against ai_shop_comment_attachments table. Each field is directly from schema and is atomic for query optimization and analytics. Used for moderation review, UI listing, and forensic log review.","required":[]},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number (1-based)."},"limit":{"type":"integer","description":"Max number of records per page."},"records":{"type":"integer","description":"Total record count across all pages."},"pages":{"type":"integer","description":"Total number of pages in this pagination session."}},"required":["current","limit","records","pages"],"description":"Page metadata for paginated results, standard for all IPage<T> containers."}}},"completed":130,"total":286,"step":0,"created_at":"2025-07-23T07:08:32.978Z"},"tokenUsage":{"facade":{"aggregate":{"total":2932520,"input":{"total":2813239,"cached":0},"output":{"total":119281,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2932520,"input":{"total":2813239,"cached":0},"output":{"total":119281,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":2932520,"input":{"total":2813239,"cached":0},"output":{"total":119281,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":2932520,"input":{"total":2813239,"cached":0},"output":{"total":119281,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageAiShopCommentAttachments":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information for the result set.\n\nContains the current page number, record limit per page, total records, and total pages. Refers to the standard IPage.IPagination type for pagination data."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCommentAttachments"},"description":"Array of ai_shop_comment_attachments records matching the current filter, search, or pagination state. Each item fully represents one comment attachment entity."}},"required":["pagination","data"],"description":"Paginated result set for ai_shop_comment_attachments type entities.\n\nContains both the pagination metadata and an array of ai_shop_comment_attachments objects matching the query parameters. Used for list/search endpoints and grid/table UIs."},"IAiShopCommentAttachments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for the comment attachment entry.\n\nDirect reference to the record. Fulfills normalized attachment requirement as per schema."},"comment_id":{"type":"string","format":"uuid","description":"Comment entity id this attachment is linked to.\n\nForeign key to ai_shop_post_comments.id, required for referential integrity."},"file_id":{"type":"string","format":"uuid","description":"File reference id for the attached file object in ai_shop_files.\n\nImplements 3NF file/attachment reference logic. Respects normalized file management patterns."},"name":{"type":"string","description":"Attachment display name for UI, admin, or user clarification. Typically matches original file name or user-labeled attachment."},"type":{"type":"string","description":"Attachment MIME/type or file class (e.g., 'image/png', 'application/pdf').\n\nUsed for programmatic content preview and routing."},"size":{"type":"integer","description":"File size in bytes. Implements business and audit requirements for attachment size tracking.\n\nUsed for enforcing file size limits per policy."}},"required":["id","comment_id","file_id","name","type","size"],"description":"Represents a single file attachment record tied to a comment on a bulletin post.\n\nImplements normalized link between ai_shop_post_comments and ai_shop_files for media/files. Includes metadata for file access, type, and audit."},"IAiShopCommentAttachments.ICreate":{"type":"object","properties":{"comment_id":{"type":"string","format":"uuid","description":"The unique identifier for the comment to which this attachment will be linked. Must correspond to an existing ai_shop_post_comments.id."},"file_id":{"type":"string","format":"uuid","description":"The file id (ai_shop_files.id) which provides the binary/blob content and metadata.\n\nReferential integrity must be enforced to ensure file existence."},"name":{"type":"string","description":"Display name or label for the file attachment (commonly original file name or user-upload label)."},"type":{"type":"string","description":"Attachment file mime type or category (e.g., 'image/png'). Must match the uploaded file's content type."},"size":{"type":"integer","description":"Attachment file size in bytes. Used for quota management and policy enforcement."}},"required":["comment_id","file_id","name","type","size"],"description":"Creation shape for a new comment attachment in ai_shop_comment_attachments.\n\nIncludes all values except the PK (id), which is generated on insert. Requires full linkage, metadata, and file size for system enforcement."},"IAiShopCommentAttachments.IUpdate":{"type":"object","properties":{"comment_id":{"type":"string","format":"uuid","description":"Optionally update the linked comment (ai_shop_post_comments.id). Rarely changed after initial insert, but permitted by shape."},"file_id":{"type":"string","format":"uuid","description":"Optionally update the referenced file object (ai_shop_files.id), in the rare event that file is swapped for a correction or admin override."},"name":{"type":"string","description":"Edit/display label for the file attachment. Used for UI user correction or re-labeling after file upload."},"type":{"type":"string","description":"Edit or correction of the file's content-type/mime, if business needs require."},"size":{"type":"integer","description":"Amendment of file size in the event of a corrected upload or file metadata fix."}},"required":[],"description":"Update object for comment attachment entity.\n\nPermits changes to linked file/comment, label, mime type, and file size. The id of the comment attachment is implied by path selection, not included here."},"IAiShopModerationActions.IRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Filter for moderation action by unique id."},"moderator_id":{"type":"string","format":"uuid","description":"Filter for admin who performed the moderation action."},"post_id":{"type":"string","format":"uuid","description":"Filter moderation actions that targeted a specific post."},"comment_id":{"type":"string","format":"uuid","description":"Filter moderation actions that targeted a specific comment."},"action_type":{"type":"string","description":"Filter moderation actions by action type (e.g., 'hide', 'delete', 'warn', 'restore'). Used for discovering all actions of a certain category."},"reason":{"type":"string","description":"Full-text or fuzzy search filter based on the moderation action reason."},"created_at_from":{"type":"string","format":"date-time","description":"Lower-bound timestamp filter for action creation date (search actions after this datetime)."},"created_at_to":{"type":"string","format":"date-time","description":"Upper-bound timestamp filter for action creation date (search actions before this datetime)."},"page":{"type":"integer","description":"Page number for pagination (optional, default 1)."},"limit":{"type":"integer","description":"Number of records per page (optional, default 20)."}},"required":[],"description":"Request / filter DTO for searching moderation action records.\n\nAllows filtering by any schema field, date bounding, paging, and full-text search within reason."},"IPageAiShopModerationActions":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata (current page, limit, total records/pages)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopModerationActions"},"description":"Array of moderation actions matching provided filters (as individual schema objects)."}},"required":["pagination","data"],"description":"Paginated result containing moderation action entities and paging metadata.\n\nUsed for mod dashboards, audit logs, compliance UI."},"IAiShopModerationActions":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique primary key (PK) for the moderation action log entry."},"moderator_id":{"type":"string","format":"uuid","description":"Foreign Key: Admin user ID who performed the moderation."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to ai_shop_posts (nullable, if moderation applies only to comment)."},{"type":"null"}],"description":"FK to ai_shop_posts (nullable, if moderation applies only to comment)."},"comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to ai_shop_post_comments (nullable, if moderation applies only to post or system context)."},{"type":"null"}],"description":"FK to ai_shop_post_comments (nullable, if moderation applies only to post or system context)."},"action_type":{"type":"string","description":"Type of moderation - e.g., 'hide', 'delete', 'warn', 'restore'. Must follow business logic for action events."},"reason":{"type":"string","description":"Moderator's provided reason for action. Required for audit and compliance."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of moderation action event (audit, compliance, BI)."}},"required":["id","moderator_id","action_type","reason","created_at"],"description":"A moderation action record logging admin/system responses to posts/comments.\n\nEach row represents a moderation event (e.g., hide, delete, warn, restore), referencing admin, post/comment, and including a reason/audit time."},"IAiShopModerationActions.ICreate":{"type":"object","properties":{"moderator_id":{"type":"string","format":"uuid","description":"FK to admin who executed the moderation. Must be an existing admin."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the affected post (nullable if comment is the only target)."},{"type":"null"}],"description":"FK to the affected post (nullable if comment is the only target)."},"comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the affected comment (nullable if action applies only to post)."},{"type":"null"}],"description":"FK to the affected comment (nullable if action applies only to post)."},"action_type":{"type":"string","description":"Enumeration/type of moderation performed (e.g., 'hide', 'delete', 'warn', 'restore')."},"reason":{"type":"string","description":"Required reason/annotation for auditing and compliance."}},"required":["moderator_id","action_type","reason"],"description":"Creation DTO for a new moderation action event in ai_shop_moderation_actions.\n\nCaptures admin reference, context (post, comment), type, and business justification."},"IAiShopModerationActions.IUpdate":{"type":"object","properties":{"moderator_id":{"type":"string","format":"uuid","description":"Update FK for admin actor; not usually altered after event, but present for override correctness."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update reference to post (nullable)."},{"type":"null"}],"description":"Update reference to post (nullable)."},"comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update reference to comment (nullable)."},{"type":"null"}],"description":"Update reference to comment (nullable)."},"action_type":{"type":"string","description":"Update moderation event type."},"reason":{"type":"string","description":"Update the reason for moderation (compliance reason, audit correction, etc.)"}},"required":[],"description":"Update DTO for moderation actions, allowing edits to admin, targets, action, and reason.\n\nPrimary key is handled by path parameter, not included in payload."},"aiShopCarts.IRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Filter by the unique identifier (UUID) of the cart."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Filter by the customer who owns the cart. Refers to ai_shop_customers.id."},"ai_shop_cart_session_id":{"type":"string","format":"uuid","description":"Filter by guest/anonymous cart session id if not associated with an authenticated user."},"status":{"type":"string","description":"Filter by status of the cart ('active', 'abandoned', 'converted', etc)."},"created_at_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) for cart creation datetime filter."},"created_at_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) for cart creation datetime filter."},"updated_at_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) for cart last update datetime filter."},"updated_at_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) for cart last update datetime filter."},"page":{"type":"integer","description":"Page number for pagination (starts at 1, default 1)."},"limit":{"type":"integer","description":"Number of records per page (default 20)."}},"required":[],"description":"Request/query DTO for listing and searching carts in ai_shop_carts. All filters and pagination settings are allowed as per schema and admin/customer dashboard needs."},"aiShopCarts.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for cart list/grid/query result views. Includes page, total, limit, pages, etc."},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCarts"},"description":"Array of cart records matching the page and filter constraints (each entry is a full cart object)."}},"required":["pagination","data"],"description":"Paginated result set for cart query (ai_shop_carts table).\n\nAll records match the provided request DTO or filter set, and pagination includes UI navigation keys. Used in admin, customer, and guest dashboards."},"aiShopCarts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for each shopping cart.\n\nCorresponds to ai_shop_carts.id and is required for identifying, editing, or auditing carts."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the customer who owns this cart, if any. Nullable for guest/anonymous carts (see ai_shop_cart_session_id)."},{"type":"null"}],"description":"ID of the customer who owns this cart, if any. Nullable for guest/anonymous carts (see ai_shop_cart_session_id)."},"ai_shop_cart_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Cart session id for guest/unauthenticated flows. Nullable—if set, AI Shop maintains persistent cart state until session merges into customer cart."},{"type":"null"}],"description":"Cart session id for guest/unauthenticated flows. Nullable—if set, AI Shop maintains persistent cart state until session merges into customer cart."},"status":{"type":"string","description":"String encoding of cart lifecycle status. Typical values include 'active', 'abandoned', 'converted'. Dictates business logic and compliance retention."},"created_at":{"type":"string","format":"date-time","description":"Datetime when cart was created, for audit/event processing, compliance checks."},"updated_at":{"type":"string","format":"date-time","description":"Datetime when cart was last modified. Used for cart staleness/abandonment logic."},"abandoned_at":{"oneOf":[{"type":"string","format":"date-time","description":"If cart was considered abandoned (per business definition), records when it was flagged. Nullable—field is present only if cart status is 'abandoned'."},{"type":"null"}],"description":"If cart was considered abandoned (per business definition), records when it was flagged. Nullable—field is present only if cart status is 'abandoned'."}},"required":["id","status","created_at","updated_at"],"description":"Represents an individual shopping cart in the ai_shop_carts table (persistent for customers and guests).\n\nNormalizes cart status, ownership (customer or session), lifecycle, and audit fields according to the requirements."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number. Always 1-based, unsigned integer."},"limit":{"type":"integer","description":"Maximum number of records per page.\n\nDefaults to 100."},"records":{"type":"integer","description":"Total number of records in the database satisfying the current query/parameters."},"pages":{"type":"integer","description":"Total number of pages matching the query (ceiling of records/limit)."}},"required":["current","limit","records","pages"],"description":"Page information for paginated list results relating to IPage.\n\nIncludes current page, record limit, total records, and total pages for grid, table, or API responses."}}},"completed":142,"total":286,"step":0,"created_at":"2025-07-23T07:08:34.844Z"},"tokenUsage":{"facade":{"aggregate":{"total":3068271,"input":{"total":2945895,"cached":0},"output":{"total":122376,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3068271,"input":{"total":2945895,"cached":0},"output":{"total":122376,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3068271,"input":{"total":2945895,"cached":0},"output":{"total":122376,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3068271,"input":{"total":2945895,"cached":0},"output":{"total":122376,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageAiShopFiles":{"type":"object","title":"IPageAiShopFiles","description":"A paginated page of AI Shop file metadata records, corresponding to the ai_shop_files table in the systematic context. This is the standard IPage container pattern used throughout the system, parameterized for ai_shop_files row schema objects.\n\nIncludes pagination metadata (current page, limit, total records/pages) and an array of file objects, each representing a single uploaded file's metadata in the AI Shop ecosystem. All properties and structure strictly follow the IPage pattern, referencing ai_shop_files for file entries.\n\nSee Systematic/File upload management requirements and System Architecture docs for usage and audit scenarios.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"Array of ai_shop_files objects for the current page, with all metadata fields defined in the schema.","items":{"$ref":"#/components/schemas/IAiShopFiles"}}},"required":["pagination","data"]},"IAiShopFiles":{"type":"object","title":"IAiShopFiles","description":"AI Shop File metadata object, representing an individual uploaded file as stored in the ai_shop_files DB table. This type records all physical metadata about an uploaded file for the AI Shop system (across posts, products, attachments, etc). Strictly normalized, non-duplicative storage per Systematic/file DB table schema. Each field aligns with a column in the DB, facilitating precise file tracking, quota, preview, or download.\n\nUsed in admin, upload, product, bulletin, or attachment flows. See @namespace Systematic, ai_shop_files in the Prisma schema.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: Unique file identifier. Required for every file-metadata relation. See DB PK constraints."},"original_name":{"type":"string","description":"Original file name as uploaded, for UI/admin display (e.g., 'invoice2025.pdf')."},"uri":{"type":"string","description":"Persistent storage URI or path (e.g., cloud url, s3 key). Unique per file, used for direct programmatic retrieval."},"mime_type":{"type":"string","description":"File mime type (e.g., 'image/png', 'application/pdf'). Used for content previews and validation."},"size_bytes":{"type":"integer","description":"File size in bytes. Used for quota enforcement, auditing, upload display."},"uploader_name":{"oneOf":[{"type":"string","description":"Name of uploader if known at upload time, for audit, attribution, or internal display."},{"type":"null","description":"Name of uploader if known at upload time, for audit, attribution, or internal display."}],"description":"Name of uploader if known at upload time, for audit, attribution, or internal display."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp for when file was uploaded. Used in audit, regulatory, and data retention calculations."}},"required":["id","original_name","uri","mime_type","size_bytes","uploaded_at"]},"IAiShopFiles.ICreate":{"type":"object","title":"IAiShopFiles.ICreate","description":"DTO for registering a new file metadata record in ai_shop_files. Used in file upload, product image/attachment registration, post-attachment association, etc.\n\nAll fields correspond to atomic columns in Prisma. No references to audit/user/deleted fields not in schema.\n\nSee Systematic upload API docs for usage.","properties":{"original_name":{"type":"string","description":"Original file name, as uploaded (required)."},"uri":{"type":"string","description":"Unique URI of the file as saved in storage (required; system responsibility to ensure uniqueness)."},"mime_type":{"type":"string","description":"Mime/type for uploaded file (required)."},"size_bytes":{"type":"integer","description":"File size in bytes (required)."},"uploader_name":{"oneOf":[{"type":"string","description":"Uploader (user) name if available at upload; nullable."},{"type":"null","description":"Uploader (user) name if available at upload; nullable."}],"description":"Uploader (user) name if available at upload; nullable."},"uploaded_at":{"type":"string","format":"date-time","description":"Upload timestamp (required; typically set to now)."}},"required":["original_name","uri","mime_type","size_bytes","uploaded_at"]},"IAiShopFiles.IUpdate":{"type":"object","title":"IAiShopFiles.IUpdate","description":"DTO for updating an existing ai_shop_files metadata record (Systematic/file). Fields may be updated individually or together; updates are typically restricted to allowed fields. ID is path param, not in body. Follows ai_shop_files schema—do not add non-existent properties.\n\nPrimarily for migrations, audit correction, or admin patch.","properties":{"original_name":{"type":"string","description":"(Optional) New file name for update."},"uri":{"type":"string","description":"(Optional) New URI/path for file update. Must remain unique."},"mime_type":{"type":"string","description":"(Optional) New mime type for corrected/converted files."},"size_bytes":{"type":"integer","description":"(Optional) New file size, e.g., after migration/audit."},"uploader_name":{"oneOf":[{"type":"string","description":"(Optional) Uploader name correction/update."},{"type":"null","description":"(Optional) Uploader name correction/update."}],"description":"(Optional) Uploader name correction/update."},"uploaded_at":{"type":"string","format":"date-time","description":"(Optional) New upload timestamp (e.g., for history corrections)."}},"required":[]},"IAiShopAuditLogs.IRequest":{"type":"object","title":"IAiShopAuditLogs.IRequest","description":"Request DTO for listing, searching, or paginating audit log entries from ai_shop_audit_logs. Used in admin/audit UI tools or advanced integrations. All filter, search, or paging params must relate to atomic schema fields.\n\nInclude filters for event_id, event_type, actor_id, etc. as needed. See audit log search API documentation for example payloads.","properties":{"event_id":{"oneOf":[{"type":"string","description":"(Optional) Filter for specific event_id, unique event string."},{"type":"null","description":"(Optional) Filter for specific event_id, unique event string."}],"description":"(Optional) Filter for specific event_id, unique event string."},"event_type":{"oneOf":[{"type":"string","description":"(Optional) Filter for specific event type (e.g., 'USER_LOGIN', 'ORDER_CANCELED')."},{"type":"null","description":"(Optional) Filter for specific event type (e.g., 'USER_LOGIN', 'ORDER_CANCELED')."}],"description":"(Optional) Filter for specific event type (e.g., 'USER_LOGIN', 'ORDER_CANCELED')."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Filter by actor ID (UUID) involved in event."},{"type":"null","format":"uuid","description":"(Optional) Filter by actor ID (UUID) involved in event."}],"description":"(Optional) Filter by actor ID (UUID) involved in event."},"actor_role":{"oneOf":[{"type":"string","description":"(Optional) Filter by actor's role (customer/seller/admin/system)."},{"type":"null","description":"(Optional) Filter by actor's role (customer/seller/admin/system)."}],"description":"(Optional) Filter by actor's role (customer/seller/admin/system)."},"target_table":{"oneOf":[{"type":"string","description":"(Optional) Filter for affected target_table (e.g., 'ai_shop_orders')."},{"type":"null","description":"(Optional) Filter for affected target_table (e.g., 'ai_shop_orders')."}],"description":"(Optional) Filter for affected target_table (e.g., 'ai_shop_orders')."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Filter for affected record/entity ID."},{"type":"null","format":"uuid","description":"(Optional) Filter for affected record/entity ID."}],"description":"(Optional) Filter for affected record/entity ID."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Lower bound for event date (from)."},{"type":"null","format":"date-time","description":"(Optional) Lower bound for event date (from)."}],"description":"(Optional) Lower bound for event date (from)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Upper bound for event date (to)."},{"type":"null","format":"date-time","description":"(Optional) Upper bound for event date (to)."}],"description":"(Optional) Upper bound for event date (to)."},"page":{"oneOf":[{"type":"integer","description":"(Optional) Page number (pagination)."},{"type":"null","description":"(Optional) Page number (pagination)."}],"description":"(Optional) Page number (pagination)."},"limit":{"oneOf":[{"type":"integer","description":"(Optional) Number of results per page."},{"type":"null","description":"(Optional) Number of results per page."}],"description":"(Optional) Number of results per page."}},"required":[]},"IPageIAiShopAuditLogs":{"type":"object","title":"IPageIAiShopAuditLogs","description":"Paginated page wrapper for audit log records (ai_shop_audit_logs) as per standard IPage pattern. Includes audit log row array (data), pagination metadata, and all auditing columns from schema.\n\nUsed in admin, legal, compliance, and application diagnostic UIs for traceability.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"Array of audit log records (ai_shop_audit_logs objects).","items":{"$ref":"#/components/schemas/IAiShopAuditLogs"}}},"required":["pagination","data"]},"IAiShopAuditLogs":{"type":"object","title":"IAiShopAuditLogs","description":"Audit log entry object for AI Shop, as present in ai_shop_audit_logs table (Systematic namespace). Each row logs a business, compliance, or admin event for traceability and compliance. Includes event_id, type, actor, affected table/row, and JSON details blob.\n\nMapped to each event in the business, admin, seller, or customer workflow. See System Architecture Compliance docs for field-by-field details and logging policy.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: UUID of audit log row."},"event_id":{"type":"string","description":"Unique event identifier, for idempotency/deduplication. E.g., 'ORD20250722-38'."},"event_type":{"type":"string","description":"Event type code, e.g., 'USER_LOGIN', 'ORDER_CANCELED', 'CONFIG_EDIT'."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"Actor identifier for event (customer/seller/admin/system); may be null for system-initiated events."},{"type":"null","format":"uuid","description":"Actor identifier for event (customer/seller/admin/system); may be null for system-initiated events."}],"description":"Actor identifier for event (customer/seller/admin/system); may be null for system-initiated events."},"actor_role":{"oneOf":[{"type":"string","description":"Role of actor: 'customer', 'seller', 'admin', or null for system."},{"type":"null","description":"Role of actor: 'customer', 'seller', 'admin', or null for system."}],"description":"Role of actor: 'customer', 'seller', 'admin', or null for system."},"target_table":{"oneOf":[{"type":"string","description":"Name of affected table for the event (e.g., 'ai_shop_orders')."},{"type":"null","description":"Name of affected table for the event (e.g., 'ai_shop_orders')."}],"description":"Name of affected table for the event (e.g., 'ai_shop_orders')."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of affected entity/row for event, optional."},{"type":"null","format":"uuid","description":"UUID of affected entity/row for event, optional."}],"description":"UUID of affected entity/row for event, optional."},"details":{"oneOf":[{"type":"string","description":"Event details as a JSON blob (stringified), e.g., before/after values, context."},{"type":"null","description":"Event details as a JSON blob (stringified), e.g., before/after values, context."}],"description":"Event details as a JSON blob (stringified), e.g., before/after values, context."},"created_at":{"type":"string","format":"date-time","description":"Event creation timestamp, to at least one second precision."}},"required":["id","event_id","event_type","created_at"]},"IAiShopAuditLogs.ICreate":{"type":"object","title":"IAiShopAuditLogs.ICreate","description":"DTO for creation of an audit log record in ai_shop_audit_logs. All required and optional fields must map to the schema: event_id (unique), event_type, actor_id, actor_role, target_table, target_id, details (JSON), created_at. Used for logging admin, user, or system workflow/state transitions. Field rules must follow compliance/audit/Forensics docs.\n\nSee Systematic/audit DB definition for internal structure.","properties":{"event_id":{"type":"string","description":"Unique event identifier (required)."},"event_type":{"type":"string","description":"Event type label (required)."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the actor (nullable for system events)."},{"type":"null","format":"uuid","description":"UUID of the actor (nullable for system events)."}],"description":"UUID of the actor (nullable for system events)."},"actor_role":{"oneOf":[{"type":"string","description":"Role ('customer','seller','admin','system')."},{"type":"null","description":"Role ('customer','seller','admin','system')."}],"description":"Role ('customer','seller','admin','system')."},"target_table":{"oneOf":[{"type":"string","description":"Business table affected (nullable)."},{"type":"null","description":"Business table affected (nullable)."}],"description":"Business table affected (nullable)."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"Entity ID affected (nullable)."},{"type":"null","format":"uuid","description":"Entity ID affected (nullable)."}],"description":"Entity ID affected (nullable)."},"details":{"oneOf":[{"type":"string","description":"JSON string (stringified) of event details, before/after states, contextual payload (nullable)."},{"type":"null","description":"JSON string (stringified) of event details, before/after states, contextual payload (nullable)."}],"description":"JSON string (stringified) of event details, before/after states, contextual payload (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Event creation timestamp (required)."}},"required":["event_id","event_type","created_at"]},"IAiShopAuditLogs.IUpdate":{"type":"object","title":"IAiShopAuditLogs.IUpdate","description":"DTO for updating an audit log entry (Systematic log/audit table).\n\nAll updatable fields must be present in the schema—commonly used for correcting event details or updating actor/attribution/context by privileged roles. ID is path param, not body. Created_at is updateable in rare audit-correction cases.","properties":{"event_id":{"type":"string","description":"Event identifier, for idempotency correction or audit patch."},"event_type":{"type":"string","description":"Event label, business/audit context."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the actor for this event."},{"type":"null","format":"uuid","description":"UUID of the actor for this event."}],"description":"UUID of the actor for this event."},"actor_role":{"oneOf":[{"type":"string","description":"Corrected actor role ('customer','seller','admin','system')."},{"type":"null","description":"Corrected actor role ('customer','seller','admin','system')."}],"description":"Corrected actor role ('customer','seller','admin','system')."},"target_table":{"oneOf":[{"type":"string","description":"Business table affected."},{"type":"null","description":"Business table affected."}],"description":"Business table affected."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"Entity/row UUID affected."},{"type":"null","format":"uuid","description":"Entity/row UUID affected."}],"description":"Entity/row UUID affected."},"details":{"oneOf":[{"type":"string","description":"Patch/correct JSON details for event."},{"type":"null","description":"Patch/correct JSON details for event."}],"description":"Patch/correct JSON details for event."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (for audit correction only)."}},"required":[]},"IAiShopCustomers.IRequest":{"type":"object","title":"IAiShopCustomers.IRequest","description":"DTO for requesting a list, search, or paging of ai_shop_customers records in the system. Applies to both admin UI and customer search API.\n\nAll properties are strictly atomic, mapping to the ai_shop_customers table, and may be used for filtering, sorting, or paginating search results. No joined or derived metadata is included. Suggested pagination pattern for large datasets.","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Filter for a specific customer by UUID."},{"type":"null","format":"uuid","description":"(Optional) Filter for a specific customer by UUID."}],"description":"(Optional) Filter for a specific customer by UUID."},"email":{"oneOf":[{"type":"string","description":"(Optional) Filter by email address (exact match or search)."},{"type":"null","description":"(Optional) Filter by email address (exact match or search)."}],"description":"(Optional) Filter by email address (exact match or search)."},"phone":{"oneOf":[{"type":"string","description":"(Optional) Filter by phone number (nullable for non-provided)."},{"type":"null","description":"(Optional) Filter by phone number (nullable for non-provided)."}],"description":"(Optional) Filter by phone number (nullable for non-provided)."},"status":{"oneOf":[{"type":"string","description":"(Optional) Customer account status to filter by: 'active','withdrawn','suspended' (application-level enum constraint at use site)."},{"type":"null","description":"(Optional) Customer account status to filter by: 'active','withdrawn','suspended' (application-level enum constraint at use site)."}],"description":"(Optional) Customer account status to filter by: 'active','withdrawn','suspended' (application-level enum constraint at use site)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Lower time bound for account creation date."},{"type":"null","format":"date-time","description":"(Optional) Lower time bound for account creation date."}],"description":"(Optional) Lower time bound for account creation date."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Upper time bound for account creation date."},{"type":"null","format":"date-time","description":"(Optional) Upper time bound for account creation date."}],"description":"(Optional) Upper time bound for account creation date."},"page":{"oneOf":[{"type":"integer","description":"(Optional) Results page for paginated output."},{"type":"null","description":"(Optional) Results page for paginated output."}],"description":"(Optional) Results page for paginated output."},"limit":{"oneOf":[{"type":"integer","description":"(Optional) Records per page (pagination)."},{"type":"null","description":"(Optional) Records per page (pagination)."}],"description":"(Optional) Records per page (pagination)."}},"required":[]},"IPageIAiShopCustomers":{"type":"object","title":"IPageIAiShopCustomers","description":"Paginated set of customer records for AI Shop user management, matching ai_shop_customers DB schema, per IPage pattern. Used for admin/customer search result display, management, or compliance reporting.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"Array of full ai_shop_customers records matching page/filter.","items":{"$ref":"#/components/schemas/IAiShopCustomers"}}},"required":["pagination","data"]},"IAiShopCustomers":{"type":"object","title":"IAiShopCustomers","description":"Representation of an AI Shop customer account/record (ai_shop_customers table), supporting user management, onboarding, compliance, customer-integrated flows, etc. Strict mapping to DB atomic fields; used in CRUD, search, and analytics scenarios. All fields normalized.\n\nSee 'Actors' schema for lifecycle/role enforcement, audit, and privacy discussions.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: Globally unique customer identifier."},"email":{"type":"string","description":"Customer's primary email, unique, used for login/ID. Used in notifications, audit, and login."},"phone":{"oneOf":[{"type":"string","description":"Customer's mobile or phone for MFA, optional; may be null if not provided."},{"type":"null","description":"Customer's mobile or phone for MFA, optional; may be null if not provided."}],"description":"Customer's mobile or phone for MFA, optional; may be null if not provided."},"status":{"type":"string","description":"Account lifecycle status: e.g., 'active', 'withdrawn', 'suspended'. Enum: see Actors schema and application logic for enforcement."},"created_at":{"type":"string","format":"date-time","description":"Account creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (profile, login, etc)."}},"required":["id","email","status","created_at","updated_at"]},"IPage.IPagination":{"type":"object","title":"IPage.IPagination","description":"Pagination info for IPage containers. Standard pagination structure for all paged API responses in the system.\n\nTracks current result page, limit (page size), total number of records, and computed total page count, following the core paging model specified in OpenAPI standards.","properties":{"current":{"type":"integer","description":"Current page number (1-based, e.g., 1 for the first page)."},"limit":{"type":"integer","description":"Number of records per page."},"records":{"type":"integer","description":"Total number of records matching query or filter across all pages."},"pages":{"type":"integer","description":"Computed total number of pages, based on limit and record count, rounded up."}},"required":["current","limit","records","pages"]}}},"completed":154,"total":286,"step":0,"created_at":"2025-07-23T07:08:35.453Z"},"tokenUsage":{"facade":{"aggregate":{"total":3204406,"input":{"total":3078543,"cached":0},"output":{"total":125863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3204406,"input":{"total":3078543,"cached":0},"output":{"total":125863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3204406,"input":{"total":3078543,"cached":0},"output":{"total":125863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3204406,"input":{"total":3078543,"cached":0},"output":{"total":125863,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopReturnRequest.ICreate":{"type":"object","properties":{"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"The unique identifier of the order item being returned. Required to establish a normalized, auditable link to the line-level item in the original order. Follows strict 3NF principles. References {@link ai_shop_order_items.id} (UUID string).\n\nRefer to the Prisma column: ai_shop_order_item_id."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"The unique identifier of the customer who is submitting the return request. Fulfills traceability for audit, compliance, and customer service.\n\nRefer to the Prisma column: requested_by_customer_id on ai_shop_return_requests."},"return_reason":{"type":"string","description":"A required field describing the business/process reason stated for initiating the return. Captures customer-provided context necessary for compliance, analytics, and dispute resolution workflows. Typically entered via customer-facing UI when initiating the return, stored as an atomic and normalized value in the schema.\n\nRefer to the Prisma column: return_reason."},"return_status":{"type":"string","description":"The workflow status of the return request at creation. Typically initialized as 'requested' or similar (enum defined at application level: requested, approved, denied, completed, received, etc.). Alignment to compliance workflow required.\n\nRefer to the Prisma column: return_status on ai_shop_return_requests."},"requested_at":{"type":"string","format":"date-time","description":"ISO 8601 datetime when the return was initiated by the customer. Used for workflow SLAs, compliance deadlines, and audit reporting. Must be set at creation.\n\nRefer to the Prisma column: requested_at."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"nullable. Timestamp when the return was processed or closed in the workflow. Remains null until such action is taken. Kept atomic for normalization and time auditing.\n\nRefer to the Prisma column: processed_at (nullable on ai_shop_return_requests)."},{"type":"null"}],"description":"nullable. Timestamp when the return was processed or closed in the workflow. Remains null until such action is taken. Kept atomic for normalization and time auditing.\n\nRefer to the Prisma column: processed_at (nullable on ai_shop_return_requests)."},"admin_note":{"oneOf":[{"type":"string","description":"Admin/audit note for workflow history or compliance. Serves as input-only, atomic commentary not derived from any other field. Used by operations, fulfillment, or moderation workflows internally. Nullable.\n\nRefer to the Prisma column: admin_note (nullable on ai_shop_return_requests)."},{"type":"null"}],"description":"Admin/audit note for workflow history or compliance. Serves as input-only, atomic commentary not derived from any other field. Used by operations, fulfillment, or moderation workflows internally. Nullable.\n\nRefer to the Prisma column: admin_note (nullable on ai_shop_return_requests)."}},"required":["ai_shop_order_item_id","requested_by_customer_id","return_reason","return_status","requested_at"],"description":"Request body for creating a new return request entry. Matches the ai_shop_return_requests Prisma model for atomic, 3NF-compliant creation of a return request. Used in both customer-facing and admin-initiated flows. Includes all relevant audit fields and relationships for a return action."},"IAiShopReturnRequest.IUpdate":{"type":"object","properties":{"return_reason":{"type":"string","description":"Updated reason for the return. Can be edited by admin or customer in certain workflows. Required for compliance, dispute resolution, and audit corrections."},"return_status":{"type":"string","description":"Updated workflow status for the return request (e.g., 'approved', 'denied', 'completed', 'received' etc.). Only acceptable values are those supported by business logic and application-level enums."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the return request moves from incomplete to processed state. Can be set by admin, automated process, or fulfillment system. Remains null if unprocessed. Nullable according to the schema."},{"type":"null"}],"description":"When the return request moves from incomplete to processed state. Can be set by admin, automated process, or fulfillment system. Remains null if unprocessed. Nullable according to the schema."},"admin_note":{"oneOf":[{"type":"string","description":"Administrative, moderation, or business note providing workflow/decision commentary. Input-only, kept atomic. Nullable on schema."},{"type":"null"}],"description":"Administrative, moderation, or business note providing workflow/decision commentary. Input-only, kept atomic. Nullable on schema."}},"required":[],"description":"Update body for modifying an existing return request. Allows atomic changes to any field that is not immutable by business logic (e.g., reason correction, status update, audit notes, or marking as processed). Only properties that are supported by the Prisma model are included. All changes comply with legal, workflow, and normalization requirements."},"IAiShopOrderAbandonment.IRequest":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"The identifier for the order that is considered abandoned. Use to filter/search for all abandonment logs attached to a single order. Maps to ai_shop_order_abandonments.ai_shop_order_id (UUID)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"The customer whose behavior/flow triggered an abandonment. Use for dashboards, behavioral analytics, or customer service queries. Maps to ai_shop_order_abandonments.ai_shop_customer_id (UUID)."},"abandoned_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower bound filter for abandoned_at. Used for date range search. Only logs after this timestamp are returned."},"abandoned_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper bound filter for abandoned_at. Used for date range search. Only logs before this timestamp are returned."},"detection_method":{"type":"string","description":"(Optional) Restrict query to logs matching a certain detection method (business code such as 'timeout', 'payment_fail', etc.)."},"limit":{"type":"integer","description":"(Optional, default by implementation) Maximum records to return in a page. Used for pagination."},"page":{"type":"integer","description":"(Optional, default to 1) Which page of results to return for paging/filtering use cases."}},"required":[],"description":"Request body for searching/paginating ai_shop_order_abandonments logs. Used for analytics, reporting, dashboard, and admin/business flows. Flexible, supports filtered search, paging, and date range analysis. All properties correspond to 3NF schema and permit atomic queries."},"IPageAiShopOrderAbandonment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Metadata about the page result: current page, per-page limit, total records, number of pages."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderAbandonment"},"description":"Array of ai_shop_order_abandonments records representing atomic log objects for each abandonment event."}},"required":["pagination","data"],"description":"Standard paginated response for ai_shop_order_abandonments results. Conforms to IPage<T> conventions for listing, paging, and dashboard reporting. Array of atomic log records plus page metadata."},"IAiShopOrderAbandonment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the abandonment log row. Required by schema for uniqueness, traceability, and deduplication."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK to the abandoned order. Links log to ai_shop_orders.id. Used for reporting, audit, or analytics on abandoned orders."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer associated with the abandoned order (atomic, normalized, direct FK)."},"abandoned_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of when the abandonment event was recognized by the platform. Atomic, normalized, required for compliance and reporting."},"detection_method":{"type":"string","description":"Business process code identifying how the abandonment was detected (e.g., 'timeout', 'customer_cancel', 'payment_fail'). Atomic string, supports advanced campaign/event reporting and analytics."}},"required":["id","ai_shop_order_id","ai_shop_customer_id","abandoned_at","detection_method"],"description":"Atomic log row for each order abandonment event as defined by ai_shop_order_abandonments schema. Used for reporting, analytics, behavioral triggers, compliance, and customer service insight. Strictly 3NF normalized."},"IAiShopOrderAbandonment.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK to order, must match ai_shop_orders.id. Required at row creation for audit, linking, and behavioral analysis."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer owning the abandoned order/event. FK to ai_shop_customers.id. Required for report, business rules, and compliance."},"abandoned_at":{"type":"string","format":"date-time","description":"Atomic time the abandonment was discovered by the platform. ISO 8601 datetime string required at row creation."},"detection_method":{"type":"string","description":"Required code representing how the platform detected the abandonment (e.g., 'timeout', 'customer_cancel', 'browser_exit', 'payment_fail'). Must comply with business logic/app-level enums. Required at insert."}},"required":["ai_shop_order_id","ai_shop_customer_id","abandoned_at","detection_method"],"description":"Creation DTO for new ai_shop_order_abandonments rows. All fields are atomic per 3NF and required for audit, compliance, and campaign analytics on platform activity. Used by backend, BI, and platform detection integrations."},"IAiShopOrderAbandonment.IUpdate":{"type":"object","properties":{"abandoned_at":{"type":"string","format":"date-time","description":"If needed, correction or adjustment to when the abandonment was recorded. Required when business, analytic, or audit logic requires historic fix or SLA adjustment. Optional if not being changed."},"detection_method":{"type":"string","description":"Allows reclassification of the abandonment event's detection method (if error/bug/logic fix needed). Required if detection method is to be changed; otherwise, omit."}},"required":[],"description":"DTO for updating an existing ai_shop_order_abandonments row. Only atomic, normalized fields are permitted for update. Used in error correction, analytics fix, or admin override/forensics. Only allows valid schema fields and never invents non-existent columns."},"IAiShopOrderDelivery.IRequest":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"The identifier for the order being delivered. Restricts retrieval to deliveries for a given order record. FK to ai_shop_orders.id."},"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"Optionally restricts result set to deliveries tied to a specific order item (split/partial delivery). FK to ai_shop_order_items.id."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Filter by the seller responsible for fulfillment of the delivery. FK to ai_shop_sellers.id."},"delivery_status":{"type":"string","description":"Restricts search to delivery records with this business status (pending, ready, shipped, delivered, returned, etc.). Must match one of supported workflow enums (app-level controlled)."},"tracking_number":{"type":"string","description":"Restricts results to a single parcel or shipment identifier (atomic, unique to courier or business timeline). Often used by admin support queries."},"shipper_code":{"type":"string","description":"(Optional) Filter results to a specific shipper/courier service (e.g., 'CJ', 'FEDEX', app-level code/alias)."},"shipped_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower-bound filter for shipped_at timestamp. Used for range-based or date-filtering in shipping dashboards."},"shipped_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper-bound filter for shipped_at timestamp. Used for end/range-based time-based querying."},"delivered_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower-bound for delivered_at timestamp (use for delivery-time KPIs and analytics)."},"delivered_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper-bound for delivered_at filtering (used for dashboard analytics or SLA compliance reporting)."},"seller_memo":{"type":"string","description":"(Optional) Filter to deliveries where seller memo matches or contains provided value (typically search in admin dashboards)."},"admin_note":{"type":"string","description":"(Optional) Filter to deliveries where admin has left a note (support for specific review/forensics workflows)."},"limit":{"type":"integer","description":"(Optional) Page limit for result set size in pagination."},"page":{"type":"integer","description":"(Optional) Result page number (pagination, 1-based)."}},"required":[],"description":"Query parameters for listing, filtering, and searching ai_shop_order_deliveries records for admin, seller, or dashboard use. Supports detailed workflow, SLA, analytics, and forensics queries strictly on schema-present attributes. Flexible and normalized for backoffice and operational use."},"IPageAiShopOrderDelivery":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard page meta object: shows current page, how many records per page, total records, and total page count."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderDelivery"},"description":"Array of delivery records matching query: each is an atomic row from ai_shop_order_deliveries, mapped to schema fields."}},"required":["pagination","data"],"description":"Paginated response for list/search of order deliveries from ai_shop_order_deliveries. Contains page meta and array of atomic delivery records. Used by admin, seller, and BI dashboards as standard list DTO."},"IAiShopOrderDelivery":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique identifier for this delivery entry (primary key). Atomic, generated, and persists for audit trails and shipment references."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK to parent ai_shop_orders row for which this delivery record is attached."},"ai_shop_order_item_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to ai_shop_order_items (optional for split/partial delivery; null means full-order delivery)."},{"type":"null"}],"description":"Nullable FK to ai_shop_order_items (optional for split/partial delivery; null means full-order delivery)."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK to the seller who fulfilled the delivery or whose warehouse was the logistics source."},"delivery_status":{"type":"string","description":"Business process status for delivery: one of set of enum strings (pending, ready, shipped, delivered, returned, etc.), required for workflow, reporting, and SLA logic."},"tracking_number":{"oneOf":[{"type":"string","description":"Nullable. Globally unique tracking or parcel code. Supplied by seller/courier platform, app business-unique. Used in shipping status/parcel searches."},{"type":"null"}],"description":"Nullable. Globally unique tracking or parcel code. Supplied by seller/courier platform, app business-unique. Used in shipping status/parcel searches."},"shipper_code":{"type":"string","description":"Shipment/courier alias or business code (e.g., 'CJ', 'FEDEX', 'INHOUSE'). Determined by business/compliance processes."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable timestamp (ISO 8601) marking when package/parcel left fulfillment site. Provided by seller/courier/fulfillment automation."},{"type":"null"}],"description":"Nullable timestamp (ISO 8601) marking when package/parcel left fulfillment site. Provided by seller/courier/fulfillment automation."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable timestamp (ISO 8601) when delivery was completed to end recipient. Populated by platform, courier push, or admin action. Used for SLA enforcement, auditing, compliance."},{"type":"null"}],"description":"Nullable timestamp (ISO 8601) when delivery was completed to end recipient. Populated by platform, courier push, or admin action. Used for SLA enforcement, auditing, compliance."},"seller_memo":{"oneOf":[{"type":"string","description":"Nullable, atomic, input-only string for seller fulfillment notes to aid in logistics, support auditing, or customer correspondence."},{"type":"null"}],"description":"Nullable, atomic, input-only string for seller fulfillment notes to aid in logistics, support auditing, or customer correspondence."},"admin_note":{"oneOf":[{"type":"string","description":"Nullable, persists admin/internal business note for audit trails, workflow explanations, and compliance. Only updated by admin/ops UI or automated business event handlers."},{"type":"null"}],"description":"Nullable, persists admin/internal business note for audit trails, workflow explanations, and compliance. Only updated by admin/ops UI or automated business event handlers."}},"required":["id","ai_shop_order_id","ai_shop_seller_id","delivery_status","shipper_code"],"description":"Atomic, 3NF-compliant object representing a shipment, delivery, or fulfillment of an order or order item. Used in reporting, auditing, admin dashboards, SLA compliance, and fulfillment integrations. All fields map directly to those in ai_shop_order_deliveries; no non-schema or denormalized attributes included."},"aiShopOrderDeliveries.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Order (ai_shop_orders.id) this delivery is related to, required on creation. FK, must be existing order."},"ai_shop_order_item_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. If this delivery is for a single line-item only (split shipment), provide the item id. Null for entire-order fulfillment."},{"type":"null"}],"description":"Optional. If this delivery is for a single line-item only (split shipment), provide the item id. Null for entire-order fulfillment."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK to ai_shop_sellers.id for the fulfillment provider/seller. Required on create for audit/compliance."},"delivery_status":{"type":"string","description":"Initial business status on creation (enum: pending, ready, shipped, delivered, returned, etc.) as defined by logistics workflow."},"tracking_number":{"oneOf":[{"type":"string","description":"Optional, string for shipment/parcel tracking carrier ID or code. May be assigned by seller, platform, or courier. Nullable."},{"type":"null"}],"description":"Optional, string for shipment/parcel tracking carrier ID or code. May be assigned by seller, platform, or courier. Nullable."},"shipper_code":{"type":"string","description":"Assigned business/courier/integrator code for logistics and cross-system referencing (e.g., 'CJ', 'FEDEX'). Required on creation by shipping workflow."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable. When item(s) leave fulfillment (warehouse, seller, etc.). Required by business logic on shipment. Nullable on initial creation."},{"type":"null"}],"description":"Nullable. When item(s) leave fulfillment (warehouse, seller, etc.). Required by business logic on shipment. Nullable on initial creation."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable. When item(s) are delivered to recipient. Null until completion of delivery. Set by platform or shipping push/completion event."},{"type":"null"}],"description":"Nullable. When item(s) are delivered to recipient. Null until completion of delivery. Set by platform or shipping push/completion event."},"seller_memo":{"oneOf":[{"type":"string","description":"(Optional) Seller’s fulfillment or packing note: preserved for audit or workflow query, atomic, not shown externally."},{"type":"null"}],"description":"(Optional) Seller’s fulfillment or packing note: preserved for audit or workflow query, atomic, not shown externally."},"admin_note":{"oneOf":[{"type":"string","description":"(Optional) Admin/internal fulfillment note: provides additional context, investigation, compliance info. Not visible to external users. Nullable."},{"type":"null"}],"description":"(Optional) Admin/internal fulfillment note: provides additional context, investigation, compliance info. Not visible to external users. Nullable."}},"required":["ai_shop_order_id","ai_shop_seller_id","delivery_status","shipper_code"],"description":"Atomic creation object for new ai_shop_order_deliveries record, strictly following 3NF. Used in insertion of single delivery fulfillment event, mapping required relationships. All business/workflow logic for populated fields is enforced at the service layer."},"aiShopOrderDeliveries":{"$ref":"#/components/schemas/IAiShopOrderDelivery","description":"Atomic, persisted delivery/fulfillment entity for an order or its item. All values defined by ai_shop_order_deliveries. Used as detailed resource or single record fetch, not for creation. Contains no additional computed, derived, or non-schema fields. Fully 3NF normalized."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호입니다. 첫 페이지는 1입니다."},"limit":{"type":"integer","description":"페이지당 최대 레코드 수입니다. 일반적으로 기본값은 100입니다."},"records":{"type":"integer","description":"데이터베이스의 총 레코드 수입니다."},"pages":{"type":"integer","description":"전체 페이지 수로, records/limit의 올림으로 계산합니다."}},"required":["current","limit","records","pages"],"description":"페이지네이션 정보 객체. 결과의 현재 페이지, 페이지당 레코드 제한, 전체 레코드 수, 전체 페이지 수를 포함합니다."}}},"completed":166,"total":286,"step":0,"created_at":"2025-07-23T07:08:35.673Z"},"tokenUsage":{"facade":{"aggregate":{"total":3341202,"input":{"total":3211207,"cached":0},"output":{"total":129995,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3341202,"input":{"total":3211207,"cached":0},"output":{"total":129995,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3341202,"input":{"total":3211207,"cached":0},"output":{"total":129995,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3341202,"input":{"total":3211207,"cached":0},"output":{"total":129995,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopAdminProfile.ICreate":{"type":"object","properties":{"admin_id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) referencing the admin user for this profile.\n\nReferences ai_shop_admins.id for strict 1:1 relationship. Required when creating an admin profile. See Prisma schema ai_shop_admin_profiles."},"duty_region":{"oneOf":[{"type":"string","description":"Optional string representing the compliance jurisdiction or regulatory assignment for the admin.\n\nMay be blank or null depending on business configuration. See ai_shop_admin_profiles.duty_region."},{"type":"null"}],"description":"Optional string representing the compliance jurisdiction or regulatory assignment for the admin.\n\nMay be blank or null depending on business configuration. See ai_shop_admin_profiles.duty_region."},"ip_allowlist":{"oneOf":[{"type":"string","description":"Serialized JSON array or text of IP addresses or CIDR notation ranges (if present for this admin profile).\n\nField aligns with ai_shop_admin_profiles.ip_allowlist. Null indicates no restriction for this admin."},{"type":"null"}],"description":"Serialized JSON array or text of IP addresses or CIDR notation ranges (if present for this admin profile).\n\nField aligns with ai_shop_admin_profiles.ip_allowlist. Null indicates no restriction for this admin."},"contact_email":{"oneOf":[{"type":"string","format":"email","description":"Optional backup or escalation email for admin-specific notifications, escalation, or password recovery.\n\nCaptured as ai_shop_admin_profiles.contact_email. May be null."},{"type":"null"}],"description":"Optional backup or escalation email for admin-specific notifications, escalation, or password recovery.\n\nCaptured as ai_shop_admin_profiles.contact_email. May be null."}},"required":["admin_id"],"description":"Payload for creating an admin profile, as defined in ai_shop_admin_profiles (see Actors Prisma schema).\n\nProvides fields for jurisdiction, IP allowlisting, and escalation communication for admins. Enforces 1:1 relation with ai_shop_admins by unique foreign key."},"IAiShopAdminProfile.IUpdate":{"type":"object","properties":{"duty_region":{"oneOf":[{"type":"string","description":"Optionally update compliance jurisdiction for this admin profile. Null to clear."},{"type":"null"}],"description":"Optionally update compliance jurisdiction for this admin profile. Null to clear."},"ip_allowlist":{"oneOf":[{"type":"string","description":"Optionally update the list of allowed IPs or CIDR ranges (serialized string). Null clears allowlist."},{"type":"null"}],"description":"Optionally update the list of allowed IPs or CIDR ranges (serialized string). Null clears allowlist."},"contact_email":{"oneOf":[{"type":"string","format":"email","description":"Optionally update contact or escalation email for this admin profile. Null clears email."},{"type":"null"}],"description":"Optionally update contact or escalation email for this admin profile. Null clears email."}},"required":[],"description":"Update structure for admin profile fields (ai_shop_admin_profiles). Only fields present in the schema can be changed: duty_region, ip_allowlist, contact_email, all optional for partial update."},"IAiShopProduct.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","description":"Page number for paginated products listing.\n\nOptional; see standard IPage.IRequest definition."},{"type":"null"}],"description":"Page number for paginated products listing.\n\nOptional; see standard IPage.IRequest definition."},"limit":{"oneOf":[{"type":"number","description":"Number of records per page. Default enforced by service config; follows standard IPage.IRequest."},{"type":"null"}],"description":"Number of records per page. Default enforced by service config; follows standard IPage.IRequest."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by belonged seller (referenced as ai_shop_seller_id in ai_shop_products)."},{"type":"null"}],"description":"Filter by belonged seller (referenced as ai_shop_seller_id in ai_shop_products)."},"category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter products by category. Must match ai_shop_categories.id."},{"type":"null"}],"description":"Filter products by category. Must match ai_shop_categories.id."},"status":{"oneOf":[{"type":"string","description":"Business status filter for product. Acceptable values are those present in product status enum: e.g., 'active','inactive','draft','suspended','deleted'. Refer to ai_shop_products.status."},{"type":"null"}],"description":"Business status filter for product. Acceptable values are those present in product status enum: e.g., 'active','inactive','draft','suspended','deleted'. Refer to ai_shop_products.status."},"keyword":{"oneOf":[{"type":"string","description":"Keyword search (fuzzy/partial). Applied to product name and description using indexed text search (trigram, etc.)."},{"type":"null"}],"description":"Keyword search (fuzzy/partial). Applied to product name and description using indexed text search (trigram, etc.)."},"sort":{"oneOf":[{"type":"string","description":"Sort expression for product listing (e.g., '-created_at', '+name'). Must be composed of existing fields in the schema."},{"type":"null"}],"description":"Sort expression for product listing (e.g., '-created_at', '+name'). Must be composed of existing fields in the schema."}},"required":[],"description":"Request criteria for advanced search/filtering of ai_shop_products records. Supports pagination (page/limit), seller/category filtering, status filtering, text search (keyword), and schema-based sorting. Aligned to the requirements in IPage<IShopProduct> flows."},"IPageAiShopProduct":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProduct"},"description":"Array of product entities returned for this page."}},"required":["pagination","data"],"description":"Paginated response for searched/listed AiShop products, using standard IPage structure.\n\nData is a page of IAiShopProduct objects; pagination metadata includes current/total/limit/page."},"IAiShopProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for ai_shop_products entity. Uniquely identifies a product row."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Foreign key reference to the seller that owns this product.\n\nLinks to ai_shop_sellers.id; required for business accountability and role separation."},"category_id":{"type":"string","format":"uuid","description":"Foreign key connecting product to its assigned category.\n\nCorresponds to ai_shop_categories.id. Enables structured product taxonomy."},"name":{"type":"string","description":"Product title or display name, as registered by seller or admin/editor.\n\nRepresents central detail for product listings and search. Enforced for normalization."},"description":{"type":"string","description":"Long-form text or markup describing the product. Allows HTML/Markdown; used in search for AI/content analysis."},"status":{"type":"string","description":"Product status as a business state—should use controlled vocabulary matching schema/enum: e.g., 'active','inactive','draft','suspended','deleted'."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601, UTC with timezone) for product creation. See ai_shop_products.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (ISO 8601, UTC with timezone). See ai_shop_products.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-deletion timestamp (nullable). Non-null indicates product is marked as deleted in business logic/audit."},{"type":"null"}],"description":"Soft-deletion timestamp (nullable). Non-null indicates product is marked as deleted in business logic/audit."}},"required":["id","ai_shop_seller_id","category_id","name","description","status","created_at","updated_at"],"description":"Entity/detailed data for ai_shop_products row. All fields present in normalized Prisma schema; includes all required for reporting, audit, and compliance. Includes soft-delete audit if deleted_at is set."},"IAiShopProducts.ICreate":{"type":"object","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Foreign key referencing seller creating/owning the product. Must match ai_shop_sellers.id."},"category_id":{"type":"string","format":"uuid","description":"FK to category; must match ai_shop_categories.id."},"name":{"type":"string","description":"Product title to be registered.   Must be unique within seller (see unique composite on ai_shop_products)."},"description":{"type":"string","description":"Content/long description field for the product. Required."},"status":{"type":"string","description":"Product business status ('active','inactive','draft','suspended','deleted') per system workflow."}},"required":["ai_shop_seller_id","category_id","name","description","status"],"description":"Payload for creating a new AI Shop product (ai_shop_products row).\n\nMaps strictly to required columns in the table; ID/timestamps managed by DB/application layer."},"IAiShopProducts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for ai_shop_products entity."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK reference to seller. Maps to ai_shop_sellers.id."},"category_id":{"type":"string","format":"uuid","description":"FK to product category. Maps to ai_shop_categories.id."},"name":{"type":"string","description":"Product display name/title."},"description":{"type":"string","description":"Product content (long-form/descriptive text)."},"status":{"type":"string","description":"Status business logic field (controlled vocabulary)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601, UTC+TZ)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO 8601, UTC+TZ)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable soft-delete timestamp; non-null indicates logically deleted product."},{"type":"null"}],"description":"Nullable soft-delete timestamp; non-null indicates logically deleted product."}},"required":["id","ai_shop_seller_id","category_id","name","description","status","created_at","updated_at"],"description":"AI Shop product resource as returned in detail/search flows.\n\nMatches ai_shop_products Prisma structure, includes all fields for audit/compliance reporting as well as UI display. Soft-deletion handled by non-null deleted_at."},"IAiShopProducts.IUpdate":{"type":"object","properties":{"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Change owner/seller FK (rare, admin only). Optional for partial update."},{"type":"null"}],"description":"Change owner/seller FK (rare, admin only). Optional for partial update."},"category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Change product category (FK to ai_shop_categories). Optional/nullable on update."},{"type":"null"}],"description":"Change product category (FK to ai_shop_categories). Optional/nullable on update."},"name":{"oneOf":[{"type":"string","description":"Update product name/title. Optional/nullable for partial update; must preserve seller-unique constraint."},{"type":"null"}],"description":"Update product name/title. Optional/nullable for partial update; must preserve seller-unique constraint."},"description":{"oneOf":[{"type":"string","description":"Update product content/long description. Field is optional on update."},{"type":"null"}],"description":"Update product content/long description. Field is optional on update."},"status":{"oneOf":[{"type":"string","description":"Update product business state (must be one of allowed statuses)."},{"type":"null"}],"description":"Update product business state (must be one of allowed statuses)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set (ISO 8601) to soft-delete the product. If non-null, product is logically deleted in business flow."},{"type":"null"}],"description":"Set (ISO 8601) to soft-delete the product. If non-null, product is logically deleted in business flow."}},"required":[],"description":"Structure for updating product details (PATCH/PUT flows to ai_shop_products). Only includes fields that exist in schema and are updatable in real database rows. If omitted, existing value is preserved."},"IPageAiShopProductVariants.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","description":"Page number for paginated variant listing (optional)."},{"type":"null"}],"description":"Page number for paginated variant listing (optional)."},"limit":{"oneOf":[{"type":"number","description":"Maximum number of records per page (optional; default by API setting)."},{"type":"null"}],"description":"Maximum number of records per page (optional; default by API setting)."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter to variants belonging to this product only."},{"type":"null"}],"description":"Filter to variants belonging to this product only."},"sku":{"oneOf":[{"type":"string","description":"Exact or partial SKU match for filtering variants."},{"type":"null"}],"description":"Exact or partial SKU match for filtering variants."},"option_combo":{"oneOf":[{"type":"string","description":"Exact or partial option_combo match for variant filtering."},{"type":"null"}],"description":"Exact or partial option_combo match for variant filtering."},"is_active":{"oneOf":[{"type":"boolean","description":"Restrict listed variants to only active/inactive (sellable) status. Null lists all."},{"type":"null"}],"description":"Restrict listed variants to only active/inactive (sellable) status. Null lists all."}},"required":[],"description":"Request/search/query structure for paginated batch listing of product variants (ai_shop_product_variants).\n\nMatches search/filter/sort conventions from IPage<IEntity> pattern; all property names exist in schema."},"IPageAiShopProductVariants":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProductVariants"},"description":"Page array of product variant entities."}},"required":["pagination","data"],"description":"Paginated result object for ai_shop_product_variants listings; returns structured page and array of IAiShopProductVariants resources."},"IAiShopProductVariants":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key/id column of ai_shop_product_variants; unique for row."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"FK reference to parent product (ai_shop_products.id). Each variant belongs to exactly one parent product."},"sku":{"type":"string","description":"Stock-Keeping Unit code for this variant (unique per product)."},"option_combo":{"type":"string","description":"String encoding specific option set for this variant (e.g., 'Color:Red;Size:L'). Ensures uniqueness when combined with product."},"barcode":{"oneOf":[{"type":"string","description":"Barcode/EAN/UPC for supporting inventory/logistics tracking. Optional field, may be null."},{"type":"null"}],"description":"Barcode/EAN/UPC for supporting inventory/logistics tracking. Optional field, may be null."},"is_active":{"type":"boolean","description":"Boolean flag indicating whether this variant is currently available for sale (true) or not sellable (false)."}},"required":["id","ai_shop_product_id","sku","option_combo","is_active"],"description":"Product variant atom (ai_shop_product_variants row), matching all fields in normalized schema. Used for product option combos, stock tracking, business analytics, and selection in UI/catalog. Partial descriptions per Prisma fields."},"IAiShopProductVariants.ICreate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"Parent product FK for new variant. Must be valid PK for ai_shop_products."},"sku":{"type":"string","description":"SKU label for this variant, unique per product."},"option_combo":{"type":"string","description":"Serialized option combination. Example: 'Color:Red;Size:L'."},"barcode":{"oneOf":[{"type":"string","description":"Optional barcode string (EAN/UPC as appropriate)."},{"type":"null"}],"description":"Optional barcode string (EAN/UPC as appropriate)."},"is_active":{"type":"boolean","description":"Initial active/sellable flag for new variant."}},"required":["ai_shop_product_id","sku","option_combo","is_active"],"description":"Creation schema for adding a product variant atomically to ai_shop_product_variants. All FK and unique constraints must be satisfied on insert."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"number","description":"Current page number (uint32)"},"limit":{"type":"number","description":"Number of records per page (uint32, default 100)"},"records":{"type":"number","description":"Total records in the database (uint32)"},"pages":{"type":"number","description":"Total number of pages across all filtered records (uint32, ceil(records/limit))"}},"required":["current","limit","records","pages"],"description":"Pagination metadata for page-style responses. Used everywhere IPage<T> is referenced."}}},"completed":178,"total":286,"step":0,"created_at":"2025-07-23T07:08:37.814Z"},"tokenUsage":{"facade":{"aggregate":{"total":3476896,"input":{"total":3343856,"cached":0},"output":{"total":133040,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3476896,"input":{"total":3343856,"cached":0},"output":{"total":133040,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3476896,"input":{"total":3343856,"cached":0},"output":{"total":133040,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3476896,"input":{"total":3343856,"cached":0},"output":{"total":133040,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageAiShopPromotions":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information for paginated results, including current page, limit, total records, and total pages. This aligns with standard pagination requirements in listing operations across the platform."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPromotions"},"description":"List of promotion campaign entities returned in this page result."}},"required":["pagination","data"],"description":"Paginated result list for AI Shop promotions (campaigns). Includes both pagination metadata and a list of promotion records. This structure follows the standard IPage pattern across the platform and refers to the business requirement for paginable campaign search in the backend marketing/coupon system.\n\nAll results provide a slice of the full promotion dataset, tied to page/limit parameters supplied in the request."},"IAiShopPromotions":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique ID for a promotion campaign. As per Prisma schema ai_shop_promotions.id, this UUID is used as the reference for campaign logic, edit, and hard deletion."},"name":{"type":"string","description":"Promotion title (e.g., 'Summer 2025 Campaign'). Used for display and differentiation in the admin UI and public listings. Must be unique for each start date. (ai_shop_promotions.name)"},"description":{"oneOf":[{"type":"string","description":"Optional human-friendly explanation. Used for admin operations and customer transparency. (ai_shop_promotions.description)"},{"type":"null"}],"description":"Optional human-friendly explanation. Used for admin operations and customer transparency. (ai_shop_promotions.description)"},"type":{"type":"string","description":"Type of promotion ('bulk_coupon', 'auto_discount', 'event', etc.). Dictates campaign automation and eligibility logic. (ai_shop_promotions.type)"},"start_at":{"type":"string","format":"date-time","description":"Timestamp for campaign start. ISO string, required by campaign activation logic. (ai_shop_promotions.start_at)"},"end_at":{"type":"string","format":"date-time","description":"Timestamp for campaign end. ISO string, for scheduled deactivation/expiration. (ai_shop_promotions.end_at)"},"is_active":{"type":"boolean","description":"Is this campaign currently active and visible? Controls eligibility and frontend rendering. (ai_shop_promotions.is_active)"},"created_at":{"type":"string","format":"date-time","description":"Campaign creation audit timestamp per ai_shop_promotions. Used for sorting/audit/history."},"updated_at":{"type":"string","format":"date-time","description":"Last campaign update timestamp per ai_shop_promotions. Required by audit trail, admin correction, and campaign dashboard."}},"required":["id","name","type","start_at","end_at","is_active","created_at","updated_at"],"description":"AI Shop promotion campaign entity, representing a discount, event, or auto-discount business event. Each row in this schema provides the core information and metadata for a campaign or event supporting the coupon and auto-promotion system.\n\nEach field is strictly atomic and normalized, following the requirements for compliance, traceability, and multichannel compatibility. This DTO aligns to both backend and UI representations for campaign management."},"IAiShopPromotions.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"Name/title of the campaign, must be unique for each starting time period. Required."},"description":{"oneOf":[{"type":"string","description":"Optional human-facing explanation of the campaign, for admin or customer explanation."},{"type":"null"}],"description":"Optional human-facing explanation of the campaign, for admin or customer explanation."},"type":{"type":"string","description":"Promotion category ('bulk_coupon', 'auto_discount', 'event', etc.). Dictates business logic."},"start_at":{"type":"string","format":"date-time","description":"Start time for the campaign (ISO date-time, e.g., '2025-06-01T00:00:00Z'). Required."},"end_at":{"type":"string","format":"date-time","description":"End time for the campaign (ISO date-time, e.g., '2025-06-30T23:59:59Z'). Required."},"is_active":{"type":"boolean","description":"Whether this campaign is currently active and visible for eligibility and display."}},"required":["name","type","start_at","end_at","is_active"],"description":"Request DTO for creating a new promotion campaign (ai_shop_promotions) as per marketing requirements. All fields are normalized, with consistent ISO date types for scheduling. Description is optional but recommended for UX transparency and admin clarity."},"IAiShopPromotions.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Updated campaign name/title. Optional for partial update, but required for full replacement."},"description":{"oneOf":[{"type":"string","description":"Optional new campaign description. Can be null to clear or omitted to retain current value."},{"type":"null"}],"description":"Optional new campaign description. Can be null to clear or omitted to retain current value."},"type":{"type":"string","description":"Campaign type/category. Required for campaign logic. E.g., 'bulk_coupon', 'auto_discount', 'event'."},"start_at":{"type":"string","format":"date-time","description":"Updated start time of campaign (ISO 8601 string)."},"end_at":{"type":"string","format":"date-time","description":"Updated end time of campaign (ISO 8601 string)."},"is_active":{"type":"boolean","description":"Whether this campaign is active for eligibility/display."}},"required":["name","type","start_at","end_at","is_active"],"description":"Request DTO for updating a promotion campaign (ai_shop_promotions). Used for administrative campaign changes, extension of business events, or marketing schedule updates. As per requirements, all main fields are required and use atomic, normalized types. Description is optional to support legacy or minimal campaigns."},"IAiShopDeposits.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter by the ID of the customer whose deposit ledger is being queried."},{"type":"null"}],"description":"Optionally filter by the ID of the customer whose deposit ledger is being queried."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter by the recipient seller associated with the deposit (null for platform-only deposits)."},{"type":"null"}],"description":"Optionally filter by the recipient seller associated with the deposit (null for platform-only deposits)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter/search by an order associated with the deposit event."},{"type":"null"}],"description":"Optionally filter/search by an order associated with the deposit event."},"type":{"oneOf":[{"type":"string","description":"Filter deposits by type (e.g., 'credit','debit','reward'), matching ai_shop_deposits.type."},{"type":"null"}],"description":"Filter deposits by type (e.g., 'credit','debit','reward'), matching ai_shop_deposits.type."},"amount_min":{"oneOf":[{"type":"number","description":"Optional lower boundary for deposit amount range queries. If provided, only include ledger entries with amount >= this value."},{"type":"null"}],"description":"Optional lower boundary for deposit amount range queries. If provided, only include ledger entries with amount >= this value."},"amount_max":{"oneOf":[{"type":"number","description":"Optional upper boundary for deposit amount range queries. Only returns entries with amount <= this value."},{"type":"null"}],"description":"Optional upper boundary for deposit amount range queries. Only returns entries with amount <= this value."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"ISO date-time lower boundary for creation filtering."},{"type":"null"}],"description":"ISO date-time lower boundary for creation filtering."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"ISO date-time upper boundary for creation filtering."},{"type":"null"}],"description":"ISO date-time upper boundary for creation filtering."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Requested page number for pagination (>=1)."},{"type":"null"}],"description":"Requested page number for pagination (>=1)."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Result count per page (for paging, >=1)."},{"type":"null"}],"description":"Result count per page (for paging, >=1)."}},"description":"Request DTO for searching, filtering, and paginating deposit entries in ai_shop_deposits. Used by admin dashboards, user account ledgers, or business intelligence workflows. Filtering is always optional; pagination fields (page, limit) control result slicing. All filters map directly to atomic schema or business-analytic requirements. Designed to reflect normalized, audit-friendly backend operations.","required":[]},"IPageAiShopDeposits":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard paging information representing this result set's bounds, total count, and navigation info."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopDeposits"},"description":"Page of deposit ledger result objects. All fields correspond to ai_shop_deposits atomic values."}},"required":["pagination","data"],"description":"Paginated response DTO for deposit ledger result sets. Includes both the paging metadata and an array of deposit entry objects. Used by business intelligence, audit, and user-facing account screens.\n\nEach data entry matches the loan/deposit atomic record schema; pagination is as per IPage."},"IAiShopDeposits":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key, UUID of this deposit ledger entry."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"ID of the customer related to the deposit."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller beneficiary, if this deposit is for a merchant. Null if a platform-only event."},{"type":"null"}],"description":"Seller beneficiary, if this deposit is for a merchant. Null if a platform-only event."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked order, if relevant to the deposit entry. Null for meta or customer-initiated deposits."},{"type":"null"}],"description":"Linked order, if relevant to the deposit entry. Null for meta or customer-initiated deposits."},"type":{"type":"string","description":"Deposit record type or classification (e.g., 'credit','debit','reward')."},"amount":{"type":"number","description":"Deposit value (double precision float)."},"description":{"oneOf":[{"type":"string","description":"Optional event or business memo/description for the ledger entry."},{"type":"null"}],"description":"Optional event or business memo/description for the ledger entry."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this deposit was journaled."}},"required":["id","ai_shop_customer_id","type","amount","created_at"],"description":"Deposit ledger record entity representing a credit/debit/loyalty event on the platform. Per ai_shop_deposits atomic schema, each row is a fully normalized accounting record for the customer (required), optionally linking to a merchant and/or order, with audit-timeliness enforced for legal reporting. Each field is precisely atomic, tied to the originating event and supporting business reconciliation. Audit, compliance, and reward flows all use this atomic structure for deposit/event analysis."},"IAiShopDeposits.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer for whom the deposit is journaled."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Merchant beneficiary for this deposit (nullable if platform-only)."},{"type":"null"}],"description":"Merchant beneficiary for this deposit (nullable if platform-only)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked order if applicable (nullable for external deposit events)."},{"type":"null"}],"description":"Linked order if applicable (nullable for external deposit events)."},"type":{"type":"string","description":"Type/class (e.g., 'credit','debit','reward') describing the event. Required."},"amount":{"type":"number","description":"Numeric value for the deposit event (positive/negative by business logic)."},"description":{"oneOf":[{"type":"string","description":"Optional business/ledger memo; recommended for audit or compliance. (nullable)"},{"type":"null"}],"description":"Optional business/ledger memo; recommended for audit or compliance. (nullable)"}},"required":["ai_shop_customer_id","type","amount"],"description":"Request DTO for creation of a deposit ledger record in ai_shop_deposits. All data are atomic and normalized for accounting/legal compliance. Foreign keys may be null for platform operations, but must reference existing entities for order/customer/seller relationships. Each field is documented in the schema for external system integration and validation. Desc field is input-only for event context, not for audit trail, which is handled by audit log tables."},"IAiShopDeposits.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer related to this deposit for update (may not change in most cases, but needed if customer-facing correction is supported)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update recipient seller (nullable if removing merchant link for platform-driven deposit)."},{"type":"null"}],"description":"Update recipient seller (nullable if removing merchant link for platform-driven deposit)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update associated order (nullable if unlinking ledger from specific transaction)."},{"type":"null"}],"description":"Update associated order (nullable if unlinking ledger from specific transaction)."},"type":{"type":"string","description":"Update for classification/type. Must use platform-supported codes, e.g., 'credit','debit','reward'."},"amount":{"type":"number","description":"Update deposit amount. Should match audit and payment requirements for float types."},"description":{"oneOf":[{"type":"string","description":"Replace ledger memo (e.g., business correction, compliance update)."},{"type":"null"}],"description":"Replace ledger memo (e.g., business correction, compliance update)."}},"required":["ai_shop_customer_id","type","amount"],"description":"DTO for updating a deposit ledger record in ai_shop_deposits. All changes must stay normalized and compliant to accounting principles. Non-required fields (seller, order, description) can be nullified. Changes may be tracked in audit logs or audit trigger tables for compliance."},"IAiShopMileages.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for the targeted customer whose mileage transactions are being queried."},{"type":"null"}],"description":"Optional filter for the targeted customer whose mileage transactions are being queried."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter by order related to the mileage/loyalty transaction."},{"type":"null"}],"description":"Optionally filter by order related to the mileage/loyalty transaction."},"type":{"oneOf":[{"type":"string","description":"Type of mileage flow event ('earn', 'redeem', 'adjust', 'expire', etc.). Allows query by single kind."},{"type":"null"}],"description":"Type of mileage flow event ('earn', 'redeem', 'adjust', 'expire', etc.). Allows query by single kind."},"amount_min":{"oneOf":[{"type":"integer","description":"Minimum mileage value to filter (inclusive)."},{"type":"null"}],"description":"Minimum mileage value to filter (inclusive)."},"amount_max":{"oneOf":[{"type":"integer","description":"Maximum mileage value to filter (inclusive)."},{"type":"null"}],"description":"Maximum mileage value to filter (inclusive)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Lower date boundary for created_at filter (ISO 8601 string)."},{"type":"null"}],"description":"Lower date boundary for created_at filter (ISO 8601 string)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Upper date boundary for created_at filter (ISO 8601 string)."},{"type":"null"}],"description":"Upper date boundary for created_at filter (ISO 8601 string)."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Requested results page for pagination (starts at 1)."},{"type":"null"}],"description":"Requested results page for pagination (starts at 1)."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Number of results per page in pagination (>=1)."},{"type":"null"}],"description":"Number of results per page in pagination (>=1)."}},"description":"Query and filter parameters for searching and paginating ai_shop_mileages (loyalty point transactions). This structure is used for both admin and user loyalty point/lifetime value dashboards. NULL properties expand the query; non-null values are strict filters.","required":[]},"IPageAiShopMileages":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging metadata to describe page, total count, and navigation reference for results."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopMileage"},"description":"Array of ai_shop_mileages entity records on this page."}},"required":["pagination","data"],"description":"Paginated set of result objects and paging metadata for ai_shop_mileages (loyalty points, rewards). Each entry maps to a single atomic mileage/point/loyalty event for a customer. Each data property element matches the IAiShopMileage structure, and the pagination property defines page offset, totals, and navigation controls."},"IAiShopMileage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the ai_shop_mileages transaction entry."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer associated with this mileage entry."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order linked to this mileage event. Null if not earned or spent on a specific order."},{"type":"null"}],"description":"Order linked to this mileage event. Null if not earned or spent on a specific order."},"type":{"type":"string","description":"Event type (earn, redeem, adjust, expire, etc.), as specified in platform loyalty logic."},"amount":{"type":"integer","description":"Points/miles value for this entry. Positive for earn, negative for redeem/expire/adjust as per event."},"description":{"oneOf":[{"type":"string","description":"Business memo/notepad about the points event. Displayed in user/admin ledgers."},{"type":"null"}],"description":"Business memo/notepad about the points event. Displayed in user/admin ledgers."},"created_at":{"type":"string","format":"date-time","description":"Timestamp this points event was registered. Used for audit and reporting."}},"required":["id","ai_shop_customer_id","type","amount","created_at"],"description":"Atomic record for a loyalty/mileage points event (ai_shop_mileages). Each row is normalized, and supports audit/compliance/reverse/reissue logic as needed for full financial system traceability. All fields reference the normalized schema supplied in requirements and the ai_shop_mileages Prisma model."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"Current page number in pagination (1-based, required)."},"limit":{"type":"integer","format":"uint32","description":"Page size for this pagination result (default: 100 if not provided in IRequest)."},"records":{"type":"integer","format":"uint32","description":"Total number of records matching the current query (across all pages)."},"pages":{"type":"integer","format":"uint32","description":"Total number of pages available for this query, based on total records and page limit."}},"required":["current","limit","records","pages"],"description":"Page navigation information returned with IPage<T>. Reflects the state of paginated result sets in search, listing, and dashboard APIs. Used both for backend service and frontend navigation UIs."}}},"completed":190,"total":286,"step":0,"created_at":"2025-07-23T07:08:39.758Z"},"tokenUsage":{"facade":{"aggregate":{"total":3613233,"input":{"total":3476510,"cached":0},"output":{"total":136723,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3613233,"input":{"total":3476510,"cached":0},"output":{"total":136723,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3613233,"input":{"total":3476510,"cached":0},"output":{"total":136723,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3613233,"input":{"total":3476510,"cached":0},"output":{"total":136723,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"aiShopAuthProviders.IRequest":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by the customer id (nullable). Only returns mappings for a specific customer if set. Corresponds to ai_shop_auth_providers.customer_id.\n\nUse for user directory troubleshooting, admin lookup, or support integration."},{"type":"null","format":"uuid","description":"Filter by the customer id (nullable). Only returns mappings for a specific customer if set. Corresponds to ai_shop_auth_providers.customer_id.\n\nUse for user directory troubleshooting, admin lookup, or support integration."}],"description":"Filter by the customer id (nullable). Only returns mappings for a specific customer if set. Corresponds to ai_shop_auth_providers.customer_id.\n\nUse for user directory troubleshooting, admin lookup, or support integration."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by the seller id (nullable). Only returns mappings for a particular seller if set. Links to ai_shop_auth_providers.seller_id.\n\nUseful for onboarding troubleshooting/SSO support mapping for merchants."},{"type":"null","format":"uuid","description":"Filter by the seller id (nullable). Only returns mappings for a particular seller if set. Links to ai_shop_auth_providers.seller_id.\n\nUseful for onboarding troubleshooting/SSO support mapping for merchants."}],"description":"Filter by the seller id (nullable). Only returns mappings for a particular seller if set. Links to ai_shop_auth_providers.seller_id.\n\nUseful for onboarding troubleshooting/SSO support mapping for merchants."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by admin user id (nullable). Only returns admin-provider mappings if set. Points to ai_shop_auth_providers.admin_id for admin SSO/2FA troubleshooting."},{"type":"null","format":"uuid","description":"Filter by admin user id (nullable). Only returns admin-provider mappings if set. Points to ai_shop_auth_providers.admin_id for admin SSO/2FA troubleshooting."}],"description":"Filter by admin user id (nullable). Only returns admin-provider mappings if set. Points to ai_shop_auth_providers.admin_id for admin SSO/2FA troubleshooting."},"provider_type":{"oneOf":[{"type":"string","description":"Filter by external authentication provider type (e.g., 'google', 'kakao', 'email', 'sms', 'totp', etc.), Nullable for all types.\n\nAllows precise search for linked accounts of a given provider."},{"type":"null","description":"Filter by external authentication provider type (e.g., 'google', 'kakao', 'email', 'sms', 'totp', etc.), Nullable for all types.\n\nAllows precise search for linked accounts of a given provider."}],"description":"Filter by external authentication provider type (e.g., 'google', 'kakao', 'email', 'sms', 'totp', etc.), Nullable for all types.\n\nAllows precise search for linked accounts of a given provider."},"external_id":{"oneOf":[{"type":"string","description":"Filter to external provider's user id (nullable). Used for deep linkage reconciliation, e.g. social login diagnosis.\n\nNot commonly used in pagination, but can quickly identify specific external SSO users."},{"type":"null","description":"Filter to external provider's user id (nullable). Used for deep linkage reconciliation, e.g. social login diagnosis.\n\nNot commonly used in pagination, but can quickly identify specific external SSO users."}],"description":"Filter to external provider's user id (nullable). Used for deep linkage reconciliation, e.g. social login diagnosis.\n\nNot commonly used in pagination, but can quickly identify specific external SSO users."},"linked_from":{"oneOf":[{"type":"string","format":"date-time","description":"Request to filter mapping records linked after a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},{"type":"null","format":"date-time","description":"Request to filter mapping records linked after a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."}],"description":"Request to filter mapping records linked after a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},"linked_to":{"oneOf":[{"type":"string","format":"date-time","description":"Request to filter mapping records linked before a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},{"type":"null","format":"date-time","description":"Request to filter mapping records linked before a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."}],"description":"Request to filter mapping records linked before a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},"page":{"oneOf":[{"type":"integer","description":"Requested page number, 1-indexed. Default is 1 if not specified."},{"type":"null","description":"Requested page number, 1-indexed. Default is 1 if not specified."}],"description":"Requested page number, 1-indexed. Default is 1 if not specified."},"limit":{"oneOf":[{"type":"integer","description":"Maximum number of results per page. Used for server pagination, default 100 if not provided."},{"type":"null","description":"Maximum number of results per page. Used for server pagination, default 100 if not provided."}],"description":"Maximum number of results per page. Used for server pagination, default 100 if not provided."},"sort":{"oneOf":[{"type":"string","description":"Custom sort string for results (e.g., '-linked_at', 'provider_type'). Default descending by linked_at if not specified. Only schema fields permitted."},{"type":"null","description":"Custom sort string for results (e.g., '-linked_at', 'provider_type'). Default descending by linked_at if not specified. Only schema fields permitted."}],"description":"Custom sort string for results (e.g., '-linked_at', 'provider_type'). Default descending by linked_at if not specified. Only schema fields permitted."}},"description":"Request schema for searching/filtering ai_shop_auth_providers external login/SSO records. All filters directly reference schema fields, fully normalized, and support flexible troubleshooting/search. Used in admin/user support dashboards, SSO/OAuth audits, integration repair, pagination, and listing scenarios. Every property either matches a real table column or supports pagination/filtering.","required":[]},"IPageaiShopAuthProviders":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopAuthProviders"},"description":"A page (subset) of aiShopAuthProviders records returned by list/query operation."}},"required":["pagination","data"],"description":"A paged response for aiShopAuthProviders query (external provider SSO mappings). Encapsulates full pagination and a chunk of provider mapping items. Used in admin dashboards, audit exports, or self-service account linking UIs."},"aiShopAuthProviders":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for this provider mapping record (UUID, not updatable)."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked customer id (nullable, if this mapping is for a seller or admin). Follows 3NF normalization; only one of customer_id, seller_id, admin_id is non-null."},{"type":"null","format":"uuid","description":"Linked customer id (nullable, if this mapping is for a seller or admin). Follows 3NF normalization; only one of customer_id, seller_id, admin_id is non-null."}],"description":"Linked customer id (nullable, if this mapping is for a seller or admin). Follows 3NF normalization; only one of customer_id, seller_id, admin_id is non-null."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked seller id (nullable, if this mapping is not for a seller). Only one of customer_id, seller_id, admin_id is set for each mapping."},{"type":"null","format":"uuid","description":"Linked seller id (nullable, if this mapping is not for a seller). Only one of customer_id, seller_id, admin_id is set for each mapping."}],"description":"Linked seller id (nullable, if this mapping is not for a seller). Only one of customer_id, seller_id, admin_id is set for each mapping."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked admin id (nullable). Null unless this mapping is for an admin."},{"type":"null","format":"uuid","description":"Linked admin id (nullable). Null unless this mapping is for an admin."}],"description":"Linked admin id (nullable). Null unless this mapping is for an admin."},"provider_type":{"type":"string","description":"External authentication provider type (e.g., 'google', 'kakao', 'email', 'totp', etc.)."},"external_id":{"type":"string","description":"Provider-assigned unique user token/id. Used for mapping/reconciliation."},"linked_at":{"type":"string","format":"date-time","description":"Timestamp when this external linkage was established. Required for audit/compliance."}},"required":["id","provider_type","external_id","linked_at"],"description":"Normalized row for ai_shop_auth_providers: external provider account linkage to a customer, seller, or admin user.\n\nLinks identity (customer_id, seller_id, admin_id—only one is set) to an external login system, with type, immutable mapping id, and external_id. Fully normalized for reliable SSO and secure identity flows.\n\nSample lifecycle: Row created when customer/seller/admin connects a new provider account; removed on unlink/revocation; query/exported for audits."},"aiShopAuthProviders.ICreate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to customer, if linking to customer actor (nullable for seller/admin records). Only one of customer_id, seller_id, admin_id is set."},{"type":"null","format":"uuid","description":"FK to customer, if linking to customer actor (nullable for seller/admin records). Only one of customer_id, seller_id, admin_id is set."}],"description":"FK to customer, if linking to customer actor (nullable for seller/admin records). Only one of customer_id, seller_id, admin_id is set."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to seller, if linking to a seller account (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"FK to seller, if linking to a seller account (nullable for customer/admin)."}],"description":"FK to seller, if linking to a seller account (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to admin, if linking for admin (nullable for customer/seller)."},{"type":"null","format":"uuid","description":"FK to admin, if linking for admin (nullable for customer/seller)."}],"description":"FK to admin, if linking for admin (nullable for customer/seller)."},"provider_type":{"type":"string","description":"SSO/external login type; e.g. 'google', 'kakao', 'totp', 'sms', 'email'. Required."},"external_id":{"type":"string","description":"Provider-assigned ID/token for external account. Must be unique within context of provider_type + actor."},"linked_at":{"type":"string","format":"date-time","description":"Datetime when linkage was established (required for compliance)."}},"required":["provider_type","external_id","linked_at"],"description":"Insert object for ai_shop_auth_providers mapping: add an OAuth, SSO, or 2FA record to a customer, seller, or admin account. Only one of customer_id/seller_id/admin_id should be set for a given row. Required for onboarding, account connection, or user SSO provisioning flows. All fields map directly to schema columns."},"IAiShopAuthProviders.IUpdate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing customer FK (nullable for seller/admin). Enables polymorphic relinking; only update if mapping to a new actor or correcting an import error."},{"type":"null","format":"uuid","description":"New or existing customer FK (nullable for seller/admin). Enables polymorphic relinking; only update if mapping to a new actor or correcting an import error."}],"description":"New or existing customer FK (nullable for seller/admin). Enables polymorphic relinking; only update if mapping to a new actor or correcting an import error."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing seller FK (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"New or existing seller FK (nullable for customer/admin)."}],"description":"New or existing seller FK (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing admin FK (nullable for seller/customer)."},{"type":"null","format":"uuid","description":"New or existing admin FK (nullable for seller/customer)."}],"description":"New or existing admin FK (nullable for seller/customer)."},"provider_type":{"type":"string","description":"Provider type for the mapping (required). Should only be updated when correcting or formalizing identity linkage. Required by schema."},"external_id":{"type":"string","description":"External provider's user id (required). Used for mapping/lookup."},"linked_at":{"type":"string","format":"date-time","description":"Datetime when linkage was (re-)established. Required for compliance."}},"required":["provider_type","external_id","linked_at"],"description":"Update object for ai_shop_auth_providers mapping row. All fields present in schema permitted for update. Supports correction or advanced admin flows (polymorphic actor update, SSO/2FA relink, etc.) Business logic enforces only one actor role is set in a single record."},"IAiShopAuthProviders":{"$ref":"#/components/schemas/aiShopAuthProviders","description":"Alias type to expose full aiShopAuthProviders fields for reference/cross-component chaining in request/response bodies. Used for system reuse and cross-component type referencing."},"IAiShopUserSessions.IRequest":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for sessions belonging to a specific customer."},{"type":"null","format":"uuid","description":"Optional filter for sessions belonging to a specific customer."}],"description":"Optional filter for sessions belonging to a specific customer."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter sessions belonging to a given seller (nullable for customer/admin only queries)."},{"type":"null","format":"uuid","description":"Filter sessions belonging to a given seller (nullable for customer/admin only queries)."}],"description":"Filter sessions belonging to a given seller (nullable for customer/admin only queries)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for admin user sessions (nullable for customer/seller)."},{"type":"null","format":"uuid","description":"Filter for admin user sessions (nullable for customer/seller)."}],"description":"Filter for admin user sessions (nullable for customer/seller)."},"session_token":{"oneOf":[{"type":"string","description":"Session token/id. Filter exact session tokens for audit/troubleshooting."},{"type":"null","description":"Session token/id. Filter exact session tokens for audit/troubleshooting."}],"description":"Session token/id. Filter exact session tokens for audit/troubleshooting."},"issued_from":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions issued after this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions issued after this timestamp (exclusive, nullable)."}],"description":"Sessions issued after this timestamp (exclusive, nullable)."},"issued_to":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions issued before this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions issued before this timestamp (exclusive, nullable)."}],"description":"Sessions issued before this timestamp (exclusive, nullable)."},"expires_from":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions expiring after this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions expiring after this timestamp (exclusive, nullable)."}],"description":"Sessions expiring after this timestamp (exclusive, nullable)."},"expires_to":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions expiring before this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions expiring before this timestamp (exclusive, nullable)."}],"description":"Sessions expiring before this timestamp (exclusive, nullable)."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Filter to sessions terminated at a given timestamp (or null for active sessions)."},{"type":"null","format":"date-time","description":"Filter to sessions terminated at a given timestamp (or null for active sessions)."}],"description":"Filter to sessions terminated at a given timestamp (or null for active sessions)."},"ip_address":{"oneOf":[{"type":"string","description":"Source IP address for the session (nullable)."},{"type":"null","description":"Source IP address for the session (nullable)."}],"description":"Source IP address for the session (nullable)."},"page":{"oneOf":[{"type":"integer","description":"Page number for UI/server pagination (optional). Default 1."},{"type":"null","description":"Page number for UI/server pagination (optional). Default 1."}],"description":"Page number for UI/server pagination (optional). Default 1."},"limit":{"oneOf":[{"type":"integer","description":"Results per page, default 100."},{"type":"null","description":"Results per page, default 100."}],"description":"Results per page, default 100."},"sort":{"oneOf":[{"type":"string","description":"Sort string by allowed schema fields (default: desc by issued_at)."},{"type":"null","description":"Sort string by allowed schema fields (default: desc by issued_at)."}],"description":"Sort string by allowed schema fields (default: desc by issued_at)."}},"description":"Request schema for searching, filtering, and paginating ai_shop_user_sessions authentication records (customer/seller/admin session tracking, used in security/audit/reporting). Only actual schema fields present.","required":[]},"IPageIAiShopUserSessions":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopUserSessions"},"description":"A page (chunk) of session objects matching the search/filter."}},"required":["pagination","data"],"description":"Standard pagination container for ai_shop_user_sessions records. Contains metadata and chunk of normalized session objects for dashboards, auditing, and user session listing."},"IAiShopUserSessions":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Session primary key. Each value is a unique session context."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Session linkage for customer account (nullable if session is not for a customer)."},{"type":"null","format":"uuid","description":"Session linkage for customer account (nullable if session is not for a customer)."}],"description":"Session linkage for customer account (nullable if session is not for a customer)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Session linkage for seller account (nullable if session is not for a seller)."},{"type":"null","format":"uuid","description":"Session linkage for seller account (nullable if session is not for a seller)."}],"description":"Session linkage for seller account (nullable if session is not for a seller)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Session linkage for admin account (nullable if not for admin)."},{"type":"null","format":"uuid","description":"Session linkage for admin account (nullable if not for admin)."}],"description":"Session linkage for admin account (nullable if not for admin)."},"session_token":{"type":"string","description":"Unique session token per login. Security/audit enforced; used for session termination, device management, etc."},"issued_at":{"type":"string","format":"date-time","description":"Datetime for session issuance (login time) for auditing."},"expires_at":{"type":"string","format":"date-time","description":"Expected expiration timestamp of the session for audit/tracking."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"If forcibly ended, records timestamp (otherwise null for active sessions)."},{"type":"null","format":"date-time","description":"If forcibly ended, records timestamp (otherwise null for active sessions)."}],"description":"If forcibly ended, records timestamp (otherwise null for active sessions)."},"ip_address":{"type":"string","description":"IP address of client/device for audit/tracing."}},"required":["id","session_token","issued_at","expires_at","ip_address"],"description":"Normalized row for ai_shop_user_sessions: stores authentication session details for customers, sellers, and admins. Each session is referenced to only one actor per record. Used for concurrency management, forced logout, device tracking, and security audit flows. Actual device details (user-agent) handled elsewhere."},"IAiShopUserSessions.ICreate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for session's customer (nullable for seller/admin)."},{"type":"null","format":"uuid","description":"FK for session's customer (nullable for seller/admin)."}],"description":"FK for session's customer (nullable for seller/admin)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for session's seller (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"FK for session's seller (nullable for customer/admin)."}],"description":"FK for session's seller (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for session's admin (nullable for seller/customer)."},{"type":"null","format":"uuid","description":"FK for session's admin (nullable for seller/customer)."}],"description":"FK for session's admin (nullable for seller/customer)."},"session_token":{"type":"string","description":"Token for this session (generated upon login)."},"issued_at":{"type":"string","format":"date-time","description":"Datetime session issued (now)."},"expires_at":{"type":"string","format":"date-time","description":"Datetime session will expire."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime forcibly ended (null if not ended forcibly)."},{"type":"null","format":"date-time","description":"Datetime forcibly ended (null if not ended forcibly)."}],"description":"Datetime forcibly ended (null if not ended forcibly)."},"ip_address":{"type":"string","description":"Client IP string."}},"required":["session_token","issued_at","expires_at","ip_address"],"description":"Insert object for ai_shop_user_sessions row. Used for login flows, SSO linkage, concurrency and audit compliance. All fields map directly to schema columns. Only one actor FK may be non-null per record."},"IAiShopUserSessions.IUpdate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing customer FK for session (nullable for seller/admin)."},{"type":"null","format":"uuid","description":"New or existing customer FK for session (nullable for seller/admin)."}],"description":"New or existing customer FK for session (nullable for seller/admin)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing seller FK for session (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"New or existing seller FK for session (nullable for customer/admin)."}],"description":"New or existing seller FK for session (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing admin FK for session (nullable for customer/seller)."},{"type":"null","format":"uuid","description":"New or existing admin FK for session (nullable for customer/seller)."}],"description":"New or existing admin FK for session (nullable for customer/seller)."},"session_token":{"type":"string","description":"Session token (required for update)."},"issued_at":{"type":"string","format":"date-time","description":"Datetime for session issued (change/reissue only in advanced workflows)."},"expires_at":{"type":"string","format":"date-time","description":"Datetime session will expire."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set session terminated_at to forcibly end. Null to mark as active."},{"type":"null","format":"date-time","description":"Set session terminated_at to forcibly end. Null to mark as active."}],"description":"Set session terminated_at to forcibly end. Null to mark as active."},"ip_address":{"type":"string","description":"IP address associated with session."}},"required":["session_token","issued_at","expires_at","ip_address"],"description":"Update object for ai_shop_user_sessions: enables reassigning session to other user roles, changing lifespan, or forcibly ending. Used in security/admin workflows and session migration flows. Only one FK set at a time."},"IAiShopCustomerProfiles.IRequest":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for customer (filter for all profiles linked to specific customer id)."},{"type":"null","format":"uuid","description":"FK for customer (filter for all profiles linked to specific customer id)."}],"description":"FK for customer (filter for all profiles linked to specific customer id)."},"name":{"oneOf":[{"type":"string","description":"Case-insensitive/partial search on customer profile name field."},{"type":"null","description":"Case-insensitive/partial search on customer profile name field."}],"description":"Case-insensitive/partial search on customer profile name field."},"preferences":{"oneOf":[{"type":"string","description":"JSON-string of serialized preferences (may include application-specific keys; filterable if platform supports subfield search)."},{"type":"null","description":"JSON-string of serialized preferences (may include application-specific keys; filterable if platform supports subfield search)."}],"description":"JSON-string of serialized preferences (may include application-specific keys; filterable if platform supports subfield search)."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Date-of-birth (filter by exact, or range if supported)."},{"type":"null","format":"date-time","description":"Date-of-birth (filter by exact, or range if supported)."}],"description":"Date-of-birth (filter by exact, or range if supported)."},"gender":{"oneOf":[{"type":"string","description":"Filter by gender signal (may be 'M','F','Other', or string by application logic)."},{"type":"null","description":"Filter by gender signal (may be 'M','F','Other', or string by application logic)."}],"description":"Filter by gender signal (may be 'M','F','Other', or string by application logic)."},"locale":{"oneOf":[{"type":"string","description":"Language/locale code (e.g., 'en', 'ko', 'fr'). Nullable for multi-locale queries."},{"type":"null","description":"Language/locale code (e.g., 'en', 'ko', 'fr'). Nullable for multi-locale queries."}],"description":"Language/locale code (e.g., 'en', 'ko', 'fr'). Nullable for multi-locale queries."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Serialized multi-address JSON (advanced filter scenarios only)."},{"type":"null","description":"Serialized multi-address JSON (advanced filter scenarios only)."}],"description":"Serialized multi-address JSON (advanced filter scenarios only)."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Created at or after this timestamp."},{"type":"null","format":"date-time","description":"Created at or after this timestamp."}],"description":"Created at or after this timestamp."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Created before this timestamp."},{"type":"null","format":"date-time","description":"Created before this timestamp."}],"description":"Created before this timestamp."},"updated_from":{"oneOf":[{"type":"string","format":"date-time","description":"Updated at or after this timestamp."},{"type":"null","format":"date-time","description":"Updated at or after this timestamp."}],"description":"Updated at or after this timestamp."},"updated_to":{"oneOf":[{"type":"string","format":"date-time","description":"Updated before this timestamp."},{"type":"null","format":"date-time","description":"Updated before this timestamp."}],"description":"Updated before this timestamp."},"page":{"oneOf":[{"type":"integer","description":"Page number; default 1 if not provided."},{"type":"null","description":"Page number; default 1 if not provided."}],"description":"Page number; default 1 if not provided."},"limit":{"oneOf":[{"type":"integer","description":"Results per page (paging chunk)."},{"type":"null","description":"Results per page (paging chunk)."}],"description":"Results per page (paging chunk)."},"sort":{"oneOf":[{"type":"string","description":"Sort string/pattern on allowed columns (default: desc updated_at)."},{"type":"null","description":"Sort string/pattern on allowed columns (default: desc updated_at)."}],"description":"Sort string/pattern on allowed columns (default: desc updated_at)."}},"description":"Request body for listing/searching/filtering customer profiles by atomic fields as in ai_shop_customer_profiles table. Used for admin search, analytics, privacy management, and profile listing dashboards.","required":[]}}},"completed":202,"total":286,"step":0,"created_at":"2025-07-23T07:08:41.293Z"},"tokenUsage":{"facade":{"aggregate":{"total":3749752,"input":{"total":3609162,"cached":0},"output":{"total":140590,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3749752,"input":{"total":3609162,"cached":0},"output":{"total":140590,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3749752,"input":{"total":3609162,"cached":0},"output":{"total":140590,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3749752,"input":{"total":3609162,"cached":0},"output":{"total":140590,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopMileage.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객을 명확히 식별하는 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_customer_id' 컬럼에 해당하며, 마일리지를 적립/사용할 실소유 고객의 고유 식별자입니다. 본 필드는 외래키 제약조건이 있으며, 반드시 선행으로 고객이 등록되어 있어야 유효합니다. 예시: \"ecebc453-1150-4e37-b181-cd336323b788\""},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"마일리지 적립 또는 차감이 특정 주문과 연관된 경우에 해당 주문의 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_order_id' 컬럼입니다. null일 수 있는데, 자체 이벤트(가입 축하 등)에서는 주문과 무관할 수 있습니다."},{"type":"null","format":"uuid","description":"마일리지 적립 또는 차감이 특정 주문과 연관된 경우에 해당 주문의 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_order_id' 컬럼입니다. null일 수 있는데, 자체 이벤트(가입 축하 등)에서는 주문과 무관할 수 있습니다."}],"description":"마일리지 적립 또는 차감이 특정 주문과 연관된 경우에 해당 주문의 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_order_id' 컬럼입니다. null일 수 있는데, 자체 이벤트(가입 축하 등)에서는 주문과 무관할 수 있습니다."},"type":{"type":"string","description":"마일리지 트랜잭션 유형입니다 (‘earn’,‘redeem’,‘adjust’,‘expire’ 등).\n\nPrisma 스키마 컬럼의 값 그대로 사용하며, 업무 로직상 적립/사용/조정/만료 등 케이스를 구분합니다."},"amount":{"type":"integer","description":"해당 트랜잭션으로 증감되는 마일리지 포인트 변동값입니다. 정수이며, 적립일 땐 양수, 차감일 땐 음수도 허용합니다.\n\nPrisma DB의 'amount' 컬럼 참조."},"description":{"oneOf":[{"type":"string","description":"마일리지 적립/사용 사유 및 설명입니다.\n\nPrisma DB 스키마의 'description' 컬럼에 해당(선택사항, null 허용). 예: \"구매적립 2025-07-22\", \"이벤트 만료회수\" 등."},{"type":"null","description":"마일리지 적립/사용 사유 및 설명입니다.\n\nPrisma DB 스키마의 'description' 컬럼에 해당(선택사항, null 허용). 예: \"구매적립 2025-07-22\", \"이벤트 만료회수\" 등."}],"description":"마일리지 적립/사용 사유 및 설명입니다.\n\nPrisma DB 스키마의 'description' 컬럼에 해당(선택사항, null 허용). 예: \"구매적립 2025-07-22\", \"이벤트 만료회수\" 등."}},"required":["ai_shop_customer_id","type","amount"],"description":"마일리지 적립/차감 등 트랜잭션 행위 생성 시 사용하는 객체입니다.\n\nPrisma DB 'ai_shop_mileages'의 컬럼 정의와 일치하며, 고객ID/적립&주문ID/유형/금액/사유를 명확히 정의합니다. 고객 식별자, 유형, 금액은 필수; 주문ID/설명은 선택적입니다."},"IAiShopMileage.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 UUID (외래키), 기존 트랜잭션의 소유자 교정 등에서 사용합니다."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"연관 주문 UUID (nullable), 수정이나 추가시 활용. ex. 주문 환불 등."},{"type":"null","format":"uuid","description":"연관 주문 UUID (nullable), 수정이나 추가시 활용. ex. 주문 환불 등."}],"description":"연관 주문 UUID (nullable), 수정이나 추가시 활용. ex. 주문 환불 등."},"type":{"type":"string","description":"마일리지 트랜잭션 유형 ('earn','redeem','adjust','expire'). 업무 사유 변경 등에서 사용."},"amount":{"type":"integer","description":"수정할 마일리지 증감값 (정수), 기존적립 내역 교정 등에서 사용."},"description":{"oneOf":[{"type":"string","description":"마일리지 적립, 차감 내역에 대한 설명을 변경할 때 사용합니다."},{"type":"null","description":"마일리지 적립, 차감 내역에 대한 설명을 변경할 때 사용합니다."}],"description":"마일리지 적립, 차감 내역에 대한 설명을 변경할 때 사용합니다."}},"required":["ai_shop_customer_id","type","amount"],"description":"마일리지 내역을 수정시 사용하는 객체로, Prisma ai_shop_mileages의 컬럼과 맵핑됩니다. 필수값은 고객ID, 유형, 금액이고 주문ID 및 설명은 변경 가능 시 선택적입니다."},"IVoid":{"type":"object","description":"반환값이 없음을 명시적으로 나타냅니다. 성공/실패만 판별하며 별도 데이터는 포함하지 않습니다. REST API의 DELETE 등에서 활용.","properties":{},"required":[]},"IAiShopDonationCoupon.IRequest":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"도네이션과 연결된 쿠폰의 UUID. Prisma DB의 'ai_shop_coupon_id' 컬럼 기반. 특정 쿠폰 기반의 도네이션 내역 조회에 사용."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 UUID. 'ai_shop_customer_id' 컬럼으로, 특정 고객의 도네이션 내역 조회시에 사용."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"관련 주문의 UUID (nullable 가능). Prisma에 따라 실제로 null도 허용됨."},"donation_type":{"type":"string","description":"도네이션 방식 유형. 'seller_funded','platform_match','customer_opt_in' 등 업무에서 정한 문자열 값입니다."},"created_at_from":{"type":"string","format":"date-time","description":"조회 시작일(From). ISO 8601로, 도네이션 생성일 기준 필터링에 사용. 예: '2025-07-01T00:00:00Z'"},"created_at_to":{"type":"string","format":"date-time","description":"조회 종료일(To). ISO 8601로, 도네이션 생성일 기준 필터링 범위 끝. 예: '2025-07-31T23:59:59Z'"}},"required":[],"description":"AI Shop 도네이션 쿠폰 내역 조회/검색 요청 객체.\n\nPrisma 'ai_shop_donation_coupons'의 컬럼 기준으로 다양한 필터(쿠폰, 고객, 주문, 도네이션 유형, 기간 등)를 복합적으로 지정할 수 있습니다. 모든 필드는 선택사항이며, 미지정시 전체 범위 조회."},"IPageAiShopDonationCoupon":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopDonationCoupon"}}},"required":["pagination","data"],"description":"AI Shop 도네이션 쿠폰 페이지네이션 결과.\n\nPrisma 'ai_shop_donation_coupons' 레코드 목록을 실제 요청 파라미터 기반으로 페이지 처리하여 반환합니다. pagination은 현재 페이지, 총 레코드수, 한페이지당 레코드 등. data 배열은 실제 도네이션 쿠폰 레코드 객체 배열입니다."},"IAiShopDonationCoupon":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"도네이션-쿠폰 row의 PK UUID.\n\nPrisma DB의 'id' 컬럼 (식별자 및 API 리소스 PK)."},"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"연결 쿠폰의 UUID (FK). Prisma 'ai_shop_coupon_id' 컬럼 참조."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"도네이션(기부)을 실행한 고객의 UUID, FK. Prisma 'ai_shop_customer_id' 컬럼."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"donation이 특정 주문과 연관될 경우 주문 UUID. 'ai_shop_order_id' 컬럼, null 허용."},{"type":"null","format":"uuid","description":"donation이 특정 주문과 연관될 경우 주문 UUID. 'ai_shop_order_id' 컬럼, null 허용."}],"description":"donation이 특정 주문과 연관될 경우 주문 UUID. 'ai_shop_order_id' 컬럼, null 허용."},"amount_donated":{"type":"number","format":"double","description":"실제 기부된/적립된 금액 단위(소수점 포함). Prisma DB의 'amount_donated' 컬럼."},"donation_type":{"type":"string","description":"도네이션 유형 - 'seller_funded','platform_match','customer_opt_in' 등 정의된 유형 문자열. Prisma 컬럼명: 'donation_type'."},"created_at":{"type":"string","format":"date-time","description":"생성일시(UTC ISO8601), Prisma 'created_at'"}},"required":["id","ai_shop_coupon_id","ai_shop_customer_id","amount_donated","donation_type","created_at"],"description":"AI Shop에서 도네이션 쿠폰 redemption시 생성되는 atomic 도네이션 정보 객체.\n\nPrisma 'ai_shop_donation_coupons' 테이블의 칼럼 매핑에 따라 기부금액/연결 쿠폰/주문/고객/pk/기부유형/생성일 등이 포함됩니다. 모든 id는 UUID이며 금액은 실수형(double)입니다."},"IAiShopDonationCoupon.ICreate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"연동 쿠폰의 UUID(PK, FK).\n\nPrisma 'ai_shop_coupon_id' 컬럼으로 연결 쿠폰 정보를 지정. 기부성 쿠폰일 경우 반드시 필요."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"도네이션 전송(주체) 고객의 UUID(PK, FK). 기부의 소유주 명확화."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"관련 주문 UUID. null일 수 있음, 이벤트성 도네이션은 주문 무관."},{"type":"null","format":"uuid","description":"관련 주문 UUID. null일 수 있음, 이벤트성 도네이션은 주문 무관."}],"description":"관련 주문 UUID. null일 수 있음, 이벤트성 도네이션은 주문 무관."},"amount_donated":{"type":"number","format":"double","description":"실제 기부된 금액단위(원화 등, double).\n\nPrisma DB기준 amount_donated 컬럼."},"donation_type":{"type":"string","description":"도네이션 방식(유형) - 'seller_funded', 'platform_match', 'customer_opt_in'등 업무 정의 문자열."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","amount_donated","donation_type"],"description":"도네이션 쿠폰 사용(기부) 정보를 신규 입력할 때 사용하는 생성 객체.\n\nPrisma 'ai_shop_donation_coupons' 테이블의 생성 컬럼 조건과 동일하게, 쿠폰ID, 고객ID, 기부유형, 금액은 필수; 주문ID는 옵션입니다."},"IAiShopDonationCoupon.IUpdate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"연동 쿠폰 UUID(PK, FK). 도네이션 쿠폰 변경 시 사용."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객ID(PK, FK). 도네이션 소유주 변경 용."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"주문 UUID(변경시), null 허용."},{"type":"null","format":"uuid","description":"주문 UUID(변경시), null 허용."}],"description":"주문 UUID(변경시), null 허용."},"amount_donated":{"type":"number","format":"double","description":"기부 금액(실수), 업무상 기부액 수정시 사용."},"donation_type":{"type":"string","description":"도네이션 방식/유형. 업무정책상 변경 용."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","amount_donated","donation_type"],"description":"도네이션 쿠폰 정보 수정시 사용하는 객체. Prisma 테이블의 실제 컬럼과 일치하며, 기부액/쿠폰ID/고객ID/주문ID/유형에 대해 교정 또는 갱신을 지원합니다."},"IAiShopInquiry.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 FK(문의글 소유자). Prisma 'ai_shop_customer_id' 컬럼 참조."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"상품 문의시 해당 상품의 FK. Prisma DB 'ai_shop_product_id', null 가능."},{"type":"null","format":"uuid","description":"상품 문의시 해당 상품의 FK. Prisma DB 'ai_shop_product_id', null 가능."}],"description":"상품 문의시 해당 상품의 FK. Prisma DB 'ai_shop_product_id', null 가능."},"title":{"type":"string","description":"문의 제목/제목 키워드. 부분검색 및 리스트 검색에 활용."},"status":{"type":"string","description":"문의 상태 필터. 예: 'open','answered','closed' 등."},"created_at_from":{"type":"string","format":"date-time","description":"생성일(From, ISO8601 기준) 필터 범위 시작값."},"created_at_to":{"type":"string","format":"date-time","description":"생성일(To, ISO8601 기준) 필터 범위 끝값."}},"required":[],"description":"고객 문의 리스트/검색을 위한 요청 파라미터 객체.\n\nPrisma DB의 'ai_shop_inquiries' 모든 컬럼에 대해 복합 필터(고객, 상품, 상태, 제목, 기간 등) 지정 시 사용합니다. 모든 필드는 선택적으로, 상세 조건을 지정하지 않은 경우 전체 조회입니다."},"IPageAiShopInquiry":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInquiry"}}},"required":["pagination","data"],"description":"고객 문의(ai_shop_inquiries) 페이징 조회 결과 객체입니다.\n\npagination에는 현페이지/총레코드/한페이지크기 등 페이지 운용 정보가, data 배열에는 문의 레코드 배열이 들어갑니다. 각 원소는 IAiShopInquiry로 상세 정의되어 있습니다."},"IAiShopInquiry":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"고객 문의(PK, UUID). Prisma DB 'id' 컬럼."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 FK(문의 주체, UUID). Prisma 'ai_shop_customer_id'"},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"프러덕트(상품) FK - 어떤 상품에 대한 문의인 경우에만 지정됩니다. Prisma 'ai_shop_product_id' (nullable)"},{"type":"null","format":"uuid","description":"프러덕트(상품) FK - 어떤 상품에 대한 문의인 경우에만 지정됩니다. Prisma 'ai_shop_product_id' (nullable)"}],"description":"프러덕트(상품) FK - 어떤 상품에 대한 문의인 경우에만 지정됩니다. Prisma 'ai_shop_product_id' (nullable)"},"title":{"type":"string","description":"문의 제목(텍스트). Prisma 'title' 컬럼."},"body":{"type":"string","description":"문의본문(텍스트). Prisma 'body' 컬럼(길이제한 없음)."},"status":{"type":"string","description":"문의 상태코드('open','answered','closed' 등).\n\nPrisma 'status' 컬럼."},"created_at":{"type":"string","format":"date-time","description":"문의 생성일시(ISO 8601)."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"최종 편집/수정시각(ISO8601). null이면 변경사항 없음. Prisma 'updated_at'"},{"type":"null","format":"date-time","description":"최종 편집/수정시각(ISO8601). null이면 변경사항 없음. Prisma 'updated_at'"}],"description":"최종 편집/수정시각(ISO8601). null이면 변경사항 없음. Prisma 'updated_at'"}},"required":["id","ai_shop_customer_id","title","body","status","created_at"],"description":"고객 문의(Post) 상세 정보.\n\nPrisma 'ai_shop_inquiries'의 각 컬럼과 1:1 매핑되는 객체로, 문의글 고유번호/고객ID/상품ID/제목/본문/상태/생성일/수정일 등이 포함됩니다. updated_at은 null 허용입니다."},"IAiShopInquiry.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"문의 만든 고객의 UUID (FK, 필수). Prisma 'ai_shop_customer_id'."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"문의 대상 상품ID. 상품과 무관한 문의는 null로 설정 또는 미입력. Prisma 'ai_shop_product_id'"},{"type":"null","format":"uuid","description":"문의 대상 상품ID. 상품과 무관한 문의는 null로 설정 또는 미입력. Prisma 'ai_shop_product_id'"}],"description":"문의 대상 상품ID. 상품과 무관한 문의는 null로 설정 또는 미입력. Prisma 'ai_shop_product_id'"},"title":{"type":"string","description":"문의글의 제목(텍스트). Prisma 'title' 컬럼, 필수."},"body":{"type":"string","description":"본문 텍스트(내용), 필수. Prisma 'body' 컬럼."},"status":{"type":"string","description":"문의 상태. 예: 'open', 'answered', 'closed'. Prisma 'status' 컬럼 정의."}},"required":["ai_shop_customer_id","title","body","status"],"description":"새로운 고객 문의 등록시 클라이언트 또는 서비스단에서 요청 body로 사용하는 객체.\n\n문의한 고객ID, (옵션:상품ID), 제목, 본문, 상태코드가 들어가며, Prisma DB 'ai_shop_inquiries' 생성조건과 일치합니다."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호(1-base), uint32."},"limit":{"type":"integer","description":"페이지당 최대 레코드 수(기본 100), uint32."},"records":{"type":"integer","description":"DB 내 전체 레코드 카운트, uint32."},"pages":{"type":"integer","description":"전체 페이지 수(올림계산), uint32."}},"required":["current","limit","records","pages"],"description":"페이지네이션 안내 정보.\n\n고객의 검색 또는 페이징 UI 구현을 지원하며, 전체 레코드수, 현재페이지, 한페이지 크기, 전체페이지 수(레코드/limit의 올림) 등 데이터 탐색/연동에 필수입니다."}}},"completed":214,"total":286,"step":0,"created_at":"2025-07-23T07:08:41.575Z"},"tokenUsage":{"facade":{"aggregate":{"total":3886015,"input":{"total":3741807,"cached":0},"output":{"total":144208,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3886015,"input":{"total":3741807,"cached":0},"output":{"total":144208,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":3886015,"input":{"total":3741807,"cached":0},"output":{"total":144208,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":3886015,"input":{"total":3741807,"cached":0},"output":{"total":144208,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"aiShopProductImages.IRequest":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"상품 이미지가 속한 제품의 고유 식별자(Prisma 스키마의 ai_shop_product_images.ai_shop_product_id).\n\n이 값은 특정 제품에 속한 이미지만 검색하거나 필터링할 때 사용합니다. uuid 형식에 맞게 입력해야 하며, 정확한 제품을 지정할 때 필요합니다."},"alt_text":{"type":"string","description":"이미지의 접근성 및 대체 텍스트.\n\n검색 또는 필터링 기준의 일부로 사용될 수 있습니다. 여러 언어 또는 키워드와 함께 활용 가능합니다.\n\nPrisma 스키마의 ai_shop_product_images.alt_text 컬럼에 해당합니다."},"position":{"type":"integer","description":"이미지의 갤러리 내 순서(정수형, 1부터 시작). \n\n관리자 UI 등에서 정렬 또는 특정 위치 이미지만 조회할 때 사용합니다. Prisma 스키마의 ai_shop_product_images.position에 대응됩니다."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"},"sort_order":{"type":"string","description":"정렬 기준(예: \"created_at desc\", \"position asc\" 등). 필수 사항은 아니며, 일반적으로 admin, seller UI에서 다양한 정렬 옵션을 제공할 때 사용합니다."}},"description":"상품 이미지 목록을 조회·검색·페이지네이션할 때 사용하는 요청 DTO입니다.\n\nPrisma 스키마의 ai_shop_product_images 테이블 필드(ai_shop_product_id, alt_text, position 등)를 기준으로 필터링 및 검색이 가능합니다. 기본적으로 페이징 처리를 지원하며, 갤러리 내 특정 제품, 순번, 접근성 텍스트 등 다양한 검색 조건을 하나의 요청 객체로 전달합니다.","required":[]},"IPageAiShopProductImages":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopProductImages"},"description":"현재 페이지의 상품 이미지 레코드 목록.\n\n각 항목은 aiShopProductImages 객체이며, Prisma 스키마의 ai_shop_product_images 테이블 1행 전체에 대응됩니다."}},"description":"상품 이미지 페이징 응답 객체입니다.\n\n상품 이미지 search/list API가 반환하는 표준 페이징 타입입니다. pagination(현 페이지 정보)와 data(상품 이미지 배열)로 구성되어 있습니다.\n\n각 이미지 객체는 aiShopProductImages 타입이며, 상세 구조와 필드는 Prisma DB 스키마를 따릅니다.","required":[]},"aiShopProductImages":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"상품 이미지 고유 식별자. Prisma 스키마의 ai_shop_product_images.id 컬럼이며, AI Shop 플랫폼 내에서 모든 이미지가 유니크하게 식별됩니다.\n\n예시: `f3e5a790-fe34-4e8d-91e8-3b01038cca7b`\n"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"이 이미지를 소유한 상품의 고유 식별자. `ai_shop_products.id`를 참조함.\n\n상품에 여러 이미지를 연결하거나, 특정 상품 상세 이미지를 관리할 때 필수적인 FK입니다."},"image_uri":{"type":"string","maxLength":80000,"description":"저장 또는 컷된 이미지의 퍼시스턴트 URI. DB에는 최대 80,000자로 문자열로 저장됩니다.\n\nS3 같은 클라우드 또는 CDN 주소, 스토리지 키 등이 저장됨. 예: https://cdn.ai-shop.com/images/bag1.jpg\n\n프론트엔드, 관리자 UI 및 모바일 등에서 해당 이미지를 렌더링할 때 이 값을 그대로 사용합니다."},"alt_text":{"type":"string","description":"이미지의 접근성(alt) 텍스트.\n\n스크린 리더, 접근성/SEO 최적화, 대체 콘텐츠 표시에 반드시 필요.\n\nPrisma 스키마의 ai_shop_product_images.alt_text에 해당."},"position":{"type":"integer","description":"해당 이미지의 제품 내 순서(1부터 시작).\n\n메인 이미지, 서브이미지, 상세이미지 등 갤러리 내 위치를 결정합니다. 고유 인덱스가 부여됩니다."}},"required":["id","ai_shop_product_id","image_uri","alt_text","position"],"description":"상품 이미지 테이블(ai_shop_product_images)의 모든 필드를 표현하는 메인 타입입니다.\n\n각 필드는 자세한 Prisma 스키마 컬럼 설명과 완전하게 일치하며, DB에서 row를 읽거나 단일 이미지를 조회/반환할 때 사용합니다.\n\n포함 필드:\n- id: 이미지 PK(UUID, 글로벌 고유)\n- ai_shop_product_id: 부모 제품 FK(UUID)\n- image_uri: 스토리지 URI(최대 8만 자)\n- alt_text: 접근성 및 설명\n- position: 테이블 내 unique 인덱스 및 갤러리 순서\n\n모든 값은 NOT NULL 제약이 있으며, FK 무결성 확인이 필요합니다."},"aiShopProductImages.ICreate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"이미지를 등록할 제품의 UUID(PK). 반드시 존재하는 ai_shop_products.id를 사용해야 합니다.\n\n실제 파일/이미지 콘텐츠 업로드와는 별개로, 메타데이터만 먼저 생성하는 경우에도 필수 파라미터입니다."},"image_uri":{"type":"string","maxLength":80000,"description":"스토리지 상의 이미지 고유 URI. 예: `https://cdn.ai-shop.com/images/bag1.jpg` 등 최대 8만자까지 허용.\n\nS3, GCS, 자체 스토리지 URI 모두 가능. 반드시 상품 이미지가 업로드된 상태여야 함."},"alt_text":{"type":"string","description":"이미지의 대체 텍스트(접근성 alt). 고객/관리자/셀러가 직접 입력하며, 화면 리더 및 SEO에 활용됩니다.\n\n상품 속성 및 제품군에 따라 고유 alt 값을 세팅해야 합니다."},"position":{"type":"integer","description":"이미지 갤러리 내 노출 순번(1부터 시작). 동일 제품 내 중복 불가. 예: 1 → 대표 이미지, 2부터 서브 이미지 순."}},"required":["ai_shop_product_id","image_uri","alt_text","position"],"description":"상품 이미지 등록(생성) 요청 시 전달되는 DTO 유형입니다.\n\nai_shop_product_images 테이블 컬럼 -\n - ai_shop_product_id: 상품 FK, UUID\n - image_uri: 이미지 URI\n - alt_text: 접근성 설명\n - position: 갤러리 순번\n\n입력값은 상품의 유효성 및 중복성 체크가 필요합니다. 모든 필드는 Prisma 스키마 NOT NULL 컬럼에 대응되며, 자동 증가/생성되는 id는 제외됩니다."},"aiShopProductImages.IUpdate":{"type":"object","properties":{"image_uri":{"type":"string","maxLength":80000,"description":"업데이트할 상품 이미지의 새 URI. 서비스 마이그레이션, 재업로드 등에서 갤러리 URI가 바뀔 경우 사용합니다."},"alt_text":{"type":"string","description":"이미지 대체 텍스트(접근성 alt) 변경. 상품 정보 변경, 이미지 설명 개선 등 다양한 요청에서 수정됩니다."},"position":{"type":"integer","description":"제품 내 이미지 순서 변경.\n\n대표 이미지 전환, 상세 페이지 갤러리 내 이미지 리오더링 등에서 이 값을 갱신합니다."}},"description":"상품 이미지를 갱신·수정하는 데 전달하는 DTO 타입입니다.\n\n- image_uri: 클라우드/스토리지 이동, 썸네일 재생성 등에서 URI만 갱신하는 경우\n- alt_text: 설명 최적화, 다국어 지원, 접근성 개선 케이스 등에서 텍스트만 수정\n- position: 대표/서브 이미지 이동이나 UI 모듈 내 정렬 변경 시 값의 변화를 적용하는 필드\n\n키(id, ai_shop_product_id)는 별도 경로/파라미터로 지정되어야 하며, IUpdate 타입에는 포함되지 않습니다.","required":[]},"aiShopProductTags.IRequest":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"태깅할(또는 검색할) 상품의 UUID. 단일/복수 선택 모두 지원. 입력하지 않으면 전체 상품 태그 리스트에서 검색됩니다.\n\nPrisma 스키마의 ai_shop_product_tags.ai_shop_product_id 컬럼과 1:1로 매칭됩니다."},"tag_text":{"type":"string","description":"검색하고자 하는 해시태그 단어, 라벨.\n\nAI Shop 내 상품 검색/필터, 대시보드 태그 추천 등에서 활용됩니다. 대소문자 구분 없음.\nPrisma 스키마 ai_shop_product_tags.tag_text에 해당."},"created_at":{"type":"string","format":"date-time","description":"태그 생성일로 검색. 범위형(timestamp between 씩)\n\n예) 오늘 생성된 태그만 조회/통계 목적으로 사용함.\nPrisma 컬럼 ai_shop_product_tags.created_at와 필터 가능."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"},"sort_order":{"type":"string","description":"정렬 기준(예: \"created_at desc\"). 별도 필요 시 사용."}},"description":"상품 태그 검색/리스트 요청 DTO 입니다.\n\nPrisma 스키마의 ai_shop_product_tags 테이블 필드를 기준으로 다양한 필터, 페이징, 정렬 조건을 전달할 수 있습니다. 태킹된 상품별 태그, 생성일별, 키워드 단어별로 summay 집계, AI 추천, 대시보딩시에 활용됨.","required":[]},"IPageAiShopProductTags":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProductTag"},"description":"상품 태그 레코드들의 배열 – 각 row는 IAiShopProductTag 완전 정의형입니다."}},"description":"상품 태그 목록/검색 API의 표준 페이징 응답 타입입니다.\n\npagination: 페이지 정보,\ndata: 페이징된 상품 태그 레코드 배열\n\n모든 row는 IAiShopProductTag 타입 구조입니다.","required":[]},"IAiShopProductTag":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"상품 태그 고유 ID. Prisma 스키마 ai_shop_product_tags.id 값.\n\nAI Shop 내 전체 태그 키의 글로벌 고유 식별자입니다."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"태깅 대상 상품의 고유 식별자(UUID). Prisma fk_ai_shop_product_tags_product_id와 연결됨.\n\n상품별 태깅/검색/Ai 추천 등에 활용."},"tag_text":{"type":"string","description":"태그(해시) 텍스트. 자유형(예: '#eco', '친환경', '여름특가' 등 다양한 자연어 또는 AI 분류어). Prisma 스키마 ai_shop_product_tags.tag_text 컬럼에 해당."},"created_at":{"type":"string","format":"date-time","description":"태그 생성 시점(타임스탬프). Prisma ai_shop_product_tags.created_at 컬럼 정의값과 일치함."}},"required":["id","ai_shop_product_id","tag_text","created_at"],"description":"상품 단일 태그의 전체 row 구조를 나타내는 타입입니다.\n\n- id: 태그의 PK(UUID)\n- ai_shop_product_id: 태깅 대상 상품 UUID\n- tag_text: 해시태그/키워드\n- created_at: 생성 타임스탬프\n\nPrisma DB 컬럼과 대칭되며, row의 모든 값이 포함됩니다."},"IAiShopProductTag.ICreate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"태깅할 상품 UUID. 필수, Prisma 스키마 컬럼 ai_shop_product_tags.ai_shop_product_id.\n\n태그 생성 시 반드시 유효한 상품 레코드가 존재해야 합니다."},"tag_text":{"type":"string","description":"생성할 태그 문자열. '#', 자연어, AI 라벨 등도 가능. Prisma 스키마 ai_shop_product_tags.tag_text 컬럼.\n\n한 상품에 여러 개의 고유 태그 가능. NLP/AI 분류라벨 자동 삽입도 허용."}},"required":["ai_shop_product_id","tag_text"],"description":"상품 태그 생성(추가) 요청 DTO.\n\n- ai_shop_product_id: 태깅할 상품 UUID(PK,Fk)\n- tag_text: 신규 태그 텍스트\n\n프론트엔드, 관리자, AI 등에서 태그 추가 시 사용.\n\nrow id, created_at 등은 자동 생성되므로 제외."},"IAiShopProductTag.IUpdate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"연결된 상품 UUID. 태그 수정 시 상품 자체 연결을 재설계할 때만 사용. 일반적으론 변경하지 않음."},"tag_text":{"type":"string","description":"수정할 태그 문자열. NLP/AI 교정, 오타, 자동 분류 수정 등에 활용."}},"description":"상품 태그 정보 업데이트용 요청 DTO. 보통 태그 문자열 교정, 상품 연결 변경 등에서 사용.\n\nid, created_at 등은 수정불가며, 변화시 별도 row를 새로 만들어야 함.","required":[]},"IAiShopProductImportLog.IRequest":{"type":"object","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"로그 검색할 셀러의 고유 UUID. ai_shop_product_import_logs.ai_shop_seller_id 컬럼.\n\n특정 판매자의 대량 상품 등록 내역, 실패/완료 여부 파악 등에 활용."},"imported_at":{"type":"string","format":"date-time","description":"import batch 실행 시각(범위 검색용, 예: 2025-07-21T15:00:00Z 부터 ~)."},"status":{"type":"string","description":"등록 로그의 상태. `pending`, `completed`, `failed` 등.\n\nPrisma 스키마 ai_shop_product_import_logs.status 컬럼: 상태별 필터링에 활용."},"source_file":{"type":"string","description":"등록 로그의 source 파일 경로/URI. S3, GCS 등 클라우드 내 import 파일 또는 서버 특정 위치 참조용.\n\nPrisma 스키마 ai_shop_product_import_logs.source_file 컬럼."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"},"sort_order":{"type":"string","description":"정렬 기준(예: \"imported_at desc\"). 필요 시만 사용."}},"description":"상품 일괄 등록 로그 import batch 목록 조회/검색용 요청 DTO.\n\n셀러 식별, 실행 시간, 상태, source 파일 기준 등 다양한 filter 및 페이징/정렬 정보를 전달합니다. 실제 테이블 내 파티션/B bucket 검색 등 고성능 조회에 적합한 구조입니다.","required":[]},"IPageIAiShopProductImportLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProductImportLog"},"description":"현재 페이지의 일괄 상품 등록 로그(ImportLog) 객체 배열."}},"description":"상품 일괄 등록 import log (ai_shop_product_import_logs) 목록 API의 표준 응답 DTO.\n\n- pagination: 페이지네이션 정보\n- data: import log 레코드 리스트 배열\n\n실제 로그 row 구조는 IAiShopProductImportLog 타입의 배열로 제공됩니다.","required":[]},"IAiShopProductImportLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"로그 레코드의 고유 PK(UUID). DB ai_shop_product_import_logs.id 컬럼."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"이 상품 import 작업을 실행한 판매자(UUID). ai_shop_product_import_logs.ai_shop_seller_id 컬럼에 해당."},"imported_at":{"type":"string","format":"date-time","description":"상품 import 실행 시각, ISO 타임스탬프(예: 2025-07-23T07:07:46.023Z 등 Prsima ai_shop_product_import_logs.imported_at 컬럼)."},"source_file":{"type":"string","maxLength":80000,"description":"등록/가져오기 원본 파일 URI(클라우드, 서버, S3). Prisma ai_shop_product_import_logs.source_file 컬럼 및 관례대로 최대 8만 글자 허용."},"record_count":{"type":"integer","description":"이번 import 작업으로 포함된 기록(상품,SKU 등) 개수. Prisma ai_shop_product_import_logs.record_count 정수형 컬럼 정의 반영."},"status":{"type":"string","description":"import 작업의 상태값. `pending`, `completed`, `failed` 등 다양한 상태 코드를 지원합니다. Prisma ai_shop_product_import_logs.status 컬럼."},"error_message":{"oneOf":[{"type":"string","description":"import 실패 시 사유 또는 로그 메시지. 실패가 아닌 경우 null. Prisma ai_shop_product_import_logs.error_message 컬럼 및 docs에 명시됨."},{"type":"null"}],"description":"import 실패 시 사유 또는 로그 메시지. 실패가 아닌 경우 null. Prisma ai_shop_product_import_logs.error_message 컬럼 및 docs에 명시됨."}},"required":["id","ai_shop_seller_id","imported_at","source_file","record_count","status"],"description":"Prisma 스키마 ai_shop_product_import_logs 테이블의 전체 row 구조.\n\n- id: 고유 로그 PK UUID\n- ai_shop_seller_id: 실행 셀러\n- imported_at: import 실행 시각 (ISO)\n- source_file: import 원본 파일 URI/경로\n- record_count: import 내 처리 상품 수\n- status: 상태 열(pending/completed/failed 등)\n- error_message: 실패 시 사유(Nullable)"}}},"completed":226,"total":286,"step":0,"created_at":"2025-07-23T07:08:41.583Z"},"tokenUsage":{"facade":{"aggregate":{"total":4022677,"input":{"total":3874460,"cached":0},"output":{"total":148217,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":4022677,"input":{"total":3874460,"cached":0},"output":{"total":148217,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":4022677,"input":{"total":3874460,"cached":0},"output":{"total":148217,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":4022677,"input":{"total":3874460,"cached":0},"output":{"total":148217,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopChannel.IListRequest":{"type":"object","properties":{"code":{"type":"string","description":"채널 코드로 필터링할 때 사용합니다. 'main', 'event2025' 등. Partial match나 fuzzy 검색에 사용될 수 있습니다.\n\nPrisma 컬럼: code (String)\n\n채널의 고유 식별자 역할을 하며, 관리 목적과 프로그래밍 접근에 사용됩니다."},"name":{"type":"string","description":"채널 이름(한글, 영문 등)을 기준으로 필터/검색하는데 사용됩니다.\n\nPrisma 컬럼: name (String)\n\n실제 유저·관리자 UI에 표시되는 문구로, 채널을 직관적으로 식별하는데 쓰입니다."},"enabled":{"type":"boolean","description":"활성화(노출/비노출, 영업중/중지)\n\nPrisma 컬럼: enabled (Boolean)\n\n서비스 중인 채널 여부를 판단할 때 사용합니다."},"sort_order":{"type":"integer","description":"채널의 표시 순서를 오름차순/내림차순 정렬 또는 범위 검색할 때 사용됩니다.\n\nPrisma 컬럼: sort_order (Int)\n\n리스트 출력 시 우선순위나 순서 컨트롤에 사용합니다."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"}},"description":"채널 목록 조회용 복합 필터링 및 페이징 요청 타입입니다.\n\n아이샵 채널 테이블(ai_shop_channels)에서 제공하는 컬럼만 활용할 수 있으며, keyword/부분검색 및 활성화 상태, 정렬, 페이지네이션까지 지원합니다.\n\n모든 필터는 null 가능하며, 미지정 시 전체 목록 조회 동작을 따릅니다.","required":["pagination"]},"IPageAiShopChannel":{"$ref":"#/components/schemas/IPage","description":"페이징 처리된 채널(ai_shop_channels) 데이터 목록입니다.\n\ndata는 IAiShopChannel 타입 배열이며, pagination 정보는 표준 IPage 포맷을 따릅니다."},"IAiShopChannel":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"PK. 각 채널을 고유 식별하는 UUID.\n\nPrisma 컬럼: id (String @id @db.Uuid)\n\n관리/수정/프로그램 접근에서 유일키로 쓰임."},"code":{"type":"string","description":"채널 코드(식별자로 유일). 예시: 'main', 'event2025'.\n\nPrisma 컬럼: code (String)\n\n프로그램 내 논리 구분 또는 어드민 UI 필터/탭 관리에 사용."},"name":{"type":"string","description":"채널명(실제 노출됨). 예: '메인샵', '모바일독점'.\n\nPrisma 컬럼: name (String)\n\n관리자/사용자 화면에서 채널을 직관적으로 구분하는 UI 요소."},"enabled":{"type":"boolean","description":"채널 사용여부(활성/비활성).\n\nPrisma 컬럼: enabled (Boolean)\n\n현재 서비스되는 채널 여부를 판단."},"sort_order":{"type":"integer","description":"채널 표시 순서. 값이 작을수록 우선 배치됨.\n\nPrisma 컬럼: sort_order (Int)\n\n어드민, 프론트 리스트 UI 출력 순서 제어 용도."},"created_at":{"type":"string","format":"date-time","description":"생성시각(timestamp). UTC 기준 ISO8601 문자열.\n\nPrisma 컬럼: created_at (DateTime)\n\n데이터 생성 이벤트 및 추적·감사 용도."},"updated_at":{"type":"string","format":"date-time","description":"최종 수정시각(timestamp). ISO8601.\n\nPrisma 컬럼: updated_at (DateTime)\n\n변경 이력, 동기화 체크, 추적에 활용."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"],"description":"아이샵 채널 테이블 기본 정보. (ai_shop_channels)\n\n- 각 채널은 마켓플레이스 운영상의 노출 엔드포인트(메인, 이벤트관, 제휴처 등)를 의미\n- code(식별), name(노출), enabled(활성상태), sort_order(정렬), 생성/수정시각 필드를 포함\n- 완전히 정규화된 구조, 관계는 Section, Category, Post 등에서 추가적으로 참조됨\n\n채널 관리, 노출 통제, 계층적 뷰 제공, 어드민 관리 UI의 핵심 객체입니다."},"IAiShopChannel.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"채널 코드(고유). 신규 등록 시 필수.\n\n관리 시스템 내 논리구분, 중복 불가."},"name":{"type":"string","description":"채널명. 유저/관리자 UI용.\n\n등록시 반드시 지정해야 하며, 표시명으로 쓰임."},"enabled":{"type":"boolean","description":"활성화 여부. true/false. 신규시 기본값 true가 일반적."},"sort_order":{"type":"integer","description":"정렬 우선순위(1=최상위, 낮을수록 상위정렬)."},"created_at":{"type":"string","format":"date-time","description":"생성시각. 시스템에서 자동 할당하는 값이 일반적이나, 외부 입력/마이그레이션시 지정 가능."},"updated_at":{"type":"string","format":"date-time","description":"수정시각. 등록동기 또는 외부데이터 연동시점에 갱신."}},"required":["code","name","enabled","sort_order"],"description":"채널 정보 신규 등록용 Request 타입.\n\nPrisma ai_shop_channels 생성에 필요한 모든 필드를 클라이언트가 제공해야 함.\n\n입력 검증, 공백/중복, 필수 항목 체크 반드시 필요."},"IAiShopChannel.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"채널 코드(수정시 unique 검사 필요).\n\n기존 code 변경도 가능하나, 프로그램 레벨에서 side effect 있으면 주의."},"name":{"type":"string","description":"채널명(수정).\n\n관리자 사용/노출 UI 이름."},"enabled":{"type":"boolean","description":"채널 활성화/비활성화 플래그. 운영 중에도 변경 가능."},"sort_order":{"type":"integer","description":"채널의 노출 정렬 우선순위(값이 낮을수록 상위에 노출)."},"created_at":{"type":"string","format":"date-time","description":"생성시점. 보통 수정 시에는 값이 변경되지 않으나, 일부 시스템 연동 케이스를 대비."},"updated_at":{"type":"string","format":"date-time","description":"마지막 수정시각. 운영중 변경 시 반드시 갱신."}},"required":[],"description":"채널정보 수정(Update)용 타입.\n\nID는 path로 분리 입력, Payload에는 없는 구조이며, 나머지 필드는 변경 항목만 부분 제공 가능.\n\nPrisma 채널 테이블(ai_shop_channels) 컬럼과 일치하여 설계되어야 함."},"IAiShopChannel.IDeleteResult":{"type":"object","properties":{"success":{"type":"boolean","description":"삭제 성공 여부.\n\nPK 기준 탐색/처리 후 true/false 값을 반환."},"message":{"type":"string","description":"추가 안내/오류 메시지."}},"required":["success"],"description":"채널 삭제(하드 딜리트) 결과 반환 타입.\n\n실제 삭제 성공 여부와 메시지 포함."},"IAiShopSection.IListRequest":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 채널을 기준으로 섹션을 필터링.\n\nPrisma: ai_shop_channel_id (String @db.Uuid)\n\n특정 채널의 하위 섹션만 조회할 때 사용."},"code":{"type":"string","description":"섹션 코드(채널 내 유일)로 검색 필터.\n\nPrisma: code (String)\n\nUI 및 API에서 논리 구분, 필터링 활용."},"name":{"type":"string","description":"섹션명(노출). Name 필터/검색용.\n\nPrisma: name (String)\n\n관리 편의, 실사용자 식별 및 부분검색."},"enabled":{"type":"boolean","description":"노출 처리 여부. 활성/비활성(서비스 중단 등)에 따른 필터.\n\nPrisma: enabled (Boolean)\n\n운영 또는 마케팅 상황에 따라 관리."},"sort_order":{"type":"integer","description":"섹션 정렬 우선순위 지정값.\n\nPrisma: sort_order (Int)\n\n채널 내에서의 정렬 순서."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"}},"description":"채널 하위 섹션 목록 검색/페이징 쿼리 요청 타입.\n\n전체 컬럼(섹션코드, 노출명, 활성/비활성, 순서, 상위 채널 지정 등)과 페이지네이션 사용\n(null 포인트는 전체/전체채널 기준으로 동작).","required":["pagination"]},"IPageAiShopSection":{"$ref":"#/components/schemas/IPage","description":"섹션(ai_shop_sections) 목록 페이징 응답 DTO.\n\nIPage + data(섹션 배열) 구조."},"IAiShopSection":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"섹션 PK(UUID).\n\nPrisma: id (String @id @db.Uuid)\n\n유일 식별자/관계 컬럼으로 사용."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 채널(id) 참조 FK.\n\nPrisma: ai_shop_channel_id (String @db.Uuid)\n\n섹션이 어느 채널 소속인지 명확히 정의하게 됨."},"code":{"type":"string","description":"섹션 코드(채널 내 유일함). 예: 'home', 'outlet'.\n\nPrisma: code (String)\n\n프로그램/어드민 논리 분기, 구분자."},"name":{"type":"string","description":"섹션명(한글/영문 등 실질 UI 노출명).\n\nPrisma: name (String)\n\n관리자/사용자 화면에서 구분·검색."},"sort_order":{"type":"integer","description":"채널 내 표시 순서.\n\nPrisma: sort_order (Int)\n\n목록UI 정렬 제어."},"enabled":{"type":"boolean","description":"서비스 노출 제어 (true: 노출, false: 숨김/중단)\n\nPrisma: enabled (Boolean)"},"created_at":{"type":"string","format":"date-time","description":"섹션 생성 시각(timestamp, UTC 기준).\n\nPrisma: created_at (DateTime)\n\n감사, 이력, 변경 이벤트 추적에 사용."},"updated_at":{"type":"string","format":"date-time","description":"수정 시각(timestamp, UTC 기준).\n\nPrisma: updated_at (DateTime)\n\n실시간 동기화, 변경감지, 로그에 활용."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"채널 섹션 정보(ai_shop_sections) 기본 객체\n\n- ID, 소속채널 ID, 섹션코드(내부유일), 노출명(name), 순서, 활성여부, 생성/수정시각\n- 채널 내 카테고리·영역구분 및 머천트/운영자 정의된 배치 가능\n- 완전정규화: 모든 데이터 유일/atomic/관계설계 명확\n- 관리 UI 및 비즈니스 딜리버리 설계에서 직관적으로 순회·편집 가능한 핵심 엔터티"},"IAiShopSection.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 채널 참조 FK (생성시 반드시 지정).\n\nPrisma: ai_shop_channel_id (String @db.Uuid)"},"code":{"type":"string","description":"섹션 코드(채널 내 유일성 보장).\n\nPrisma: code (String)\n\n논리구분/어드민 관리용 ID"},"name":{"type":"string","description":"섹션명(노출명)."},"sort_order":{"type":"integer","description":"정렬우선순위(채널내 순서)."},"enabled":{"type":"boolean","description":"노출/비노출(on/off) 상태 지정"},"created_at":{"type":"string","format":"date-time","description":"생성시각. 시스템 할당 기본."},"updated_at":{"type":"string","format":"date-time","description":"최종수정시각. 변경 및 외부입력 동기화용"}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"섹션 신규 등록용 DTO.\n\nFK 상위채널, 코드/이름, 순서, 활성여부 지정.\n\nPrisma 테이블 필드 대응·관리 UI, API 명확 매핑 목적"},"IAiShopSection.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"소속 채널 변경시 FK.\n\nPrisma: ai_shop_channel_id"},"code":{"type":"string","description":"섹션코드. 유일성 검사 필요."},"name":{"type":"string","description":"노출명(수정)."},"sort_order":{"type":"integer","description":"정렬순서값(수정)."},"enabled":{"type":"boolean","description":"활성화여부(서비스 노출/중단 등) 수정"},"created_at":{"type":"string","format":"date-time","description":"생성시각(수정시 보통 사용X)"},"updated_at":{"type":"string","format":"date-time","description":"수정변경시 필수시간 갱신"}},"required":[],"description":"섹션정보 수정용 DTO.\n\n변경필드만 제공 있어도 되며, 전체 업데이트 시도 모두 OK.\n\nID는 path 입력, payload에는 X. UI/프로세스별 부분 갱신 or 풀 리플레이스 모두 지원"},"IAiShopSection.IDeleteResult":{"type":"object","properties":{"success":{"type":"boolean","description":"삭제 성공 여부"},"message":{"type":"string","description":"추가 안내 문구(정보, 실패사유 등)"}},"required":["success"],"description":"섹션 삭제 결과 응답 DTO.\n실제 삭제 처리 성공/실패 플래그 및 사용자 알림 메시지 포함."},"IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":["pagination","data"],"description":"표준 페이징 반환 객체\n\n- pagination: 페이징 정보 객체\n- data: 임의의 오브젝트 목록"},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호","minimum":1},"limit":{"type":"integer","description":"페이지 당 레코드 수 (기본 100)","minimum":1},"records":{"type":"integer","description":"전체 DB 결과 개수","minimum":0},"pages":{"type":"integer","description":"전체 페이지 수 (total = records/limit, ceil 처리)","minimum":1}},"required":["current","limit","records","pages"],"description":"표준 페이징 객체에 포함될 페이지네이션 정보\n\n현재 페이지, 제한, 전체개수, 전체페이지수"},"IPage.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"현재 페이지 번호(1이상)","minimum":1},"limit":{"type":"integer","description":"페이지당 개수(기본=100)","minimum":1}},"required":[],"description":"리스트형 조회 공통 페이지네이션 요청 파라미터\npage: 시작페이지단(1기본), limit: 페이지크기지정(기본100)"}}},"completed":238,"total":286,"step":0,"created_at":"2025-07-23T07:08:42.323Z"},"tokenUsage":{"facade":{"aggregate":{"total":4159259,"input":{"total":4007110,"cached":0},"output":{"total":152149,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":4159259,"input":{"total":4007110,"cached":0},"output":{"total":152149,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":4159259,"input":{"total":4007110,"cached":0},"output":{"total":152149,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":4159259,"input":{"total":4007110,"cached":0},"output":{"total":152149,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"ai_shopIAiShopInquiry.IUpdate":{"type":"object","description":"업데이트용 문의 엔티티 객체(IAiShopInquiry.IUpdate)로, ai_shop_inquiries에 정의된 필드만을 포함해 업데이트 요청에 사용한다.\n\n업데이트 가능한 필드는 제목(title), 본문(body), 상태(status), 참조곡 ai_shop_product_id 등이 있으며, 모두 스키마에 명시된 것들이다. deleted_at 등 소프트 삭제 관련 필드는 존재하지 않는다. 대부분의 필드는 선택적으로 제공 가능하며, id는 경로 파라미터로 전달된다. 본 타입은 PUT 요청 Body에 사용된다.","properties":{"title":{"type":"string","description":"문의 제목. 사용자가 남긴 질문 또는 요구의 요약을 제공하며 관리자가 또는 답변자가 한눈에 내용을 파악할 수 있도록 한다.\n\n예시: '배송 지연 관련 문의', '상품 사이즈 문의' 등."},"body":{"type":"string","description":"문의 본문. 문의의 상세 내용을 기록한다.\n\n예시: '상품이 언제 출고되는지 궁금합니다.'"},"status":{"type":"string","description":"문의 상태 (예: 'open', 'answered', 'closed'). 워크플로 관리 및 상태 변경 용도로 사용된다.\n\n상태에 따른 비즈니스 규칙에 따라 처리된다."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."},{"type":"null","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}],"description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}},"required":["title","body","status"]},"ai_shopIAiShopInquiryReply.IRequest":{"type":"object","description":"문의 답변 엔티티 리스트 조회 및 검색 요청 바디. ai_shop_inquiry_replies 스키마 내에서 검색이 허용되는 필드만을 기준으로 검색/필터링/페이징 한다.\n\n예: 답변 리스트, 조건부 조회, 페이징, 정렬/필터/검색 쿼리에 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"본 답변이 소속된 문의 엔티티의 고유식별자(UUID). 특정 문의에 종속 replies만 조회하고자 할 때 사용한다."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."}],"description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."}],"description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."}],"description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},"body":{"type":"string","description":"답변 본문 전체/부분 검색 시 사용."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},"page":{"type":"integer","description":"조회 페이지 넘버. 1-based."},"limit":{"type":"integer","description":"한 페이지에 가져올 최대 결과수. 기본 100."},"sort":{"type":"string","description":"정렬 방식 결정 예: 'created_at_desc', 'created_at_asc'. 지원하는 컬럼명+방향 조합만 허용."}},"required":["ai_shop_inquiry_id"]},"ai_shopIPageIAiShopInquiryReply":{"type":"object","description":"페이징된 문의 답변 리스트 컨테이너 타입. 각 엔티티는 ai_shop_inquiry_replies에서 정규화된 reply 오브젝트 형태로 반환된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/ai_shopIAiShopInquiryReply"},"description":"답변 리스트(한 페이지의 데이터 배열)"}},"required":["pagination","data"]},"ai_shopIAiShopInquiryReply":{"type":"object","description":"문의 답변 상세 정보 객체. ai_shop_inquiry_replies 내 실제 row를 반환한다.\n\n답변은 문의 ai_shop_inquiries에 종속적이며 seller, admin의 참조, 그리고 parent_id(트리구조) 등을 명확히 포함한다.","properties":{"id":{"type":"string","format":"uuid","description":"답변의 고유 식별자 (UUID)"},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 속한 문의 id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러 id."},{"type":"null","format":"uuid","description":"답변 작성 셀러 id."}],"description":"답변 작성 셀러 id."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자 id."},{"type":"null","format":"uuid","description":"답변 작성 관리자 id."}],"description":"답변 작성 관리자 id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."}],"description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},"body":{"type":"string","description":"답변 내용."},"created_at":{"type":"string","format":"date-time","description":"작성일시 (ISO8601)"}},"required":["id","ai_shop_inquiry_id","body","created_at"]},"ai_shopIAiShopInquiryReply.ICreate":{"type":"object","description":"AI Shop 문의 답변 등록 body용 타입. 필수 필드는 문의 id, 내용(body) – 그 외는 작성자의 역할에 따라 셀러, 관리자 id, 부모 id(트리형 답글) 등 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 달릴 문의의 id. 필수."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},{"type":"null","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."}],"description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."},{"type":"null","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."}],"description":"답변 관리자인 경우. 관리자 답변만 세팅."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},{"type":"null","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."}],"description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},"body":{"type":"string","description":"답변 본문(필수)"}},"required":["ai_shop_inquiry_id","body"]},"ai_shopIAiShopInquiryReply.IUpdate":{"type":"object","description":"문의 답변 수정(업데이트) DTO 타입. 수정 가능한 필드는 본문(body), 부모(parent_id) 등이고, 작성자 id는 원칙적으로 변경하지 않는다.","properties":{"body":{"type":"string","description":"수정될 답변 본문(필수)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."},{"type":"null","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."}],"description":"변경될 상위(부모) 답변 id(필요시)."}},"required":["body"]},"ai_shopIAiShopReview.IRequest":{"type":"object","description":"상품 리뷰 검색 및 페이징 요청 타입 (리스트 조회 request DTO). ai_shop_reviews 테이블 내 실제 컬럼 기준으로만 필터/정렬/검색/페이징을 실시한다.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자(고객) id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"rating":{"type":"integer","description":"리뷰의 평가 점수(1~5의 범위)로 필터링."},"status":{"type":"string","description":"리뷰의 상태값으로 검색. 가능한 값: 'pending', 'approved', 'rejected'"},"body":{"type":"string","description":"내용(본문) 부분검색용"},"created_at_from":{"type":"string","format":"date-time","description":"작성시작일(쿼리 기준)"},"created_at_to":{"type":"string","format":"date-time","description":"작성종료일(쿼리 기준)"},"page":{"type":"integer","description":"페이지 번호(1-base), 생략시 1"},"limit":{"type":"integer","description":"1페이지 데이터 최대 개수(생략시 100)"},"sort":{"type":"string","description":"정렬 기준칼럼+방향('created_at_desc', 'rating_asc' 등)"}},"required":[]},"ai_shopIPageIAiShopReview":{"type":"object","description":"상품 리뷰 리스트의 페이징 결과 컨테이너. metadata 및 data 배열이 페어로 구성된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/ai_shopIAiShopReview"},"description":"상품 리뷰 데이터 배열(한 페이지)"}},"required":["pagination","data"]},"ai_shopIAiShopReview":{"type":"object","description":"단일 상품 리뷰 row를 표현하는 객체 DTO. ai_shop_reviews 테이블 필드에 대응(고객, 상품, 본문, 평점, 상태, timestamps 등).","properties":{"id":{"type":"string","format":"uuid","description":"리뷰의 고유 식별자(UUID)"},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객(작성자)의 id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"body":{"type":"string","description":"리뷰 본문 내용"},"rating":{"type":"integer","description":"리뷰의 별점(평가점수, 1~5 한정)"},"status":{"type":"string","description":"리뷰 상태. 'pending'|'approved'|'rejected' 등 워크플로우에 따라 변동"},"created_at":{"type":"string","format":"date-time","description":"작성일시(ISO8601), 등록시 자동 생성"},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"},{"type":"null","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}],"description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}},"required":["id","ai_shop_customer_id","ai_shop_product_id","body","rating","status","created_at"]},"ai_shopIAiShopReview.ICreate":{"type":"object","description":"상품 리뷰 등록용 바디. ai_shop_reviews 테이블의 필수 필드에 대응(고객, 상품, 본문, 평점, 상태). 작성일시는 생략시 서버생성.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자의 id(UUID)"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"리뷰가 달릴 상품 id(UUID)"},"body":{"type":"string","description":"리뷰 내용"},"rating":{"type":"integer","description":"별점(평가점수, 1~5)"},"status":{"type":"string","description":"리뷰 상태값. 작성시 기본 'pending', 즉시 노출이면 'approved' 등"}},"required":["ai_shop_customer_id","ai_shop_product_id","body","rating","status"]},"ai_shopIAiShopReview.IUpdate":{"type":"object","description":"리뷰 수정용 DTO 타입. ai_shop_reviews 기준으로 본문, 점수, 상태에 대해 수정 가능하다.","properties":{"body":{"type":"string","description":"수정 후 리뷰 본문"},"rating":{"type":"integer","description":"수정 후 별점(1~5)"},"status":{"type":"string","description":"변경될 리뷰 상태 (예: 'pending', 'approved', 'rejected')"}},"required":[]},"ai_shopIAiShopReviewModerations.IRequest":{"type":"object","description":"리뷰 모더레이션(관리자 승인/반려/플래그) 검색/리스트/필터링 바디. ai_shop_review_moderations 테이블의 실제 컬럼만 사용하며, 리뷰id, 관리자id, 작업타입, 사유, 시점 등으로 검색/정렬/페이징을 지원한다.","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"타겟 리뷰 id"},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"처리 관리자 id"},"action":{"type":"string","description":"리뷰에 대한 관리 작업 코드('approve', 'reject', 'flag' 등)"},"reason":{"type":"string","description":"모더레이션 또는 작업 사유"},"created_at_from":{"type":"string","format":"date-time","description":"시작일 기준 검색"},"created_at_to":{"type":"string","format":"date-time","description":"종료일 기준 검색"},"page":{"type":"integer","description":"페이징: 페이지 번호(1-base)"},"limit":{"type":"integer","description":"페이징: 페이지 크기"},"sort":{"type":"string","description":"정렬(칼럼+_asc|desc) 예시: 'created_at_desc'"}},"required":[]},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호입니다. 페이지네이션 요청 시 반환되는 현재 페이지입니다."},"limit":{"type":"integer","description":"페이지당 레코드 개수입니다. 요청 및 응답에서 한 페이지에 반환되는 최대 수를 나타냅니다."},"records":{"type":"integer","description":"총 레코드 개수입니다. 전체 데이터베이스에 존재하는 전체 항목의 수입니다."},"pages":{"type":"integer","description":"전체 페이지 수입니다. 전체 records 수를 현 limit로 나눈 값(ceil)입니다."}},"required":["current","limit","records","pages"],"description":"페이지네이션 정보 객체입니다. 요청 및 응답에서 페이지 관련 정보를 제공합니다.\n\n- current: 현재 페이지 번호\n- limit: 페이지당 레코드 개수\n- records: 전체 레코드 수\n- pages: 전체 페이지 수"},"IAiShopReviewModerations.IRequest":{"type":"object","description":"리뷰 관리(모더레이션) 검색/목록 조회 요청 DTO입니다.\n\nai_shop_review_moderations 테이블에 대한 필터, 정렬, 페이지네이션 조건을 포함하며, 'admin', 'action', 'reason', 'created_at' 등 schema에 정의된 필드로 필터링이 가능합니다. 대규모 리뷰 관리/감사 대시보드, 워크플로우, 역할별 검색에 활용합니다.","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"관리 대상이 되는 리뷰의 고유 ID (ai_shop_reviews.id)."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"조치(모더레이션)한 관리자(어드민)의 고유 ID (ai_shop_admins.id)."},"action":{"type":"string","description":"모더레이션 액션 타입, 예시: 'approve', 'reject', 'flag'(ai_shop_review_moderations.action)."},"reason":{"type":"string","description":"모더레이션 사유, 예: '부적절', '로봇 탐지', '악성 댓글', '리포트 수신' 등"},"created_at_from":{"type":"string","format":"date-time","description":"조회 기간(시작 시간) - ISO 8601 형식"},"created_at_to":{"type":"string","format":"date-time","description":"조회 기간(종료 시간) - ISO 8601 형식"},"page":{"type":"integer","description":"페이지네이션: 요청 페이지 번호"},"limit":{"type":"integer","description":"페이지네이션: 한 페이지 반환 개수(최대 100 등)"},"sort":{"type":"string","description":"정렬 기준 ('created_at desc', etc)"},"search":{"type":"string","description":"액션, 사유, 관리자 등 통합 텍스트 검색어"}},"required":[]}}},"completed":239,"total":286,"step":0,"created_at":"2025-07-23T07:10:02.090Z"},"tokenUsage":{"facade":{"aggregate":{"total":4997296,"input":{"total":4825963,"cached":0},"output":{"total":171333,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":4997296,"input":{"total":4825963,"cached":0},"output":{"total":171333,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":4997296,"input":{"total":4825963,"cached":0},"output":{"total":171333,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":4997296,"input":{"total":4825963,"cached":0},"output":{"total":171333,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopOrder.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination. Used to retrieve a specific portion of the order list. Optional; default determined by API handler."},{"type":"null","description":"Page number for pagination. Used to retrieve a specific portion of the order list. Optional; default determined by API handler."}],"description":"Page number for pagination. Used to retrieve a specific portion of the order list. Optional; default determined by API handler."},"limit":{"oneOf":[{"type":"integer","description":"Number of records per page. Controls the maximum results per response. Optional; defaults set at API layer."},{"type":"null","description":"Number of records per page. Controls the maximum results per response. Optional; defaults set at API layer."}],"description":"Number of records per page. Controls the maximum results per response. Optional; defaults set at API layer."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for orders made by a specific customer. Must be a valid UUID corresponding to ai_shop_customers.id."},{"type":"null","format":"uuid","description":"Filter for orders made by a specific customer. Must be a valid UUID corresponding to ai_shop_customers.id."}],"description":"Filter for orders made by a specific customer. Must be a valid UUID corresponding to ai_shop_customers.id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for orders fulfilled by a specific seller. Must match ai_shop_sellers.id."},{"type":"null","format":"uuid","description":"Filter for orders fulfilled by a specific seller. Must match ai_shop_sellers.id."}],"description":"Filter for orders fulfilled by a specific seller. Must match ai_shop_sellers.id."},"ai_shop_cart_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for orders based on cart association. Must match ai_shop_carts.id."},{"type":"null","format":"uuid","description":"Filter for orders based on cart association. Must match ai_shop_carts.id."}],"description":"Filter for orders based on cart association. Must match ai_shop_carts.id."},"order_number":{"oneOf":[{"type":"string","description":"Unique business order identifier. May be used for precise search."},{"type":"null","description":"Unique business order identifier. May be used for precise search."}],"description":"Unique business order identifier. May be used for precise search."},"status":{"oneOf":[{"type":"string","description":"Order status filter. Example values: pending, paid, delivered, refunded (no enum constraint due to dynamic business values)."},{"type":"null","description":"Order status filter. Example values: pending, paid, delivered, refunded (no enum constraint due to dynamic business values)."}],"description":"Order status filter. Example values: pending, paid, delivered, refunded (no enum constraint due to dynamic business values)."},"payment_method":{"oneOf":[{"type":"string","description":"Payment method code filter (e.g., card, deposit, coupon)."},{"type":"null","description":"Payment method code filter (e.g., card, deposit, coupon)."}],"description":"Payment method code filter (e.g., card, deposit, coupon)."},"submitted_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for orders submitted after or on this datetime (inclusive, ISO8601 format)."},{"type":"null","format":"date-time","description":"Filter for orders submitted after or on this datetime (inclusive, ISO8601 format)."}],"description":"Filter for orders submitted after or on this datetime (inclusive, ISO8601 format)."},"submitted_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for orders submitted before or on this datetime (inclusive, ISO8601)."},{"type":"null","format":"date-time","description":"Filter for orders submitted before or on this datetime (inclusive, ISO8601)."}],"description":"Filter for orders submitted before or on this datetime (inclusive, ISO8601)."},"sort_by":{"oneOf":[{"type":"string","description":"Field to sort by (e.g., submitted_at, order_number)."},{"type":"null","description":"Field to sort by (e.g., submitted_at, order_number)."}],"description":"Field to sort by (e.g., submitted_at, order_number)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order: asc (ascending) or desc (descending). Optional."},{"const":"desc","description":"Sort order: asc (ascending) or desc (descending). Optional."},{"type":"null","enum":["asc","desc"],"description":"Sort order: asc (ascending) or desc (descending). Optional."}],"description":"Sort order: asc (ascending) or desc (descending). Optional."}},"description":"Request body for searching and paginating AI Shop orders (ai_shop_orders). Contains common filtering, sorting, and pagination fields for retrieving specific sets of order records, grounded in strict property correspondence with Prisma schema. All fields are optional and may be null—specified only when business logic dictates refined search.","required":[]},"IPageAiShopOrder":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for current order page (see standard IPage.IPagination component for structure)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrder"},"description":"Array of order records for this page."}},"required":["pagination","data"],"description":"Paginated results of ai_shop_orders records. Contains pagination information and an array of order records as defined by main ai_shop_orders schema."},"IAiShopOrder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Globally unique system identifier for this order."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer who placed the order (FK to ai_shop_customers.id)."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller fulfilling the order (FK to ai_shop_sellers.id)."},"ai_shop_cart_id":{"type":"string","format":"uuid","description":"Associated shopping cart containing purchased items (FK to ai_shop_carts.id)."},"order_number":{"type":"string","description":"Human/biz-recognizable unique order number (unique constraint, externally visible)."},"status":{"type":"string","description":"Order lifecycle status (e.g., pending, paid, shipped, delivered, refunded, cancelled). String; accepted values determined by business/domain rules."},"submitted_at":{"type":"string","format":"date-time","description":"Timestamp when the order was submitted/created; immutable after creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the order's last update."},"payment_method":{"type":"string","description":"Code representing the payment method chosen (e.g., card, deposit, coupon, mileage). String value as provided on order."},"customer_memo":{"oneOf":[{"type":"string","description":"Optional memo provided by the customer (e.g., special shipping instructions). Nullable."},{"type":"null","description":"Optional memo provided by the customer (e.g., special shipping instructions). Nullable."}],"description":"Optional memo provided by the customer (e.g., special shipping instructions). Nullable."},"admin_note":{"oneOf":[{"type":"string","description":"Optional admin-internal note/memo about this order. Null unless used by admin."},{"type":"null","description":"Optional admin-internal note/memo about this order. Null unless used by admin."}],"description":"Optional admin-internal note/memo about this order. Null unless used by admin."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete field: timestamp if the order is deleted, or null if not. Used for compliance audit/recovery."},{"type":"null","format":"date-time","description":"Soft delete field: timestamp if the order is deleted, or null if not. Used for compliance audit/recovery."}],"description":"Soft delete field: timestamp if the order is deleted, or null if not. Used for compliance audit/recovery."}},"required":["id","ai_shop_customer_id","ai_shop_seller_id","ai_shop_cart_id","order_number","status","submitted_at","updated_at","payment_method"],"description":"AI Shop Order schema. Represents a business order as recorded in ai_shop_orders. All fields directly reflect those in the Prisma DB entity. Includes FK references, audit fields, payment, status, and soft delete. This structure underpins all order record serialization for API responses."},"IAiShopOrder.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"FK to ai_shop_customers.id; required for order creation."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK to ai_shop_sellers.id; required for creation."},"ai_shop_cart_id":{"type":"string","format":"uuid","description":"FK to ai_shop_carts.id; records cart context/order provenance."},"order_number":{"type":"string","description":"Unique order number assigned/business logic to generate as required."},"status":{"type":"string","description":"Order status at creation. Must be one of allowed business values (e.g., pending, paid)."},"submitted_at":{"type":"string","format":"date-time","description":"Creation timestamp as ISO 8601 string."},"updated_at":{"type":"string","format":"date-time","description":"Initial updated timestamp; often same as submitted_at on creation."},"payment_method":{"type":"string","description":"Code of payment method selected (e.g., card, deposit, coupon, mileage)."},"customer_memo":{"oneOf":[{"type":"string","description":"Optional memo provided by customer. Nullable."},{"type":"null","description":"Optional memo provided by customer. Nullable."}],"description":"Optional memo provided by customer. Nullable."},"admin_note":{"oneOf":[{"type":"string","description":"Admin-only note at creation. Nullable."},{"type":"null","description":"Admin-only note at creation. Nullable."}],"description":"Admin-only note at creation. Nullable."}},"required":["ai_shop_customer_id","ai_shop_seller_id","ai_shop_cart_id","order_number","status","submitted_at","updated_at","payment_method"],"description":"Create DTO for new ai_shop_orders record. Requires all mandatory fields as per Prisma schema except id (which is system-generated). Nullables are optional."},"IAiShopOrder.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update customer reference (normally immutable; for admin correction only)."},{"type":"null","format":"uuid","description":"Update customer reference (normally immutable; for admin correction only)."}],"description":"Update customer reference (normally immutable; for admin correction only)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update seller reference. Optional; caution for business logic."},{"type":"null","format":"uuid","description":"Update seller reference. Optional; caution for business logic."}],"description":"Update seller reference. Optional; caution for business logic."},"ai_shop_cart_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update cart reference. Rarely changed."},{"type":"null","format":"uuid","description":"Update cart reference. Rarely changed."}],"description":"Update cart reference. Rarely changed."},"order_number":{"oneOf":[{"type":"string","description":"Update external order number; changes should be audited."},{"type":"null","description":"Update external order number; changes should be audited."}],"description":"Update external order number; changes should be audited."},"status":{"oneOf":[{"type":"string","description":"Change order status. Must be allowed by business workflow."},{"type":"null","description":"Change order status. Must be allowed by business workflow."}],"description":"Change order status. Must be allowed by business workflow."},"submitted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Change creation timestamp. Rare."},{"type":"null","format":"date-time","description":"Change creation timestamp. Rare."}],"description":"Change creation timestamp. Rare."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set order's update time at modification."},{"type":"null","format":"date-time","description":"Set order's update time at modification."}],"description":"Set order's update time at modification."},"payment_method":{"oneOf":[{"type":"string","description":"Update payment method code."},{"type":"null","description":"Update payment method code."}],"description":"Update payment method code."},"customer_memo":{"oneOf":[{"type":"string","description":"Change customer-provided memo."},{"type":"null","description":"Change customer-provided memo."}],"description":"Change customer-provided memo."},"admin_note":{"oneOf":[{"type":"string","description":"Update internal admin memo."},{"type":"null","description":"Update internal admin memo."}],"description":"Update internal admin memo."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set soft delete timestamp to soft delete/undelete the order."},{"type":"null","format":"date-time","description":"Set soft delete timestamp to soft delete/undelete the order."}],"description":"Set soft delete timestamp to soft delete/undelete the order."}},"required":[],"description":"Update DTO for mutating an ai_shop_orders record. All fields are optional and nullable. DTO is used to support admins and business process. System constraints enforce which fields are allowed to be edited depending on business logic."},"IAiShopOrderItem.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional)."},{"type":"null","description":"Page number for pagination (optional)."}],"description":"Page number for pagination (optional)."},"limit":{"oneOf":[{"type":"integer","description":"Results per page (optional; defaults at platform-level)."},{"type":"null","description":"Results per page (optional; defaults at platform-level)."}],"description":"Results per page (optional; defaults at platform-level)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order containing the item (FK to ai_shop_orders.id; used for filtering items within an order)."},{"type":"null","format":"uuid","description":"Order containing the item (FK to ai_shop_orders.id; used for filtering items within an order)."}],"description":"Order containing the item (FK to ai_shop_orders.id; used for filtering items within an order)."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Product identifier (FK to ai_shop_products.id) for filtering itemized SKUs."},{"type":"null","format":"uuid","description":"Product identifier (FK to ai_shop_products.id) for filtering itemized SKUs."}],"description":"Product identifier (FK to ai_shop_products.id) for filtering itemized SKUs."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"SKU/variant FK (nullable; null if item not tied to variant)."},{"type":"null","format":"uuid","description":"SKU/variant FK (nullable; null if item not tied to variant)."}],"description":"SKU/variant FK (nullable; null if item not tied to variant)."},"product_name":{"oneOf":[{"type":"string","description":"Filter by product name (atomic snapshot at time of order). May use full/partial string match according to implementation."},{"type":"null","description":"Filter by product name (atomic snapshot at time of order). May use full/partial string match according to implementation."}],"description":"Filter by product name (atomic snapshot at time of order). May use full/partial string match according to implementation."},"variant_name":{"oneOf":[{"type":"string","description":"Filter by variant display name (nullable; as snapshot at order time)."},{"type":"null","description":"Filter by variant display name (nullable; as snapshot at order time)."}],"description":"Filter by variant display name (nullable; as snapshot at order time)."},"quantity":{"oneOf":[{"type":"integer","description":"Filter by quantity (exact match or range depending on request body convention)."},{"type":"null","description":"Filter by quantity (exact match or range depending on request body convention)."}],"description":"Filter by quantity (exact match or range depending on request body convention)."},"unit_price":{"oneOf":[{"type":"number","description":"Filter by purchase unit price (exact match or min/max; JSON Schema supports only simple types here)."},{"type":"null","description":"Filter by purchase unit price (exact match or min/max; JSON Schema supports only simple types here)."}],"description":"Filter by purchase unit price (exact match or min/max; JSON Schema supports only simple types here)."},"currency":{"oneOf":[{"type":"string","description":"Currency code filter (e.g., USD, KRW, JPY—use appropriate string code)."},{"type":"null","description":"Currency code filter (e.g., USD, KRW, JPY—use appropriate string code)."}],"description":"Currency code filter (e.g., USD, KRW, JPY—use appropriate string code)."},"seller_memo":{"oneOf":[{"type":"string","description":"Filter by seller-side note (optional, nullable)."},{"type":"null","description":"Filter by seller-side note (optional, nullable)."}],"description":"Filter by seller-side note (optional, nullable)."}},"required":[],"description":"Request DTO for searching or paginating order items (ai_shop_order_items). All filter/sort fields correspond strictly to schema columns. All properties are optional or nullable for maximal flexibility."},"IPageAiShopOrderItem":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination info for current page—see shared description for IPage.IPagination."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderItem"},"description":"Current page's array of order items."}},"required":["pagination","data"],"description":"Paginated result set for order item records (ai_shop_order_items). Contains list and associated pagination info."},"IAiShopOrderItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of order item record."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK reference to ai_shop_orders.id (owning order)."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"FK reference to ai_shop_products.id."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK reference to ai_shop_product_variants.id (nullable if order line not tied to variant)."},{"type":"null","format":"uuid","description":"FK reference to ai_shop_product_variants.id (nullable if order line not tied to variant)."}],"description":"FK reference to ai_shop_product_variants.id (nullable if order line not tied to variant)."},"product_name":{"type":"string","description":"Product name at purchase (snapshot, not current name to guarantee historical traceability)."},"variant_name":{"oneOf":[{"type":"string","description":"Variant display name at purchase (snapshot, nullable)."},{"type":"null","description":"Variant display name at purchase (snapshot, nullable)."}],"description":"Variant display name at purchase (snapshot, nullable)."},"quantity":{"type":"integer","description":"Ordered quantity of this line item."},"unit_price":{"type":"number","description":"Unit price for this order line (float, as at purchase time)."},"currency":{"type":"string","description":"Currency code (e.g., USD/KRW/JPY); string only."},"seller_memo":{"oneOf":[{"type":"string","description":"Seller-side memo field for this line (nullable)."},{"type":"null","description":"Seller-side memo field for this line (nullable)."}],"description":"Seller-side memo field for this line (nullable)."}},"required":["id","ai_shop_order_id","ai_shop_product_id","product_name","quantity","unit_price","currency"],"description":"Order item schema (ai_shop_order_items). Describes a specific product (and optional variant) and relates it to order, quantity, price/currency, seller memo, etc. Used for listing all items of an order or filtering at SKU/variant granularity."},"IAiShopOrderItem.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Parent order ID; FK to ai_shop_orders.id."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"FK to ai_shop_products.id; which product is included in this item."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable SKU/variant; maps to ai_shop_product_variants.id. Null if the item is for a product without variants."},{"type":"null","format":"uuid","description":"Nullable SKU/variant; maps to ai_shop_product_variants.id. Null if the item is for a product without variants."}],"description":"Nullable SKU/variant; maps to ai_shop_product_variants.id. Null if the item is for a product without variants."},"product_name":{"type":"string","description":"Snapshot of product name at purchase (an audit field, not FK)."},"variant_name":{"oneOf":[{"type":"string","description":"Optional snapshot of the variant name at purchase (nullable)."},{"type":"null","description":"Optional snapshot of the variant name at purchase (nullable)."}],"description":"Optional snapshot of the variant name at purchase (nullable)."},"quantity":{"type":"integer","description":"How many of this SKU/variant were ordered in this item line."},"unit_price":{"type":"number","description":"Unit price at time of purchase."},"currency":{"type":"string","description":"3-letter currency code at point of sale."},"seller_memo":{"oneOf":[{"type":"string","description":"Memo attached by seller to this order item. Nullable."},{"type":"null","description":"Memo attached by seller to this order item. Nullable."}],"description":"Memo attached by seller to this order item. Nullable."}},"required":["ai_shop_order_id","ai_shop_product_id","product_name","quantity","unit_price","currency"],"description":"Create DTO for inserting a new order item record (ai_shop_order_items). Each order item must relate to an order, product, (optionally) a variant, and carry pricing details. FKs must be validated externally. All fields must map directly to schema."},"IAiShopOrderItems.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update parent order reference for the item (rare)."},{"type":"null","format":"uuid","description":"Update parent order reference for the item (rare)."}],"description":"Update parent order reference for the item (rare)."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update product id for the item line."},{"type":"null","format":"uuid","description":"Update product id for the item line."}],"description":"Update product id for the item line."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update SKU/variant association for this line (nullable, optional)."},{"type":"null","format":"uuid","description":"Update SKU/variant association for this line (nullable, optional)."}],"description":"Update SKU/variant association for this line (nullable, optional)."},"product_name":{"oneOf":[{"type":"string","description":"Update snapshot of product name (rare, for correction only)."},{"type":"null","description":"Update snapshot of product name (rare, for correction only)."}],"description":"Update snapshot of product name (rare, for correction only)."},"variant_name":{"oneOf":[{"type":"string","description":"Update the snapshot of variant name (nullable, correct only in edge cases)."},{"type":"null","description":"Update the snapshot of variant name (nullable, correct only in edge cases)."}],"description":"Update the snapshot of variant name (nullable, correct only in edge cases)."},"quantity":{"oneOf":[{"type":"integer","description":"Update the quantity of this order item."},{"type":"null","description":"Update the quantity of this order item."}],"description":"Update the quantity of this order item."},"unit_price":{"oneOf":[{"type":"number","description":"Change in unit price (e.g., after discount adjustment or correction)."},{"type":"null","description":"Change in unit price (e.g., after discount adjustment or correction)."}],"description":"Change in unit price (e.g., after discount adjustment or correction)."},"currency":{"oneOf":[{"type":"string","description":"Update the currency code."},{"type":"null","description":"Update the currency code."}],"description":"Update the currency code."},"seller_memo":{"oneOf":[{"type":"string","description":"Update seller's note (can clear with null or update as needed)."},{"type":"null","description":"Update seller's note (can clear with null or update as needed)."}],"description":"Update seller's note (can clear with null or update as needed)."}},"description":"Update DTO for ai_shop_order_items. Any field can be set to null if needed (for clarity/correction); required fields enforced by service layer. Use for PATCH/PUT-based update of order line content.","required":[]},"IAiShopOrderItems":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the order item."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"Reference to order ID (FK to ai_shop_orders.id)."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product ID (FK to ai_shop_products.id)."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Variant (SKU) ID (nullable)."},{"type":"null","format":"uuid","description":"Variant (SKU) ID (nullable)."}],"description":"Variant (SKU) ID (nullable)."},"product_name":{"type":"string","description":"Product name at time of purchase."},"variant_name":{"oneOf":[{"type":"string","description":"Variant name (nullable, as at purchase/audit time)."},{"type":"null","description":"Variant name (nullable, as at purchase/audit time)."}],"description":"Variant name (nullable, as at purchase/audit time)."},"quantity":{"type":"integer","description":"Purchased quantity."},"unit_price":{"type":"number","description":"Unit price for the order item line."},"currency":{"type":"string","description":"Currency code for this order item."},"seller_memo":{"oneOf":[{"type":"string","description":"Seller's note (nullable)."},{"type":"null","description":"Seller's note (nullable)."}],"description":"Seller's note (nullable)."}},"description":"Order item record, fully normalized as in ai_shop_order_items. Mirrors the database row structure for each individual order line.","required":[]},"IAiShopOrderStatusHistories.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional, for list endpoints)."},{"type":"null","description":"Page number for pagination (optional, for list endpoints)."}],"description":"Page number for pagination (optional, for list endpoints)."},"limit":{"oneOf":[{"type":"integer","description":"Number of records per page (optional; platform-level default if not set)."},{"type":"null","description":"Number of records per page (optional; platform-level default if not set)."}],"description":"Number of records per page (optional; platform-level default if not set)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order ID (FK to ai_shop_orders.id) to filter status histories for a specific order."},{"type":"null","format":"uuid","description":"Order ID (FK to ai_shop_orders.id) to filter status histories for a specific order."}],"description":"Order ID (FK to ai_shop_orders.id) to filter status histories for a specific order."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for status changes made by a particular admin (FK to ai_shop_admins.id)."},{"type":"null","format":"uuid","description":"Filter for status changes made by a particular admin (FK to ai_shop_admins.id)."}],"description":"Filter for status changes made by a particular admin (FK to ai_shop_admins.id)."},"from_status":{"oneOf":[{"type":"string","description":"Filter by the status value prior to the change (string; flexible, depends on workflow/enum in business logic)."},{"type":"null","description":"Filter by the status value prior to the change (string; flexible, depends on workflow/enum in business logic)."}],"description":"Filter by the status value prior to the change (string; flexible, depends on workflow/enum in business logic)."},"to_status":{"oneOf":[{"type":"string","description":"Filter by status value after the change (string)."},{"type":"null","description":"Filter by status value after the change (string)."}],"description":"Filter by status value after the change (string)."},"changed_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for changes after or at this datetime (inclusive, ISO8601)."},{"type":"null","format":"date-time","description":"Filter for changes after or at this datetime (inclusive, ISO8601)."}],"description":"Filter for changes after or at this datetime (inclusive, ISO8601)."},"changed_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for changes before or at this datetime (inclusive, ISO8601)."},{"type":"null","format":"date-time","description":"Filter for changes before or at this datetime (inclusive, ISO8601)."}],"description":"Filter for changes before or at this datetime (inclusive, ISO8601)."},"change_reason":{"oneOf":[{"type":"string","description":"Filter for status changes with a specific reason substring/filter."},{"type":"null","description":"Filter for status changes with a specific reason substring/filter."}],"description":"Filter for status changes with a specific reason substring/filter."}},"description":"Request DTO for filtering/listing order status history (ai_shop_order_status_histories). Supports all fields present in schema, with all properties optional.","required":[]},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"Current page number (starts from 1)."},"limit":{"type":"integer","description":"Records per page (default/full result size per API logic)."},"records":{"type":"integer","description":"Total records in the database query (unpaged count)."},"pages":{"type":"integer","description":"Total available pages for this query (ceil of records/limit)."}},"required":["current","limit","records","pages"],"description":"Pagination information: current page, per-page limit, total records, total pages. Used in all IPage<T> response containers."}}},"completed":251,"total":286,"step":0,"created_at":"2025-07-23T07:11:04.159Z"},"tokenUsage":{"facade":{"aggregate":{"total":5271941,"input":{"total":5091265,"cached":0},"output":{"total":180676,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5271941,"input":{"total":5091265,"cached":0},"output":{"total":180676,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":5271941,"input":{"total":5091265,"cached":0},"output":{"total":180676,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5271941,"input":{"total":5091265,"cached":0},"output":{"total":180676,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopProductVariants.IUpdate":{"type":"object","description":"모든 필드는 ai_shop_product_variants 테이블의 실제 컬럼을 반영합니다.\n\n제품 옵션(variant)을 부분/전체 수정할 때 사용합니다. 필드는 다음과 같습니다:\n- ai_shop_product_id: 부모 상품의 UUID (필수)\n- sku: 옵션 결합을 식별하는 고유 문자열 (필수)\n- option_combo: 예시 \"Color:Red;Size:L\" (필수)\n- barcode: 바코드(선택)\n- is_active: 판매 가능 여부 (필수)\n\n업데이트 시, 존재하지 않는 값은 에러가 발생합니다. 모든 property는 실제 Prisma DB 컬럼 설명을 그대로 따릅니다.","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"부모 상품(UUID)입니다. ai_shop_products.id를 참조하며, 어떤 상품의 옵션조합인지를 명확히 합니다.\n\nPrisma 스키마: ai_shop_product_variants.ai_shop_product_id\n\n반드시 존재하는 상품 UUID이어야 하며, 변경 시 해당 옵션이 다른 상품에 귀속될 수 있습니다."},"sku":{"type":"string","description":"이 옵션의 재고관리 고유 식별자(SKU). 반드시 제품+옵션조합별로 고유합니다.\n\n예: 'SKU-BAG-RED-L'\n\nPrisma 스키마: ai_shop_product_variants.sku\n\nSKU 중복 시 인서트/업데이트 에러가 발생합니다."},"option_combo":{"type":"string","description":"옵션 결합을 나타내는 원자적 string. 예: 'Color:Red;Size:L'.\n\n제품 옵션의 조합(색상·사이즈 등)을 문자열로 직렬화한 값입니다.\n\nPrisma 스키마: ai_shop_product_variants.option_combo\n\n변경 시 해당 옵션이 새로운 옵션조합을 대표하게 됩니다."},"barcode":{"oneOf":[{"type":"string","description":"제품 옵션 조합 Barcode(EAN/UPC/QR 등). 실제 바코드값 문자열. Null 허용.\n\nPrisma 스키마: ai_shop_product_variants.barcode\n\n일부 옵션/제품만 입력될 수 있습니다."},{"type":"null","description":"제품 옵션 조합 Barcode(EAN/UPC/QR 등). 실제 바코드값 문자열. Null 허용.\n\nPrisma 스키마: ai_shop_product_variants.barcode\n\n일부 옵션/제품만 입력될 수 있습니다."}],"description":"제품 옵션 조합 Barcode(EAN/UPC/QR 등). 실제 바코드값 문자열. Null 허용.\n\nPrisma 스키마: ai_shop_product_variants.barcode\n\n일부 옵션/제품만 입력될 수 있습니다."},"is_active":{"type":"boolean","description":"판매 가능 여부를 나타내는 boolean 값. true면 판매·노출 가능, false면 숨김/판매 불가.\n\nPrisma 스키마: ai_shop_product_variants.is_active\n\n업데이트 시 품절처리/숨김처리 용도로 쓰입니다."}},"required":["ai_shop_product_id","sku","option_combo","is_active"]},"IPageAiShopInventories.IRequest":{"type":"object","description":"ai_shop_inventories(재고) 목록 조회 요청시 검색/필터/정렬/페이지네이션 정보.\n\nPrisma 스키마 테이블 컬럼 기반으로 작성되며, 주요 filter 필드는 다음을 포함합니다.\n- ai_shop_product_variant_id: 특정 상품옵션(SKU) 기준 재고 조회\n- ai_shop_seller_id: 판매자별 재고 검색\n- stock: 재고 수량 조건\n- restock_threshold: 재고 경고 임계치\n- turnover_rate: 회전율\n- created_at, updated_at, deleted_at 등 시간범위\n- page, limit: 페이지/사이즈\n\n해당 컬럼들이 실제 Prisma DB 테이블과 1:1로 맵핑되어야 함. 필요에 따라 복수 조건/필터 사용 가능. deleted_at(soft delete)이 null인 값만 검색(default)하거나 전체 포함 가능.","properties":{"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"특정 상품옵션(variant)의 UUID. SKU 단위 재고 필터."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 소유한 판매자 UUID (ai_shop_sellers.id)."},"stock":{"type":"integer","description":"재고 수량. =, >, < 등을 활용해 필터링한다."},"restock_threshold":{"type":"integer","description":"리오더/재입고 경고 임계값. 임계치 이하 재고만 별도 필터링 가능."},"turnover_rate":{"type":"number","format":"double","description":"재고 회전율. float/실수값. 본 값 기준으로도 검색 가능."},"created_at":{"type":"string","format":"date-time","description":"생성일 검색(ISO8601, range 필터용)."},"updated_at":{"type":"string","format":"date-time","description":"최근 변경일 검색(ISO8601, range 필터용)."},"deleted_at":{"type":"string","format":"date-time","description":"삭제/소프트 삭제 기준 검색(특정일 이후 삭제 등)."}},"required":[]},"IPageAiShopInventories":{"type":"object","description":"재고 정보(ai_shop_inventories) 페이징 응답 컨테이너.\n\ndata[]는 'IAiShopInventories' 객체 리스트.\n\npagination은 기본/공통 페이징 정보(IPage.IPagination)를 포함합니다. (페이징 구조 설명 참고)\n\nPrisma DB comment와 admin BIZ 적용: 필터링된 결과의 재고 전체 집합을 페이지별로 제공합니다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInventories"},"description":"해당 페이지의 ai_shop_inventories 전체 레코드 리스트."}},"required":["pagination","data"]},"IAiShopInventories":{"type":"object","description":"상품옵션 별 재고 정보 테이블(ai_shop_inventories)의 모든 컬럼.\n\n재고관리는 1:1로 상품옵션(variant)에 매핑됨. 실제 Prisma DB 컬럼 전체를 빠짐없이 정의해야 함.\n- id: 재고PK(UUID)\n- ai_shop_product_variant_id: 어떤 옵션(SKUUID)에 귀속되는지 (1:1 unique)\n- ai_shop_seller_id: 재고를 관리하는 판매자ID(UUID)\n- stock: 현재고 INT\n- restock_threshold: 재고경고치 INT\n- turnover_rate: 회전율(float, null허용, optional)\n- created_at: 생성일\n- updated_at: 최근변경일\n- deleted_at: 소프트삭제 타임스탬프, null인 경우 미삭제\n\n관계: 각각 상품옵션/판매자를 FK로 참조 (Prisma 테이블 정의 필수 참고)\n\n이 스키마는 ai_shop_inventories 테이블 명세에 따라 위험/중복 없이 컬럼을 정의합니다.","properties":{"id":{"type":"string","format":"uuid","description":"AI Shop 재고 관리 PK(UUID).\n\n실제 Prisma 스키마: ai_shop_inventories.id\n유일 식별자입니다."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"해당 재고가 소속된 상품옵션(variant)의 PK(UUID).\n\n실제 Prisma: ai_shop_inventories.ai_shop_product_variant_id\n상품+옵션(SKU)별 매칭에 1:1 unique constraint."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 관리하는 담당 판매자 UUID\n\n실제 Prisma: ai_shop_inventories.ai_shop_seller_id\n판매자별 재고 개별 관리가 가능합니다."},"stock":{"type":"integer","description":"SKU기준 현재 상품 재고 수량(int).\n\n실제 Prisma: ai_shop_inventories.stock\n재고 수량의 증감은 외부 API나 admin화면에서만 처리."},"restock_threshold":{"type":"integer","description":"재고 경고 임계치(int).\n\n실제 Prisma: ai_shop_inventories.restock_threshold\n이 값 이하로 떨어지면 자동 알림·보고서가 트리거됨."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},{"type":"null","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."}],"description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},"created_at":{"type":"string","format":"date-time","description":"재고 정보 생성 타임스탬프.\n\n실제 Prisma: ai_shop_inventories.created_at\nDB 저장시 자동 세팅되는 UTC ISO 8601."},"updated_at":{"type":"string","format":"date-time","description":"재고정보 최근 수정 일시(UTC).\n\n실제 Prisma: ai_shop_inventories.updated_at\n일반적으로 재고 변경시마다 자동 갱신."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."},{"type":"null","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}],"description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}},"required":["id","ai_shop_product_variant_id","ai_shop_seller_id","stock","restock_threshold","created_at","updated_at"]},"IAiShopInventories.ICreate":{"type":"object","description":"재고정보 신규 생성용 DTO.\n\n상품옵션별 재고(variant_id) 및 판매자, 초기재고, 경고 임계치, 선택적 회전율을 필수·선택구성으로 받음. Prisma 컬럼과 완벽히 1:1입니다.\n\n- ai_shop_product_variant_id (필수)\n- ai_shop_seller_id (필수)\n- stock (초기재고, 필수)\n- restock_threshold (필수)\n- turnover_rate (선택/nullable)\n- created_at/updated_at (관리용, 시스템에 자동부여시 optional)\n\n모든 property는 실 Prisma 컬럼 기준 기술·명명합니다.","properties":{"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"재고 상품옵션(variant) UUID, FK. 신규 등록시 반드시 지정."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 소유/관리하는 판매자 UUID."},"stock":{"type":"integer","description":"초기 재고 수량(INT). 0이상 정수."},"restock_threshold":{"type":"integer","description":"재고경고에 사용될 임계치(INT)."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"재고 회전율(float, nullable). 미입력시 null/0으로 간주."},{"type":"null","format":"double","description":"재고 회전율(float, nullable). 미입력시 null/0으로 간주."}],"description":"재고 회전율(float, nullable). 미입력시 null/0으로 간주."},"created_at":{"type":"string","format":"date-time","description":"생성일시 타임스탬프(UTC ISO8601), 시스템에서 자동 입력or직접 기입."},"updated_at":{"type":"string","format":"date-time","description":"최초 등록시 업데이트일시. 자동입력(혹은 미입력시 생략/자동기입)."}},"required":["ai_shop_product_variant_id","ai_shop_seller_id","stock","restock_threshold","created_at"]},"IAiShopInventories.IUpdate":{"type":"object","description":"재고정보(ai_shop_inventories) 갱신/변경시 사용하는 DTO.\n\nID(PK)를 기준으로 수량, 경고치, 회전율, soft delete, 변경일자 등을 업데이트 할 때 사용되며, Prisma스키마 컬럼에 대응되는 속성만을 가짐.\n\n- stock (상품 재고값 갱신)\n- restock_threshold (경고 임계값 갱신)\n- turnover_rate (회전율/분석값 변경, null 허용)\n- deleted_at (soft delete 진행 시 현재 timestamp)\n- updated_at (갱신일자 mandatory)\n\n모든 property는 Prisma 정의 기반 그대로 use하며, 불필요한/추상 필드 없음.","properties":{"stock":{"type":"integer","description":"재고 수량 변경시 입력, INT. 0미만 금지."},"restock_threshold":{"type":"integer","description":"경고 임계값 조정시 사용, INT."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"회전율 실값(분석·AI용). null 연산 가능."},{"type":"null","format":"double","description":"회전율 실값(분석·AI용). null 연산 가능."}],"description":"회전율 실값(분석·AI용). null 연산 가능."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"soft delete 타임스탬프. delete 시 현재시각. 미삭제시 null."},{"type":"null","format":"date-time","description":"soft delete 타임스탬프. delete 시 현재시각. 미삭제시 null."}],"description":"soft delete 타임스탬프. delete 시 현재시각. 미삭제시 null."},"updated_at":{"type":"string","format":"date-time","description":"최신 변경시각. 반드시 현재시간(UTC)으로 기입."}},"required":["updated_at"]},"aiShopInventories":{"type":"object","description":"상품옵션 별 재고 정보 테이블(ai_shop_inventories)의 모든 컬럼.\n\n재고관리는 1:1로 상품옵션(variant)에 매핑됨. 실제 Prisma DB 컬럼 전체를 빠짐없이 정의해야 함.\n- id: 재고PK(UUID)\n- ai_shop_product_variant_id: 어떤 옵션(SKUUID)에 귀속되는지 (1:1 unique)\n- ai_shop_seller_id: 재고를 관리하는 판매자ID(UUID)\n- stock: 현재고 INT\n- restock_threshold: 재고경고치 INT\n- turnover_rate: 회전율(float, null허용, optional)\n- created_at: 생성일\n- updated_at: 최근변경일\n- deleted_at: 소프트삭제 타임스탬프, null인 경우 미삭제\n\n관계: 각각 상품옵션/판매자를 FK로 참조 (Prisma 테이블 정의 필수 참고)\n\n이 스키마는 ai_shop_inventories 테이블 명세에 따라 위험/중복 없이 컬럼을 정의합니다.","properties":{"id":{"type":"string","format":"uuid","description":"AI Shop 재고 관리 PK(UUID).\n\n실제 Prisma 스키마: ai_shop_inventories.id\n유일 식별자입니다."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"해당 재고가 소속된 상품옵션(variant)의 PK(UUID).\n\n실제 Prisma: ai_shop_inventories.ai_shop_product_variant_id\n상품+옵션(SKU)별 매칭에 1:1 unique constraint."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 관리하는 담당 판매자 UUID\n\n실제 Prisma: ai_shop_inventories.ai_shop_seller_id\n판매자별 재고 개별 관리가 가능합니다."},"stock":{"type":"integer","description":"SKU기준 현재 상품 재고 수량(int).\n\n실제 Prisma: ai_shop_inventories.stock\n재고 수량의 증감은 외부 API나 admin화면에서만 처리."},"restock_threshold":{"type":"integer","description":"재고 경고 임계치(int).\n\n실제 Prisma: ai_shop_inventories.restock_threshold\n이 값 이하로 떨어지면 자동 알림·보고서가 트리거됨."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},{"type":"null","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."}],"description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},"created_at":{"type":"string","format":"date-time","description":"재고 정보 생성 타임스탬프.\n\n실제 Prisma: ai_shop_inventories.created_at\nDB 저장시 자동 세팅되는 UTC ISO 8601."},"updated_at":{"type":"string","format":"date-time","description":"재고정보 최근 수정 일시(UTC).\n\n실제 Prisma: ai_shop_inventories.updated_at\n일반적으로 재고 변경시마다 자동 갱신."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."},{"type":"null","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}],"description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}},"required":["id","ai_shop_product_variant_id","ai_shop_seller_id","stock","restock_threshold","created_at","updated_at"]},"aiShopProductSnapshots.IRequest":{"type":"object","description":"상품 스냅샷(버전/히스토리) 조회용 페이징/필터/정렬 조건.\n\n주요 필드(모두 Prisma ai_shop_product_snapshots 테이블 컬럼):\n- ai_shop_product_id: 특정 상품 기준 버전체크\n- name, status: 버전이름/상태값 검색/필터\n- created_at, updated_at: 기간검색\n- page, limit: 페이징\n\n해당 조건들은 상품 편집이력 및 버전타임라인 UI 등에서 활용합니다.","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"히스토리를 조회할 상품레코드 ai_shop_products의 PK(UUID)"},"name":{"type":"string","description":"스냅샷(버전) 당시 상품 이름 기준 부분 일치/검색"},"status":{"type":"string","description":"버전 당시에 저장되었던 상품상태 필터(active 등 ENUM 존재보장 안함)"},"created_at":{"type":"string","format":"date-time","description":"스냅샷 생성시점 range검색"},"updated_at":{"type":"string","format":"date-time","description":"스냅샷 최종 갱신시점 range검색"},"page":{"type":"integer","description":"조회 페이지 번호(1-base)"},"limit":{"type":"integer","description":"한 페이지 최대 레코드 수"}},"required":[]},"IPageAiShopProductSnapshots":{"type":"object","description":"상품 버전/스냅샷(ai_shop_product_snapshots) 목록의 표준 페이징 컨테이너. data([])는 각각 aiShopProductSnapshots 객체이며, pagination은 표준형식(IPage.IPagination)이어야 함.\n\n관리/감사/버전타임라인 등에서 히스토리 결과표시용.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopProductSnapshots"},"description":"해당 페이지 전체 ai_shop_product_snapshots 리스트"}},"required":["pagination","data"]},"aiShopProductSnapshots":{"type":"object","description":"상품 버전 스냅샷/히스토리(ai_shop_product_snapshots)의 단일 데이터. 실 테이블 컬럼 1:1 매핑:\n- id(PK, UUID)\n- ai_shop_product_id(UUID): 어떤 상품의 스냅샷인지 명확히\n- name: 당시상품이름 (string)\n- description: 당시 상품상세\n- category_id: 카테고리(UUID)\n- status: 당시 상태 문자열값\n- created_at: 버전 생성일시\n- updated_at: 마지막 버전 갱신일자\n\n불필요한/추상 필드 없이 실제 Prisma 테이블 컬럼 기준 설명만 포함","properties":{"id":{"type":"string","format":"uuid","description":"고유 스냅샷 버전ID(PK UUID), ai_shop_product_snapshots.id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"어느 상품의 스냅샷인지 명시(PK of ai_shop_products)"},"name":{"type":"string","description":"스냅샷 시점 상품명"},"description":{"type":"string","description":"스냅샷 시점 상품설명"},"category_id":{"type":"string","format":"uuid","description":"해당 스냅샷 시점의 카테고리(UUID, FK)"},"status":{"type":"string","description":"스냅샷 시점 상품 상태"},"created_at":{"type":"string","format":"date-time","description":"스냅샷 생성 타임스탬프(UTC ISO8601)"},"updated_at":{"type":"string","format":"date-time","description":"스냅샷 마지막 변경시점(UTC ISO8601)"}},"required":["id","ai_shop_product_id","name","description","category_id","status","created_at","updated_at"]},"aiShopProductSnapshots.ICreate":{"type":"object","description":"상품 버전 스냅샷(ai_shop_product_snapshots) 신규 레코드 생성에 필요한 DTO. 모든 required property들은 Prisma DB 컬럼 그대로 1:1로 작성됨.\n\n- ai_shop_product_id (UUID, 필수)\n- name (string, 필수)\n- description (string, 필수)\n- category_id (UUID, 필수)\n- status (string, 필수)\n- created_at, updated_at (UTC ISO8601, 시스템 자동 또는 직접입력)\n\n상품 변경이력, 롤백, 감사를 위한 완전한 버전 정보 기록용입니다.","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"스냅샷 작성 대상 상품의 UUID(PK of ai_shop_products)"},"name":{"type":"string","description":"스냅샷 시점 상품명"},"description":{"type":"string","description":"스냅샷 시점 상품 description"},"category_id":{"type":"string","format":"uuid","description":"스냅샷 시점 상품 카테고리 UUID"},"status":{"type":"string","description":"스냅샷 등록 시점의 상품 상태값"},"created_at":{"type":"string","format":"date-time","description":"스냅샷 생성일시(UTC ISO8601)"},"updated_at":{"type":"string","format":"date-time","description":"생성 후 최종 변경일시."}},"required":["ai_shop_product_id","name","description","category_id","status","created_at","updated_at"]},"aiShopProductSnapshots.IUpdate":{"type":"object","description":"상품 버전 스냅샷(ai_shop_product_snapshots) 레코드 업데이트(정정/감사용) DTO.\n\n- name, description, category_id, status, updated_at 등 Prisma DB 컬럼과 1:1 매핑.\n- created_at(최초작성일)은 불변(수정 불가), updated_at은 업데이트 시 반드시 현재 UTC로 변경 필요.\n- 비즈니스상, 일반적으로 immutable이지만, 예외적으로 감사용/정정용 수정 시 사용\n\n필드 불일치나 누락은 에러를 유발합니다.","properties":{"name":{"type":"string","description":"수정/변경할 때의 상품명"},"description":{"type":"string","description":"수정/변경할 때의 상품 설명"},"category_id":{"type":"string","format":"uuid","description":"수정 시점 상품 카테고리(UUID)"},"status":{"type":"string","description":"수정 시점 상품 상태 문자열"},"updated_at":{"type":"string","format":"date-time","description":"수정 시 UTC ISO8601 변경일자"}},"required":["updated_at"]},"IPage.IPagination":{"type":"object","description":"페이징 정보 컨테이너. IPage를 상속받는 모든 리스트에서 pagination 속성에 사용합니다.\n\ncurrent: 현재 페이지(1-base)\nlimit: 페이지당 레코드수\nrecords: 전체 레코드 갯수\npages: 전체 페이지수 (=records/limit 올림)\n\n비즈니스 설명: 페이징 UI/컨트롤, 관리화면의 페이지네이션 및 결과 건수 표시에 활용.","properties":{"current":{"type":"integer","description":"현재 페이지(1-base)."},"limit":{"type":"integer","description":"페이지별 최대 레코드 수. (Default=100)"},"records":{"type":"integer","description":"전체 검색 결과의 레코드 수."},"pages":{"type":"integer","description":"전체 페이지 수(ceil(records/limit))."}},"required":["current","limit","records","pages"]}}},"completed":263,"total":286,"step":0,"created_at":"2025-07-23T07:11:58.741Z"},"tokenUsage":{"facade":{"aggregate":{"total":5559423,"input":{"total":5368981,"cached":0},"output":{"total":190442,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5559423,"input":{"total":5368981,"cached":0},"output":{"total":190442,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":5559423,"input":{"total":5368981,"cached":0},"output":{"total":190442,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5559423,"input":{"total":5368981,"cached":0},"output":{"total":190442,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IPageIAiShopOrderStatusHistories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderStatusHistories"}}},"required":["pagination","data"],"description":"A paginated set of order status history records. Used for efficient listing, filtering, and reporting of status changes throughout order workflows in the AI Shop backend. Complies with requirements for auditability, traceability, and business analytics.\n\nPagination provides details on the current offset/page and total available records. The data property contains the actual history records, each representing a single workflow change event for an order."},"IAiShopOrderStatusHistories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the order status history record. Uniquely identifies each status change for audit/compliance. Referenced in workflow audit trails.\n\nMust be a valid UUID."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"References the order entity (ai_shop_orders.id) to which this status change applies. Enables linking back to the parent transaction for complete traceability.\n\nEnforces referential integrity in audit queries."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional admin identifier who initiated the status change. Points to ai_shop_admins.id if this update was performed by an administrator; otherwise null for automated or system-driven events.\n\nCrucial for compliance and privilege escalations in operational flows."},{"type":"null","format":"uuid","description":"Optional admin identifier who initiated the status change. Points to ai_shop_admins.id if this update was performed by an administrator; otherwise null for automated or system-driven events.\n\nCrucial for compliance and privilege escalations in operational flows."}],"description":"Optional admin identifier who initiated the status change. Points to ai_shop_admins.id if this update was performed by an administrator; otherwise null for automated or system-driven events.\n\nCrucial for compliance and privilege escalations in operational flows."},"from_status":{"type":"string","description":"Order status (freeform string) that the order WAS in prior to this change. Enables precise tracking of workflow transitions in the lifecycle. Typical values: 'pending', 'paid', etc.\n\nRequired for rollback and audit processes."},"to_status":{"type":"string","description":"Order status value transitioned TO by this event. Important for synchronizing customer and seller experiences as well as compliance reporting.\n\nRecord is atomic and normalized; enumerated values stored as they appeared at time of change."},"changed_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when this status change occurred. Immutable for audit/compliance.\n\nAlways set by the system at the precise moment of the transaction, with timezone information preserved."},"change_reason":{"oneOf":[{"type":"string","description":"Optional field explaining why the status change was made. Typically supplied by an admin during manual transitions, or left null for automated/system events. Aids business analytics of cancellation, complaint, or refund workflows."},{"type":"null","description":"Optional field explaining why the status change was made. Typically supplied by an admin during manual transitions, or left null for automated/system events. Aids business analytics of cancellation, complaint, or refund workflows."}],"description":"Optional field explaining why the status change was made. Typically supplied by an admin during manual transitions, or left null for automated/system events. Aids business analytics of cancellation, complaint, or refund workflows."}},"required":["id","ai_shop_order_id","from_status","to_status","changed_at"],"description":"Order status history record. Represents an atomic, audited change in the progression of an order's status. Implements the history/audit trail requirements from Cart and Order System and order management documentation.\n\nIncludes: order reference, status before, status after, admin actor (optional), timestamp, and optional business justification (e.g. refund/cancel reason). Used in compliance, rollback, analytics, and process design."},"IAiShopOrderStatusHistories.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"References the order (ai_shop_orders.id) that this status change is part of. Required for inserting a new history record."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional admin acting as the agent of status change. Set to the admin id for manual changes, null for system/automated events."},{"type":"null","format":"uuid","description":"Optional admin acting as the agent of status change. Set to the admin id for manual changes, null for system/automated events."}],"description":"Optional admin acting as the agent of status change. Set to the admin id for manual changes, null for system/automated events."},"from_status":{"type":"string","description":"State value the order was in prior to this change."},"to_status":{"type":"string","description":"State value after the workflow transition."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp of this change. Set automatically if not provided."},"change_reason":{"oneOf":[{"type":"string","description":"Optional explanation or annotation for this transition. Used for moderation or complaint flows."},{"type":"null","description":"Optional explanation or annotation for this transition. Used for moderation or complaint flows."}],"description":"Optional explanation or annotation for this transition. Used for moderation or complaint flows."}},"required":["ai_shop_order_id","from_status","to_status","changed_at"],"description":"DTO for creating a new order status change record. Used in workflow automation or admin processes when acknowledging a transition in an order.\n\nAll properties strictly map to columns in ai_shop_order_status_histories; referential links and auditability are enforced."},"IAiShopOrderStatusHistories.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Order identifier for full tracking. REMAINS IMMUTABLE, but included for compliance/visibility in full replace operations."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin id of actor for status change (can be null for automated events)."},{"type":"null","format":"uuid","description":"Admin id of actor for status change (can be null for automated events)."}],"description":"Admin id of actor for status change (can be null for automated events)."},"from_status":{"type":"string","description":"Previous state for this status snapshot."},"to_status":{"type":"string","description":"New/later state after transition event."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp when status changed. Should not be updated in practice except for rare audit corrections."},"change_reason":{"oneOf":[{"type":"string","description":"Optional annotation explaining transition."},{"type":"null","description":"Optional annotation explaining transition."}],"description":"Optional annotation explaining transition."}},"required":["ai_shop_order_id","from_status","to_status","changed_at"],"description":"DTO for updating a complete order status change record. Enables audit correction for rare super-admin or compliance use-cases (NOT intended for routine use).\n\nAll fields must reflect the schema definition. Use with caution, audit trail must be complete and accurate."},"IAiShopOrderRefunds.IRequest":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Filter by referenced ai_shop_orders.id slot if required. Used for searching only refund entries tied to a specific order."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"Filter by customer requesting the refund, ai_shop_customers.id."},"refund_reason":{"type":"string","description":"Optional filter on textual refund reason or substring thereof."},"refund_status":{"type":"string","description":"Workflow state of refund request. Used to search by status value for business reporting or resolution workflow. Example: 'requested', 'approved', 'denied', etc."},"requested_at":{"type":"string","format":"date-time","description":"Filter start/end by refund submission datetime. For temporal reporting, sorting, or data mining."},"processed_at":{"type":"string","format":"date-time","description":"Filter by time of refund processing (if present)."}},"description":"DTO for complex paging, search, or filter of order refund records (ai_shop_order_refunds). All filters aligned with normalized schema columns. Used in audit, analytics, or admin console search flows.","required":[]},"IPageIAiShopOrderRefunds":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderRefunds"}}},"required":["pagination","data"],"description":"Paginated list of order refund records for auditing/user experience reporting in AI Shop. Combines pagination metadata and array of atomic refund entries."},"IAiShopOrderRefunds":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the refund request entry. Business/audit reference for the unique transaction."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"References order (ai_shop_orders.id) this refund is tied to. Essential for data joins/audit."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"References customer (ai_shop_customers.id) requesting the refund. Enforces business traceability and aligns with data privacy logs."},"refund_reason":{"type":"string","description":"Textual description or motif for refund, as provided by the customer at request time. Used for dispute resolution or compliance reporting."},"refund_status":{"type":"string","description":"Enumerated workflow status (freeform string); typical values include 'requested', 'approved', 'denied', 'completed'. Used in administrative workflow and analytics."},"requested_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when refund was requested. Used for SLA, audit tracking, and analytics reporting."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable ISO8601 timestamp indicating when refund was finalized/processed (if at all). Null if incomplete/cancelled."},{"type":"null","format":"date-time","description":"Nullable ISO8601 timestamp indicating when refund was finalized/processed (if at all). Null if incomplete/cancelled."}],"description":"Nullable ISO8601 timestamp indicating when refund was finalized/processed (if at all). Null if incomplete/cancelled."},"admin_note":{"oneOf":[{"type":"string","description":"Optional note visible to administrators for compliance, internal audit, or workflow annotation."},{"type":"null","description":"Optional note visible to administrators for compliance, internal audit, or workflow annotation."}],"description":"Optional note visible to administrators for compliance, internal audit, or workflow annotation."}},"required":["id","ai_shop_order_id","requested_by_customer_id","refund_reason","refund_status","requested_at"],"description":"Order refund record. Implements core audit and workflow tracking for refund lifecycle in the commerce platform. Data structure follows business and compliance rules for customer-initiated refunds and admin handling."},"IAiShopOrderRefunds.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"References the order (ai_shop_orders.id) for which refund is being requested."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"ID of the customer requesting refund, referencing ai_shop_customers.id."},"refund_reason":{"type":"string","description":"Description provided by customer for refund request."},"refund_status":{"type":"string","description":"Initial workflow state of refund as assigned at the moment of creation ('requested', 'pending', etc.)."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp of refund submission (set by system or provided by user action)."},"admin_note":{"oneOf":[{"type":"string","description":"Auditing or compliance-related annotation for internal admin use."},{"type":"null","description":"Auditing or compliance-related annotation for internal admin use."}],"description":"Auditing or compliance-related annotation for internal admin use."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Processed/finalized time for immediate finalization on creation (optional)."},{"type":"null","format":"date-time","description":"Processed/finalized time for immediate finalization on creation (optional)."}],"description":"Processed/finalized time for immediate finalization on creation (optional)."}},"required":["ai_shop_order_id","requested_by_customer_id","refund_reason","refund_status","requested_at"],"description":"DTO for creating a new order refund record in AI Shop. Used at refund request workflows and admin/lawful adjustments. Adheres strictly to required refund audit fields in schema."},"IAiShopOrderRefunds.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"ID of target order for which refund record is held."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"ID of customer requesting refund."},"refund_reason":{"type":"string","description":"Customer-provided explanation for refund."},"refund_status":{"type":"string","description":"Updated status in admin workflow ('requested', 'approved', etc.)."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when request initiated."},"admin_note":{"oneOf":[{"type":"string","description":"Admin-visible annotation to justify workflow, or support documentation."},{"type":"null","description":"Admin-visible annotation to justify workflow, or support documentation."}],"description":"Admin-visible annotation to justify workflow, or support documentation."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When (if at all) refund request was finalized/closed."},{"type":"null","format":"date-time","description":"When (if at all) refund request was finalized/closed."}],"description":"When (if at all) refund request was finalized/closed."}},"required":["ai_shop_order_id","requested_by_customer_id","refund_reason","refund_status","requested_at"],"description":"DTO for full update/replace of an order refund record, aligning all audit fields and compliance data. For rare admin, legal, or compliance corrections. NOT for ordinary client-side use."},"IAiShopReturnRequest.IRequest":{"type":"object","properties":{"requested_by_customer_id":{"type":"string","format":"uuid","description":"Filter for returns requested by a given customer (FK to ai_shop_customers.id)."},"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"Filter to only returns for a specific order line (FK to ai_shop_order_items.id)."},"return_reason":{"type":"string","description":"Substring or text filter on return reason, enabling analytics, admin search, or dispute review."},"return_status":{"type":"string","description":"Current state of return process/workflow. E.g., 'requested', 'approved', 'denied', 'completed', etc."},"requested_at":{"type":"string","format":"date-time","description":"Datetime filter window for when return was requested."},"processed_at":{"type":"string","format":"date-time","description":"Datetime filter for when return request was finalized/process completed."},"admin_note":{"type":"string","description":"Search filter on internal admin annotation, if present."}},"description":"DTO for paginated/filtering/list request for return requests (ai_shop_return_requests). Allows all filter/sort/search fields directly mapped to atomic schema fields for returns.","required":[]},"IPageAiShopReturnRequest":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReturnRequest"}}},"required":["pagination","data"],"description":"Paginated response type for return requests (ai_shop_return_requests). Contains metadata for paging and full batch of atomic return request records."},"IAiShopReturnRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the return request, unique per row."},"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"References the specific order line item (ai_shop_order_items.id) this return relates to. Ensures one return per item. Provides traceability for analytics and inventory adjustments."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"References customer requesting the return (ai_shop_customers.id), must match actor of the request."},"return_reason":{"type":"string","description":"Text content for the reason behind the return. Business/audit purpose for regulatory and analytics flows."},"return_status":{"type":"string","description":"Lifecycle/business workflow status—freeform. Examples: 'requested', 'approved', 'denied', 'completed', 'received', etc."},"requested_at":{"type":"string","format":"date-time","description":"ISO timestamp for when the return was initiated. Audit/compliance relevance."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO timestamp for when the return workflow was processed/concluded (may be null for in-progress returns)."},{"type":"null","format":"date-time","description":"ISO timestamp for when the return workflow was processed/concluded (may be null for in-progress returns)."}],"description":"ISO timestamp for when the return workflow was processed/concluded (may be null for in-progress returns)."},"admin_note":{"oneOf":[{"type":"string","description":"Internal admin-side annotation for legal, dispute, or compliance documentation."},{"type":"null","description":"Internal admin-side annotation for legal, dispute, or compliance documentation."}],"description":"Internal admin-side annotation for legal, dispute, or compliance documentation."}},"required":["id","ai_shop_order_item_id","requested_by_customer_id","return_reason","return_status","requested_at"],"description":"Atomic return request entity. Holds all fields per order item return, as required for the commerce platform's compliance and analytics needs. Mapped to ai_shop_return_requests schema. Adheres to workflow, dispute resolution, and legal tracking."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"int32","description":"Current page number."},"limit":{"type":"integer","format":"int32","description":"Maximum records per page.\n\n@default 100"},"records":{"type":"integer","format":"int32","description":"Total number of records in the database."},"pages":{"type":"integer","format":"int32","description":"Total number of pages, calculated as records/limit (rounded up)."}},"required":["current","limit","records","pages"],"description":"Page metadata for paginated response types: captures current page, page size, total record count, and page count for successful navigation and UX."}}},"completed":275,"total":286,"step":0,"created_at":"2025-07-23T07:13:19.551Z"},"tokenUsage":{"facade":{"aggregate":{"total":5713096,"input":{"total":5501649,"cached":0},"output":{"total":211447,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5713096,"input":{"total":5501649,"cached":0},"output":{"total":211447,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":5713096,"input":{"total":5501649,"cached":0},"output":{"total":211447,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5713096,"input":{"total":5501649,"cached":0},"output":{"total":211447,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComplement","missed":["IAiShopInquiry.IUpdate","IAiShopInquiryReply.IRequest","IPageIAiShopInquiryReply","IAiShopInquiryReply","IAiShopInquiryReply.ICreate","IAiShopInquiryReply.IUpdate","IAiShopReview.IRequest","IPageIAiShopReview","IAiShopReview","IAiShopReview.ICreate","IAiShopReview.IUpdate"],"schemas":{"IAiShopInquiry.IUpdate":{"type":"object","description":"업데이트용 문의 엔티티 객체(IAiShopInquiry.IUpdate)로, ai_shop_inquiries에 정의된 필드만을 포함해 업데이트 요청에 사용한다.\n\n업데이트 가능한 필드는 제목(title), 본문(body), 상태(status), 참조곡 ai_shop_product_id 등이 있으며, 모두 스키마에 명시된 것들이다. deleted_at 등 소프트 삭제 관련 필드는 존재하지 않는다. 대부분의 필드는 선택적으로 제공 가능하며, id는 경로 파라미터로 전달된다. 본 타입은 PUT 요청 Body에 사용된다.","properties":{"title":{"type":"string","description":"문의 제목. 사용자가 남긴 질문 또는 요구의 요약을 제공하며 관리자가 또는 답변자가 한눈에 내용을 파악할 수 있도록 한다.\n\n예시: '배송 지연 관련 문의', '상품 사이즈 문의' 등."},"body":{"type":"string","description":"문의 본문. 문의의 상세 내용을 기록한다.\n\n예시: '상품이 언제 출고되는지 궁금합니다.'"},"status":{"type":"string","description":"문의 상태 (예: 'open', 'answered', 'closed'). 워크플로 관리 및 상태 변경 용도로 사용된다.\n\n상태에 따른 비즈니스 규칙에 따라 처리된다."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."},{"type":"null","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}],"description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}},"required":["title","body","status"]},"IAiShopInquiryReply.IRequest":{"type":"object","description":"문의 답변 엔티티 리스트 조회 및 검색 요청 바디. ai_shop_inquiry_replies 스키마 내에서 검색이 허용되는 필드만을 기준으로 검색/필터링/페이징 한다.\n\n예: 답변 리스트, 조건부 조회, 페이징, 정렬/필터/검색 쿼리에 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"본 답변이 소속된 문의 엔티티의 고유식별자(UUID). 특정 문의에 종속 replies만 조회하고자 할 때 사용한다."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."}],"description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."}],"description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."}],"description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},"body":{"type":"string","description":"답변 본문 전체/부분 검색 시 사용."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},"page":{"type":"integer","description":"조회 페이지 넘버. 1-based."},"limit":{"type":"integer","description":"한 페이지에 가져올 최대 결과수. 기본 100."},"sort":{"type":"string","description":"정렬 방식 결정 예: 'created_at_desc', 'created_at_asc'. 지원하는 컬럼명+방향 조합만 허용."}},"required":["ai_shop_inquiry_id"]},"IPageIAiShopInquiryReply":{"type":"object","description":"페이징된 문의 답변 리스트 컨테이너 타입. 각 엔티티는 ai_shop_inquiry_replies에서 정규화된 reply 오브젝트 형태로 반환된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInquiryReply"},"description":"답변 리스트(한 페이지의 데이터 배열)"}},"required":["pagination","data"]},"IAiShopInquiryReply":{"type":"object","description":"문의 답변 상세 정보 객체. ai_shop_inquiry_replies 내 실제 row를 반환한다.\n\n답변은 문의 ai_shop_inquiries에 종속적이며 seller, admin의 참조, 그리고 parent_id(트리구조) 등을 명확히 포함한다.","properties":{"id":{"type":"string","format":"uuid","description":"답변의 고유 식별자 (UUID)"},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 속한 문의 id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러 id."},{"type":"null","format":"uuid","description":"답변 작성 셀러 id."}],"description":"답변 작성 셀러 id."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자 id."},{"type":"null","format":"uuid","description":"답변 작성 관리자 id."}],"description":"답변 작성 관리자 id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."}],"description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},"body":{"type":"string","description":"답변 내용."},"created_at":{"type":"string","format":"date-time","description":"작성일시 (ISO8601)"}},"required":["id","ai_shop_inquiry_id","body","created_at"]},"IAiShopInquiryReply.ICreate":{"type":"object","description":"AI Shop 문의 답변 등록 body용 타입. 필수 필드는 문의 id, 내용(body) – 그 외는 작성자의 역할에 따라 셀러, 관리자 id, 부모 id(트리형 답글) 등 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 달릴 문의의 id. 필수."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},{"type":"null","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."}],"description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."},{"type":"null","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."}],"description":"답변 관리자인 경우. 관리자 답변만 세팅."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},{"type":"null","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."}],"description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},"body":{"type":"string","description":"답변 본문(필수)"}},"required":["ai_shop_inquiry_id","body"]},"IAiShopInquiryReply.IUpdate":{"type":"object","description":"문의 답변 수정(업데이트) DTO 타입. 수정 가능한 필드는 본문(body), 부모(parent_id) 등이고, 작성자 id는 원칙적으로 변경하지 않는다.","properties":{"body":{"type":"string","description":"수정될 답변 본문(필수)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."},{"type":"null","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."}],"description":"변경될 상위(부모) 답변 id(필요시)."}},"required":["body"]},"IAiShopReview.IRequest":{"type":"object","description":"상품 리뷰 검색 및 페이징 요청 타입 (리스트 조회 request DTO). ai_shop_reviews 테이블 내 실제 컬럼 기준으로만 필터/정렬/검색/페이징을 실시한다.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자(고객) id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"rating":{"type":"integer","description":"리뷰의 평가 점수(1~5의 범위)로 필터링."},"status":{"type":"string","description":"리뷰의 상태값으로 검색. 가능한 값: 'pending', 'approved', 'rejected'"},"body":{"type":"string","description":"내용(본문) 부분검색용"},"created_at_from":{"type":"string","format":"date-time","description":"작성시작일(쿼리 기준)"},"created_at_to":{"type":"string","format":"date-time","description":"작성종료일(쿼리 기준)"},"page":{"type":"integer","description":"페이지 번호(1-base), 생략시 1"},"limit":{"type":"integer","description":"1페이지 데이터 최대 개수(생략시 100)"},"sort":{"type":"string","description":"정렬 기준칼럼+방향('created_at_desc', 'rating_asc' 등)"}},"required":[]},"IPageIAiShopReview":{"type":"object","description":"상품 리뷰 리스트의 페이징 결과 컨테이너. metadata 및 data 배열이 페어로 구성된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReview"},"description":"상품 리뷰 데이터 배열(한 페이지)"}},"required":["pagination","data"]},"IAiShopReview":{"type":"object","description":"단일 상품 리뷰 row를 표현하는 객체 DTO. ai_shop_reviews 테이블 필드에 대응(고객, 상품, 본문, 평점, 상태, timestamps 등).","properties":{"id":{"type":"string","format":"uuid","description":"리뷰의 고유 식별자(UUID)"},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객(작성자)의 id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"body":{"type":"string","description":"리뷰 본문 내용"},"rating":{"type":"integer","description":"리뷰의 별점(평가점수, 1~5 한정)"},"status":{"type":"string","description":"리뷰 상태. 'pending'|'approved'|'rejected' 등 워크플로우에 따라 변동"},"created_at":{"type":"string","format":"date-time","description":"작성일시(ISO8601), 등록시 자동 생성"},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"},{"type":"null","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}],"description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}},"required":["id","ai_shop_customer_id","ai_shop_product_id","body","rating","status","created_at"]},"IAiShopReview.ICreate":{"type":"object","description":"상품 리뷰 등록용 바디. ai_shop_reviews 테이블의 필수 필드에 대응(고객, 상품, 본문, 평점, 상태). 작성일시는 생략시 서버생성.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자의 id(UUID)"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"리뷰가 달릴 상품 id(UUID)"},"body":{"type":"string","description":"리뷰 내용"},"rating":{"type":"integer","description":"별점(평가점수, 1~5)"},"status":{"type":"string","description":"리뷰 상태값. 작성시 기본 'pending', 즉시 노출이면 'approved' 등"}},"required":["ai_shop_customer_id","ai_shop_product_id","body","rating","status"]},"IAiShopReview.IUpdate":{"type":"object","description":"리뷰 수정용 DTO 타입. ai_shop_reviews 기준으로 본문, 점수, 상태에 대해 수정 가능하다.","properties":{"body":{"type":"string","description":"수정 후 리뷰 본문"},"rating":{"type":"integer","description":"수정 후 별점(1~5)"},"status":{"type":"string","description":"변경될 리뷰 상태 (예: 'pending', 'approved', 'rejected')"}},"required":[]}},"step":0,"created_at":"2025-07-23T07:14:08.634Z"},"tokenUsage":{"facade":{"aggregate":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComplete","document":{"operations":[{"specification":"List ai_shop_channels records (channels) using advanced searching criteria with filtering and pagination. Based strictly on the Prisma schema, supports searching by any existing channel columns such as code, name, enabled, and sort_order. Returns an array of channel records with all fields defined in the schema. There is no soft delete mechanism in the schema.","description":"This API operation lists all channel entities (ai_shop_channels) with advanced search, pagination, and filtering based strictly on the fields present in the Prisma schema. The returned list includes full details for each channel: id, code, name, enabled, sort_order, created_at, and updated_at. The code and name fields support fuzzy and trigram search for administration and UI display. The enabled field can be filtered to distinguish active and inactive channels. As there is no soft-delete (deleted_at) field present in the schema, all records fetched are actual persisted data. Sorting and paging must operate on valid schema fields. No references to non-existent fields are made. This API is used with channel management interfaces and must comply with security rules for read/list permissions. No assumptions beyond present schema fields are allowed.","summary":"Get a filtered and paginated list of ai_shop_channels records (channels).","parameters":[],"requestBody":{"description":"Searching and pagination parameters for listing channel records based on allowed query fields (code, name, enabled, sort_order).","typeName":"IAiShopChannel.IListRequest"},"responseBody":{"description":"A paginated list of ai_shop_channels matching search criteria.","typeName":"IPageAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels","method":"patch"},{"specification":"Get one ai_shop_channels record by its unique id. Follows the Prisma schema exactly; references only fields present (id, code, name, enabled, sort_order, created_at, updated_at). Returns null or 404 if id is not present; there are no deleted_at or soft delete columns.","description":"This API operation returns the full information for a single ai_shop_channels (channel) record identified by id, using the fields defined in the Prisma schema: id, code, name, enabled, sort_order, created_at, and updated_at. It does not include or consider any non-existent column, such as soft delete or metadata. If the provided id does not correspond to any existing record, a null or 404 response should be returned. This endpoint is essential for channel detail views and editing scenarios in admin and system management. Security rules for appropriate role permissions must be enforced as per business policy. No references are made to schema fields that do not exist.","summary":"Get details of one ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique identifier of the ai_shop_channels record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the channel (ai_shop_channels) record.","typeName":"IAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels/{id}","method":"get"},{"specification":"Create a new ai_shop_channels record with all required and optional fields, as per the Prisma schema. All inserted fields must correspond to actual columns (code, name, enabled, sort_order, created_at, updated_at), and there is no support for non-schema properties (e.g., no deleted_at).","description":"This operation creates a new channel in the ai_shop_channels table, accepting all required and optional properties as defined in the schema: code, name, enabled, sort_order, created_at, updated_at. The id is generated automatically (UUID). No soft-delete or user-trace columns are referenced, because they do not exist in the schema. Failure to provide required fields results in an error. This is used for admin/system interfaces where new marketplace, event, or shopfront channels need to be created.","summary":"Create a new ai_shop_channels record (channel).","parameters":[],"requestBody":{"description":"Properties for the new ai_shop_channels record, limited strictly to the schema (code, name, enabled, sort_order, created_at, updated_at).","typeName":"IAiShopChannel.ICreate"},"responseBody":{"description":"The newly created ai_shop_channel record.","typeName":"IAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels","method":"post"},{"specification":"Update an existing ai_shop_channels record identified by id, using only fields that exist in the Prisma schema (code, name, enabled, sort_order, created_at, updated_at). The id is a path parameter and must exist. No soft delete or audit columns beyond those incuded in the schema are referenced.","description":"This operation updates an existing ai_shop_channels entity by its id, modifying only the fields that are present in the schema: code, name, enabled, sort_order, created_at, updated_at. It does not reference or handle any non-existent columns such as deleted_at or metadata. If the record does not exist, return an error (e.g., 404). Only schema-compliant fields are updated. Used in admin/system channels management functionality.","summary":"Update an ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique identifier of the ai_shop_channels record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for ai_shop_channels record, strictly following the schema.","typeName":"IAiShopChannel.IUpdate"},"responseBody":{"description":"The updated ai_shop_channels record.","typeName":"IAiShopChannel"},"authorizationRoles":null,"path":"/aiShop/channels/{id}","method":"put"},{"specification":"Delete an ai_shop_channels record by id, corresponding to a hard delete since there is no soft delete support in the Prisma schema (no deleted_at or is_deleted fields). The channel is physically removed from the database.","description":"This endpoint permanently deletes an ai_shop_channels record identified by its id. As the Prisma schema for ai_shop_channels does not include any deleted_at or is_deleted field, this is a hard delete: the record is removed entirely and cannot be recovered. It does not reference, set, or require any non-existent soft delete field. The operation is commonly used in admin and system management of marketplace channels. Proper authorization and business rules for delete permissions are required.","summary":"Delete (hard delete) an ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique identifier of the ai_shop_channels record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Result of the delete operation (success/failure).","typeName":"IAiShopChannel.IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/channels/{id}","method":"delete"},{"specification":"List ai_shop_sections (sections) using search and pagination, returning only schema-defined fields. Supports filtering on ai_shop_channel_id, code, name, enabled, and sort_order, strictly per schema. No soft delete or extra metadata fields exist.","description":"This API lists all ai_shop_sections entities, supporting filtering and paging on actual schema fields, including id, ai_shop_channel_id, code, name, enabled, sort_order, created_at, and updated_at. No assumption is made for deleted_at or audit columns that do not exist. The endpoint is used for admin/system front-ends managing sections (logical groupings within channels). Search and paging operate only on allowed schema fields, and all listing, filtering, and result structure match the normalized schema.","summary":"Get a filtered and paginated list of ai_shop_sections records.","parameters":[],"requestBody":{"description":"Searching and pagination data for listed ai_shop_sections (filter on ai_shop_channel_id, code, name, enabled, and sort_order).","typeName":"IAiShopSection.IListRequest"},"responseBody":{"description":"A paginated list of sections (ai_shop_sections) based on search/paging query.","typeName":"IPageAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections","method":"patch"},{"specification":"Fetch full details of a section (ai_shop_sections) entity by unique id, using only valid schema fields. Does not support soft deletion recovery or extra data.","description":"This operation fetches a single ai_shop_sections record by id, returning all schema-defined fields: id, ai_shop_channel_id, code, name, enabled, sort_order, created_at, and updated_at. There are no soft delete, deleted_at, or extra audit fields, and these must not be referenced in the operation descriptions. A missing id yields a null or error. The result is used for section detail and management in admin/system UIs.","summary":"Get an ai_shop_sections record by id.","parameters":[{"name":"id","description":"The unique id of the section to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the ai_shop_sections record.","typeName":"IAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections/{id}","method":"get"},{"specification":"Create a new ai_shop_sections entity, filling all required (and optional) fields as per the Prisma schema definition. Does not reference or allow any non-schema fields.","description":"This creates a new ai_shop_sections entity using the fields provided in the Prisma schema: ai_shop_channel_id, code, name, enabled, sort_order, created_at, updated_at. The id is system-generated. There is no support or mention for deleted_at or irrelevant auditing columns. Errors are returned if schema-required fields are missing. Used by admin/system users for UI registration of new sections/channel groupings.","summary":"Create a new ai_shop_sections record.","parameters":[],"requestBody":{"description":"Values for all fields required to create a new section, strictly following the schema.","typeName":"IAiShopSection.ICreate"},"responseBody":{"description":"The newly created section record (ai_shop_sections).","typeName":"IAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections","method":"post"},{"specification":"Update an existing ai_shop_sections record by unique id. Only schema-defined fields may be updated, including code, name, enabled, sort_order, created_at, and updated_at. No extra or soft-delete fields may be referenced in description or data, and errors are returned for invalid ids.","description":"This updates schema-allowed fields for a section (ai_shop_sections) record by id, changing only those columns that exist in the schema. Neither soft delete nor so-called extra audit columns are referenced in this operation. Used in admin/system tools for hierarchy/content management. Errors appear if id is invalid/nonexistent, or prohibited fields are referenced in the data.","summary":"Update an ai_shop_sections record by id.","parameters":[{"name":"id","description":"The unique identifier for the ai_shop_sections record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update details for ai_shop_sections, limited to schema fields (code, name, enabled, sort_order, created_at, updated_at).","typeName":"IAiShopSection.IUpdate"},"responseBody":{"description":"The up-to-date ai_shop_sections record.","typeName":"IAiShopSection"},"authorizationRoles":null,"path":"/aiShop/sections/{id}","method":"put"},{"specification":"Delete an ai_shop_sections entity by id. Since the schema lacks any soft delete column, this performs a hard delete. Entity is permanently removed from the table.","description":"This operation deletes an ai_shop_sections record from the database (by id) permanently, as no deleted_at or equivalent soft delete column exists in the schema. This is a hard delete—no recovery is supported or described. Used for admin system and UI channel/section management. All references must be for fields present in the schema. Proper permission checks and business process requirements apply.","summary":"Hard-delete an ai_shop_sections record by id.","parameters":[{"name":"id","description":"The unique id of the ai_shop_sections record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Result of the section delete operation.","typeName":"IAiShopSection.IDeleteResult"},"authorizationRoles":null,"path":"/aiShop/sections/{id}","method":"delete"},{"specification":"List platform configurations (ai_shop_configurations) using only schema-defined parameters, with fuzzy search, filtering, and pagination on fields param_name, param_value, and description. Returns full configuration entries. There is no deleted_at or soft deletion supported in the schema.","description":"This operation lists configuration parameters (ai_shop_configurations) based strictly on the schema. Results are filterable and sortable by param_name, param_value, and description, with pagination. Only present schema fields (id, param_name, param_value, description, created_at, updated_at) are referenced. The endpoint is used by admin/system configuration management and does not assume any soft delete behavior. Returned results are always actual persisted records.","summary":"List all ai_shop_configurations records (platform configurations) with full search and paging.","parameters":[],"requestBody":{"description":"Search, filter, and pagination data, limited to param_name, param_value, description, and base schema fields.","typeName":"IAiShopConfiguration.IListRequest"},"responseBody":{"description":"A page of ai_shop_configurations records matching query/filter.","typeName":"IPageAiShopConfiguration"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"patch"},{"specification":"Get a single ai_shop_configurations record by id. Only valid schema fields (id, param_name, param_value, description, created_at, updated_at) are referenced. No soft/hard deletes—if record does not exist, returns null/404.","description":"This operation fetches a single ai_shop_configurations entry by id, returning all schema-defined columns. If the entry does not exist, null or 404 is returned. It cannot and does not reference any columns other than those defined in the schema. Used for admin/system configuration detail management. Security and access rules apply.","summary":"Get an ai_shop_configurations record by id.","parameters":[{"name":"id","description":"The uuid of the configuration record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the ai_shop_configurations record by id.","typeName":"IAiShopConfiguration"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"get"},{"specification":"Create a new configuration parameter for the AI Shop platform. The parameter must include a unique parameter name (param_name), a value (param_value), an optional human-readable description, and audit fields (created_at, updated_at). All these columns are described in the ai_shop_configurations table: id (PK), param_name (unique), param_value, description (nullable), created_at, updated_at. When creating the configuration, ensure param_name is unique. Do not reference any fields not in the schema. No deleted_at or similar soft-delete fields exist, so all fields referenced must directly match schema columns.","description":"This endpoint allows for the creation of a new configuration parameter in the ai_shop_configurations table of the Systematic namespace. The request must supply a unique param_name, a param_value (which may be a string or JSON-stringified), and may optionally include a description to clarify its business purpose. Timestamps for created_at and updated_at must be included for auditing and compliance. This operation does not reference any soft delete or auditing fields beyond what exists in the schema (no deleted_at). On creation, all fields should align exactly with the schema documentation, and an id will be generated as the PK. No soft-delete behavior is possible; records are permanent unless hard deleted via /delete.","summary":"Create an ai_shop_configurations row (Systematic/configuration parameter).","parameters":[],"requestBody":{"description":"Configuration parameter creation details for ai_shop_configurations.","typeName":"IAiShopConfigurations.ICreate"},"responseBody":{"description":"Newly created configuration parameter record.","typeName":"IAiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations","method":"post"},{"specification":"Update an existing configuration parameter entry by ID. The operation should allow changes only to fields explicitly defined in the ai_shop_configurations schema: param_name, param_value, description (nullable), updated_at (timestamp for audit). id is the primary key and must be referenced in the path. No deleted_at or soft delete fields are present. The update request must not reference or create fields that don't exist in the schema.","description":"This endpoint updates a specific configuration parameter entry within the ai_shop_configurations table based on its primary key (id). The only updatable fields are param_name, param_value, description, and updated_at as per the schema. The client must supply the id path parameter to identify the record. No soft delete, deleted_at, or non-existent audit fields should be referenced in either the request or generated SQL. All logic and field names strictly follow the schema documentation. The operation is a hard update; only allowed fields are updated, and no soft delete is possible.","summary":"Update a configuration parameter by id in ai_shop_configurations (Systematic/config).","parameters":[{"name":"id","description":"Unique identifier of the configuration parameter to update (PK of ai_shop_configurations).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update information for the configuration parameter.","typeName":"IAiShopConfigurations.IUpdate"},"responseBody":{"description":"Updated configuration parameter record.","typeName":"IAiShopConfigurations"},"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"put"},{"specification":"Delete a configuration parameter by id. The ai_shop_configurations table does not have any soft-delete fields (e.g., deleted_at or is_deleted), so this operation must perform a permanent, hard delete. The only field that identifies the target is id (PK, uuid). Reference only fields that exist in the schema.","description":"This operation performs a hard delete of a configuration parameter record from ai_shop_configurations by its PK (id). Since there is no deleted_at or any soft delete logic in the schema, the record is permanently removed from the table. The id path parameter must be provided and must be a valid UUID. No fields beyond those defined in the schema are referenced in any logic or response.","summary":"Hard delete a configuration parameter by id (Systematic/configuration, hard delete enforced).","parameters":[{"name":"id","description":"Unique identifier of the configuration parameter to delete (PK of ai_shop_configurations).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/configurations/{id}","method":"delete"},{"specification":"Retrieve a filtered, paginated list of categories (ai_shop_categories) with flexible searching and filtering. This endpoint supports listing/searching of all fields in the ai_shop_categories schema: id (PK), ai_shop_channel_id (FK), parent_id (nullable), code, name, sort_order, enabled, created_at, updated_at. Pagination, sorting, and complex filters can be passed in the request body. No deleted_at, is_deleted, or similar soft delete/audit fields exist in the schema: only the fields above can be referenced in business logic and documentation.","description":"Returns a paginated, filtered list of categories (ai_shop_categories) according to flexible query parameters passed in the request body. All filtering, sorting, and search logic refer only to fields actually defined in the schema—namely: id, ai_shop_channel_id, parent_id, code, name, sort_order, enabled, created_at, updated_at. This endpoint implements list/search logic for hierarchical or flat category management, suitable for admin, seller, or system views. There is no reference or logic related to soft delete fields, since none exist in the schema.","summary":"List/search categories in ai_shop_categories with filtering and pagination (Systematic/category).","parameters":[],"requestBody":{"description":"Query/filter/sort info for listing categories.","typeName":"IAiShopCategories.IRequest"},"responseBody":{"description":"Paginated list of category records (ai_shop_categories).","typeName":"IPageAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"patch"},{"specification":"Retrieve details for a single category (ai_shop_categories) by id. Only fields in the schema are presented: id, ai_shop_channel_id, parent_id (nullable), code, name, sort_order, enabled, created_at, updated_at. The id must be a valid UUID and match the PK. There are no deleted_at, is_deleted, or other soft delete indicators in the schema, so the logic/retrieved fields are strictly limited to existing attributes.","description":"Returns the details of a specific ai_shop_categories row by its primary key (id). The response contains only those fields found in the schema—id, ai_shop_channel_id, parent_id, code, name, sort_order, enabled, created_at, updated_at. No deleted_at or soft delete indication will be provided or referenced. The id parameter is mandatory and must match a real PK. All field names and logic follow the exact database schema.","summary":"Get category details by id (Systematic/category detail info).","parameters":[{"name":"id","description":"Unique category identifier (PK of ai_shop_categories) to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All schema fields for the target category.","typeName":"IAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"get"},{"specification":"Create a new category in ai_shop_categories. Requires ai_shop_channel_id (FK), parent_id (can be null for root), code (unique in channel/tree), name, sort_order (int), enabled (bool), plus auditing fields created_at and updated_at. parent_id is nullable for root-level categories. Do NOT reference deleted_at, created_by, or is_deleted fields. All referenced columns must exist in the schema. Example: registering a root or child category with full normalization and auditable timestamps.","description":"Registers a new ai_shop_categories row to either a root or subcategory level. It must supply all required fields: ai_shop_channel_id (FK), optional parent_id (for subcategories), unique code, name, sort_order, enabled, and the auditing fields created_at, updated_at. The system enforces uniqueness on ai_shop_channel_id+parent_id+code for normalization. There are no soft delete, is_deleted, or deleted_at fields referenced. All logic fully aligns to the schema, and no extra audit fields beyond schema are present.","summary":"Create a new category (insert ai_shop_categories, Systematic).","parameters":[],"requestBody":{"description":"Category creation info for ai_shop_categories.","typeName":"IAiShopCategories.ICreate"},"responseBody":{"description":"Created category record (all schema fields returned).","typeName":"IAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories","method":"post"},{"specification":"Update an existing category (ai_shop_categories) by id. The endpoint allows updates to any field defined in the schema: ai_shop_channel_id, parent_id (nullable), code, name, sort_order, enabled, updated_at. The id PK must be supplied as a path parameter. Do not reference or implement logic with any fields not exactly matching the schema (e.g., no soft delete, deleted_at, or is_deleted fields).","description":"Updates (overwrites) an existing ai_shop_categories record by id. Allows changes to ai_shop_channel_id, parent_id (can be null), code, name, sort_order, enabled, and updated_at only. The primary key id must be present in the path. The endpoint strictly limits updates to schema-defined fields. There is no soft deletion or references to deleted_at or undefined audit fields. All changes are hard updates only.","summary":"Update a category by id (Systematic, ai_shop_categories edit).","parameters":[{"name":"id","description":"Unique identifier for the category to update (ai_shop_categories PK).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Category update info for ai_shop_categories.","typeName":"IAiShopCategories.IUpdate"},"responseBody":{"description":"All updated fields from the schema for the category.","typeName":"IAiShopCategories"},"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"put"},{"specification":"Delete a category row by id from ai_shop_categories. The table does not have a soft delete field nor a deleted_at column, so the delete operation is a hard/permanent removal. The only field in the schema to identify the record is id (PK, uuid). No soft delete logic exists.","description":"Permanently deletes the target ai_shop_categories row by its id (PK). Since the schema includes no deleted_at or similar soft delete fields, this operation drops the row irreversibly. The only supported way to identify the record is the id PK. All references and logic map directly to the schema and use only actual fields.","summary":"Hard delete of ai_shop_categories row by id (permanent, Systematic).","parameters":[{"name":"id","description":"ID (PK, uuid) of the category to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/categories/{id}","method":"delete"},{"specification":"List/search ai_shop_files with pagination and filtering. This operation should only reference actual fields in the schema: id, original_name, uri, mime_type, size_bytes, uploader_name (nullable), uploaded_at. Filtering/sorting logic is strictly on these fields. No deleted_at, created_by, or soft delete columns exist. Returns a paginated list with these fields for audit and business display.","description":"Returns a paginated, filterable list of files (ai_shop_files), fully normalized and compliant with Systematic/file schema. Filters and sorts can be applied to any column in the schema: id, original_name, uri, mime_type, size_bytes, uploader_name (nullable), uploaded_at. All list and search logic only use schema fields—there is no use or reference of deleted_at or extra soft delete logic. Use the request body for flexible pagination, sorting, and query parameters as per business UX needs.","summary":"List and search ai_shop_files (Systematic).","parameters":[],"requestBody":{"description":"Flexible search/filter/sort/pagination info for files (ai_shop_files).","typeName":"IAiShopFiles.IRequest"},"responseBody":{"description":"Paginated list of ai_shop_files records.","typeName":"IPageAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files","method":"patch"},{"specification":"Get ai_shop_files (Systematic/file) record by id. Only the PK field (id, uuid) is required as a path parameter. Returns all columns defined in ai_shop_files: id, original_name, uri, mime_type, size_bytes, uploader_name (nullable), uploaded_at. No soft delete or extra audit fields exist beyond those in the schema.","description":"Fetches the full file metadata row from ai_shop_files using its id PK (uuid). Only fields in the schema can be read and returned (id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at). There is no deleted_at or other soft delete mechanism, so deletion/recovery logic is not present. Always returns only fields that are documented in the schema table, no more or less.","summary":"Get full ai_shop_files record by id (Systematic/file detail).","parameters":[{"name":"id","description":"File PK (uuid) to get info for (ai_shop_files.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All columns for ai_shop_files row (metadata).","typeName":"IAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"get"},{"specification":"Create new record in ai_shop_files for file metadata. All columns must be supplied as required in the schema: original_name, uri (unique), mime_type, size_bytes, uploader_name (nullable), uploaded_at; no reference to any deleted_at or extra audit field is possible. Returned payload and request fields map directly to schema field names.","description":"Registers file metadata in ai_shop_files, enforcing normalization and referential integrity. All columns must be supplied (original_name, uri (unique), mime_type, size_bytes, uploader_name nullable, uploaded_at). No deleted_at, is_deleted, or extra audit field exists—only business metadata in the schema. The id (PK) is generated upon insert. No soft delete logic or fields can be referenced in either creation or downstream logic.","summary":"Create/register metadata for new file (ai_shop_files, Systematic).","parameters":[],"requestBody":{"description":"Payload for file creation (ai_shop_files, Systematic).","typeName":"IAiShopFiles.ICreate"},"responseBody":{"description":"Full ai_shop_files row for the created file metadata record.","typeName":"IAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files","method":"post"},{"specification":"Update the file metadata in ai_shop_files by id. The only updatable fields are original_name, uri (unique), mime_type, size_bytes, uploader_name (nullable), uploaded_at (audit update required). id (PK) is the path parameter to select the record. No reference to deleted_at, is_deleted, or soft delete is permitted—the ai_shop_files schema does not include those fields, and only updatable field logic or documentation is allowed.","description":"Overwrites a single ai_shop_files row selected by id. The payload must map directly to fields in the schema: original_name, uri, mime_type, size_bytes, uploader_name nullable, and uploaded_at. Id is a PK path parameter. The endpoint documents and allows editing of these columns only—extra soft delete or audit fields cannot be referenced or implemented. There is no way to soft delete files; all operations are hard and use the schema columns only.","summary":"Update ai_shop_files metadata by id (Systematic/file edit).","parameters":[{"name":"id","description":"PK of ai_shop_files to update (uuid).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for ai_shop_files fields (Systematic/file update).","typeName":"IAiShopFiles.IUpdate"},"responseBody":{"description":"Full ai_shop_files row (all editable fields updated).","typeName":"IAiShopFiles"},"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"put"},{"specification":"Delete ai_shop_files entity by ID. This operation allows for the removal of a file record from the file management table, which stores metadata and URIs for uploaded files. The operation performs a hard (permanent) delete because the ai_shop_files table does NOT have a soft delete (e.g., deleted_at) field. All fields referenced (id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at) are present in the actual Prisma schema. Ensure referential integrity is maintained and handle any constraint errors if this file is referenced elsewhere.","description":"Permanently removes a file record from the ai_shop_files table. This endpoint is used to delete the file's metadata and storage URI, making the file inaccessible via the AI Shop platform. The operation does a hard delete, since no soft-delete field exists; thus, the data is physically removed from the database. If other objects refer to this file, deletion may fail due to foreign key constraints. Proper error messages are provided for non-existent records or violated relationships. All behavior and field references align strictly with the actual schema definition. This operation is NOT reversible, and administrators should verify before execution.","summary":"Hard delete a file record from ai_shop_files (no soft delete field present).","parameters":[{"name":"id","description":"Unique identifier of the file record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/files/{id}","method":"delete"},{"specification":"Patch (search and list) ai_shop_audit_logs entries. This endpoint enables filtered, paginated, or sorted retrieval of audit log records, according to their actual database fields as defined in the Prisma schema. Filter and pagination parameters may include event_id, event_type, actor_id, actor_role, target_table, created_at, and others. The operation does NOT modify records, only retrieves a filtered list.","description":"Fetches a filtered, paginated list of audit log records from the ai_shop_audit_logs table. Parameters for filtering (such as event_id, event_type, actor_id, etc.) can be sent in the request body for flexible search and listing. Response provides structured audit log objects, each representing a compliance, trace, or user/admin action log. This operation is strictly read-only (PATCH for complex queries), based solely on the schema-defined columns: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at, etc. All logic, filters, and output fields must correspond to real table columns only.","summary":"List/query ai_shop_audit_logs with filtering and pagination (strictly based on schema).","parameters":[],"requestBody":{"description":"Filter, pagination, or search criteria for listing audit logs. Must reference only schema fields.","typeName":"IAiShopAuditLogs.IRequest"},"responseBody":{"description":"Paginated or filtered list of ai_shop_audit_logs entries, with only schema-defined fields in each object.","typeName":"IPageIAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs","method":"patch"},{"specification":"Retrieve a single audit log record by its unique ID. This endpoint reads a specific row in ai_shop_audit_logs, exposing all its schema-defined columns (id, event_id, event_type, etc.) for further inspection, auditing, or dispute investigation. All fields referenced are verified as present in the actual schema.","description":"Fetches an individual ai_shop_audit_logs record by its unique identifier. Response includes all columns as defined by the schema: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. This operation is for detailed view, traceability, and compliance use cases. The record is only returned if the ID exists; else, an error describing not-found is returned. No modifications to the data are made by this endpoint.","summary":"Retrieve a single ai_shop_audit_logs record by ID (read-only).","parameters":[{"name":"id","description":"Unique identifier of the audit log record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Audit log record object, reflecting all schema-defined fields.","typeName":"IAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs/{id}","method":"get"},{"specification":"Create a new audit log entry in ai_shop_audit_logs table. Operation records a fresh compliance or business event as described by actual schema fields. Only accepts fields actually present in the Prisma schema, such as event_id, event_type, actor_id, actor_role, target_table, etc. The operation provides error handling for unique constraint violations and missing required fields.","description":"Creates a new log entry in the ai_shop_audit_logs table, capturing all relevant audit details according to schema. Accepts only the following fields: event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. Any unique index violations (e.g., event_id) yield appropriate errors. Standard compliance and audit requirements are enforced by this operation, as all fields in the request align with real schema column definitions. No omitted or assumed fields are referenced.","summary":"Create an audit log entry in ai_shop_audit_logs (using schema fields only).","parameters":[],"requestBody":{"description":"Audit log data (schema-defined fields only) for new entry.","typeName":"IAiShopAuditLogs.ICreate"},"responseBody":{"description":"Newly created audit log object with all schema fields.","typeName":"IAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs","method":"post"},{"specification":"Update (replace) an existing audit log entry by ID. This operation updates all fields in the ai_shop_audit_logs record, referenced directly from the actual Prisma schema (no invented/implicit columns). All updated data is validated against real schema constraints such as unique event_id and data type/length for each property.","description":"Updates (fully replaces) a single ai_shop_audit_logs row based on the provided ID, using ONLY schema-defined properties: event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. Validates for unique indexes/constraints and returns an error on conflict. The new data must strictly comply with the db schema. No other columns or soft-delete semantics are assumed. On success, returns the entire updated log entry object. Inputs and outputs use only schema-exact properties.","summary":"Update all fields of an audit log record by ID (replace, schema-verified only).","parameters":[{"name":"id","description":"Unique identifier of the audit log record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Complete updated audit log data (all schema-defined fields).","typeName":"IAiShopAuditLogs.IUpdate"},"responseBody":{"description":"The updated audit log object.","typeName":"IAiShopAuditLogs"},"authorizationRoles":null,"path":"/aiShop/auditLogs/{id}","method":"put"},{"specification":"Delete audit log record from ai_shop_audit_logs by ID. This operation removes a single compliance/audit row from the database. No soft-delete fields are present in the Prisma schema, so this endpoint must perform a hard delete (permanent removal). Only columns referenced in the actual schema are involved. Errors returned on FK violations or not found.","description":"Permanently deletes an audit log entry by its ID from ai_shop_audit_logs table. Since the schema lacks a soft delete field, the record is fully removed from storage. Attempts to delete non-existing or linked entries (due to FK constraints elsewhere) will yield error responses. This operation references only schema-defined columns: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. The deletion is irreversible.","summary":"Hard delete a single audit log record by ID (no soft delete field present).","parameters":[{"name":"id","description":"Unique identifier of the audit log record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/auditLogs/{id}","method":"delete"},{"specification":"Fetch list of customer records with filter/pagination/search. Uses PATCH method and a request body for complex queries, strictly limited to existing fields per Prisma schema (e.g., id, email, phone, status, created_at, updated_at) in ai_shop_customers. Does NOT alter or modify records. Only columns present in the schema are to be manipulated or returned.","description":"Queries ai_shop_customers table for customer records matching filter criteria, pagination, or search constraints, sent in the request body. Permissible filter fields include id, email, phone, status, created_at, updated_at, following the actual schema. Returns a paginated list of customers, each object strictly containing properties from the table definition. No write or update function occurs in this operation; it is purely for complex list retrieval based on schema-defined criteria.","summary":"List/query ai_shop_customers with filter/pagination (PATCH, schema columns only).","parameters":[],"requestBody":{"description":"Filter, pagination, or advanced search parameters, only referencing schema fields.","typeName":"IAiShopCustomers.IRequest"},"responseBody":{"description":"Paginated or filtered customer object array (only schema-defined fields).","typeName":"IPageIAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers","method":"patch"},{"specification":"Retrieve a single customer record from ai_shop_customers by ID. This endpoint fetches a customer row, exposing only real fields per the schema (id, email, phone, status, created_at, updated_at). Returns all information as stored in the db; if not found, communicates error. No implicit fields referenced.","description":"Fetches a customer record from ai_shop_customers by unique ID. Only the schema-defined columns (id, email, phone, status, created_at, updated_at) are returned in the response. Used for profile viewing, compliance, or reference audit. If the target record does not exist, returns a not-found error. This operation does not manipulate any data, only retrieves one row exactly as recorded in the database.","summary":"Retrieve a single ai_shop_customers record by its ID (all columns in schema only).","parameters":[{"name":"id","description":"Unique ID of the customer record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Customer object from ai_shop_customers, as per schema fields only.","typeName":"IAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers/{id}","method":"get"},{"specification":"Create a new customer record in ai_shop_customers. The operation receives required core customer data (email, status, and optional phone, created_at, updated_at) based exclusively on the actual db schema. Returns the full new record, with all fields as defined in schema. Validation errors are returned if inputs violate db constraints.","description":"Creates a new row in the ai_shop_customers table, storing a new user or customer account. Accepts and validates only schema-defined fields: email, phone, status, created_at, updated_at. Does not use or assume any implicit columns. Returns the complete created object, including computed or default primary key, as stored in db. Unique constraint on email is enforced; duplicate values cause an error.","summary":"Create and return a new ai_shop_customers record (using only schema field definitions).","parameters":[],"requestBody":{"description":"New customer object data; must map to schema.","typeName":"IAiShopCustomers.ICreate"},"responseBody":{"description":"Created ai_shop_customers object (full schema fields).","typeName":"IAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers","method":"post"},{"specification":"Update all fields in a customer record by ID. This endpoint fully replaces all main fields (email, phone, status, etc.) for the given ID, based ONLY on the Prisma schema definition. Does not reference any implicit/audit/soft-delete columns outside the schema. Returns the updated row, or error on not found or constraint violations.","description":"Performs a full update of an ai_shop_customers row for a specific ID, replacing all columns (email, phone, status, created_at, updated_at). Every updated field must be present in the payload as defined by the schema. Strictly rejects any extraneous columns. Returns the new object state as saved. This operation is critical for user management edits and must not use or assume fields not found in the actual db schema.","summary":"Replace all fields for a customer by ID (full-record update via schema fields only).","parameters":[{"name":"id","description":"Unique id of customer to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full customer object to use as replacement; all must be defined by schema.","typeName":"IAiShopCustomers.IUpdate"},"responseBody":{"description":"Returned customer, schema fields only.","typeName":"IAiShopCustomers"},"authorizationRoles":null,"path":"/aiShop/customers/{id}","method":"put"},{"specification":"Delete ai_shop_customers record by unique identifier. Because ai_shop_customers does NOT have a soft delete field in its schema, this operation will perform a hard (permanent) delete. References only id and other schema-present fields. Any FK constraints or not-found cases must return error messages. Irreversible action.","description":"Physically deletes (hard) a single row in ai_shop_customers by ID. No soft delete logic applies because there is NO deleted_at or is_deleted column in the schema. If the customer is referenced by other entities, FK errors may prevent deletion; otherwise, record is removed. All field references are strictly limited to those defined in the Prisma schema.","summary":"Permanently delete a customer record (hard delete, no soft delete supported).","parameters":[{"name":"id","description":"Unique ID of the customer to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/customers/{id}","method":"delete"},{"specification":"Query ai_shop_sellers (seller entities) for complex paginated/filter/search listings. Uses PATCH and request body for flexible query, only actual schema properties allowed (id, business_name, business_registration_number, status, approved_at, created_at, updated_at). This operation is strictly for data retrieval and does NOT perform record updates.","description":"Lists seller entries in ai_shop_sellers table, using complex filter/search/pagination logic provided in the request payload (body). Only database fields present in schema can be queried or returned, including id, business_name, business_registration_number, status, approved_at, created_at, and updated_at. No assumed/implicit/audit fields present. Returns paginated objects with schema-verified columns only, for seller management and reviews. No data modification is performed.","summary":"List/query sellers with flexible filter/pagination (PATCH; uses only schema fields).","parameters":[],"requestBody":{"description":"Optional filter/pagination/search settings, referencing only table columns.","typeName":"IAiShopSellers.IRequest"},"responseBody":{"description":"Paginated list of sellers using schema-only fields for each row.","typeName":"IPageIAiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers","method":"patch"},{"specification":"Get operation for ai_shop_sellers. Retrieves detailed information for a seller entity with the specified id. Returns the full seller record, including business_name, business_registration_number, status, approved_at, created_at, and updated_at. This operation enables role-based access for platform staff to obtain comprehensive seller account data by UUID. No soft delete—if the record doesn't exist by id, a 404 should be returned. Suitable for business/operations workflows and platform audits. Only references fields present in the Prisma schema.","description":"This operation returns complete details of a specific seller entity, as defined by the ai_shop_sellers table in the schema. The unique seller id (UUID) serves as the path parameter, enabling platform roles (like admin or business staff) to look up a seller's full profile. All returned fields are strictly mapped to the schema: id (primary key, UUID), business_name (official store/business name), business_registration_number (unique legal identifier), status (onboarding/active/suspended), approved_at (timestamp of admin approval), created_at, and updated_at. The operation does not reference any field not present in the schema, ensuring strict schema compliance. Security may restrict access to privileged roles only. If the id does not correspond to a valid record, a 404 is returned. This operation forms part of seller lifecycle management, admin dashboard reporting, and regulatory audits.","summary":"Get detailed view of a seller (ai_shop_sellers table) by id.","parameters":[{"name":"id","description":"Globally unique identifier for the seller (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed info of the seller corresponding to the id.","typeName":"aiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers/{id}","method":"get"},{"specification":"Create operation for ai_shop_sellers. Inserts a new seller record into the database, requiring all needed fields except for id, timestamps, and the nullable approved_at. Only schema-defined properties are included: business_name, business_registration_number, status, and approved_at (nullable). The id is auto-generated. This operation forms the basis for seller onboarding/business registration. No extra properties beyond the schema should ever be referenced.","description":"Creates a new seller entity based strictly on the ai_shop_sellers schema. The request body must specify: business_name (required, unique for store/legal entity identification), business_registration_number (required, unique legal identifier), status (required lifecycle status such as onboarding, active, or suspended), and an optional approved_at (timestamp, nullable) per approval workflow. Upon creation, auto-generated fields such as id, created_at, and updated_at are initialized. No soft delete or extraneous audit fields are present in the schema; only what is specified. Response contains the full created seller record. Input validation must respect unique constraints on business_name and business_registration_number. This endpoint is critical for onboarding new sellers, compliance, and business workflows.","summary":"Create new seller entity in ai_shop_sellers table.","parameters":[],"requestBody":{"description":"New seller information (all required fields as defined in ai_shop_sellers schema).","typeName":"aiShopSellers.ICreate"},"responseBody":{"description":"Full seller record just created.","typeName":"aiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers","method":"post"},{"specification":"Update operation for ai_shop_sellers. Replaces a seller's information for the specified id. All updatable fields in the schema are required in the request, except for id and auto-generated timestamps. Supported fields are business_name, business_registration_number, status, and approved_at. This operation overwrites the existing record with the new values. Input must match schema types and business rules. No extraneous or computed fields allowed.","description":"Updates an existing seller entity's information, strictly according to the ai_shop_sellers schema. The input body must include business_name, business_registration_number, status, and approved_at (nullable). Auto-managed fields like created_at and updated_at are updated by the database. The unique id (UUID) is supplied as a path parameter. No soft delete—only hard updates of existing fields as per the schema are supported. This endpoint is vital for maintaining accurate business and compliance records of sellers, supporting admin modifications, and platform audit requirements.","summary":"Update seller information (ai_shop_sellers) by id.","parameters":[{"name":"id","description":"Globally unique identifier of the seller to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated seller information (fields must match ai_shop_sellers schema, id excluded).","typeName":"aiShopSellers.IUpdate"},"responseBody":{"description":"The full updated seller record.","typeName":"aiShopSellers"},"authorizationRoles":null,"path":"/aiShop/sellers/{id}","method":"put"},{"specification":"Delete operation for ai_shop_sellers. Performs a hard delete (permanent data removal) because ai_shop_sellers table does not have a soft delete field. Deletion is by unique identifier (UUID) and, upon success, the seller record is permanently removed from the database—cannot be restored. If no such id exists, operation is idempotent (404 or 204 as appropriate). No reference to non-existent fields: no deleted_at or is_deleted in schema.","description":"Permanently deletes the seller entity with the given id, as specified by the ai_shop_sellers table. Since this entity has no soft delete indicator (e.g., deleted_at), the operation results in the complete removal of the record from the database. The unique id (UUID) is the path parameter. Operation supports idempotency: if the seller does not exist, a no-content or not found response is provided. Security considerations should restrict operation to admin/business ops roles. This method is necessary for regulatory removals and admin controls, but use is tightly governed due to permanent loss.","summary":"Hard delete seller record (ai_shop_sellers) by id; irreversible.","parameters":[{"name":"id","description":"UUID of the seller to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/sellers/{id}","method":"delete"},{"specification":"List/search operation (PATCH) for ai_shop_admins. Allows search, filter, and pagination for all admin records in the ai_shop_admins table, returning a paginated result set strictly based on schema fields: id, username, status, created_at, and updated_at. Designed to support admin directory, workflow, and operations auditing. All referenced properties must exist in the schema.","description":"Returns a paginated, optionally filtered collection of admin user entities from the ai_shop_admins table. Only schema-defined fields are selectable: id (UUID), username (login identifier), status (active/suspended/pending), created_at and updated_at (timestamps). The request body can include search, filter, sort, and pagination controls, with all operations conforming strictly to the available fields. Security and access should be managed per business requirements. No extraneous fields or unsupported search properties should be included; all responses and query mechanics are schema-driven. This operation is used for admin directory functionality, audit logs, and compliance search.","summary":"Paginated list/search of admin records (ai_shop_admins).","parameters":[],"requestBody":{"description":"Search, filter, and pagination details for listing admins as per ai_shop_admins schema.","typeName":"aiShopAdmins.IRequest"},"responseBody":{"description":"Paginated collection of admin entities matching search and filter parameters.","typeName":"IPageaiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins","method":"patch"},{"specification":"Get operation for ai_shop_admins. Retrieves the record and details of a single admin user by UUID, as defined in the schema. Returns id, username, status, created_at, and updated_at only—no undocumented properties permitted. This is required for admin management, access verification, and audit logging dashboards. All value returns correspond directly to schema fields.","description":"Fetches complete admin user details by ID, referencing only the columns defined in ai_shop_admins: id, username, status, created_at, and updated_at. The UUID path parameter ensures precise retrieval. This operation supports backoffice management flows, admin self-service, and audit controls. 404 is returned if the admin is not found. Role-based access may be required. Functionality is limited strictly to what the schema supports—no access to other tables or extended admin profiles; only core entity information is provided as per security best practices.","summary":"Get an admin record (ai_shop_admins) by id.","parameters":[{"name":"id","description":"UUID of the admin record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete admin record if found, mapped to ai_shop_admins columns.","typeName":"aiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins/{id}","method":"get"},{"specification":"Create operation for ai_shop_admins. Inserts a new admin user row in the database. Request body must match ai_shop_admins schema: username (required, unique), status (required). id, created_at, and updated_at are auto-generated. This endpoint is essential for onboarding platform and system admin accounts. No inexistent fields are to be referenced.","description":"Creates a new admin user entity per the ai_shop_admins schema. The request body details include: username (unique user identity for admins; required) and status (account status as defined—active, suspended, pending; required). Auto-managed columns, such as id, created_at, and updated_at, are initialized by the system/database. Uniqueness constraints are enforced on username. This is used for privileged onboarding, role escalation, and backoffice expansion. No soft delete field exists; only hard creation is supported. All values and references must strictly follow the schema provided for ai_shop_admins.","summary":"Create admin record (ai_shop_admins table).","parameters":[],"requestBody":{"description":"Details of new admin user (username, status) for creation, as mapped to ai_shop_admins schema fields.","typeName":"aiShopAdmins.ICreate"},"responseBody":{"description":"The full admin record just created.","typeName":"aiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins","method":"post"},{"specification":"Update operation for ai_shop_admins by id. Overwrites the username and/or status for the specified admin (UUID). Only fields defined in ai_shop_admins schema can be updated. The operation is used for account management, status changes, and compliance. Strict schema reference is enforced: no invented fields beyond username and status; id, timestamps handled by system.","description":"Updates admin user account details in ai_shop_admins by id (UUID). The request body may provide username (unique identifier for login/audit) and status (active/suspended/pending/lifecycle); only these fields can be altered. All auto-generated fields (created_at and updated_at) are managed internally by the system. 404 is returned if the record to be updated is not found. No references are made to any undocumented or unsupported attributes. This endpoint is used by admin team leads or compliance automation for user maintenance and operational state transitions.","summary":"Update admin record (ai_shop_admins) by id.","parameters":[{"name":"id","description":"UUID identifying the admin to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for specified admin (username/status) only, per ai_shop_admins schema.","typeName":"aiShopAdmins.IUpdate"},"responseBody":{"description":"The updated admin record, strictly conforming to schema.","typeName":"aiShopAdmins"},"authorizationRoles":null,"path":"/aiShop/admins/{id}","method":"put"},{"specification":"Delete operation for ai_shop_admins. Since schema lacks soft delete, this is a hard delete removing the admin record completely and permanently by UUID identifier. Irreversible; if record doesn't exist, return appropriate not found.","description":"Permanently deletes the admin user from ai_shop_admins, identified by UUID in the path parameter. The absence of soft delete fields in the schema means deletion is hard, with no return or recovery via 'deleted_at' or similar. Admins should be warned before deletion. The operation is idempotent: a missing UUID results in a no-content or not found response. This operation is used only in sensitive deprovisioning and compliance workflows.","summary":"Hard delete admin record (ai_shop_admins) by id.","parameters":[{"name":"id","description":"UUID of admin record to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/admins/{id}","method":"delete"},{"specification":"Paginated list/search operation for ai_shop_auth_providers using PATCH. Allows for searching, filtering, and paginating through external authentication provider linkages, returning full records mapped exactly to the schema: id, customer_id, seller_id, admin_id, provider_type, external_id, linked_at. No invented or extended properties. Designed for user directory, troubleshooting, integrations, and audits.","description":"Returns a filtered and/or paginated list of authentication provider association records from ai_shop_auth_providers. Supported columns: id (UUID), customer_id, seller_id, admin_id (nullable FKs), provider_type (enum string describing auth mode), external_id (provider's identifier), and linked_at (datetime). Request body may include pagination, sort, and search fields limited strictly to what exists in the schema. This operation enables admin and integration teams to diagnose external authentication linkages, resolve login issues, and support OAuth/SNS provider management. All query and response properties are rigorously schema-compliant.","summary":"Paginated list/search for auth providers (ai_shop_auth_providers).","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters, strictly as per ai_shop_auth_providers schema.","typeName":"aiShopAuthProviders.IRequest"},"responseBody":{"description":"Paginated records of authentication providers matching search criteria.","typeName":"IPageaiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders","method":"patch"},{"specification":"Get operation for ai_shop_auth_providers by id (UUID). Returns only documented, schema-defined fields: id, customer_id, seller_id, admin_id, provider_type, external_id, linked_at. Used for detailed log/troubleshooting of an auth linkage. 404 if none found. All field references strictly to schema.","description":"Gets details for a specific authentication provider linkage, according to ai_shop_auth_providers. The id (UUID) path parameter uniquely identifies the linkage. Output fields are id, customer_id (nullable UUID), seller_id (nullable UUID), admin_id (nullable UUID), provider_type (e.g., google, kakao, email), external_id, and linked_at (timestamp). Security policy may restrict this operation to privileged roles. All values are presented exactly as in schema—no computed or extended attributes. Used to troubleshoot auth issues, compliance, and user mapping reconciliation workflows.","summary":"Get auth provider record by id (ai_shop_auth_providers).","parameters":[{"name":"id","description":"UUID for the provider linkage to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full auth provider linkage record for specified id.","typeName":"aiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders/{id}","method":"get"},{"specification":"Create operation for ai_shop_auth_providers. Inserts a new authentication provider linkage record. Request must include provider_type, external_id, linked_at, and exactly one of customer_id, seller_id, or admin_id to associate (nullable but one required). The system manages id creation. This endpoint is critical for onboarding users via OAuth/social login, 2FA provisioning, and integration with external auth.","description":"Creates a new association record between a user role (customer, seller, or admin) and an external authentication provider as defined in ai_shop_auth_providers. The input must specify provider_type (e.g., google, kakao, totp), external_id, linked_at (datetime when verified/added), and only one of customer_id, seller_id, or admin_id (all UUIDs, at least one required, the others null). This enables login with external providers and advanced auth methods. All values are strictly as defined in the Prisma schema—no fields outside the model may be sent/returned. Upon success, returns the full linkage record including UUID id. This operation is essential for SSO, federated login, and cross-role integrations. Input validation ensures assignment to only one role type at a time (as per schema intent).","summary":"Create new authentication provider linkage (ai_shop_auth_providers table).","parameters":[],"requestBody":{"description":"New external auth linkage details (all required fields for ai_shop_auth_providers, including role linkage).","typeName":"aiShopAuthProviders.ICreate"},"responseBody":{"description":"The full auth linkage record created.","typeName":"aiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders","method":"post"},{"specification":"Update an existing authentication provider mapping (ai_shop_auth_providers). Only fields present in the actual Prisma schema can be referenced in the operation. Permitted updatable fields are 'customer_id', 'seller_id', 'admin_id', 'provider_type', 'external_id', and 'linked_at'. This endpoint is for updating a specific external auth linkage for a customer, seller, or admin. All fields updated must exactly match those in the model. No non-existent fields (like created_by, updated_by, deleted_at) can be referenced.","description":"This operation updates an existing authentication provider mapping in the ai_shop_auth_providers table. Each provider mapping links a customer, seller, or admin to an external authentication system (such as Google, Kakao, TOTP, SMS, etc.).\n\nThe update can change any of the following fields: 'customer_id', 'seller_id', 'admin_id' (each nullable for polymorphic reference), 'provider_type', 'external_id', and 'linked_at'. This enables, for instance, rebinding a social login, or updating a linkage time. Every update is validated against referential integrity constraints for actor entities per schema rules. No audit fields outside the schema (e.g., deleted_at, created_by) are supported. Business validation (e.g., uniqueness of provider/customer) follows database constraints.\n\nThis endpoint requires that the specified ID exists; otherwise, a not found error is returned. Partial updates are not supported—supply the full set of updatable fields. Related records and linkage are maintained per schema. Only data existing in the schema can be modified.","summary":"Update authentication provider mapping (ai_shop_auth_providers) by ID.","parameters":[{"name":"id","description":"ID of the authentication provider mapping to update (ai_shop_auth_providers.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update information for the authentication provider mapping. Only schema-defined fields are allowed. No extra fields accepted.","typeName":"IAiShopAuthProviders.IUpdate"},"responseBody":{"description":"The updated authentication provider mapping record.","typeName":"IAiShopAuthProviders"},"authorizationRoles":null,"path":"/aiShop/authProviders/{id}","method":"put"},{"specification":"Delete an authentication provider mapping (ai_shop_auth_providers) by ID. The schema does NOT have a deleted_at or soft delete field, so this endpoint performs a hard delete (permanent removal) of the corresponding row.","description":"This operation deletes an authentication provider mapping from the ai_shop_auth_providers table by its unique identifier. As the ai_shop_auth_providers model in the schema does not have any soft delete (e.g., deleted_at) or is_deleted field, this action irreversibly removes the record from the database.\n\nThis is a permanent delete and cannot be undone. All linkage between the actor and the external authentication provider will be lost. This operation should be protected by business logic as per your access control requirements. It will only delete if the ID matches an existing row.","summary":"Hard delete authentication provider mapping (ai_shop_auth_providers) by ID.","parameters":[{"name":"id","description":"ID of the authentication provider mapping to delete (ai_shop_auth_providers.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/authProviders/{id}","method":"delete"},{"specification":"List authentication sessions (ai_shop_user_sessions) with search/filter capabilities. All returned information must reflect only schema presence. Typical filter fields include 'customer_id', 'seller_id', 'admin_id', 'issued_at', 'expires_at', 'terminated_at', and 'ip_address'. There is NO deleted_at field; all session lifecycle fields must match schema.","description":"This operation returns a list of authentication user sessions from the ai_shop_user_sessions table, supporting filter and search queries based solely on schema fields. User sessions may link to a customer, seller, or admin (polymorphic reference) and record details like session_token, issued_at, expires_at, terminated_at (nullable), and ip_address as defined in the schema.\n\nCommon filters may include session status (active vs. terminated), IP address, issued date range, and actor references, but queries and responses are strictly limited to the actual model fields—no audit fields outside those defined are supported. Pagination, query, and sorting are supported as appropriate.\n\nThe result is a paginated list of session objects, each containing only fields present in the ai_shop_user_sessions schema.","summary":"List/search authentication user sessions (ai_shop_user_sessions) with schema-limited filtering.","parameters":[],"requestBody":{"description":"Search and filter parameters for user session listing. Only schema fields are allowed for filtering/sorting. No soft delete support.","typeName":"IAiShopUserSessions.IRequest"},"responseBody":{"description":"Paginated user session records matching search and filter criteria.","typeName":"IPageIAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions","method":"patch"},{"specification":"Get a single authentication session (ai_shop_user_sessions) by ID. All returned session properties must reflect the actual Prisma schema fields.","description":"This operation retrieves a specific authentication user session from the ai_shop_user_sessions table, identified by its unique id. The returned session contains all fields defined in the schema, such as customer_id, seller_id, admin_id (for the account owning the session), session_token, issued_at, expires_at, terminated_at (if forcibly ended), and ip_address.\n\nNo extra metadata or audit fields (such as deleted_at, updated_by, etc.) are included, as these do not exist in the Prisma schema. If the session with the specified ID is not found, a not found error is returned.","summary":"Get user session (ai_shop_user_sessions) by ID.","parameters":[{"name":"id","description":"ID of the authentication user session to retrieve (ai_shop_user_sessions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"User session record matching the provided ID.","typeName":"IAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions/{id}","method":"get"},{"specification":"Create a new authentication user session (ai_shop_user_sessions). Only schema-defined fields are permitted in both request and response.","description":"This operation creates a new authentication user session record in the ai_shop_user_sessions table. Sessions are polymorphically linked to customers, sellers, or admins (customer_id, seller_id, admin_id; all nullable for correct referencing), and require a unique session_token, issued_at and expires_at timestamps, and an ip_address as defined in the schema.\n\nAll fields in the request body must exist in the ai_shop_user_sessions schema. The operation does not support fields not present in the schema, and soft delete is not relevant. The response is the full new session object with all defined fields in the schema.","summary":"Create user authentication session (ai_shop_user_sessions).","parameters":[],"requestBody":{"description":"Information for a new authentication user session. Mandatory and optional fields as per Prisma schema only.","typeName":"IAiShopUserSessions.ICreate"},"responseBody":{"description":"The created user session object, with only schema-defined fields included.","typeName":"IAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions","method":"post"},{"specification":"Update an existing authentication user session (ai_shop_user_sessions) by ID. Only actual Prisma schema fields are permitted for an update. There is no deleted_at or soft delete field; only real fields in schema can be updated.","description":"This operation updates the details of a specific authentication user session in the ai_shop_user_sessions table. Updatable fields include customer_id, seller_id, admin_id (all nullable for correct actor linkage), session_token, issued_at, expires_at, terminated_at, and ip_address (all schema-defined).\n\nNo non-existent fields (such as created_by or soft delete markers) are allowed. The operation requires the full set of updatable fields in the request. If the target session does not exist, a not found error is returned. All referential integrity constraints are enforced per schema relationships.","summary":"Update user session (ai_shop_user_sessions) by ID.","parameters":[{"name":"id","description":"ID of the authentication user session to update (ai_shop_user_sessions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update payload with all updatable fields, matching the ai_shop_user_sessions schema.","typeName":"IAiShopUserSessions.IUpdate"},"responseBody":{"description":"The updated user session record.","typeName":"IAiShopUserSessions"},"authorizationRoles":null,"path":"/aiShop/userSessions/{id}","method":"put"},{"specification":"Delete a user authentication session (ai_shop_user_sessions) by ID. Hard delete, as there is no soft delete field in the schema.","description":"This operation deletes a user authentication session with the specified id from the ai_shop_user_sessions table. Since the model does NOT support soft delete fields (e.g., deleted_at), this is an irreversible, permanent removal. Once deleted, the session is no longer available for access or audit queries in this table. Deletion is final, so business logic must ensure this action is intentional and authorized.","summary":"Delete user session (ai_shop_user_sessions) by ID (hard delete, no soft delete).","parameters":[{"name":"id","description":"ID of the user session to delete (ai_shop_user_sessions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/userSessions/{id}","method":"delete"},{"specification":"List/search customer profiles (ai_shop_customer_profiles) with filtering. Returned data strictly limited to actual schema fields. There is no soft delete; all queries and output must match the active schema.","description":"This operation lists and searches customer profiles from the ai_shop_customer_profiles table, returning only schema-defined fields. Supported filter fields include customer_id, name, preferences, dob, gender, locale, shipping_addresses, created_at, and updated_at—all as defined in the schema. There are NO audit fields like deleted_at, created_by, etc.\n\nSearches or filters by schema fields, supports pagination and sorting per implementation standards. Result objects contain only properties present in ai_shop_customer_profiles.","summary":"List/search customer profiles (ai_shop_customer_profiles) with strict schema filtering.","parameters":[],"requestBody":{"description":"Search and filter parameters for customer profile listing. Only schema fields from ai_shop_customer_profiles are allowed.","typeName":"IAiShopCustomerProfiles.IRequest"},"responseBody":{"description":"Paginated customer profile records, only with schema-defined fields.","typeName":"IPageIAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles","method":"patch"},{"specification":"Get a single customer profile (ai_shop_customer_profiles) by ID. Only actual model fields are returned—description, preferences, etc. No audit fields outside schema are present.","description":"Get the customer profile by ID from the ai_shop_customer_profiles table. The result includes only the properties defined in the schema (customer_id, name, preferences, dob, gender, locale, shipping_addresses, created_at, updated_at). No soft delete or non-schema fields are allowed. If no profile is found, a not found error is returned.","summary":"Get customer profile (ai_shop_customer_profiles) by ID.","parameters":[{"name":"id","description":"ID of the customer profile to retrieve (ai_shop_customer_profiles.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The customer profile record, matching schema fields only.","typeName":"IAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles/{id}","method":"get"},{"specification":"Create a new customer profile (ai_shop_customer_profiles). Only schema fields are permitted in the request and response.","description":"This operation creates a new customer profile by inserting a row into the ai_shop_customer_profiles table. All data must match the schema fields: customer_id (FK), name, preferences, dob, gender, locale, shipping_addresses, created_at, and updated_at. No audit or soft delete fields (deleted_at, created_by, etc.) are accepted.\n\nThe response includes all resulting fields, as defined in the schema, for the newly created customer profile.","summary":"Create customer profile (ai_shop_customer_profiles).","parameters":[],"requestBody":{"description":"Information required to create a new customer profile; only schema fields allowed.","typeName":"IAiShopCustomerProfiles.ICreate"},"responseBody":{"description":"The created customer profile object.","typeName":"IAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles","method":"post"},{"specification":"Update an existing customer profile (ai_shop_customer_profiles) by ID. Only the fields in the model can be updated. There is NO deleted_at or soft delete in the schema—operation is a strict update of actual fields only.","description":"Update an existing customer profile (ai_shop_customer_profiles) by its id. Only schema fields—customer_id, name, preferences, dob, gender, locale, shipping_addresses, created_at, updated_at—are updatable. There are no non-schema fields. This operation will error if the record does not exist. All referential and field-level constraints are respected.","summary":"Update customer profile (ai_shop_customer_profiles) by ID.","parameters":[{"name":"id","description":"ID of the customer profile to update (ai_shop_customer_profiles.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full update information for the customer profile, fields strictly matching the schema.","typeName":"IAiShopCustomerProfiles.IUpdate"},"responseBody":{"description":"The updated customer profile object, schema fields only.","typeName":"IAiShopCustomerProfiles"},"authorizationRoles":null,"path":"/aiShop/customerProfiles/{id}","method":"put"},{"specification":"Delete customer profile (ai_shop_customer_profiles) by ID. This is a hard delete; soft delete is not supported since there is no deleted_at field in the schema.","description":"This operation deletes a customer profile with the given id from the ai_shop_customer_profiles table. Since there is no soft delete (e.g., deleted_at) field, this record is removed permanently. This operation should be restricted per business rules as deletion cannot be undone. Upon success, the record is removed immediately and cannot be recovered via this table.","summary":"Delete customer profile (ai_shop_customer_profiles) by ID (hard delete, no soft delete).","parameters":[{"name":"id","description":"ID of the customer profile to delete (ai_shop_customer_profiles.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/customerProfiles/{id}","method":"delete"},{"specification":"List seller profiles with searching and pagination. This operation retrieves all entries from the ai_shop_seller_profiles table based strictly on its normalized schema. It supports filtered, paginated retrieval of extended seller profile fields: id, seller_id, contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at. No references to fields like created_by or deleted_at. All filters, sorts, and results must work on actual columns only. Used by admins for compliance, onboarding, or audit review.","description":"This endpoint enables the admin or platform to retrieve a paginated, searchable list of all seller profiles. Each record is based strictly on the ai_shop_seller_profiles Prisma schema, exposing contact_name, contact_email, company_phone, address, kyc_documents, created_at, updated_at, and foreign key for seller_id. No derived, aggregated, or non-existent properties are referenced. All filters and sorts must match schema columns. Sensitive information is only accessible by authorized roles. Error handling must reject any requests for non-existent schema fields. Related endpoints include the seller profile detail endpoint and profile create/update endpoints. Soft delete is not supported for this table, so all results are active records.","summary":"List seller profiles with advanced searching from ai_shop_seller_profiles.","parameters":[],"requestBody":{"description":"Request body defining filtering, pagination, and sort options for listing seller profiles.","typeName":"IAiShopSellerProfile.IRequest"},"responseBody":{"description":"Paginated list of seller profiles matching the search options.","typeName":"IPageAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles","method":"patch"},{"specification":"Retrieve a specific seller profile from the ai_shop_seller_profiles table. Uses the id primary key and returns all atomic, normalized fields as described in the schema. No reference to non-existent metadata fields. Used by admin, compliance, or seller onboarding systems.","description":"Retrieves a single seller profile using its unique primary key id. Returns all schema-defined fields: id, seller_id, contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at in their exact data types. Strictly avoids any reference to non-existent fields (e.g., deleted_at, created_by). This API is crucial for admin, compliance, and onboarding systems to review or manage individual seller profiles. Only defined relationships and fields are exposed. Error is returned for missing or non-existent IDs. Relies on the CREATE and UPDATE endpoints for data population and modification.","summary":"Get a specific seller profile by id from ai_shop_seller_profiles.","parameters":[{"name":"id","description":"Unique seller profile ID (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed seller profile record for the requested id.","typeName":"IAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles/{id}","method":"get"},{"specification":"Create a new seller profile entry in ai_shop_seller_profiles using the core and extended fields as modeled in the schema. No non-existent fields are referenced. Successful creation is based strictly on atomic values for id, seller_id, contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at. Used during seller onboarding or compliance updates.","description":"This operation inserts a new record in the ai_shop_seller_profiles table, using values for the atomic fields defined in the schema: id, seller_id (FK), contact_name, contact_email, company_phone, address, kyc_documents, created_at, and updated_at. Incoming data is strictly validated against schema types. No additional or missing fields are permitted. Endpoint is used for onboarding, updating compliance data, or correcting records. Any missing required fields or attempts to reference non-schema fields (like deleted_at) lead to validation errors.","summary":"Create a new seller profile in ai_shop_seller_profiles.","parameters":[],"requestBody":{"description":"Data for new seller profile, matching all required schema columns.","typeName":"IAiShopSellerProfile.ICreate"},"responseBody":{"description":"Created seller profile record.","typeName":"IAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles","method":"post"},{"specification":"Update an existing seller profile in ai_shop_seller_profiles by its primary key id. Permitted updates are fields present in the schema definition. No operation on non-existent fields. Returns the updated full resource. Used by admins for compliance, audit, or onboarding correction.","description":"Updates a seller profile identified by id, modifying only properties in the ai_shop_seller_profiles schema (contact_name, contact_email, company_phone, address, kyc_documents, updated_at). No support for non-existent fields like deleted_at, created_by, or extra metadata. The endpoint performs full or partial updates in accordance with Prisma schema constraints, requiring strict field validation. Error handling occurs for requests referencing undefined fields or missing required values. Commonly linked with profile GET and PATCH endpoints for listing, and the DELETE endpoint for removal.","summary":"Update an existing seller profile in ai_shop_seller_profiles by id.","parameters":[{"name":"id","description":"Unique seller profile ID (UUID) to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for seller profile, restricted to defined schema columns.","typeName":"IAiShopSellerProfile.IUpdate"},"responseBody":{"description":"Updated seller profile record after change.","typeName":"IAiShopSellerProfile"},"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles/{id}","method":"put"},{"specification":"Delete a seller profile from ai_shop_seller_profiles by its id primary key. As there is NO soft-delete (deleted_at) field in this schema, this operation performs a permanent, hard delete. Strictly deletes only the database row corresponding to the given id, with no soft-deletion logic.","description":"Removes a seller profile resource identified by its unique id field, permanently deleting the row from ai_shop_seller_profiles. Since the schema lacks deleted_at or is_deleted fields, this operation is a hard delete and is irreversible. All requests referencing non-existent ids return an explicit error. This endpoint is used for admin purposes, seller off-boarding, or compliance-driven data cleanup. The operation is tightly controlled and audit-logged externally if needed. No references to non-existent metadata fields are permitted.","summary":"Delete a seller profile by id (hard delete) from ai_shop_seller_profiles.","parameters":[{"name":"id","description":"Unique seller profile ID (UUID) to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/sellerProfiles/{id}","method":"delete"},{"specification":"List admin profiles with searching and pagination. Retrieves all entries in ai_shop_admin_profiles using only fields in schema: id, admin_id, duty_region, ip_allowlist, contact_email, created_at, updated_at. No extra or omitted fields are permitted. Used for admin user management and compliance review by authorized personnel.","description":"Enables authorized admin or compliance personnel to retrieve a paginated and searchable list of admin profiles, strictly based on ai_shop_admin_profiles schema. Returns id, admin_id (FK), duty_region, ip_allowlist, contact_email, created_at, and updated_at for each entry. No references to non-existent fields; all filtering, pagination, and sorting must use schema fields. Error handling must reject requests for additional attributes. Closely related to single admin profile GET and profile resource CRUD endpoints. No support for soft delete or logical deletion—only active records are listed.","summary":"List admin profiles with advanced searching from ai_shop_admin_profiles.","parameters":[],"requestBody":{"description":"Request body with pagination, filtering, and sort options for admin profiles search.","typeName":"IAiShopAdminProfile.IRequest"},"responseBody":{"description":"Paginated list of admin profiles matching query.","typeName":"IPageAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles","method":"patch"},{"specification":"Retrieve a specific admin profile from ai_shop_admin_profiles by its unique id. Returns all allowed schema fields (id, admin_id, duty_region, ip_allowlist, contact_email, created_at, updated_at). Used by admin management or compliance for profile review, audit, or privilege assignment.","description":"Fetches one admin profile by its id and returns only the properties defined in the ai_shop_admin_profiles schema: id, admin_id (FK), duty_region, ip_allowlist, contact_email, created_at, and updated_at. No virtual/aggregate/non-existent fields are present ever. Common failure mode: referencing non-schema columns. This endpoint is essential for managing admin access, reviewing audit history, or updating privileges. Relies on the PATCH (list) and PUT (update) endpoints for broader administration flows.","summary":"Get a specific admin profile by id from ai_shop_admin_profiles.","parameters":[{"name":"id","description":"Unique admin profile ID (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed resource for the requested admin profile id.","typeName":"IAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles/{id}","method":"get"},{"specification":"Create a new admin profile entry using ai_shop_admin_profiles, applying values only to fields in the schema. All data must be validated; missing or extra fields cause error. Used for onboarding, role assignment, or compliance configuration by authorized roles.","description":"Inserts a new admin profile row in the ai_shop_admin_profiles table, setting only allowed fields: id, admin_id (FK), duty_region, ip_allowlist, contact_email, created_at, and updated_at. Validates input strictly against the schema, not permitting derived/extra fields. Used by head admins for account creation, privilege assignment, or jurisdiction allocation. Errors are returned for non-conforming requests. Closely related to the PATCH (list), GET (detail), UPDATE, and DELETE endpoints for full admin management. All field requirements strictly follow the normalized schema.","summary":"Create a new admin profile in ai_shop_admin_profiles.","parameters":[],"requestBody":{"description":"Admin profile data, strictly constrained to defined schema fields.","typeName":"IAiShopAdminProfile.ICreate"},"responseBody":{"description":"Created admin profile entry as per schema.","typeName":"IAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles","method":"post"},{"specification":"Update an existing admin profile in ai_shop_admin_profiles, using only the fields defined by the table. Returns the updated profile resource. Used for privilege assignments, contact changes, or compliance updates. All validations strictly follow Prisma schema. No operation on non-existent properties.","description":"Updates an admin profile identified by its primary key id with new values for only schema-defined properties: duty_region, ip_allowlist, contact_email, or similar. No non-existent or derived properties allowed. All validations are by schema and write to only the actual underlying columns. Invalid columns cause error; required values are enforced. Used as part of broader admin management, often paired with GET (detail), PATCH (list), and DELETE endpoints. Soft delete is not supported in admin profiles.","summary":"Update an admin profile by id in ai_shop_admin_profiles.","parameters":[{"name":"id","description":"Unique admin profile ID (UUID) to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated admin profile data, strictly as defined in schema.","typeName":"IAiShopAdminProfile.IUpdate"},"responseBody":{"description":"Admin profile after update.","typeName":"IAiShopAdminProfile"},"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles/{id}","method":"put"},{"specification":"Delete an admin profile from ai_shop_admin_profiles using its id (primary key). As this table does NOT implement soft deletion, this API performs a hard/permanent delete. Only the actual record is deleted with no logical removal field supported. Operation is audit-logged externally if needed. Used by compliance, head admin, or for revocation purposes.","description":"Removes an admin profile by its unique id, permanently deleting the corresponding row from ai_shop_admin_profiles. No logical or soft delete logic supported since the schema lacks a deleted_at field. All non-existent or extra parameters are rejected. Used rarely, typically for security/compliance cleanup. Operation is closely tied to CREATE, UPDATE, and GET endpoints. Requests for non-existent ids return error. All field mapping/behavior follows normalized schema exclusively.","summary":"Delete an admin profile by id (hard delete) from ai_shop_admin_profiles.","parameters":[{"name":"id","description":"Unique admin profile ID (UUID) to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/adminProfiles/{id}","method":"delete"},{"specification":"List AI Shop products with advanced searching and pagination. Operates only on fields defined in ai_shop_products, strictly correlating Prisma columns for request filter/sorting. Used by admin/product managers for catalog review, seller enforcement, or analytics integration. No virtual/derived fields used.","description":"Retrieves a advanced searchable and paginated list of products from the ai_shop_products table, projecting only the actual schema-defined columns (id, ai_shop_seller_id, category_id, name, description, status, created_at, updated_at, deleted_at). Supports flexible filtering and sorting on any of these actual columns, but never references non-existent columns or fields. Used primarily for admin/product management, compliance, and catalog monitoring. Any attempt to filter or sort on non-schema (e.g., created_by) fields must be rejected. Linked to product detail (GET), create (POST), update (PUT), and delete endpoints.","summary":"List AI Shop products using advanced searching from ai_shop_products.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination info for product listing.","typeName":"IAiShopProduct.IRequest"},"responseBody":{"description":"Paginated product search result.","typeName":"IPageAiShopProduct"},"authorizationRoles":["admin","seller"],"path":"/aiShop/products","method":"patch"},{"specification":"Retrieve a single product from ai_shop_products by its primary key id. All columns and data must map exactly to the Prisma schema, avoiding any reference to non-existent/derived metadata fields. Used by sellers/admins for catalog review, update, or setup.","description":"Gets one product entity by its id from ai_shop_products, returning the row as individual atomic fields: id, ai_shop_seller_id, category_id, name, description, status, created_at, updated_at, and deleted_at (which is nullable; see soft delete logic). Response exactly matches schema definition. Never references non-existent or derived fields (e.g., created_by). Used by product manager, admin, seller for auditing and lifecycle management. Error if resource is not found. This endpoint relates to PATCH (list), POST (create), PUT (update), and DELETE (delete) endpoints for product lifecycle.","summary":"Get a specific product by id from ai_shop_products.","parameters":[{"name":"id","description":"Unique product ID (UUID) to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Product resource for the provided id.","typeName":"IAiShopProduct"},"authorizationRoles":["admin","seller"],"path":"/aiShop/products/{id}","method":"get"},{"specification":"Create a new product in the AI Shop. This operation is based on the ai_shop_products table and requires all mandatory fields as defined in the schema: 'ai_shop_seller_id', 'category_id', 'name', 'description', 'status', as well as audit fields 'created_at' and 'updated_at'. The operation should not include or reference any fields not present in the schema, such as 'created_by', 'deleted_by', or 'updated_by'. No extraneous fields are permitted. On success, the complete product entity, as defined by the ai_shop_products schema, will be returned.","description":"This endpoint registers a new product with all required data: the seller it belongs to (ai_shop_seller_id), its category (category_id), its name, description (content), and business status (one of: 'active', 'inactive', 'draft', 'suspended', 'deleted'). Dates for creation and update must be provided, complying precisely with audit and business requirements. This operation references the ai_shop_products table and strictly matches the fields defined therein — no assumption of soft-delete, no created_by fields, and no omitted requirements. All business logic for category and seller validation must be enforced, and foreign key relationships must refer to existing records. Any attempt to include unsupported fields or omit required fields will result in an error. On successful creation, the endpoint responds with the newly created ai_shop_products object, including all defined fields. Error handling reflects schema violations, such as duplicate product per seller (unique constraint), invalid category or seller references, or omitted required fields.","summary":"Create a new product (ai_shop_products) with all required fields from the Prisma schema.","parameters":[],"requestBody":{"description":"New product registration data, strictly matching ai_shop_products creation requirements.","typeName":"IAiShopProducts.ICreate"},"responseBody":{"description":"The complete created product entity, matching ai_shop_products schema.","typeName":"IAiShopProducts"},"authorizationRoles":null,"path":"/aiShop/products","method":"post"},{"specification":"Update the details of an existing product in the AI Shop. This operation corresponds to the ai_shop_products table. Updates can be performed for most product fields except the primary key. The operation does not reference or require nonexistent fields such as 'deleted_at' (unless updating for soft delete), 'created_by', or 'updated_by'. All updatable fields in the schema are permitted: 'ai_shop_seller_id', 'category_id', 'name', 'description', 'status', and 'updated_at'. The operation requires the product ID as a path parameter. All schema validations and foreign key integrity must be enforced.","description":"Performs an update of the ai_shop_products record with the specified ID. Only fields defined in the Prisma schema can be updated, including seller, category, product name, description, status, and updated_at. Soft deletion is supported by updating the 'deleted_at' field when applicable since it exists in the schema; if 'deleted_at' is set, the product is treated as deleted in business logic. No extra fields (e.g., created_by, updated_by) should be included or expected. All updates must comply with unique and foreign key constraints as defined on the ai_shop_products table. If the product does not exist, or required fields are missing, or nonexistent fields are referenced, an error will be returned. On successful update, the complete updated ai_shop_products object is returned.","summary":"Update a product in ai_shop_products using its ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the product to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated product data for ai_shop_products; must match schema fields exactly.","typeName":"IAiShopProducts.IUpdate"},"responseBody":{"description":"The updated product record (ai_shop_products).","typeName":"IAiShopProducts"},"authorizationRoles":null,"path":"/aiShop/products/{id}","method":"put"},{"specification":"Delete (soft delete) an existing product in ai_shop_products. This operation performs a soft delete using the 'deleted_at' field, which exists in the Prisma schema. No hard deletion of records occurs. The path parameter is the product's primary key. No additional fields are required or referenced. The record will be excluded from business use but retained for auditability.","description":"This endpoint sets the 'deleted_at' field on the given product (ID provided via path parameter) to the current timestamp, marking it as soft deleted according to the ai_shop_products schema. No hard deletion or removal from the database occurs—deleted_at provides logical removal while supporting audit and potential undeletion. No other fields ('created_by', 'updated_by', etc.) are referenced or manipulated as they do NOT exist in the schema. Attempts to delete non-existent products will result in an error. On success, the now-soft-deleted ai_shop_products record is returned. All business logic for record exclusion relies on 'deleted_at' being non-null.","summary":"Soft-delete a product (ai_shop_products), setting deleted_at (soft delete) via ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the product to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The updated ai_shop_products record, with deleted_at set.","typeName":"IAiShopProducts"},"authorizationRoles":null,"path":"/aiShop/products/{id}","method":"delete"},{"specification":"Retrieve a filtered, paginated list of product variants (ai_shop_product_variants). Supports searching, filtering, and pagination based solely on fields in the schema: 'id', 'ai_shop_product_id', 'sku', 'option_combo', 'barcode', and 'is_active'. No extraneous filters or soft-deletion logic are referenced. The request body structure must comply with a request DTO that supports search and pagination for the permitted fields. The response will return a paginated result set.","description":"Retrieve a list of product variants using filters on actual schema fields such as product ID, SKU, option_combo, barcode, or is_active. The schema provides no fields for soft deletion, so only live records matching given criteria will be listed and no deleted_at filtering is performed. Pagination and sorting are supported. Response contains a paginated list of ai_shop_product_variants records with relevant metadata. Any attempts to filter or sort by non-existent fields will result in error. The result structure strictly matches the response DTO, listing only permitted fields.","summary":"List/search product variants (ai_shop_product_variants) with schema-valid filters/pagination.","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_product_variants; must reference actual schema fields only.","typeName":"IPageAiShopProductVariants.IRequest"},"responseBody":{"description":"Paginated result of product variants (ai_shop_product_variants).","typeName":"IPageAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants","method":"patch"},{"specification":"Retrieve a single product variant (ai_shop_product_variants) by its primary key. Uses the 'id' field (UUID) for lookup. Returns the complete variant record with all defined fields: 'id', 'ai_shop_product_id', 'sku', 'option_combo', 'barcode', 'is_active.' No non-existent fields are referenced. Returns an error if not found.","description":"Find and return details for a specific product variant in ai_shop_product_variants given its ID. Only fields as defined in the schema are returned: id, ai_shop_product_id (parent product), sku (unique per product+variant), option_combo (atomic encoding of options), barcode, and is_active. No extra data is included. If the id is not found, a not-found error is returned. No soft deletion is present, so absence means missing.","summary":"Get a product variant record (ai_shop_product_variants) by ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the product variant to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_product_variants record with given ID.","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants/{id}","method":"get"},{"specification":"Create a new product variant (ai_shop_product_variants), linked to a parent product and containing all property fields supported by the schema. Requires 'ai_shop_product_id', 'sku', 'option_combo', may supply 'barcode' and 'is_active'. Does not reference or expect any fields outside the schema. Returns the full variant record as the response body.","description":"Registers a product variant, referencing a parent product (ai_shop_product_id), SKU, option_combo, barcode (optional), and is_active. No non-existent or extraneous fields (e.g., created_by, deleted_at) are referenced; only those defined in ai_shop_product_variants may be present. All foreign relationships and uniqueness constraints (sku per product) must be validated. On success, the full ai_shop_product_variants object as defined by the schema is returned.","summary":"Create a product variant (ai_shop_product_variants), linked to ai_shop_products.","parameters":[],"requestBody":{"description":"Product variant registration info; must have all required ai_shop_product_variants fields, no extras.","typeName":"IAiShopProductVariants.ICreate"},"responseBody":{"description":"The created product variant entity (ai_shop_product_variants).","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants","method":"post"},{"specification":"Update an existing product variant (ai_shop_product_variants) identified by ID. Updatable fields are defined in the schema: 'ai_shop_product_id', 'sku', 'option_combo', 'barcode', 'is_active.' The operation NEVER references or expects non-existent fields. The path parameter is the ID of the record to update. Returns the updated variant as defined in the schema.","description":"Update the details for an existing product variant (ai_shop_product_variants), addressing only fields from the schema. Acceptable updates include parent product assignment, SKU, option_combo, barcode, and is_active. If the record is not found or if there is an attempt to update by referencing or including fields not in schema, an error is returned. No soft delete logic is present for ai_shop_product_variants, so updates do not consider deleted_at. Responses include the new state of the updated record with all schema fields.","summary":"Update a product variant (ai_shop_product_variants) using its ID.","parameters":[{"name":"id","description":"UUID of the product variant to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for ai_shop_product_variants; schema fields only.","typeName":"IAiShopProductVariants.IUpdate"},"responseBody":{"description":"The updated product variant record.","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants/{id}","method":"put"},{"specification":"Delete a product variant (ai_shop_product_variants) by ID. As the Prisma schema does NOT define a soft delete (no deleted_at), this operation performs a HARD delete — the record is removed from the database. No soft deletion, audit logging, or field such as 'deleted_at' is referenced. Path parameter is UUID of the variant.","description":"This operation removes a product variant (ai_shop_product_variants) permanently from the database. The schema does not contain a soft deletion field (such as deleted_at), so the DELETE is a hard delete: the entity is physically removed and cannot be restored. The request defines no body, only the ID as a path parameter. If the variant is not found, a not-found error will be returned. No audit or soft deletion is done in this operation — no deleted_at field exists. Only exact schema fields are referenced or manipulated.","summary":"Hard-delete a product variant from ai_shop_product_variants by ID (no soft delete field).","parameters":[{"name":"id","description":"UUID of product variant to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Deleted ai_shop_product_variants record (hard deleted, if audit supported elsewhere).","typeName":"IAiShopProductVariants"},"authorizationRoles":null,"path":"/aiShop/productVariants/{id}","method":"delete"},{"specification":"List and search inventory records from ai_shop_inventories using schema-supported filters. Provides paginated, searchable inventory data including main fields: 'id', 'ai_shop_product_variant_id', 'ai_shop_seller_id', 'stock', 'restock_threshold', 'turnover_rate', 'created_at', 'updated_at', 'deleted_at' (if applicable). Filters for hard/soft deleted records by checking 'deleted_at' field (since this DOES exist in the schema). Supports full pagination and search as defined in request/response DTOs. Only valid fields may be used for searching and response.","description":"Retrieves a paginated list of inventory records from ai_shop_inventories. Filtering may include any fields actually present in the schema, such as stock, seller, variant, deleted_at (for soft deletion filtering, as the field is present), or date ranges. No fields are referenced that do not exist in the schema and all search, filter, and pagination logic complies with the schema. Only records not soft-deleted (deleted_at is null) are normally returned, unless specified otherwise in filters. Returns structured results in the paginated page DTO. Attempts to query on non-existent fields are rejected.","summary":"Paginated, filtered list of ai_shop_inventories records; supports 'deleted_at' filtering.","parameters":[],"requestBody":{"description":"List/search/pagination parameters (all must reference defined inventory fields only).","typeName":"IPageAiShopInventories.IRequest"},"responseBody":{"description":"Paginated page result of ai_shop_inventories records.","typeName":"IPageAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories","method":"patch"},{"specification":"Retrieve an inventory record from ai_shop_inventories by ID. Response is the complete inventory record, as defined in the schema. Requires the ID path parameter. Returns all fields including possible soft delete (deleted_at); if a record has a non-null deleted_at, it is considered soft deleted for business logic but can still be read via this endpoint if the ID is valid. All fields returned must exist in the schema; not-found error on missing records.","description":"Find a single ai_shop_inventories record by its ID, returning all atomic, schema-defined fields (including deleted_at for visibility of soft deletion state). If the record is not found, or the ID is invalid, an error is returned. No references or expectations for nonexistent fields. All business logic for audit and compliance must be limited to those defined in the inventory schema.","summary":"Get a specific inventory record by ID from ai_shop_inventories (including deleted_at).","parameters":[{"name":"id","description":"UUID of inventory record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"ai_shop_inventories record for given ID.","typeName":"IAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories/{id}","method":"get"},{"specification":"Create a new inventory record in ai_shop_inventories. Requires all required fields as defined in the schema: 'ai_shop_product_variant_id', 'ai_shop_seller_id', 'stock', 'restock_threshold', 'turnover_rate' (optional), 'created_at', and 'updated_at'. The operation does NOT reference or expect any additional or invented fields. The new record is returned matching the complete schema.","description":"Registers a new inventory entry, referencing only schema-permitted fields: ai_shop_product_variant_id, ai_shop_seller_id, stock, restock_threshold, optional turnover_rate, and timestamps. Cannot create or populate fields beyond those defined in the ai_shop_inventories table. All required fields must be present and valid; any foreign keys must refer to existing, valid records. On success, the response is the complete ai_shop_inventories record (with all defined fields, including deleted_at null for active entries). Errors occur for validation failures, omitted required fields, or references to non-existent entities. No soft delete performed on create.","summary":"Create an inventory record (ai_shop_inventories) with schema-required data only.","parameters":[],"requestBody":{"description":"Inventory creation data, matching all required ai_shop_inventories fields and nothing more.","typeName":"IAiShopInventories.ICreate"},"responseBody":{"description":"Created ai_shop_inventories record.","typeName":"IAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories","method":"post"},{"specification":"Update an inventory record in ai_shop_inventories by primary key. Only fields contained in the schema should be modified: 'ai_shop_product_variant_id', 'ai_shop_seller_id', 'stock', 'restock_threshold', 'turnover_rate', 'updated_at', and 'deleted_at' (for soft deletion handling). 'deleted_at' can be set to mark the record as soft deleted; all other updates are strictly schema-bound. The operation must ignore or reject any attempt to update fields not in ai_shop_inventories, and will error if the inventory ID does not exist. Success returns the full updated inventory record.","description":"Updates an existing ai_shop_inventories record with new information for specific fields (schema-only). Possible updates include product variant assignment, seller, stock, restock threshold, turnover_rate, and setting of deleted_at for soft deletion. The record's primary key (id) must not change. Returns the full updated inventory record with all fields present in the schema, including potentially a non-null deleted_at to indicate soft deletion per business/compliance logic. Attempts to update nonexistent fields or update without a matching ID are rejected with errors. No invented audit or tracking fields are used.","summary":"Update an ai_shop_inventories record by ID; supports field updates, soft delete via deleted_at.","parameters":[{"name":"id","description":"UUID of inventory record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inventory data to update for ai_shop_inventories fields only.","typeName":"IAiShopInventories.IUpdate"},"responseBody":{"description":"The updated ai_shop_inventories record.","typeName":"IAiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories/{id}","method":"put"},{"specification":"Implements deletion for a single inventory record, identified by its primary key. The inventory model in the Prisma schema has a soft deletion field: deleted_at (nullable). This means delete requests should set this timestamp, rather than physically removing the row from the database. The endpoint should ensure that only the record with the exact matching id is soft-deleted, and do nothing if soft-deleted already. All logic and returned information must reference ONLY fields that actually exist in the ai_shop_inventories schema.","description":"This endpoint allows for soft-deletion of a single inventory record in the ai_shop_inventories table. Upon request, the API will look up the row by its id (of type string, UUID) and, if found and not already deleted (where deleted_at is null), will set the deleted_at field to the current timestamp. If the record is already soft-deleted (deleted_at not null), no further update is performed.\n\nThe API strictly prohibits the physical/hard removal of records due to the existence of deleted_at. No other fields apart from id and deleted_at will be modified. This is intended to maintain a full audit trail of inventory changes for legal and business compliance, as per requirements.\n\nNo non-existent fields will be referenced. Error cases (not found or already deleted) should be clearly signaled. Only the actual schema columns for ai_shop_inventories (id, ai_shop_product_variant_id, ai_shop_seller_id, stock, restock_threshold, turnover_rate, created_at, updated_at, deleted_at) are relevant.\n\nThis delete is soft: sets deleted_at, does not remove the row.","summary":"Soft-delete an inventory record by marking deleted_at (ai_shop_inventories table)","parameters":[{"name":"id","description":"Target inventory record's ID (UUID) to soft-delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The inventory record after soft-deletion. Only fields from ai_shop_inventories table are present, reflecting updated deleted_at.","typeName":"aiShopInventories"},"authorizationRoles":null,"path":"/aiShop/inventories/{id}","method":"delete"},{"specification":"Implements complex, paginated search or batch lookup for product snapshot version data. The endpoint corresponds to the ai_shop_product_snapshots table in the Prisma schema, which holds immutable, append-only version rows for product edits. Designed for listing multiple product snapshots with search, sort, and pagination (by product ID, created_at, name, or other fields present in the schema only). No non-existent fields may be referenced.","description":"This endpoint returns a paginated, searchable list of product snapshots from the ai_shop_product_snapshots table. Clients may filter by parent product (ai_shop_product_id), created_at timestamp, name, and other actual schema fields (but never fields that don't exist). Sorting and pagination should be supported using actual table fields only. \n\nNo snapshot can be modified via this endpoint; it is strictly for querying read-only version history as each snapshot row is immutable and append-only, complying with strict audit/compliance requirements. No deleted_at/soft delete field exists here, so all records are visible unless specifically filtered by client-side logic.\n\nThis endpoint is crucial for audit, rollback, and viewing historical product states. All returned fields must map directly to ai_shop_product_snapshots: id, ai_shop_product_id, name, description, category_id, status, created_at, updated_at, and nothing more.","summary":"Query/search/list product snapshot versions (ai_shop_product_snapshots table)","parameters":[],"requestBody":{"description":"Product snapshot search/filter criteria (product id, created_at, name, status, etc.). All fields must exist in the ai_shop_product_snapshots schema.","typeName":"aiShopProductSnapshots.IRequest"},"responseBody":{"description":"Paginated result of product snapshots with only actual schema fields per ai_shop_product_snapshots table.","typeName":"IPageAiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots","method":"patch"},{"specification":"Implements GET by ID for a single product snapshot record. This endpoint retrieves a product version history snapshot by its primary key (id), using the ai_shop_product_snapshots table as defined in the schema. Only fields present in the schema are allowed to be referenced or returned. No update, delete, or version rollback logic is permitted here; this is a pure detail/info endpoint.","description":"This endpoint fetches a single product snapshot/version row from the ai_shop_product_snapshots table by its id (UUID). All returned data maps strictly to actual fields present: id, ai_shop_product_id, name, description, category_id, status, created_at, updated_at. No non-existent properties or logic are involved. All fields are immutable, and there is no deleted_at or soft delete logic in this table; every read is of an immutable, append-only history record.\n\nThis endpoint is for UI detail views and audit/rollback flow support. No business logic about deletes or upserts is implemented here. All Prisma schema constraints apply strictly.","summary":"Get detail for a product snapshot/version by id (ai_shop_product_snapshots table)","parameters":[{"name":"id","description":"ID of the product snapshot to retrieve (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full product snapshot/version row per ai_shop_product_snapshots fields.","typeName":"aiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots/{id}","method":"get"},{"specification":"Implements create/insert for a new product snapshot/version row. The target is ai_shop_product_snapshots table from the Prisma schema, which strictly enforces only append (no overwrites, as per audit policy). Every field in the request body must map to a real schema column; no deleted_at, created_by, or similar fake fields allowed. The snapshot row is always a new immutable record; no soft delete, update, or patch semantics are allowed for this POST.","description":"This endpoint creates a new immutable product snapshot (version entry) in the ai_shop_product_snapshots table. All input fields must exactly correspond to ai_shop_product_snapshots schema: ai_shop_product_id, name, description, category_id, status, created_at, updated_at (or system-assigned). On success, a new row is created, representing a complete version of the product at a given moment.\n\nThis operation supports strict audit and compliance requirements (append-only). No update/delete/soft delete is permitted. No fields outside the schema may be referenced in request or response. The returned object is the full row as-inserted with system-generated fields (id, timestamps).","summary":"Create new immutable product snapshot version row (ai_shop_product_snapshots table)","parameters":[],"requestBody":{"description":"Required fields for creating a product snapshot (version). All must match ai_shop_product_snapshots columns.","typeName":"aiShopProductSnapshots.ICreate"},"responseBody":{"description":"Full snapshot row after creation, matching ai_shop_product_snapshots fields exactly.","typeName":"aiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots","method":"post"},{"specification":"Implements update/replace (PUT) for a product snapshot record, by primary key (id). Since ai_shop_product_snapshots rows are designed as immutable append-only audit records, PUT on this route must be treated as a compliance-corner-case (for correction/super-admin flow). All updatable fields must exist in the schema and only legitimate modifications allowed. No soft delete (no deleted_at) is implemented; overwriting a record is rare and logged. All non-existent fields are forbidden.","description":"This endpoint updates (typically, super-admin use or legal correction) a single product snapshot record in the ai_shop_product_snapshots table by its id (UUID). Only real schema fields are allowed in request and response (id, ai_shop_product_id, name, description, category_id, status, created_at, updated_at). No deleted_at or is_deleted exists.\n\nRegular client usage should favor audit-friendly append-only logic; however, in exceptional circumstances (audit correction or system fix), fields can be replaced via this endpoint, and must be logged and reviewed per compliance. If record does not exist, proper error is returned.","summary":"Update/replace an immutable product snapshot row (CORRECTION ONLY, ai_shop_product_snapshots table)","parameters":[{"name":"id","description":"ID of the product snapshot to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All updatable fields per ai_shop_product_snapshots schema. No fields not present in schema allowed.","typeName":"aiShopProductSnapshots.IUpdate"},"responseBody":{"description":"The updated product snapshot record, per ai_shop_product_snapshots schema.","typeName":"aiShopProductSnapshots"},"authorizationRoles":null,"path":"/aiShop/productSnapshots/{id}","method":"put"},{"specification":"Implements hard deletion for a single immutable product snapshot row by id, as defined in ai_shop_product_snapshots. There are no deleted_at or soft-delete fields present, so this operation must perform a physical hard delete (permanent removal) of the row. All field references must map directly to schema; error if not found. Return object or status reflecting post-deletion state.","description":"This endpoint permanently removes a product snapshot version row from the ai_shop_product_snapshots table by its id (UUID), as there are no soft-delete/deleted_at fields defined in the schema. This action is destructive and cannot be undone. Only actual table fields are referenced and impacted. If the row does not exist, an appropriate error is returned. This operation should be protected by authorization, as it circumvents audit/rollback guarantee.","summary":"Hard delete a product snapshot row (ai_shop_product_snapshots table)","parameters":[{"name":"id","description":"ID of the product snapshot to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productSnapshots/{id}","method":"delete"},{"specification":"Implements complex search or batch query for product images, as defined in the ai_shop_product_images table in Prisma schema. Supports only actual fields (id, ai_shop_product_id, image_uri, alt_text, position) and never refers to deleted_at or similar fields. Intended to provide paginated, filtered search results for product gallery images.","description":"This endpoint provides paginated and filtered search/query of product images from the ai_shop_product_images table. Clients can filter based on ai_shop_product_id, alt_text, or position, sort and paginate results using only fields defined in schema. No deleted_at or soft delete columns exist in product_images, so every record is treated as active unless filtered otherwise.\n\nNo modification is permitted through this endpoint. Only actual schema columns are referenced. Query is strictly read-only, serving image browsing and management UI.","summary":"List/search product gallery images (ai_shop_product_images table, paginated)","parameters":[],"requestBody":{"description":"Product image search, filter, and pagination criteria. All fields must exist in ai_shop_product_images schema.","typeName":"aiShopProductImages.IRequest"},"responseBody":{"description":"Paginated result of product images using fields from ai_shop_product_images only.","typeName":"IPageAiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages","method":"patch"},{"specification":"Implements a GET by ID/detail retrieval of a product image (ui/gallery) based on ai_shop_product_images table schema. Only uses id, ai_shop_product_id, image_uri, alt_text, and position columns - no deleted_at, created_by, or updated_by or other non-existent fields referenced. No modification allowed via GET.","description":"This endpoint retrieves a specific product image record by id (UUID) from the ai_shop_product_images table, mapped exactly to columns defined in the schema: id, ai_shop_product_id, image_uri, alt_text, position. No deleted_at or soft delete fields exist. Only detail retrieval is supported - modification or deletion must use other endpoints. All field names and return structure strictly follow the schema.","summary":"Get product image by id (ai_shop_product_images table)","parameters":[{"name":"id","description":"ID of the product image to retrieve (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of a single product image based on ai_shop_product_images fields.","typeName":"aiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages/{id}","method":"get"},{"specification":"Implements POST (creation/insertion) for new product image record in the ai_shop_product_images table. All client-provided data must correspond to real columns: ai_shop_product_id, image_uri, alt_text, position. No non-existent/soft delete fields. Returns record as created with all schema fields populated. Only insertion, never update or delete.","description":"This endpoint inserts a new product image (gallery/photo) row into the ai_shop_product_images table using only columns from the schema: ai_shop_product_id, image_uri, alt_text, position. No deleted_at or soft delete, no extraneous properties allowed. On success, a new record is created and returned, reflecting all defined schema fields. No batch or bulk operation logic included. This can be used in seller product registration, admin UI, or imports.","summary":"Create/product gallery image (ai_shop_product_images table)","parameters":[],"requestBody":{"description":"Fields required to add product image. Only schema fields accepted: ai_shop_product_id, image_uri, alt_text, position.","typeName":"aiShopProductImages.ICreate"},"responseBody":{"description":"Full product image record after creation, only fields from ai_shop_product_images.","typeName":"aiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages","method":"post"},{"specification":"Implements update/replace operation (PUT) for a specific product image entry by id. The ai_shop_product_images table supports update with only schema fields: ai_shop_product_id, image_uri, alt_text, position. No soft-delete/deleted_at or non-existent fields permitted. Returns the updated record as per schema. No batch update logic supported here.","description":"This endpoint updates an individual product image record by id (UUID), using only ai_shop_product_images fields. Permitted updatable properties: ai_shop_product_id, image_uri, alt_text, position. No soft/hard delete logic supported here. Record is replaced/updated for seller/admin correction, image changes, or similar use case.\n\nSuccessfully updated record is returned. If not found, error is returned. Only schema-documented fields allowed in input/output.","summary":"Update/replace a specific product image (ai_shop_product_images table)","parameters":[{"name":"id","description":"ID of the product image record to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable fields for a product image. Only ai_shop_product_images fields allowed.","typeName":"aiShopProductImages.IUpdate"},"responseBody":{"description":"The updated product image, with all fields from ai_shop_product_images schema.","typeName":"aiShopProductImages"},"authorizationRoles":null,"path":"/aiShop/productImages/{id}","method":"put"},{"specification":"Implements hard-delete by id for a single product image in ai_shop_product_images. No deleted_at or soft delete fields exist per schema, so row must be physically/permanently removed. No non-existent columns mentioned; if not found, error is returned. This is a destructive operation and should be protected by authorization logic (e.g., admin or seller).","description":"This endpoint permanently deletes a product image record by id (UUID) from the ai_shop_product_images table, as there is no soft delete/deleted_at field present. The row is physically removed if exists; if not, an appropriate error is sent. All logic references only columns in the schema. This operation is destructive and cannot be undone; reserved for seller/administrator use only.","summary":"Hard-delete product image by id (ai_shop_product_images table)","parameters":[{"name":"id","description":"ID of the product image to hard-delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productImages/{id}","method":"delete"},{"specification":"Implements paginated/batch query for product tag data from ai_shop_product_tags table. This endpoint only supports search, filter, and pagination logic using actual schema fields: id, ai_shop_product_id, tag_text, created_at. Returns list using only schema fields, never non-existent properties. Modifications/deletes must be done via other endpoints.","description":"This endpoint lists/searches product tags from the ai_shop_product_tags table, supporting filter (e.g., by product id, tag_text, created_at) and pagination. All fields referenced must map to the schema. Returned results include only: id, ai_shop_product_id, tag_text, created_at. No soft-delete or modification capability provided here.\n\nThis is used for management UI, search, or tag analytics. Input/output must not refer to missing columns like deleted_at or created_by.","summary":"List/search product tags (ai_shop_product_tags table, paginated)","parameters":[],"requestBody":{"description":"Product tag filter/search criteria. Only ai_shop_product_tags fields may be present.","typeName":"aiShopProductTags.IRequest"},"responseBody":{"description":"Paginated list of product tags, all fields from ai_shop_product_tags only.","typeName":"IPageAiShopProductTags"},"authorizationRoles":null,"path":"/aiShop/productTags","method":"patch"},{"specification":"Retrieve a single product tag by ID. This operation fetches details for a tag on a specific product as defined in the ai_shop_product_tags table. Only fields present in the Prisma schema are used: id (PK), ai_shop_product_id (product this tag is assigned to), tag_text (atomic tag label), and created_at (when tag created). This GET does not reference any other fields and will not include any non-existent properties. There are no soft delete fields on ai_shop_product_tags, so all returned data is current records only.","description":"This endpoint is used to fetch a specific product tag by its unique identifier from the ai_shop_product_tags table. \n\nThe response includes: id (primary key), ai_shop_product_id (foreign key to the parent product), tag_text (label text, e.g. 'eco-friendly'), and created_at (timestamp when the tag was set). The endpoint will not include any soft/hard-deletion behavior as the schema does not include fields such as deleted_at or is_deleted.\n\nError responses are provided if the tag does not exist. All fields in the response are directly matched to the database schema for accuracy and compliance.","summary":"Fetch details of a product tag from ai_shop_product_tags by ID.","parameters":[{"name":"id","description":"Target product tag's ID (UUID) from ai_shop_product_tags.id","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The product tag detail object.","typeName":"IAiShopProductTag"},"authorizationRoles":null,"path":"/aiShop/productTags/{id}","method":"get"},{"specification":"Create a new product tag for a product, as defined by the ai_shop_product_tags table. Requires a POST body matching the actual schema: ai_shop_product_id (FK to product), tag_text (the tag's string), and will automatically set created_at (timestamp). The API does not reference or manage any fields except for those present in the schema (no soft deletion, no status).","description":"This operation allows clients to create a new product tag linked to an existing product. \n\nRequest body should include: ai_shop_product_id (UUID, points to the product being tagged) and tag_text (the tag's label, string type). The created record will also have its id (UUID, primary key) and created_at timestamp generated by the database. \n\nThe endpoint will return a detailed product tag object upon success. Any attempt to include properties not present in ai_shop_product_tags (such as deletion, status, etc.) will be rejected.","summary":"Create a new product tag in ai_shop_product_tags.","parameters":[],"requestBody":{"description":"Payload for creating a new product tag. Must only include fields present in the schema: ai_shop_product_id and tag_text.","typeName":"IAiShopProductTag.ICreate"},"responseBody":{"description":"The created product tag record.","typeName":"IAiShopProductTag"},"authorizationRoles":null,"path":"/aiShop/productTags","method":"post"},{"specification":"Update an existing product tag identified by ID as represented in ai_shop_product_tags. Updatable fields are those present in the schema: ai_shop_product_id, tag_text. The updated_at field may be set automatically by the underlying system/database for auditing, but update operations should only modify user-supplied fields. Soft deletion and other fields are NOT present and must not be referenced.","description":"This endpoint updates an existing product tag given its UUID. The only fields that may be updated are those present in the ai_shop_product_tags schema: ai_shop_product_id and tag_text. The system may automatically update the updated_at timestamp as part of record modification for audit compliance, but this field is handled internally.\n\nAny fields not present in the schema are strictly excluded. No soft deletion or status modification is performed.\n\nReturns the updated product tag object as defined in the schema.","summary":"Update a product tag in ai_shop_product_tags by ID.","parameters":[{"name":"id","description":"Unique ID (UUID) of the product tag to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for updating a product tag. Only ai_shop_product_id and tag_text may be provided as per schema.","typeName":"IAiShopProductTag.IUpdate"},"responseBody":{"description":"The updated product tag record.","typeName":"IAiShopProductTag"},"authorizationRoles":null,"path":"/aiShop/productTags/{id}","method":"put"},{"specification":"Delete a product tag by its unique ID. Examining the ai_shop_product_tags schema shows there are NO soft delete fields; thus, this operation must perform a hard delete (permanent removal) of the product tag record from the database. Only present fields are referenced in the process, with no support for soft deletion logic.","description":"This API endpoint deletes a product tag with the given unique ID. Since the ai_shop_product_tags table does NOT contain soft deletion fields (no deleted_at, is_deleted, etc.), this DELETE operation performs a hard delete—the record is permanently removed from the database.\n\nAttempting to delete a non-existent product tag will yield an appropriate error. All operations reference only the actual columns of the schema and do not add or manipulate any fields outside of those present.","summary":"Hard delete a product tag from ai_shop_product_tags by ID.","parameters":[{"name":"id","description":"UUID of the target product tag to hard delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productTags/{id}","method":"delete"},{"specification":"Search and filter product import logs as defined by the ai_shop_product_import_logs table. Supports flexible retrieval with pagination, filtering, and search parameters operating only on actual fields: id, ai_shop_seller_id, imported_at, source_file, record_count, status, error_message. All fields in this operation match the schema. No deletion fields present; only retrieves current records.","description":"This endpoint retrieves a list of product import log records, supporting search, pagination, and filtering strictly on fields available in ai_shop_product_import_logs: id, ai_shop_seller_id, imported_at, source_file, record_count, status, and error_message. \n\nClient may specify search terms or filters (e.g., by seller, status, date range, etc.) only on these fields. No fields for deletion or status outside those described in the schema are referenced.\n\nResponses are paginated and contain only schema-compliant properties.","summary":"Search and paginate product import logs from ai_shop_product_import_logs.","parameters":[],"requestBody":{"description":"Optional search and pagination payload for product import logs. Accepts only column-compliant properties.","typeName":"IAiShopProductImportLog.IRequest"},"responseBody":{"description":"Paginated result of product import log records.","typeName":"IPageIAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs","method":"patch"},{"specification":"Retrieve a single product import log by ID, as defined by ai_shop_product_import_logs. Only fields defined in the schema (id, ai_shop_seller_id, imported_at, source_file, record_count, status, error_message) are referenced. There are no soft delete or status fields outside those in the schema. The operation returns a single log record matching the ID or an error.","description":"This operation fetches a product import log record by its unique ID from ai_shop_product_import_logs. Only properties that exist in the schema are included in the response: id, ai_shop_seller_id (FK to the seller who imported), imported_at, source_file, record_count, status, and error_message. \n\nSoft deletion or hard deletion concerns do not apply, as the table contains no relevant delete fields. Missing records result in an error response.","summary":"Fetch a product import log from ai_shop_product_import_logs by ID.","parameters":[{"name":"id","description":"UUID for the product import log record to fetch (ai_shop_product_import_logs.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed product import log record object.","typeName":"IAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs/{id}","method":"get"},{"specification":"Create a new product import log entry as represented in ai_shop_product_import_logs. Requires a POST body matching the schema: ai_shop_seller_id, imported_at, source_file, record_count, status, and (optionally) error_message. Only these fields may be included. Database will auto-set the new record's id.","description":"This endpoint creates a new record in ai_shop_product_import_logs. The request body must include all required fields from the schema: ai_shop_seller_id (FK), imported_at (datetime), source_file (URI string), record_count (integer), and status (string - e.g. 'pending', 'completed', 'failed'). error_message may be provided for failed imports as a nullable string.\n\nThe database will return the created log object containing all actual fields, including the generated id. No deletion or status fields outside of the schema are referenced or affected.","summary":"Create a product import log record in ai_shop_product_import_logs.","parameters":[],"requestBody":{"description":"Payload for creating a product import log. Accepts only defined schema fields.","typeName":"IAiShopProductImportLog.ICreate"},"responseBody":{"description":"Created product import log record.","typeName":"IAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs","method":"post"},{"specification":"Update an existing product import log record by ID, using the actual fields defined in ai_shop_product_import_logs. Updatable fields are: ai_shop_seller_id, imported_at, source_file, record_count, status, error_message. Soft delete is not supported and status field is only as defined. Only these fields are referenced/changed.","description":"This API updates a product import log record given its ID. Allowed updatable fields are: ai_shop_seller_id, imported_at, source_file, record_count, status, and error_message. The endpoint will not reference fields outside the schema. 'id' is path parameter and not modifiable. Returns the updated log entry (all schema-defined properties).\n\nNo deletion or special status transitions are supported in this operation; only schema-defined status and error_message are allowed.","summary":"Update a product import log record in ai_shop_product_import_logs.","parameters":[{"name":"id","description":"UUID for the product import log record being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for updating product import logs. Accepts only schema-defined updatable fields.","typeName":"IAiShopProductImportLog.IUpdate"},"responseBody":{"description":"Updated product import log record.","typeName":"IAiShopProductImportLog"},"authorizationRoles":null,"path":"/aiShop/productImportLogs/{id}","method":"put"},{"specification":"Delete a product import log record by its ID. As there are NO soft deletion fields in ai_shop_product_import_logs, this DELETE operation will permit hard deletion (permanent removal) of the record. All related operations reference only the actual schema fields.","description":"Deletes a product import log record with the specified ID. Since ai_shop_product_import_logs does not implement soft deletion fields (like deleted_at or is_deleted), this operation results in a hard delete: the log record is permanently removed from the database.\n\nNo attempt is made to update non-existent soft delete/status fields. Non-existent IDs will return error responses indicating the record is not found.","summary":"Hard delete a product import log from ai_shop_product_import_logs by ID.","parameters":[{"name":"id","description":"UUID of the product import log record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/productImportLogs/{id}","method":"delete"},{"specification":"Patch/search ai_shop_posts records with filtering and pagination. Supports searching by fields present in the schema: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. No support for soft delete on this entity.","description":"Retrieves a filtered, paginated list of bulletin board posts (ai_shop_posts) based strictly on fields present in the schema: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. \n\nClient can supply search/pagination criteria only for those fields. No deletion logic is supported, and any non-schema fields are ignored.\n\nReturns paginated response set with schema-compliant objects. All fields referenced map directly to actual columns in the Prisma schema.","summary":"Search and paginate bulletin board posts from ai_shop_posts.","parameters":[],"requestBody":{"description":"Optional search and pagination request body; accepts only fields present in ai_shop_posts.","typeName":"IAiShopPost.IRequest"},"responseBody":{"description":"Paginated result of post objects.","typeName":"IPageIAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts","method":"patch"},{"specification":"Fetch a bulletin board post by ID as stored in ai_shop_posts. Uses ONLY fields from the schema: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. No soft or hard delete is handled on fetch. Returns the requested post record or an error.","description":"Retrieves a single post by its unique ID identifier, returning all schema-defined properties: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status, created_at, updated_at. \n\nNo deletion or status logic is performed; all data matches actual schema fields.","summary":"Fetch a single bulletin board post from ai_shop_posts by ID.","parameters":[{"name":"id","description":"UUID of the bulletin post to fetch from ai_shop_posts.id.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed post object as per schema.","typeName":"IAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts/{id}","method":"get"},{"specification":"Create a new bulletin board post record in ai_shop_posts. Request body must use only fields defined in the schema: ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, channel_id, title, body, role_type, status. created_at and updated_at are managed by system. No deletion or status logic outside schema is referenced.","description":"This operation creates a new post in the ai_shop_posts table. Allowed fields are: ai_shop_customer_id (nullable), ai_shop_seller_id (nullable), ai_shop_admin_id (nullable), channel_id (required, FK), title (string), body (string, may include rich content), role_type (e.g. 'customer','seller','admin'), and status (e.g. published/draft/etc). The created post will contain id and system-managed timestamps.\n\nNo deletion logic is included. Only schema-compliant properties are accepted. Returns the full post record as just created.","summary":"Create a new bulletin board post in ai_shop_posts.","parameters":[],"requestBody":{"description":"New post creation payload, containing only schema-defined fields.","typeName":"IAiShopPost.ICreate"},"responseBody":{"description":"Created post object.","typeName":"IAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts","method":"post"},{"specification":"This API operation updates an existing post (ai_shop_posts) by its primary key, supporting title and body updates, publishing changes, or transitioning post status (such as 'draft' to 'published'). It relies strictly on fields present in the ai_shop_posts schema: id (PK, UUID), title (string), body (string), role_type (string), status (string), and updated_at (DateTime). It does NOT reference any fields not in schema, such as deleted_at or created_by. Security is enforced by role_type and authentication context, ensuring only authorized users (customer, seller, or admin as appropriate) can update posts. This operation returns the updated post on success, or an error if the id does not exist or access is denied. Hard delete or soft delete is NOT performed here. Relationship: updates an existing ai_shop_posts record; dependencies: relies on path parameter id (uuid). Validation ensures that all required fields for post updating are strictly set according to schema constraints. Related operation: DELETE /aiShop/posts/{id} will perform hard delete, as the ai_shop_posts table does not have a soft-delete field.","description":"Updates a post in the ai_shop_posts table, using the id path parameter for direct lookup and modification. The operation covers title, body, status, and role_type (if permitted by business logic), but will never reference or update any non-existent fields. Each update is timestamped via updated_at (which must be provided in requestBody). Access control ensures only permitted user role types may update a post. If the id does not match an existing post, a 404 is returned. Business logic validates new title/body per business rules. Related: hard delete is handled by DELETE /aiShop/posts/{id} as no soft-delete field exists in schema. Strict schema verification: all referenced fields must exist.","summary":"Update an ai_shop_posts record by id (PUT) — hard update, no soft-delete reference; fields: id, title, body, status, role_type, updated_at; no extraneous fields.","parameters":[{"name":"id","description":"Target ai_shop_posts record's ID (UUID) for update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated record info for target post. Only contains fields from ai_shop_posts: title, body, status, role_type, updated_at.","typeName":"IAiShopPost.IUpdate"},"responseBody":{"description":"The updated ai_shop_posts record.","typeName":"IAiShopPost"},"authorizationRoles":null,"path":"/aiShop/posts/{id}","method":"put"},{"specification":"This API operation deletes a post by its id in ai_shop_posts. According to the schema, there is NO deleted_at or is_deleted field (no soft delete), so the operation performs a hard (permanent) delete. Requires the id path parameter. This irreversibly removes a post record from the database. The operation returns a success status or error if id not found. No reference should be made to non-existent soft delete fields; no fields in the response, only standard delete confirmation. All field mentions match the schema exactly. Related: Use PUT for updates, not deletes.","description":"Permanently deletes an ai_shop_posts record. This is a hard delete — there are NO soft-delete fields (such as deleted_at or is_deleted) in ai_shop_posts. The operation requires an id (UUID) as specified in the path. On success, the record is removed from storage and will not appear in any query. Security and access control are enforced as appropriate for the current user role. If the record does not exist, a 404 response is given. No audit trail is created in ai_shop_posts (use audit log table separately).","summary":"Hard-delete an ai_shop_posts record by id ({id}); destructive remove as there are no soft-delete fields in schema.","parameters":[{"name":"id","description":"Target ai_shop_posts record's ID (UUID) for deletion.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/posts/{id}","method":"delete"},{"specification":"This API operation retrieves a list of post comments (from ai_shop_post_comments table) with optional filters or searching. Implements listing, search, and pagination; returns only fields from schema: id, post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. No deleted_at or is_deleted fields exist, so the list is always hard query. Related operations: GET /aiShop/postComments/{id} for details.","description":"Retrieves multiple ai_shop_post_comments records using patch (to enable complex search/pagination in requestBody). Returns a set of comment objects, each with only schema-defined fields. Permits searching by post_id, author ID, status, or creation/update time. Does not support soft-deleted queries (no such field in schema). Returns a paginated or filtered list. If no matching records, data array is empty.","summary":"List or search ai_shop_post_comments records, strictly using schema fields (PATCH) — advanced querying, no soft delete.","parameters":[],"requestBody":{"description":"Search or filter info for ai_shop_post_comments listing; uses only fields present in schema (no deleted_at/is_deleted support).","typeName":"IAiShopPostComment.IRequest"},"responseBody":{"description":"A paginated or filtered list of ai_shop_post_comments records.","typeName":"IPageIAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments","method":"patch"},{"specification":"Retrieves a single post comment by its id from ai_shop_post_comments. Only existing fields are referenced in the response: id, post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. There is NO soft delete or deleted_at field. Returns 404 if the ID is not found. This is a detail-get, not a list/search endpoint.","description":"Fetches a single ai_shop_post_comments record by primary key. Returns all fields specified by the schema. There are no deleted_at or is_deleted fields; response is strictly schema-compliant. Returns 404 if no record is found. Use PATCH for search/listing, POST for creation, PUT for update.","summary":"Get ai_shop_post_comments detail by id (GET) — returns schema fields only, no soft-delete reference.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_comments record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The found ai_shop_post_comments record, or 404 if not found.","typeName":"IAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments/{id}","method":"get"},{"specification":"Creates a new ai_shop_post_comments record, assigning a comment to a post or parent comment. Request body strictly limited to fields in the schema: post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. No soft delete or extra fields. Returns the new record. Security: only authenticated/comment-authorized roles may create. Related: PATCH for searching/listing, GET for detail, PUT for update.","description":"Creates a comment record in ai_shop_post_comments. Required fields: post_id, body, role_type, created_at. Optional author fields (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id) and parent_id may be supplied. Request and returned object strictly adhere to schema; no reference to deleted_at or non-existent fields. Returns the record created if successful.","summary":"Create a new ai_shop_post_comments record (POST), only valid schema fields, no soft-delete reference.","parameters":[],"requestBody":{"description":"Fields for the new post comment. Only schema fields are accepted: post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at.","typeName":"IAiShopPostComment.ICreate"},"responseBody":{"description":"The newly created ai_shop_post_comments record.","typeName":"IAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments","method":"post"},{"specification":"Updates a comment in ai_shop_post_comments by its id. Allows updating only schema-defined fields: post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, role_type, created_at, updated_at. There is NO deleted_at field (no soft/hard delete here). Strictly validates that only these fields are referenced. Returns the updated comment. PUT method: full object update. Related: use DELETE for hard delete, PATCH for listing, POST for create.","description":"Updates a single ai_shop_post_comments record by id. Only accepts valid fields from the schema; no reference to deleted_at, created_by, or any extra fields. Requires id in path, updates all supplied fields as per schema. Responds with the updated object. Responds with 404 if not found or unauthorized. ","summary":"Update ai_shop_post_comments by id (PUT) — only supports updating schema fields; full object update; no soft delete.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_comments record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The complete object to update the ai_shop_post_comments record, using only fields LITERALLY present in schema.","typeName":"IAiShopPostComment.IUpdate"},"responseBody":{"description":"The updated ai_shop_post_comments record (all schema fields).","typeName":"IAiShopPostComment"},"authorizationRoles":null,"path":"/aiShop/postComments/{id}","method":"put"},{"specification":"Deletes a comment from ai_shop_post_comments by id. No soft delete or 'deleted_at' field exists in this table, so DELETE is a hard delete (permanent removal). Only requires id in the path. On success, comment is permanently erased; 404 if not found. No soft/hard delete field is used. Operation effect is irreversible; comment cannot be recovered.","description":"Hard-deletes an ai_shop_post_comments record. As there is no soft delete field (no deleted_at column), this operation permanently removes the record. Requires only id in path; responds with confirmation or 404 if not found. Follows strict schema and ERD: deletes the entire comment from the database. Does not allow for soft deletion or reversible operation.","summary":"Hard-delete ai_shop_post_comments by id (DELETE) — irreversible removal because no soft-delete field exists.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_comments record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/postComments/{id}","method":"delete"},{"specification":"List/search endpoint for ai_shop_post_attachments, supporting search, pagination, and advanced filtering. Patch method allows for passing requestBody as complex query parameters. Only schema-defined fields (id, post_id, file_id, name, type, size) are relevant. There are no deleted_at or soft-delete fields; responses and queries are hard. Returns a paginated or filtered set of attachment records. Related: GET for details, POST for creation, PUT for update, DELETE for removal.","description":"Returns a filtered or paginated list of ai_shop_post_attachments. Only the following fields are possible in search results: id, post_id, file_id, name, type, size. Pagination and filter settings are passed in request body (IAiShopPostAttachment.IRequest). Returns a collection under strict schema compliance (no references to deleted_at or extra fields). There is no soft deletion logic. Related: use GET for details, DELETE for hard delete.","summary":"List/search ai_shop_post_attachments (PATCH) — supports only real schema fields; patch for advanced querying.","parameters":[],"requestBody":{"description":"IAiShopPostAttachment.IRequest: complex query for paginated/filterable list, matching only schema fields. No soft-delete option available.","typeName":"IAiShopPostAttachment.IRequest"},"responseBody":{"description":"A paginated/filterable list of ai_shop_post_attachments records, strictly using schema fields.","typeName":"IPageIAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments","method":"patch"},{"specification":"GET endpoint for retrieving a single ai_shop_post_attachments record by id. Only fields allowed in response are those literally present in schema: id, post_id, file_id, name, type, size. No soft-deletion field is available; 404 if not found. Related operations: PATCH (list/paginate), POST (create), PUT (update), DELETE (hard-delete).","description":"Retrieves a single ai_shop_post_attachments record by id. Only schema fields are present. Returns 404 if not found. Does not reference non-existent soft-delete or deleted_at fields. Related: PATCH for list, POST for creation, PUT for update, DELETE for hard removal.","summary":"Get ai_shop_post_attachments detail by id (GET), supports only schema fields, 404 if not found.","parameters":[{"name":"id","description":"The id (UUID) of ai_shop_post_attachments record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_post_attachments record for given id, or 404 if not exists.","typeName":"IAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments/{id}","method":"get"},{"specification":"POST endpoint to create a new ai_shop_post_attachments record. Only fields from schema are accepted (id, post_id, file_id, name, type, size). No deleted_at/soft delete/is_deleted fields are referenced or affected; creates a new attachment for an existing post. Dependencies: post_id (FK), file_id (FK) must reference existing records, error if not. Security validation on parent post/file is handled in business logic. Returns the new ai_shop_post_attachments record with all schema fields populated.","description":"Creates a new record in ai_shop_post_attachments, returning the created record. Only schema fields (id, post_id, file_id, name, type, size) are allowed; other extra fields are rejected. No soft/hard delete reference. Business validation ensures post_id/file_id refer to existing records. Related: PATCH for batch/pagination, GET for detail, PUT for update, DELETE for hard removal.","summary":"Create ai_shop_post_attachments (POST), creates record with only schema-compliant fields, no soft-delete reference.","parameters":[],"requestBody":{"description":"Attachment creation data — id optional or auto-generated; post_id, file_id, name, type, size required. Only schema fields accepted.","typeName":"IAiShopPostAttachment.ICreate"},"responseBody":{"description":"The newly created ai_shop_post_attachments record, with only schema-compliant fields.","typeName":"IAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments","method":"post"},{"specification":"PUT endpoint for updating an existing ai_shop_post_attachments record by id. Only fields from schema (id, post_id, file_id, name, type, size) are used. No soft delete or deleted_at logic. All field references must exist in the schema (no extra fields). Returns the updated attachment on success, 404 if id not found. Related: PATCH for search, POST create, DELETE hard remove.","description":"Updates an ai_shop_post_attachments record by id; only valid schema fields (id, post_id, file_id, name, type, size) are valid for update. No reference to soft/hard delete field. PUT is a full update. If id is not found, returns 404. Security handled at business layer. Related: PATCH for searching, POST for create, DELETE for hard remove.","summary":"Update ai_shop_post_attachments by id (PUT), updates schema fields only (no deleted_at), 404 if not found.","parameters":[{"name":"id","description":"The id (UUID) of the ai_shop_post_attachments record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attachment data to update (full replacement, all required schema fields for attachment).","typeName":"IAiShopPostAttachment.IUpdate"},"responseBody":{"description":"The updated ai_shop_post_attachments record (schema fields only).","typeName":"IAiShopPostAttachment"},"authorizationRoles":null,"path":"/aiShop/postAttachments/{id}","method":"put"},{"specification":"DELETE endpoint for removing an ai_shop_post_attachments record by id. There is no soft delete field; deletion is permanent. Only parameter required is id in the path; operation cannot be reversed (no deleted_at field in schema). Returns 204 or confirmation on success, 404 if id does not exist. Related: use PATCH for list, POST for creation, PUT for update.","description":"Permanently deletes an ai_shop_post_attachments record. No soft/hard deleted_at/is_deleted field is present; this is a hard delete per schema. Operation removes the record from all queries and storage. If the record is not found, returns 404. There is no way to restore deleted records from this endpoint.","summary":"Hard delete ai_shop_post_attachments by id (DELETE) — destructive; no soft delete; no deleted_at in schema.","parameters":[{"name":"id","description":"The id (UUID) of ai_shop_post_attachments record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/postAttachments/{id}","method":"delete"},{"specification":"Implements searching/listing API for ai_shop_post_snapshots table, which holds version histories of bulletin board posts, including immutable snapshots of title, body, role_type, status, snapshot_reason, and associated foreign keys (post/customer/seller/admin), as per requirements for audit, rollback, and moderation review. Returns paginated or filtered list of post snapshots for admins or moderators.","description":"This operation provides a searchable, paginated, and filterable list of all post snapshots stored in the ai_shop_post_snapshots table. A snapshot records the exact state of a bulletin board post each time it is edited or moderated, including the title, body content, role_type (customer/seller/admin at the time), status, snapshot_reason, and associated references (post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id).\n\nThis endpoint facilitates compliance, rollback capabilities, and auditing by allowing users (with appropriate permissions) to access a complete version history for any given post, filtered by post_id, author, date ranges, or snapshot_reason. No non-existent fields (such as created_by, updated_by, deleted_at) are referenced; only the exact properties in the schema are utilized.\n\nSecurity and access must be controlled: only admins, moderators, or relevant role owners may access full histories. Requests can include filtering, pagination, and sorting controls (see ai_shop_post_snapshots indexes for supported queries). If the entity is deleted, snapshots persist for audit purposes, as there is no deleted_at on this table.\n\nSoft deletion is NOT applicable, as there is no deleted_at on ai_shop_post_snapshots; all data retrieval is live. This operation is primarily used alongside GET/PUT/DELETE for audit trails and rollback panels.","summary":"List and search post snapshots in ai_shop_post_snapshots (bulletin post version history/audit).","parameters":[],"requestBody":{"description":"Search and filtering options for ai_shop_post_snapshots (supports filters on post_id, author, reason, status, created_at, updated_at, pagination and sort).","typeName":"IAiShopPostSnapshot.IRequest"},"responseBody":{"description":"Paginated or filtered list of post snapshot records matching search.","typeName":"IPageAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots","method":"patch"},{"specification":"Implements detail retrieval API for single post snapshot in ai_shop_post_snapshots table (bulletin audit/versioning), uniquely identified by id (UUID).","description":"Returns detailed information about a single post snapshot from the ai_shop_post_snapshots table, providing all versioned fields: title, body, category, status, snapshot_reason, author references (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, role_type), and immutable timestamps. The operation is designed for audit panels, compliance dashboards, or rollback UI, and is accessible only to authorized users (e.g., admins, owners).\n\nIt accesses ONLY exact properties defined in ai_shop_post_snapshots. No deleted_at/soft deletion is referenced since the table doesn't include that field, so retrieval is always for live (extant) snapshot data. Error handling covers not found (404) or permission denied (403).\n\nThis operation is typically used after searching/listing in PATCH operation to examine a specific post revision in detail.","summary":"Retrieve a specific post snapshot's full version data from ai_shop_post_snapshots by id.","parameters":[{"name":"id","description":"Target post snapshot's unique identifier (UUID, primary key) in ai_shop_post_snapshots.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed post snapshot data for the specified id.","typeName":"IAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots/{id}","method":"get"},{"specification":"Implements CREATE operation for ai_shop_post_snapshots, recording a new immutable version of a post state (title, body, role_type, status, snapshot_reason, author/admin references, timestamping, and post linkage), strictly following schema field definitions.","description":"Creates a new immutable post snapshot record in ai_shop_post_snapshots, capturing all versioned data for audit, rollback, or content moderation. The POST body must contain only schema-defined fields: title, body, category_id, status, snapshot_reason, references to author (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id), role_type, post_id, and timestamps as per schema.\n\nThis action is typically invoked automatically when a post is edited or a moderation event occurs, generating version history. There is no soft delete on this table, so snapshots are persistent and must be stored precisely as submitted. Security rules restrict creation to the application (on post change), admins, or authorized systems.\n\nResponse includes the full persisted record as confirmation. No deleted_at or similar field: record is permanently written. API is not used for updating/deleting existing snapshots.","summary":"Create a new post snapshot/version in ai_shop_post_snapshots for edit/moderation audit/rollback.","parameters":[],"requestBody":{"description":"All required data for post snapshot creation (title, body, post_id, author/admin references, status, snapshot_reason, timestamps).","typeName":"IAiShopPostSnapshot.ICreate"},"responseBody":{"description":"The created post snapshot/version record (all schema fields returned).","typeName":"IAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots","method":"post"},{"specification":"Implements UPDATE (full replace) for ai_shop_post_snapshots, allowing only fields in schema to be updated for an existing version (by id). Used for correcting audit errors or moderation correction only; typically, post snapshots are append-only except for exceptional compliance needs.","description":"Updates (overwrites/replaces) an existing post snapshot in ai_shop_post_snapshots identified by id (UUID). Only fields defined in the schema may be updated, such as title, body, role_type, status, snapshot_reason, author/admin FK, and post_id. Typically reserved for exceptional correction (compliance, moderation correction, or audit—snapshots are usually immutable in business logic).\n\nAll updates are restricted to schema fields—no deleted_at or meta fields beyond what exists in ai_shop_post_snapshots. Security: only compliance auditors or system maintainers may perform this operation, and all changes must be logged in audit logs. Returns the full updated record, or error on not found/forbidden/update conflict.","summary":"Update an existing post snapshot (rare, audit/compliance fix) in ai_shop_post_snapshots by id.","parameters":[{"name":"id","description":"Target post snapshot's unique identifier (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All updatable data for post snapshot, strictly using schema fields (title, body, post_id, authors, status, snapshot_reason, etc).","typeName":"IAiShopPostSnapshot.IUpdate"},"responseBody":{"description":"The updated post snapshot object after modification.","typeName":"IAiShopPostSnapshot"},"authorizationRoles":null,"path":"/aiShop/postSnapshots/{id}","method":"put"},{"specification":"Implements DELETE (hard delete) for ai_shop_post_snapshots. Since the entity does NOT have a deleted_at or soft delete field, this operation physically removes the record from the DB by id. Used only in strict audit/compliance/maintenance scenarios.","description":"Permanently deletes a post snapshot from ai_shop_post_snapshots by id (UUID). Because this table does NOT define a deleted_at or soft delete marker, deletion is hard/permanent: the record will be fully erased from the database. This operation is allowed only for strict compliance, maintenance, or admin-level correction; business logic generally dictates that snapshots are append-only, not deleted.\n\nSecurity: only high-privilege users should access this operation, and all deletions must be auditable and justified. Attempts to delete a non-existent record result in NOT FOUND. No soft deletion logic applies.","summary":"Permanently delete a post snapshot/version from ai_shop_post_snapshots (no soft delete present).","parameters":[{"name":"id","description":"Target post snapshot's unique identifier (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of hard deletion for the specified id (no object returned, just status).","typeName":"IStandardDeleteResult"},"authorizationRoles":null,"path":"/aiShop/postSnapshots/{id}","method":"delete"},{"specification":"Implements list/search operation (PATCH) for ai_shop_post_recommendations, which stores AI-powered or rule-based post personalization records. Returns paginated or filtered array of records for admin dashboards or recommendation analytics.","description":"Returns a searchable, paginated, and filterable list of post recommendations from ai_shop_post_recommendations, each representing a personalized content recommendation for a customer, seller, or global audience according to AI or campaign logic. Attributes include post_id, customer/seller references, target_type, reason, and created_at.\n\nThis API is used for admin panels, analytics reviews, or AI/marketing automation backends. Only fields specified in ai_shop_post_recommendations are included in queries and results. No soft delete is present (no deleted_at), so all entries are live records. Security: access must be restricted to admin or AI system roles as required. This complements GET/PUT/DELETE for individual post recommendations.","summary":"List/search post recommendation records in ai_shop_post_recommendations (AI/personalization audit/log).","parameters":[],"requestBody":{"description":"Paging, filtering, or search options using only schema fields (post_id, customer_id, seller_id, target_type, reason, created_at).","typeName":"IAiShopPostRecommendation.IRequest"},"responseBody":{"description":"Paginated or filtered array of ai_shop_post_recommendations matching request.","typeName":"IPageAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations","method":"patch"},{"specification":"Implements detail retrieval (GET) for ai_shop_post_recommendations entity by id. Returns complete recommendation record for analytics, debugging, or dashboard display.","description":"Retrieves the detail for a specific post recommendation entry in ai_shop_post_recommendations, uniquely identified by id. Returns all schema-defined fields such as post_id, ai_shop_customer_id, ai_shop_seller_id, target_type, reason, and created_at, enabling admin/AI/analytics users to examine why and how this post was recommended to a given audience.\n\nStrict schema field compliance is observed—no deleted_at or unrelated fields are referenced. This operation is mainly used for audit, personalization debugging, and dashboard deep-linking. Returns 404 if not found, 403 if unauthorized.","summary":"Retrieve detail of a specific post recommendation (AI-driven or campaign) from ai_shop_post_recommendations by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) for post recommendation in ai_shop_post_recommendations.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified ai_shop_post_recommendations record with all defined fields returned.","typeName":"IAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations/{id}","method":"get"},{"specification":"Implements CREATE (POST) operation for ai_shop_post_recommendations. Used to log new AI/campaign/post recommendation events as personalized targeting records. Stores only fields present in schema (post_id, customer/seller reference, target_type, reason, created_at).","description":"Creates a new post recommendation record in ai_shop_post_recommendations, capturing the details of an AI-driven or manually triggered recommendation: post_id, audience type (customer, seller, global, etc), optional references to ai_shop_customer_id or ai_shop_seller_id, reason, and created_at.\n\nData submitted must strictly adhere to the available schema fields with no soft deletion or extra metadata. This operation is intended for AI pipelines, analytics, or admin interfaces to create new targeting events. Security: may be restricted to automation or admin roles. The response provides the full record as confirmation.","summary":"Create a new post recommendation entry in ai_shop_post_recommendations (AI/campaign/personalization log).","parameters":[],"requestBody":{"description":"Schema-compliant data for a new post recommendation: references to post, recipient, audience type, and reason.","typeName":"IAiShopPostRecommendation.ICreate"},"responseBody":{"description":"The created ai_shop_post_recommendations record, including auto-generated ID and timestamps.","typeName":"IAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations","method":"post"},{"specification":"Implements UPDATE (PUT) operation for ai_shop_post_recommendations by id (UUID). Permits changes only to allowed schema fields. Used for updating targeting, correcting audience, or campaign adjustment.","description":"Updates an existing post recommendation record in ai_shop_post_recommendations identified by id. All updated fields must be present in the schema (post_id, customer/seller references, target_type, reason, created_at). Usually used to correct or adjust AI targeting, campaign status, or audience assignments for a recommendation event.\n\nBecause this table has no deleted_at or soft deletion capability, this API physically updates the fields. Security: access must be restricted to admins or automated AI/campaign systems. Returns the updated record for confirmation, or error if not found/forbidden.","summary":"Update a post recommendation entry in ai_shop_post_recommendations (for campaign/AI fix) by id.","parameters":[{"name":"id","description":"Unique post recommendation entry ID (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All modifiable data fields for a post recommendation (must exist in schema; post_id, recipient, audience, reason, created_at, etc).","typeName":"IAiShopPostRecommendation.IUpdate"},"responseBody":{"description":"The updated ai_shop_post_recommendations record.","typeName":"IAiShopPostRecommendation"},"authorizationRoles":null,"path":"/aiShop/postRecommendations/{id}","method":"put"},{"specification":"Implements DELETE (hard) for ai_shop_post_recommendations entity. Since table lacks any soft deletion/deleted_at, removes record completely.","description":"Permanently deletes a post recommendation record from ai_shop_post_recommendations by id. There is no soft delete or deleted_at for this entity; deletion is immediate and full removal from the database. Used for removing obsolete, incorrect, or test recommendation log events. Security: should be restricted to admins or maintenance roles.\n\nDeletes only one record (by id) and will return a standard confirmation; if not found, 404 returned. Always leaves audit log externally.","summary":"Hard delete a post recommendation from ai_shop_post_recommendations (no soft delete present).","parameters":[{"name":"id","description":"Unique recommendation entry ID (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of delete operation for post recommendation by id.","typeName":"IStandardDeleteResult"},"authorizationRoles":null,"path":"/aiShop/postRecommendations/{id}","method":"delete"},{"specification":"Implements list/search (PATCH) operation for ai_shop_post_reports, supporting moderation, abuse reporting, and audit across the bulletin board system. Returns paginated or filtered array of report records (each referencing post, reporter, reason, moderation outcome if any, and timestamps), as per schema fields.","description":"Provides list/search functionality for ai_shop_post_reports, allowing admin/moderation systems to query, filter, and page through report records. Each report is associated with a post (post_id), reporter (customer, seller, admin with optional foreign keys), reason, and may reference a moderation action. Only schema fields are included—no deleted_at/soft deletion is present on this entity.\n\nThis endpoint is the basis for moderation analytics/audit or dashboard paneling. Soft deletion is not applicable. Security: restricted to admins and moderation users. Used together with detail GET and moderation endpoints for triage workflows.","summary":"List/search all bulletin post reports for moderation/audit (ai_shop_post_reports).","parameters":[],"requestBody":{"description":"Search, filter, or page options (post_id, reporter references, reason, moderation_action_id, created_at, etc per schema).","typeName":"IAiShopPostReport.IRequest"},"responseBody":{"description":"Paginated or filtered list of ai_shop_post_reports matching options.","typeName":"IPageAiShopPostReport"},"authorizationRoles":null,"path":"/aiShop/postReports","method":"patch"},{"specification":"Implements detail (GET) operation for a single ai_shop_post_reports record, supporting moderation view/audit workflow. Returns all schema fields: references, reason, and optionally moderation outcome, timestamps, etc.","description":"Retrieves a single ai_shop_post_reports record, identified by unique id (UUID). Returns all defined schema fields: post_id, customer/seller/admin reporter references, moderation_action_id, reason, and created_at. Soft deletion is NOT present in this table; record is always live until hard deleted by a separate process.\n\nMainly used for moderation audit panels, compliance dashboards, and reporting tools. If the record does not exist or access is denied, appropriate error is returned.","summary":"Get a single bulletin post report's details from ai_shop_post_reports by id.","parameters":[{"name":"id","description":"Unique ai_shop_post_reports identifier (UUID, primary key).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All fields of the ai_shop_post_reports record with the given id.","typeName":"IAiShopPostReport"},"authorizationRoles":null,"path":"/aiShop/postReports/{id}","method":"get"},{"specification":"Create a new ai_shop_post_reports record, which tracks a user-submitted report against a post for abuse, toxicity, or moderation request. This table holds an F-key to the reported post, optional F-keys to the reporting customer/seller/admin, an optional link to the moderation action (nullable), a textual reason, and a created_at timestamp. All fields referenced must exist in the Prisma schema (id, post_id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, moderation_action_id, reason, created_at). This endpoint is for registering new reports and complies with 3NF as per requirements.","description":"This operation allows any authenticated actor (customer, seller, or admin) to file a report against a board post (ai_shop_posts) for content moderation, abuse, policy violation, or audit purposes. The required fields are the target post's ID (post_id), at least one reporter ID (ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id), a reason for the report, and a generated created_at timestamp. The moderation_action_id link is nullable and not set on creation.\n\nAll provided fields reflect the actual columns in ai_shop_post_reports:\n- id: generated automatically by the system\n- post_id: must exist on creation and match ai_shop_posts.id\n- ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id: at least one required (actor polymorphism)\n- moderation_action_id: nullable; omitted on creation\n- reason: string, required (explains why the post is reported)\n- created_at: timestamp of report creation\n\nNo fields are referenced that do not exist in schema. On valid creation, a new ai_shop_post_reports row is registered for auditability, with exact field mapping to Prisma schema.","summary":"Create a new post report in ai_shop_post_reports.","parameters":[],"requestBody":{"description":"New post report data for ai_shop_post_reports creation.","typeName":"IAiShopPostReports.ICreate"},"responseBody":{"description":"The created post report entity.","typeName":"IAiShopPostReports"},"authorizationRoles":null,"path":"/aiShop/postReports","method":"post"},{"specification":"Update an existing ai_shop_post_reports record, as per 3NF schema. This operation allows updating only existing fields in schema (reason, moderation_action_id, reporter IDs if needed). The entity is identified strictly by id (primary key) as in schema; non-existent, redundant, or virtual fields are never referenced.","description":"Updates a report in ai_shop_post_reports by its primary key (id). Valid fields for update are those in schema: reason, ai_shop_customer_id, ai_shop_seller_id, ai_shop_admin_id, moderation_action_id. Every reference is validated at the application layer to ensure referential integrity. Reporter fields are polymorphic, only edit if actor identity was misattributed; moderation_action_id can be linked if the report is addressed; reason can be amended for clarification.\n\nNo references to deleted_at, created_by, updated_by, or any fields not present in the schema. All updates are constrained to column definitions in ai_shop_post_reports. Audit fields (created_at) are not changeable; id identifies the row.\n\nRequest and response strictly adhere to schema—any attempt to update fields outside those defined in Prisma is rejected. Returns the up-to-date report entity on success.","summary":"Update an existing post report in ai_shop_post_reports.","parameters":[{"name":"id","description":"Target post report's ID (ai_shop_post_reports.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the post report entity.","typeName":"IAiShopPostReports.IUpdate"},"responseBody":{"description":"The updated post report entity.","typeName":"IAiShopPostReports"},"authorizationRoles":null,"path":"/aiShop/postReports/{id}","method":"put"},{"specification":"Delete (hard delete) an existing ai_shop_post_reports record by primary key (id). Since the Prisma schema for ai_shop_post_reports does NOT include a deleted_at or is_deleted field, this is a permanent, physical deletion. All field and behavior descriptions are limited to schema-defined columns. Endpoint is only permitted on records identified by id, with no reference to soft-delete or extra audit fields.","description":"Deletes a post report entity in ai_shop_post_reports using its id. Because there is NO deleted_at, is_deleted, or equivalent soft-delete field in the schema, this operation irreversibly removes the record from the database. As per the schema, only id is required as input; all deletions are hard deletes.\n\nOperation never references or modifies any out-of-schema, redundant, or derived columns. This operation is for permanent removal of the target post report. It is irreversible and does not alter any audit trail fields on the entity itself. Uses standard referential integrity checks per schema.","summary":"Permanently delete a post report from ai_shop_post_reports (hard delete).","parameters":[{"name":"id","description":"Target post report's ID (ai_shop_post_reports.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/postReports/{id}","method":"delete"},{"specification":"List ai_shop_comment_attachments with query/search/filtering. Supports advanced filtering, pagination, and sorting as necessary. The ai_shop_comment_attachments table links attachments to post comments (by comment_id) and underlying file metadata (by file_id); all fields referenced must physically exist in schema: id, comment_id, file_id, name, type, size. No references made to deleted_at, created_by, or any absent field.","description":"Retrieves a paginated, optionally-filtered list of comment attachment records (ai_shop_comment_attachments). Supports searching by fields defined in the schema: comment_id, file_id, name, type, and range/sorting by size. References to deleted_at, created_by, etc. are never made. The response is a paged list of attested, schema-valid attachment metadata rows directly from ai_shop_comment_attachments, as per required 3NF normalization for file relationship tracking.","summary":"List comment attachments from ai_shop_comment_attachments with search, paging.","parameters":[],"requestBody":{"description":"Attachment list search and filter criteria.","typeName":"IAiShopCommentAttachments.IRequest"},"responseBody":{"description":"Paginated list of comment attachment records.","typeName":"IPageAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments","method":"patch"},{"specification":"Read details of a single ai_shop_comment_attachments record by its primary key. Every value in the response is mapped strictly to fields in the Prisma schema: id, comment_id, file_id, name, type, size. No reference made to created_at, deleted_at, or any non-existent column.","description":"Returns a single comment attachment entity from ai_shop_comment_attachments by its id. Response contains only those fields defined in the schema: id, comment_id, file_id, name, type, size. This endpoint never references additional fields beyond those present in the Prisma definition. Used in detail views or file retrieval UIs. Returns 404 if id is not found.","summary":"Get a single comment attachment entity (ai_shop_comment_attachments) by id.","parameters":[{"name":"id","description":"Target comment attachment's ID (ai_shop_comment_attachments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the requested comment attachment entity.","typeName":"IAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments/{id}","method":"get"},{"specification":"Create a new ai_shop_comment_attachments record, which ties an attachment to a comment and a physical file. The POST body must only include fields present in the schema: comment_id, file_id, name, type, size. No attribute is referenced beyond those defined in ai_shop_comment_attachments. Implements normalized upload/file association as per requirements.","description":"This operation creates a new comment attachment, linking a file asset to a post comment using atomic, schema-defined fields: comment_id (reference to ai_shop_post_comments), file_id (reference to ai_shop_files), name (display name), type (MIME/type string), and size (file size in bytes). No other fields or derived/soft-deletion logic is referenced.\n\nThe response returns the created entity, exactly as stored in ai_shop_comment_attachments. On creation, referential integrity checks ensure comment_id and file_id both exist. No deleted_at, updated_at, or creator-tracking fields are ever referenced, per schema definition.","summary":"Create a new comment attachment (ai_shop_comment_attachments record).","parameters":[],"requestBody":{"description":"Data for comment attachment creation.","typeName":"IAiShopCommentAttachments.ICreate"},"responseBody":{"description":"The created comment attachment entity.","typeName":"IAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments","method":"post"},{"specification":"Update (edit) an existing ai_shop_comment_attachments record, as identified by primary key (id). Only those fields in the Prisma schema are permitted for updating: comment_id, file_id, name, type, size. No soft deletion, creator audit, or timestamp update logic is referenced unless stated in schema.","description":"Modifies an existing comment attachment entity (ai_shop_comment_attachments). Permits editing all mutable fields as defined in schema: comment_id, file_id, name, type, size. The record is identified by id. All update logic restricts changes to fields present in the schema, with referential integrity enforced on referenced ids. Any attempt to update a non-schema field is an error. Response is the fully updated entity, always matching the schema definition.","summary":"Update a comment attachment entity (ai_shop_comment_attachments).","parameters":[{"name":"id","description":"Target comment attachment's ID (ai_shop_comment_attachments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the attachment record.","typeName":"IAiShopCommentAttachments.IUpdate"},"responseBody":{"description":"The updated comment attachment record.","typeName":"IAiShopCommentAttachments"},"authorizationRoles":null,"path":"/aiShop/commentAttachments/{id}","method":"put"},{"specification":"Delete a single ai_shop_comment_attachments record by id. The table does NOT include any soft delete, deleted_at, or equivalent fields, so this is a hard/persistent removal. Only the id is referenced as an input, and no non-existent fields or audit behavior is described.","description":"Permanently deletes a comment attachment row in ai_shop_comment_attachments by id. This is a hard delete; since there is no deleted_at or is_deleted flag in the Prisma schema for this table, the record is physically removed from the database. Only references properties defined in the schema; referential/audit consistency maintained by application logic elsewhere.","summary":"Hard delete a comment attachment record from ai_shop_comment_attachments.","parameters":[{"name":"id","description":"Target comment attachment's ID (ai_shop_comment_attachments.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/commentAttachments/{id}","method":"delete"},{"specification":"Query (search, list) ai_shop_moderation_actions records with advanced filter and pagination. Table implements moderation logs—audit trails for post/comment actions. All referenced fields MUST exist: id, moderator_id (admin), post_id, comment_id, action_type, reason, created_at. This endpoint enables admins to find actions by actor, target, type, time, or reason. No virtual/derived/soft-deleted fields are referenced.","description":"Returns a paginated, filtered list of moderation actions (ai_shop_moderation_actions) based entirely on fields in the schema: id, moderator_id (admin actor), post_id (optional), comment_id (optional), action_type, reason, created_at. No soft-delete, updated_by, or similar attributes are referenced. Filters are applied only to schema-defined attributes using application-level logic. Each row in the response is directly mapped from the database and all output fields exist in the schema.","summary":"List ai_shop_moderation_actions entities with filtering, paging, search.","parameters":[],"requestBody":{"description":"Filter/search parameters for moderation action log listing.","typeName":"IAiShopModerationActions.IRequest"},"responseBody":{"description":"Paginated response listing moderation action records.","typeName":"IPageAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions","method":"patch"},{"specification":"Retrieve full ai_shop_moderation_actions entity details by its primary key. Only uses fields actually present: id, moderator_id, post_id, comment_id, action_type, reason, created_at. Returns a 404 if id not present. No auditing, creator, or update fields are referenced beyond schema definition.","description":"Gets a moderation action record by id, mapped exactly to the schema's columns: id, moderator_id (admin), post_id (optional), comment_id (optional), action_type, reason, created_at. The endpoint never references or returns attributes not found in the schema. This operation is typically part of audit trail or admin dashboard logic.","summary":"Get moderation action record (ai_shop_moderation_actions) by id.","parameters":[{"name":"id","description":"Target moderation action's ID (ai_shop_moderation_actions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Moderation action entity details as stored in the schema.","typeName":"IAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions/{id}","method":"get"},{"specification":"Create a new moderation action log entry in ai_shop_moderation_actions, which tracks post/comment moderation events. Only schema-defined fields are valid: moderator_id (admin actor), post_id (optional), comment_id (optional), action_type, reason, created_at. No soft delete, update, or derived columns. Referenced records should maintain referential integrity.","description":"Creates a record in ai_shop_moderation_actions to log a new moderation event. The schema requires moderator_id (admin id), action_type, and reason; post_id and comment_id are optional for scoping to specific post/comment targets. All referenced ids are validated for schema and referential compliance. No fields other than those present (including created_at, populated by audit logic) are referenced or written. Response returns the created moderation action entity as per schema.","summary":"Create a new moderation action record in ai_shop_moderation_actions.","parameters":[],"requestBody":{"description":"Moderation action log data for creation operation.","typeName":"IAiShopModerationActions.ICreate"},"responseBody":{"description":"The created moderation action record.","typeName":"IAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions","method":"post"},{"specification":"Update an existing ai_shop_moderation_actions record identified by id. Fields permitted for update are only those in the schema: moderator_id (admin), post_id, comment_id, action_type, reason. No fields are referenced that do not exist. Updates are audit-tracked elsewhere as there is no updated_at or similar column in schema.","description":"Updates a moderation action in ai_shop_moderation_actions by id, allowing changes only to: moderator_id, post_id (optional), comment_id (optional), action_type, reason. Each reference is validated; any references to non-existent fields cause rejection. The response includes the full updated entity. No update-at, deleted_at, or audit fields exist or are referenced in request or response.","summary":"Update an existing moderation action record in ai_shop_moderation_actions.","parameters":[{"name":"id","description":"Target moderation action's ID (ai_shop_moderation_actions.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Editable fields for the moderation action entity.","typeName":"IAiShopModerationActions.IUpdate"},"responseBody":{"description":"The updated moderation action entity.","typeName":"IAiShopModerationActions"},"authorizationRoles":null,"path":"/aiShop/moderationActions/{id}","method":"put"},{"specification":"Delete a moderation action by its unique identifier. This endpoint is associated with the ai_shop_moderation_actions table in the Prisma schema, which tracks moderation responses by admins for posts or comments for audit and compliance purposes. The operation will perform a hard delete, as the schema does NOT have any soft delete fields such as deleted_at. The target record corresponding to the given ID will be permanently removed from the dataset. Only the id field (primary key) is used for identifying the moderation action to delete. Related audit trails and moderation logs will remain unaffected by this action, preserving historical compliance data. Security considerations dictate that only authorized administrators should have access, and appropriate audit logging should be enforced at the application layer.","description":"Deletes a moderation action entity referenced by its id from the ai_shop_moderation_actions table. This action is irreversible and permanently removes the record, as no soft delete field (such as deleted_at) exists in the schema. The operation requires specifying the moderation action's id in the URL path, which is a string UUID. All other fields—such as moderator_id, post_id, comment_id, action_type, and reason—are not necessary for deletion. After successful deletion, the related moderation action is no longer accessible or restorable via API, although audit records referencing this id will remain for compliance. Ensure that deletion events are logged for audit purposes, in fulfillment of moderation and compliance requirements. The endpoint is designed for admin-level use cases and should not be exposed to general users or non-administrative clients.\n\nIf you need to query for existing moderation actions prior to deletion, use a corresponding GET or PATCH operation on the same entity.","summary":"Hard delete a moderation action from ai_shop_moderation_actions by id.","parameters":[{"name":"id","description":"Target moderation action's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/moderationActions/{id}","method":"delete"},{"specification":"List ai_shop_carts entities matching search/filter criteria. This PATCH endpoint is based on the ai_shop_carts table, which represents persistent user and guest shopping carts, including status (active, abandoned, converted), customer or session association, and audit fields. Supports pagination, sorting, and multi-criteria filtering (e.g., by status, customer_id, creation time). Returns a paginated response, allowing admin or user dashboards to list and manage carts. The request body is expected to use aiShopCarts.IRequest for search/filter parameters, supporting precise queries.","description":"Performs a filtered and paginated search for carts in the ai_shop_carts table. This endpoint supports searching by cart status (active, abandoned, converted), associated customer_id, session_id, and date ranges using a structured request body (aiShopCarts.IRequest). Results include all atomic fields: id, ai_shop_customer_id (nullable), ai_shop_cart_session_id (nullable), status, created_at, updated_at, abandoned_at (nullable). Useful for integration with front-end dashboards or admin panels, enabling efficient management and reporting across all user carts in the platform. Results are returned in aiShopCarts.IPage format for pagination compliance.","summary":"Paginated and filtered cart listing for ai_shop_carts.","parameters":[],"requestBody":{"description":"Search, filter, and pagination info for listing ai_shop_carts records.","typeName":"aiShopCarts.IRequest"},"responseBody":{"description":"Paginated cart results with all atomic fields from ai_shop_carts.","typeName":"aiShopCarts.IPage"},"authorizationRoles":null,"path":"/aiShop/carts","method":"patch"},{"specification":"Get a single cart's details by its unique identifier (id) from the ai_shop_carts table. The primary key id is used to retrieve the target cart, which contains details such as status, created_at, updated_at, and associations with a customer or guest session. The endpoint provides core audit and cart state data for use cases like cart recovery, detailed view in checkout flow, or admin inspection.","description":"Retrieves all atomic, normalized details for a single cart (ai_shop_carts), identified by its id (UUID). Response fields include: id, ai_shop_customer_id (nullable), ai_shop_cart_session_id (nullable), status, created_at, updated_at, abandoned_at (nullable). No additional or denormalized fields are included. The operation is suitable for customer, admin, or guest flows that require full state and audit information for a shopping cart. Ensures referential integrity for related details such as customer or cart session (which can be resolved via their respective endpoints). Errors are returned if the id is not found.","summary":"Get one cart by id from ai_shop_carts.","parameters":[{"name":"id","description":"Target cart's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed single cart record from ai_shop_carts table.","typeName":"aiShopCarts"},"authorizationRoles":null,"path":"/aiShop/carts/{id}","method":"get"},{"specification":"Create a new shopping cart in the ai_shop_carts table. This endpoint implements cart creation for registered users or guests (session-based), storing audit and association fields as specified in the requirements and schema. Accepts all necessary cart attributes via aiShopCarts.ICreate request body—such as customer ID, cart session ID (mutually exclusive), and status.","description":"Creates a new ai_shop_carts record using POST. The request body (aiShopCarts.ICreate) must include all required cart attributes: either ai_shop_customer_id (for registered users) or ai_shop_cart_session_id (for guests), plus the cart status (active, abandoned, etc.). Also supports optional fields: created_at, updated_at, abandoned_at, if used for custom flows or legacy import. Does not accept fields not present in the schema. Returns the full details of the newly created cart as aiShopCarts, including assigned id and any auto-generated audit fields. Business logic enforces mutual exclusivity of customer/session, and API should validate these constraints accordingly.","summary":"Create a new cart record in ai_shop_carts.","parameters":[],"requestBody":{"description":"Cart creation info based on ai_shop_carts schema.","typeName":"aiShopCarts.ICreate"},"responseBody":{"description":"Full cart record after creation.","typeName":"aiShopCarts"},"authorizationRoles":null,"path":"/aiShop/carts","method":"post"},{"specification":"Update an existing shopping cart's attributes by id, in the ai_shop_carts table. This endpoint enables changes to cart association (e.g., linking session to customer on login), status flag (active, abandoned, etc.), or audit fields as described in schema fields. All updatable attributes are atomic and normalized. The target is identified by the cart's id (UUID).","description":"Updates an existing cart in ai_shop_carts using PUT. The cart is specified by id (path parameter, UUID). The request body (aiShopCarts.IUpdate) may update: ai_shop_customer_id, ai_shop_cart_session_id, status, abandoned_at, as well as audit fields such as updated_at. Mutually exclusive logic between customer_id and session_id must be enforced by the API handler. Only the fields defined in the schema ai_shop_carts are accepted for update; any extra fields will be rejected. Returns the full, updated cart record (aiShopCarts). If the target record does not exist, returns an error. Audit requirements mandate that updates to cart status, association, or abandonment timestamp are all properly logged for compliance and analytics.","summary":"Update an existing cart by id in ai_shop_carts.","parameters":[{"name":"id","description":"Target cart's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable cart fields as defined in ai_shop_carts schema.","typeName":"aiShopCarts.IUpdate"},"responseBody":{"description":"Updated cart record after modification.","typeName":"aiShopCarts"},"authorizationRoles":null,"path":"/aiShop/carts/{id}","method":"put"},{"specification":"Delete a shopping cart by its id from ai_shop_carts. This endpoint performs a hard delete, as the schema has no soft delete or archived field (no deleted_at or is_deleted). The operation is auditable, removing the cart record entirely from the table. Key integrity is maintained, but audit logs or related analytics will continue to reference the deleted cart's id for traceability. Only the id field (UUID primary key) is required to target the cart.","description":"Deletes a cart from ai_shop_carts by its id (UUID). As the schema does not include soft delete capabilities, this action will permanently erase the target cart from the database. All associated atomic fields are removed, but references from audit trails or analytics may persist to provide historical traceability. The delete operation is irreversible. Business logic should enforce that only non-converted carts (not yet checked out as orders) can be deleted; post-order deletion may cause data integrity issues but this logic is not enforced at DB level. Errors will be returned if the specified id is not found. Ensure user authorization and audit logging are handled at the API platform layer.","summary":"Hard delete a cart by id from ai_shop_carts.","parameters":[{"name":"id","description":"Target cart's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/carts/{id}","method":"delete"},{"specification":"Paginated, filtered list carts items (ai_shop_cart_items) matching specific search criteria. Based on ai_shop_cart_items schema, each record represents a product/variant line item in a customer's or guest's shopping cart. Allows querying by cart id, customer, product id, variant id, added_at time, or quantity. Supports pagination and sorting. The request body uses aiShopCartItems.IRequest for search parameters.","description":"Retrieves a paginated and filtered list of cart items from ai_shop_cart_items. Allows search by ai_shop_cart_id (parent cart), ai_shop_product_id, ai_shop_product_variant_id, quantity, and added_at/updated_at. Request body (aiShopCartItems.IRequest) defines the search and pagination logic. Useful for building shopping cart detail views, analytics, and admin tools where itemized product lines are needed. Results are returned in aiShopCartItems.IPage format, with atomic fields only (id, ai_shop_cart_id, ai_shop_product_id, ai_shop_product_variant_id, quantity, added_at, updated_at).","summary":"List and paginate cart item records from ai_shop_cart_items.","parameters":[],"requestBody":{"description":"Search, filter, and pagination info for cart items listing.","typeName":"aiShopCartItems.IRequest"},"responseBody":{"description":"Paginated cart item list response based on ai_shop_cart_items.","typeName":"aiShopCartItems.IPage"},"authorizationRoles":null,"path":"/aiShop/cartItems","method":"patch"},{"specification":"Get a single cart item by id from ai_shop_cart_items. Each cart item record identifies a specific product/variant, quantity, parent cart, and timestamps for auditing. The endpoint targets a single cart item using the id (UUID). Used for viewing/editing a particular item in customer or admin flows.","description":"Fetches details of a single cart item from ai_shop_cart_items, identified by the id path parameter (UUID). The response includes the atomic normalized fields: id, ai_shop_cart_id, ai_shop_product_id, ai_shop_product_variant_id, quantity, added_at, updated_at. The fetched record provides a snapshot of a single cart line for front-end display or editing within shopping cart management workflows. Referenced products and variants should be fetched separately as needed. Errors will be returned if the id is not found or invalid.","summary":"Get one cart item by id from ai_shop_cart_items.","parameters":[{"name":"id","description":"Target cart item's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the specified cart item from ai_shop_cart_items.","typeName":"aiShopCartItems"},"authorizationRoles":null,"path":"/aiShop/cartItems/{id}","method":"get"},{"specification":"Create a new cart item entity in ai_shop_cart_items. The endpoint receives all attributes needed to add a product/variant to an existing cart, such as cart ID, product ID, variant ID, and quantity. This fulfills the platform's requirement for precise shopping cart itemization and auditing. The creation request body must follow the aiShopCartItems.ICreate schema.","description":"Creates a new cart item in ai_shop_cart_items, using request body (aiShopCartItems.ICreate) with all required fields: ai_shop_cart_id (UUID of the parent cart), ai_shop_product_id, ai_shop_product_variant_id, and quantity. Optional audit/timestamp fields can also be provided if mandated by the interface. Response returns full aiShopCartItems record, including assigned id, and all audit fields (added_at, updated_at). Product details are not denormalized and should be queried separately as needed. Business logic should check for uniqueness constraints (cart cannot have duplicate product-variant lines). Errors are returned for invalid references or duplicate lines.","summary":"Add a new cart item record to ai_shop_cart_items.","parameters":[],"requestBody":{"description":"Creation info for the new cart item (product/variant/quantity).","typeName":"aiShopCartItems.ICreate"},"responseBody":{"description":"Full newly created cart item record.","typeName":"aiShopCartItems"},"authorizationRoles":null,"path":"/aiShop/cartItems","method":"post"},{"specification":"Update an existing cart item in ai_shop_cart_items by id. Allows changing the product's variant, quantity, or cart association, reflecting direct user edits or cart synchronization logic. Requires path id (UUID) to uniquely identify the cart item. Request body follows aiShopCartItems.IUpdate for permissible editable fields.","description":"Updates a cart item in ai_shop_cart_items, with id as the path parameter. The request body (aiShopCartItems.IUpdate) allows updating ai_shop_cart_id, ai_shop_product_id, ai_shop_product_variant_id, and quantity, as well as audit fields (updated_at). Product/variant updates must obey platform logic against duplicating cart lines. Response returns the complete updated aiShopCartItems record. Errors are returned for invalid id, reference violations, or attempted duplication of unique lines. Timestamps and audit requirements must be applied at the API service layer.","summary":"Update a cart item by id in ai_shop_cart_items.","parameters":[{"name":"id","description":"Target cart item's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable cart item fields as per ai_shop_cart_items schema.","typeName":"aiShopCartItems.IUpdate"},"responseBody":{"description":"Updated cart item record after modification.","typeName":"aiShopCartItems"},"authorizationRoles":null,"path":"/aiShop/cartItems/{id}","method":"put"},{"specification":"Delete a cart item from ai_shop_cart_items by its id. This operation is a hard delete, as there is no soft delete field in the schema. The action is used in cart management flows for customers, guest sessions, or admin intervention. Only the id path parameter is required for permanent removal. No extra fields are referenced.","description":"Deletes a cart item from ai_shop_cart_items using the id path parameter (UUID). This is a permanent delete operation—no deleted_at or is_deleted exist in the schema, so the record is fully removed. Business logic should ensure cart validity after deletion; orphaned or empty carts should be handled appropriately in consuming services. The operation is irreversible, and any cart summary or analytics logic downstream must account for instant data removal. Errors are returned if the record doesn't exist or is already deleted.","summary":"Hard delete a cart item by id from ai_shop_cart_items.","parameters":[{"name":"id","description":"Target cart item's id (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/cartItems/{id}","method":"delete"},{"specification":"Paginated, filtered search for ai_shop_cart_sessions, representing shopping cart sessions for guest users. Enables dashboard, analytics, admin, or API-group querying of session-based cart flows. The PATCH method allows for advanced searching by creation/update time, session_token, or other atomic fields as specified in ai_shop_cart_sessions schema. Returns a paginated response (aiShopCartSessions.IPage).","description":"Returns a paginated and filtered list of shopping cart session records from the ai_shop_cart_sessions table, as per supplied search criteria in the request body (aiShopCartSessions.IRequest). Supports filtering by session_token, created_at, updated_at, and provides all normalized fields in each record. Used for admin monitoring, analytics, troubleshooting cart session flows, or merging guest-to-user carts on login. Output in aiShopCartSessions.IPage, with all audit fields, for direct integration with paging-based UI or BI dashboards.","summary":"List/search guest cart sessions from ai_shop_cart_sessions with pagination.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for ai_shop_cart_sessions.","typeName":"aiShopCartSessions.IRequest"},"responseBody":{"description":"Paginated list of cart session records from ai_shop_cart_sessions.","typeName":"aiShopCartSessions.IPage"},"authorizationRoles":null,"path":"/aiShop/cartSessions","method":"patch"},{"specification":"Retrieve a specific shopping cart session entity using its ID. This endpoint accesses the ai_shop_cart_sessions table, which contains session-linked cart information—including session_token (unique for guest carts), created_at, and updated_at. Only these fields and relations exist in this table, with no soft delete or deleted_at field present. This operation returns precise details about a single cart session, supporting flows such as cart migration or restoration for unauthenticated users. This endpoint is needed for reading guest cart data based on a session ID, e.g., to verify session-token state during shopping cart recovery.","description":"This operation retrieves a single ai_shop_cart_sessions record by its unique identifier. The ai_shop_cart_sessions table consists of the following fields: id (primary key), session_token (unique guest session identifier), created_at, and updated_at. There are no deleted_at or is_deleted fields; thus, only existing records are returned, and deleted sessions will be permanently unavailable (hard delete applies at deletion). This endpoint is used for accessing guest cart session data for cross-session cart merging, audit, or forensic purposes. Since there is no soft delete, record lookup will fail for permanently removed session tokens. Security should be applied so that only authorized server processes or the owning user/session can retrieve this object. Typical error: 404 if session not found.","summary":"Get a specific cart session from ai_shop_cart_sessions by ID.","parameters":[{"name":"id","description":"Unique identifier of the cart session in ai_shop_cart_sessions table.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Session data matching a single ai_shop_cart_sessions record.","typeName":"IAiShopCartSession"},"authorizationRoles":null,"path":"/aiShop/cartSessions/{id}","method":"get"},{"specification":"Create a new cart session object for guest users in the ai_shop_cart_sessions table. The only required fields for creation are session_token, and creation/update timestamps are automatically managed by the system. This endpoint supports guest user flows for persistent cart storage. There is no soft delete field on the entity; deletion removes the record entirely (hard delete).","description":"This operation creates a new guest-oriented shopping cart session by inserting a record into ai_shop_cart_sessions. The required field is session_token (a unique identifier for the guest user/session); created_at and updated_at are managed automatically by the system. This design enables anonymous shopping carts for visitors without logins. The table does not track any deleted or is_deleted fields; thus, sessions are not recoverable after deletion. Only genuine, system-generated session_tokens should be allowed. Security should restrict abuse and rate of session creation. Typical error: duplicate session_token (conflict).","summary":"Create a cart session in ai_shop_cart_sessions (guest cart container).","parameters":[],"requestBody":{"description":"Payload to create a guest cart session (session_token required).","typeName":"IAiShopCartSession.ICreate"},"responseBody":{"description":"Newly created cart session data.","typeName":"IAiShopCartSession"},"authorizationRoles":null,"path":"/aiShop/cartSessions","method":"post"},{"specification":"Update (replace) the data for an existing cart session by its unique ID in the ai_shop_cart_sessions table. The table includes: id, session_token, created_at, updated_at. There are no deleted_at or is_deleted columns; deleted objects are permanently removed. Update can change the session_token or refresh timestamps but cannot recover deleted sessions.","description":"This operation updates the information for an existing cart session in ai_shop_cart_sessions, identified by its primary key. Fields include session_token and updated_at (for session renewal). The entity does not support soft delete; if the session was deleted, no recovery is possible (404 on missing record). This operation should be restricted to valid session renewals to avoid hijacking/takeover. There are no additional fields outside the schema. Typical error: no matching session, 409 (conflict) for duplicate session_token.","summary":"Update a cart session in ai_shop_cart_sessions by ID.","parameters":[{"name":"id","description":"Unique identifier for the cart session to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for cart session update (session_token allowed).","typeName":"IAiShopCartSession.IUpdate"},"responseBody":{"description":"Updated cart session object.","typeName":"IAiShopCartSession"},"authorizationRoles":null,"path":"/aiShop/cartSessions/{id}","method":"put"},{"specification":"Delete (permanently remove) a cart session by its unique identifier from the ai_shop_cart_sessions table. This model does NOT include any deleted_at or soft delete field; removal is a hard delete with permanent loss of all cart session data.","description":"This operation deletes a cart session record from ai_shop_cart_sessions using the primary key id. The schema for this entity lacks soft delete capabilities, so the deletion will be permanent and unrecoverable. Fields in the entity consist ONLY of id, session_token, created_at, updated_at. This operation is used to clean up guest sessions or expired carts. Once deleted, the cart session and its relations will be lost forever. Clients/user-agents must take caution when calling this operation. Typical error: 404 if id does not exist.","summary":"Hard delete a cart session from ai_shop_cart_sessions by its ID.","parameters":[{"name":"id","description":"Unique identifier for the cart session to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/cartSessions/{id}","method":"delete"},{"specification":"Retrieve a list of orders from the ai_shop_orders table using complex filter/search logic. The table contains primary order records: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note, and deleted_at (for soft deletion). This endpoint supports paginated, filtered, and/or sorted queries across the entity. Filtering can include status, customer, seller, order_number, or date ranges. Only records without deleted_at set (null) should be considered active orders in most business logic, but inclusion rules depend on request logic.","description":"This PATCH endpoint enables filtered, paginated, and/or sorted retrieval of ai_shop_orders records. Supported query input can include filtering by order_number, status, ai_shop_customer_id, ai_shop_seller_id, and date ranges (using submitted_at or updated_at). The ai_shop_orders table includes a deleted_at field (DateTime nullable) for soft deletion; standard queries should exclude orders with deleted_at set, unless explicitly searched (e.g., for audit or admin recovery). The endpoint enables clients to retrieve page-wise results, adaptable for reporting, UI dashboards, and admin analytics. Typical errors include invalid filter values or requesting pages beyond available data.","summary":"Query/search ai_shop_orders with filters (list endpoint, supports pagination).","parameters":[],"requestBody":{"description":"Query, filter, and/or pagination information for order list retrieval.","typeName":"IAiShopOrder.IRequest"},"responseBody":{"description":"Paginated set of matching order records.","typeName":"IPageAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders","method":"patch"},{"specification":"Retrieve a single order from ai_shop_orders using its unique identifier. The table fields are: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note, deleted_at (nullable for soft delete). When deleted_at is set, the record should be considered soft-deleted and not visible to normal users, but may be accessible to authorized admin clients. This endpoint is used for display, analytics, or workflow actions on a specific order.","description":"This operation fetches the details of an ai_shop_orders record using its primary key. The table's fields are: id, ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note, deleted_at (nullable). If the deleted_at field is non-null, the order is soft deleted and not part of standard business flows, except for audit or admin investigation endpoints. The endpoint is essential for order detail screens and audit trail purposes. Typical error: 404 if the order is missing or has been soft deleted.","summary":"Get a specific order from ai_shop_orders by ID, honors soft delete (deleted_at).","parameters":[{"name":"id","description":"Primary key UUID for the target order record in ai_shop_orders.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Order record from ai_shop_orders.","typeName":"IAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders/{id}","method":"get"},{"specification":"Insert a new order in the ai_shop_orders table by customer action (checkout). This table includes soft delete (deleted_at), but insert only uses actual input fields: ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number, status, submitted_at, updated_at, payment_method, customer_memo, admin_note. The inserted order is active and visible. Id is generated. Soft deletion is only relevant on later delete actions.","description":"Creates a new ai_shop_orders record, representing a customer checkout or manual admin insertion. Required fields: ai_shop_customer_id, ai_shop_seller_id, ai_shop_cart_id, order_number (must be unique), status, submitted_at, updated_at, payment_method (e.g., 'card'), with optional customer_memo and admin_note. The deleted_at field is not used on insert (remains null, indicating an active order). Security should validate references for customer, seller, and cart. This operation enables actual order placement or external order ingest by admin. Typical errors include duplicate order_number, missing foreign keys, or validation failure.","summary":"Create a new ai_shop_orders record (order placement).","parameters":[],"requestBody":{"description":"Order creation request, with all necessary and optional fields except id/deleted_at.","typeName":"IAiShopOrder.ICreate"},"responseBody":{"description":"The newly created order object.","typeName":"IAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders","method":"post"},{"specification":"Update (replace) an order's record in ai_shop_orders, using the entity's primary key. Supports updating order_number, status, payment_method, customer_memo, admin_note, and related fields. If the record's deleted_at is non-null, the update should be rejected as the record is considered soft deleted. The endpoint does not handle partial field updates—full replacement/payload only.","description":"This operation fully updates an ai_shop_orders record, replacing values for order_number, status, payment_method, customer_memo, admin_note, and similar fields. Fields not present in the schema are not supported. If deleted_at is non-null, the order should be considered soft deleted and not eligible for update unless specifically allowed for admin recovery workflows. Typical errors include updates to soft deleted or missing orders, validation failures, or uniqueness conflict on order_number.","summary":"Full update of ai_shop_orders record (by ID), forbidden if soft deleted (deleted_at set).","parameters":[{"name":"id","description":"Primary key UUID for the target order in ai_shop_orders.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All fields for the updated order (matching ai_shop_orders schema, cannot update deleted_at).","typeName":"IAiShopOrder.IUpdate"},"responseBody":{"description":"Updated order object after replacement.","typeName":"IAiShopOrder"},"authorizationRoles":null,"path":"/aiShop/orders/{id}","method":"put"},{"specification":"Soft delete an order from ai_shop_orders by setting deleted_at to the current timestamp. The schema includes a nullable deleted_at column for this purpose. On successful invocation, the row will not be returned in standard business queries, but is retained for audit/log analysis.","description":"This operation performs a soft delete on an ai_shop_orders record by setting its deleted_at field (timestamp) to the current time. The field deleted_at is nullable, and its presence (non-null) indicates the order is soft-deleted for compliance, audit, and recovery. Hard deletes are not supported for this entity. After invoking this endpoint, the row is kept for recovery or audit, but excluded from all user/standard business pipelines. Typical errors: trying to delete an already soft-deleted or non-existent record (404).","summary":"Soft delete an order (ai_shop_orders) by ID (sets deleted_at).","parameters":[{"name":"id","description":"Primary key UUID for the order to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orders/{id}","method":"delete"},{"specification":"Search multiple order items from ai_shop_order_items using filtered/paginated logic (complex retrieval). This model contains id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, seller_memo. No deleted_at or is_deleted field exists; all deletions are hard deletes. List endpoint supports filtering by order, product, and other allowed fields, as well as pagination for reporting/UI purposes.","description":"This PATCH operation retrieves a filtered and/or paginated list of ai_shop_order_items records. Fields available in the model: id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, seller_memo. There is no soft delete or deleted_at/is_deleted field; missing items after deletion are hard-removed. Filtering is possible by associated order or product IDs and other business criteria. Suitable for analytics, reporting, or per-order detail views. Typical errors: invalid filters or requesting non-existent pages.","summary":"Query/search ai_shop_order_items with filters (paginated order line-item retrieval).","parameters":[],"requestBody":{"description":"Query, search, or pagination request to retrieve order items list.","typeName":"IAiShopOrderItem.IRequest"},"responseBody":{"description":"Paginated result set of order item records.","typeName":"IPageAiShopOrderItem"},"authorizationRoles":null,"path":"/aiShop/orderItems","method":"patch"},{"specification":"Get a single ai_shop_order_items record by its unique identifier. This entity has no deleted_at or is_deleted columns, so deletions are permanent (hard delete). The fields in ai_shop_order_items are id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, and seller_memo. Returns the precise order item detail for a single purchase line item in an order.","description":"This GET operation returns full detail for a single ai_shop_order_items row, identified by its primary key id. Fields: id, ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, seller_memo. No deleted_at/is_deleted in this entity, so deleted rows are unrecoverable. Used for per-line detail screens, audit, or forensic analysis. Security: only actors with order-level or line-level access should call this endpoint. Typical error: not found/404 if missing or deleted.","summary":"Get order item details by ID from ai_shop_order_items (no soft delete; hard delete only).","parameters":[{"name":"id","description":"UUID primary key for the order item record in ai_shop_order_items.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_order_items detail object.","typeName":"IAiShopOrderItem"},"authorizationRoles":null,"path":"/aiShop/orderItems/{id}","method":"get"},{"specification":"Create a new order item entry in ai_shop_order_items. This table has mandatory fields: ai_shop_order_id, ai_shop_product_id, product_name, quantity, unit_price, currency. Optionally, ai_shop_product_variant_id, variant_name, seller_memo. The entity is fully normalized and includes NO soft deletion; deletions are permanent (hard delete). Used as part of order management, either by the platform during order placement or manual admin intervention. Id is auto-generated.","description":"This POST operation inserts a new atomic order line item (ai_shop_order_items record). Required: ai_shop_order_id, ai_shop_product_id, product_name, quantity, unit_price, currency. Optional: ai_shop_product_variant_id, variant_name, seller_memo. There is no soft delete field, so any deletion after insertion is a hard delete. All business and referential constraints should be enforced externally. Used by business logic handling order insert/update workflows and rare admin cases for retroactive order fix-up. Typical error: invalid FK references or duplicate composite keys.","summary":"Create order item in ai_shop_order_items (one order line/entry).","parameters":[],"requestBody":{"description":"Payload for order item creation. All required and optional fields except id.","typeName":"IAiShopOrderItem.ICreate"},"responseBody":{"description":"The newly inserted order item record.","typeName":"IAiShopOrderItem"},"authorizationRoles":null,"path":"/aiShop/orderItems","method":"post"},{"specification":"Update an existing order item (ai_shop_order_items) by order item ID. This operation allows modification of properties such as quantity, unit price, variant information, and memo fields. It references only the fields present in the ai_shop_order_items schema, such as ai_shop_order_id, ai_shop_product_id, ai_shop_product_variant_id, product_name, variant_name, quantity, unit_price, currency, and seller_memo. There are no soft delete fields in this entity; updates are strictly on the fields defined. This endpoint is used when the details of a specific order item need to be changed after initial creation (e.g., quantity adjustment, correcting pricing, or updating memo fields). The function will validate all input to ensure proper references and data integrity. Related endpoints include creation (POST), retrieval (GET), and hard delete (DELETE).","description":"This endpoint supports full update of a single order item's properties in the ai_shop_order_items table. Updateable fields are limited to those actually present in the schema, notably: ai_shop_order_id (order FK), ai_shop_product_id (product FK), ai_shop_product_variant_id (nullable SKU/variant FK), product_name, variant_name (nullable), quantity, unit_price (float), currency, and seller_memo (nullable memo for the seller). There are no soft delete fields (e.g., deleted_at), so the focus is on updating business-relevant atomic fields only. Security: Only authorized users (typically the customer, seller, or admin of the order) can update the order item. The relation between entities is strictly enforced (all FKs must be valid). Any invalid or missing data will result in validation errors with descriptive feedback. Business logic prohibits modification of completed or fully paid orders unless specific admin permission is granted. All related changes are logged for compliance. The behavior and fields for this endpoint are strictly dictated by the Prisma schema and do not involve any unlisted fields or logic.","summary":"Update an order item (ai_shop_order_items) by its ID.","parameters":[{"name":"id","description":"Target order item ID","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated values for the order item. Only accepts valid fields for ai_shop_order_items.","typeName":"IAiShopOrderItems.IUpdate"},"responseBody":{"description":"The updated order item returned after successful update.","typeName":"IAiShopOrderItems"},"authorizationRoles":null,"path":"/aiShop/orderItems/{id}","method":"put"},{"specification":"Delete an existing order item by its ID from ai_shop_order_items. As there are no soft delete fields (such as deleted_at or is_deleted) defined in the schema, this endpoint performs a hard delete, resulting in permanent removal of the order item record from the database. It strictly enforces referential integrity as defined in the schema; attempts to delete an item referenced by other entities may result in error. This should only be done by users with appropriate permissions, and usually when the order is in an editable/reversible state.","description":"Permanently deletes an order item record by its primary key in the ai_shop_order_items table. As there is no soft delete logic (no deleted_at or similar field in the schema), the operation erases the row from the database. This operation is to be used carefully and typically restricted to cases where data removal is appropriate, such as cancellation before payment or admin removal for error correction. The API will reject attempts to delete items from completed or locked orders. The operation logs the removal as part of compliance/audit requirements but does not retain the row data. Related endpoints: retrieval (GET), update (PUT), and creation (POST).","summary":"Delete an order item (ai_shop_order_items) by its ID; this is a hard delete.","parameters":[{"name":"id","description":"Target order item ID to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderItems/{id}","method":"delete"},{"specification":"Retrieve a paginated, filterable list of order status history records from ai_shop_order_status_histories. Used for auditing changes and tracing the status change timeline for one or more orders. Supports searching by order ID, admin ID, date range, and status transitions (from_status, to_status). Underlying DB schema: ai_shop_order_status_histories, which only contains actual change history, no soft delete fields. The endpoint should provide efficient querying and ordering of results for admin, seller, or customer audit purposes.","description":"Fetches a list of order status change records from ai_shop_order_status_histories based strictly on fields in the schema: ai_shop_order_id (FK), changed_by_admin_id (nullable FK), from_status, to_status, changed_at, change_reason (nullable). The operation supports filtering (e.g., by order, admin, date) and paginates the results. This endpoint enables compliance and traceability for all workflow state changes. There are no soft/hard delete nuances as this is a purely audit/history table and only select is permitted. Error handling includes invalid filter or pagination parameters; permissions depend on user role/context. This endpoint acts as a foundation for full lifecycle order tracking in the marketplace.","summary":"List and search order status change history records (ai_shop_order_status_histories).","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_order_status_histories list retrieval. Only allows filtering by schema fields (e.g., order ID, date range).","typeName":"IAiShopOrderStatusHistories.IRequest"},"responseBody":{"description":"Paginated, filterable list of order status history records.","typeName":"IPageIAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories","method":"patch"},{"specification":"Get the detail record for a single order status change by its ID from ai_shop_order_status_histories. Returns all the tracked fields for the specified record, such as ai_shop_order_id (FK), changed_by_admin_id (FK), from_status, to_status, changed_at, and change_reason. This supports audit workflows and single-record traceability. The ID is the primary unique identifier; there are no soft delete semantics in this purely historical table.","description":"Retrieves an order status change record from ai_shop_order_status_histories given its ID. Returns from_status, to_status, referenced order/admin, timestamp, and other schema fields. API will only return data for a valid existing record, else will return a 404 not found. This endpoint is used for deep audit trail viewing, compliance audit, and reconstructing order/process transitions. No delete/update semantics are involved as this is an immutable audit/history table.","summary":"Get a single order status history record by ID (ai_shop_order_status_histories).","parameters":[{"name":"id","description":"Order status history record ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detail record for the order status change.","typeName":"IAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories/{id}","method":"get"},{"specification":"Create a new order status history record in ai_shop_order_status_histories. This table records each change in an order status for full auditability and compliance. The payload must include all required schema fields: ai_shop_order_id (FK), changed_by_admin_id (nullable FK), from_status, to_status, changed_at, and any optional change_reason. The operation strictly follows the schema structure—no soft delete or update fields exist for this entity. Upon successful creation, the new history record is returned.","description":"Creates and saves a new order status history record in ai_shop_order_status_histories. The request body must provide valid data for all the schema fields. This operation is to be performed whenever an order status transition occurs that needs to be logged for traceability (pending → paid, shipped → delivered, etc). API validates that FKs are valid and no extraneous fields are provided. No deleted_at or updated_at fields exist in this table: only the audit-relevant data per the schema. Typical API behavior: returns the full created record with server-generated ID and timestamps. Used by order-processing, workflow automation, and admin workflows.","summary":"Create a new order status history record (ai_shop_order_status_histories).","parameters":[],"requestBody":{"description":"Body for creating a new status history record—must strictly follow ai_shop_order_status_histories schema fields.","typeName":"IAiShopOrderStatusHistories.ICreate"},"responseBody":{"description":"The newly created order status history record.","typeName":"IAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories","method":"post"},{"specification":"Update an order status history record in ai_shop_order_status_histories by its ID. Allows modification of change_reason or other editable fields as specified in the schema. The entity only records atomic change history (from_status, to_status, etc.), with no soft delete or updated_at fields. ID parameter references the status history record to be modified. This endpoint is typically restricted to admin workflows when a correction or note must be added to a prior status change audit row.","description":"Updates an existing order status history record by unique ID. Permitted updates include change_reason (nullable) or correcting the references (admin, order) if entered in error. Only fields in ai_shop_order_status_histories can be set on update (ai_shop_order_id, changed_by_admin_id, from_status, to_status, changed_at, change_reason). API enforces referential integrity for all FKs and validates the update against the immutable/atomic nature of audit trails. No soft delete or updated_at logic is present. Normally, status history records are immutable, but controlled corrections may be allowed as a business exception.","summary":"Update an order status history record by ID (ai_shop_order_status_histories).","parameters":[{"name":"id","description":"Order status history record ID to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the order status history record—must match ai_shop_order_status_histories schema only.","typeName":"IAiShopOrderStatusHistories.IUpdate"},"responseBody":{"description":"The updated order status history record.","typeName":"IAiShopOrderStatusHistories"},"authorizationRoles":null,"path":"/aiShop/orderStatusHistories/{id}","method":"put"},{"specification":"Delete an order status history record by ID from ai_shop_order_status_histories. No soft delete fields (deleted_at/is_deleted) exist in this entity; this operation performs a hard delete, permanently removing the row from the audit table. Deletions should only be performed by system admins and for exceptional correction purposes, never as part of routine workflow. This removal is permanent, so use with caution.","description":"Permanently deletes an order status history record from ai_shop_order_status_histories based on its unique ID. As no soft deletion is supported (no deleted_at field), this is a hard delete operation and removes all trace of the row from future audit queries. Should only be performed with strict business justification and audit logging. API validates ID existence before deletion, and referential integrity is enforced per schema relationships. Related endpoints: read (GET), create (POST), update (PUT).","summary":"Delete an order status history record by ID (ai_shop_order_status_histories) - hard delete only.","parameters":[{"name":"id","description":"Order status history record ID to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderStatusHistories/{id}","method":"delete"},{"specification":"Retrieve a paginated, filterable list of order refund records from ai_shop_order_refunds. This allows admins, customers, and sellers to query status and detail of refunds, optionally by order, customer, refund status, or date. The schema permits filtering on ai_shop_order_id, requested_by_customer_id, refund_status, requested_at, processed_at. This endpoint strictly returns schema-compliant objects and does not support soft deletion (no deleted_at or similar field present).","description":"Fetches a list of refund records from ai_shop_order_refunds with advanced filtering and pagination, based strictly on the existing schema. Filterable fields include ai_shop_order_id, requested_by_customer_id, refund_status, requested_at, processed_at, and admin_note. The result schema returns only fields defined for ai_shop_order_refunds, as per Prisma schema. Used for administration, audit trail, and user history purposes. Validation errors will be provided if filters or pagination parameters are invalid. Permission to see refunds is based on user role and order relationship. No soft delete capabilities are involved; only read is allowed from this endpoint.","summary":"List and search order refund records (ai_shop_order_refunds).","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_order_refunds list retrieval. Only allows filtering by schema-defined fields.","typeName":"IAiShopOrderRefunds.IRequest"},"responseBody":{"description":"Paginated and filterable list of order refund records.","typeName":"IPageIAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds","method":"patch"},{"specification":"Get a single order refund record from ai_shop_order_refunds by its unique ID. The return fields include all data present in the schema: ai_shop_order_id (FK), requested_by_customer_id (FK), refund_reason, refund_status, requested_at, processed_at, admin_note. The primary key is used for precise row identification; no soft delete is present in this table. Used in admin review, customer self-service, seller audit, and compliance scenarios. Returns 404 if the record is not found.","description":"Retrieves a detailed order refund record from ai_shop_order_refunds by ID. Only the precise schema-defined fields are returned. The endpoint is strictly for returning the state and progress of a requested refund. Any missing or invalid ID results in not found. No soft/hard delete logic is applicable on this endpoint; only select is supported. API returns details for use in UI, reporting, compliance, and workflow dashboards.","summary":"Get detail for a single order refund record by ID (ai_shop_order_refunds).","parameters":[{"name":"id","description":"Order refund record ID","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The single order refund record for the provided ID.","typeName":"IAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds/{id}","method":"get"},{"specification":"Create a new order refund record in ai_shop_order_refunds. This inserts an atomic entry for a refund request or process on a specific order and customer. All required fields per schema (ai_shop_order_id, requested_by_customer_id, refund_reason, refund_status, requested_at, processed_at, admin_note) must be supplied in the body. The request is validated for referential integrity, proper status values, and business rules. The database does not track soft delete or update semantics for this entity. Upon success, returns the created refund entry.","description":"Creates and returns a new entry in ai_shop_order_refunds with the provided field values, strictly according to schema specification. Accepts only atomic field values as specified (no additional logic or fields). API checks that IDs match existing orders/customers. Used in refund creation workflows triggered by customers, sellers, or admins, depending on the context. No soft delete or update logic exists; change tracking relies on new row insertion and retrieval only. Returns the created record on success for immediate feedback and UI display.","summary":"Create a new order refund record in ai_shop_order_refunds.","parameters":[],"requestBody":{"description":"Request body to create a refund record, fields must match ai_shop_order_refunds schema exactly.","typeName":"IAiShopOrderRefunds.ICreate"},"responseBody":{"description":"The new refund record that was created with the supplied data.","typeName":"IAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds","method":"post"},{"specification":"Update an order refund record by its ID in ai_shop_order_refunds. This enables updating atomic fields as present in the schema (refund_reason, refund_status, processed_at, admin_note, etc.). There are no soft delete or updated_at fields. Only the referenced refund entry is modified, and referential integrity (order, customer) is enforced. Used in refund progression workflows when state or audit/admin memo needs to be changed. Returns the updated refund object with all schema-compliant fields.","description":"Updates an existing order refund entry in ai_shop_order_refunds by its primary key. Editable fields per schema include refund_reason, refund_status, processed_at, admin_note, and referenced order/customer if needed. The request body must adhere precisely to the schema for ai_shop_order_refunds, and only atomic updates are supported. Security rules limit who can update refunds. No soft delete or non-schema field logic is ever involved in this update endpoint. Returns the full updated state on success; validation covers foreign keys and business rules for legitimate update conditions.","summary":"Update an order refund record by ID (ai_shop_order_refunds).","parameters":[{"name":"id","description":"Refund record ID to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated refund object values, all fields must match ai_shop_order_refunds schema.","typeName":"IAiShopOrderRefunds.IUpdate"},"responseBody":{"description":"The updated refund object as persisted in ai_shop_order_refunds.","typeName":"IAiShopOrderRefunds"},"authorizationRoles":null,"path":"/aiShop/orderRefunds/{id}","method":"put"},{"specification":"Delete an order refund record by ID from ai_shop_order_refunds. Hard delete: There are no deleted_at/is_deleted or similar fields supporting soft delete, so this permanently removes the refund entry from the system. Must only be performed by authorized actors and in accordance with audit/business process. This is an irreversible operation, and all validation on referential integrity is performed prior to execution. Use with caution and audit all such removes. Related endpoints handle creation, update, and retrieval.","description":"Hard-deletes a refund record in ai_shop_order_refunds based on the unique ID parameter. This endpoint removes the row from the database entirely; it does not support soft delete or logical flagging. Deletion is irreversible, and only permitted by users with business/admin permission and justification. Attempting to delete a non-existent or referenced refund record may result in API error. Logs such events for compliance tracking. API checks for valid ID and referential integrity before deletion. Related endpoints: retrieve, create, update, list.","summary":"Delete a refund record by ID (ai_shop_order_refunds); hard delete only (no soft delete in schema).","parameters":[{"name":"id","description":"Refund record ID to remove","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderRefunds/{id}","method":"delete"},{"specification":"Implements paginated, filtered listing of all return requests. This operation targets the ai_shop_return_requests table, supporting business reporting, moderation, and workflow analytics as specified in the Cart and Order System requirements. Clients can search by customer, product, order_item, or workflow status. Description and filtering logic must reference only actual schema fields. NO reference to deleted_at or non-existent fields. Accepts search/filter/sort parameters modeled after real schema fields only.","description":"Retrieves a paginated, searchable list of return request records from ai_shop_return_requests. Each return request record contains immutable, normalized data for item-level returns, supporting compliance with audit and business reporting needs. Filtering is available by ai_shop_order_item_id, requested_by_customer_id, return_status, and date fields (requested_at, processed_at). Each returned record contains: id, ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at, processed_at, and admin_note, matching the schema exactly. No fields not in the Prisma schema are referenced anywhere. The API does not allow for soft-deleted filtering as no such field exists (no deleted_at on this model). Errors are returned for invalid filter parameters or query failures. This operation is compliant with all requirements regarding audit-logging and regulatory reporting for product returns.","summary":"List/search return requests (ai_shop_return_requests) with filtering, paging, and search options.","parameters":[],"requestBody":{"description":"Filtering, pagination, and sort criteria for list/search of return requests. Must reference only valid schema fields, e.g. requested_by_customer_id, ai_shop_order_item_id, return_status, requested_at, processed_at, and admin_note. All filtering options must match actual field types and existence in the schema.","typeName":"IAiShopReturnRequest.IRequest"},"responseBody":{"description":"Paginated list of return requests with full schema-based details for each ai_shop_return_requests record.","typeName":"IPageAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests","method":"patch"},{"specification":"Retrieves the details of a single return request by its primary key. Target entity is ai_shop_return_requests. This endpoint is for fetching the full detail of a specific product/order item return, primarily for customer, seller, or admin dashboard views. Description must not mention nonexistent fields or business logic outside the DB schema. Only actual fields present in ai_shop_return_requests are returned.","description":"Fetches all detailed, atomic fields from ai_shop_return_requests for the provided ID, including: id, ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at, processed_at, and admin_note. No reference is made to any missing or virtual fields. Designed for case detail review, workflow progress display, and auditing. Throws 404 on not found or invalid ID, and never reveals non-schema properties. This endpoint supports business needs for compliance-facing, item-level transparency for returns.","summary":"Get details of one return request (ai_shop_return_requests) by ID.","parameters":[{"name":"id","description":"Unique identifier (uuid) for the target return request, corresponding to the PK of ai_shop_return_requests.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All fields for the requested ai_shop_return_requests record.","typeName":"IAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests/{id}","method":"get"},{"specification":"Creates a new return request in ai_shop_return_requests according to the functional requirements for customer-initiated returns. All writable fields (ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at, processed_at, admin_note) must match actual schema fields; NO reference to deleted_at or suggested fields. The new record must comply with 3NF normalization and be immediately auditable.","description":"Accepts a request body compliant with ai_shop_return_requests schema for creation of a new return request. Only fields defined in the schema may be supplied: ai_shop_order_item_id, requested_by_customer_id, return_reason, return_status, requested_at (required), processed_at (optional), admin_note (optional). Validation errors are returned if submitted data references any field not present in schema, or if type/enum errors occur. After success, returns complete created object. No soft delete logic as there is no such field.","summary":"Create a new return request (ai_shop_return_requests).","parameters":[],"requestBody":{"description":"All required fields for new return request creation. Based strictly on ai_shop_return_requests schema fields (see actual DB columns).","typeName":"IAiShopReturnRequest.ICreate"},"responseBody":{"description":"Created return request entity as per ai_shop_return_requests fields.","typeName":"IAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests","method":"post"},{"specification":"Updates an existing return request based on its primary key, using only permissible schema fields for modification. The operation targets ai_shop_return_requests. The update logic must not reference or handle any fields outside the schema (e.g., deleted_at or soft delete logic). Only updatable fields such as return_status, processed_at, or admin_note are allowed. The primary key is specified in the path. Implement full validation and type enforcement based on the schema only.","description":"Modifies one ai_shop_return_requests record specified by its ID with only permitted schema fields. Only allows updating fields such as return_status (workflow status), processed_at (date processed), admin_note (admin note), and any others that exist in the schema and are not strictly immutable. Ensures data consistency, respects 3NF, and never leaks or mutates non-existent data. Throws errors if patch attempts to update fields outside the schema. No soft/hard delete mechanics as no such fields exist for this entity.","summary":"Update return request (ai_shop_return_requests) fields by ID.","parameters":[{"name":"id","description":"Primary key (uuid) of the ai_shop_return_requests record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for partial/full update, all validated against ai_shop_return_requests schema only.","typeName":"IAiShopReturnRequest.IUpdate"},"responseBody":{"description":"Updated ai_shop_return_requests record with all schema fields populated.","typeName":"IAiShopReturnRequest"},"authorizationRoles":null,"path":"/aiShop/returnRequests/{id}","method":"put"},{"specification":"Deletes a return request (ai_shop_return_requests) entity by its primary key. This is a hard delete operation as the model does not have soft deletion fields such as deleted_at or is_deleted. The endpoint permanently removes the record from the database, enforcing referential integrity and compliance with 3NF normalization.","description":"Permanently deletes a single ai_shop_return_requests record identified by its id (uuid). As the table does not have any deleted_at or is_deleted fields, the row is physically removed from the database. Attempts to reference non-existent id return a 404. Operation is irreversible: Once deleted, the row cannot be recovered. No soft deletion occurs. No audit log is implemented at this layer; higher layers must issue audit records if needed.","summary":"Hard-delete one ai_shop_return_requests row by ID (hard delete, no soft delete in schema).","parameters":[{"name":"id","description":"Unique identifier (uuid) of the ai_shop_return_requests record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/returnRequests/{id}","method":"delete"},{"specification":"Implements paginated list/search for order abandonment log records, as stored in ai_shop_order_abandonments. Used for analytics, reporting, and customer/seller support. Filtering must support actual schema fields only (ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method); must NOT reference any soft-delete status or fields that do not exist. All search and sort logic should be compliant with 3NF and Prisma schema.","description":"Fetches a paginated list of abandonment log records from ai_shop_order_abandonments, with support for search and filtering by ai_shop_order_id, ai_shop_customer_id, abandoned_at, and detection_method (all actual schema fields). Each returned record contains: id, ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method. No reference to virtual/delete fields. Returns error on invalid identifiers or query errors. This endpoint supports audit, business intelligence, and support reporting for dropped carts/orders.","summary":"List/search order abandonment (abandoned purchase) logs (ai_shop_order_abandonments).","parameters":[],"requestBody":{"description":"Filtering, sort, and paging options, only for valid fields of ai_shop_order_abandonments (e.g. ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method). No non-existent fields.","typeName":"IAiShopOrderAbandonment.IRequest"},"responseBody":{"description":"Paginated results of ai_shop_order_abandonments records per schema; delivers actual DB fields only.","typeName":"IPageAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments","method":"patch"},{"specification":"Fetches details of a single ai_shop_order_abandonments record, by its primary key (uuid). Target: ai_shop_order_abandonments. Used by BI dashboards, customer service, admin review tools. Must return all fields as defined in schema, no additional or virtual fields.","description":"Returns a full record from ai_shop_order_abandonments matching the specified id (uuid). Returned data includes: id, ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method—all as stored in schema. Any invalid or non-matching ID triggers 404. Never exposes non-schema properties. Supports audit, reporting, and dashboard workflows for abandoned order monitoring.","summary":"Get ai_shop_order_abandonments record by ID for dashboard/audit BI reporting.","parameters":[{"name":"id","description":"UUID PK of ai_shop_order_abandonments to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Single ai_shop_order_abandonments schema record.","typeName":"IAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments/{id}","method":"get"},{"specification":"Creates a new order abandonment log record, as stored in ai_shop_order_abandonments per schema. Used to log new abandonment events detected in user/order workflows. All fields must match schema: ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method. Write logic must be restricted to existing fields, none invented. Post-success delivers complete DB schema object.","description":"Accepts details for new ai_shop_order_abandonments record, matching only actual table fields. Required body must include ai_shop_order_id, ai_shop_customer_id, abandoned_at (timestamp), detection_method. Any extra-field or type violation returns error. On success, the new row is returned including its PK and all schema values. This is for server and analytics logging of abandoned cart/order events.","summary":"Create new order abandonment record; log new abandonment event in ai_shop_order_abandonments.","parameters":[],"requestBody":{"description":"Complete schema-compliant payload for inserting ai_shop_order_abandonments record: ai_shop_order_id, ai_shop_customer_id, abandoned_at, detection_method.","typeName":"IAiShopOrderAbandonment.ICreate"},"responseBody":{"description":"Created ai_shop_order_abandonments record with all DB fields returned.","typeName":"IAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments","method":"post"},{"specification":"Updates an order abandonment log record by its PK, using only fields in the DB schema. Typically, only detection_method or abandoned_at might be updatable; business logic may restrict field edits, but API respects only schema fields. All paths and operations comply with 3NF and Prisma schema requirements. Never reference soft/hard or logical delete, as those fields do not exist.","description":"Updates the fields of one ai_shop_order_abandonments record. Path PK is used to determine the target. Only fields existing in the table (e.g., detection_method, abandoned_at) can be updated via this endpoint; any attempt to modify non-existent fields or include any logically deleted handling results in validation error. Returns the post-update object with all real fields present. This endpoint supports admin and BI log correction workflows.","summary":"Update one ai_shop_order_abandonments record by ID (schema-only updatable fields).","parameters":[{"name":"id","description":"UUID PK of ai_shop_order_abandonments row to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update (schema-only): detection_method, abandoned_at. No invented or virtual fields permitted.","typeName":"IAiShopOrderAbandonment.IUpdate"},"responseBody":{"description":"Updated ai_shop_order_abandonments record, all fields as in schema.","typeName":"IAiShopOrderAbandonment"},"authorizationRoles":null,"path":"/aiShop/orderAbandonments/{id}","method":"put"},{"specification":"Deletes an abandoned order/carts log (ai_shop_order_abandonments) row. This model has no deleted_at, so this is a hard delete (physical delete from the db). The operation is irreversible and will cause the row to be purged from storage. Referential/integrity rules from Prisma apply. This endpoint supports cleanup and correction of analytic logs; it does not support soft delete.","description":"Deletes a single ai_shop_order_abandonments row by its id (uuid). This is a hard delete: after operation, the row is not recoverable and no historical markers are left. 404 returned for unknown ID. This endpoint supports order analytics cleanup in the admin panel or automated jobs. Caution: operation is non-reversible.","summary":"Hard-delete ai_shop_order_abandonments log entry by ID (permanently delete, no soft delete in schema).","parameters":[{"name":"id","description":"UUID of ai_shop_order_abandonments row to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderAbandonments/{id}","method":"delete"},{"specification":"Implements paginated listing and search for all order delivery records (ai_shop_order_deliveries), as required for operational monitoring and analytics. This is a list/search endpoint over all table fields. All filters, sorts, and paging must strictly match actual fields as defined in schema; soft/hard delete or virtual fields must never be referenced here. Business usage: Admin, seller, customer dashboards, delivery reports, shipment analytics.","description":"Returns paginated search/results for ai_shop_order_deliveries. Accepts request body specifying filters by real DB fields (e.g. ai_shop_order_id, ai_shop_order_item_id, ai_shop_seller_id, delivery_status, tracking_number, shipper_code, shipped_at, delivered_at, seller_memo, admin_note). Only valid table fields may be used for search or filtering; no invented or virtual schema is present. Each record returned in the page includes all schema fields. Used for shipment dashboards, fulfillment monitoring, and seller KPIs.","summary":"Paginated list/search of all ai_shop_order_deliveries, using only real DB columns.","parameters":[],"requestBody":{"description":"Search/filter/sort/paging params using ai_shop_order_deliveries schema fields only. Example: delivery_status, ai_shop_order_id, tracking_number, etc.","typeName":"IAiShopOrderDelivery.IRequest"},"responseBody":{"description":"Paginated list of ai_shop_order_deliveries records, each including all expected DB fields.","typeName":"IPageAiShopOrderDelivery"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries","method":"patch"},{"specification":"Retrieves a single ai_shop_order_deliveries record by primary key (id, uuid), exposing every actual schema field for operational review or audit purposes. This operation is necessary for per-order shipment tracking views, admin analytics, or customer support tooling. Schema compliance is enforced: returned fields are as modeled, non-existent fields are never exposed or referenced.","description":"Returns the full details of one ai_shop_order_deliveries record as per DB schema, referencing only actual DB fields: id, ai_shop_order_id, ai_shop_order_item_id, ai_shop_seller_id, delivery_status, tracking_number, shipper_code, shipped_at, delivered_at, seller_memo, admin_note. Attempts to reference a record by unknown ID result in 404. Designed for shipment resolution, customer support, BI reporting, and audit logging.","summary":"Get a single ai_shop_order_deliveries record by ID; all DB fields are returned unaltered.","parameters":[{"name":"id","description":"Primary key (uuid) of ai_shop_order_deliveries row to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All DB fields of requested ai_shop_order_deliveries for BI/audit/delivery tracing.","typeName":"IAiShopOrderDelivery"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries/{id}","method":"get"},{"specification":"Create a new order delivery record for the ai_shop_order_deliveries table. The operation requires submitting all atomic and required fields as defined in the Prisma schema: ai_shop_order_id (order being delivered), ai_shop_order_item_id (nullable for full vs partial deliveries), ai_shop_seller_id (delivery owner/processor), delivery_status (progress state), tracking_number (nullable), shipper_code (express/courier code), shipped_at (nullable), delivered_at (nullable), seller_memo (nullable), and admin_note (nullable). Ensure referential integrity with linked orders, sellers, and order items. This operation enables order fulfillment tracking per business legal and audit requirements. All provided fields must match their definition and constraints in the schema. There is no deleted_at or similar field related to soft deletion, so the entity will be hard deleted in DELETE operations.","description":"This operation creates a new order delivery record tied to a specific order in the ai_shop_order_deliveries table. All required atomic fields must be provided, including links to ai_shop_orders (ai_shop_order_id), optionally ai_shop_order_items (ai_shop_order_item_id), and ai_shop_sellers (ai_shop_seller_id). delivery_status represents stage (e.g., pending, ready, shipped, delivered). Optional fields—tracking_number, shipped_at, delivered_at, seller_memo, admin_note—should be included as needed by business logic and workflow. Audit fields guaranteed by schema are managed internally (not directly submitted). Referential integrity to order, seller, and order item is enforced. There is no soft deletion in this entity—the record is permanently removed with DELETE.","summary":"Create a new order delivery record in ai_shop_order_deliveries (hard create).","parameters":[],"requestBody":{"description":"Information for order delivery creation (including order, seller, delivery metadata).","typeName":"aiShopOrderDeliveries.ICreate"},"responseBody":{"description":"Created order delivery record.","typeName":"aiShopOrderDeliveries"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries","method":"post"},{"specification":"Update an existing order delivery record (ai_shop_order_deliveries table) by 'id'. Accepts fields available for update: any atomic property present in the schema except the primary key. Allowed fields include ai_shop_order_id, ai_shop_order_item_id (nullable), ai_shop_seller_id, delivery_status, tracking_number (nullable), shipper_code, shipped_at (nullable), delivered_at (nullable), seller_memo (nullable), admin_note (nullable). Audit timestamp fields are updated automatically per schema. There is no soft delete; removed records are permanently deleted. Batch fields or referential links must respect foreign key constraints. Only schema-specified fields may be updated.","description":"This operation updates an order delivery entry in ai_shop_order_deliveries by its primary key. The updatable fields, as per the schema, include delivery_status, tracking_number, shipper_code, shipped_at, delivered_at, seller_memo, admin_note, and referential fields ai_shop_order_id, ai_shop_order_item_id, and ai_shop_seller_id. Only fields that exist in the schema may be specified (no synthetic or computed properties). There is no soft deletion marker; deletions are hard. Foreign key validations must succeed when updating referential fields.","summary":"Update an order delivery record in ai_shop_order_deliveries by id (hard update).","parameters":[{"name":"id","description":"Target order delivery's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order delivery update data per ai_shop_order_deliveries schema.","typeName":"aiShopOrderDeliveries.IUpdate"},"responseBody":{"description":"Updated order delivery record.","typeName":"aiShopOrderDeliveries"},"authorizationRoles":null,"path":"/aiShop/orderDeliveries/{id}","method":"put"},{"specification":"Delete an order delivery record from the ai_shop_order_deliveries table by 'id'. As the schema does not include a soft delete field (e.g., deleted_at), this operation will perform a hard (permanent) deletion of the record. The operation expects a valid primary key id and will remove the record irreversibly. Only the id parameter is required; no request body is necessary.","description":"This operation deletes a single order delivery entry from ai_shop_order_deliveries identified by the id parameter. The record is permanently removed since there is no deleted_at or equivalent soft deletion field in the schema. This operation is irreversible for compliance and audit history. Minimal input is required: only a valid UUID id referencing the order delivery to delete. Ensure all business and referential constraints are considered before deletion, as per schema.","summary":"Delete an order delivery record in ai_shop_order_deliveries by id (hard delete).","parameters":[{"name":"id","description":"Target order delivery's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/orderDeliveries/{id}","method":"delete"},{"specification":"List/search coupon records in the ai_shop_coupons table with flexible query/filter/search criteria. Response includes paginated coupon entities conforming to atomic fields in the schema: id, ai_shop_promotion_id, code, type, description, valid_from, valid_until, max_uses, max_uses_per_customer, min_purchase_amount, discount_amount, discount_percent, is_active, created_at, updated_at. This operation is for searching and paginating results and not for creation or modification. All search and filter fields must exist in the schema.","description":"This operation retrieves a paginated list of coupon records from the ai_shop_coupons table. Fields included in the results and available for searching/filtering are defined by the schema: id, ai_shop_promotion_id, code, type, description, validity period, usage limits, amount/percent discount, activation, audit fields. The operation supports advanced querying and pagination. No non-schema fields are referenced. Creation, update, and deletion operations use their own endpoints.","summary":"Fetch and search ai_shop_coupons records (paginated, filterable).","parameters":[],"requestBody":{"description":"Search and pagination criteria for coupons (all fields must be schema-compliant).","typeName":"aiShopCoupons.IRequest"},"responseBody":{"description":"Paginated coupon search result.","typeName":"IPageAiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons","method":"patch"},{"specification":"Retrieve a single coupon record by 'id' from the ai_shop_coupons table. Only fields defined in the schema are included in the response: id, ai_shop_promotion_id, code, type, description, valid_from, valid_until, max_uses, max_uses_per_customer, min_purchase_amount, discount_amount, discount_percent, is_active, created_at, updated_at. Hard errors are returned for missing or deleted records. No soft delete field exists in the schema, thus results only reflect actually present rows.","description":"This operation returns the full atomic record for a coupon from ai_shop_coupons, identified by the unique id parameter. Returns all coupon details specified in the schema. No soft delete is implemented, so only existing records are returned. If the id does not exist, a not-found error is returned. The output only includes schema-defined fields.","summary":"Get ai_shop_coupons record by id.","parameters":[{"name":"id","description":"Coupon's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Coupon details for the given id.","typeName":"aiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons/{id}","method":"get"},{"specification":"Create a new coupon in ai_shop_coupons using only atomic fields defined in the schema: ai_shop_promotion_id (optional promo linkage), code (unique string), type, description, valid_from, valid_until, usage limits, discount amounts/percent, is_active status, and audit fields. The operation does not reference or create any non-schema fields. Creation requires all mandatory fields, referential integrity for promo linkage, and field-level validation per schema. Coupon code must be unique.","description":"Creates a new entry in ai_shop_coupons for digital coupons, single or multi-use, as defined by the schema. The request body must match ICreate: ai_shop_promotion_id, code, type, description, validity, usage caps, discount, is_active flag. All values are strictly validated; extra fields are ignored or rejected. No soft delete or hidden status is available. Upon success, returns the created coupon entity.","summary":"Create a new coupon in ai_shop_coupons (hard create).","parameters":[],"requestBody":{"description":"Coupon creation payload per schema (all required coupon fields).","typeName":"aiShopCoupons.ICreate"},"responseBody":{"description":"Created coupon entity.","typeName":"aiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons","method":"post"},{"specification":"Update a coupon in ai_shop_coupons by 'id'. Modifiable fields are those defined in the schema: ai_shop_promotion_id, code, type, description, valid_from, valid_until, usage caps, discount amounts, is_active status, and audit fields. No non-schema fields permitted. Coupon code uniqueness is enforced. No soft delete in this entity—removal is permanent via DELETE. All foreign keys, if altered, must remain valid.","description":"This operation updates an existing coupon in the ai_shop_coupons table. All updatable properties are strict to the schema (ai_shop_promotion_id, code, type, description, period, usage/max caps, discount values, is_active, audit fields). All updates will be checked for code uniqueness and FK validity. There are no soft delete semantics here—DELETE will remove permanently. Audit timestamps are updated automatically.","summary":"Update ai_shop_coupons record by id (hard update only).","parameters":[{"name":"id","description":"The target coupon's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Coupon update data per ai_shop_coupons schema.","typeName":"aiShopCoupons.IUpdate"},"responseBody":{"description":"Updated coupon entity.","typeName":"aiShopCoupons"},"authorizationRoles":null,"path":"/aiShop/coupons/{id}","method":"put"},{"specification":"Delete a coupon record from ai_shop_coupons by 'id'. No soft delete marker is present in the schema so this operation will perform a hard (permanent) deletion. Only the id parameter is required. Operation removes the coupon entirely from the table.","description":"Deletes (hard delete) a coupon in ai_shop_coupons referenced by the id parameter. As there is no soft delete (deleted_at or similar) in the schema, DELETE operations permanently remove the record. Coupon code uniqueness is not preserved after deletion, so reusing deleted codes is supported. Only referential constraints must be considered. No request body required.","summary":"Delete ai_shop_coupons record by id (hard delete only).","parameters":[{"name":"id","description":"Coupon record's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/coupons/{id}","method":"delete"},{"specification":"List/search coupon assignment records (ai_shop_coupon_assignments table) using flexible query/filters, supporting paging. Fields surfaced: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. Operation is only for listing; creation and update are handled elsewhere.","description":"Lists and paginates coupon assignment records from ai_shop_coupon_assignments. Available filter/search fields are: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state—strictly as present in the schema. Operation does not allow for creation/modification. Output is a paginated response including all atomic/required fields from schema. Only schema fields may be referenced in requests/results.","summary":"Paginated search of ai_shop_coupon_assignments records.","parameters":[],"requestBody":{"description":"Search/filter/pagination criteria for coupon assignments (all fields must be schema-compliant).","typeName":"aiShopCouponAssignments.IRequest"},"responseBody":{"description":"Paginated coupon assignment search result.","typeName":"IPageAiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments","method":"patch"},{"specification":"Retrieve a single coupon assignment entity by 'id' from ai_shop_coupon_assignments. Response includes all atomic fields: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. No non-schema fields present. No soft delete exists, so only extant records are returned.","description":"Returns a coupon assignment record from ai_shop_coupon_assignments by a provided id. All returned fields precisely reflect the schema: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. If the id does not exist, a not-found is raised. There is no soft deletion or hidden status field.","summary":"Get ai_shop_coupon_assignments record by id.","parameters":[{"name":"id","description":"Coupon assignment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Coupon assignment details for the given id.","typeName":"aiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments/{id}","method":"get"},{"specification":"Create a new coupon assignment record for ai_shop_coupon_assignments. Required fields: ai_shop_coupon_id (FK to coupon), ai_shop_customer_id (FK to customer), ai_shop_order_id (nullable, links assigned coupon to an order on use), assigned_at (datetime), redeemed_at (nullable), state. No soft delete or hidden flag is available. No non-schema fields are permitted. Atomic field validation, referential checks, and audit constraints enforced per business policy.","description":"This operation creates a new coupon assignment linking a coupon, customer, and, if applicable, order. All required atomic fields in ICreate must be provided and comply strictly with the schema: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. Upon successful validation, returns the full created assignment entity. No soft delete or synthetic fields.","summary":"Create a new ai_shop_coupon_assignments record (hard create only).","parameters":[],"requestBody":{"description":"Coupon assignment creation payload (all required fields strictly schema-based).","typeName":"aiShopCouponAssignments.ICreate"},"responseBody":{"description":"Created coupon assignment entity.","typeName":"aiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments","method":"post"},{"specification":"Update an existing coupon assignment (ai_shop_coupon_assignments) by id. Allowed fields are schema-specified: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id (nullable), assigned_at, redeemed_at, state. All updates validate referential integrity and field-level constraints per schema. No soft delete; updated records persist unless explicitly deleted via DELETE. Only schema fields are accepted; extraneous fields cause error.","description":"Updates a coupon assignment entry in ai_shop_coupon_assignments by id. The updatable fields must be strictly present in the schema: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, assigned_at, redeemed_at, state. All referential requirements are enforced. The record persists unless explicitly deleted, as there is no soft delete. Audit trail maintained via internal mechanisms, not exposed directly. No synthetic or extra fields allowed.","summary":"Update ai_shop_coupon_assignments record by id (only schema fields allowed).","parameters":[{"name":"id","description":"Coupon assignment's unique identifier (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Coupon assignment update data (all updatable schema fields).","typeName":"aiShopCouponAssignments.IUpdate"},"responseBody":{"description":"Updated coupon assignment entity for the given id.","typeName":"aiShopCouponAssignments"},"authorizationRoles":null,"path":"/aiShop/couponAssignments/{id}","method":"put"},{"specification":"Implements DELETE for a coupon assignment (ai_shop_coupon_assignments). Each assignment is a record of a coupon assigned to a user—it links to a user (ai_shop_customer_id), a coupon (ai_shop_coupon_id), and optionally an order (ai_shop_order_id). This operation removes the assignment, which is a hard delete because the table DOES NOT have any soft delete fields such as 'deleted_at' in the schema. Business impact: Once deleted, there is no record of this assignment remaining in the DB, so this should only be used for administrative reversals or error correction, not for 'soft deactivations' or marking as unused. All referenced fields MUST exist in the schema.","description":"This endpoint permanently deletes a coupon assignment record from the ai_shop_coupon_assignments table, identified by its unique ID. The table does NOT feature any kind of soft delete mechanism; there is no 'deleted_at', 'is_active', or equivalent flag column. Hard deletion is irreversible—once removed, the linkage between the customer, coupon, and order (if set) is fully deleted and unrecoverable. Administrators are responsible for maintaining any audit log externally, as the assignment will not exist for future reporting. This should be used strictly for administrative error resolution or irreversible business logic.\n\nThe primary key for the assignment is 'id', and all field references (ai_shop_customer_id, ai_shop_coupon_id, ai_shop_order_id) are verified as present in the schema. All validations and security restrictions should be implemented application side prior to actual data removal. The endpoint must enforce that ONLY existing records are deleted, and return an appropriate error if the record does not exist. Related business logic (handling coupon state, recalculating eligible uses) should be handled in service layer or via DB triggers for downstream effects.","summary":"Hard-deletes a coupon assignment from ai_shop_coupon_assignments by ID (no soft delete).","parameters":[{"name":"id","description":"Primary key (UUID) of the coupon assignment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/couponAssignments/{id}","method":"delete"},{"specification":"Implements PATCH for promotions (ai_shop_promotions) to support list/search of promotion campaign records. The ai_shop_promotions table contains campaigns/events for coupons with fields such as name, description, type, is_active, start_at, end_at. This endpoint accepts filtering/search criteria in the body and returns JSON with paginated list and search results. Only fields defined in the schema (e.g., name, type, is_active, start_at, end_at) can be used for filtering/sorting. No soft delete fields exist here, so only active records can be returned based on current implementation.","description":"This endpoint supports querying and searching the ai_shop_promotions table for bulk/paginated retrieval of promotion campaign records. It follows the functional requirement that campaign management needs filtering by name, type, active flag, and time window. There are NO soft delete fields on this model, so hard delete is the only supported method for removal of promotions.\n\nSearch parameters can include any direct fields from ai_shop_promotions such as type, is_active, date windows, and text search within name or description. Results must be paginated and sorted in a consistent way. Only columns defined in the schema (name, type, is_active, start_at, end_at, etc.) can be used for searching/sorting—do NOT include any implicit fields such as deleted_at. Security and field-level filtering should be enforced by the service layer depending on the requesting user's role.","summary":"Paginates and filters promotions in ai_shop_promotions via search parameters (no soft delete).","parameters":[],"requestBody":{"description":"Search/filter/pagination parameters for listing ai_shop_promotions (promotion campaigns).","typeName":"IAiShopPromotions.IRequest"},"responseBody":{"description":"Paginated and filtered list of ai_shop_promotions objects matching the request criteria.","typeName":"IPageAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions","method":"patch"},{"specification":"Implements GET for a single ai_shop_promotions record by ID. This retrieves the full details (name, description, type, start_at, end_at, is_active, etc.) for a specific promotion campaign. There are NO soft delete columns in ai_shop_promotions—data is only retrievable if it exists and hasn't been hard deleted.","description":"This operation returns the details for a single promotion from ai_shop_promotions, uniquely identified by its 'id'. All returned properties are strictly those described in the Prisma schema (name, description, type, start_at, end_at, is_active, etc.). Since there are no soft delete columns, if a promotion is deleted, it will not be available to retrieve with this endpoint.\n\nSecurity and role restrictions should be enforced application-side before invoking this endpoint. Data returned should match the ai_shop_promotions schema exactly, and missing records should return a standard not-found error. Field-level access is determined by the service layer, but this operation does not reference or return any additional/implicit columns.","summary":"Retrieves one ai_shop_promotions (promotion campaign) record by ID.","parameters":[{"name":"id","description":"UUID primary key for the promotion campaign to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the promotion campaign for the given ID.","typeName":"IAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions/{id}","method":"get"},{"specification":"Implements POST for creating a new promotion (ai_shop_promotions). The ai_shop_promotions table manages campaign and event configuration for couponing, with fields like name, description, type, start_at, end_at, is_active (all must be validated as present in schema). Only fields ACTUALLY present in the Prisma schema can be referenced in request and response. The endpoint creates a new campaign row and returns the resulting object.","description":"This operation creates a new promotion campaign in ai_shop_promotions. Fields must include only those defined in the schema: name, description, type, start_at, end_at, is_active, etc. There is no soft delete mechanism, so removal is permanent and not referenced here. All business logic for valid status transitions, uniqueness of name+start_at, and time checks must be enforced in the application logic, not by the API itself.\n\nReturns the newly-created promotion campaign object as defined in the ai_shop_promotions schema. Any required fields missing in the request body will result in error. No other fields are accepted, and no extraneous columns may be returned. Audit and compliance are managed externally via other mechanisms.","summary":"Creates a new promotion (ai_shop_promotions) campaign and returns it.","parameters":[],"requestBody":{"description":"Input data for creating a new promotion (only schema-defined fields).","typeName":"IAiShopPromotions.ICreate"},"responseBody":{"description":"The created ai_shop_promotions object.","typeName":"IAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions","method":"post"},{"specification":"Implements PUT for updating a promotion campaign in ai_shop_promotions by ID. Allows direct editing of fields like name, type, description, start_at, end_at, is_active. Only updates columns that exist in the Prisma schema; there is no soft or hard delete logic handled here. The endpoint receives the values to update and returns the updated row.","description":"This endpoint updates an existing ai_shop_promotions record (promotion campaign) identified by its 'id', modifying only the columns defined in the schema (e.g., name, description, type, start_at, end_at, is_active). There are no soft delete columns, so the operation edits only factual values, not removal state. ID must be an existing valid record, and all validation for time window or unique name+start_at combinations must be performed in service logic, not the API layer.\n\nReturns the full, updated ai_shop_promotions object on success. Any attempt to edit columns that do not exist in the schema must raise an error. No implicit/extra fields (such as deleted_at) can be referenced or set, and the endpoint ignores any that may be present in the request or business logic. Field-level security is handled outside the API contract.","summary":"Updates a promotion in ai_shop_promotions by ID (only schema fields).","parameters":[{"name":"id","description":"Primary key (UUID) for the promotion campaign to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Partial or full update values for ai_shop_promotions; only schema fields allowed.","typeName":"IAiShopPromotions.IUpdate"},"responseBody":{"description":"The updated ai_shop_promotions object.","typeName":"IAiShopPromotions"},"authorizationRoles":["admin"],"path":"/aiShop/promotions/{id}","method":"put"},{"specification":"Implements DELETE for a promotion campaign record in ai_shop_promotions by ID. The table DOES NOT feature any soft delete column (e.g., deleted_at, is_deleted)—removal is a hard delete. This is an irreversible operation, and once deleted, the record is gone from DB. Used for admin-level removal only.","description":"This endpoint performs a permanent, hard delete of a promotion campaign from ai_shop_promotions, given its 'id'. As the model does not contain any soft delete field (such as deleted_at), the row is physically removed from the database and cannot be recovered. This operation is reserved for administrators and should be accompanied by external audit logging for compliance, as all relational links are severed with deletion. Returns success or not-found depending on presence of record. No other fields may be referenced, and audit/compliance are handled outside the table.","summary":"Hard deletes a promotion campaign from ai_shop_promotions by ID (no soft delete).","parameters":[{"name":"id","description":"Primary key (UUID) of the ai_shop_promotions record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/promotions/{id}","method":"delete"},{"specification":"Implements PATCH for ai_shop_deposits to support search and pagination. This retrieves deposit entries for customers/sellers, using criteria only from schema fields (ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at, etc.). Filtering, sorting, and pagination parameters must match schema and NOT reference any non-existent or implicit columns. No soft delete fields; returns only live records.","description":"This endpoint supports retrieval of deposit events from ai_shop_deposits with flexible search and pagination. Query body may include filter criteria by customer, seller, order, type, amount, or created_at window, all strictly typed based on schema fields. No extra columns, especially soft delete fields, are present—data returned are only the ones not physically removed. Pagination and sorting must use only schema columns, and all business logic for field-level filtering (e.g., customer can only see their rows) is enforced at the service layer.\n\nReturns a paged result of deposit entries (ai_shop_deposits) as present in the schema; only schema columns are returned, and no implicit/omitted fields are present.","summary":"Searches and paginates ai_shop_deposits entries via filter/pagination parameters (no soft delete).","parameters":[],"requestBody":{"description":"Search and pagination parameters for ai_shop_deposits; all based on schema fields.","typeName":"IAiShopDeposits.IRequest"},"responseBody":{"description":"Paginated/filtered list of ai_shop_deposits objects matching search criteria.","typeName":"IPageAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits","method":"patch"},{"specification":"Implements GET for a single deposit (ai_shop_deposits) by ID. Retrieves a deposit ledger row with fields like ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at, etc., if present. Table does NOT include any kind of soft delete or logical delete. Only hard delete removes a record. All output fields strictly match those in the schema.","description":"This operation retrieves full deposit transaction details for a single ai_shop_deposits record, selected by its UUID primary key. Only returns data if the deposit has not been physically deleted—there are no soft delete or logical delete columns, so historical/removed data is not available via this endpoint. All properties in the response are strictly those described in the Prisma schema (ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at, etc.)\n\nIf the record does not exist, returns standard not-found. All business logic for field-level filtering (e.g., whether the admin or user is allowed to view this deposit) must be enforced in API service or middleware.","summary":"Retrieves an ai_shop_deposits record by ID (no soft delete).","parameters":[{"name":"id","description":"UUID primary key of the deposit to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the ai_shop_deposits record matching the ID.","typeName":"IAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits/{id}","method":"get"},{"specification":"Implements POST for recording a new deposit (ai_shop_deposits). This creates a deposit ledger entry for a customer (and optionally seller/order), per the schema. Request body only accepts schema-defined fields: ai_shop_customer_id, ai_shop_seller_id (optional), ai_shop_order_id (optional), type, amount, description, created_at. No soft delete or logical delete is performed; only record creation and atomic return of the inserted object per schema.","description":"This endpoint creates a new row in ai_shop_deposits, representing a deposit event such as customer payment, rewards, etc. Only fields present in the schema are accepted and returned: ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at. Extra fields are ignored/rejected. The endpoint returns the full inserted record, including any DB-assigned UUID or timestamps. No soft delete applies; if a deposit is removed, it is a hard delete and not referenced here.\n\nService logic must enforce business rules (customer can only deposit for self, admin can create deposit for user, details must be accurate, etc.) outside the endpoint logic.","summary":"Creates a new deposit (ai_shop_deposits) and returns the created record.","parameters":[],"requestBody":{"description":"Deposit event details to be recorded (only schema fields allowed).","typeName":"IAiShopDeposits.ICreate"},"responseBody":{"description":"AI shop deposit record just created, matching schema fields.","typeName":"IAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits","method":"post"},{"specification":"Implements PUT to update a single deposit record in ai_shop_deposits by ID. Editable fields are strictly those in schema: ai_shop_customer_id, ai_shop_seller_id (optional), ai_shop_order_id (optional), type, amount, description, created_at. No soft delete applies: operation is for factual value changes only, not removal or logical deactivation. Returns the fully updated row matching the schema.","description":"This operation updates an existing deposit ledger entry by its 'id', editing only the columns in ai_shop_deposits: ai_shop_customer_id, ai_shop_seller_id, ai_shop_order_id, type, amount, description, created_at. There is no soft delete or logical removal: to delete a deposit, use DELETE (hard remove). Response is the full, updated object with all fields per schema, including any audit/compliance relevant values.\n\nAny field sent in the body but not defined in the schema causes error. Field-level permissions (whether an admin or user is allowed to update a record) is checked in the service logic, not here.","summary":"Updates an ai_shop_deposits record by ID (strict schema columns only).","parameters":[{"name":"id","description":"UUID primary key of the deposit record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated deposit detail fields (schema-only values) for ai_shop_deposits.","typeName":"IAiShopDeposits.IUpdate"},"responseBody":{"description":"The updated ai_shop_deposits object matching ID and schema fields.","typeName":"IAiShopDeposits"},"authorizationRoles":["admin"],"path":"/aiShop/deposits/{id}","method":"put"},{"specification":"Implements DELETE for a deposit record in ai_shop_deposits by ID. Hard removal only, since there are NO soft delete columns like 'deleted_at' for this table. This is a permanent operation. Returns success or not-found, removing the row from DB. Should be restricted to admin users, with audit logging handled externally.","description":"This endpoint irrevocably deletes a deposit ledger record from ai_shop_deposits, using its 'id' primary key. There is no soft delete, so all links to this ledger entry are lost on delete. This operation must only be available to admins. It is critical to ensure that audit/compliance information is tracked outside this table, since the record cannot be restored. Any attempt to delete a non-existent record yields an error. No references to columns outside the schema should be made in this process.","summary":"Hard deletes a deposit record from ai_shop_deposits by ID (no soft delete).","parameters":[{"name":"id","description":"Primary key (UUID) of the deposit ledger entry to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/deposits/{id}","method":"delete"},{"specification":"Implements PATCH for ai_shop_mileages to support search and pagination. This retrieves loyalty/mileage entries for customers, based only on fields physically present in the schema (ai_shop_customer_id, ai_shop_order_id, type, amount, description, created_at, etc.). No soft delete exists—results are only for live records. Filtering, sorting, and pagination must only use defined schema fields. Business rules for user/view access must be enforced at service level.","description":"This endpoint supports searching, filtering, and paginating ai_shop_mileages (loyalty points) transactions. Query filter/request body may include only fields from the schema: ai_shop_customer_id, ai_shop_order_id, type, amount, description, created_at. Attempts to filter/sort by columns not present in the schema will result in errors. There is no soft delete or logical deactivation column—all results represent current, non-deleted entries. Security permissions must be handled outside this operation. Paginated result is returned per request. The core fields must directly mirror the schema, with no invented or extraneous columns being referenced.","summary":"Lists and searches ai_shop_mileages with filter/sort/pagination (no soft delete).","parameters":[],"requestBody":{"description":"Search/pagination parameters permitted for querying ai_shop_mileages (only schema-definable fields).","typeName":"IAiShopMileages.IRequest"},"responseBody":{"description":"Paged result of mileage/loyalty transactions matching search criteria.","typeName":"IPageAiShopMileages"},"authorizationRoles":["admin"],"path":"/aiShop/mileages","method":"patch"},{"specification":"Retrieve a single mileage record by its unique identifier from the ai_shop_mileages table. Returns all atomic fields: id, ai_shop_customer_id, ai_shop_order_id, type, amount, description, created_at. Every field mentioned is present in the Prisma schema and is strictly adhered to. The operation allows any authorized actor to fetch a detailed, audit-compliant representation of the customer’s individual mileage transaction for compliance, analytics, or application display. Deleted_at or similar soft-delete handling does not exist for this entity, so all reads target existing rows with no mention of such logic.","description":"This GET operation fetches a single mileage entry from the ai_shop_mileages table using the provided ID path parameter. The returned resource strictly contains only the atomic, normalized data columns from the Prisma schema: unique identifier (id), associated customer (ai_shop_customer_id), potentially linked order (ai_shop_order_id), transaction type (type), amount (integer), optional description, and timestamp of record creation (created_at). This endpoint enables audit-compliant retrieval for financial record-keeping and customer loyalty analytics. As there are no fields like deleted_at, the operation targets only present rows and never references soft-deleted logic or user fields not defined in the schema. Errors are generated for invalid or missing mileage IDs. Related API operations: PATCH for listing, POST for creation, PUT for update, DELETE for removal.","summary":"Retrieve a single ai_shop_mileages record by ID (ai_shop_mileages table).","parameters":[{"name":"id","description":"Unique identifier of the mileage record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The target ai_shop_mileages record with all schema-defined fields.","typeName":"IAiShopMileage"},"authorizationRoles":null,"path":"/aiShop/mileages/{id}","method":"get"},{"specification":"Create a new row in the ai_shop_mileages table. Required fields are ai_shop_customer_id, type, amount, with optional ai_shop_order_id and description, as per strict schema definitions. All fields used in the operation exist in the schema and are required to meet normalization and compliance requirements. No unlisted columns (e.g., deleted_at, created_by) are referenced or used.","description":"This POST operation adds a new mileage record to the ai_shop_mileages table. It consumes a request body containing atomic, schema-defined fields: ai_shop_customer_id (required, UUID), optional ai_shop_order_id (UUID), type (required, defines transaction event), amount (required, integer, positive/negative for earning/spending), description (optional), and system-assigned created_at timestamp. Field validation ensures compliance with loyalty logic, analytics, and user auditability. The endpoint never references or uses fields that do not exist in schema, such as deleted_at or updated_by. Error handling includes missing or invalid input, or failed business logic checks. Related endpoints: PATCH (list), GET (single), PUT (update), DELETE (remove).","summary":"Create a new ai_shop_mileages record in the ai_shop_mileages table.","parameters":[],"requestBody":{"description":"Atomic, schema-compliant values for mileage creation.","typeName":"IAiShopMileage.ICreate"},"responseBody":{"description":"The newly created ai_shop_mileages record.","typeName":"IAiShopMileage"},"authorizationRoles":null,"path":"/aiShop/mileages","method":"post"},{"specification":"Update an existing ai_shop_mileages record by its primary key ID in the database. The only modifiable fields are those atomic fields present in the schema: ai_shop_customer_id, ai_shop_order_id, type, amount, description. No additional fields beyond what exists are ever updated or referenced. Soft-delete or additional audit logic is not present on this entity.","description":"This PUT operation updates a mileage entry in the ai_shop_mileages table, strictly allowing modifications only to those fields present in its schema: ai_shop_customer_id, ai_shop_order_id (optional), type, amount, description. Updates must supply all required values for the entity; partial updates and any reference to fields like deleted_at or created_by are prohibited, as those columns do not exist. The operation identifies the entry by ID and applies the new values for all non-read-only properties. Errors are returned for invalid ID, missing/invalid fields, or attempting to update immutable data. Audit trail columns such as created_at are not updated. Related endpoints: PATCH (list), GET (single), POST (create), DELETE (delete).","summary":"Update an existing ai_shop_mileages record by ID (ai_shop_mileages table).","parameters":[{"name":"id","description":"Unique identifier of the mileage record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full object of fields for mileage record update; only fields defined in the schema are accepted.","typeName":"IAiShopMileage.IUpdate"},"responseBody":{"description":"The updated ai_shop_mileages record.","typeName":"IAiShopMileage"},"authorizationRoles":null,"path":"/aiShop/mileages/{id}","method":"put"},{"specification":"Delete an ai_shop_mileages record by its primary key ID from the database. The ai_shop_mileages table does NOT include a deleted_at or other soft delete column, so this operation performs a hard delete (permanent removal). No attempt is made to update or check for any soft delete logic, as none exists in schema.","description":"This DELETE operation irreversibly removes a mileage record from the ai_shop_mileages table based on its unique ID. Since the schema does NOT contain a deleted_at or similar column, the deletion is hard and permanently removes the row. There is no mechanism for restoration or soft-deletion: once deleted, the record cannot be recovered through the API. The operation returns a success indicator or error if the ID is not found. No field outside the schema is referenced; fields like created_by or is_deleted are never used. Related: PATCH (list), GET (single), POST (create), PUT (update).","summary":"Permanently delete an ai_shop_mileages record (hard delete, as no soft delete present).","parameters":[{"name":"id","description":"Unique identifier of the mileage record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of deletion (usually null or success code).","typeName":"IVoid"},"authorizationRoles":null,"path":"/aiShop/mileages/{id}","method":"delete"},{"specification":"List donation coupon records with filtering, searching, and pagination in the ai_shop_donation_coupons table. Only schema-defined fields (id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, amount_donated, donation_type, created_at) are used for filtering or output. There is no support for soft delete as no deleted_at or similar column is present in this entity.","description":"This PATCH operation queries the ai_shop_donation_coupons table for a filtered, paginated list of donation coupon records. Search filters can be applied to any atomic field from the schema (coupon, customer, order, donation_type, creation time, etc.). Returned items only include explicitly defined schema columns. Output supports pagination metadata as per standard conventions. No fields such as deleted_at are present or referenced; hard deletes only apply. Related endpoints: GET (single), POST (create), PUT (update), DELETE (remove).","summary":"List/filter/paginate ai_shop_donation_coupons records (from ai_shop_donation_coupons table).","parameters":[],"requestBody":{"description":"Filtering, pagination, and search parameters for donation coupons list.","typeName":"IAiShopDonationCoupon.IRequest"},"responseBody":{"description":"Paginated list of donation coupons, with only schema fields included.","typeName":"IPageAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons","method":"patch"},{"specification":"Retrieve a single donation coupon record by its unique identifier from the ai_shop_donation_coupons table. Returns all atomic schema fields: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, amount_donated, donation_type, created_at. No extra fields are referenced. No soft delete or audit logic outside schema.","description":"This GET operation fetches a single donation coupon record by ID. Output strictly includes fields present in the Prisma schema: id, ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id, amount_donated, donation_type, created_at. No fields such as deleted_at are referenced or used in this endpoint. The record is returned if it exists with the specified ID; errors are returned otherwise. Related: PATCH (list), POST (create), PUT (update), DELETE (remove).","summary":"Fetch a single ai_shop_donation_coupons record by ID (ai_shop_donation_coupons table).","parameters":[{"name":"id","description":"Unique identifier of donation coupon to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The donation coupon record (all schema fields).","typeName":"IAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons/{id}","method":"get"},{"specification":"Create a donation coupon record in ai_shop_donation_coupons with atomic schema fields: ai_shop_coupon_id, ai_shop_customer_id, optional ai_shop_order_id, amount_donated, donation_type. No fields outside schema are referenced. No soft-delete or extra audit field handling.","description":"This POST operation inserts a new record into ai_shop_donation_coupons table. Request body must include all required and optional fields defined in the schema: ai_shop_coupon_id, ai_shop_customer_id, possibly ai_shop_order_id, amount_donated, and donation_type. No reference to deleted_at or created_by, as those do not exist. System populates created_at automatically. Field validation is strictly schema-based. Related: PATCH (list), GET (single), PUT (update), DELETE (remove).","summary":"Create a new ai_shop_donation_coupons record (ai_shop_donation_coupons table).","parameters":[],"requestBody":{"description":"All required and optional fields for donation coupon creation (per schema).","typeName":"IAiShopDonationCoupon.ICreate"},"responseBody":{"description":"The created donation coupon resource.","typeName":"IAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons","method":"post"},{"specification":"Update an existing ai_shop_donation_coupons record by ID. The only modifiable fields are those present in the schema: ai_shop_coupon_id, ai_shop_customer_id, ai_shop_order_id (optional), amount_donated, donation_type. No non-schema columns are referenced, and no soft-delete restoration logic is present.","description":"This PUT operation updates a donation coupon entry in the database (ai_shop_donation_coupons table) using its unique ID. All modifiable and required fields are from the schema: ai_shop_coupon_id, ai_shop_customer_id, optional ai_shop_order_id, amount_donated, donation_type. All fields must be assigned values as per schema normalization. Restoration or update of a deleted_at or similar field is not performed, as the column does not exist. Errors are returned for invalid ID, missing or invalid body fields, or partial updates.","summary":"Update a donation coupon record (ai_shop_donation_coupons table) by ID.","parameters":[{"name":"id","description":"The unique identifier of the donation coupon record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full set of fields to update this donation coupon (all schema fields)","typeName":"IAiShopDonationCoupon.IUpdate"},"responseBody":{"description":"The updated donation coupon resource.","typeName":"IAiShopDonationCoupon"},"authorizationRoles":null,"path":"/aiShop/donationCoupons/{id}","method":"put"},{"specification":"Delete a donation coupon record by its unique ID (ai_shop_donation_coupons table). The table does NOT include deleted_at or any other soft delete logic, so deletion is always permanent. No deleted_at, restored, or similar fields are updated during the operation.","description":"This DELETE endpoint permanently removes a donation coupon row from the ai_shop_donation_coupons table using its unique ID as the path variable. Because the table lacks a deleted_at column, this is a hard delete (permanent, non-reversible). The endpoint never references or updates any non-schema column such as deleted_at. Success or error is returned based purely on existence of the record with the specified ID.","summary":"Permanently delete a donation coupon record (hard delete; ai_shop_donation_coupons table).","parameters":[{"name":"id","description":"The unique identifier of the donation coupon record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Confirmation of deletion (typically null or status only).","typeName":"IVoid"},"authorizationRoles":null,"path":"/aiShop/donationCoupons/{id}","method":"delete"},{"specification":"List/filter/search ai_shop_inquiries records, providing pagination and query on all atomic fields included in schema: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at. Only existing columns in schema are referenced. The operation does not cover retrieval of replies or moderation actions, which are covered in related endpoints.","description":"This PATCH operation provides a paginated, filterable listing of ai_shop_inquiries entries, returning only the schema-defined atomic fields: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at. Search, filtering, and sorting can be applied to any present column. Output pagination follows platform conventions. Related data such as replies, moderation actions, or customer details are not included in the response; only the atomic inquiry records. No fields outside the schema (e.g., deleted_at, created_by, etc.) are referenced. Error handling includes bad queries or search patterns. Associated endpoints: GET (single), POST (create), PUT (update), DELETE (delete).","summary":"Search and paginate ai_shop_inquiries entries (from ai_shop_inquiries table).","parameters":[],"requestBody":{"description":"Filtering, sorting, and paging parameters based strictly on schema fields.","typeName":"IAiShopInquiry.IRequest"},"responseBody":{"description":"Paginated list of inquiries with only schema-defined fields.","typeName":"IPageAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries","method":"patch"},{"specification":"Fetch a single inquiry by its unique identifier from the ai_shop_inquiries table. The record contains only fields present in the schema: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at. No other fields are returned or referenced.","description":"This GET endpoint retrieves a single inquiry entry from the ai_shop_inquiries table using the specified ID as a path parameter. The response strictly adheres to schema: id, ai_shop_customer_id, ai_shop_product_id, title, body, status, created_at, updated_at are included. No outside columns or soft-delete logic are referenced, since deleted_at and related fields are not defined. This operation is concerned solely with the direct inquiry record; related entities such as replies or moderation events are not returned.","summary":"Retrieve a single ai_shop_inquiries entry by ID (ai_shop_inquiries table).","parameters":[{"name":"id","description":"Unique ID of the inquiry record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested ai_shop_inquiries record (schema fields only).","typeName":"IAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries/{id}","method":"get"},{"specification":"Insert a new inquiry record into ai_shop_inquiries, consuming only atomic schema fields: ai_shop_customer_id (required), ai_shop_product_id (optional), title, body, status. No other fields are referenced or created. The created_at and updated_at columns are automatically handled by the system/database.","description":"This POST endpoint inserts a new row into ai_shop_inquiries table. The request body must supply all required schema fields: ai_shop_customer_id (customer writing the inquiry), ai_shop_product_id (optional association), title (subject), body (content), and status (set at creation; e.g., 'open', 'answered', etc.). Only explicit schema fields are permitted; deleted_at, created_by, or other non-schema fields are never referenced or used. Timestamp fields are managed by the backend/database automatically. Related endpoints: PATCH (list/filter), GET (single), PUT (update), DELETE (remove).","summary":"Create a new ai_shop_inquiries row in the ai_shop_inquiries table.","parameters":[],"requestBody":{"description":"Schema-based request body for creating a new inquiry record.","typeName":"IAiShopInquiry.ICreate"},"responseBody":{"description":"The created inquiry resource.","typeName":"IAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries","method":"post"},{"specification":"Updates an existing inquiry specified by ID. Referenced model: ai_shop_inquiries from the Prisma schema. This operation replaces atomic fields of the inquiry, all of which are actually present in the schema. Specifically, the operation allows updating fields like title, body, status, and the referenced ai_shop_product_id if permitted in business logic. It NEVER assumes existence of deleted_at or audit-tracking fields beyond those present. This endpoint is used for workflows such as correcting inquiry details, changing the status (e.g., from open to answered or closed), or updating reference to a product. Required permission and input validation must check incoming fields against those actually defined in ai_shop_inquiries schema.","description":"This operation allows an authorized user to update an existing inquiry identified by its unique ID. Only those properties that are defined in the ai_shop_inquiries table can be updated (title, body, status, ai_shop_product_id). Attempting to update properties that do not exist, such as deleted_at or non-defined audit fields, will result in a validation failure. The updated fields will overwrite the current values in the inquiry record. Any attempts to alter ID or immutable audit fields (created_at) should be rejected by system validation. Use this endpoint when a customer or authorized actor (such as an admin) must correct the inquiry details for compliance, business clarification, or workflow updates.","summary":"Updates a single inquiry in ai_shop_inquiries (PUT by ID).","parameters":[{"name":"id","description":"The unique ID of the inquiry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Inquiry object containing only schema-defined fields that can be updated in ai_shop_inquiries (title, body, status, ai_shop_product_id)","typeName":"IAiShopInquiry.IUpdate"},"responseBody":{"description":"The updated inquiry object defined by ai_shop_inquiries schema","typeName":"IAiShopInquiry"},"authorizationRoles":null,"path":"/aiShop/inquiries/{id}","method":"put"},{"specification":"Deletes an inquiry by the given ID, following behavior strictly as defined by the ai_shop_inquiries schema. There is NO field like 'deleted_at' present, so this endpoint performs a HARD DELETE – the inquiry will be permanently removed from the database, without soft delete behavior. This endpoint is used to purge records that must be erased for regulatory or business purposes. Hard delete operations are irreversible, and system validation must confirm record existence before deletion.","description":"This operation deletes the inquiry record with the provided ID. Since the ai_shop_inquiries table does not have any soft delete field (e.g., deleted_at), the deletion is permanent and irreversible. No record of the deleted inquiry is retained in this table. The operation is only allowed to authorized actors with deletion rights to ensure compliance and prevent accidental loss of data.","summary":"Deletes a single inquiry in ai_shop_inquiries (HARD DELETE).","parameters":[{"name":"id","description":"The unique ID of the inquiry to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/inquiries/{id}","method":"delete"},{"specification":"Retrieves a list of inquiry replies with search/pagination or filtering logic. Referenced model: ai_shop_inquiry_replies in the Prisma schema. The endpoint supports business needs for filtering replies (e.g., by inquiry, by author, or by creation date) depending on the request body structure. Returned data only includes real schema fields. Useful for dashboards, threaded conversation views, or moderation interfaces. Pagination and search/sort fields must adhere to the schema-defined field names.","description":"Fetch a list of inquiry replies based on search, filter, or pagination parameters. All returned properties correspond directly to the ai_shop_inquiry_replies model – there are no non-existent or denormalized fields included in output. Only filter on fields that are defined in the actual schema, such as ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body, and created_at. No 'deleted_at' or similar fields exist. Use for displaying response threads, powering moderation queues, or implementing conversational UIs.","summary":"List/search of inquiry replies in ai_shop_inquiry_replies (PATCH with filters/pagination).","parameters":[],"requestBody":{"description":"Request body for searching and paginating inquiry replies, filtering strictly on actual ai_shop_inquiry_replies schema fields","typeName":"IAiShopInquiryReply.IRequest"},"responseBody":{"description":"Page response of ai_shop_inquiry_replies (paginated list with schema-compliant fields only)","typeName":"IPageIAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies","method":"patch"},{"specification":"Retrieves a single inquiry reply by its ID, referencing the actual ai_shop_inquiry_replies Prisma table. The reply includes only fields present in this model (body, ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, created_at). Excludes any audit or deletion fields not actual in the Prisma schema. Use this operation to display detailed content for a conversation reply, for support, moderation, or threaded discussion UIs.","description":"Fetch a single inquiry reply record from the ai_shop_inquiry_replies table using its unique ID. All fields in the response (body, ai_shop_inquiry_id, etc.) exactly match those present in the schema. No phantom or derived fields will appear; only atomic and normalized data is returned, as per schema design. This endpoint is used in moderation tools, threaded UI viewers, or for detailed review workflows.","summary":"Get detail of a single inquiry reply (ai_shop_inquiry_replies GET by ID).","parameters":[{"name":"id","description":"Unique ID of the inquiry reply","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The inquiry reply object as stored in the ai_shop_inquiry_replies table","typeName":"IAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies/{id}","method":"get"},{"specification":"Creates a new inquiry reply. Relies entirely on the fields defined in the ai_shop_inquiry_replies Prisma schema: ai_shop_inquiry_id (required), ai_shop_seller_id or ai_shop_admin_id (depending on role), body, parent_id (for threading). No fields outside of the actual schema may be posted or set. This is used by sellers & admins responding to customer inquiries, including threaded replies. System validation must ensure all required schema fields are present and that foreign key relationships are valid on creation.","description":"Create a new reply to an inquiry, setting only the properties present in the ai_shop_inquiry_replies schema: target inquiry (ai_shop_inquiry_id), reply author (ai_shop_seller_id or ai_shop_admin_id depending on actor), body (text reply), and optional parent_id if creating a threaded/nested reply. Any attempt to set fields not present in the schema will be rejected. System must enforce foreign key constraints and require all non-nullable fields for a reply to be created.","summary":"Create new inquiry reply (ai_shop_inquiry_replies POST).","parameters":[],"requestBody":{"description":"Inquiry reply creation body, containing only fields from ai_shop_inquiry_replies schema (ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, body)","typeName":"IAiShopInquiryReply.ICreate"},"responseBody":{"description":"Created inquiry reply object, as stored in ai_shop_inquiry_replies table","typeName":"IAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies","method":"post"},{"specification":"Updates an existing inquiry reply specified by ID. References ai_shop_inquiry_replies model. Permits updates to body, parent_id, ai_shop_seller_id, ai_shop_admin_id, never anything outside the schema. Attempting to update fields not present (deleted_at, etc.) will fail. Used to correct reply content or adjust relationships (e.g., reparent a reply).","description":"Update an inquiry reply with given ID, providing as request body only those fields which are permitted by the ai_shop_inquiry_replies schema. Includes fields like ai_shop_inquiry_id, ai_shop_seller_id, ai_shop_admin_id, parent_id, and body. No ability to update created_at or any non-existent audit field. Used for content correction, author change (by admin), or thread structure management. System validation enforces constraints.","summary":"Update single inquiry reply (ai_shop_inquiry_replies PUT by ID).","parameters":[{"name":"id","description":"ID of the inquiry reply to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request body for updating the inquiry reply; only ai_shop_inquiry_replies schema fields accepted","typeName":"IAiShopInquiryReply.IUpdate"},"responseBody":{"description":"The updated reply object, schema-compliant fields only","typeName":"IAiShopInquiryReply"},"authorizationRoles":null,"path":"/aiShop/inquiryReplies/{id}","method":"put"},{"specification":"Deletes an inquiry reply by ID. Table ai_shop_inquiry_replies has NO soft delete (deleted_at, is_deleted) field. Thus, this performs a HARD DELETE, permanently removing the record. This operation is irreversible. All deletion rights and access validation must be enforced by system per business rules. Only available to authorized actors (e.g., admin, owner).","description":"Permanently removes the inquiry reply record with the given ID from ai_shop_inquiry_replies. There is no soft delete mechanism in this schema; data is erased from the table. Used for compliance, moderation, or post-incident cleanup. The operation must check for record existence before performing the removal and must verify delete permissions. No fields are left in the database; this action cannot be reversed.","summary":"Delete single inquiry reply (ai_shop_inquiry_replies HARD DELETE by ID).","parameters":[{"name":"id","description":"ID of the reply to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/inquiryReplies/{id}","method":"delete"},{"specification":"Returns a paginated list of reviews, supporting filtering/sorting solely on fields defined in ai_shop_reviews from the Prisma schema. Allows searching on attributes such as ai_shop_customer_id, ai_shop_product_id, rating, status, body, created_at. Used for browse, moderation, dashboards. All fields mentioned or returned are actually present in the review table.","description":"Retrieves review records using filters/pagination that match ai_shop_reviews actual columns. Filters may include customer ID, product ID, status, or search on body text/rating/created_at within the boundary of schema. Only uses fields that physically exist in the table. Used for review management UIs, analytics, or moderation workflows. Does not assume any non-existent audit or deletion fields. Returned reviews contain only valid, atomic fields of the review object.","summary":"Fetch a list of reviews from ai_shop_reviews (PATCH with search/pagination).","parameters":[],"requestBody":{"description":"Search/pagination fields for review list; must match ai_shop_reviews schema field names (customer_id, product_id, body, status, rating, created_at, etc.)","typeName":"IAiShopReview.IRequest"},"responseBody":{"description":"Paginated results containing valid review objects only","typeName":"IPageIAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews","method":"patch"},{"specification":"Retrieves a single review record by its unique ID. All returned properties are present in ai_shop_reviews Prisma schema (body, ai_shop_customer_id, ai_shop_product_id, rating, status, created_at, updated_at). This endpoint is used for detailed review readout, in workflows such as product feedback, moderation, or analytics. No phantom or soft delete logic exists or is referenced.","description":"Get a single review by ID, returning only schema fields as described in ai_shop_reviews. No assumption of soft-deletion, extended audit, or joined data. All information provided directly reflects atomic record data. Used by customer dashboards, moderation, or seller product analytics detail views.","summary":"Get single review detail (ai_shop_reviews GET by ID).","parameters":[{"name":"id","description":"Unique identifier for a review","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The review record as stored in ai_shop_reviews, with only schema-defined properties","typeName":"IAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews/{id}","method":"get"},{"specification":"Creates a new review in the ai_shop_reviews table. Accepts only defined fields from the schema: ai_shop_customer_id, ai_shop_product_id, body, rating, status, and created_at (system-generated). Used by customers providing product feedback. Input validation will reject any non-schema fields. Business and foreign key constraints must be enforced at creation time for referential integrity.","description":"Creates a new product review, accepting only schema-defined fields (required: ai_shop_customer_id, ai_shop_product_id, body, rating, status). User must not provide audit, deleted, or joined fields. Record is inserted atomically and cannot initially be soft-deleted or altered outside mutable fields. Input validation ensures that required keys are supplied and valid.","summary":"Create new review (ai_shop_reviews POST).","parameters":[],"requestBody":{"description":"Review creation body, limited strictly to ai_shop_reviews schema-defined properties: ai_shop_customer_id, ai_shop_product_id, body, rating, status","typeName":"IAiShopReview.ICreate"},"responseBody":{"description":"Review as inserted into ai_shop_reviews; all data is from actual schema columns","typeName":"IAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews","method":"post"},{"specification":"Updates an existing review identified by ID. All updates are limited strictly to the fields present in ai_shop_reviews: body, rating, status, ai_shop_customer_id, ai_shop_product_id (if business logic allows). No non-existent properties, deletion fields, or hidden columns are ever referenced. Used for correcting review details, handling moderation workflow, or correcting user input mistakes. Input strictly filtered to allow only updates of real, allowed fields.","description":"Updates a single review using provided body and allowed fields, ensuring no non-existent fields are referenced. Operations on ID and audit fields are prohibited. Used for updating review text, rating, or status after moderation or user correction. Cannot set soft/hard deleted state—record remains present until actively deleted with the delete endpoint.","summary":"Update review (ai_shop_reviews PUT by ID).","parameters":[{"name":"id","description":"Unique identifier for the review to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Object with updatable review fields that exist in ai_shop_reviews schema (body, rating, status, ai_shop_customer_id, ai_shop_product_id)","typeName":"IAiShopReview.IUpdate"},"responseBody":{"description":"Fully updated review object, all properties as in ai_shop_reviews table","typeName":"IAiShopReview"},"authorizationRoles":null,"path":"/aiShop/reviews/{id}","method":"put"},{"specification":"Deletes a review identified by ID. The ai_shop_reviews table DOES NOT have a deleted_at or soft delete column. This operation is a HARD DELETE; the review record is physically removed from the table. No soft delete or hidden retention behaviors will be triggered. This is irreversible and must be limited to authorized actors.","description":"Permanently and irreversibly deletes a review record in ai_shop_reviews by ID. Since no soft delete field exists, there is no record left behind after a successful call. Used for moderation, user request deletion, or for compliance reasons. System must verify record existence and ensure the operation is permitted to prevent data loss from unauthorized use.","summary":"Delete review (ai_shop_reviews HARD DELETE by ID).","parameters":[{"name":"id","description":"Unique ID of the review to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/reviews/{id}","method":"delete"},{"specification":"List review moderation actions from the ai_shop_review_moderations table. Supports advanced filtering, sorting, and pagination. Each record represents a single moderation decision taken by an admin on a customer review, such as approval, rejection, or flagging, and includes the moderation action, reason, and timestamp. Used for compliance and complete auditability of all review moderation actions. Only the fields in the schema can be referenced: id, ai_shop_review_id, ai_shop_admin_id, action, reason, created_at. No non-existent fields should be referenced in filtering or descriptions.","description":"This endpoint retrieves a list of review moderation records from the ai_shop_review_moderations table. Each record corresponds to a moderation action taken by an admin on a specific review. All properties in the response directly match the actual database schema fields: id, ai_shop_review_id (the review that was moderated), ai_shop_admin_id (the admin who performed the action), action (the moderation type: 'approve', 'reject', 'flag'), reason (why the moderation was performed), and created_at (when the action occurred). No referencing of fields not present in the schema is allowed. Filtering and searching can be offered only on these fields. This is essential for building moderation dashboards and compliance tooling. Deletion status or user-tracking fields must not be referenced, as they are not present in the schema. Pagination is supported.","summary":"List review moderation actions (ai_shop_review_moderations table) with search and filtering.","parameters":[],"requestBody":{"description":"Request body specifying filtering, searching, sorting, and pagination options for retrieving review moderation actions. All fields must map directly to existing schema fields.","typeName":"IAiShopReviewModerations.IRequest"},"responseBody":{"description":"Paginated list of review moderation records. Only actual fields in ai_shop_review_moderations are included.","typeName":"IPageAiShopReviewModerations"},"authorizationRoles":null,"path":"/aiShop/reviewModerations","method":"patch"},{"specification":"Retrieve a specific review moderation action from the ai_shop_review_moderations table by unique id. Returns the moderation record details including admin, review, action, reason, and timestamp. Only fields defined in the schema are included. There is no soft delete field, so missing records are considered not found (hard delete only).","description":"This API fetches the details of a specific review moderation record given its id. The response includes only fields present in the ai_shop_review_moderations schema: id, ai_shop_review_id, ai_shop_admin_id, action, reason, and created_at. If the record does not exist, a 404 is returned. There are no soft delete capabilities for this entity, so absence means permanent removal. Only actual fields are returned or referenced. Used for audit trail, legal review, or frontend drill-downs.","summary":"Get a specific review moderation action from ai_shop_review_moderations by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the target review moderation record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed moderation action record from ai_shop_review_moderations table for the given id.","typeName":"IAiShopReviewModerations"},"authorizationRoles":null,"path":"/aiShop/reviewModerations/{id}","method":"get"},{"specification":"Create a review moderation record in the ai_shop_review_moderations table. Records moderation actions such as approval, rejection, or flag for a review, including admin, review, action, and justification. All required and optional fields must be mapped to schema fields. Soft delete is not supported; records are immutable after creation except via update endpoint.","description":"This endpoint allows creation of a new review moderation record in the ai_shop_review_moderations table. The request body must contain all data required for a valid moderation entry, including ai_shop_review_id (the review being moderated), ai_shop_admin_id (the admin performing the action), action (one of 'approve', 'reject', 'flag'), and reason (justification for moderation). Timestamps and uuid id are managed by the system. All field references strictly follow the schema; no soft delete or non-existent fields. Used by admins for compliance, workflow automation, and audit trail maintenance.","summary":"Create a new review moderation record (ai_shop_review_moderations table).","parameters":[],"requestBody":{"description":"Content required to create a review moderation record. Only schema fields allowed.","typeName":"IAiShopReviewModerations.ICreate"},"responseBody":{"description":"Created review moderation record reflecting the moderation action.","typeName":"IAiShopReviewModerations"},"authorizationRoles":["admin"],"path":"/aiShop/reviewModerations","method":"post"},{"specification":"Update a review moderation record in ai_shop_review_moderations by id. Supports changing fields such as action or reason. Only defined schema fields are updatable. No soft delete is supported; delete operations are always hard delete. All field references must exist in the schema.","description":"This API updates an existing review moderation record identified by id. The request body includes only those fields from the ai_shop_review_moderations schema that are allowed to be changed. Typically, action and reason may be editable if policy allows. All references must conform strictly to actual entity fields. There are no soft or logical deletes on this record; only actual changes to the allowed columns are processed. Used for correction or compliance post-facto update by admins.","summary":"Update an existing review moderation record (ai_shop_review_moderations table) by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the target review moderation record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Content allowed for updating a review moderation record. Only schema fields permitted.","typeName":"IAiShopReviewModerations.IUpdate"},"responseBody":{"description":"Updated moderation action record after modification.","typeName":"IAiShopReviewModerations"},"authorizationRoles":["admin"],"path":"/aiShop/reviewModerations/{id}","method":"put"},{"specification":"Delete a review moderation record by id. There is no soft delete field in ai_shop_review_moderations; this operation permanently removes the record. All references must adhere to the schema. Absence is hard delete; cannot be restored. Used for data clean-up or compliance error correction.","description":"This endpoint deletes a review moderation record specified by id from the ai_shop_review_moderations table. Since there is no soft delete field, the deletion is immediate and irreversible (hard delete). Only a valid id field is used for deletion and only the schema-defined fields are allowed in parameters. No fields for restoration or logical deletion are present. Used for error correction or audit compliance where records must be removed from the system.","summary":"Delete a review moderation record by id (permanently, as hard delete).","parameters":[{"name":"id","description":"Unique identifier (UUID) of the review moderation record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/reviewModerations/{id}","method":"delete"},{"specification":"List review helpfulness ratings from ai_shop_review_ratings table, supporting search, filter, pagination. Each record represents a single customer's helpfulness vote (true/false) on a specific review. Only the schema fields—id, ai_shop_review_id, ai_shop_customer_id, helpful, created_at—are referenced in filtering, sorting, or searching. No soft delete or status fields exist.","description":"This endpoint returns a paginated list of review helpfulness ratings (votes) from the ai_shop_review_ratings table. Each entry records a customer's upvote/downvote (helpful boolean) on a review. Filtering, searching, and sorting are allowed only on the actual schema fields. There are no deletion status or custom metadata fields. Pagination is included; used for analytics, abuse monitoring, and engagement reporting.","summary":"List review helpfulness ratings (votes) in ai_shop_review_ratings table.","parameters":[],"requestBody":{"description":"Request body specifying filtering, search, sorting, and pagination for review ratings. All keys must map to schema fields.","typeName":"IAiShopReviewRatings.IRequest"},"responseBody":{"description":"Paginated list of review helpfulness rating (vote) records.","typeName":"IPageAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings","method":"patch"},{"specification":"Fetch a specific review helpfulness rating by id from ai_shop_review_ratings. Returns all defined fields: id, ai_shop_review_id, ai_shop_customer_id, helpful, created_at. There is no soft delete; missing records are considered permanently deleted. Only actual schema fields are referenced or returned.","description":"This retrieves a single review helpfulness rating record from the ai_shop_review_ratings table, identified by its id. The response includes id, ai_shop_review_id, ai_shop_customer_id, helpful (boolean), and created_at. If the record is missing, a 404 is returned (hard delete). All field references are strictly as per the actual schema; additional flags, soft delete, or non-existent fields are not permitted.","summary":"Get a specific review helpfulness rating from ai_shop_review_ratings by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) for the review helpfulness rating record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed review helpfulness rating record for the given id.","typeName":"IAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings/{id}","method":"get"},{"specification":"Create a review helpfulness rating record in ai_shop_review_ratings. Each record designates a customer's upvote (helpful=true) or downvote (helpful=false) for a review. All mandatory and optional fields map directly to schema fields. Deletions are hard; no restoration features exist.","description":"This endpoint enables creation of a new helpfulness vote (upvote or downvote) for a review by a customer. Input must map to schema fields: ai_shop_review_id, ai_shop_customer_id, helpful (boolean). System-managed fields such as id and timestamps are managed internally. No soft delete or logical delete supported; every vote is an atomic, auditable record as mandated by the schema. Used for review ranking, abuse detection, and trust analytics.","summary":"Create a review helpfulness rating record (customer upvote/downvote for a review).","parameters":[],"requestBody":{"description":"Content required for creation of a review helpfulness vote. Only schema fields allowed.","typeName":"IAiShopReviewRatings.ICreate"},"responseBody":{"description":"Created review helpfulness rating record reflecting the user's vote.","typeName":"IAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings","method":"post"},{"specification":"Update an existing review helpfulness rating record by id in ai_shop_review_ratings. Permits changing only allowed schema fields, such as helpful (boolean). System fields (id, created_at) may not be changed. No soft delete—removals are hard delete only. Strict enforcement of field compliance with schema.","description":"This API updates a review helpfulness rating (upvote/downvote) recorded in ai_shop_review_ratings, as referenced by id. Only the field helpful can be changed upon update; other system fields such as id or created_at should not be altered. There is no soft delete flag: delete, if needed, will be a hard delete. Used for resolving accidental voting mistakes, abuse handling, or data correction. All inputs and outputs reflect only actual schema fields.","summary":"Update an existing review helpfulness rating record (upvote/downvote) by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the review rating record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Content permitted for update (e.g., helpful boolean). Only schema fields allowed.","typeName":"IAiShopReviewRatings.IUpdate"},"responseBody":{"description":"Updated review rating record.","typeName":"IAiShopReviewRatings"},"authorizationRoles":null,"path":"/aiShop/reviewRatings/{id}","method":"put"},{"specification":"Delete a review helpfulness rating record by id from ai_shop_review_ratings. No soft delete is supported, so this will permanently remove the record (hard delete). Only fields present in the schema may be referenced as parameters. This is for clean-up or error correction.","description":"This endpoint deletes (hard deletes) a review helpfulness rating record (vote) from ai_shop_review_ratings by its id. There is no field for soft deletion; the operation is irreversible. Only the 'id' parameter is accepted. Used to clean up spam, remove abuse, or correct mistakes. Additional properties or parameters are strictly disallowed.","summary":"Delete a review helpfulness rating record by id (permanently, hard delete).","parameters":[{"name":"id","description":"Unique identifier (UUID) of the vote record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/reviewRatings/{id}","method":"delete"},{"specification":"List inquiry moderation records from ai_shop_inquiry_moderations table, supporting search, filtering, and pagination. Each row represents an action taken by an admin on a customer inquiry, such as approving, flagging, or deleting. Only schema fields are allowed as filters or in descriptions: id, ai_shop_inquiry_id, ai_shop_admin_id, action, reason, created_at.","description":"Retrieves a paginated list of inquiry moderation records from ai_shop_inquiry_moderations. Each row reflects a moderation action (such as approval, flag, or deletion) performed by an admin on an inquiry. Only the actual schema fields can be used: id, ai_shop_inquiry_id (the inquiry moderated), ai_shop_admin_id (the acting admin), action (moderation type), reason (rationale for moderation), and created_at (when moderation occurred). No non-existent fields, soft delete, or status flags are allowed. This endpoint is used in backoffice and legal compliance workflows. Pagination and filtering allowed only by schema fields.","summary":"List inquiry moderation records in ai_shop_inquiry_moderations table.","parameters":[],"requestBody":{"description":"Specifies filtering, search, sorting, and pagination for moderation event retrieval. All keys must match actual schema fields.","typeName":"IAiShopInquiryModerations.IRequest"},"responseBody":{"description":"Paginated list of inquiry moderation records.","typeName":"IPageAiShopInquiryModerations"},"authorizationRoles":null,"path":"/aiShop/inquiryModerations","method":"patch"},{"specification":"Get details for a specific inquiry moderation record from ai_shop_inquiry_moderations table by id. Returns record with admin, action type, reason, and timestamp. Soft delete is not present; missing equals hard delete. Only defined schema fields are included.","description":"This API fetches a specific inquiry moderation record by id from ai_shop_inquiry_moderations. Response fields match the schema: id, ai_shop_inquiry_id, ai_shop_admin_id, action, reason, created_at. If not found, 404 is returned. All properties are actual schema fields. Used for audit, compliance, and workflow reporting.","summary":"Get an inquiry moderation record by id from ai_shop_inquiry_moderations table.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the inquiry moderation record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed inquiry moderation record.","typeName":"IAiShopInquiryModerations"},"authorizationRoles":null,"path":"/aiShop/inquiryModerations/{id}","method":"get"},{"specification":"Create a new inquiry moderation action. This operation inserts a record into the 'ai_shop_inquiry_moderations' table, which tracks all moderation actions (such as approve, flag, or delete) performed by an admin on a customer inquiry. The relevant fields in the schema are: id (auto-generated), ai_shop_inquiry_id (the inquiry being moderated), ai_shop_admin_id (the admin performing the action), action (the moderation action type as a string, e.g., approve/flag/delete), reason (justification for the action), and created_at (the timestamp when the action was taken). Business and compliance requirements are ensured through full auditability of these records. No soft-delete is present: once created, the record is immutable and retained for audit compliance. This API supports workflow and platform compliance management.","description":"This endpoint allows an admin to create a new moderation record for a customer inquiry. The request must include the inquiry ID being moderated, admin ID performing the action, the action type (approve, flag, delete, etc.), and the reason for the moderation. The API stores these details atomically, as described in the ai_shop_inquiry_moderations Prisma schema, maintaining a full audit trail. Each moderation action is irreversible—there is no soft-delete or update for moderation logs for compliance and traceability. Only fields defined in the schema (ai_shop_inquiry_id, ai_shop_admin_id, action, reason, created_at) are processed. This adheres to strict 3NF normalization, separation of content and audit logs, and satisfies audit/compliance requirements for inquiry moderation workflows.","summary":"Create a new inquiry moderation record (ai_shop_inquiry_moderations).","parameters":[],"requestBody":{"description":"Information required to create an inquiry moderation record.","typeName":"IAiShopInquiryModerations.ICreate"},"responseBody":{"description":"The newly created inquiry moderation record.","typeName":"IAiShopInquiryModerations"},"authorizationRoles":["admin"],"path":"/aiShop/inquiryModerations","method":"post"},{"specification":"Update an existing inquiry moderation action. This operation modifies a record in the 'ai_shop_inquiry_moderations' table. The only updatable fields as per Prisma schema are 'action' and 'reason'. The record is identified by its 'id' path parameter (UUID). There is no soft-delete or hard-delete for this entity — moderation logs are intended to be immutable by default, but if update is supported, only annotated business fields can change (such as annotating or correcting the action/reason, not operational audit fields). This endpoint is compliance driven; schema fields are strictly followed. No fields outside of schema allowed.","description":"Update an existing inquiry moderation action by its unique ID. According to ai_shop_inquiry_moderations schema, only the action type and reason fields can be modified. All audit trail requirements are maintained, with edits officially tracked. This endpoint only updates fields that exist in the schema: 'action' and 'reason'. Fields such as 'id', 'ai_shop_inquiry_id', 'ai_shop_admin_id', and 'created_at' cannot be altered. No soft-delete mechanism is present; modification is allowed only for correction or annotation purposes.","summary":"Update the action and reason of an inquiry moderation record (ai_shop_inquiry_moderations).","parameters":[{"name":"id","description":"The unique identifier (UUID) of the moderation record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated moderation action and/or reason.","typeName":"IAiShopInquiryModerations.IUpdate"},"responseBody":{"description":"The updated inquiry moderation record.","typeName":"IAiShopInquiryModerations"},"authorizationRoles":["admin"],"path":"/aiShop/inquiryModerations/{id}","method":"put"},{"specification":"Delete (hard delete) an inquiry moderation record. The 'ai_shop_inquiry_moderations' schema does not contain any fields indicating soft delete (no deleted_at, is_deleted, etc.). This API will permanently remove the specified moderation action from the database using its 'id' as the path parameter. This operation is irreversible and should be restricted to compliance contexts (such as removal after retention policy expiration), as audit traceability is lost upon deletion.","description":"Permanently delete an inquiry moderation record by its unique ID. The ai_shop_inquiry_moderations table has no soft delete field; this operation will hard delete the record from storage, and the moderation record cannot be recovered. This endpoint must be limited to system administrators or processes that enforce retention policy compliance, as deleting a moderation action may have audit implications. Only the id path parameter, corresponding to a real schema field, is required. No request body is needed.","summary":"Permanently delete an inquiry moderation record (ai_shop_inquiry_moderations) by ID.","parameters":[{"name":"id","description":"The unique identifier (UUID) of the moderation record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/aiShop/inquiryModerations/{id}","method":"delete"},{"specification":"Retrieve a list of product favorites (ai_shop_favorites_products) for the current user. The schema supports atomic retrieval by fields: id, ai_shop_customer_id (owner), ai_shop_product_id (target product), created_at (timestamp). This PATCH endpoint may support filtering (by customer, product), sorting (by date, etc.), and pagination, but only for fields present in the schema. No soft delete present—deletion is hard removal. This aligns with the AI Shop favorites requirements and entity design.","description":"Get a list of product favorite entries for a user, optionally supporting search, filter by product/customer, sorting by created_at, and pagination. All search and filter operations are only allowed on schema-defined fields: id, ai_shop_customer_id, ai_shop_product_id, created_at. This endpoint does not return deleted entries, as deletion is hard by schema. The response is paginated and includes only records matching the current user's account or specified filter values.","summary":"List product favorites for a user (ai_shop_favorites_products).","parameters":[],"requestBody":{"description":"Query parameters for filtering and pagination of favorites (all fields must be present in ai_shop_favorites_products schema).","typeName":"IAiShopFavoritesProducts.IListRequest"},"responseBody":{"description":"Paginated list of product favorites.","typeName":"IPageIAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts","method":"patch"},{"specification":"Retrieve the details of a single product favorite entry. The GET uses the id path parameter to fetch the ai_shop_favorites_products record, with fields: id, ai_shop_customer_id, ai_shop_product_id, created_at. This provides information on the specific product favorited by the user. No soft-deletion is present; only real entries are returned.","description":"Fetch a specific product favorite by its unique ID. Returns all schema-defined information for the ai_shop_favorites_products entity, ensuring that only existing hard entries are returned (no soft-deletion field in schema). Only retrieves schema fields: id, ai_shop_customer_id, ai_shop_product_id, created_at. Used for detail display and audit tracing of favorites.","summary":"Get details of a product favorite by ID (ai_shop_favorites_products).","parameters":[{"name":"id","description":"The unique identifier (UUID) of the favoritesProducts record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Schema-defined fields for a single product favorite entry.","typeName":"IAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts/{id}","method":"get"},{"specification":"Create a new favorite product entry. Inserts a record into 'ai_shop_favorites_products' with required fields: ai_shop_customer_id, ai_shop_product_id, and created_at. No soft delete field exists; favoriting an already-favorited item should result in an error or no-op per unique constraint on (ai_shop_customer_id, ai_shop_product_id).","description":"Add a product to the current user's favorites. The request requires customer ID, product ID, and timestamp as per ai_shop_favorites_products schema. Duplicate requests for the same product by the same customer should be blocked or handled as defined by business rules; the unique constraint enforces uniqueness at the data level. No soft-deletion tracking present.","summary":"Create a new product favorite (ai_shop_favorites_products).","parameters":[],"requestBody":{"description":"Fields required to create a new favorite entry.","typeName":"IAiShopFavoritesProducts.ICreate"},"responseBody":{"description":"Resulting favorite product record created.","typeName":"IAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts","method":"post"},{"specification":"Update a product favorite entry. This updates mutable fields defined in the ai_shop_favorites_products schema, namely ai_shop_product_id and potentially created_at. The entry is identified by the unique id path parameter. No soft-delete behavior present. Only schema-defined fields are allowed.","description":"Update a product favorite entry by its unique ID. Permitted fields for update include ai_shop_product_id and created_at, following the ai_shop_favorites_products schema. No fields outside of schema, such as deleted indicators, are processed. Uniqueness constraint still applies (cannot reassign to an already-favorited product by the user).","summary":"Update an existing favorite product entry (ai_shop_favorites_products).","parameters":[{"name":"id","description":"The unique identifier (UUID) of the favorite entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Mutable fields for updating a favorite entry (ai_shop_product_id, created_at).","typeName":"IAiShopFavoritesProducts.IUpdate"},"responseBody":{"description":"Returned updated favorite product record.","typeName":"IAiShopFavoritesProducts"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts/{id}","method":"put"},{"specification":"Delete (hard delete) a product favorite entry. The ai_shop_favorites_products schema does not have a soft delete field; deletion is permanent removal by unique id. Only the id path parameter is required for this operation. Deletion cannot be undone.","description":"Permanently remove a product from the user's favorites by its unique ID. Operation is a hard delete (no soft delete presence in schema), and is irreversible. Used for favorites management and user experience. Only id exists in schema; no additional fields are operated on or returned on successful deletion.","summary":"Delete a product favorite entry by ID (ai_shop_favorites_products) - hard delete.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the favorite record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"path":"/aiShop/favoritesProducts/{id}","method":"delete"},{"specification":"Retrieve a list of inquiry favorites (ai_shop_favorites_inquiries) for a user. Fields present in the schema are id, ai_shop_customer_id (owner), ai_shop_inquiry_id (target inquiry), created_at (timestamp). Supports filtering, search, pagination ONLY by fields present in the schema. No soft delete indicated; deletion is permanent removal from the table. This endpoint adheres to the Favorites System requirements and is 3NF-compliant.","description":"Fetch, filter, and list inquiry favorites for a user. Search/filter can only be performed on existing schema fields: id, ai_shop_customer_id, ai_shop_inquiry_id, created_at. The endpoint allows for paginated results; only actual, non-deleted entries are available, as hard delete is enforced. Output contains a paginated list of ai_shop_favorites_inquiries records as described in the schema.","summary":"List inquiry favorites for a user (ai_shop_favorites_inquiries).","parameters":[],"requestBody":{"description":"Schema-compliant query parameters for searching, filtering, and paginating inquiry favorites.","typeName":"IAiShopFavoritesInquiries.IListRequest"},"responseBody":{"description":"Page of inquiry favorites, as per ai_shop_favorites_inquiries schema.","typeName":"IPageIAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries","method":"patch"},{"specification":"Retrieve the detail of a single inquiry favorite by ID. The ai_shop_favorites_inquiries schema includes fields: id, ai_shop_customer_id, ai_shop_inquiry_id, created_at. This operation fetches only schema-compliant data for the specified favorite. No soft delete present in this entity.","description":"Fetch a specific inquiry favorite by its unique ID. Returns atomic fields as in ai_shop_favorites_inquiries: id, ai_shop_customer_id, ai_shop_inquiry_id, created_at. This API serves display, management, and audit needs, always returning only records existing at query time (no soft delete in schema).","summary":"Get details of an inquiry favorite by ID (ai_shop_favorites_inquiries).","parameters":[{"name":"id","description":"Unique identifier (UUID) for the inquiry favorite entity.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Single inquiry favorite, schema-compliant.","typeName":"IAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries/{id}","method":"get"},{"specification":"Create a new inquiry favorite for a user. This operation inserts a row into ai_shop_favorites_inquiries, requiring ai_shop_customer_id, ai_shop_inquiry_id, created_at per the schema. No soft deletion is present; attempts to favorite an already-favorited inquiry must respect the unique constraint (ai_shop_customer_id + ai_shop_inquiry_id).","description":"Add a new inquiry to the user's favorites. The request body must contain the customer's user ID, inquiry ID, and the created_at timestamp. If the combination already exists, error or no-op behavior is governed by the database unique constraint. Fields not present in the schema are ignored. No soft delete is supported; deletion is hard remove.","summary":"Create a new inquiry favorite (ai_shop_favorites_inquiries).","parameters":[],"requestBody":{"description":"Fields required to create a new inquiry favorite record.","typeName":"IAiShopFavoritesInquiries.ICreate"},"responseBody":{"description":"The created inquiry favorite record.","typeName":"IAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries","method":"post"},{"specification":"Update fields of an existing inquiry favorite record. Only schema-defined mutable fields (ai_shop_inquiry_id, created_at) can be updated. The entry is uniquely identified by its id. No soft-deletion is present. Adheres strictly to the ai_shop_favorites_inquiries schema specification.","description":"Update an inquiry favorite record by ID. Only fields ai_shop_inquiry_id and/or created_at can be modified according to schema; other fields like id and ai_shop_customer_id are not mutable. No non-schema, virtual, or deleted fields are allowed. Duplicate combinations based on uniqueness are not permitted (unique constraint enforced).","summary":"Update fields of an inquiry favorite record (ai_shop_favorites_inquiries).","parameters":[{"name":"id","description":"Unique identifier (UUID) for the inquiry favorite record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating ai_shop_inquiry_id or created_at, if needed.","typeName":"IAiShopFavoritesInquiries.IUpdate"},"responseBody":{"description":"Updated inquiry favorite entity.","typeName":"IAiShopFavoritesInquiries"},"authorizationRoles":["customer"],"path":"/aiShop/favoritesInquiries/{id}","method":"put"},{"specification":"Deletes a single inquiry favorite record specified by ID. This operation targets a unique favorite linkage between a customer and an inquiry, as stored in the ai_shop_favorites_inquiries table. The favorite entity consists of: id (PK), ai_shop_customer_id (FK), ai_shop_inquiry_id (FK), created_at (timestamp). There are no soft deletion fields (such as deleted_at), so this DELETE operation performs an immediate and permanent delete of the record from the database. This aligns with full removal of the favorite linkage between the user and the inquiry, making the inquiry no longer appear in the user's favorites. If the ID does not exist, a not-found error should be returned. There are no relationships that require cascading deletes for this operation. No additional fields are updated or set on delete; only physical deletion is performed.","description":"This endpoint permanently deletes a record in the ai_shop_favorites_inquiries table given its primary key ID. No soft delete or archival occurs, as there are no deleted_at or similar fields present; the row is irreversibly removed from the table. This endpoint is typically called when a user removes an inquiry from their favorites. Proper authentication and ownership enforcement must be applied to ensure users cannot delete favorites they do not own. Errors such as not-found, unauthorized, or forbidden should be handled appropriately. There are no cascading relationship effects for this record within this operation, as the favorite is an atomic link between customer and inquiry only. Related tables (customer, inquiry) are unaffected.","summary":"Permanently delete a favorite inquiry link from ai_shop_favorites_inquiries by ID (hard delete, no soft-delete).","parameters":[{"name":"id","description":"Primary key of the favorite inquiry link to be deleted (ai_shop_favorites_inquiries.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/favoritesInquiries/{id}","method":"delete"},{"specification":"Retrieves a paginated, filtered list of customer favorite addresses. This endpoint accesses ai_shop_favorites_addresses, which models the relationship between a customer and a favorited shipping/billing address. Columns: id (PK), ai_shop_customer_id (FK), ai_shop_profile_id (FK to customer profiles), created_at (timestamp). There are no additional metadata columns. Filtering and pagination are typically handled by customer ID, profile ID, and/or date. No soft-delete present; only current favorites are surfaced. The data returned consists of the atomic relationship and creation timestamp; the endpoint does NOT resolve or embed address/profile details itself.","description":"Retrieves a list (possibly paginated and/or filterable) of a user's favorited addresses as formalized in the ai_shop_favorites_addresses table. Each result consists of: the unique favorite row ID, the user/customer ID, the customer_profile ID (which links to the address data itself outside this entity), and the created_at timestamp. This API endpoint does not return address contents, only the mapping to customers and profiles. Authentication requires that the requesting user can only see their own favorites. Filtering is supported via customer_id, profile_id, or created_at ranges; results may be sorted as requested. No soft delete or hidden states exist—favorites are either present or not. Access control for address visibility is enforced at the business layer.","summary":"Get a filterable, paginated list of a user's favorited addresses from ai_shop_favorites_addresses.","parameters":[],"requestBody":{"description":"Parameters for searching, filtering, or paginating the favorites address list. Typical fields are customerId, profileId, date range, or pagination info.","typeName":"IAiShopFavoritesAddresses.IRequest"},"responseBody":{"description":"A paginated or filtered list of ai_shop_favorites_addresses objects. Each entry is a mapping between a user and a favorited shipping/billing address profile with a creation timestamp.","typeName":"IPageAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses","method":"patch"},{"specification":"Fetches a single favorite address record by its primary key from ai_shop_favorites_addresses. This table defines a direct mapping between a customer and an address/profile they have marked as favorite. Fields: id (PK), ai_shop_customer_id (FK), ai_shop_profile_id (FK to customer profile), created_at (timestamp). No soft-deletion or archival logic present; only current linkage exists. Used to verify if a specific address-profile combination is favorited, or to retrieve metadata about the favorite relationship (not the address details themselves). All output properties come directly from this schema. Address profile resolution, if needed, must use ai_shop_customer_profiles in a separate query.","description":"Retrieve a specific record from ai_shop_favorites_addresses by its unique ID. The returned object contains: id (the favorite link PK), ai_shop_customer_id (user), ai_shop_profile_id (references actual shipping/billing data in profiles), created_at (when this favorite was marked). This does NOT return or resolve detailed address or customer information itself, only the atomic linkage. The existence of this record allows applications to show if an address is currently favorited by a user. Access control must ensure that only the owner (customer) or authorized admin can view this mapping.","summary":"Get a single favorite address mapping from ai_shop_favorites_addresses by ID.","parameters":[{"name":"id","description":"Unique primary key for the favorite address entry (ai_shop_favorites_addresses.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested ai_shop_favorites_addresses record linking a customer and address profile.","typeName":"IAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses/{id}","method":"get"},{"specification":"Creates a new favorite address record for a user, linking them to a specific shipping/billing address profile. This operation inserts into ai_shop_favorites_addresses with required fields: ai_shop_customer_id (FK), ai_shop_profile_id (FK to ai_shop_customer_profiles), created_at (auto timestamp, or from request if auditable). No other fields present. Proper uniqueness/enforcement is required to prevent duplicate (customer_id, profile_id) combinations. No soft delete logic: all links are active. A successful creation returns the new favorite entry. Business logic must check existence of both customer and profile IDs, and only allow users to favorite their own addresses (enforced at API layer).","description":"Accepts a request to create a favorite address link (ai_shop_favorites_addresses) between a customer and a specific shipping/billing profile. Required input fields: ai_shop_customer_id (the favoriting user), ai_shop_profile_id (profile/address to be favorited). created_at is set at insert time. The endpoint enforces uniqueness so a user cannot favorite the same address/profile twice. No state/archival metadata present. Errors are returned for duplicate favorites or foreign key violations. Output is the newly created favorite relationship record. Does not modify or return underlying address data.","summary":"Create a new favorite address relationship in ai_shop_favorites_addresses for a customer and a profile.","parameters":[],"requestBody":{"description":"Favorite address creation parameters: customer ID, profile ID. No meta fields accepted; all values must correspond to fields in ai_shop_favorites_addresses.","typeName":"IAiShopFavoritesAddresses.ICreate"},"responseBody":{"description":"The new ai_shop_favorites_addresses record representing the link between customer and address profile.","typeName":"IAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses","method":"post"},{"specification":"Updates an existing favorite address link with new foreign keys, typically to reassign a favorite to a different profile (address update or correction). Operates on ai_shop_favorites_addresses where id matches the provided path parameter. Modifiable fields: ai_shop_customer_id, ai_shop_profile_id. created_at is not updated; no archive or soft-delete is present. Strict uniqueness and referential integrity enforced (cannot duplicate favorite pair). Must only allow user to update their own favorites. Returns the updated mapping record after success. Related address or profile data not impacted.","description":"Updates fields on a favorite address row in ai_shop_favorites_addresses by id. Updatable columns: ai_shop_customer_id (new owner) and/or ai_shop_profile_id (new profile/address favored). Cannot update created_at. Duplicate favorite records (same customer/profile pair) are forbidden by unique constraint. Must enforce ownership and referential integrity: updates allowed only by/for proper user and profile IDs. The endpoint does not cascade or impact underlying customer or profile records. Returns updated mapping. Soft delete is not available. Errors include not-found, unique violation, or forbidden.","summary":"Update a favorite address relationship in ai_shop_favorites_addresses by ID (customer/profile mapping edit).","parameters":[{"name":"id","description":"PK of the favorite address mapping to update (ai_shop_favorites_addresses.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for ai_shop_customer_id and/or ai_shop_profile_id to update the mapping. Only these fields are writable.","typeName":"IAiShopFavoritesAddresses.IUpdate"},"responseBody":{"description":"The updated ai_shop_favorites_addresses mapping object.","typeName":"IAiShopFavoritesAddresses"},"authorizationRoles":null,"path":"/aiShop/favoritesAddresses/{id}","method":"put"},{"specification":"Deletes a single favorite address record from ai_shop_favorites_addresses, removing the mapping between the customer and the favorited address/profile. Table fields: id (PK), ai_shop_customer_id (FK), ai_shop_profile_id (FK), created_at (timestamp). There is no deleted_at or soft-delete support; the record is physically deleted from the database by this operation. This permanently erases the user's favorite mapping to a given address/profile and cannot be undone. Cascade effects to customer or profile data do not occur.","description":"Permanently deletes a favorite address relationship by primary key ID from ai_shop_favorites_addresses. As the schema has no soft delete or archival field, the row is removed completely. The operation is only permitted for the owning customer or authorized admin. If the provided ID does not exist, a not-found error is returned. This operation is idempotent: repeated calls with the same ID after deletion have no effect. No related records (customer, profile) are modified or deleted. Proper access and ownership checks enforced.","summary":"Permanently (hard) delete a favorite address record by ID from ai_shop_favorites_addresses.","parameters":[{"name":"id","description":"Primary key of the ai_shop_favorites_addresses record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/favoritesAddresses/{id}","method":"delete"},{"specification":"Fetches a paginated, filterable list of favorited notifications linked to a given user. This endpoint operates on ai_shop_favorites_notifications (fields: id (PK), ai_shop_customer_id (FK), ai_shop_notification_id (domain notification), created_at (timestamp)). No soft delete or state columns—exists if favorited. Used to display all notifications a user has bookmarked/saved. Output includes only the relationship metadata, not the notification content or push details. Filtering, sorting, and pagination parameters may include customer_id, notification_id, or created_at. Owner-only access enforced.","description":"Retrieves a list of records from ai_shop_favorites_notifications, representing notifications a user has favorited. Each row includes: id (unique favorite relationship), ai_shop_customer_id (user), ai_shop_notification_id (domain notification being favorited), created_at (addition timestamp). The endpoint restricts visibility to the owner. Only atomic relationship data is returned—actual notification content should be resolved externally. Pagination, filtering, and sorting supported by input fields. No soft-delete; the favorite exists or does not.","summary":"Get paginated/filtered list of favorited notifications for a user from ai_shop_favorites_notifications.","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for querying favorite notification entries.","typeName":"IAiShopFavoritesNotifications.IRequest"},"responseBody":{"description":"A pageable or filterable collection of ai_shop_favorites_notifications links between user and notification.","typeName":"IPageAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications","method":"patch"},{"specification":"Retrieves a favorite notification mapping by its unique ID from ai_shop_favorites_notifications. Table columns: id (PK), ai_shop_customer_id (FK), ai_shop_notification_id (arbitrary notification PK), created_at (timestamp). No archival or soft delete—mapping either exists or not. Used to show if a specific notification has been favorited by a given customer or to display favorite link creation date. The notification content itself is NOT returned. Typically, only the owning user or admin can access this record.","description":"Get a favorite notification entry from ai_shop_favorites_notifications by its primary key. Returned data contains: id (row PK), ai_shop_customer_id (user), ai_shop_notification_id (notification being favorited), created_at (timestamp of bookmarking). This endpoint does not resolve or expose notification details—only the favorite relationship metadata. Used for UI logic (e.g., highlight as favorited). Only the owner user or authorized admin is allowed access.","summary":"Retrieve a favorite notification mapping from ai_shop_favorites_notifications by ID, returning mapping metadata.","parameters":[{"name":"id","description":"PK of the favorite notification link (ai_shop_favorites_notifications.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The ai_shop_favorites_notifications record that maps between user and notification.","typeName":"IAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications/{id}","method":"get"},{"specification":"Creates a new favorite notification linkage between a customer and a notification they wish to bookmark/save. Inserts a row into ai_shop_favorites_notifications with the required columns: ai_shop_customer_id (FK), ai_shop_notification_id (PK of notification being favorited), created_at (insert timestamp, can be supplied or defaulted by DB). Table is strictly normalized; no extra or state/archival columns. Duplicates (by customer, notification) blocked by unique constraint. Output is the newly created link; no notification content returned. Proper authentication required.","description":"Accepts a create request to add a customer-notification favorite mapping in ai_shop_favorites_notifications. Input fields: ai_shop_customer_id (customer), ai_shop_notification_id (notification), created_at (if provided; otherwise current time). Output is the favorite relationship or error on duplicate, invalid reference, or unauthorized. No soft delete or additional metadata—atomic linkage. Only owner user or admin may create. No actual notification data returned.","summary":"Create a new favorite notification link between customer and notification in ai_shop_favorites_notifications.","parameters":[],"requestBody":{"description":"Input data to create a new ai_shop_favorites_notifications row (customer, notification IDs).","typeName":"IAiShopFavoritesNotifications.ICreate"},"responseBody":{"description":"Resulting ai_shop_favorites_notifications favorite link record for user and notification.","typeName":"IAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications","method":"post"},{"specification":"Updates an existing favorite notification record in ai_shop_favorites_notifications, identified by PK. Only ai_shop_customer_id and ai_shop_notification_id fields can be modified (no state/archival fields exist). No address or content resolution—pure mapping update. Uniqueness of (customer, notification) enforced. Ownership and authorization required, ensuring users can update only their own mappings. created_at remains unchanged. Returns updated object. No soft-delete exists; absence of record implies non-favorited notification.","description":"Updates ai_shop_favorites_notifications row with new customer and/or notification ID, based on the given PK. Only updatable columns: ai_shop_customer_id and ai_shop_notification_id. created_at timestamp is not writable. Must ensure unique constraint is not violated and only the owner may update. Endpoint returns the edited favorite mapping. No cascades or effects on notifications or users beyond updating this favorite link. Errors: not found, forbidden, unique violation.","summary":"Update a favorite notification relationship by ID in ai_shop_favorites_notifications (customer, notification mapping).","parameters":[{"name":"id","description":"PK value for the favorite notification mapping (ai_shop_favorites_notifications.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New mapping values (ai_shop_customer_id and/or ai_shop_notification_id).","typeName":"IAiShopFavoritesNotifications.IUpdate"},"responseBody":{"description":"The updated ai_shop_favorites_notifications favorite notification link record.","typeName":"IAiShopFavoritesNotifications"},"authorizationRoles":null,"path":"/aiShop/favoritesNotifications/{id}","method":"put"},{"specification":"Permanently deletes a favorite notification mapping by unique ID from ai_shop_favorites_notifications. The schema includes: id (PK), ai_shop_customer_id (FK), ai_shop_notification_id (notification/entity PK), created_at (timestamp). No deleted_at or soft delete, so the delete is a hard removal. Only the explicit mapping row is affected. After deletion, the notification will not be marked as favorited for the user. No notification content or user record alteration occurs. Access and authorization must restrict operation to the owner or admin.","description":"Removes favorite notification mapping for a user and notification by row ID from ai_shop_favorites_notifications via hard delete. This is a physical removal, as soft delete or archived state does not exist in the schema. Only the owner may remove their own notification favorites, or an admin with suitable permissions. Related notification or customer records are not altered. Errors: not found, forbidden (unauthorized). No cascade operations.","summary":"Permanently delete a favorite notification mapping by ID from ai_shop_favorites_notifications (hard delete, no soft-delete).","parameters":[{"name":"id","description":"PK for the favorite notification mapping row to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":null,"path":"/aiShop/favoritesNotifications/{id}","method":"delete"}],"components":{"schemas":{"IAiShopInquiry.IUpdate":{"type":"object","description":"업데이트용 문의 엔티티 객체(IAiShopInquiry.IUpdate)로, ai_shop_inquiries에 정의된 필드만을 포함해 업데이트 요청에 사용한다.\n\n업데이트 가능한 필드는 제목(title), 본문(body), 상태(status), 참조곡 ai_shop_product_id 등이 있으며, 모두 스키마에 명시된 것들이다. deleted_at 등 소프트 삭제 관련 필드는 존재하지 않는다. 대부분의 필드는 선택적으로 제공 가능하며, id는 경로 파라미터로 전달된다. 본 타입은 PUT 요청 Body에 사용된다.","properties":{"title":{"type":"string","description":"문의 제목. 사용자가 남긴 질문 또는 요구의 요약을 제공하며 관리자가 또는 답변자가 한눈에 내용을 파악할 수 있도록 한다.\n\n예시: '배송 지연 관련 문의', '상품 사이즈 문의' 등."},"body":{"type":"string","description":"문의 본문. 문의의 상세 내용을 기록한다.\n\n예시: '상품이 언제 출고되는지 궁금합니다.'"},"status":{"type":"string","description":"문의 상태 (예: 'open', 'answered', 'closed'). 워크플로 관리 및 상태 변경 용도로 사용된다.\n\n상태에 따른 비즈니스 규칙에 따라 처리된다."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."},{"type":"null","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}],"description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}},"required":["title","body","status"]},"IAiShopInquiryReply.IRequest":{"type":"object","description":"문의 답변 엔티티 리스트 조회 및 검색 요청 바디. ai_shop_inquiry_replies 스키마 내에서 검색이 허용되는 필드만을 기준으로 검색/필터링/페이징 한다.\n\n예: 답변 리스트, 조건부 조회, 페이징, 정렬/필터/검색 쿼리에 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"본 답변이 소속된 문의 엔티티의 고유식별자(UUID). 특정 문의에 종속 replies만 조회하고자 할 때 사용한다."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."}],"description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."}],"description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."}],"description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},"body":{"type":"string","description":"답변 본문 전체/부분 검색 시 사용."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},"page":{"type":"integer","description":"조회 페이지 넘버. 1-based."},"limit":{"type":"integer","description":"한 페이지에 가져올 최대 결과수. 기본 100."},"sort":{"type":"string","description":"정렬 방식 결정 예: 'created_at_desc', 'created_at_asc'. 지원하는 컬럼명+방향 조합만 허용."}},"required":["ai_shop_inquiry_id"]},"IPageIAiShopInquiryReply":{"type":"object","description":"페이징된 문의 답변 리스트 컨테이너 타입. 각 엔티티는 ai_shop_inquiry_replies에서 정규화된 reply 오브젝트 형태로 반환된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInquiryReply"},"description":"답변 리스트(한 페이지의 데이터 배열)"}},"required":["pagination","data"]},"IAiShopInquiryReply":{"type":"object","description":"문의 답변 상세 정보 객체. ai_shop_inquiry_replies 내 실제 row를 반환한다.\n\n답변은 문의 ai_shop_inquiries에 종속적이며 seller, admin의 참조, 그리고 parent_id(트리구조) 등을 명확히 포함한다.","properties":{"id":{"type":"string","format":"uuid","description":"답변의 고유 식별자 (UUID)"},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 속한 문의 id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러 id."},{"type":"null","format":"uuid","description":"답변 작성 셀러 id."}],"description":"답변 작성 셀러 id."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자 id."},{"type":"null","format":"uuid","description":"답변 작성 관리자 id."}],"description":"답변 작성 관리자 id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."}],"description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},"body":{"type":"string","description":"답변 내용."},"created_at":{"type":"string","format":"date-time","description":"작성일시 (ISO8601)"}},"required":["id","ai_shop_inquiry_id","body","created_at"]},"IAiShopInquiryReply.ICreate":{"type":"object","description":"AI Shop 문의 답변 등록 body용 타입. 필수 필드는 문의 id, 내용(body) – 그 외는 작성자의 역할에 따라 셀러, 관리자 id, 부모 id(트리형 답글) 등 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 달릴 문의의 id. 필수."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},{"type":"null","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."}],"description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."},{"type":"null","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."}],"description":"답변 관리자인 경우. 관리자 답변만 세팅."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},{"type":"null","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."}],"description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},"body":{"type":"string","description":"답변 본문(필수)"}},"required":["ai_shop_inquiry_id","body"]},"IAiShopInquiryReply.IUpdate":{"type":"object","description":"문의 답변 수정(업데이트) DTO 타입. 수정 가능한 필드는 본문(body), 부모(parent_id) 등이고, 작성자 id는 원칙적으로 변경하지 않는다.","properties":{"body":{"type":"string","description":"수정될 답변 본문(필수)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."},{"type":"null","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."}],"description":"변경될 상위(부모) 답변 id(필요시)."}},"required":["body"]},"IAiShopReview.IRequest":{"type":"object","description":"상품 리뷰 검색 및 페이징 요청 타입 (리스트 조회 request DTO). ai_shop_reviews 테이블 내 실제 컬럼 기준으로만 필터/정렬/검색/페이징을 실시한다.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자(고객) id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"rating":{"type":"integer","description":"리뷰의 평가 점수(1~5의 범위)로 필터링."},"status":{"type":"string","description":"리뷰의 상태값으로 검색. 가능한 값: 'pending', 'approved', 'rejected'"},"body":{"type":"string","description":"내용(본문) 부분검색용"},"created_at_from":{"type":"string","format":"date-time","description":"작성시작일(쿼리 기준)"},"created_at_to":{"type":"string","format":"date-time","description":"작성종료일(쿼리 기준)"},"page":{"type":"integer","description":"페이지 번호(1-base), 생략시 1"},"limit":{"type":"integer","description":"1페이지 데이터 최대 개수(생략시 100)"},"sort":{"type":"string","description":"정렬 기준칼럼+방향('created_at_desc', 'rating_asc' 등)"}},"required":[]},"IPageIAiShopReview":{"type":"object","description":"상품 리뷰 리스트의 페이징 결과 컨테이너. metadata 및 data 배열이 페어로 구성된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReview"},"description":"상품 리뷰 데이터 배열(한 페이지)"}},"required":["pagination","data"]},"IAiShopReview":{"type":"object","description":"단일 상품 리뷰 row를 표현하는 객체 DTO. ai_shop_reviews 테이블 필드에 대응(고객, 상품, 본문, 평점, 상태, timestamps 등).","properties":{"id":{"type":"string","format":"uuid","description":"리뷰의 고유 식별자(UUID)"},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객(작성자)의 id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"body":{"type":"string","description":"리뷰 본문 내용"},"rating":{"type":"integer","description":"리뷰의 별점(평가점수, 1~5 한정)"},"status":{"type":"string","description":"리뷰 상태. 'pending'|'approved'|'rejected' 등 워크플로우에 따라 변동"},"created_at":{"type":"string","format":"date-time","description":"작성일시(ISO8601), 등록시 자동 생성"},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"},{"type":"null","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}],"description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}},"required":["id","ai_shop_customer_id","ai_shop_product_id","body","rating","status","created_at"]},"IAiShopReview.ICreate":{"type":"object","description":"상품 리뷰 등록용 바디. ai_shop_reviews 테이블의 필수 필드에 대응(고객, 상품, 본문, 평점, 상태). 작성일시는 생략시 서버생성.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자의 id(UUID)"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"리뷰가 달릴 상품 id(UUID)"},"body":{"type":"string","description":"리뷰 내용"},"rating":{"type":"integer","description":"별점(평가점수, 1~5)"},"status":{"type":"string","description":"리뷰 상태값. 작성시 기본 'pending', 즉시 노출이면 'approved' 등"}},"required":["ai_shop_customer_id","ai_shop_product_id","body","rating","status"]},"IAiShopReview.IUpdate":{"type":"object","description":"리뷰 수정용 DTO 타입. ai_shop_reviews 기준으로 본문, 점수, 상태에 대해 수정 가능하다.","properties":{"body":{"type":"string","description":"수정 후 리뷰 본문"},"rating":{"type":"integer","description":"수정 후 별점(1~5)"},"status":{"type":"string","description":"변경될 리뷰 상태 (예: 'pending', 'approved', 'rejected')"}},"required":[]},"IAiShopChannel.IListRequest":{"type":"object","properties":{"code":{"type":"string","description":"채널 코드로 필터링할 때 사용합니다. 'main', 'event2025' 등. Partial match나 fuzzy 검색에 사용될 수 있습니다.\n\nPrisma 컬럼: code (String)\n\n채널의 고유 식별자 역할을 하며, 관리 목적과 프로그래밍 접근에 사용됩니다."},"name":{"type":"string","description":"채널 이름(한글, 영문 등)을 기준으로 필터/검색하는데 사용됩니다.\n\nPrisma 컬럼: name (String)\n\n실제 유저·관리자 UI에 표시되는 문구로, 채널을 직관적으로 식별하는데 쓰입니다."},"enabled":{"type":"boolean","description":"활성화(노출/비노출, 영업중/중지)\n\nPrisma 컬럼: enabled (Boolean)\n\n서비스 중인 채널 여부를 판단할 때 사용합니다."},"sort_order":{"type":"integer","description":"채널의 표시 순서를 오름차순/내림차순 정렬 또는 범위 검색할 때 사용됩니다.\n\nPrisma 컬럼: sort_order (Int)\n\n리스트 출력 시 우선순위나 순서 컨트롤에 사용합니다."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"}},"description":"채널 목록 조회용 복합 필터링 및 페이징 요청 타입입니다.\n\n아이샵 채널 테이블(ai_shop_channels)에서 제공하는 컬럼만 활용할 수 있으며, keyword/부분검색 및 활성화 상태, 정렬, 페이지네이션까지 지원합니다.\n\n모든 필터는 null 가능하며, 미지정 시 전체 목록 조회 동작을 따릅니다.","required":["pagination"]},"IPageAiShopChannel":{"$ref":"#/components/schemas/IPage","description":"페이징 처리된 채널(ai_shop_channels) 데이터 목록입니다.\n\ndata는 IAiShopChannel 타입 배열이며, pagination 정보는 표준 IPage 포맷을 따릅니다."},"IAiShopChannel":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"PK. 각 채널을 고유 식별하는 UUID.\n\nPrisma 컬럼: id (String @id @db.Uuid)\n\n관리/수정/프로그램 접근에서 유일키로 쓰임."},"code":{"type":"string","description":"채널 코드(식별자로 유일). 예시: 'main', 'event2025'.\n\nPrisma 컬럼: code (String)\n\n프로그램 내 논리 구분 또는 어드민 UI 필터/탭 관리에 사용."},"name":{"type":"string","description":"채널명(실제 노출됨). 예: '메인샵', '모바일독점'.\n\nPrisma 컬럼: name (String)\n\n관리자/사용자 화면에서 채널을 직관적으로 구분하는 UI 요소."},"enabled":{"type":"boolean","description":"채널 사용여부(활성/비활성).\n\nPrisma 컬럼: enabled (Boolean)\n\n현재 서비스되는 채널 여부를 판단."},"sort_order":{"type":"integer","description":"채널 표시 순서. 값이 작을수록 우선 배치됨.\n\nPrisma 컬럼: sort_order (Int)\n\n어드민, 프론트 리스트 UI 출력 순서 제어 용도."},"created_at":{"type":"string","format":"date-time","description":"생성시각(timestamp). UTC 기준 ISO8601 문자열.\n\nPrisma 컬럼: created_at (DateTime)\n\n데이터 생성 이벤트 및 추적·감사 용도."},"updated_at":{"type":"string","format":"date-time","description":"최종 수정시각(timestamp). ISO8601.\n\nPrisma 컬럼: updated_at (DateTime)\n\n변경 이력, 동기화 체크, 추적에 활용."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"],"description":"아이샵 채널 테이블 기본 정보. (ai_shop_channels)\n\n- 각 채널은 마켓플레이스 운영상의 노출 엔드포인트(메인, 이벤트관, 제휴처 등)를 의미\n- code(식별), name(노출), enabled(활성상태), sort_order(정렬), 생성/수정시각 필드를 포함\n- 완전히 정규화된 구조, 관계는 Section, Category, Post 등에서 추가적으로 참조됨\n\n채널 관리, 노출 통제, 계층적 뷰 제공, 어드민 관리 UI의 핵심 객체입니다."},"IAiShopChannel.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"채널 코드(고유). 신규 등록 시 필수.\n\n관리 시스템 내 논리구분, 중복 불가."},"name":{"type":"string","description":"채널명. 유저/관리자 UI용.\n\n등록시 반드시 지정해야 하며, 표시명으로 쓰임."},"enabled":{"type":"boolean","description":"활성화 여부. true/false. 신규시 기본값 true가 일반적."},"sort_order":{"type":"integer","description":"정렬 우선순위(1=최상위, 낮을수록 상위정렬)."},"created_at":{"type":"string","format":"date-time","description":"생성시각. 시스템에서 자동 할당하는 값이 일반적이나, 외부 입력/마이그레이션시 지정 가능."},"updated_at":{"type":"string","format":"date-time","description":"수정시각. 등록동기 또는 외부데이터 연동시점에 갱신."}},"required":["code","name","enabled","sort_order"],"description":"채널 정보 신규 등록용 Request 타입.\n\nPrisma ai_shop_channels 생성에 필요한 모든 필드를 클라이언트가 제공해야 함.\n\n입력 검증, 공백/중복, 필수 항목 체크 반드시 필요."},"IAiShopChannel.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"채널 코드(수정시 unique 검사 필요).\n\n기존 code 변경도 가능하나, 프로그램 레벨에서 side effect 있으면 주의."},"name":{"type":"string","description":"채널명(수정).\n\n관리자 사용/노출 UI 이름."},"enabled":{"type":"boolean","description":"채널 활성화/비활성화 플래그. 운영 중에도 변경 가능."},"sort_order":{"type":"integer","description":"채널의 노출 정렬 우선순위(값이 낮을수록 상위에 노출)."},"created_at":{"type":"string","format":"date-time","description":"생성시점. 보통 수정 시에는 값이 변경되지 않으나, 일부 시스템 연동 케이스를 대비."},"updated_at":{"type":"string","format":"date-time","description":"마지막 수정시각. 운영중 변경 시 반드시 갱신."}},"required":[],"description":"채널정보 수정(Update)용 타입.\n\nID는 path로 분리 입력, Payload에는 없는 구조이며, 나머지 필드는 변경 항목만 부분 제공 가능.\n\nPrisma 채널 테이블(ai_shop_channels) 컬럼과 일치하여 설계되어야 함."},"IAiShopChannel.IDeleteResult":{"type":"object","properties":{"success":{"type":"boolean","description":"삭제 성공 여부.\n\nPK 기준 탐색/처리 후 true/false 값을 반환."},"message":{"type":"string","description":"추가 안내/오류 메시지."}},"required":["success"],"description":"채널 삭제(하드 딜리트) 결과 반환 타입.\n\n실제 삭제 성공 여부와 메시지 포함."},"IAiShopSection.IListRequest":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 채널을 기준으로 섹션을 필터링.\n\nPrisma: ai_shop_channel_id (String @db.Uuid)\n\n특정 채널의 하위 섹션만 조회할 때 사용."},"code":{"type":"string","description":"섹션 코드(채널 내 유일)로 검색 필터.\n\nPrisma: code (String)\n\nUI 및 API에서 논리 구분, 필터링 활용."},"name":{"type":"string","description":"섹션명(노출). Name 필터/검색용.\n\nPrisma: name (String)\n\n관리 편의, 실사용자 식별 및 부분검색."},"enabled":{"type":"boolean","description":"노출 처리 여부. 활성/비활성(서비스 중단 등)에 따른 필터.\n\nPrisma: enabled (Boolean)\n\n운영 또는 마케팅 상황에 따라 관리."},"sort_order":{"type":"integer","description":"섹션 정렬 우선순위 지정값.\n\nPrisma: sort_order (Int)\n\n채널 내에서의 정렬 순서."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"}},"description":"채널 하위 섹션 목록 검색/페이징 쿼리 요청 타입.\n\n전체 컬럼(섹션코드, 노출명, 활성/비활성, 순서, 상위 채널 지정 등)과 페이지네이션 사용\n(null 포인트는 전체/전체채널 기준으로 동작).","required":["pagination"]},"IPageAiShopSection":{"$ref":"#/components/schemas/IPage","description":"섹션(ai_shop_sections) 목록 페이징 응답 DTO.\n\nIPage + data(섹션 배열) 구조."},"IAiShopSection":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"섹션 PK(UUID).\n\nPrisma: id (String @id @db.Uuid)\n\n유일 식별자/관계 컬럼으로 사용."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 채널(id) 참조 FK.\n\nPrisma: ai_shop_channel_id (String @db.Uuid)\n\n섹션이 어느 채널 소속인지 명확히 정의하게 됨."},"code":{"type":"string","description":"섹션 코드(채널 내 유일함). 예: 'home', 'outlet'.\n\nPrisma: code (String)\n\n프로그램/어드민 논리 분기, 구분자."},"name":{"type":"string","description":"섹션명(한글/영문 등 실질 UI 노출명).\n\nPrisma: name (String)\n\n관리자/사용자 화면에서 구분·검색."},"sort_order":{"type":"integer","description":"채널 내 표시 순서.\n\nPrisma: sort_order (Int)\n\n목록UI 정렬 제어."},"enabled":{"type":"boolean","description":"서비스 노출 제어 (true: 노출, false: 숨김/중단)\n\nPrisma: enabled (Boolean)"},"created_at":{"type":"string","format":"date-time","description":"섹션 생성 시각(timestamp, UTC 기준).\n\nPrisma: created_at (DateTime)\n\n감사, 이력, 변경 이벤트 추적에 사용."},"updated_at":{"type":"string","format":"date-time","description":"수정 시각(timestamp, UTC 기준).\n\nPrisma: updated_at (DateTime)\n\n실시간 동기화, 변경감지, 로그에 활용."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"채널 섹션 정보(ai_shop_sections) 기본 객체\n\n- ID, 소속채널 ID, 섹션코드(내부유일), 노출명(name), 순서, 활성여부, 생성/수정시각\n- 채널 내 카테고리·영역구분 및 머천트/운영자 정의된 배치 가능\n- 완전정규화: 모든 데이터 유일/atomic/관계설계 명확\n- 관리 UI 및 비즈니스 딜리버리 설계에서 직관적으로 순회·편집 가능한 핵심 엔터티"},"IAiShopSection.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 채널 참조 FK (생성시 반드시 지정).\n\nPrisma: ai_shop_channel_id (String @db.Uuid)"},"code":{"type":"string","description":"섹션 코드(채널 내 유일성 보장).\n\nPrisma: code (String)\n\n논리구분/어드민 관리용 ID"},"name":{"type":"string","description":"섹션명(노출명)."},"sort_order":{"type":"integer","description":"정렬우선순위(채널내 순서)."},"enabled":{"type":"boolean","description":"노출/비노출(on/off) 상태 지정"},"created_at":{"type":"string","format":"date-time","description":"생성시각. 시스템 할당 기본."},"updated_at":{"type":"string","format":"date-time","description":"최종수정시각. 변경 및 외부입력 동기화용"}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"섹션 신규 등록용 DTO.\n\nFK 상위채널, 코드/이름, 순서, 활성여부 지정.\n\nPrisma 테이블 필드 대응·관리 UI, API 명확 매핑 목적"},"IAiShopSection.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"소속 채널 변경시 FK.\n\nPrisma: ai_shop_channel_id"},"code":{"type":"string","description":"섹션코드. 유일성 검사 필요."},"name":{"type":"string","description":"노출명(수정)."},"sort_order":{"type":"integer","description":"정렬순서값(수정)."},"enabled":{"type":"boolean","description":"활성화여부(서비스 노출/중단 등) 수정"},"created_at":{"type":"string","format":"date-time","description":"생성시각(수정시 보통 사용X)"},"updated_at":{"type":"string","format":"date-time","description":"수정변경시 필수시간 갱신"}},"required":[],"description":"섹션정보 수정용 DTO.\n\n변경필드만 제공 있어도 되며, 전체 업데이트 시도 모두 OK.\n\nID는 path 입력, payload에는 X. UI/프로세스별 부분 갱신 or 풀 리플레이스 모두 지원"},"IAiShopSection.IDeleteResult":{"type":"object","properties":{"success":{"type":"boolean","description":"삭제 성공 여부"},"message":{"type":"string","description":"추가 안내 문구(정보, 실패사유 등)"}},"required":["success"],"description":"섹션 삭제 결과 응답 DTO.\n실제 삭제 처리 성공/실패 플래그 및 사용자 알림 메시지 포함."},"IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":["pagination","data"],"description":"표준 페이징 반환 객체\n\n- pagination: 페이징 정보 객체\n- data: 임의의 오브젝트 목록"},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"현재 페이지 번호(1부터 시작)"},"limit":{"type":"integer","format":"uint32","description":"페이지당 레코드 수. 기본 100"},"records":{"type":"integer","format":"uint32","description":"전체 데이터 레코드 개수"},"pages":{"type":"integer","format":"uint32","description":"총 페이지 수(ceil(records/limit))"}},"description":"페이지네이션 정보 객체 표준","required":[]},"IPage.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"현재 페이지 번호(1이상)","minimum":1},"limit":{"type":"integer","description":"페이지당 개수(기본=100)","minimum":1}},"required":[],"description":"리스트형 조회 공통 페이지네이션 요청 파라미터\npage: 시작페이지단(1기본), limit: 페이지크기지정(기본100)"},"IAiShopConfiguration.IListRequest":{"type":"object","properties":{"page":{"type":"integer","description":"The page number for pagination. Indicates which page of the results should be returned."},"limit":{"type":"integer","description":"The number of results to return per page."},"param_name":{"type":"string","description":"Optional filter: configuration parameter name. Filters by partial or exact name, supporting UI search."},"param_value":{"type":"string","description":"Optional filter: configuration value. Filters by the value of the parameter."},"description":{"type":"string","description":"Optional filter: configuration explanation. Filter for human-readable descriptions."}},"description":"Search and pagination request type for listing ai_shop_configurations records (platform configuration parameters). Supports pagination and fuzzy search on parameter name, value, and description.\n\nAll properties are optional and allow flexible filtering. Used by admin/settings list UI to deliver search queries to backend.","required":[]},"IPageAiShopConfiguration":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopConfiguration"},"description":"The list of configuration records in the current page."}},"required":["pagination","data"],"description":"Paginated response type containing configuration entries as returned from list/search queries. Each page includes metadata (size, current page, etc) and a list of ai_shop_configuration records.\n\nLinks to IPage.IPagination for metadata and schema-compliant configuration records."},"IAiShopConfiguration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for each configuration parameter (UUID)."},"param_name":{"type":"string","description":"Configuration parameter name. Implements atomic, normalized key/value store of platform configuration. Example: 'max_cart_size', 'maintenance_mode'. Unique."},"param_value":{"type":"string","description":"Value for the configuration parameter. May be stringified JSON for complex settings. Example: 'true', '50', '{\"allowed\":true}'."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable description of what this config controls. Assists admin understanding, auditing. Example: 'The maximum number of items allowed in a cart.'"},{"type":"null"}],"description":"Optional human-readable description of what this config controls. Assists admin understanding, auditing. Example: 'The maximum number of items allowed in a cart.'"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when configuration was created. Enables auditing, rollback, compliance."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for audit and synchronization."}},"description":"Represents a single platform configuration parameter as defined in the ai_shop_configurations table. Each row is a name-value pair (sometimes with JSON value), and may have human-readable explanation and audit dates.\n\nMapped directly to the ai_shop_configurations schema, enforcing 3NF storage for dynamic settings. Used throughout platform for dynamic/feature flag system control.","required":["id","param_name","param_value","created_at","updated_at"]},"IAiShopConfigurations.ICreate":{"type":"object","properties":{"param_name":{"type":"string","description":"Configuration parameter name. Must be unique for each record. Used as the atomic key for config lookup."},"param_value":{"type":"string","description":"The value for the configuration parameter (may be string or stringified JSON)."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable explanation of parameter purpose."},{"type":"null"}],"description":"Optional human-readable explanation of parameter purpose."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp. Set automatically if not supplied."},"updated_at":{"type":"string","format":"date-time","description":"Last modified timestamp. Set automatically or equals created_at on insert."}},"description":"Request object for creating a new ai_shop_configurations record. Supplies all fields except the ID (generated). Used for the POST endpoint for adding configuration settings to the platform system.","required":["param_name","param_value","created_at","updated_at"]},"IAiShopConfigurations":{"type":"object","description":"Deprecated: Use IAiShopConfiguration for base entity and IAiShopConfigurations.ICreate/IAiShopConfigurations.IUpdate for operation-specific DTOs. (Kept for backward compatibility where needed).","properties":{},"required":[]},"IAiShopConfigurations.IUpdate":{"type":"object","properties":{"param_name":{"type":"string","description":"Configuration parameter name. Must be unique and identifies what is being updated."},"param_value":{"type":"string","description":"The value for the configuration parameter to be set (may be string or stringified JSON)."},"description":{"oneOf":[{"type":"string","description":"Human-readable explanation for the configuration entry."},{"type":"null"}],"description":"Human-readable explanation for the configuration entry."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the configuration update (audit and compliance)."}},"description":"Request object for updating ai_shop_configurations records. Used in PUT, supplies modifiable fields as per schema - does not include id or created_at, but requires updated_at for audit purposes.","required":["param_name","param_value","updated_at"]},"IAiShopCategories.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Requested page number for pagination."},"limit":{"type":"integer","description":"Max number of records per page."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Optional filter: channel to scope category listing results. Enables multi-channel support."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: filter to show only subcategories of a certain parent (or root if null)."},{"type":"null"}],"description":"Optional: filter to show only subcategories of a certain parent (or root if null)."},"code":{"type":"string","description":"Optional: category code to search (partial or exact, supports UI searching/filtering)."},"name":{"type":"string","description":"Optional: category display name (for UI search or admin filtering)."},"sort_order":{"type":"integer","description":"Optional: filter or sort by UI display ordering value."},"enabled":{"type":"boolean","description":"Optional: restrict to categories marked as enabled/disabled."}},"required":[],"description":"Request object for searching, paging, or filtering category data (ai_shop_categories) for admin/sys UI. All fields map directly to DB schema.\n\nProperties allow hierarchical exploration of category trees, support for multichannel filtering, soft/hard filtering by business logic."},"IPageAiShopCategories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCategories"},"description":"List of categories in this page of results."}},"required":["pagination","data"],"description":"Paginated result of ai_shop_categories browse/search operation. Metadata in pagination; data is array of IAiShopCategories records."},"IAiShopCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) of the category."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Reference to ai_shop_channels.id; enables multi-channel category scoping."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable parent_id for hierarchical trees. Null for root-level categories."},{"type":"null"}],"description":"Nullable parent_id for hierarchical trees. Null for root-level categories."},"code":{"type":"string","description":"Category business code (unique per channel/parent), used for programmatic access."},"name":{"type":"string","description":"Category display name."},"sort_order":{"type":"integer","description":"Ordering among siblings; controls UI arrangement, drag-sort, etc."},"enabled":{"type":"boolean","description":"Category enabled/disabled status (UI/business logic control)."},"created_at":{"type":"string","format":"date-time","description":"Category record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (UI/audit logic)."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Represents an atomic row in ai_shop_categories for category management in AI shop. Fields support hierarchical trees, UI drag-sort, channel-scoping, and enabled/hidden categorization."},"IAiShopCategories.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Channel reference for category (required for all categories in multi-channel shop)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: parent category UUID for subcategory setup. Null for root-level categories."},{"type":"null"}],"description":"Optional: parent category UUID for subcategory setup. Null for root-level categories."},"code":{"type":"string","description":"Category code; business-unique per channel/parent, enforces normalization."},"name":{"type":"string","description":"Category display name (UI/admin/marketing)."},"sort_order":{"type":"integer","description":"Display order among sibling categories (used for drag-&-sort, UI layouts etc)."},"enabled":{"type":"boolean","description":"Flag indicating if the category is visible or not."},"created_at":{"type":"string","format":"date-time","description":"Category creation timestamp (auto-set if not supplied)."},"updated_at":{"type":"string","format":"date-time","description":"Category last update timestamp (set = created_at if not changing)."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"DTO for inserting a new ai_shop_categories row in backend DB; requires all non-PK/auto fields except nullable parent_id. Used for category management UIs and integrations."},"IAiShopCategories.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"Channel reference for changing category assignment. Must reference existing channel id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional: parent category to update hierarchical assignment."},{"type":"null"}],"description":"Optional: parent category to update hierarchical assignment."},"code":{"type":"string","description":"Category code (business logic unique per parent/channel combo)."},"name":{"type":"string","description":"Category display name (UI/marketing/admin)."},"sort_order":{"type":"integer","description":"Ordering position in the UI for sibling categories."},"enabled":{"type":"boolean","description":"Category enabled/disabled state (UI/business logic toggle)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for latest modification."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled","updated_at"],"description":"DTO for editing/updating ai_shop_categories categories; includes all non-PK fields except created_at (immutable), with nullable parent_id to move category in tree structure. Used by admin/ops UI for editing."},"IAiShopFiles.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Requested page for pagination, zero or one-based index depending on API convention."},"limit":{"type":"integer","description":"Maximum number of file records to return per page."},"original_name":{"type":"string","description":"Search or filter by original uploaded file name (partial/fuzzy search supported)."},"mime_type":{"type":"string","description":"Filter files by MIME type (e.g., 'image/png','application/pdf')."},"uploader_name":{"type":"string","description":"Search for files uploaded by a particular uploader (name as saved during upload, if available)."},"uploaded_at_from":{"type":"string","format":"date-time","description":"Optional: filter files uploaded on or after this timestamp (inclusive)."},"uploaded_at_to":{"type":"string","format":"date-time","description":"Optional: filter files uploaded on or before this timestamp (inclusive)."}},"description":"Type for searching/listing files in ai_shop_files table. Used by admin/storage UI and asset managers to filter/search uploaded files by meta-metadata.\n\nAll properties are optional; page and limit enable paging. Filtering is by file name, type, or uploader, or time range.","required":[]},"IPageAiShopFiles":{"type":"object","title":"IPageAiShopFiles","description":"A paginated page of AI Shop file metadata records, corresponding to the ai_shop_files table in the systematic context. This is the standard IPage container pattern used throughout the system, parameterized for ai_shop_files row schema objects.\n\nIncludes pagination metadata (current page, limit, total records/pages) and an array of file objects, each representing a single uploaded file's metadata in the AI Shop ecosystem. All properties and structure strictly follow the IPage pattern, referencing ai_shop_files for file entries.\n\nSee Systematic/File upload management requirements and System Architecture docs for usage and audit scenarios.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"Array of ai_shop_files objects for the current page, with all metadata fields defined in the schema.","items":{"$ref":"#/components/schemas/IAiShopFiles"}}},"required":["pagination","data"]},"IAiShopFiles":{"type":"object","title":"IAiShopFiles","description":"AI Shop File metadata object, representing an individual uploaded file as stored in the ai_shop_files DB table. This type records all physical metadata about an uploaded file for the AI Shop system (across posts, products, attachments, etc). Strictly normalized, non-duplicative storage per Systematic/file DB table schema. Each field aligns with a column in the DB, facilitating precise file tracking, quota, preview, or download.\n\nUsed in admin, upload, product, bulletin, or attachment flows. See @namespace Systematic, ai_shop_files in the Prisma schema.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: Unique file identifier. Required for every file-metadata relation. See DB PK constraints."},"original_name":{"type":"string","description":"Original file name as uploaded, for UI/admin display (e.g., 'invoice2025.pdf')."},"uri":{"type":"string","description":"Persistent storage URI or path (e.g., cloud url, s3 key). Unique per file, used for direct programmatic retrieval."},"mime_type":{"type":"string","description":"File mime type (e.g., 'image/png', 'application/pdf'). Used for content previews and validation."},"size_bytes":{"type":"integer","description":"File size in bytes. Used for quota enforcement, auditing, upload display."},"uploader_name":{"oneOf":[{"type":"string","description":"Name of uploader if known at upload time, for audit, attribution, or internal display."},{"type":"null","description":"Name of uploader if known at upload time, for audit, attribution, or internal display."}],"description":"Name of uploader if known at upload time, for audit, attribution, or internal display."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp for when file was uploaded. Used in audit, regulatory, and data retention calculations."}},"required":["id","original_name","uri","mime_type","size_bytes","uploaded_at"]},"IAiShopFiles.ICreate":{"type":"object","title":"IAiShopFiles.ICreate","description":"DTO for registering a new file metadata record in ai_shop_files. Used in file upload, product image/attachment registration, post-attachment association, etc.\n\nAll fields correspond to atomic columns in Prisma. No references to audit/user/deleted fields not in schema.\n\nSee Systematic upload API docs for usage.","properties":{"original_name":{"type":"string","description":"Original file name, as uploaded (required)."},"uri":{"type":"string","description":"Unique URI of the file as saved in storage (required; system responsibility to ensure uniqueness)."},"mime_type":{"type":"string","description":"Mime/type for uploaded file (required)."},"size_bytes":{"type":"integer","description":"File size in bytes (required)."},"uploader_name":{"oneOf":[{"type":"string","description":"Uploader (user) name if available at upload; nullable."},{"type":"null","description":"Uploader (user) name if available at upload; nullable."}],"description":"Uploader (user) name if available at upload; nullable."},"uploaded_at":{"type":"string","format":"date-time","description":"Upload timestamp (required; typically set to now)."}},"required":["original_name","uri","mime_type","size_bytes","uploaded_at"]},"IAiShopFiles.IUpdate":{"type":"object","title":"IAiShopFiles.IUpdate","description":"DTO for updating an existing ai_shop_files metadata record (Systematic/file). Fields may be updated individually or together; updates are typically restricted to allowed fields. ID is path param, not in body. Follows ai_shop_files schema—do not add non-existent properties.\n\nPrimarily for migrations, audit correction, or admin patch.","properties":{"original_name":{"type":"string","description":"(Optional) New file name for update."},"uri":{"type":"string","description":"(Optional) New URI/path for file update. Must remain unique."},"mime_type":{"type":"string","description":"(Optional) New mime type for corrected/converted files."},"size_bytes":{"type":"integer","description":"(Optional) New file size, e.g., after migration/audit."},"uploader_name":{"oneOf":[{"type":"string","description":"(Optional) Uploader name correction/update."},{"type":"null","description":"(Optional) Uploader name correction/update."}],"description":"(Optional) Uploader name correction/update."},"uploaded_at":{"type":"string","format":"date-time","description":"(Optional) New upload timestamp (e.g., for history corrections)."}},"required":[]},"IAiShopAuditLogs.IRequest":{"type":"object","title":"IAiShopAuditLogs.IRequest","description":"Request DTO for listing, searching, or paginating audit log entries from ai_shop_audit_logs. Used in admin/audit UI tools or advanced integrations. All filter, search, or paging params must relate to atomic schema fields.\n\nInclude filters for event_id, event_type, actor_id, etc. as needed. See audit log search API documentation for example payloads.","properties":{"event_id":{"oneOf":[{"type":"string","description":"(Optional) Filter for specific event_id, unique event string."},{"type":"null","description":"(Optional) Filter for specific event_id, unique event string."}],"description":"(Optional) Filter for specific event_id, unique event string."},"event_type":{"oneOf":[{"type":"string","description":"(Optional) Filter for specific event type (e.g., 'USER_LOGIN', 'ORDER_CANCELED')."},{"type":"null","description":"(Optional) Filter for specific event type (e.g., 'USER_LOGIN', 'ORDER_CANCELED')."}],"description":"(Optional) Filter for specific event type (e.g., 'USER_LOGIN', 'ORDER_CANCELED')."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Filter by actor ID (UUID) involved in event."},{"type":"null","format":"uuid","description":"(Optional) Filter by actor ID (UUID) involved in event."}],"description":"(Optional) Filter by actor ID (UUID) involved in event."},"actor_role":{"oneOf":[{"type":"string","description":"(Optional) Filter by actor's role (customer/seller/admin/system)."},{"type":"null","description":"(Optional) Filter by actor's role (customer/seller/admin/system)."}],"description":"(Optional) Filter by actor's role (customer/seller/admin/system)."},"target_table":{"oneOf":[{"type":"string","description":"(Optional) Filter for affected target_table (e.g., 'ai_shop_orders')."},{"type":"null","description":"(Optional) Filter for affected target_table (e.g., 'ai_shop_orders')."}],"description":"(Optional) Filter for affected target_table (e.g., 'ai_shop_orders')."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Filter for affected record/entity ID."},{"type":"null","format":"uuid","description":"(Optional) Filter for affected record/entity ID."}],"description":"(Optional) Filter for affected record/entity ID."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Lower bound for event date (from)."},{"type":"null","format":"date-time","description":"(Optional) Lower bound for event date (from)."}],"description":"(Optional) Lower bound for event date (from)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Upper bound for event date (to)."},{"type":"null","format":"date-time","description":"(Optional) Upper bound for event date (to)."}],"description":"(Optional) Upper bound for event date (to)."},"page":{"oneOf":[{"type":"integer","description":"(Optional) Page number (pagination)."},{"type":"null","description":"(Optional) Page number (pagination)."}],"description":"(Optional) Page number (pagination)."},"limit":{"oneOf":[{"type":"integer","description":"(Optional) Number of results per page."},{"type":"null","description":"(Optional) Number of results per page."}],"description":"(Optional) Number of results per page."}},"required":[]},"IPageIAiShopAuditLogs":{"type":"object","title":"IPageIAiShopAuditLogs","description":"Paginated page wrapper for audit log records (ai_shop_audit_logs) as per standard IPage pattern. Includes audit log row array (data), pagination metadata, and all auditing columns from schema.\n\nUsed in admin, legal, compliance, and application diagnostic UIs for traceability.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"Array of audit log records (ai_shop_audit_logs objects).","items":{"$ref":"#/components/schemas/IAiShopAuditLogs"}}},"required":["pagination","data"]},"IAiShopAuditLogs":{"type":"object","title":"IAiShopAuditLogs","description":"Audit log entry object for AI Shop, as present in ai_shop_audit_logs table (Systematic namespace). Each row logs a business, compliance, or admin event for traceability and compliance. Includes event_id, type, actor, affected table/row, and JSON details blob.\n\nMapped to each event in the business, admin, seller, or customer workflow. See System Architecture Compliance docs for field-by-field details and logging policy.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: UUID of audit log row."},"event_id":{"type":"string","description":"Unique event identifier, for idempotency/deduplication. E.g., 'ORD20250722-38'."},"event_type":{"type":"string","description":"Event type code, e.g., 'USER_LOGIN', 'ORDER_CANCELED', 'CONFIG_EDIT'."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"Actor identifier for event (customer/seller/admin/system); may be null for system-initiated events."},{"type":"null","format":"uuid","description":"Actor identifier for event (customer/seller/admin/system); may be null for system-initiated events."}],"description":"Actor identifier for event (customer/seller/admin/system); may be null for system-initiated events."},"actor_role":{"oneOf":[{"type":"string","description":"Role of actor: 'customer', 'seller', 'admin', or null for system."},{"type":"null","description":"Role of actor: 'customer', 'seller', 'admin', or null for system."}],"description":"Role of actor: 'customer', 'seller', 'admin', or null for system."},"target_table":{"oneOf":[{"type":"string","description":"Name of affected table for the event (e.g., 'ai_shop_orders')."},{"type":"null","description":"Name of affected table for the event (e.g., 'ai_shop_orders')."}],"description":"Name of affected table for the event (e.g., 'ai_shop_orders')."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of affected entity/row for event, optional."},{"type":"null","format":"uuid","description":"UUID of affected entity/row for event, optional."}],"description":"UUID of affected entity/row for event, optional."},"details":{"oneOf":[{"type":"string","description":"Event details as a JSON blob (stringified), e.g., before/after values, context."},{"type":"null","description":"Event details as a JSON blob (stringified), e.g., before/after values, context."}],"description":"Event details as a JSON blob (stringified), e.g., before/after values, context."},"created_at":{"type":"string","format":"date-time","description":"Event creation timestamp, to at least one second precision."}},"required":["id","event_id","event_type","created_at"]},"IAiShopAuditLogs.ICreate":{"type":"object","title":"IAiShopAuditLogs.ICreate","description":"DTO for creation of an audit log record in ai_shop_audit_logs. All required and optional fields must map to the schema: event_id (unique), event_type, actor_id, actor_role, target_table, target_id, details (JSON), created_at. Used for logging admin, user, or system workflow/state transitions. Field rules must follow compliance/audit/Forensics docs.\n\nSee Systematic/audit DB definition for internal structure.","properties":{"event_id":{"type":"string","description":"Unique event identifier (required)."},"event_type":{"type":"string","description":"Event type label (required)."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the actor (nullable for system events)."},{"type":"null","format":"uuid","description":"UUID of the actor (nullable for system events)."}],"description":"UUID of the actor (nullable for system events)."},"actor_role":{"oneOf":[{"type":"string","description":"Role ('customer','seller','admin','system')."},{"type":"null","description":"Role ('customer','seller','admin','system')."}],"description":"Role ('customer','seller','admin','system')."},"target_table":{"oneOf":[{"type":"string","description":"Business table affected (nullable)."},{"type":"null","description":"Business table affected (nullable)."}],"description":"Business table affected (nullable)."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"Entity ID affected (nullable)."},{"type":"null","format":"uuid","description":"Entity ID affected (nullable)."}],"description":"Entity ID affected (nullable)."},"details":{"oneOf":[{"type":"string","description":"JSON string (stringified) of event details, before/after states, contextual payload (nullable)."},{"type":"null","description":"JSON string (stringified) of event details, before/after states, contextual payload (nullable)."}],"description":"JSON string (stringified) of event details, before/after states, contextual payload (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Event creation timestamp (required)."}},"required":["event_id","event_type","created_at"]},"IAiShopAuditLogs.IUpdate":{"type":"object","title":"IAiShopAuditLogs.IUpdate","description":"DTO for updating an audit log entry (Systematic log/audit table).\n\nAll updatable fields must be present in the schema—commonly used for correcting event details or updating actor/attribution/context by privileged roles. ID is path param, not body. Created_at is updateable in rare audit-correction cases.","properties":{"event_id":{"type":"string","description":"Event identifier, for idempotency correction or audit patch."},"event_type":{"type":"string","description":"Event label, business/audit context."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the actor for this event."},{"type":"null","format":"uuid","description":"UUID of the actor for this event."}],"description":"UUID of the actor for this event."},"actor_role":{"oneOf":[{"type":"string","description":"Corrected actor role ('customer','seller','admin','system')."},{"type":"null","description":"Corrected actor role ('customer','seller','admin','system')."}],"description":"Corrected actor role ('customer','seller','admin','system')."},"target_table":{"oneOf":[{"type":"string","description":"Business table affected."},{"type":"null","description":"Business table affected."}],"description":"Business table affected."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"Entity/row UUID affected."},{"type":"null","format":"uuid","description":"Entity/row UUID affected."}],"description":"Entity/row UUID affected."},"details":{"oneOf":[{"type":"string","description":"Patch/correct JSON details for event."},{"type":"null","description":"Patch/correct JSON details for event."}],"description":"Patch/correct JSON details for event."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (for audit correction only)."}},"required":[]},"IAiShopCustomers.IRequest":{"type":"object","title":"IAiShopCustomers.IRequest","description":"DTO for requesting a list, search, or paging of ai_shop_customers records in the system. Applies to both admin UI and customer search API.\n\nAll properties are strictly atomic, mapping to the ai_shop_customers table, and may be used for filtering, sorting, or paginating search results. No joined or derived metadata is included. Suggested pagination pattern for large datasets.","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Filter for a specific customer by UUID."},{"type":"null","format":"uuid","description":"(Optional) Filter for a specific customer by UUID."}],"description":"(Optional) Filter for a specific customer by UUID."},"email":{"oneOf":[{"type":"string","description":"(Optional) Filter by email address (exact match or search)."},{"type":"null","description":"(Optional) Filter by email address (exact match or search)."}],"description":"(Optional) Filter by email address (exact match or search)."},"phone":{"oneOf":[{"type":"string","description":"(Optional) Filter by phone number (nullable for non-provided)."},{"type":"null","description":"(Optional) Filter by phone number (nullable for non-provided)."}],"description":"(Optional) Filter by phone number (nullable for non-provided)."},"status":{"oneOf":[{"type":"string","description":"(Optional) Customer account status to filter by: 'active','withdrawn','suspended' (application-level enum constraint at use site)."},{"type":"null","description":"(Optional) Customer account status to filter by: 'active','withdrawn','suspended' (application-level enum constraint at use site)."}],"description":"(Optional) Customer account status to filter by: 'active','withdrawn','suspended' (application-level enum constraint at use site)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Lower time bound for account creation date."},{"type":"null","format":"date-time","description":"(Optional) Lower time bound for account creation date."}],"description":"(Optional) Lower time bound for account creation date."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Upper time bound for account creation date."},{"type":"null","format":"date-time","description":"(Optional) Upper time bound for account creation date."}],"description":"(Optional) Upper time bound for account creation date."},"page":{"oneOf":[{"type":"integer","description":"(Optional) Results page for paginated output."},{"type":"null","description":"(Optional) Results page for paginated output."}],"description":"(Optional) Results page for paginated output."},"limit":{"oneOf":[{"type":"integer","description":"(Optional) Records per page (pagination)."},{"type":"null","description":"(Optional) Records per page (pagination)."}],"description":"(Optional) Records per page (pagination)."}},"required":[]},"IPageIAiShopCustomers":{"type":"object","title":"IPageIAiShopCustomers","description":"Paginated set of customer records for AI Shop user management, matching ai_shop_customers DB schema, per IPage pattern. Used for admin/customer search result display, management, or compliance reporting.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","description":"Array of full ai_shop_customers records matching page/filter.","items":{"$ref":"#/components/schemas/IAiShopCustomers"}}},"required":["pagination","data"]},"IAiShopCustomers":{"type":"object","title":"IAiShopCustomers","description":"Representation of an AI Shop customer account/record (ai_shop_customers table), supporting user management, onboarding, compliance, customer-integrated flows, etc. Strict mapping to DB atomic fields; used in CRUD, search, and analytics scenarios. All fields normalized.\n\nSee 'Actors' schema for lifecycle/role enforcement, audit, and privacy discussions.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: Globally unique customer identifier."},"email":{"type":"string","description":"Customer's primary email, unique, used for login/ID. Used in notifications, audit, and login."},"phone":{"oneOf":[{"type":"string","description":"Customer's mobile or phone for MFA, optional; may be null if not provided."},{"type":"null","description":"Customer's mobile or phone for MFA, optional; may be null if not provided."}],"description":"Customer's mobile or phone for MFA, optional; may be null if not provided."},"status":{"type":"string","description":"Account lifecycle status: e.g., 'active', 'withdrawn', 'suspended'. Enum: see Actors schema and application logic for enforcement."},"created_at":{"type":"string","format":"date-time","description":"Account creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (profile, login, etc)."}},"required":["id","email","status","created_at","updated_at"]},"IAiShopCustomers.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"이 필드는 ai_shop_customers 테이블에 정의된 고객의 이메일 주소로, 고유한 로그인 및 연락처 역할을 합니다. 예시: `user@example.com`.\n\n필수 값이며, 고객의 주 알림 및 인증 식별자로 사용되므로 정확한 형식을 갖추어야 합니다. 플랫폼 고유성 제약(@@unique)도 적용됩니다."},"phone":{"oneOf":[{"type":"string","description":"고객의 전화번호 필드로, 문자 메시지 알림 또는 2단계 인증(MFA)에 활용됩니다. 선택 사항이며, 존재하는 경우 국제 표준 포맷(E.164 등)이어야 합니다. 예: `+821012345678`.\n\n플랫폼 정책상 SMS 인증, 고객센터 연락 등에 사용됩니다."},{"type":"null","description":"고객의 전화번호 필드로, 문자 메시지 알림 또는 2단계 인증(MFA)에 활용됩니다. 선택 사항이며, 존재하는 경우 국제 표준 포맷(E.164 등)이어야 합니다. 예: `+821012345678`.\n\n플랫폼 정책상 SMS 인증, 고객센터 연락 등에 사용됩니다."}],"description":"고객의 전화번호 필드로, 문자 메시지 알림 또는 2단계 인증(MFA)에 활용됩니다. 선택 사항이며, 존재하는 경우 국제 표준 포맷(E.164 등)이어야 합니다. 예: `+821012345678`.\n\n플랫폼 정책상 SMS 인증, 고객센터 연락 등에 사용됩니다."},"status":{"type":"string","description":"고객의 계정 상태를 나타내는 문자열(enum 성격, 'active', 'withdrawn', 'suspended' 등 관리 시스템에 의해 제어).\n\n계정이 활성(로그인 가능), 탈퇴, 혹은 정지 상태임을 관리하는 데 사용됩니다."},"created_at":{"type":"string","format":"date-time","description":"이 필드는 고객 계정이 생성된 시간(타임스탬프)입니다. 자체 생성 필드로, 모든 변경·생성 이력 기록 및 준법/감사를 위함입니다."},"updated_at":{"type":"string","format":"date-time","description":"고객 계정의 최신 수정 시각(타임스탬프)입니다. 실시간 동기화 및 변경 추적(Audit Trail)에 사용됩니다."}},"required":["email","status","created_at","updated_at"],"description":"AI Shop 고객 신규 등록용 요청 DTO.\n\n이 스키마는 고객 등록 시 필수로 요구되는 필드(email, status 등) 및 선택 가능 필드(phone 등)를 정의합니다. email의 고유성, 상태 enum 패턴, 시간 필드의 감사 목적 등 각 필드는 DB 컬럼 및 요구사양과 1:1로 설명됩니다.\n\n사업적 측면에서는 신규 가입, 관리 시스템 프로비저닝, 외부 OAuth 인증 연동 등에 활용되어야 합니다."},"IAiShopCustomers.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"고객 이메일을 업데이트합니다. 문자 형식과 고유 제약을 따릅니다."},"phone":{"oneOf":[{"type":"string","description":"고객 전화번호 수정 가능. 없으면 null로 설정합니다."},{"type":"null","description":"고객 전화번호 수정 가능. 없으면 null로 설정합니다."}],"description":"고객 전화번호 수정 가능. 없으면 null로 설정합니다."},"status":{"type":"string","description":"계정 상태 필드 (예: 'active', 'withdrawn', 'suspended')."},"created_at":{"type":"string","format":"date-time","description":"계정 생성 시각으로, 일반적으로 변경되지 않지만 시스템 간 동기화 시 포함될 수 있습니다."},"updated_at":{"type":"string","format":"date-time","description":"수정 시각으로, 값을 갱신해야 합니다."}},"required":["email","status","created_at","updated_at"],"description":"AI Shop 고객 정보 갱신(전체 교체) 요청 DTO.\n\n이 스키마는 고객 정보 수정 시 사용됩니다. email 등 주요 필드는 항상 존재하고, phone 등은 null 허용. 상태 변경 로직과 최신화 관리에 활용됩니다. 모든 값은 Prisma 스키마와 일치해야 합니다.\n\n주로 관리자, 고객서비스 담당자, 개인정보 API에서 사용할 수 있습니다."},"IAiShopSellers.IRequest":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"판매자 고유 식별자(UUID). 단건 검색이나 리스트 페이징 시 식별용."},{"type":"null","format":"uuid","description":"판매자 고유 식별자(UUID). 단건 검색이나 리스트 페이징 시 식별용."}],"description":"판매자 고유 식별자(UUID). 단건 검색이나 리스트 페이징 시 식별용."},"business_name":{"oneOf":[{"type":"string","description":"판매자 공식 사업자 또는 상호명. 마켓노출, 송장, 관리자조회 등 이용."},{"type":"null","description":"판매자 공식 사업자 또는 상호명. 마켓노출, 송장, 관리자조회 등 이용."}],"description":"판매자 공식 사업자 또는 상호명. 마켓노출, 송장, 관리자조회 등 이용."},"business_registration_number":{"oneOf":[{"type":"string","description":"사업자등록번호. 법적 고유성(유니크) 기준이며, KYC/계정심사 등에 활용."},{"type":"null","description":"사업자등록번호. 법적 고유성(유니크) 기준이며, KYC/계정심사 등에 활용."}],"description":"사업자등록번호. 법적 고유성(유니크) 기준이며, KYC/계정심사 등에 활용."},"status":{"oneOf":[{"type":"string","description":"판매자 계정의 상태. 인증, 대기, 정지 등 관리 대장용. Enum은 시스템 레이어에서 관리."},{"type":"null","description":"판매자 계정의 상태. 인증, 대기, 정지 등 관리 대장용. Enum은 시스템 레이어에서 관리."}],"description":"판매자 계정의 상태. 인증, 대기, 정지 등 관리 대장용. Enum은 시스템 레이어에서 관리."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자 심사 통과 시점. 승인완료된 판매자만 노출 등 정책에 따라 사용."},{"type":"null","format":"date-time","description":"관리자 심사 통과 시점. 승인완료된 판매자만 노출 등 정책에 따라 사용."}],"description":"관리자 심사 통과 시점. 승인완료된 판매자만 노출 등 정책에 따라 사용."},"created_at":{"oneOf":[{"type":"string","format":"date-time","description":"판매자 레코드 생성 시각. 가입, 심사 이슈, 감사 기록에 참고."},{"type":"null","format":"date-time","description":"판매자 레코드 생성 시각. 가입, 심사 이슈, 감사 기록에 참고."}],"description":"판매자 레코드 생성 시각. 가입, 심사 이슈, 감사 기록에 참고."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"판매자 정보 최근 갱신 시각. 변경 요청 트래킹 등에 사용."},{"type":"null","format":"date-time","description":"판매자 정보 최근 갱신 시각. 변경 요청 트래킹 등에 사용."}],"description":"판매자 정보 최근 갱신 시각. 변경 요청 트래킹 등에 사용."}},"description":"판매자 목록을 검색·필터링·페이지네이션할 때 입력하는 요청 파라미터 DTO입니다.\n\n각 property는 ai_shop_sellers 테이블 컬럼을 엄격히 반영합니다. 모든 값은 null 허용(AND/OR) 조건 검색 지원을 위함입니다.\n\n사업적 예시: 판매자 관리 화면, 심사 증빙, 관리자 대량 검색 등에서 사용됩니다.","required":[]},"IPageIAiShopSellers":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopSellers"}}},"required":["pagination","data"],"description":"판매자 목록의 페이지네이션 결과 컨테이너.\n\npagination 속성은 현재/전체 페이지 및 레코드 총계 등 페이지 정보 제공. data는 aiShopSellers 배열(데이터 레코드)로 반환됨.\n\n이 구조는 List API의 공통 페이징 패턴을 따르며 serializer와 UI 전시 모두에 직접 쓰입니다."},"aiShopSellers":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"판매자 고유 PK(UUID). ai_shop_sellers 테이블의 id 칼럼."},"business_name":{"type":"string","description":"공식 상호명. 송장, 쇼핑몰 Bakcoffice 등 공개용 식별자."},"business_registration_number":{"type":"string","description":"사업자등록번호 (대한민국 기준 10자리 숫자 등, 외국도 형태 상이 가능). KYC/제휴계정 검증, 유니크 제약."},"status":{"type":"string","description":"판매자 상태. 예시: 'onboarding', 'active', 'suspended'. Enum 패턴은 서비스 계층에서 적용."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자에 의해 승인된 시각(승인 전이면 null)."},{"type":"null","format":"date-time","description":"관리자에 의해 승인된 시각(승인 전이면 null)."}],"description":"관리자에 의해 승인된 시각(승인 전이면 null)."},"created_at":{"type":"string","format":"date-time","description":"가입/레코드 생성 시간."},"updated_at":{"type":"string","format":"date-time","description":"최근 정보 갱신 시각."}},"required":["id","business_name","business_registration_number","status","created_at","updated_at"],"description":"판매자 엔터티 AI Shop DB 스키마 정의에 따른 상세 객체.\n\n실제 DB Row와 1:1로 맵핑되는 Read/Write용. KYC절차에서 필수 정보, 제휴 입점/광고주 관리에서 주요 식별자 역할.\n\n상태(status) 및 승인일(approved_at)로 검수 여부 판단 가능."},"aiShopSellers.ICreate":{"type":"object","properties":{"business_name":{"type":"string","description":"판매자(상점, 사업체) 공식 상호. 반드시 필요, DB/CD 정책상 고유."},"business_registration_number":{"type":"string","description":"사업자등록증에 명시된 공식번호(일반적으로 10자리). 고유 제약이 반드시 걸려 있음."},"status":{"type":"string","description":"계정상태 필드. 'onboarding', 'active', 'suspended' 등 Enum 패턴을 서비스단에서 관리. 최초 등록 시 'onboarding' 또는 'pending' 사용 우려됨."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자 승인 시각. 미승인 판매자일 경우 null. 선택 입력."},{"type":"null","format":"date-time","description":"관리자 승인 시각. 미승인 판매자일 경우 null. 선택 입력."}],"description":"관리자 승인 시각. 미승인 판매자일 경우 null. 선택 입력."}},"required":["business_name","business_registration_number","status"],"description":"ai_shop_sellers 신규 입력 DTO. 판매자 입점(신규등록) 시 필요한 필수 속성만 작성하도록 설계됨.\n\n사업자등록번호, 상호 등은 유니크/규제 제약 존재. approved_at은 최초 등록 시 일반적으로 null 상태."},"aiShopSellers.IUpdate":{"type":"object","properties":{"business_name":{"type":"string","description":"공식 상호명. 수정 시 중복 및 고유성 정책 체크 필요."},"business_registration_number":{"type":"string","description":"사업자등록번호. 수정 시 기존 등록제한 등 비즈니스 룰 체크."},"status":{"type":"string","description":"계정 현황 필드. Enum 패턴: onboarding, active, suspended 등. 상태이관(승인,정지,활성화 등) 단건 수정 허용."},"approved_at":{"oneOf":[{"type":"string","format":"date-time","description":"승인 시각. 미승인 → 승인 상태 전환 시만 값 부여, 그 외 null 유지 권장."},{"type":"null","format":"date-time","description":"승인 시각. 미승인 → 승인 상태 전환 시만 값 부여, 그 외 null 유지 권장."}],"description":"승인 시각. 미승인 → 승인 상태 전환 시만 값 부여, 그 외 null 유지 권장."}},"required":["business_name","business_registration_number","status"],"description":"판매자 정보 전체 교체용(최신화) 업데이트 DTO.\n\n필수 속성에 대해 AI Shop 요구사항에 맞추어 Prisma 컬럼 스키마와 일치하는 구조임.\n\n관리자 승인(날짜), 상태 케이스 상태 전환 시 각별히 비즈니스 정책과 연동하여 사용."},"aiShopAdmins.IRequest":{"type":"object","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"관리자 고유 ID(UUID). 개별 단건 조회/필터링용."},{"type":"null","format":"uuid","description":"관리자 고유 ID(UUID). 개별 단건 조회/필터링용."}],"description":"관리자 고유 ID(UUID). 개별 단건 조회/필터링용."},"username":{"oneOf":[{"type":"string","description":"관리자 계정 로그인/감사용 ID. 목록검색·권한자 식별 등에 활용."},{"type":"null","description":"관리자 계정 로그인/감사용 ID. 목록검색·권한자 식별 등에 활용."}],"description":"관리자 계정 로그인/감사용 ID. 목록검색·권한자 식별 등에 활용."},"status":{"oneOf":[{"type":"string","description":"관리자 계정의 상태(활성/정지/대기 등 시스템 레이어 enum 패턴)."},{"type":"null","description":"관리자 계정의 상태(활성/정지/대기 등 시스템 레이어 enum 패턴)."}],"description":"관리자 계정의 상태(활성/정지/대기 등 시스템 레이어 enum 패턴)."},"created_at":{"oneOf":[{"type":"string","format":"date-time","description":"관리자 레코드 생성일(감사/화이트리스트 등에 필요)."},{"type":"null","format":"date-time","description":"관리자 레코드 생성일(감사/화이트리스트 등에 필요)."}],"description":"관리자 레코드 생성일(감사/화이트리스트 등에 필요)."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"최근 정보 변경 시각. 동기화 감사 트래킹에 사용."},{"type":"null","format":"date-time","description":"최근 정보 변경 시각. 동기화 감사 트래킹에 사용."}],"description":"최근 정보 변경 시각. 동기화 감사 트래킹에 사용."}},"description":"관리자(admin) 목록 조회·검색·페이징/필터용 요청 객체 DTO입니다.\n\n각 필드는 Prisma ai_shop_admins 테이블 컬럼을 반영하며 null 허용(AND/OR 조건검색). 관리자 계정 관리/운영 대시보드, 감사 로깅에 주로 사용.","required":[]},"IPageaiShopAdmins":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopAdmins"}}},"required":["pagination","data"],"description":"관리자 목록의 페이지네이션 결과 컨테이너.\n\npagination엔 페이지/레코드 집계 정보가 담기고, data엔 aiShopAdmins 개별 레코드 데이터가 배열로 전달됨.\n\n전체/검색 결과 페이징 UX뿐 아니라 통계 관리자 보고서에도 사용 가능."},"aiShopAdmins":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"관리자 아이디(PK, UUID), ai_shop_admins DB 기준."},"username":{"type":"string","description":"로그인 및 트래킹용 관리자 계정명. 유니크 강제(ID/PW 업무)."},"status":{"type":"string","description":"관리자 계정 상태로, 예: 'active', 'suspended', 'pending' 등 Enum정책은 서비스 레이어 관리."},"created_at":{"type":"string","format":"date-time","description":"계정 생성 시각, 감사지표 등 활용."},"updated_at":{"type":"string","format":"date-time","description":"마지막 레코드 업데이트 시각, 변경 트래킹/통합감사에 사용."}},"required":["id","username","status","created_at","updated_at"],"description":"관리자(Admin) 엔터티 DB Row 정의에 따른 상세 데이터 객체.\n\nAI Shop 컨솔/감사 모듈에서 사용하는 '관리자' 계정 정보로, 각 컬럼 의미/정책/운영 목적에 맞는 속성으로 해석해야 합니다."},"aiShopAdmins.ICreate":{"type":"object","properties":{"username":{"type":"string","description":"신규 관리자 계정 ID. 시스템 전체 유니크 제약을 통과해야 합니다."},"status":{"type":"string","description":"계정 생성 당시의 상태. 일반적으로 'pending','active','suspended' 중 하나로 시작."}},"required":["username","status"],"description":"관리자 신규 등록 시 필요한 최소 정보 입력 DTO.\n\nusername는 고유해야 하며, status는 Enum성 패턴을 사전정의해 사용합니다."},"aiShopAdmins.IUpdate":{"type":"object","properties":{"username":{"type":"string","description":"계정명(로그인 ID), 유니크 제약(NSG Unique ID for 관리/감사/로그)."},"status":{"type":"string","description":"관리자 계정 상태(enum: 'active', 'pending', 'suspended' 등)."}},"required":["username","status"],"description":"관리자 정보 전체 교체(수정)용 DTO. username/status 모두 기입 필요하며, 일부 필드만 업데이트시에도 이 구조 준수."},"aiShopAuthProviders.IRequest":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by the customer id (nullable). Only returns mappings for a specific customer if set. Corresponds to ai_shop_auth_providers.customer_id.\n\nUse for user directory troubleshooting, admin lookup, or support integration."},{"type":"null","format":"uuid","description":"Filter by the customer id (nullable). Only returns mappings for a specific customer if set. Corresponds to ai_shop_auth_providers.customer_id.\n\nUse for user directory troubleshooting, admin lookup, or support integration."}],"description":"Filter by the customer id (nullable). Only returns mappings for a specific customer if set. Corresponds to ai_shop_auth_providers.customer_id.\n\nUse for user directory troubleshooting, admin lookup, or support integration."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by the seller id (nullable). Only returns mappings for a particular seller if set. Links to ai_shop_auth_providers.seller_id.\n\nUseful for onboarding troubleshooting/SSO support mapping for merchants."},{"type":"null","format":"uuid","description":"Filter by the seller id (nullable). Only returns mappings for a particular seller if set. Links to ai_shop_auth_providers.seller_id.\n\nUseful for onboarding troubleshooting/SSO support mapping for merchants."}],"description":"Filter by the seller id (nullable). Only returns mappings for a particular seller if set. Links to ai_shop_auth_providers.seller_id.\n\nUseful for onboarding troubleshooting/SSO support mapping for merchants."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by admin user id (nullable). Only returns admin-provider mappings if set. Points to ai_shop_auth_providers.admin_id for admin SSO/2FA troubleshooting."},{"type":"null","format":"uuid","description":"Filter by admin user id (nullable). Only returns admin-provider mappings if set. Points to ai_shop_auth_providers.admin_id for admin SSO/2FA troubleshooting."}],"description":"Filter by admin user id (nullable). Only returns admin-provider mappings if set. Points to ai_shop_auth_providers.admin_id for admin SSO/2FA troubleshooting."},"provider_type":{"oneOf":[{"type":"string","description":"Filter by external authentication provider type (e.g., 'google', 'kakao', 'email', 'sms', 'totp', etc.), Nullable for all types.\n\nAllows precise search for linked accounts of a given provider."},{"type":"null","description":"Filter by external authentication provider type (e.g., 'google', 'kakao', 'email', 'sms', 'totp', etc.), Nullable for all types.\n\nAllows precise search for linked accounts of a given provider."}],"description":"Filter by external authentication provider type (e.g., 'google', 'kakao', 'email', 'sms', 'totp', etc.), Nullable for all types.\n\nAllows precise search for linked accounts of a given provider."},"external_id":{"oneOf":[{"type":"string","description":"Filter to external provider's user id (nullable). Used for deep linkage reconciliation, e.g. social login diagnosis.\n\nNot commonly used in pagination, but can quickly identify specific external SSO users."},{"type":"null","description":"Filter to external provider's user id (nullable). Used for deep linkage reconciliation, e.g. social login diagnosis.\n\nNot commonly used in pagination, but can quickly identify specific external SSO users."}],"description":"Filter to external provider's user id (nullable). Used for deep linkage reconciliation, e.g. social login diagnosis.\n\nNot commonly used in pagination, but can quickly identify specific external SSO users."},"linked_from":{"oneOf":[{"type":"string","format":"date-time","description":"Request to filter mapping records linked after a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},{"type":"null","format":"date-time","description":"Request to filter mapping records linked after a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."}],"description":"Request to filter mapping records linked after a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},"linked_to":{"oneOf":[{"type":"string","format":"date-time","description":"Request to filter mapping records linked before a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},{"type":"null","format":"date-time","description":"Request to filter mapping records linked before a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."}],"description":"Request to filter mapping records linked before a specific ISO8601 instant (nullable). Used for time-based SSO linkage reporting or troubleshooting."},"page":{"oneOf":[{"type":"integer","description":"Requested page number, 1-indexed. Default is 1 if not specified."},{"type":"null","description":"Requested page number, 1-indexed. Default is 1 if not specified."}],"description":"Requested page number, 1-indexed. Default is 1 if not specified."},"limit":{"oneOf":[{"type":"integer","description":"Maximum number of results per page. Used for server pagination, default 100 if not provided."},{"type":"null","description":"Maximum number of results per page. Used for server pagination, default 100 if not provided."}],"description":"Maximum number of results per page. Used for server pagination, default 100 if not provided."},"sort":{"oneOf":[{"type":"string","description":"Custom sort string for results (e.g., '-linked_at', 'provider_type'). Default descending by linked_at if not specified. Only schema fields permitted."},{"type":"null","description":"Custom sort string for results (e.g., '-linked_at', 'provider_type'). Default descending by linked_at if not specified. Only schema fields permitted."}],"description":"Custom sort string for results (e.g., '-linked_at', 'provider_type'). Default descending by linked_at if not specified. Only schema fields permitted."}},"description":"Request schema for searching/filtering ai_shop_auth_providers external login/SSO records. All filters directly reference schema fields, fully normalized, and support flexible troubleshooting/search. Used in admin/user support dashboards, SSO/OAuth audits, integration repair, pagination, and listing scenarios. Every property either matches a real table column or supports pagination/filtering.","required":[]},"IPageaiShopAuthProviders":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopAuthProviders"},"description":"A page (subset) of aiShopAuthProviders records returned by list/query operation."}},"required":["pagination","data"],"description":"A paged response for aiShopAuthProviders query (external provider SSO mappings). Encapsulates full pagination and a chunk of provider mapping items. Used in admin dashboards, audit exports, or self-service account linking UIs."},"aiShopAuthProviders":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for this provider mapping record (UUID, not updatable)."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked customer id (nullable, if this mapping is for a seller or admin). Follows 3NF normalization; only one of customer_id, seller_id, admin_id is non-null."},{"type":"null","format":"uuid","description":"Linked customer id (nullable, if this mapping is for a seller or admin). Follows 3NF normalization; only one of customer_id, seller_id, admin_id is non-null."}],"description":"Linked customer id (nullable, if this mapping is for a seller or admin). Follows 3NF normalization; only one of customer_id, seller_id, admin_id is non-null."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked seller id (nullable, if this mapping is not for a seller). Only one of customer_id, seller_id, admin_id is set for each mapping."},{"type":"null","format":"uuid","description":"Linked seller id (nullable, if this mapping is not for a seller). Only one of customer_id, seller_id, admin_id is set for each mapping."}],"description":"Linked seller id (nullable, if this mapping is not for a seller). Only one of customer_id, seller_id, admin_id is set for each mapping."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked admin id (nullable). Null unless this mapping is for an admin."},{"type":"null","format":"uuid","description":"Linked admin id (nullable). Null unless this mapping is for an admin."}],"description":"Linked admin id (nullable). Null unless this mapping is for an admin."},"provider_type":{"type":"string","description":"External authentication provider type (e.g., 'google', 'kakao', 'email', 'totp', etc.)."},"external_id":{"type":"string","description":"Provider-assigned unique user token/id. Used for mapping/reconciliation."},"linked_at":{"type":"string","format":"date-time","description":"Timestamp when this external linkage was established. Required for audit/compliance."}},"required":["id","provider_type","external_id","linked_at"],"description":"Normalized row for ai_shop_auth_providers: external provider account linkage to a customer, seller, or admin user.\n\nLinks identity (customer_id, seller_id, admin_id—only one is set) to an external login system, with type, immutable mapping id, and external_id. Fully normalized for reliable SSO and secure identity flows.\n\nSample lifecycle: Row created when customer/seller/admin connects a new provider account; removed on unlink/revocation; query/exported for audits."},"aiShopAuthProviders.ICreate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to customer, if linking to customer actor (nullable for seller/admin records). Only one of customer_id, seller_id, admin_id is set."},{"type":"null","format":"uuid","description":"FK to customer, if linking to customer actor (nullable for seller/admin records). Only one of customer_id, seller_id, admin_id is set."}],"description":"FK to customer, if linking to customer actor (nullable for seller/admin records). Only one of customer_id, seller_id, admin_id is set."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to seller, if linking to a seller account (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"FK to seller, if linking to a seller account (nullable for customer/admin)."}],"description":"FK to seller, if linking to a seller account (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to admin, if linking for admin (nullable for customer/seller)."},{"type":"null","format":"uuid","description":"FK to admin, if linking for admin (nullable for customer/seller)."}],"description":"FK to admin, if linking for admin (nullable for customer/seller)."},"provider_type":{"type":"string","description":"SSO/external login type; e.g. 'google', 'kakao', 'totp', 'sms', 'email'. Required."},"external_id":{"type":"string","description":"Provider-assigned ID/token for external account. Must be unique within context of provider_type + actor."},"linked_at":{"type":"string","format":"date-time","description":"Datetime when linkage was established (required for compliance)."}},"required":["provider_type","external_id","linked_at"],"description":"Insert object for ai_shop_auth_providers mapping: add an OAuth, SSO, or 2FA record to a customer, seller, or admin account. Only one of customer_id/seller_id/admin_id should be set for a given row. Required for onboarding, account connection, or user SSO provisioning flows. All fields map directly to schema columns."},"IAiShopAuthProviders.IUpdate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing customer FK (nullable for seller/admin). Enables polymorphic relinking; only update if mapping to a new actor or correcting an import error."},{"type":"null","format":"uuid","description":"New or existing customer FK (nullable for seller/admin). Enables polymorphic relinking; only update if mapping to a new actor or correcting an import error."}],"description":"New or existing customer FK (nullable for seller/admin). Enables polymorphic relinking; only update if mapping to a new actor or correcting an import error."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing seller FK (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"New or existing seller FK (nullable for customer/admin)."}],"description":"New or existing seller FK (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing admin FK (nullable for seller/customer)."},{"type":"null","format":"uuid","description":"New or existing admin FK (nullable for seller/customer)."}],"description":"New or existing admin FK (nullable for seller/customer)."},"provider_type":{"type":"string","description":"Provider type for the mapping (required). Should only be updated when correcting or formalizing identity linkage. Required by schema."},"external_id":{"type":"string","description":"External provider's user id (required). Used for mapping/lookup."},"linked_at":{"type":"string","format":"date-time","description":"Datetime when linkage was (re-)established. Required for compliance."}},"required":["provider_type","external_id","linked_at"],"description":"Update object for ai_shop_auth_providers mapping row. All fields present in schema permitted for update. Supports correction or advanced admin flows (polymorphic actor update, SSO/2FA relink, etc.) Business logic enforces only one actor role is set in a single record."},"IAiShopAuthProviders":{"$ref":"#/components/schemas/aiShopAuthProviders","description":"Alias type to expose full aiShopAuthProviders fields for reference/cross-component chaining in request/response bodies. Used for system reuse and cross-component type referencing."},"IAiShopUserSessions.IRequest":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for sessions belonging to a specific customer."},{"type":"null","format":"uuid","description":"Optional filter for sessions belonging to a specific customer."}],"description":"Optional filter for sessions belonging to a specific customer."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter sessions belonging to a given seller (nullable for customer/admin only queries)."},{"type":"null","format":"uuid","description":"Filter sessions belonging to a given seller (nullable for customer/admin only queries)."}],"description":"Filter sessions belonging to a given seller (nullable for customer/admin only queries)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for admin user sessions (nullable for customer/seller)."},{"type":"null","format":"uuid","description":"Filter for admin user sessions (nullable for customer/seller)."}],"description":"Filter for admin user sessions (nullable for customer/seller)."},"session_token":{"oneOf":[{"type":"string","description":"Session token/id. Filter exact session tokens for audit/troubleshooting."},{"type":"null","description":"Session token/id. Filter exact session tokens for audit/troubleshooting."}],"description":"Session token/id. Filter exact session tokens for audit/troubleshooting."},"issued_from":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions issued after this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions issued after this timestamp (exclusive, nullable)."}],"description":"Sessions issued after this timestamp (exclusive, nullable)."},"issued_to":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions issued before this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions issued before this timestamp (exclusive, nullable)."}],"description":"Sessions issued before this timestamp (exclusive, nullable)."},"expires_from":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions expiring after this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions expiring after this timestamp (exclusive, nullable)."}],"description":"Sessions expiring after this timestamp (exclusive, nullable)."},"expires_to":{"oneOf":[{"type":"string","format":"date-time","description":"Sessions expiring before this timestamp (exclusive, nullable)."},{"type":"null","format":"date-time","description":"Sessions expiring before this timestamp (exclusive, nullable)."}],"description":"Sessions expiring before this timestamp (exclusive, nullable)."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Filter to sessions terminated at a given timestamp (or null for active sessions)."},{"type":"null","format":"date-time","description":"Filter to sessions terminated at a given timestamp (or null for active sessions)."}],"description":"Filter to sessions terminated at a given timestamp (or null for active sessions)."},"ip_address":{"oneOf":[{"type":"string","description":"Source IP address for the session (nullable)."},{"type":"null","description":"Source IP address for the session (nullable)."}],"description":"Source IP address for the session (nullable)."},"page":{"oneOf":[{"type":"integer","description":"Page number for UI/server pagination (optional). Default 1."},{"type":"null","description":"Page number for UI/server pagination (optional). Default 1."}],"description":"Page number for UI/server pagination (optional). Default 1."},"limit":{"oneOf":[{"type":"integer","description":"Results per page, default 100."},{"type":"null","description":"Results per page, default 100."}],"description":"Results per page, default 100."},"sort":{"oneOf":[{"type":"string","description":"Sort string by allowed schema fields (default: desc by issued_at)."},{"type":"null","description":"Sort string by allowed schema fields (default: desc by issued_at)."}],"description":"Sort string by allowed schema fields (default: desc by issued_at)."}},"description":"Request schema for searching, filtering, and paginating ai_shop_user_sessions authentication records (customer/seller/admin session tracking, used in security/audit/reporting). Only actual schema fields present.","required":[]},"IPageIAiShopUserSessions":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopUserSessions"},"description":"A page (chunk) of session objects matching the search/filter."}},"required":["pagination","data"],"description":"Standard pagination container for ai_shop_user_sessions records. Contains metadata and chunk of normalized session objects for dashboards, auditing, and user session listing."},"IAiShopUserSessions":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Session primary key. Each value is a unique session context."},"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Session linkage for customer account (nullable if session is not for a customer)."},{"type":"null","format":"uuid","description":"Session linkage for customer account (nullable if session is not for a customer)."}],"description":"Session linkage for customer account (nullable if session is not for a customer)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Session linkage for seller account (nullable if session is not for a seller)."},{"type":"null","format":"uuid","description":"Session linkage for seller account (nullable if session is not for a seller)."}],"description":"Session linkage for seller account (nullable if session is not for a seller)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Session linkage for admin account (nullable if not for admin)."},{"type":"null","format":"uuid","description":"Session linkage for admin account (nullable if not for admin)."}],"description":"Session linkage for admin account (nullable if not for admin)."},"session_token":{"type":"string","description":"Unique session token per login. Security/audit enforced; used for session termination, device management, etc."},"issued_at":{"type":"string","format":"date-time","description":"Datetime for session issuance (login time) for auditing."},"expires_at":{"type":"string","format":"date-time","description":"Expected expiration timestamp of the session for audit/tracking."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"If forcibly ended, records timestamp (otherwise null for active sessions)."},{"type":"null","format":"date-time","description":"If forcibly ended, records timestamp (otherwise null for active sessions)."}],"description":"If forcibly ended, records timestamp (otherwise null for active sessions)."},"ip_address":{"type":"string","description":"IP address of client/device for audit/tracing."}},"required":["id","session_token","issued_at","expires_at","ip_address"],"description":"Normalized row for ai_shop_user_sessions: stores authentication session details for customers, sellers, and admins. Each session is referenced to only one actor per record. Used for concurrency management, forced logout, device tracking, and security audit flows. Actual device details (user-agent) handled elsewhere."},"IAiShopUserSessions.ICreate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for session's customer (nullable for seller/admin)."},{"type":"null","format":"uuid","description":"FK for session's customer (nullable for seller/admin)."}],"description":"FK for session's customer (nullable for seller/admin)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for session's seller (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"FK for session's seller (nullable for customer/admin)."}],"description":"FK for session's seller (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for session's admin (nullable for seller/customer)."},{"type":"null","format":"uuid","description":"FK for session's admin (nullable for seller/customer)."}],"description":"FK for session's admin (nullable for seller/customer)."},"session_token":{"type":"string","description":"Token for this session (generated upon login)."},"issued_at":{"type":"string","format":"date-time","description":"Datetime session issued (now)."},"expires_at":{"type":"string","format":"date-time","description":"Datetime session will expire."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime forcibly ended (null if not ended forcibly)."},{"type":"null","format":"date-time","description":"Datetime forcibly ended (null if not ended forcibly)."}],"description":"Datetime forcibly ended (null if not ended forcibly)."},"ip_address":{"type":"string","description":"Client IP string."}},"required":["session_token","issued_at","expires_at","ip_address"],"description":"Insert object for ai_shop_user_sessions row. Used for login flows, SSO linkage, concurrency and audit compliance. All fields map directly to schema columns. Only one actor FK may be non-null per record."},"IAiShopUserSessions.IUpdate":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing customer FK for session (nullable for seller/admin)."},{"type":"null","format":"uuid","description":"New or existing customer FK for session (nullable for seller/admin)."}],"description":"New or existing customer FK for session (nullable for seller/admin)."},"seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing seller FK for session (nullable for customer/admin)."},{"type":"null","format":"uuid","description":"New or existing seller FK for session (nullable for customer/admin)."}],"description":"New or existing seller FK for session (nullable for customer/admin)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"New or existing admin FK for session (nullable for customer/seller)."},{"type":"null","format":"uuid","description":"New or existing admin FK for session (nullable for customer/seller)."}],"description":"New or existing admin FK for session (nullable for customer/seller)."},"session_token":{"type":"string","description":"Session token (required for update)."},"issued_at":{"type":"string","format":"date-time","description":"Datetime for session issued (change/reissue only in advanced workflows)."},"expires_at":{"type":"string","format":"date-time","description":"Datetime session will expire."},"terminated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set session terminated_at to forcibly end. Null to mark as active."},{"type":"null","format":"date-time","description":"Set session terminated_at to forcibly end. Null to mark as active."}],"description":"Set session terminated_at to forcibly end. Null to mark as active."},"ip_address":{"type":"string","description":"IP address associated with session."}},"required":["session_token","issued_at","expires_at","ip_address"],"description":"Update object for ai_shop_user_sessions: enables reassigning session to other user roles, changing lifespan, or forcibly ending. Used in security/admin workflows and session migration flows. Only one FK set at a time."},"IAiShopCustomerProfiles.IRequest":{"type":"object","properties":{"customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for customer (filter for all profiles linked to specific customer id)."},{"type":"null","format":"uuid","description":"FK for customer (filter for all profiles linked to specific customer id)."}],"description":"FK for customer (filter for all profiles linked to specific customer id)."},"name":{"oneOf":[{"type":"string","description":"Case-insensitive/partial search on customer profile name field."},{"type":"null","description":"Case-insensitive/partial search on customer profile name field."}],"description":"Case-insensitive/partial search on customer profile name field."},"preferences":{"oneOf":[{"type":"string","description":"JSON-string of serialized preferences (may include application-specific keys; filterable if platform supports subfield search)."},{"type":"null","description":"JSON-string of serialized preferences (may include application-specific keys; filterable if platform supports subfield search)."}],"description":"JSON-string of serialized preferences (may include application-specific keys; filterable if platform supports subfield search)."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Date-of-birth (filter by exact, or range if supported)."},{"type":"null","format":"date-time","description":"Date-of-birth (filter by exact, or range if supported)."}],"description":"Date-of-birth (filter by exact, or range if supported)."},"gender":{"oneOf":[{"type":"string","description":"Filter by gender signal (may be 'M','F','Other', or string by application logic)."},{"type":"null","description":"Filter by gender signal (may be 'M','F','Other', or string by application logic)."}],"description":"Filter by gender signal (may be 'M','F','Other', or string by application logic)."},"locale":{"oneOf":[{"type":"string","description":"Language/locale code (e.g., 'en', 'ko', 'fr'). Nullable for multi-locale queries."},{"type":"null","description":"Language/locale code (e.g., 'en', 'ko', 'fr'). Nullable for multi-locale queries."}],"description":"Language/locale code (e.g., 'en', 'ko', 'fr'). Nullable for multi-locale queries."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Serialized multi-address JSON (advanced filter scenarios only)."},{"type":"null","description":"Serialized multi-address JSON (advanced filter scenarios only)."}],"description":"Serialized multi-address JSON (advanced filter scenarios only)."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Created at or after this timestamp."},{"type":"null","format":"date-time","description":"Created at or after this timestamp."}],"description":"Created at or after this timestamp."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Created before this timestamp."},{"type":"null","format":"date-time","description":"Created before this timestamp."}],"description":"Created before this timestamp."},"updated_from":{"oneOf":[{"type":"string","format":"date-time","description":"Updated at or after this timestamp."},{"type":"null","format":"date-time","description":"Updated at or after this timestamp."}],"description":"Updated at or after this timestamp."},"updated_to":{"oneOf":[{"type":"string","format":"date-time","description":"Updated before this timestamp."},{"type":"null","format":"date-time","description":"Updated before this timestamp."}],"description":"Updated before this timestamp."},"page":{"oneOf":[{"type":"integer","description":"Page number; default 1 if not provided."},{"type":"null","description":"Page number; default 1 if not provided."}],"description":"Page number; default 1 if not provided."},"limit":{"oneOf":[{"type":"integer","description":"Results per page (paging chunk)."},{"type":"null","description":"Results per page (paging chunk)."}],"description":"Results per page (paging chunk)."},"sort":{"oneOf":[{"type":"string","description":"Sort string/pattern on allowed columns (default: desc updated_at)."},{"type":"null","description":"Sort string/pattern on allowed columns (default: desc updated_at)."}],"description":"Sort string/pattern on allowed columns (default: desc updated_at)."}},"description":"Request body for listing/searching/filtering customer profiles by atomic fields as in ai_shop_customer_profiles table. Used for admin search, analytics, privacy management, and profile listing dashboards.","required":[]},"IPageIAiShopCustomerProfiles":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the page of customer profiles. See IPage.IPagination for full details."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCustomerProfiles"},"description":"Array of customer profile objects as defined by IAiShopCustomerProfiles."}},"required":["pagination","data"],"description":"Paginated container for customer profile objects (IAiShopCustomerProfiles). Follows standard IPage<T> convention. Includes pagination metadata (current page, limit, record count, total pages) plus an array of customer profiles for the current page. Used for advanced search and filter API responses."},"IAiShopCustomerProfiles":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique profile identity. Corresponds to ai_shop_customer_profiles.id in the database. Example: 'a69b557e-8f3a-4fa2-9c3c-596625c18454'."},"customer_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_customers.id, strictly unique for 1:1 customer/profile mapping. Represents the owning customer of this profile."},"name":{"type":"string","description":"Full customer name for address and display. This is required for all shipments and customer-facing UIs."},"preferences":{"oneOf":[{"type":"string","description":"Serialized preferences JSON. Used for AI personalization, UI configuration, and advanced analytics. Optional."},{"type":"null","description":"Serialized preferences JSON. Used for AI personalization, UI configuration, and advanced analytics. Optional."}],"description":"Serialized preferences JSON. Used for AI personalization, UI configuration, and advanced analytics. Optional."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Date of birth, if collected for compliance/age restrictions. ISO 8601 datetime. Optional."},{"type":"null","format":"date-time","description":"Date of birth, if collected for compliance/age restrictions. ISO 8601 datetime. Optional."}],"description":"Date of birth, if collected for compliance/age restrictions. ISO 8601 datetime. Optional."},"gender":{"oneOf":[{"type":"string","description":"Customer's gender, if provided, for analytics/marketing. Optional. Example: 'male', 'female', or custom domain value."},{"type":"null","description":"Customer's gender, if provided, for analytics/marketing. Optional. Example: 'male', 'female', or custom domain value."}],"description":"Customer's gender, if provided, for analytics/marketing. Optional. Example: 'male', 'female', or custom domain value."},"locale":{"oneOf":[{"type":"string","description":"Language/locale code. Example: 'en', 'ko', 'fr'. Used for localized experiences. Optional."},{"type":"null","description":"Language/locale code. Example: 'en', 'ko', 'fr'. Used for localized experiences. Optional."}],"description":"Language/locale code. Example: 'en', 'ko', 'fr'. Used for localized experiences. Optional."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Serialized JSON array of addresses, if customer supports multi-shipping. Optional. Used to simplify downstream address selection in checkout or profile."},{"type":"null","description":"Serialized JSON array of addresses, if customer supports multi-shipping. Optional. Used to simplify downstream address selection in checkout or profile."}],"description":"Serialized JSON array of addresses, if customer supports multi-shipping. Optional. Used to simplify downstream address selection in checkout or profile."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the profile was created. Used for audit/compliance. Example: '2025-07-23T10:23:18Z'."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp. For auditing and synchronization. Example: '2025-07-23T10:32:41Z'."}},"required":["id","customer_id","name","created_at","updated_at"],"description":"Customer profile entity as defined in ai_shop_customer_profiles. Contains extended customer data (name, preferences, contact info, date of birth, gender, locale, shipping addresses), audit fields (created_at, updated_at), and references to the core customer account. Strict 1:1 with ai_shop_customers. All optional fields may be null, but id, customer_id, and name are always required. Used in advanced onboarding, personalization, and checkout."},"IAiShopCustomerProfiles.ICreate":{"type":"object","properties":{"customer_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_customers.id, strictly unique for 1:1 customer/profile mapping. The owning customer for this profile."},"name":{"type":"string","description":"Full customer name for address, display, and compliance. Required."},"preferences":{"oneOf":[{"type":"string","description":"Optional serialized JSON string of customer preferences/configuration. Used for AI personalization and analytics."},{"type":"null","description":"Optional serialized JSON string of customer preferences/configuration. Used for AI personalization and analytics."}],"description":"Optional serialized JSON string of customer preferences/configuration. Used for AI personalization and analytics."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Optional date of birth for compliance/age-restricted purchases. ISO 8601."},{"type":"null","format":"date-time","description":"Optional date of birth for compliance/age-restricted purchases. ISO 8601."}],"description":"Optional date of birth for compliance/age-restricted purchases. ISO 8601."},"gender":{"oneOf":[{"type":"string","description":"Optional gender info for personalization/marketing. Example: 'male', 'female', or domain-controlled value."},{"type":"null","description":"Optional gender info for personalization/marketing. Example: 'male', 'female', or domain-controlled value."}],"description":"Optional gender info for personalization/marketing. Example: 'male', 'female', or domain-controlled value."},"locale":{"oneOf":[{"type":"string","description":"Optional locale or language preference (e.g. 'en', 'ko', 'fr')."},{"type":"null","description":"Optional locale or language preference (e.g. 'en', 'ko', 'fr')."}],"description":"Optional locale or language preference (e.g. 'en', 'ko', 'fr')."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Optional serialized JSON array of addresses for multi-shipment or address book features."},{"type":"null","description":"Optional serialized JSON array of addresses for multi-shipment or address book features."}],"description":"Optional serialized JSON array of addresses for multi-shipment or address book features."}},"required":["customer_id","name"],"description":"Schema for creating a new customer profile (ai_shop_customer_profiles). All required data must be present (customer_id, name). Optional fields include preferences, dob, gender, locale, shipping_addresses. Used for API POST/registration flows."},"IAiShopCustomerProfiles.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Full customer name, required for shipment or updated display. Cannot be null."},"preferences":{"oneOf":[{"type":"string","description":"Optional preferences, personalized settings or configuration for the user."},{"type":"null","description":"Optional preferences, personalized settings or configuration for the user."}],"description":"Optional preferences, personalized settings or configuration for the user."},"dob":{"oneOf":[{"type":"string","format":"date-time","description":"Optional date of birth, for compliance or targeted experiences."},{"type":"null","format":"date-time","description":"Optional date of birth, for compliance or targeted experiences."}],"description":"Optional date of birth, for compliance or targeted experiences."},"gender":{"oneOf":[{"type":"string","description":"Optional gender field, for personalization/analytics."},{"type":"null","description":"Optional gender field, for personalization/analytics."}],"description":"Optional gender field, for personalization/analytics."},"locale":{"oneOf":[{"type":"string","description":"Optional locale field for language/region preference."},{"type":"null","description":"Optional locale field for language/region preference."}],"description":"Optional locale field for language/region preference."},"shipping_addresses":{"oneOf":[{"type":"string","description":"Optional serialized JSON array of addresses for address book or shipment tracking."},{"type":"null","description":"Optional serialized JSON array of addresses for address book or shipment tracking."}],"description":"Optional serialized JSON array of addresses for address book or shipment tracking."}},"required":["name"],"description":"Schema for updating an existing customer profile (ai_shop_customer_profiles) by id. At minimum, name must be supplied. Optional updated fields include preferences, dob, gender, locale, shipping_addresses. Used in API PUT/PATCH for profile management."},"IAiShopSellerProfile.IRequest":{"type":"object","properties":{"seller_id":{"type":"string","format":"uuid","description":"Optional filter or search by unique seller ID."},"contact_name":{"type":"string","description":"Optional filter to match (fuzzy or exact) contact name."},"contact_email":{"type":"string","description":"Optional filter for searching by seller contact email address."},"company_phone":{"type":"string","description":"Optional search for profiles with a matching or partial business phone (contact number)."},"address":{"type":"string","description":"Optional search/filter by address string, for seller region or geolocation based queries."},"created_at__gt":{"type":"string","format":"date-time","description":"Optional filter for profiles created after this timestamp."},"created_at__lt":{"type":"string","format":"date-time","description":"Optional filter for profiles created before this timestamp."},"kyc_documents":{"type":"string","description":"Optional filter for profiles with a specific KYC document string present (advanced filtering only)."}},"required":[],"description":"Request filter/search schema for querying seller profiles (ai_shop_seller_profiles). All fields are optional. Used for PATCH/search APIs to support admin onboarding review, compliance audit, or business region filtering. All filtering is on atomic fields present in the Prisma model."},"IPageAiShopSellerProfile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the returned page of seller profiles."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopSellerProfile"},"description":"Array of seller profile objects (IAiShopSellerProfile) for the page."}},"required":["pagination","data"],"description":"Paginated results for seller profiles as defined by IPage<T> convention. The data array contains seller profile objects, and pagination holds the standard pagination metadata. Used in admin compliance, onboarding review, and directory pages."},"IAiShopSellerProfile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique seller profile identity. ai_shop_seller_profiles.id."},"seller_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_sellers.id, 1:1 mapping. The seller for this profile."},"contact_name":{"type":"string","description":"Required seller business/legal contact name. Used for onboarding, compliance, and admin display."},"contact_email":{"type":"string","description":"Required business contact email for the seller (may differ from login)."},"company_phone":{"oneOf":[{"type":"string","description":"Optional business phone for compliance, shipping, or customer support."},{"type":"null","description":"Optional business phone for compliance, shipping, or customer support."}],"description":"Optional business phone for compliance, shipping, or customer support."},"address":{"oneOf":[{"type":"string","description":"Optional legal or operational address for the seller profile."},{"type":"null","description":"Optional legal or operational address for the seller profile."}],"description":"Optional legal or operational address for the seller profile."},"kyc_documents":{"oneOf":[{"type":"string","description":"Optional serialized JSON list of attached KYC/ID files or document URIs."},{"type":"null","description":"Optional serialized JSON list of attached KYC/ID files or document URIs."}],"description":"Optional serialized JSON list of attached KYC/ID files or document URIs."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the seller profile was created (ISO8601 UTC datetime)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (for profile edit/compliance tracking)."}},"required":["id","seller_id","contact_name","contact_email","created_at","updated_at"],"description":"Seller business/profile entity as defined by ai_shop_seller_profiles. Contains business contact details, KYC documents, address, and audit fields. 1:1 to ai_shop_sellers. Used for onboarding, compliance, and admin operational review. Optional fields may be null but required contact fields are always mandatory."},"IAiShopSellerProfile.ICreate":{"type":"object","properties":{"seller_id":{"type":"string","format":"uuid","description":"FK to ai_shop_sellers.id, required. The seller entity for which the new profile is being registered."},"contact_name":{"type":"string","description":"Required legal/business contact name for compliance/audit."},"contact_email":{"type":"string","description":"Required contact/business email for onboarding, support, or compliance."},"company_phone":{"oneOf":[{"type":"string","description":"Optional business phone number for all regulatory, shipping, or contact logic."},{"type":"null","description":"Optional business phone number for all regulatory, shipping, or contact logic."}],"description":"Optional business phone number for all regulatory, shipping, or contact logic."},"address":{"oneOf":[{"type":"string","description":"Optional registered address for the seller (legal, operational, or shipping address)."},{"type":"null","description":"Optional registered address for the seller (legal, operational, or shipping address)."}],"description":"Optional registered address for the seller (legal, operational, or shipping address)."},"kyc_documents":{"oneOf":[{"type":"string","description":"Optional serialized JSON or URI for KYC/ID documents as needed for compliance."},{"type":"null","description":"Optional serialized JSON or URI for KYC/ID documents as needed for compliance."}],"description":"Optional serialized JSON or URI for KYC/ID documents as needed for compliance."}},"required":["seller_id","contact_name","contact_email"],"description":"Schema for registering a new seller profile in ai_shop_seller_profiles. Required: seller_id, contact_name, contact_email. Optional: company_phone, address, kyc_documents. Used for seller onboarding or admin-defined registration flows."},"IAiShopSellerProfile.IUpdate":{"type":"object","properties":{"contact_name":{"type":"string","description":"Edit/legal contact name of the seller profile. Cannot be null."},"contact_email":{"type":"string","description":"Edit/email address for business/operational contact. Cannot be null."},"company_phone":{"oneOf":[{"type":"string","description":"Optional new/edited business contact phone."},{"type":"null","description":"Optional new/edited business contact phone."}],"description":"Optional new/edited business contact phone."},"address":{"oneOf":[{"type":"string","description":"Optional new/edited business/legal address."},{"type":"null","description":"Optional new/edited business/legal address."}],"description":"Optional new/edited business/legal address."},"kyc_documents":{"oneOf":[{"type":"string","description":"Optional new KYC/ID documentation, serialized or URI."},{"type":"null","description":"Optional new KYC/ID documentation, serialized or URI."}],"description":"Optional new KYC/ID documentation, serialized or URI."}},"required":["contact_name","contact_email"],"description":"Schema for editing/updating a seller profile (ai_shop_seller_profiles) by id. Required: contact_name, contact_email. Optional: company_phone, address, kyc_documents. Used for admin/compliance edit flows."},"IAiShopAdminProfile.IRequest":{"type":"object","properties":{"admin_id":{"type":"string","format":"uuid","description":"Optional filter by unique admin id (UUID)."},"duty_region":{"type":"string","description":"Optional filter for compliance duty region. Fuzzy or exact."},"ip_allowlist":{"type":"string","description":"Optional filter for IP allowlist values or search for presence of a subnet."},"contact_email":{"type":"string","description":"Optional filter or exact match on admin profile contact email."},"created_at__gt":{"type":"string","format":"date-time","description":"Optional filter for retrieving admin profiles created after a specific timestamp."},"created_at__lt":{"type":"string","format":"date-time","description":"Optional filter for admin profiles created before a specific timestamp."}},"required":[],"description":"Request schema for searching/filtering admin profiles. All fields are optional for PATCH/list endpoints. Used for compliance, regional management, or admin audit dashboards. Maps directly to ai_shop_admin_profiles atomic fields."},"IPageAiShopAdminProfile":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for admin profile page."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopAdminProfile"},"description":"Array of admin profile objects for the requested page."}},"required":["pagination","data"],"description":"Paginated container for admin profiles following standard IPage<T> convention. Holds IPage.IPagination and data array of IAiShopAdminProfile objects. Used for admin audit dashboards, compliance tools, or advanced admin profile search."},"IAiShopAdminProfile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the admin profile (ai_shop_admin_profiles.id)."},"admin_id":{"type":"string","format":"uuid","description":"Foreign key to ai_shop_admins.id, 1:1 mapping to admin user."},"duty_region":{"oneOf":[{"type":"string","description":"Optional compliance jurisdiction/region assigned to this admin. Used for regulatory scope, localization logic, or vertical market boundaries."},{"type":"null","description":"Optional compliance jurisdiction/region assigned to this admin. Used for regulatory scope, localization logic, or vertical market boundaries."}],"description":"Optional compliance jurisdiction/region assigned to this admin. Used for regulatory scope, localization logic, or vertical market boundaries."},"ip_allowlist":{"oneOf":[{"type":"string","description":"Optional serialized JSON array or single CIDR/IP(s) representing network allowlist for admin console access."},{"type":"null","description":"Optional serialized JSON array or single CIDR/IP(s) representing network allowlist for admin console access."}],"description":"Optional serialized JSON array or single CIDR/IP(s) representing network allowlist for admin console access."},"contact_email":{"oneOf":[{"type":"string","description":"Optional backup/escalation or alternate contact email for admin use or compliance escalation."},{"type":"null","description":"Optional backup/escalation or alternate contact email for admin use or compliance escalation."}],"description":"Optional backup/escalation or alternate contact email for admin use or compliance escalation."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when profile was created (ISO8601 UTC datetime)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when profile was last changed for audit."}},"required":["id","admin_id","created_at","updated_at"],"description":"Admin user profile entity as described by ai_shop_admin_profiles. Contains admin compliance jurisdiction, IP whitelisting (for console or sensitive operations), escalation email, and system audit timestamps. Used for supporting compliance division of roles, audit logging, and high security admin flows."},"IAiShopAdminProfile.ICreate":{"type":"object","properties":{"admin_id":{"type":"string","format":"uuid","description":"The unique identifier (UUID) referencing the admin user for this profile.\n\nReferences ai_shop_admins.id for strict 1:1 relationship. Required when creating an admin profile. See Prisma schema ai_shop_admin_profiles."},"duty_region":{"oneOf":[{"type":"string","description":"Optional string representing the compliance jurisdiction or regulatory assignment for the admin.\n\nMay be blank or null depending on business configuration. See ai_shop_admin_profiles.duty_region."},{"type":"null"}],"description":"Optional string representing the compliance jurisdiction or regulatory assignment for the admin.\n\nMay be blank or null depending on business configuration. See ai_shop_admin_profiles.duty_region."},"ip_allowlist":{"oneOf":[{"type":"string","description":"Serialized JSON array or text of IP addresses or CIDR notation ranges (if present for this admin profile).\n\nField aligns with ai_shop_admin_profiles.ip_allowlist. Null indicates no restriction for this admin."},{"type":"null"}],"description":"Serialized JSON array or text of IP addresses or CIDR notation ranges (if present for this admin profile).\n\nField aligns with ai_shop_admin_profiles.ip_allowlist. Null indicates no restriction for this admin."},"contact_email":{"oneOf":[{"type":"string","format":"email","description":"Optional backup or escalation email for admin-specific notifications, escalation, or password recovery.\n\nCaptured as ai_shop_admin_profiles.contact_email. May be null."},{"type":"null"}],"description":"Optional backup or escalation email for admin-specific notifications, escalation, or password recovery.\n\nCaptured as ai_shop_admin_profiles.contact_email. May be null."}},"required":["admin_id"],"description":"Payload for creating an admin profile, as defined in ai_shop_admin_profiles (see Actors Prisma schema).\n\nProvides fields for jurisdiction, IP allowlisting, and escalation communication for admins. Enforces 1:1 relation with ai_shop_admins by unique foreign key."},"IAiShopAdminProfile.IUpdate":{"type":"object","properties":{"duty_region":{"oneOf":[{"type":"string","description":"Optionally update compliance jurisdiction for this admin profile. Null to clear."},{"type":"null"}],"description":"Optionally update compliance jurisdiction for this admin profile. Null to clear."},"ip_allowlist":{"oneOf":[{"type":"string","description":"Optionally update the list of allowed IPs or CIDR ranges (serialized string). Null clears allowlist."},{"type":"null"}],"description":"Optionally update the list of allowed IPs or CIDR ranges (serialized string). Null clears allowlist."},"contact_email":{"oneOf":[{"type":"string","format":"email","description":"Optionally update contact or escalation email for this admin profile. Null clears email."},{"type":"null"}],"description":"Optionally update contact or escalation email for this admin profile. Null clears email."}},"required":[],"description":"Update structure for admin profile fields (ai_shop_admin_profiles). Only fields present in the schema can be changed: duty_region, ip_allowlist, contact_email, all optional for partial update."},"IAiShopProduct.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","description":"Page number for paginated products listing.\n\nOptional; see standard IPage.IRequest definition."},{"type":"null"}],"description":"Page number for paginated products listing.\n\nOptional; see standard IPage.IRequest definition."},"limit":{"oneOf":[{"type":"number","description":"Number of records per page. Default enforced by service config; follows standard IPage.IRequest."},{"type":"null"}],"description":"Number of records per page. Default enforced by service config; follows standard IPage.IRequest."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by belonged seller (referenced as ai_shop_seller_id in ai_shop_products)."},{"type":"null"}],"description":"Filter by belonged seller (referenced as ai_shop_seller_id in ai_shop_products)."},"category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter products by category. Must match ai_shop_categories.id."},{"type":"null"}],"description":"Filter products by category. Must match ai_shop_categories.id."},"status":{"oneOf":[{"type":"string","description":"Business status filter for product. Acceptable values are those present in product status enum: e.g., 'active','inactive','draft','suspended','deleted'. Refer to ai_shop_products.status."},{"type":"null"}],"description":"Business status filter for product. Acceptable values are those present in product status enum: e.g., 'active','inactive','draft','suspended','deleted'. Refer to ai_shop_products.status."},"keyword":{"oneOf":[{"type":"string","description":"Keyword search (fuzzy/partial). Applied to product name and description using indexed text search (trigram, etc.)."},{"type":"null"}],"description":"Keyword search (fuzzy/partial). Applied to product name and description using indexed text search (trigram, etc.)."},"sort":{"oneOf":[{"type":"string","description":"Sort expression for product listing (e.g., '-created_at', '+name'). Must be composed of existing fields in the schema."},{"type":"null"}],"description":"Sort expression for product listing (e.g., '-created_at', '+name'). Must be composed of existing fields in the schema."}},"required":[],"description":"Request criteria for advanced search/filtering of ai_shop_products records. Supports pagination (page/limit), seller/category filtering, status filtering, text search (keyword), and schema-based sorting. Aligned to the requirements in IPage<IShopProduct> flows."},"IPageAiShopProduct":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProduct"},"description":"Array of product entities returned for this page."}},"required":["pagination","data"],"description":"Paginated response for searched/listed AiShop products, using standard IPage structure.\n\nData is a page of IAiShopProduct objects; pagination metadata includes current/total/limit/page."},"IAiShopProduct":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for ai_shop_products entity. Uniquely identifies a product row."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Foreign key reference to the seller that owns this product.\n\nLinks to ai_shop_sellers.id; required for business accountability and role separation."},"category_id":{"type":"string","format":"uuid","description":"Foreign key connecting product to its assigned category.\n\nCorresponds to ai_shop_categories.id. Enables structured product taxonomy."},"name":{"type":"string","description":"Product title or display name, as registered by seller or admin/editor.\n\nRepresents central detail for product listings and search. Enforced for normalization."},"description":{"type":"string","description":"Long-form text or markup describing the product. Allows HTML/Markdown; used in search for AI/content analysis."},"status":{"type":"string","description":"Product status as a business state—should use controlled vocabulary matching schema/enum: e.g., 'active','inactive','draft','suspended','deleted'."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601, UTC with timezone) for product creation. See ai_shop_products.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (ISO 8601, UTC with timezone). See ai_shop_products.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-deletion timestamp (nullable). Non-null indicates product is marked as deleted in business logic/audit."},{"type":"null"}],"description":"Soft-deletion timestamp (nullable). Non-null indicates product is marked as deleted in business logic/audit."}},"required":["id","ai_shop_seller_id","category_id","name","description","status","created_at","updated_at"],"description":"Entity/detailed data for ai_shop_products row. All fields present in normalized Prisma schema; includes all required for reporting, audit, and compliance. Includes soft-delete audit if deleted_at is set."},"IAiShopProducts.ICreate":{"type":"object","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Foreign key referencing seller creating/owning the product. Must match ai_shop_sellers.id."},"category_id":{"type":"string","format":"uuid","description":"FK to category; must match ai_shop_categories.id."},"name":{"type":"string","description":"Product title to be registered.   Must be unique within seller (see unique composite on ai_shop_products)."},"description":{"type":"string","description":"Content/long description field for the product. Required."},"status":{"type":"string","description":"Product business status ('active','inactive','draft','suspended','deleted') per system workflow."}},"required":["ai_shop_seller_id","category_id","name","description","status"],"description":"Payload for creating a new AI Shop product (ai_shop_products row).\n\nMaps strictly to required columns in the table; ID/timestamps managed by DB/application layer."},"IAiShopProducts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for ai_shop_products entity."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK reference to seller. Maps to ai_shop_sellers.id."},"category_id":{"type":"string","format":"uuid","description":"FK to product category. Maps to ai_shop_categories.id."},"name":{"type":"string","description":"Product display name/title."},"description":{"type":"string","description":"Product content (long-form/descriptive text)."},"status":{"type":"string","description":"Status business logic field (controlled vocabulary)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601, UTC+TZ)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO 8601, UTC+TZ)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable soft-delete timestamp; non-null indicates logically deleted product."},{"type":"null"}],"description":"Nullable soft-delete timestamp; non-null indicates logically deleted product."}},"required":["id","ai_shop_seller_id","category_id","name","description","status","created_at","updated_at"],"description":"AI Shop product resource as returned in detail/search flows.\n\nMatches ai_shop_products Prisma structure, includes all fields for audit/compliance reporting as well as UI display. Soft-deletion handled by non-null deleted_at."},"IAiShopProducts.IUpdate":{"type":"object","properties":{"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Change owner/seller FK (rare, admin only). Optional for partial update."},{"type":"null"}],"description":"Change owner/seller FK (rare, admin only). Optional for partial update."},"category_id":{"oneOf":[{"type":"string","format":"uuid","description":"Change product category (FK to ai_shop_categories). Optional/nullable on update."},{"type":"null"}],"description":"Change product category (FK to ai_shop_categories). Optional/nullable on update."},"name":{"oneOf":[{"type":"string","description":"Update product name/title. Optional/nullable for partial update; must preserve seller-unique constraint."},{"type":"null"}],"description":"Update product name/title. Optional/nullable for partial update; must preserve seller-unique constraint."},"description":{"oneOf":[{"type":"string","description":"Update product content/long description. Field is optional on update."},{"type":"null"}],"description":"Update product content/long description. Field is optional on update."},"status":{"oneOf":[{"type":"string","description":"Update product business state (must be one of allowed statuses)."},{"type":"null"}],"description":"Update product business state (must be one of allowed statuses)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set (ISO 8601) to soft-delete the product. If non-null, product is logically deleted in business flow."},{"type":"null"}],"description":"Set (ISO 8601) to soft-delete the product. If non-null, product is logically deleted in business flow."}},"required":[],"description":"Structure for updating product details (PATCH/PUT flows to ai_shop_products). Only includes fields that exist in schema and are updatable in real database rows. If omitted, existing value is preserved."},"IPageAiShopProductVariants.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","description":"Page number for paginated variant listing (optional)."},{"type":"null"}],"description":"Page number for paginated variant listing (optional)."},"limit":{"oneOf":[{"type":"number","description":"Maximum number of records per page (optional; default by API setting)."},{"type":"null"}],"description":"Maximum number of records per page (optional; default by API setting)."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter to variants belonging to this product only."},{"type":"null"}],"description":"Filter to variants belonging to this product only."},"sku":{"oneOf":[{"type":"string","description":"Exact or partial SKU match for filtering variants."},{"type":"null"}],"description":"Exact or partial SKU match for filtering variants."},"option_combo":{"oneOf":[{"type":"string","description":"Exact or partial option_combo match for variant filtering."},{"type":"null"}],"description":"Exact or partial option_combo match for variant filtering."},"is_active":{"oneOf":[{"type":"boolean","description":"Restrict listed variants to only active/inactive (sellable) status. Null lists all."},{"type":"null"}],"description":"Restrict listed variants to only active/inactive (sellable) status. Null lists all."}},"required":[],"description":"Request/search/query structure for paginated batch listing of product variants (ai_shop_product_variants).\n\nMatches search/filter/sort conventions from IPage<IEntity> pattern; all property names exist in schema."},"IPageAiShopProductVariants":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProductVariants"},"description":"Page array of product variant entities."}},"required":["pagination","data"],"description":"Paginated result object for ai_shop_product_variants listings; returns structured page and array of IAiShopProductVariants resources."},"IAiShopProductVariants":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key/id column of ai_shop_product_variants; unique for row."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"FK reference to parent product (ai_shop_products.id). Each variant belongs to exactly one parent product."},"sku":{"type":"string","description":"Stock-Keeping Unit code for this variant (unique per product)."},"option_combo":{"type":"string","description":"String encoding specific option set for this variant (e.g., 'Color:Red;Size:L'). Ensures uniqueness when combined with product."},"barcode":{"oneOf":[{"type":"string","description":"Barcode/EAN/UPC for supporting inventory/logistics tracking. Optional field, may be null."},{"type":"null"}],"description":"Barcode/EAN/UPC for supporting inventory/logistics tracking. Optional field, may be null."},"is_active":{"type":"boolean","description":"Boolean flag indicating whether this variant is currently available for sale (true) or not sellable (false)."}},"required":["id","ai_shop_product_id","sku","option_combo","is_active"],"description":"Product variant atom (ai_shop_product_variants row), matching all fields in normalized schema. Used for product option combos, stock tracking, business analytics, and selection in UI/catalog. Partial descriptions per Prisma fields."},"IAiShopProductVariants.ICreate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"Parent product FK for new variant. Must be valid PK for ai_shop_products."},"sku":{"type":"string","description":"SKU label for this variant, unique per product."},"option_combo":{"type":"string","description":"Serialized option combination. Example: 'Color:Red;Size:L'."},"barcode":{"oneOf":[{"type":"string","description":"Optional barcode string (EAN/UPC as appropriate)."},{"type":"null"}],"description":"Optional barcode string (EAN/UPC as appropriate)."},"is_active":{"type":"boolean","description":"Initial active/sellable flag for new variant."}},"required":["ai_shop_product_id","sku","option_combo","is_active"],"description":"Creation schema for adding a product variant atomically to ai_shop_product_variants. All FK and unique constraints must be satisfied on insert."},"IAiShopProductVariants.IUpdate":{"type":"object","description":"모든 필드는 ai_shop_product_variants 테이블의 실제 컬럼을 반영합니다.\n\n제품 옵션(variant)을 부분/전체 수정할 때 사용합니다. 필드는 다음과 같습니다:\n- ai_shop_product_id: 부모 상품의 UUID (필수)\n- sku: 옵션 결합을 식별하는 고유 문자열 (필수)\n- option_combo: 예시 \"Color:Red;Size:L\" (필수)\n- barcode: 바코드(선택)\n- is_active: 판매 가능 여부 (필수)\n\n업데이트 시, 존재하지 않는 값은 에러가 발생합니다. 모든 property는 실제 Prisma DB 컬럼 설명을 그대로 따릅니다.","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"부모 상품(UUID)입니다. ai_shop_products.id를 참조하며, 어떤 상품의 옵션조합인지를 명확히 합니다.\n\nPrisma 스키마: ai_shop_product_variants.ai_shop_product_id\n\n반드시 존재하는 상품 UUID이어야 하며, 변경 시 해당 옵션이 다른 상품에 귀속될 수 있습니다."},"sku":{"type":"string","description":"이 옵션의 재고관리 고유 식별자(SKU). 반드시 제품+옵션조합별로 고유합니다.\n\n예: 'SKU-BAG-RED-L'\n\nPrisma 스키마: ai_shop_product_variants.sku\n\nSKU 중복 시 인서트/업데이트 에러가 발생합니다."},"option_combo":{"type":"string","description":"옵션 결합을 나타내는 원자적 string. 예: 'Color:Red;Size:L'.\n\n제품 옵션의 조합(색상·사이즈 등)을 문자열로 직렬화한 값입니다.\n\nPrisma 스키마: ai_shop_product_variants.option_combo\n\n변경 시 해당 옵션이 새로운 옵션조합을 대표하게 됩니다."},"barcode":{"oneOf":[{"type":"string","description":"제품 옵션 조합 Barcode(EAN/UPC/QR 등). 실제 바코드값 문자열. Null 허용.\n\nPrisma 스키마: ai_shop_product_variants.barcode\n\n일부 옵션/제품만 입력될 수 있습니다."},{"type":"null","description":"제품 옵션 조합 Barcode(EAN/UPC/QR 등). 실제 바코드값 문자열. Null 허용.\n\nPrisma 스키마: ai_shop_product_variants.barcode\n\n일부 옵션/제품만 입력될 수 있습니다."}],"description":"제품 옵션 조합 Barcode(EAN/UPC/QR 등). 실제 바코드값 문자열. Null 허용.\n\nPrisma 스키마: ai_shop_product_variants.barcode\n\n일부 옵션/제품만 입력될 수 있습니다."},"is_active":{"type":"boolean","description":"판매 가능 여부를 나타내는 boolean 값. true면 판매·노출 가능, false면 숨김/판매 불가.\n\nPrisma 스키마: ai_shop_product_variants.is_active\n\n업데이트 시 품절처리/숨김처리 용도로 쓰입니다."}},"required":["ai_shop_product_id","sku","option_combo","is_active"]},"IPageAiShopInventories.IRequest":{"type":"object","description":"ai_shop_inventories(재고) 목록 조회 요청시 검색/필터/정렬/페이지네이션 정보.\n\nPrisma 스키마 테이블 컬럼 기반으로 작성되며, 주요 filter 필드는 다음을 포함합니다.\n- ai_shop_product_variant_id: 특정 상품옵션(SKU) 기준 재고 조회\n- ai_shop_seller_id: 판매자별 재고 검색\n- stock: 재고 수량 조건\n- restock_threshold: 재고 경고 임계치\n- turnover_rate: 회전율\n- created_at, updated_at, deleted_at 등 시간범위\n- page, limit: 페이지/사이즈\n\n해당 컬럼들이 실제 Prisma DB 테이블과 1:1로 맵핑되어야 함. 필요에 따라 복수 조건/필터 사용 가능. deleted_at(soft delete)이 null인 값만 검색(default)하거나 전체 포함 가능.","properties":{"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"특정 상품옵션(variant)의 UUID. SKU 단위 재고 필터."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 소유한 판매자 UUID (ai_shop_sellers.id)."},"stock":{"type":"integer","description":"재고 수량. =, >, < 등을 활용해 필터링한다."},"restock_threshold":{"type":"integer","description":"리오더/재입고 경고 임계값. 임계치 이하 재고만 별도 필터링 가능."},"turnover_rate":{"type":"number","format":"double","description":"재고 회전율. float/실수값. 본 값 기준으로도 검색 가능."},"created_at":{"type":"string","format":"date-time","description":"생성일 검색(ISO8601, range 필터용)."},"updated_at":{"type":"string","format":"date-time","description":"최근 변경일 검색(ISO8601, range 필터용)."},"deleted_at":{"type":"string","format":"date-time","description":"삭제/소프트 삭제 기준 검색(특정일 이후 삭제 등)."}},"required":[]},"IPageAiShopInventories":{"type":"object","description":"재고 정보(ai_shop_inventories) 페이징 응답 컨테이너.\n\ndata[]는 'IAiShopInventories' 객체 리스트.\n\npagination은 기본/공통 페이징 정보(IPage.IPagination)를 포함합니다. (페이징 구조 설명 참고)\n\nPrisma DB comment와 admin BIZ 적용: 필터링된 결과의 재고 전체 집합을 페이지별로 제공합니다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInventories"},"description":"해당 페이지의 ai_shop_inventories 전체 레코드 리스트."}},"required":["pagination","data"]},"IAiShopInventories":{"type":"object","description":"상품옵션 별 재고 정보 테이블(ai_shop_inventories)의 모든 컬럼.\n\n재고관리는 1:1로 상품옵션(variant)에 매핑됨. 실제 Prisma DB 컬럼 전체를 빠짐없이 정의해야 함.\n- id: 재고PK(UUID)\n- ai_shop_product_variant_id: 어떤 옵션(SKUUID)에 귀속되는지 (1:1 unique)\n- ai_shop_seller_id: 재고를 관리하는 판매자ID(UUID)\n- stock: 현재고 INT\n- restock_threshold: 재고경고치 INT\n- turnover_rate: 회전율(float, null허용, optional)\n- created_at: 생성일\n- updated_at: 최근변경일\n- deleted_at: 소프트삭제 타임스탬프, null인 경우 미삭제\n\n관계: 각각 상품옵션/판매자를 FK로 참조 (Prisma 테이블 정의 필수 참고)\n\n이 스키마는 ai_shop_inventories 테이블 명세에 따라 위험/중복 없이 컬럼을 정의합니다.","properties":{"id":{"type":"string","format":"uuid","description":"AI Shop 재고 관리 PK(UUID).\n\n실제 Prisma 스키마: ai_shop_inventories.id\n유일 식별자입니다."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"해당 재고가 소속된 상품옵션(variant)의 PK(UUID).\n\n실제 Prisma: ai_shop_inventories.ai_shop_product_variant_id\n상품+옵션(SKU)별 매칭에 1:1 unique constraint."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 관리하는 담당 판매자 UUID\n\n실제 Prisma: ai_shop_inventories.ai_shop_seller_id\n판매자별 재고 개별 관리가 가능합니다."},"stock":{"type":"integer","description":"SKU기준 현재 상품 재고 수량(int).\n\n실제 Prisma: ai_shop_inventories.stock\n재고 수량의 증감은 외부 API나 admin화면에서만 처리."},"restock_threshold":{"type":"integer","description":"재고 경고 임계치(int).\n\n실제 Prisma: ai_shop_inventories.restock_threshold\n이 값 이하로 떨어지면 자동 알림·보고서가 트리거됨."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},{"type":"null","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."}],"description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},"created_at":{"type":"string","format":"date-time","description":"재고 정보 생성 타임스탬프.\n\n실제 Prisma: ai_shop_inventories.created_at\nDB 저장시 자동 세팅되는 UTC ISO 8601."},"updated_at":{"type":"string","format":"date-time","description":"재고정보 최근 수정 일시(UTC).\n\n실제 Prisma: ai_shop_inventories.updated_at\n일반적으로 재고 변경시마다 자동 갱신."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."},{"type":"null","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}],"description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}},"required":["id","ai_shop_product_variant_id","ai_shop_seller_id","stock","restock_threshold","created_at","updated_at"]},"IAiShopInventories.ICreate":{"type":"object","description":"재고정보 신규 생성용 DTO.\n\n상품옵션별 재고(variant_id) 및 판매자, 초기재고, 경고 임계치, 선택적 회전율을 필수·선택구성으로 받음. Prisma 컬럼과 완벽히 1:1입니다.\n\n- ai_shop_product_variant_id (필수)\n- ai_shop_seller_id (필수)\n- stock (초기재고, 필수)\n- restock_threshold (필수)\n- turnover_rate (선택/nullable)\n- created_at/updated_at (관리용, 시스템에 자동부여시 optional)\n\n모든 property는 실 Prisma 컬럼 기준 기술·명명합니다.","properties":{"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"재고 상품옵션(variant) UUID, FK. 신규 등록시 반드시 지정."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 소유/관리하는 판매자 UUID."},"stock":{"type":"integer","description":"초기 재고 수량(INT). 0이상 정수."},"restock_threshold":{"type":"integer","description":"재고경고에 사용될 임계치(INT)."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"재고 회전율(float, nullable). 미입력시 null/0으로 간주."},{"type":"null","format":"double","description":"재고 회전율(float, nullable). 미입력시 null/0으로 간주."}],"description":"재고 회전율(float, nullable). 미입력시 null/0으로 간주."},"created_at":{"type":"string","format":"date-time","description":"생성일시 타임스탬프(UTC ISO8601), 시스템에서 자동 입력or직접 기입."},"updated_at":{"type":"string","format":"date-time","description":"최초 등록시 업데이트일시. 자동입력(혹은 미입력시 생략/자동기입)."}},"required":["ai_shop_product_variant_id","ai_shop_seller_id","stock","restock_threshold","created_at"]},"IAiShopInventories.IUpdate":{"type":"object","description":"재고정보(ai_shop_inventories) 갱신/변경시 사용하는 DTO.\n\nID(PK)를 기준으로 수량, 경고치, 회전율, soft delete, 변경일자 등을 업데이트 할 때 사용되며, Prisma스키마 컬럼에 대응되는 속성만을 가짐.\n\n- stock (상품 재고값 갱신)\n- restock_threshold (경고 임계값 갱신)\n- turnover_rate (회전율/분석값 변경, null 허용)\n- deleted_at (soft delete 진행 시 현재 timestamp)\n- updated_at (갱신일자 mandatory)\n\n모든 property는 Prisma 정의 기반 그대로 use하며, 불필요한/추상 필드 없음.","properties":{"stock":{"type":"integer","description":"재고 수량 변경시 입력, INT. 0미만 금지."},"restock_threshold":{"type":"integer","description":"경고 임계값 조정시 사용, INT."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"회전율 실값(분석·AI용). null 연산 가능."},{"type":"null","format":"double","description":"회전율 실값(분석·AI용). null 연산 가능."}],"description":"회전율 실값(분석·AI용). null 연산 가능."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"soft delete 타임스탬프. delete 시 현재시각. 미삭제시 null."},{"type":"null","format":"date-time","description":"soft delete 타임스탬프. delete 시 현재시각. 미삭제시 null."}],"description":"soft delete 타임스탬프. delete 시 현재시각. 미삭제시 null."},"updated_at":{"type":"string","format":"date-time","description":"최신 변경시각. 반드시 현재시간(UTC)으로 기입."}},"required":["updated_at"]},"aiShopInventories":{"type":"object","description":"상품옵션 별 재고 정보 테이블(ai_shop_inventories)의 모든 컬럼.\n\n재고관리는 1:1로 상품옵션(variant)에 매핑됨. 실제 Prisma DB 컬럼 전체를 빠짐없이 정의해야 함.\n- id: 재고PK(UUID)\n- ai_shop_product_variant_id: 어떤 옵션(SKUUID)에 귀속되는지 (1:1 unique)\n- ai_shop_seller_id: 재고를 관리하는 판매자ID(UUID)\n- stock: 현재고 INT\n- restock_threshold: 재고경고치 INT\n- turnover_rate: 회전율(float, null허용, optional)\n- created_at: 생성일\n- updated_at: 최근변경일\n- deleted_at: 소프트삭제 타임스탬프, null인 경우 미삭제\n\n관계: 각각 상품옵션/판매자를 FK로 참조 (Prisma 테이블 정의 필수 참고)\n\n이 스키마는 ai_shop_inventories 테이블 명세에 따라 위험/중복 없이 컬럼을 정의합니다.","properties":{"id":{"type":"string","format":"uuid","description":"AI Shop 재고 관리 PK(UUID).\n\n실제 Prisma 스키마: ai_shop_inventories.id\n유일 식별자입니다."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"해당 재고가 소속된 상품옵션(variant)의 PK(UUID).\n\n실제 Prisma: ai_shop_inventories.ai_shop_product_variant_id\n상품+옵션(SKU)별 매칭에 1:1 unique constraint."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"재고를 관리하는 담당 판매자 UUID\n\n실제 Prisma: ai_shop_inventories.ai_shop_seller_id\n판매자별 재고 개별 관리가 가능합니다."},"stock":{"type":"integer","description":"SKU기준 현재 상품 재고 수량(int).\n\n실제 Prisma: ai_shop_inventories.stock\n재고 수량의 증감은 외부 API나 admin화면에서만 처리."},"restock_threshold":{"type":"integer","description":"재고 경고 임계치(int).\n\n실제 Prisma: ai_shop_inventories.restock_threshold\n이 값 이하로 떨어지면 자동 알림·보고서가 트리거됨."},"turnover_rate":{"oneOf":[{"type":"number","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},{"type":"null","format":"double","description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."}],"description":"재고회전율(float, null허용).\n\n실제 Prisma: ai_shop_inventories.turnover_rate\n최근 X일간 판매수치 기반(분석에 활용), null이면 측정 정보 없음."},"created_at":{"type":"string","format":"date-time","description":"재고 정보 생성 타임스탬프.\n\n실제 Prisma: ai_shop_inventories.created_at\nDB 저장시 자동 세팅되는 UTC ISO 8601."},"updated_at":{"type":"string","format":"date-time","description":"재고정보 최근 수정 일시(UTC).\n\n실제 Prisma: ai_shop_inventories.updated_at\n일반적으로 재고 변경시마다 자동 갱신."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."},{"type":"null","format":"date-time","description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}],"description":"소프트삭제 타임스탬프(null이면 재고 존재, 일자 입력시 삭제된 상태로 간주).\n\n실제 Prisma: ai_shop_inventories.deleted_at\n삭제 이벤트 발생시 current timestamp, 미삭제시는 null."}},"required":["id","ai_shop_product_variant_id","ai_shop_seller_id","stock","restock_threshold","created_at","updated_at"]},"aiShopProductSnapshots.IRequest":{"type":"object","description":"상품 스냅샷(버전/히스토리) 조회용 페이징/필터/정렬 조건.\n\n주요 필드(모두 Prisma ai_shop_product_snapshots 테이블 컬럼):\n- ai_shop_product_id: 특정 상품 기준 버전체크\n- name, status: 버전이름/상태값 검색/필터\n- created_at, updated_at: 기간검색\n- page, limit: 페이징\n\n해당 조건들은 상품 편집이력 및 버전타임라인 UI 등에서 활용합니다.","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"히스토리를 조회할 상품레코드 ai_shop_products의 PK(UUID)"},"name":{"type":"string","description":"스냅샷(버전) 당시 상품 이름 기준 부분 일치/검색"},"status":{"type":"string","description":"버전 당시에 저장되었던 상품상태 필터(active 등 ENUM 존재보장 안함)"},"created_at":{"type":"string","format":"date-time","description":"스냅샷 생성시점 range검색"},"updated_at":{"type":"string","format":"date-time","description":"스냅샷 최종 갱신시점 range검색"},"page":{"type":"integer","description":"조회 페이지 번호(1-base)"},"limit":{"type":"integer","description":"한 페이지 최대 레코드 수"}},"required":[]},"IPageAiShopProductSnapshots":{"type":"object","description":"상품 버전/스냅샷(ai_shop_product_snapshots) 목록의 표준 페이징 컨테이너. data([])는 각각 aiShopProductSnapshots 객체이며, pagination은 표준형식(IPage.IPagination)이어야 함.\n\n관리/감사/버전타임라인 등에서 히스토리 결과표시용.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopProductSnapshots"},"description":"해당 페이지 전체 ai_shop_product_snapshots 리스트"}},"required":["pagination","data"]},"aiShopProductSnapshots":{"type":"object","description":"상품 버전 스냅샷/히스토리(ai_shop_product_snapshots)의 단일 데이터. 실 테이블 컬럼 1:1 매핑:\n- id(PK, UUID)\n- ai_shop_product_id(UUID): 어떤 상품의 스냅샷인지 명확히\n- name: 당시상품이름 (string)\n- description: 당시 상품상세\n- category_id: 카테고리(UUID)\n- status: 당시 상태 문자열값\n- created_at: 버전 생성일시\n- updated_at: 마지막 버전 갱신일자\n\n불필요한/추상 필드 없이 실제 Prisma 테이블 컬럼 기준 설명만 포함","properties":{"id":{"type":"string","format":"uuid","description":"고유 스냅샷 버전ID(PK UUID), ai_shop_product_snapshots.id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"어느 상품의 스냅샷인지 명시(PK of ai_shop_products)"},"name":{"type":"string","description":"스냅샷 시점 상품명"},"description":{"type":"string","description":"스냅샷 시점 상품설명"},"category_id":{"type":"string","format":"uuid","description":"해당 스냅샷 시점의 카테고리(UUID, FK)"},"status":{"type":"string","description":"스냅샷 시점 상품 상태"},"created_at":{"type":"string","format":"date-time","description":"스냅샷 생성 타임스탬프(UTC ISO8601)"},"updated_at":{"type":"string","format":"date-time","description":"스냅샷 마지막 변경시점(UTC ISO8601)"}},"required":["id","ai_shop_product_id","name","description","category_id","status","created_at","updated_at"]},"aiShopProductSnapshots.ICreate":{"type":"object","description":"상품 버전 스냅샷(ai_shop_product_snapshots) 신규 레코드 생성에 필요한 DTO. 모든 required property들은 Prisma DB 컬럼 그대로 1:1로 작성됨.\n\n- ai_shop_product_id (UUID, 필수)\n- name (string, 필수)\n- description (string, 필수)\n- category_id (UUID, 필수)\n- status (string, 필수)\n- created_at, updated_at (UTC ISO8601, 시스템 자동 또는 직접입력)\n\n상품 변경이력, 롤백, 감사를 위한 완전한 버전 정보 기록용입니다.","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"스냅샷 작성 대상 상품의 UUID(PK of ai_shop_products)"},"name":{"type":"string","description":"스냅샷 시점 상품명"},"description":{"type":"string","description":"스냅샷 시점 상품 description"},"category_id":{"type":"string","format":"uuid","description":"스냅샷 시점 상품 카테고리 UUID"},"status":{"type":"string","description":"스냅샷 등록 시점의 상품 상태값"},"created_at":{"type":"string","format":"date-time","description":"스냅샷 생성일시(UTC ISO8601)"},"updated_at":{"type":"string","format":"date-time","description":"생성 후 최종 변경일시."}},"required":["ai_shop_product_id","name","description","category_id","status","created_at","updated_at"]},"aiShopProductSnapshots.IUpdate":{"type":"object","description":"상품 버전 스냅샷(ai_shop_product_snapshots) 레코드 업데이트(정정/감사용) DTO.\n\n- name, description, category_id, status, updated_at 등 Prisma DB 컬럼과 1:1 매핑.\n- created_at(최초작성일)은 불변(수정 불가), updated_at은 업데이트 시 반드시 현재 UTC로 변경 필요.\n- 비즈니스상, 일반적으로 immutable이지만, 예외적으로 감사용/정정용 수정 시 사용\n\n필드 불일치나 누락은 에러를 유발합니다.","properties":{"name":{"type":"string","description":"수정/변경할 때의 상품명"},"description":{"type":"string","description":"수정/변경할 때의 상품 설명"},"category_id":{"type":"string","format":"uuid","description":"수정 시점 상품 카테고리(UUID)"},"status":{"type":"string","description":"수정 시점 상품 상태 문자열"},"updated_at":{"type":"string","format":"date-time","description":"수정 시 UTC ISO8601 변경일자"}},"required":["updated_at"]},"aiShopProductImages.IRequest":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"상품 이미지가 속한 제품의 고유 식별자(Prisma 스키마의 ai_shop_product_images.ai_shop_product_id).\n\n이 값은 특정 제품에 속한 이미지만 검색하거나 필터링할 때 사용합니다. uuid 형식에 맞게 입력해야 하며, 정확한 제품을 지정할 때 필요합니다."},"alt_text":{"type":"string","description":"이미지의 접근성 및 대체 텍스트.\n\n검색 또는 필터링 기준의 일부로 사용될 수 있습니다. 여러 언어 또는 키워드와 함께 활용 가능합니다.\n\nPrisma 스키마의 ai_shop_product_images.alt_text 컬럼에 해당합니다."},"position":{"type":"integer","description":"이미지의 갤러리 내 순서(정수형, 1부터 시작). \n\n관리자 UI 등에서 정렬 또는 특정 위치 이미지만 조회할 때 사용합니다. Prisma 스키마의 ai_shop_product_images.position에 대응됩니다."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"},"sort_order":{"type":"string","description":"정렬 기준(예: \"created_at desc\", \"position asc\" 등). 필수 사항은 아니며, 일반적으로 admin, seller UI에서 다양한 정렬 옵션을 제공할 때 사용합니다."}},"description":"상품 이미지 목록을 조회·검색·페이지네이션할 때 사용하는 요청 DTO입니다.\n\nPrisma 스키마의 ai_shop_product_images 테이블 필드(ai_shop_product_id, alt_text, position 등)를 기준으로 필터링 및 검색이 가능합니다. 기본적으로 페이징 처리를 지원하며, 갤러리 내 특정 제품, 순번, 접근성 텍스트 등 다양한 검색 조건을 하나의 요청 객체로 전달합니다.","required":[]},"IPageAiShopProductImages":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopProductImages"},"description":"현재 페이지의 상품 이미지 레코드 목록.\n\n각 항목은 aiShopProductImages 객체이며, Prisma 스키마의 ai_shop_product_images 테이블 1행 전체에 대응됩니다."}},"description":"상품 이미지 페이징 응답 객체입니다.\n\n상품 이미지 search/list API가 반환하는 표준 페이징 타입입니다. pagination(현 페이지 정보)와 data(상품 이미지 배열)로 구성되어 있습니다.\n\n각 이미지 객체는 aiShopProductImages 타입이며, 상세 구조와 필드는 Prisma DB 스키마를 따릅니다.","required":[]},"aiShopProductImages":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"상품 이미지 고유 식별자. Prisma 스키마의 ai_shop_product_images.id 컬럼이며, AI Shop 플랫폼 내에서 모든 이미지가 유니크하게 식별됩니다.\n\n예시: `f3e5a790-fe34-4e8d-91e8-3b01038cca7b`\n"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"이 이미지를 소유한 상품의 고유 식별자. `ai_shop_products.id`를 참조함.\n\n상품에 여러 이미지를 연결하거나, 특정 상품 상세 이미지를 관리할 때 필수적인 FK입니다."},"image_uri":{"type":"string","maxLength":80000,"description":"저장 또는 컷된 이미지의 퍼시스턴트 URI. DB에는 최대 80,000자로 문자열로 저장됩니다.\n\nS3 같은 클라우드 또는 CDN 주소, 스토리지 키 등이 저장됨. 예: https://cdn.ai-shop.com/images/bag1.jpg\n\n프론트엔드, 관리자 UI 및 모바일 등에서 해당 이미지를 렌더링할 때 이 값을 그대로 사용합니다."},"alt_text":{"type":"string","description":"이미지의 접근성(alt) 텍스트.\n\n스크린 리더, 접근성/SEO 최적화, 대체 콘텐츠 표시에 반드시 필요.\n\nPrisma 스키마의 ai_shop_product_images.alt_text에 해당."},"position":{"type":"integer","description":"해당 이미지의 제품 내 순서(1부터 시작).\n\n메인 이미지, 서브이미지, 상세이미지 등 갤러리 내 위치를 결정합니다. 고유 인덱스가 부여됩니다."}},"required":["id","ai_shop_product_id","image_uri","alt_text","position"],"description":"상품 이미지 테이블(ai_shop_product_images)의 모든 필드를 표현하는 메인 타입입니다.\n\n각 필드는 자세한 Prisma 스키마 컬럼 설명과 완전하게 일치하며, DB에서 row를 읽거나 단일 이미지를 조회/반환할 때 사용합니다.\n\n포함 필드:\n- id: 이미지 PK(UUID, 글로벌 고유)\n- ai_shop_product_id: 부모 제품 FK(UUID)\n- image_uri: 스토리지 URI(최대 8만 자)\n- alt_text: 접근성 및 설명\n- position: 테이블 내 unique 인덱스 및 갤러리 순서\n\n모든 값은 NOT NULL 제약이 있으며, FK 무결성 확인이 필요합니다."},"aiShopProductImages.ICreate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"이미지를 등록할 제품의 UUID(PK). 반드시 존재하는 ai_shop_products.id를 사용해야 합니다.\n\n실제 파일/이미지 콘텐츠 업로드와는 별개로, 메타데이터만 먼저 생성하는 경우에도 필수 파라미터입니다."},"image_uri":{"type":"string","maxLength":80000,"description":"스토리지 상의 이미지 고유 URI. 예: `https://cdn.ai-shop.com/images/bag1.jpg` 등 최대 8만자까지 허용.\n\nS3, GCS, 자체 스토리지 URI 모두 가능. 반드시 상품 이미지가 업로드된 상태여야 함."},"alt_text":{"type":"string","description":"이미지의 대체 텍스트(접근성 alt). 고객/관리자/셀러가 직접 입력하며, 화면 리더 및 SEO에 활용됩니다.\n\n상품 속성 및 제품군에 따라 고유 alt 값을 세팅해야 합니다."},"position":{"type":"integer","description":"이미지 갤러리 내 노출 순번(1부터 시작). 동일 제품 내 중복 불가. 예: 1 → 대표 이미지, 2부터 서브 이미지 순."}},"required":["ai_shop_product_id","image_uri","alt_text","position"],"description":"상품 이미지 등록(생성) 요청 시 전달되는 DTO 유형입니다.\n\nai_shop_product_images 테이블 컬럼 -\n - ai_shop_product_id: 상품 FK, UUID\n - image_uri: 이미지 URI\n - alt_text: 접근성 설명\n - position: 갤러리 순번\n\n입력값은 상품의 유효성 및 중복성 체크가 필요합니다. 모든 필드는 Prisma 스키마 NOT NULL 컬럼에 대응되며, 자동 증가/생성되는 id는 제외됩니다."},"aiShopProductImages.IUpdate":{"type":"object","properties":{"image_uri":{"type":"string","maxLength":80000,"description":"업데이트할 상품 이미지의 새 URI. 서비스 마이그레이션, 재업로드 등에서 갤러리 URI가 바뀔 경우 사용합니다."},"alt_text":{"type":"string","description":"이미지 대체 텍스트(접근성 alt) 변경. 상품 정보 변경, 이미지 설명 개선 등 다양한 요청에서 수정됩니다."},"position":{"type":"integer","description":"제품 내 이미지 순서 변경.\n\n대표 이미지 전환, 상세 페이지 갤러리 내 이미지 리오더링 등에서 이 값을 갱신합니다."}},"description":"상품 이미지를 갱신·수정하는 데 전달하는 DTO 타입입니다.\n\n- image_uri: 클라우드/스토리지 이동, 썸네일 재생성 등에서 URI만 갱신하는 경우\n- alt_text: 설명 최적화, 다국어 지원, 접근성 개선 케이스 등에서 텍스트만 수정\n- position: 대표/서브 이미지 이동이나 UI 모듈 내 정렬 변경 시 값의 변화를 적용하는 필드\n\n키(id, ai_shop_product_id)는 별도 경로/파라미터로 지정되어야 하며, IUpdate 타입에는 포함되지 않습니다.","required":[]},"aiShopProductTags.IRequest":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"태깅할(또는 검색할) 상품의 UUID. 단일/복수 선택 모두 지원. 입력하지 않으면 전체 상품 태그 리스트에서 검색됩니다.\n\nPrisma 스키마의 ai_shop_product_tags.ai_shop_product_id 컬럼과 1:1로 매칭됩니다."},"tag_text":{"type":"string","description":"검색하고자 하는 해시태그 단어, 라벨.\n\nAI Shop 내 상품 검색/필터, 대시보드 태그 추천 등에서 활용됩니다. 대소문자 구분 없음.\nPrisma 스키마 ai_shop_product_tags.tag_text에 해당."},"created_at":{"type":"string","format":"date-time","description":"태그 생성일로 검색. 범위형(timestamp between 씩)\n\n예) 오늘 생성된 태그만 조회/통계 목적으로 사용함.\nPrisma 컬럼 ai_shop_product_tags.created_at와 필터 가능."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"},"sort_order":{"type":"string","description":"정렬 기준(예: \"created_at desc\"). 별도 필요 시 사용."}},"description":"상품 태그 검색/리스트 요청 DTO 입니다.\n\nPrisma 스키마의 ai_shop_product_tags 테이블 필드를 기준으로 다양한 필터, 페이징, 정렬 조건을 전달할 수 있습니다. 태킹된 상품별 태그, 생성일별, 키워드 단어별로 summay 집계, AI 추천, 대시보딩시에 활용됨.","required":[]},"IPageAiShopProductTags":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProductTag"},"description":"상품 태그 레코드들의 배열 – 각 row는 IAiShopProductTag 완전 정의형입니다."}},"description":"상품 태그 목록/검색 API의 표준 페이징 응답 타입입니다.\n\npagination: 페이지 정보,\ndata: 페이징된 상품 태그 레코드 배열\n\n모든 row는 IAiShopProductTag 타입 구조입니다.","required":[]},"IAiShopProductTag":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"상품 태그 고유 ID. Prisma 스키마 ai_shop_product_tags.id 값.\n\nAI Shop 내 전체 태그 키의 글로벌 고유 식별자입니다."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"태깅 대상 상품의 고유 식별자(UUID). Prisma fk_ai_shop_product_tags_product_id와 연결됨.\n\n상품별 태깅/검색/Ai 추천 등에 활용."},"tag_text":{"type":"string","description":"태그(해시) 텍스트. 자유형(예: '#eco', '친환경', '여름특가' 등 다양한 자연어 또는 AI 분류어). Prisma 스키마 ai_shop_product_tags.tag_text 컬럼에 해당."},"created_at":{"type":"string","format":"date-time","description":"태그 생성 시점(타임스탬프). Prisma ai_shop_product_tags.created_at 컬럼 정의값과 일치함."}},"required":["id","ai_shop_product_id","tag_text","created_at"],"description":"상품 단일 태그의 전체 row 구조를 나타내는 타입입니다.\n\n- id: 태그의 PK(UUID)\n- ai_shop_product_id: 태깅 대상 상품 UUID\n- tag_text: 해시태그/키워드\n- created_at: 생성 타임스탬프\n\nPrisma DB 컬럼과 대칭되며, row의 모든 값이 포함됩니다."},"IAiShopProductTag.ICreate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"태깅할 상품 UUID. 필수, Prisma 스키마 컬럼 ai_shop_product_tags.ai_shop_product_id.\n\n태그 생성 시 반드시 유효한 상품 레코드가 존재해야 합니다."},"tag_text":{"type":"string","description":"생성할 태그 문자열. '#', 자연어, AI 라벨 등도 가능. Prisma 스키마 ai_shop_product_tags.tag_text 컬럼.\n\n한 상품에 여러 개의 고유 태그 가능. NLP/AI 분류라벨 자동 삽입도 허용."}},"required":["ai_shop_product_id","tag_text"],"description":"상품 태그 생성(추가) 요청 DTO.\n\n- ai_shop_product_id: 태깅할 상품 UUID(PK,Fk)\n- tag_text: 신규 태그 텍스트\n\n프론트엔드, 관리자, AI 등에서 태그 추가 시 사용.\n\nrow id, created_at 등은 자동 생성되므로 제외."},"IAiShopProductTag.IUpdate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"연결된 상품 UUID. 태그 수정 시 상품 자체 연결을 재설계할 때만 사용. 일반적으론 변경하지 않음."},"tag_text":{"type":"string","description":"수정할 태그 문자열. NLP/AI 교정, 오타, 자동 분류 수정 등에 활용."}},"description":"상품 태그 정보 업데이트용 요청 DTO. 보통 태그 문자열 교정, 상품 연결 변경 등에서 사용.\n\nid, created_at 등은 수정불가며, 변화시 별도 row를 새로 만들어야 함.","required":[]},"IAiShopProductImportLog.IRequest":{"type":"object","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"로그 검색할 셀러의 고유 UUID. ai_shop_product_import_logs.ai_shop_seller_id 컬럼.\n\n특정 판매자의 대량 상품 등록 내역, 실패/완료 여부 파악 등에 활용."},"imported_at":{"type":"string","format":"date-time","description":"import batch 실행 시각(범위 검색용, 예: 2025-07-21T15:00:00Z 부터 ~)."},"status":{"type":"string","description":"등록 로그의 상태. `pending`, `completed`, `failed` 등.\n\nPrisma 스키마 ai_shop_product_import_logs.status 컬럼: 상태별 필터링에 활용."},"source_file":{"type":"string","description":"등록 로그의 source 파일 경로/URI. S3, GCS 등 클라우드 내 import 파일 또는 서버 특정 위치 참조용.\n\nPrisma 스키마 ai_shop_product_import_logs.source_file 컬럼."},"pagination":{"$ref":"#/components/schemas/IPage.IRequest"},"sort_order":{"type":"string","description":"정렬 기준(예: \"imported_at desc\"). 필요 시만 사용."}},"description":"상품 일괄 등록 로그 import batch 목록 조회/검색용 요청 DTO.\n\n셀러 식별, 실행 시간, 상태, source 파일 기준 등 다양한 filter 및 페이징/정렬 정보를 전달합니다. 실제 테이블 내 파티션/B bucket 검색 등 고성능 조회에 적합한 구조입니다.","required":[]},"IPageIAiShopProductImportLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopProductImportLog"},"description":"현재 페이지의 일괄 상품 등록 로그(ImportLog) 객체 배열."}},"description":"상품 일괄 등록 import log (ai_shop_product_import_logs) 목록 API의 표준 응답 DTO.\n\n- pagination: 페이지네이션 정보\n- data: import log 레코드 리스트 배열\n\n실제 로그 row 구조는 IAiShopProductImportLog 타입의 배열로 제공됩니다.","required":[]},"IAiShopProductImportLog":{"type":"object","description":"Product import log entity for recording bulk import or batch registration events for products. This model links to the seller performing the import and includes info such as timestamp, source file, record count, status (pending/completed/failed), and optional error message if failures occur. Required for audit, error tracking, and analytics. Fulfills product management requirements for tracking external or bulk upload campaigns. All fields must match ai_shop_product_import_logs Prisma schema.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique product import event identifier. References ai_shop_product_import_logs.id in Prisma schema."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller who performed import event. Foreign key to ai_shop_sellers.id, for audit control and traceability."},"imported_at":{"type":"string","format":"date-time","description":"Timestamp when the import completed. Used for historical monitoring and compliance."},"source_file":{"type":"string","description":"URI to source batch file/artifact. E.g., path to a csv, xlsx, or export JSON. May be cloud or local storage reference."},"record_count":{"type":"integer","description":"Number of products/items handled in this import event. Must be >= 1."},"status":{"type":"string","description":"Import operation status. Enum: pending/completed/failed. Application-managed state transition."},"error_message":{"oneOf":[{"type":"string","description":"Import failure or error reason, present if status is 'failed'. Can be null. Used for debugging and compliance review."},{"type":"null","description":"Import failure or error reason, present if status is 'failed'. Can be null. Used for debugging and compliance review."}],"description":"Import failure or error reason, present if status is 'failed'. Can be null. Used for debugging and compliance review."}},"required":["id","ai_shop_seller_id","imported_at","source_file","record_count","status"]},"IAiShopProductImportLog.ICreate":{"type":"object","description":"Request body for creating a new product import log event. All required fields must match ai_shop_product_import_logs, except 'id' which is generated by the database.","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller performing the import."},"imported_at":{"type":"string","format":"date-time","description":"Datetime the import is completed (set to now or source log time)."},"source_file":{"type":"string","description":"URI or path to source batch file (as supplied/uploaded)."},"record_count":{"type":"integer","description":"Number of products in this import batch. Must be > 0."},"status":{"type":"string","description":"Status at creation: use 'pending', 'completed', or 'failed'."},"error_message":{"oneOf":[{"type":"string","description":"Optional error message if import failed. Null for success, required for status=='failed'."},{"type":"null","description":"Optional error message if import failed. Null for success, required for status=='failed'."}],"description":"Optional error message if import failed. Null for success, required for status=='failed'."}},"required":["ai_shop_seller_id","imported_at","source_file","record_count","status"]},"IAiShopProductImportLog.IUpdate":{"type":"object","description":"Request body for updating existing product import log information. Only fields in Prisma schema may be included. 'id' cannot be updated. Used for error correction, status update, or late error recording.","properties":{"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller performing/importing; may update if needed for correction."},"imported_at":{"type":"string","format":"date-time","description":"Timestamp if updating/correcting event date."},"source_file":{"type":"string","description":"Source file URI, if replacement needed."},"record_count":{"type":"integer","description":"Count of items imported; correct if previous entry was wrong."},"status":{"type":"string","description":"Updated status string: 'pending','completed','failed', etc."},"error_message":{"oneOf":[{"type":"string","description":"Updated error message or resolution/diagnostics."},{"type":"null","description":"Updated error message or resolution/diagnostics."}],"description":"Updated error message or resolution/diagnostics."}},"required":["ai_shop_seller_id","imported_at","source_file","record_count","status"]},"IAiShopPost.IRequest":{"type":"object","description":"Request type for searching, filtering, and pagination of bulletin board posts (ai_shop_posts). Supports all legitimate filter/sort/search fields such as post id, author id, role, status, channel, created/updated timestamp, title/body search, and paging controls. This DTO is used in the PATCH operation for advanced bulletin board search/query interfaces. Fields must precisely match ai_shop_posts schema and not reference non-schema properties. No soft-delete logic included—see schema.","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by unique post id."},{"type":"null","format":"uuid","description":"Optional filter by unique post id."}],"description":"Optional filter by unique post id."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter posts authored by a specific customer; null means no filter."},{"type":"null","format":"uuid","description":"Filter posts authored by a specific customer; null means no filter."}],"description":"Filter posts authored by a specific customer; null means no filter."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter posts authored by this seller."},{"type":"null","format":"uuid","description":"Filter posts authored by this seller."}],"description":"Filter posts authored by this seller."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter posts authored by this admin."},{"type":"null","format":"uuid","description":"Filter posts authored by this admin."}],"description":"Filter posts authored by this admin."},"channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by associated channel/shopfront."},{"type":"null","format":"uuid","description":"Filter by associated channel/shopfront."}],"description":"Filter by associated channel/shopfront."},"title":{"oneOf":[{"type":"string","description":"Fuzzy search for posts by title."},{"type":"null","description":"Fuzzy search for posts by title."}],"description":"Fuzzy search for posts by title."},"body":{"oneOf":[{"type":"string","description":"Fuzzy body/content keyword search."},{"type":"null","description":"Fuzzy body/content keyword search."}],"description":"Fuzzy body/content keyword search."},"role_type":{"oneOf":[{"type":"string","description":"Filter by authoring role (customer/seller/admin)."},{"type":"null","description":"Filter by authoring role (customer/seller/admin)."}],"description":"Filter by authoring role (customer/seller/admin)."},"status":{"oneOf":[{"type":"string","description":"Filter by post status (draft/published/hidden/deleted)."},{"type":"null","description":"Filter by post status (draft/published/hidden/deleted)."}],"description":"Filter by post status (draft/published/hidden/deleted)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by creation time range (start)."},{"type":"null","format":"date-time","description":"Filter by creation time range (start)."}],"description":"Filter by creation time range (start)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by creation time range (end)."},{"type":"null","format":"date-time","description":"Filter by creation time range (end)."}],"description":"Filter by creation time range (end)."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by update time range (start)."},{"type":"null","format":"date-time","description":"Filter by update time range (start)."}],"description":"Filter by update time range (start)."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter by update time range (end)."},{"type":"null","format":"date-time","description":"Filter by update time range (end)."}],"description":"Filter by update time range (end)."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number (1-based)."},"limit":{"type":"integer","minimum":1,"description":"Pagination: results per page."},"sort":{"oneOf":[{"type":"string","description":"Sort order (e.g. 'created_at desc')."},{"type":"null","description":"Sort order (e.g. 'created_at desc')."}],"description":"Sort order (e.g. 'created_at desc')."}},"required":["page","limit"]},"IPageIAiShopPost":{"type":"object","description":"Paginated results DTO for ai_shop_posts. Follows the IPage<T> container structure, wrapping results with paging metadata per standard convention.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPost"},"description":"List of post entity results for this page."}},"required":["pagination","data"]},"IAiShopPost":{"type":"object","description":"Bulletin post entity representing a top-level post in ai_shop_posts. Fulfills bulletin/board/documentation, announcement, or system community logic. Properties all correspond to ai_shop_posts schema.","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key (uuid) for this post."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Post author customer (nullable)."},{"type":"null","format":"uuid","description":"Post author customer (nullable)."}],"description":"Post author customer (nullable)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Post author seller (nullable)."},{"type":"null","format":"uuid","description":"Post author seller (nullable)."}],"description":"Post author seller (nullable)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Post author admin (nullable)."},{"type":"null","format":"uuid","description":"Post author admin (nullable)."}],"description":"Post author admin (nullable)."},"channel_id":{"type":"string","format":"uuid","description":"Channel/shopfront (FK reference)."},"title":{"type":"string","description":"Summary/subject/title of bulletin post."},"body":{"type":"string","description":"Main content body of post (rich markdown/plain/HTML)."},"role_type":{"type":"string","description":"Type of authoring role—customer/seller/admin."},"status":{"type":"string","description":"System work status: draft/published/hidden/deleted."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."}},"required":["id","channel_id","title","body","role_type","status","created_at","updated_at"]},"IAiShopPost.ICreate":{"type":"object","description":"Request body for creating a new ai_shop_posts bulletin post. All relevant and required fields must match Prisma schema properties, but id is not needed (database generated). Used for admin, seller, or customer bulletin creation.","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (customer, nullable for seller/admin authored posts)."},{"type":"null","format":"uuid","description":"Author (customer, nullable for seller/admin authored posts)."}],"description":"Author (customer, nullable for seller/admin authored posts)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (seller, nullable if authored by customer/admin)."},{"type":"null","format":"uuid","description":"Author (seller, nullable if authored by customer/admin)."}],"description":"Author (seller, nullable if authored by customer/admin)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (admin, nullable if authored by customer/seller)."},{"type":"null","format":"uuid","description":"Author (admin, nullable if authored by customer/seller)."}],"description":"Author (admin, nullable if authored by customer/seller)."},"channel_id":{"type":"string","format":"uuid","description":"Shopfront/channel for post publication (FK required)."},"title":{"type":"string","description":"Post subject/title."},"body":{"type":"string","description":"Main post body/content."},"role_type":{"type":"string","description":"Type of author role (one of 'customer','seller','admin')."},"status":{"type":"string","description":"Workflow status for post (draft/published/hidden/deleted)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for post (system-generated or passed explicitly)."},"updated_at":{"type":"string","format":"date-time","description":"Time of latest update (should equal created_at on creation)."}},"required":["channel_id","title","body","role_type","status","created_at","updated_at"]},"IAiShopPost.IUpdate":{"type":"object","description":"Request body for updating an ai_shop_posts record by id. Only properties in Prisma table may be set.","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (customer), must match or null."},{"type":"null","format":"uuid","description":"Author (customer), must match or null."}],"description":"Author (customer), must match or null."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (seller), must match or null."},{"type":"null","format":"uuid","description":"Author (seller), must match or null."}],"description":"Author (seller), must match or null."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Author (admin), must match or null."},{"type":"null","format":"uuid","description":"Author (admin), must match or null."}],"description":"Author (admin), must match or null."},"channel_id":{"type":"string","format":"uuid","description":"Shopfront channel to update to."},"title":{"type":"string","description":"Updated post title/subject."},"body":{"type":"string","description":"Updated main body."},"role_type":{"type":"string","description":"Updated post authoring role type."},"status":{"type":"string","description":"Status after update."},"created_at":{"type":"string","format":"date-time","description":"Original creation date/time."},"updated_at":{"type":"string","format":"date-time","description":"Time of update, must be adjusted."}},"required":["channel_id","title","body","role_type","status","created_at","updated_at"]},"IAiShopPostComment.IRequest":{"type":"object","description":"DTO for search, filter, and pagination of ai_shop_post_comments (bulletin board comments/replies). Used for threading/browsing comments. All fields match the table schema. No soft-delete or extra metadata supported.","properties":{"id":{"oneOf":[{"type":"string","format":"uuid","description":"Unique PK for comment."},{"type":"null","format":"uuid","description":"Unique PK for comment."}],"description":"Unique PK for comment."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK: post this comment belongs to."},{"type":"null","format":"uuid","description":"FK: post this comment belongs to."}],"description":"FK: post this comment belongs to."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by customer author."},{"type":"null","format":"uuid","description":"Filter by customer author."}],"description":"Filter by customer author."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by seller author."},{"type":"null","format":"uuid","description":"Filter by seller author."}],"description":"Filter by seller author."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by admin author."},{"type":"null","format":"uuid","description":"Filter by admin author."}],"description":"Filter by admin author."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent comment for thread filtering. Null for top-level."},{"type":"null","format":"uuid","description":"Parent comment for thread filtering. Null for top-level."}],"description":"Parent comment for thread filtering. Null for top-level."},"body":{"oneOf":[{"type":"string","description":"Keyword search body/content."},{"type":"null","description":"Keyword search body/content."}],"description":"Keyword search body/content."},"role_type":{"oneOf":[{"type":"string","description":"Role type filter (customer/seller/admin)."},{"type":"null","description":"Role type filter (customer/seller/admin)."}],"description":"Role type filter (customer/seller/admin)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Creation range start."},{"type":"null","format":"date-time","description":"Creation range start."}],"description":"Creation range start."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Creation range end."},{"type":"null","format":"date-time","description":"Creation range end."}],"description":"Creation range end."},"updated_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Update range start."},{"type":"null","format":"date-time","description":"Update range start."}],"description":"Update range start."},"updated_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Update range end."},{"type":"null","format":"date-time","description":"Update range end."}],"description":"Update range end."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number."},"limit":{"type":"integer","minimum":1,"description":"Results per page."},"sort":{"oneOf":[{"type":"string","description":"Sort expression, e.g., 'created_at desc'."},{"type":"null","description":"Sort expression, e.g., 'created_at desc'."}],"description":"Sort expression, e.g., 'created_at desc'."}},"required":["page","limit"]},"IPageIAiShopPostComment":{"type":"object","description":"Paginated results for bulletin board post comments (ai_shop_post_comments). Structure matches IPage<T>.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostComment"}}},"required":["pagination","data"]},"IAiShopPostComment":{"type":"object","description":"Bulletin post comment entity. Represents threaded reply/comment to a post, following ai_shop_post_comments schema. Includes basic authoring, threading and audit fields. No soft delete or edit history—edit and moderation handled separately.","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key (uuid) for comment."},"post_id":{"type":"string","format":"uuid","description":"FK for post being commented."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (customer, nullable if seller/admin)."},{"type":"null","format":"uuid","description":"Comment author (customer, nullable if seller/admin)."}],"description":"Comment author (customer, nullable if seller/admin)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (seller, nullable if customer/admin)."},{"type":"null","format":"uuid","description":"Comment author (seller, nullable if customer/admin)."}],"description":"Comment author (seller, nullable if customer/admin)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (admin, nullable if customer/seller)."},{"type":"null","format":"uuid","description":"Comment author (admin, nullable if customer/seller)."}],"description":"Comment author (admin, nullable if customer/seller)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent comment PK for thread. Null for top-level/root comments."},{"type":"null","format":"uuid","description":"Parent comment PK for thread. Null for top-level/root comments."}],"description":"Parent comment PK for thread. Null for top-level/root comments."},"body":{"type":"string","description":"Main comment content."},"role_type":{"type":"string","description":"Authoring role: customer/seller/admin."},"created_at":{"type":"string","format":"date-time","description":"Creation datetime."},"updated_at":{"type":"string","format":"date-time","description":"Last update datetime."}},"required":["id","post_id","body","role_type","created_at","updated_at"]},"IAiShopPostComment.ICreate":{"type":"object","description":"Request body for creating new bulletin board comment. Fields must exactly match schema and only required ones are necessary. Id PK is generated and not included.","properties":{"post_id":{"type":"string","format":"uuid","description":"FK for post being commented."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (customer)."},{"type":"null","format":"uuid","description":"Comment author (customer)."}],"description":"Comment author (customer)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (seller)."},{"type":"null","format":"uuid","description":"Comment author (seller)."}],"description":"Comment author (seller)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Comment author (admin)."},{"type":"null","format":"uuid","description":"Comment author (admin)."}],"description":"Comment author (admin)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Parent comment for thread. Null if top-level/root."},{"type":"null","format":"uuid","description":"Parent comment for thread. Null if top-level/root."}],"description":"Parent comment for thread. Null if top-level/root."},"body":{"type":"string","description":"Comment main content."},"role_type":{"type":"string","description":"Author role (customer/seller/admin)."},"created_at":{"type":"string","format":"date-time","description":"Creation datetime point."},"updated_at":{"type":"string","format":"date-time","description":"Update timestamp (should match created_at on insertion)."}},"required":["post_id","body","role_type","created_at","updated_at"]},"IAiShopPostComment.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"The unique ID of the parent post that this comment belongs to, as defined in ai_shop_post_comments.post_id. Used to maintain direct relation to the bulletin board post. Refer to the ai_shop_post_comments schema column descriptions for details about data consistency and referential integrity."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer author ID for the comment (nullable). If supplied, must match an existing customer. Enforces the polymorphic reference to a customer as described in ai_shop_post_comments.ai_shop_customer_id. See Prisma schema and ERD for business logic."},{"type":"null","format":"uuid","description":"Customer author ID for the comment (nullable). If supplied, must match an existing customer. Enforces the polymorphic reference to a customer as described in ai_shop_post_comments.ai_shop_customer_id. See Prisma schema and ERD for business logic."}],"description":"Customer author ID for the comment (nullable). If supplied, must match an existing customer. Enforces the polymorphic reference to a customer as described in ai_shop_post_comments.ai_shop_customer_id. See Prisma schema and ERD for business logic."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller author ID for the comment (nullable). If supplied, must match an existing seller. Provides proper reference for seller role author, aligned with ai_shop_post_comments.ai_shop_seller_id in the schema. See ERD and schema for more."},{"type":"null","format":"uuid","description":"Seller author ID for the comment (nullable). If supplied, must match an existing seller. Provides proper reference for seller role author, aligned with ai_shop_post_comments.ai_shop_seller_id in the schema. See ERD and schema for more."}],"description":"Seller author ID for the comment (nullable). If supplied, must match an existing seller. Provides proper reference for seller role author, aligned with ai_shop_post_comments.ai_shop_seller_id in the schema. See ERD and schema for more."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin author ID for the comment (nullable). If supplied, must match an admin account. Polymorphic author referencing for system compliance and moderation, as in ai_shop_post_comments.ai_shop_admin_id."},{"type":"null","format":"uuid","description":"Admin author ID for the comment (nullable). If supplied, must match an admin account. Polymorphic author referencing for system compliance and moderation, as in ai_shop_post_comments.ai_shop_admin_id."}],"description":"Admin author ID for the comment (nullable). If supplied, must match an admin account. Polymorphic author referencing for system compliance and moderation, as in ai_shop_post_comments.ai_shop_admin_id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the parent comment, if this is a reply (nullable for root comments). Implements hierarchical comment tree as described in ai_shop_post_comments.parent_id."},{"type":"null","format":"uuid","description":"ID of the parent comment, if this is a reply (nullable for root comments). Implements hierarchical comment tree as described in ai_shop_post_comments.parent_id."}],"description":"ID of the parent comment, if this is a reply (nullable for root comments). Implements hierarchical comment tree as described in ai_shop_post_comments.parent_id."},"body":{"type":"string","description":"Content of the comment, atomic and normalized. This property directly maps to ai_shop_post_comments.body. String corresponding to the user's comment."},"role_type":{"type":"string","description":"Role type of commenter: 'customer', 'seller', or 'admin'. Implements polymorphic author tracking, as defined in ai_shop_post_comments.role_type. Must match one of the supported role enums in business logic. No enum defined in DB, but constrained by application rules."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of comment creation, in ISO 8601 format. Referenced in schema as ai_shop_post_comments.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last edit/moderation for this comment. Matches ai_shop_post_comments.updated_at in database schema."}},"required":["post_id","body","role_type","created_at","updated_at"],"description":"Update DTO for ai_shop_post_comments entity. Contains all schema-compliant fields for updating or replacing a comment record. Aligns to requirements described in the ERD and Prisma schema documentation."},"IAiShopPostAttachment.IRequest":{"type":"object","properties":{"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by bulletin post ID (ai_shop_post_attachments.post_id). Used to find attachments belonging to a certain post."},{"type":"null","format":"uuid","description":"Optional filter by bulletin post ID (ai_shop_post_attachments.post_id). Used to find attachments belonging to a certain post."}],"description":"Optional filter by bulletin post ID (ai_shop_post_attachments.post_id). Used to find attachments belonging to a certain post."},"file_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by file ID (ai_shop_post_attachments.file_id). Used to narrow by attached file."},{"type":"null","format":"uuid","description":"Optional filter by file ID (ai_shop_post_attachments.file_id). Used to narrow by attached file."}],"description":"Optional filter by file ID (ai_shop_post_attachments.file_id). Used to narrow by attached file."},"name":{"oneOf":[{"type":"string","description":"Fuzzy search for attachment display name. Implements text search on ai_shop_post_attachments.name using trigram or similar search in DB."},{"type":"null","description":"Fuzzy search for attachment display name. Implements text search on ai_shop_post_attachments.name using trigram or similar search in DB."}],"description":"Fuzzy search for attachment display name. Implements text search on ai_shop_post_attachments.name using trigram or similar search in DB."},"type":{"oneOf":[{"type":"string","description":"Filter by attachment MIME/type or category. Matches ai_shop_post_attachments.type for searching by type group (e.g., image/png)."},{"type":"null","description":"Filter by attachment MIME/type or category. Matches ai_shop_post_attachments.type for searching by type group (e.g., image/png)."}],"description":"Filter by attachment MIME/type or category. Matches ai_shop_post_attachments.type for searching by type group (e.g., image/png)."},"size":{"oneOf":[{"type":"number","description":"Optional filter for file size in bytes. Matches ai_shop_post_attachments.size."},{"type":"null","description":"Optional filter for file size in bytes. Matches ai_shop_post_attachments.size."}],"description":"Optional filter for file size in bytes. Matches ai_shop_post_attachments.size."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (starting from 1; optional)"},{"type":"null","description":"Page number for pagination (starting from 1; optional)"}],"description":"Page number for pagination (starting from 1; optional)"},"limit":{"oneOf":[{"type":"integer","description":"Results per page. Applies for paginated queries (optional; default as per API/system setting)."},{"type":"null","description":"Results per page. Applies for paginated queries (optional; default as per API/system setting)."}],"description":"Results per page. Applies for paginated queries (optional; default as per API/system setting)."}},"required":[],"description":"Request search/filter/pagination DTO for listing ai_shop_post_attachments based on schema-defined fields."},"IPageIAiShopPostAttachment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostAttachment"},"description":"The page's array of attachment records."}},"required":["pagination","data"],"description":"Paginated result model for listing ai_shop_post_attachments with page navigation information."},"IAiShopPostAttachment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique PK for post attachment (ai_shop_post_attachments.id)"},"post_id":{"type":"string","format":"uuid","description":"FK to the parent ai_shop_posts entry. See ai_shop_post_attachments.post_id."},"file_id":{"type":"string","format":"uuid","description":"FK to ai_shop_files, as structured in ai_shop_post_attachments.file_id."},"name":{"type":"string","description":"Filename or display name for attachment. Part of ai_shop_post_attachments schema."},"type":{"type":"string","description":"Attachment type/MIME/type or group, as per ai_shop_post_attachments.type."},"size":{"type":"integer","description":"File size in bytes (ai_shop_post_attachments.size)."}},"required":["id","post_id","file_id","name","type","size"],"description":"Complete attachment record for bulletin post, per ai_shop_post_attachments schema."},"IAiShopPostAttachment.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to post (ai_shop_post_attachments.post_id) - required."},"file_id":{"type":"string","format":"uuid","description":"FK to file metadata (ai_shop_post_attachments.file_id) - required."},"name":{"type":"string","description":"Display/filename for attachment."},"type":{"type":"string","description":"Attachment MIME/type/category."},"size":{"type":"integer","description":"File size in bytes."}},"required":["post_id","file_id","name","type","size"],"description":"Create DTO for ai_shop_post_attachments. Required for POST endpoint as per schema."},"IAiShopPostAttachment.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to parent post for update."},"file_id":{"type":"string","format":"uuid","description":"FK to file being associated."},"name":{"type":"string","description":"Filename for the attachment."},"type":{"type":"string","description":"Attachment type/MIME."},"size":{"type":"integer","description":"File size in bytes."}},"required":["post_id","file_id","name","type","size"],"description":"Full update model for ai_shop_post_attachments table. Overwrites all fields except PK as per the schema."},"IAiShopPostSnapshot.IRequest":{"type":"object","properties":{"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by bulletin post ID (ai_shop_post_snapshots.post_id)."},{"type":"null","format":"uuid","description":"Filter by bulletin post ID (ai_shop_post_snapshots.post_id)."}],"description":"Filter by bulletin post ID (ai_shop_post_snapshots.post_id)."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by customer author (nullable)."},{"type":"null","format":"uuid","description":"Filter by customer author (nullable)."}],"description":"Filter by customer author (nullable)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by seller author (nullable)."},{"type":"null","format":"uuid","description":"Filter by seller author (nullable)."}],"description":"Filter by seller author (nullable)."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by admin author (nullable)."},{"type":"null","format":"uuid","description":"Filter by admin author (nullable)."}],"description":"Filter by admin author (nullable)."},"title":{"oneOf":[{"type":"string","description":"Text query for title in version history."},{"type":"null","description":"Text query for title in version history."}],"description":"Text query for title in version history."},"status":{"oneOf":[{"type":"string","description":"Filter by post status at this version."},{"type":"null","description":"Filter by post status at this version."}],"description":"Filter by post status at this version."},"snapshot_reason":{"oneOf":[{"type":"string","description":"Filter by versioning/moderation reason."},{"type":"null","description":"Filter by versioning/moderation reason."}],"description":"Filter by versioning/moderation reason."},"created_at_range":{"oneOf":[{"type":"array","items":{"type":"string","format":"date-time"},"description":"Optional array of two ISO8601 date-times: [from, to] to limit by snapshot time."},{"type":"null","items":{"type":"string","format":"date-time"},"description":"Optional array of two ISO8601 date-times: [from, to] to limit by snapshot time."}],"description":"Optional array of two ISO8601 date-times: [from, to] to limit by snapshot time."},"page":{"oneOf":[{"type":"integer","description":"Pagination: page number."},{"type":"null","description":"Pagination: page number."}],"description":"Pagination: page number."},"limit":{"oneOf":[{"type":"integer","description":"Pagination: results per page."},{"type":"null","description":"Pagination: results per page."}],"description":"Pagination: results per page."}},"required":[],"description":"Complex search/filter DTO for ai_shop_post_snapshots version/audit record listing."},"IPageAiShopPostSnapshot":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostSnapshot"},"description":"Array of snapshot version records for this page."}},"required":["pagination","data"],"description":"Page result model for ai_shop_post_snapshots, including snapshot version array and pagination."},"IAiShopPostSnapshot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique PK for the version/snapshot row."},"post_id":{"type":"string","format":"uuid","description":"FK to ai_shop_posts; which post is this a snapshot of."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK to customer who authored version."},{"type":"null","format":"uuid","description":"Optional FK to customer who authored version."}],"description":"Optional FK to customer who authored version."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK to seller author."},{"type":"null","format":"uuid","description":"Optional FK to seller author."}],"description":"Optional FK to seller author."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional FK to admin author."},{"type":"null","format":"uuid","description":"Optional FK to admin author."}],"description":"Optional FK to admin author."},"title":{"type":"string","description":"Title at version time."},"body":{"type":"string","description":"Post content/body at this version."},"role_type":{"type":"string","description":"Role of author—customer/seller/admin—at version time."},"status":{"type":"string","description":"Status value for post at time of versioning."},"snapshot_reason":{"type":"string","description":"Reason this version was created: edit/moderation/audit event."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of this snapshot creation."}},"required":["id","post_id","title","body","role_type","status","snapshot_reason","created_at"],"description":"Record for post version snapshot (ai_shop_post_snapshots table). For audit/log/rollback."},"IAiShopPostSnapshot.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to bulletin post for snapshot versioning."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer author id (nullable)—version snapshot reflection."},{"type":"null","format":"uuid","description":"Customer author id (nullable)—version snapshot reflection."}],"description":"Customer author id (nullable)—version snapshot reflection."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller author id (nullable)—for version trace."},{"type":"null","format":"uuid","description":"Seller author id (nullable)—for version trace."}],"description":"Seller author id (nullable)—for version trace."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin author id (nullable)—for moderation versioning."},{"type":"null","format":"uuid","description":"Admin author id (nullable)—for moderation versioning."}],"description":"Admin author id (nullable)—for moderation versioning."},"title":{"type":"string","description":"Title at snapshot creation."},"body":{"type":"string","description":"Body/content at snapshot creation."},"role_type":{"type":"string","description":"Role of author ('customer', 'seller', 'admin')."},"status":{"type":"string","description":"Post status at snapshot time."},"snapshot_reason":{"type":"string","description":"Reason for version: edit/moderation/audit note."}},"required":["post_id","title","body","role_type","status","snapshot_reason"],"description":"DTO for post version creation (audit, rollback, moderation event tracing)."},"IAiShopPostSnapshot.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK to post for version update/correction."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer FK (nullable) for new version authoring."},{"type":"null","format":"uuid","description":"Customer FK (nullable) for new version authoring."}],"description":"Customer FK (nullable) for new version authoring."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller FK (nullable) for version update."},{"type":"null","format":"uuid","description":"Seller FK (nullable) for version update."}],"description":"Seller FK (nullable) for version update."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin FK (nullable) for correction/version fix."},{"type":"null","format":"uuid","description":"Admin FK (nullable) for correction/version fix."}],"description":"Admin FK (nullable) for correction/version fix."},"title":{"type":"string","description":"Title to update version with."},"body":{"type":"string","description":"Body/content to update."},"role_type":{"type":"string","description":"Role (customer/seller/admin) for update context."},"status":{"type":"string","description":"Status string for this version update."},"snapshot_reason":{"type":"string","description":"Update/correction reason—reflects why version update exists."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for updated version (override if business logic allows)."}},"required":["post_id","title","body","role_type","status","snapshot_reason","created_at"],"description":"Update/replace request DTO for ai_shop_post_snapshots (rare, audit/compliance fix case)."},"IStandardDeleteResult":{"type":"object","properties":{"success":{"type":"boolean","description":"True if deletion was successful; false if not."},"message":{"type":"string","description":"Optional human-readable status message, especially for failures or business-logic rejections (e.g., FK constraint or non-existent row)."}},"required":["success"],"description":"Standard result for DELETE operations, indicating if operation was successful and optional message (failure/cause)."},"IAiShopPostRecommendation.IRequest":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"The unique identifier of the post (ai_shop_posts) being recommended. Used as a filter or search parameter in listing personalized recommendation logs.\n\nThis property is critical for searching recommendations that target or reference a specific post, reflecting business needs for traceability and analytics."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"The unique identifier of the customer for whom the recommendation is personalized, or null if searching for global or non-customer recommendations. Referenced from ai_shop_customers.id in the schema.\n\nEnables searching for customer-specific recommendations or analytics aggregation."},{"type":"null","format":"uuid","description":"The unique identifier of the customer for whom the recommendation is personalized, or null if searching for global or non-customer recommendations. Referenced from ai_shop_customers.id in the schema.\n\nEnables searching for customer-specific recommendations or analytics aggregation."}],"description":"The unique identifier of the customer for whom the recommendation is personalized, or null if searching for global or non-customer recommendations. Referenced from ai_shop_customers.id in the schema.\n\nEnables searching for customer-specific recommendations or analytics aggregation."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"The unique identifier of the seller entity for whom the recommendation was made, or null for non-seller targeting. From ai_shop_sellers.id in the schema.\n\nThis allows filtering for recommendations relevant to sellers, such as personalized content or campaign targeting. Nullable for audience flexibility."},{"type":"null","format":"uuid","description":"The unique identifier of the seller entity for whom the recommendation was made, or null for non-seller targeting. From ai_shop_sellers.id in the schema.\n\nThis allows filtering for recommendations relevant to sellers, such as personalized content or campaign targeting. Nullable for audience flexibility."}],"description":"The unique identifier of the seller entity for whom the recommendation was made, or null for non-seller targeting. From ai_shop_sellers.id in the schema.\n\nThis allows filtering for recommendations relevant to sellers, such as personalized content or campaign targeting. Nullable for audience flexibility."},"target_type":{"type":"string","description":"The audience type for the recommendation, defining whether the recommendation targets a customer, seller, or global audience. E.g., 'customer', 'seller', 'global'.\n\nThis controls how recommendations are analyzed and filtered in analytics or personalization reporting."},"reason":{"type":"string","description":"Textual reason or code for why the recommendation was made. E.g., 'AI', 'trending', 'campaign'.\n\nUsed for filtering or aggregating recommendations by algorithm or marketing reason. Enables business logic for effectiveness and attribution analyses."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 Datetime string for when the recommendation was created. Allows searching for recommendations in a specific time window for analytics or reporting.\n\nRefers to ai_shop_post_recommendations.created_at."}},"description":"Request and filter body for querying ai_shop_post_recommendations (post recommendation logs) with advanced parameters. This object is used for PATCH/list/search endpoints and enables flexible business filtering for analytics, reporting, or debugging of AI-powered post recommendations.\n\nAll properties strictly align with the ai_shop_post_recommendations Prisma schema. Only atomic filter/search controls are present with support for nulls to enable broad audience/target searches.","required":[]},"IPageAiShopPostRecommendation":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata and controls for the current page of ai_shop_post_recommendations. See standard IPage definition."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostRecommendation"},"description":"Array of ai_shop_post_recommendation records for the returned page. Each entry represents a recommendation event, as persisted in the database."}},"required":["pagination","data"],"description":"A paginated result set for ai_shop_post_recommendations query operations, as required by administrative analytics panels and listing UIs.\n\nThis object follows the standard IPage<T> format. Each record is a normalized instance of IAiShopPostRecommendation, allowing for structured table views or detail navigation."},"IAiShopPostRecommendation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier for the post recommendation record.\n\nSee ai_shop_post_recommendations.id in the Prisma schema. Used for audit, page navigation, and analytics."},"post_id":{"type":"string","format":"uuid","description":"Foreign key reference to the recommended post in ai_shop_posts. Identifies the post this recommendation refers to.\n\nRequired for audit and traceability of recommendation targets."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional foreign key to the recommended customer (target of personalization). Null if recommendation is not customer-specific.\n\nFrom ai_shop_post_recommendations.ai_shop_customer_id."},{"type":"null","format":"uuid","description":"Optional foreign key to the recommended customer (target of personalization). Null if recommendation is not customer-specific.\n\nFrom ai_shop_post_recommendations.ai_shop_customer_id."}],"description":"Optional foreign key to the recommended customer (target of personalization). Null if recommendation is not customer-specific.\n\nFrom ai_shop_post_recommendations.ai_shop_customer_id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional foreign key to the recommended seller (for seller-personalized views). Null if not seller-specific.\n\nEnables analytics/reporting on seller-targeted events."},{"type":"null","format":"uuid","description":"Optional foreign key to the recommended seller (for seller-personalized views). Null if not seller-specific.\n\nEnables analytics/reporting on seller-targeted events."}],"description":"Optional foreign key to the recommended seller (for seller-personalized views). Null if not seller-specific.\n\nEnables analytics/reporting on seller-targeted events."},"target_type":{"type":"string","description":"The type of recommendation targeting: 'customer', 'seller', 'global', etc. Used for analysis, UI filtering, and audience-specific reporting.\n\nPopulated from ai_shop_post_recommendations.target_type."},"reason":{"type":"string","description":"Business or AI reason for the recommendation (e.g., 'AI', 'trending', 'campaign'). Used for diagnostic and analytics workflows.\n\nPopulated from ai_shop_post_recommendations.reason."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the recommendation event record was created. Audit and time-series reporting uses this field.\n\nPopulated from ai_shop_post_recommendations.created_at."}},"required":["id","post_id","target_type","reason","created_at"],"description":"Represents a single AI-powered or campaign-driven post recommendation in the ai_shop_post_recommendations table.\n\nThis schema is strictly normalized according to the AI Shop requirements and Prisma schema. Used for analytics, personalization debugging, admin drill-down, and automated dashboarding. Only atomic, schema-defined fields are present; all referential fields are included for foreign key navigation and auditability."},"IAiShopPostRecommendation.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"Foreign key to the post being recommended (ai_shop_posts.id). Required for all recommendations.\n\nThis property forms the backbone of post-centric recommendations, allowing analytics and personalization workflows to trace targets accurately."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID FK to customer (ai_shop_customers.id), required if the recommendation is personalized for a specific customer. Nullable for global/campaign recommendations.\n\nAllows for targeting and audit of personalization events."},{"type":"null","format":"uuid","description":"UUID FK to customer (ai_shop_customers.id), required if the recommendation is personalized for a specific customer. Nullable for global/campaign recommendations.\n\nAllows for targeting and audit of personalization events."}],"description":"UUID FK to customer (ai_shop_customers.id), required if the recommendation is personalized for a specific customer. Nullable for global/campaign recommendations.\n\nAllows for targeting and audit of personalization events."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID FK to seller (ai_shop_sellers.id), required if recommendation addresses a specific seller view. Nullable for broader targeting.\n\nEnables specialized campaign targeting or seller-specific AI workflows."},{"type":"null","format":"uuid","description":"UUID FK to seller (ai_shop_sellers.id), required if recommendation addresses a specific seller view. Nullable for broader targeting.\n\nEnables specialized campaign targeting or seller-specific AI workflows."}],"description":"UUID FK to seller (ai_shop_sellers.id), required if recommendation addresses a specific seller view. Nullable for broader targeting.\n\nEnables specialized campaign targeting or seller-specific AI workflows."},"target_type":{"type":"string","description":"Required. Audience or targeting type. Must match business logic for audience separation (e.g., 'customer', 'seller', 'global'). Populates target_type in db.\n\nUsed for downstream analytics and operational segmentation."},"reason":{"type":"string","description":"Required. Encodes 'why' for the recommendation (AI, trending, campaign, manual, etc). Describes business logic for auditing/attribution.\n\nPopulates ai_shop_post_recommendations.reason. This is critical for campaign effectiveness and diagnostics."}},"required":["post_id","target_type","reason"],"description":"Create schema for a new post recommendation record in ai_shop_post_recommendations. Used in AI pipelines, campaign workflows, or admin/driven post recommendation targeting.\n\nRequired properties strictly mirror the Prisma schema fields required for successful DB insert. Optional customer/seller IDs allow polymorphic audience targeting as defined by business rules."},"IAiShopPostRecommendation.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"Foreign key to the post being recommended (ai_shop_posts.id). Only update if post association changes.\n\nRequired for invariant recommendation context."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer FK, nullable, for updating/retargeting personalization."},{"type":"null","format":"uuid","description":"Customer FK, nullable, for updating/retargeting personalization."}],"description":"Customer FK, nullable, for updating/retargeting personalization."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller FK, nullable. Used when retargeting recommendation towards another seller."},{"type":"null","format":"uuid","description":"Seller FK, nullable. Used when retargeting recommendation towards another seller."}],"description":"Seller FK, nullable. Used when retargeting recommendation towards another seller."},"target_type":{"type":"string","description":"Updated audience type or scope, if changed in business logic for the recommendation target."},"reason":{"type":"string","description":"Update or correction for the recommendation's reason (AI algorithm, trending, manual, etc). Adjusted for campaign/audit traces."}},"description":"Update schema for mutable fields of ai_shop_post_recommendations record. Supports retargeting, audience reclassification, or campaign correction workflows. Does not include id or system-generated fields (created_at). Business validation required for referential changes.","required":[]},"IAiShopPostReport.IRequest":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"Filter by the reported post's unique identifier (ai_shop_posts.id). Enables searching for all reports claiming issues with a specific post. Required for audit, moderation workflows, and analytics."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by the customer reporter's uuid. Enables search/aggregation of all reports filed by a particular customer for moderation, compliance, or abuse detection.\n\nSchema aligns with ai_shop_post_reports.ai_shop_customer_id."},{"type":"null","format":"uuid","description":"Optional filter by the customer reporter's uuid. Enables search/aggregation of all reports filed by a particular customer for moderation, compliance, or abuse detection.\n\nSchema aligns with ai_shop_post_reports.ai_shop_customer_id."}],"description":"Optional filter by the customer reporter's uuid. Enables search/aggregation of all reports filed by a particular customer for moderation, compliance, or abuse detection.\n\nSchema aligns with ai_shop_post_reports.ai_shop_customer_id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by seller reporter's uuid. Used for tracking/surfacing seller-originated reports. From ai_shop_post_reports.ai_shop_seller_id. Used in seller-centric moderation dashboards."},{"type":"null","format":"uuid","description":"Optional filter by seller reporter's uuid. Used for tracking/surfacing seller-originated reports. From ai_shop_post_reports.ai_shop_seller_id. Used in seller-centric moderation dashboards."}],"description":"Optional filter by seller reporter's uuid. Used for tracking/surfacing seller-originated reports. From ai_shop_post_reports.ai_shop_seller_id. Used in seller-centric moderation dashboards."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by admin reporter's uuid. Useful for analytics of admin-originated post reports. Referenced from ai_shop_post_reports.ai_shop_admin_id in schema."},{"type":"null","format":"uuid","description":"Optional filter by admin reporter's uuid. Useful for analytics of admin-originated post reports. Referenced from ai_shop_post_reports.ai_shop_admin_id in schema."}],"description":"Optional filter by admin reporter's uuid. Useful for analytics of admin-originated post reports. Referenced from ai_shop_post_reports.ai_shop_admin_id in schema."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter by the moderation action FK (nullable). Useful for finding all reports addressed by a specific moderation action, or for triaging unresolved reports.\n\nField is nullable and aligns with ai_shop_post_reports.moderation_action_id."},{"type":"null","format":"uuid","description":"Filter by the moderation action FK (nullable). Useful for finding all reports addressed by a specific moderation action, or for triaging unresolved reports.\n\nField is nullable and aligns with ai_shop_post_reports.moderation_action_id."}],"description":"Filter by the moderation action FK (nullable). Useful for finding all reports addressed by a specific moderation action, or for triaging unresolved reports.\n\nField is nullable and aligns with ai_shop_post_reports.moderation_action_id."},"reason":{"type":"string","description":"Search/filter all post reports for a particular reason, as specified by the reporter. Textual filter. Useful for analytics, reporting, and moderation dashboards focused on content or policy breaches."},"created_at":{"type":"string","format":"date-time","description":"Filter by the creation timestamp (ISO8601). Allows searching for reports within a specific time window for audit, compliance, or moderation queue processing.\n\nSchemas aligns with ai_shop_post_reports.created_at."}},"description":"Request/filter/search schema for listing post reports in ai_shop_post_reports for moderation, audit, or compliance workflows. All optional filters map directly to the schema and support advanced dashboard analytics, triage, and root cause investigation flows.","required":[]},"IPageAiShopPostReport":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard IPage pagination info for page-aware UI and reporting."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPostReport"},"description":"Array of ai_shop_post_reports (post report) records on this page. Each row is a normalized report instance."}},"required":["pagination","data"],"description":"A paginated result set containing post report entities from ai_shop_post_reports. Used for admin, moderation, or compliance modules that manage large volumes of report events."},"IAiShopPostReport":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique report record ID from ai_shop_post_reports.id. Used for navigation, audit, and linking moderation events."},"post_id":{"type":"string","format":"uuid","description":"FK reference to reported post in ai_shop_posts. Links the report to the content in question for traceability and UI display."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to the reporting customer. Populated if report originated from a customer actor. Used for audit, abuse detection, and compliance. From ai_shop_post_reports.ai_shop_customer_id."},{"type":"null","format":"uuid","description":"Nullable FK to the reporting customer. Populated if report originated from a customer actor. Used for audit, abuse detection, and compliance. From ai_shop_post_reports.ai_shop_customer_id."}],"description":"Nullable FK to the reporting customer. Populated if report originated from a customer actor. Used for audit, abuse detection, and compliance. From ai_shop_post_reports.ai_shop_customer_id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to reporting seller, per ai_shop_post_reports.ai_shop_seller_id. Used to separate seller-initiated reports from customer/admin flows."},{"type":"null","format":"uuid","description":"Nullable FK to reporting seller, per ai_shop_post_reports.ai_shop_seller_id. Used to separate seller-initiated reports from customer/admin flows."}],"description":"Nullable FK to reporting seller, per ai_shop_post_reports.ai_shop_seller_id. Used to separate seller-initiated reports from customer/admin flows."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to the admin reporter, as per ai_shop_post_reports.ai_shop_admin_id. Used for reporting by platform staff and audit traceability."},{"type":"null","format":"uuid","description":"Nullable FK to the admin reporter, as per ai_shop_post_reports.ai_shop_admin_id. Used for reporting by platform staff and audit traceability."}],"description":"Nullable FK to the admin reporter, as per ai_shop_post_reports.ai_shop_admin_id. Used for reporting by platform staff and audit traceability."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to moderation action log (ai_shop_moderation_actions.id). Links report to moderation outcome/action for root-cause/case review."},{"type":"null","format":"uuid","description":"Nullable FK to moderation action log (ai_shop_moderation_actions.id). Links report to moderation outcome/action for root-cause/case review."}],"description":"Nullable FK to moderation action log (ai_shop_moderation_actions.id). Links report to moderation outcome/action for root-cause/case review."},"reason":{"type":"string","description":"Reporter-provided reason for filing this report. Required and atomic. Used for filtering, analytics, and moderation triage."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the report was created. Audit and time-series features reference this field for ordering and compliance checks."}},"required":["id","post_id","reason","created_at"],"description":"Represents a single report event filed against a bulletin board post in ai_shop_post_reports. Used for moderation intake, diagnostics, triage, and compliance auditing.\n\nSchema-compliant with Prisma; includes all foreign key and content fields required for root-cause investigation and dashboard linking."},"IAiShopPostReports.ICreate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"UUID FK to the post being reported (ai_shop_posts.id). Required for all report entity creation; identifies the subject of the report.\n\nPopulating this field enables moderation traceability and abuse analytics."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. Reporting customer UUID (ai_shop_customers.id). Used for customer-originated reports and attribution. Optional for polymorphic actor scenarios. Nullable for seller or admin reports.\n\nThis enables correct source tracking for analytics."},{"type":"null","format":"uuid","description":"Nullable. Reporting customer UUID (ai_shop_customers.id). Used for customer-originated reports and attribution. Optional for polymorphic actor scenarios. Nullable for seller or admin reports.\n\nThis enables correct source tracking for analytics."}],"description":"Nullable. Reporting customer UUID (ai_shop_customers.id). Used for customer-originated reports and attribution. Optional for polymorphic actor scenarios. Nullable for seller or admin reports.\n\nThis enables correct source tracking for analytics."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. Reporting seller UUID (ai_shop_sellers.id). Used for seller-originated reports and compliance attribution workflows."},{"type":"null","format":"uuid","description":"Nullable. Reporting seller UUID (ai_shop_sellers.id). Used for seller-originated reports and compliance attribution workflows."}],"description":"Nullable. Reporting seller UUID (ai_shop_sellers.id). Used for seller-originated reports and compliance attribution workflows."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. Admin reporting the issue (ai_shop_admins.id). Enables triage and audit traceability for policy breach detection.\n\nThis structure aligns with flexible role assignment for reporting flows."},{"type":"null","format":"uuid","description":"Nullable. Admin reporting the issue (ai_shop_admins.id). Enables triage and audit traceability for policy breach detection.\n\nThis structure aligns with flexible role assignment for reporting flows."}],"description":"Nullable. Admin reporting the issue (ai_shop_admins.id). Enables triage and audit traceability for policy breach detection.\n\nThis structure aligns with flexible role assignment for reporting flows."},"reason":{"type":"string","description":"Required. Subject/reason text for filing the report. Directly populates ai_shop_post_reports.reason. Used for dashboarding and abusive content detection. Not nullable."}},"required":["post_id","reason"],"description":"DTO for creating a new post report entity in ai_shop_post_reports. Allows polymorphic actor reporting (customer/seller/admin) via nullable FKs. All fields strictly per schema. Every creation must specify the post and a textual reason; actor fields are used for audit and compliance flows."},"IAiShopPostReports":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the report entry, generated at creation. Required for linking, navigation, and compliance."},"post_id":{"type":"string","format":"uuid","description":"The reported post's id. Foreign key; required for core linkage and moderation workflows."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the reporting customer, if present. Nullable for flexibility in actor identity."},{"type":"null","format":"uuid","description":"FK to the reporting customer, if present. Nullable for flexibility in actor identity."}],"description":"FK to the reporting customer, if present. Nullable for flexibility in actor identity."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the reporting seller, if present. Nullable."},{"type":"null","format":"uuid","description":"FK to the reporting seller, if present. Nullable."}],"description":"FK to the reporting seller, if present. Nullable."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the reporting admin, if present. Nullable."},{"type":"null","format":"uuid","description":"FK to the reporting admin, if present. Nullable."}],"description":"FK to the reporting admin, if present. Nullable."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable. FKey to action table if the report has been addressed or linked to a specific moderation action."},{"type":"null","format":"uuid","description":"Nullable. FKey to action table if the report has been addressed or linked to a specific moderation action."}],"description":"Nullable. FKey to action table if the report has been addressed or linked to a specific moderation action."},"reason":{"type":"string","description":"Non-nullable. The reporter's textual explanation for the issue. Basis for triage, analytics, moderation queue intake."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601). Allows time-series navigation and audit compliance."}},"required":["id","post_id","reason","created_at"],"description":"Serialized entity DTO for ai_shop_post_reports. Used as part of paginated lists, moderation panels, compliance review, and detailed links from admin workflow UIs. FKs to all reporting actor scenarios included for flexible business logic."},"IAiShopPostReports.IUpdate":{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"FK. If needed, changes the subject post of the report. Only used in error correction/audit fix scenarios. Not for regular business update."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Correction field for changing the reporting customer actor. Nullable; used if actor attribution must be changed."},{"type":"null","format":"uuid","description":"Correction field for changing the reporting customer actor. Nullable; used if actor attribution must be changed."}],"description":"Correction field for changing the reporting customer actor. Nullable; used if actor attribution must be changed."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Correction field for reporting seller actor, nullable for flexibility in audit correction."},{"type":"null","format":"uuid","description":"Correction field for reporting seller actor, nullable for flexibility in audit correction."}],"description":"Correction field for reporting seller actor, nullable for flexibility in audit correction."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Correction field for reporting admin actor, nullable as above."},{"type":"null","format":"uuid","description":"Correction field for reporting admin actor, nullable as above."}],"description":"Correction field for reporting admin actor, nullable as above."},"moderation_action_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK for directly linking the report to a moderation action, e.g. after adjudication or manual workflow."},{"type":"null","format":"uuid","description":"FK for directly linking the report to a moderation action, e.g. after adjudication or manual workflow."}],"description":"FK for directly linking the report to a moderation action, e.g. after adjudication or manual workflow."},"reason":{"type":"string","description":"Editable field for correcting or supplementing the report's subject or notes. Used in audit compliance and legal scenarios."}},"description":"DTO for updating ai_shop_post_reports records. Only atomic, schema-defined fields included. Used in compliance, legal correction, and audit fix scenarios for moderation records.","required":[]},"IAiShopCommentAttachments.IRequest":{"type":"object","properties":{"comment_id":{"type":"string","format":"uuid","description":"FK reference to ai_shop_post_comments. Filter/search for attachments to a specific comment for thread views."},"file_id":{"type":"string","format":"uuid","description":"FK to ai_shop_files. Enables search for all attachments referencing a specific file asset for analytics or moderation purposes."},"name":{"type":"string","description":"Filter by attachment filename (original or logical name). Enables textual search for matching file display names in comment attachments."},"type":{"type":"string","description":"Filter by attachment type, such as 'image/png', 'application/pdf', etc. Used for document filtering or type-based moderation queues."},"size":{"type":"integer","description":"Attachment size (bytes). Filter for files of a certain size in comment attachment listings."}},"description":"Search/filter/page DTO for query operations against ai_shop_comment_attachments table. Each field is directly from schema and is atomic for query optimization and analytics. Used for moderation review, UI listing, and forensic log review.","required":[]},"IPageAiShopCommentAttachments":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information for the result set.\n\nContains the current page number, record limit per page, total records, and total pages. Refers to the standard IPage.IPagination type for pagination data."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCommentAttachments"},"description":"Array of ai_shop_comment_attachments records matching the current filter, search, or pagination state. Each item fully represents one comment attachment entity."}},"required":["pagination","data"],"description":"Paginated result set for ai_shop_comment_attachments type entities.\n\nContains both the pagination metadata and an array of ai_shop_comment_attachments objects matching the query parameters. Used for list/search endpoints and grid/table UIs."},"IAiShopCommentAttachments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for the comment attachment entry.\n\nDirect reference to the record. Fulfills normalized attachment requirement as per schema."},"comment_id":{"type":"string","format":"uuid","description":"Comment entity id this attachment is linked to.\n\nForeign key to ai_shop_post_comments.id, required for referential integrity."},"file_id":{"type":"string","format":"uuid","description":"File reference id for the attached file object in ai_shop_files.\n\nImplements 3NF file/attachment reference logic. Respects normalized file management patterns."},"name":{"type":"string","description":"Attachment display name for UI, admin, or user clarification. Typically matches original file name or user-labeled attachment."},"type":{"type":"string","description":"Attachment MIME/type or file class (e.g., 'image/png', 'application/pdf').\n\nUsed for programmatic content preview and routing."},"size":{"type":"integer","description":"File size in bytes. Implements business and audit requirements for attachment size tracking.\n\nUsed for enforcing file size limits per policy."}},"required":["id","comment_id","file_id","name","type","size"],"description":"Represents a single file attachment record tied to a comment on a bulletin post.\n\nImplements normalized link between ai_shop_post_comments and ai_shop_files for media/files. Includes metadata for file access, type, and audit."},"IAiShopCommentAttachments.ICreate":{"type":"object","properties":{"comment_id":{"type":"string","format":"uuid","description":"The unique identifier for the comment to which this attachment will be linked. Must correspond to an existing ai_shop_post_comments.id."},"file_id":{"type":"string","format":"uuid","description":"The file id (ai_shop_files.id) which provides the binary/blob content and metadata.\n\nReferential integrity must be enforced to ensure file existence."},"name":{"type":"string","description":"Display name or label for the file attachment (commonly original file name or user-upload label)."},"type":{"type":"string","description":"Attachment file mime type or category (e.g., 'image/png'). Must match the uploaded file's content type."},"size":{"type":"integer","description":"Attachment file size in bytes. Used for quota management and policy enforcement."}},"required":["comment_id","file_id","name","type","size"],"description":"Creation shape for a new comment attachment in ai_shop_comment_attachments.\n\nIncludes all values except the PK (id), which is generated on insert. Requires full linkage, metadata, and file size for system enforcement."},"IAiShopCommentAttachments.IUpdate":{"type":"object","properties":{"comment_id":{"type":"string","format":"uuid","description":"Optionally update the linked comment (ai_shop_post_comments.id). Rarely changed after initial insert, but permitted by shape."},"file_id":{"type":"string","format":"uuid","description":"Optionally update the referenced file object (ai_shop_files.id), in the rare event that file is swapped for a correction or admin override."},"name":{"type":"string","description":"Edit/display label for the file attachment. Used for UI user correction or re-labeling after file upload."},"type":{"type":"string","description":"Edit or correction of the file's content-type/mime, if business needs require."},"size":{"type":"integer","description":"Amendment of file size in the event of a corrected upload or file metadata fix."}},"required":[],"description":"Update object for comment attachment entity.\n\nPermits changes to linked file/comment, label, mime type, and file size. The id of the comment attachment is implied by path selection, not included here."},"IAiShopModerationActions.IRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Filter for moderation action by unique id."},"moderator_id":{"type":"string","format":"uuid","description":"Filter for admin who performed the moderation action."},"post_id":{"type":"string","format":"uuid","description":"Filter moderation actions that targeted a specific post."},"comment_id":{"type":"string","format":"uuid","description":"Filter moderation actions that targeted a specific comment."},"action_type":{"type":"string","description":"Filter moderation actions by action type (e.g., 'hide', 'delete', 'warn', 'restore'). Used for discovering all actions of a certain category."},"reason":{"type":"string","description":"Full-text or fuzzy search filter based on the moderation action reason."},"created_at_from":{"type":"string","format":"date-time","description":"Lower-bound timestamp filter for action creation date (search actions after this datetime)."},"created_at_to":{"type":"string","format":"date-time","description":"Upper-bound timestamp filter for action creation date (search actions before this datetime)."},"page":{"type":"integer","description":"Page number for pagination (optional, default 1)."},"limit":{"type":"integer","description":"Number of records per page (optional, default 20)."}},"required":[],"description":"Request / filter DTO for searching moderation action records.\n\nAllows filtering by any schema field, date bounding, paging, and full-text search within reason."},"IPageAiShopModerationActions":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata (current page, limit, total records/pages)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopModerationActions"},"description":"Array of moderation actions matching provided filters (as individual schema objects)."}},"required":["pagination","data"],"description":"Paginated result containing moderation action entities and paging metadata.\n\nUsed for mod dashboards, audit logs, compliance UI."},"IAiShopModerationActions":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique primary key (PK) for the moderation action log entry."},"moderator_id":{"type":"string","format":"uuid","description":"Foreign Key: Admin user ID who performed the moderation."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to ai_shop_posts (nullable, if moderation applies only to comment)."},{"type":"null"}],"description":"FK to ai_shop_posts (nullable, if moderation applies only to comment)."},"comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to ai_shop_post_comments (nullable, if moderation applies only to post or system context)."},{"type":"null"}],"description":"FK to ai_shop_post_comments (nullable, if moderation applies only to post or system context)."},"action_type":{"type":"string","description":"Type of moderation - e.g., 'hide', 'delete', 'warn', 'restore'. Must follow business logic for action events."},"reason":{"type":"string","description":"Moderator's provided reason for action. Required for audit and compliance."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of moderation action event (audit, compliance, BI)."}},"required":["id","moderator_id","action_type","reason","created_at"],"description":"A moderation action record logging admin/system responses to posts/comments.\n\nEach row represents a moderation event (e.g., hide, delete, warn, restore), referencing admin, post/comment, and including a reason/audit time."},"IAiShopModerationActions.ICreate":{"type":"object","properties":{"moderator_id":{"type":"string","format":"uuid","description":"FK to admin who executed the moderation. Must be an existing admin."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the affected post (nullable if comment is the only target)."},{"type":"null"}],"description":"FK to the affected post (nullable if comment is the only target)."},"comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK to the affected comment (nullable if action applies only to post)."},{"type":"null"}],"description":"FK to the affected comment (nullable if action applies only to post)."},"action_type":{"type":"string","description":"Enumeration/type of moderation performed (e.g., 'hide', 'delete', 'warn', 'restore')."},"reason":{"type":"string","description":"Required reason/annotation for auditing and compliance."}},"required":["moderator_id","action_type","reason"],"description":"Creation DTO for a new moderation action event in ai_shop_moderation_actions.\n\nCaptures admin reference, context (post, comment), type, and business justification."},"IAiShopModerationActions.IUpdate":{"type":"object","properties":{"moderator_id":{"type":"string","format":"uuid","description":"Update FK for admin actor; not usually altered after event, but present for override correctness."},"post_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update reference to post (nullable)."},{"type":"null"}],"description":"Update reference to post (nullable)."},"comment_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update reference to comment (nullable)."},{"type":"null"}],"description":"Update reference to comment (nullable)."},"action_type":{"type":"string","description":"Update moderation event type."},"reason":{"type":"string","description":"Update the reason for moderation (compliance reason, audit correction, etc.)"}},"required":[],"description":"Update DTO for moderation actions, allowing edits to admin, targets, action, and reason.\n\nPrimary key is handled by path parameter, not included in payload."},"aiShopCarts.IRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Filter by the unique identifier (UUID) of the cart."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Filter by the customer who owns the cart. Refers to ai_shop_customers.id."},"ai_shop_cart_session_id":{"type":"string","format":"uuid","description":"Filter by guest/anonymous cart session id if not associated with an authenticated user."},"status":{"type":"string","description":"Filter by status of the cart ('active', 'abandoned', 'converted', etc)."},"created_at_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) for cart creation datetime filter."},"created_at_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) for cart creation datetime filter."},"updated_at_from":{"type":"string","format":"date-time","description":"Lower bound (inclusive) for cart last update datetime filter."},"updated_at_to":{"type":"string","format":"date-time","description":"Upper bound (inclusive) for cart last update datetime filter."},"page":{"type":"integer","description":"Page number for pagination (starts at 1, default 1)."},"limit":{"type":"integer","description":"Number of records per page (default 20)."}},"required":[],"description":"Request/query DTO for listing and searching carts in ai_shop_carts. All filters and pagination settings are allowed as per schema and admin/customer dashboard needs."},"aiShopCarts.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata for cart list/grid/query result views. Includes page, total, limit, pages, etc."},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCarts"},"description":"Array of cart records matching the page and filter constraints (each entry is a full cart object)."}},"required":["pagination","data"],"description":"Paginated result set for cart query (ai_shop_carts table).\n\nAll records match the provided request DTO or filter set, and pagination includes UI navigation keys. Used in admin, customer, and guest dashboards."},"aiShopCarts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for each shopping cart.\n\nCorresponds to ai_shop_carts.id and is required for identifying, editing, or auditing carts."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the customer who owns this cart, if any. Nullable for guest/anonymous carts (see ai_shop_cart_session_id)."},{"type":"null"}],"description":"ID of the customer who owns this cart, if any. Nullable for guest/anonymous carts (see ai_shop_cart_session_id)."},"ai_shop_cart_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Cart session id for guest/unauthenticated flows. Nullable—if set, AI Shop maintains persistent cart state until session merges into customer cart."},{"type":"null"}],"description":"Cart session id for guest/unauthenticated flows. Nullable—if set, AI Shop maintains persistent cart state until session merges into customer cart."},"status":{"type":"string","description":"String encoding of cart lifecycle status. Typical values include 'active', 'abandoned', 'converted'. Dictates business logic and compliance retention."},"created_at":{"type":"string","format":"date-time","description":"Datetime when cart was created, for audit/event processing, compliance checks."},"updated_at":{"type":"string","format":"date-time","description":"Datetime when cart was last modified. Used for cart staleness/abandonment logic."},"abandoned_at":{"oneOf":[{"type":"string","format":"date-time","description":"If cart was considered abandoned (per business definition), records when it was flagged. Nullable—field is present only if cart status is 'abandoned'."},{"type":"null"}],"description":"If cart was considered abandoned (per business definition), records when it was flagged. Nullable—field is present only if cart status is 'abandoned'."}},"required":["id","status","created_at","updated_at"],"description":"Represents an individual shopping cart in the ai_shop_carts table (persistent for customers and guests).\n\nNormalizes cart status, ownership (customer or session), lifecycle, and audit fields according to the requirements."},"aiShopCarts.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Belonged customer's {@link ai_shop_customers.id} or null for guest carts."},{"type":"null","format":"uuid","description":"Belonged customer's {@link ai_shop_customers.id} or null for guest carts."}],"description":"Belonged customer's {@link ai_shop_customers.id} or null for guest carts."},"ai_shop_cart_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Belonged cart session's {@link ai_shop_cart_sessions.id} for unauthenticated/guest carts."},{"type":"null","format":"uuid","description":"Belonged cart session's {@link ai_shop_cart_sessions.id} for unauthenticated/guest carts."}],"description":"Belonged cart session's {@link ai_shop_cart_sessions.id} for unauthenticated/guest carts."},"status":{"type":"string","description":"Cart status flag, e.g. 'active', 'abandoned', etc."},"created_at":{"type":"string","format":"date-time","description":"Cart creation timestamp (audit field, required)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last cart update (audit, required)."},"abandoned_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when cart was considered abandoned (nullable)."},{"type":"null","format":"date-time","description":"Timestamp when cart was considered abandoned (nullable)."}],"description":"Timestamp when cart was considered abandoned (nullable)."}},"required":["status","created_at","updated_at"],"description":"Request body schema for creating a new ai_shop_carts entity. Represents a persistent cart for registered or guest users. All fields map to 3NF atomic columns in the ai_shop_carts table. Does NOT allow properties outside this set.\n\n- ai_shop_customer_id: Customer UUID or null for guest carts—mutually exclusive with ai_shop_cart_session_id.\n- ai_shop_cart_session_id: For guest carts only, references guest session.\n- status: 'active', 'abandoned', etc. as per business process.\n- created_at / updated_at: Auditing/timestamp, required.\n- abandoned_at: Optional; set only if the cart became abandoned.\n\nNo soft delete fields exist, so this is purely an insertion payload."},"aiShopCarts.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Customer to assign the cart to (can only be set if cart is not already linked to a customer)."},{"type":"null","format":"uuid","description":"Customer to assign the cart to (can only be set if cart is not already linked to a customer)."}],"description":"Customer to assign the cart to (can only be set if cart is not already linked to a customer)."},"ai_shop_cart_session_id":{"oneOf":[{"type":"string","format":"uuid","description":"Guest cart session (nullable)."},{"type":"null","format":"uuid","description":"Guest cart session (nullable)."}],"description":"Guest cart session (nullable)."},"status":{"type":"string","description":"Update cart status, e.g. 'active', 'abandoned', etc."},"abandoned_at":{"oneOf":[{"type":"string","format":"date-time","description":"Update abandoned_at timestamp if applicable."},{"type":"null","format":"date-time","description":"Update abandoned_at timestamp if applicable."}],"description":"Update abandoned_at timestamp if applicable."},"updated_at":{"type":"string","format":"date-time","description":"Set to now on modification."}},"required":["status","updated_at"],"description":"Update DTO for ai_shop_carts entity. Used when linking a cart to a customer on login, toggling status, or marking as abandoned. \n\n- ai_shop_customer_id: Updates association with a user (nullable for guest carts).\n- ai_shop_cart_session_id: For session merges, this may be set to null on login linkage.\n- status: New status.\n- abandoned_at: Set when cart is detected as abandoned.\n- updated_at: Current system timestamp."},"aiShopCartItems.IRequest":{"type":"object","properties":{"ai_shop_cart_id":{"type":"string","format":"uuid","description":"Parent cart id to filter by."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product id to filter by."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Product variant id to filter by."},"quantity":{"type":"integer","description":"Exact quantity to filter by."},"added_at__gte":{"type":"string","format":"date-time","description":"Include only items added after this date (inclusive)."},"added_at__lt":{"type":"string","format":"date-time","description":"Include only items added before this date (exclusive)."},"page":{"type":"integer","description":"Current page number in pagination."},"limit":{"type":"integer","description":"Max records per page."},"sort":{"type":"string","description":"Sort order for results."}},"required":[],"description":"Request DTO for searching, filtering and paginating ai_shop_cart_items entities. Only uses fields defined in the schema. Examples: filter by cart id, product, variant, or time windows for added_at. Pagination (page, limit) supported; sort field applies to SQL sort clause."},"aiShopCartItems.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page info meta."},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCartItems"},"description":"Array of cart item objects for the current page."}},"required":["pagination","data"],"description":"Paginated page result for cart items listing. Always contains 'pagination' object and a 'data' array of aiShopCartItems objects."},"aiShopCartItems":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique cart item id."},"ai_shop_cart_id":{"type":"string","format":"uuid","description":"Parent cart id."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product id for this cart item."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Variant id for this cart item."},"quantity":{"type":"integer","description":"Requested quantity of product variant (>=1)."},"added_at":{"type":"string","format":"date-time","description":"Time added to cart."},"updated_at":{"type":"string","format":"date-time","description":"Time last updated."}},"required":["id","ai_shop_cart_id","ai_shop_product_id","ai_shop_product_variant_id","quantity","added_at","updated_at"],"description":"Represents a line item in a cart—one SKU/variant with quantity. All fields are atomic per 3NF."},"aiShopCartItems.ICreate":{"type":"object","properties":{"ai_shop_cart_id":{"type":"string","format":"uuid","description":"ID of parent cart to add item to."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product being added."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Variant of product being added."},"quantity":{"type":"integer","description":"Quantity to add."},"added_at":{"type":"string","format":"date-time","description":"When added to cart."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for cart item."}},"required":["ai_shop_cart_id","ai_shop_product_id","ai_shop_product_variant_id","quantity","added_at","updated_at"],"description":"Request DTO for creating a new cart item in ai_shop_cart_items. All fields map to normalized schema: cart, product, variant, quantity, timestamps."},"aiShopCartItems.IUpdate":{"type":"object","properties":{"ai_shop_cart_id":{"type":"string","format":"uuid","description":"(Optional) Move to different cart."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Change product reference."},"ai_shop_product_variant_id":{"type":"string","format":"uuid","description":"Change variant reference."},"quantity":{"type":"integer","description":"Set new quantity."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for update."}},"required":["updated_at"],"description":"Update DTO for a cart item; use for changing quantity or updating product/variant reference. Only 'updated_at' required for audit compliance."},"aiShopCartSessions.IRequest":{"type":"object","properties":{"session_token":{"type":"string","description":"Session token for guest cart identification."},"created_at__gte":{"type":"string","format":"date-time","description":"Search only sessions created after this date (inclusive)."},"created_at__lt":{"type":"string","format":"date-time","description":"Search only sessions created before this date (exclusive)."},"page":{"type":"integer","description":"Current pagination page."},"limit":{"type":"integer","description":"Page size."}},"required":[],"description":"Search/filter/pagination parameters for ai_shop_cart_sessions list. Provides flexible lookup by session token, date, with standard paging controls."},"aiShopCartSessions.IPage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCartSession"}}},"required":["pagination","data"],"description":"Paginated response for guest cart sessions; array of session objects."},"IAiShopCartSession":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of cart session."},"session_token":{"type":"string","description":"Unique session token for unauthenticated/guest carts.\n"},"created_at":{"type":"string","format":"date-time","description":"Creation time for the session."},"updated_at":{"type":"string","format":"date-time","description":"Time of latest cart session activity/update."}},"required":["id","session_token","created_at","updated_at"],"description":"Represents guest cart session—persistence object for unauthenticated shopping. Linked to ai_shop_carts via ai_shop_cart_session_id."},"IAiShopCartSession.ICreate":{"type":"object","properties":{"session_token":{"type":"string","description":"Unique guest session token. Should be generated and unique per session."}},"required":["session_token"],"description":"Create a guest cart session record. Only non-null/session_token is required; timestamping handled by system."},"IAiShopCartSession.IUpdate":{"type":"object","properties":{"session_token":{"type":"string","description":"Change guest cart session token (rarely updated)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for session renewal."}},"required":["updated_at"],"description":"Update guest cart session, e.g. refreshing updated_at or transferring cart to a new guest token. Only updated_at required for compliance."},"IAiShopOrder.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination. Used to retrieve a specific portion of the order list. Optional; default determined by API handler."},{"type":"null","description":"Page number for pagination. Used to retrieve a specific portion of the order list. Optional; default determined by API handler."}],"description":"Page number for pagination. Used to retrieve a specific portion of the order list. Optional; default determined by API handler."},"limit":{"oneOf":[{"type":"integer","description":"Number of records per page. Controls the maximum results per response. Optional; defaults set at API layer."},{"type":"null","description":"Number of records per page. Controls the maximum results per response. Optional; defaults set at API layer."}],"description":"Number of records per page. Controls the maximum results per response. Optional; defaults set at API layer."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for orders made by a specific customer. Must be a valid UUID corresponding to ai_shop_customers.id."},{"type":"null","format":"uuid","description":"Filter for orders made by a specific customer. Must be a valid UUID corresponding to ai_shop_customers.id."}],"description":"Filter for orders made by a specific customer. Must be a valid UUID corresponding to ai_shop_customers.id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for orders fulfilled by a specific seller. Must match ai_shop_sellers.id."},{"type":"null","format":"uuid","description":"Filter for orders fulfilled by a specific seller. Must match ai_shop_sellers.id."}],"description":"Filter for orders fulfilled by a specific seller. Must match ai_shop_sellers.id."},"ai_shop_cart_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for orders based on cart association. Must match ai_shop_carts.id."},{"type":"null","format":"uuid","description":"Filter for orders based on cart association. Must match ai_shop_carts.id."}],"description":"Filter for orders based on cart association. Must match ai_shop_carts.id."},"order_number":{"oneOf":[{"type":"string","description":"Unique business order identifier. May be used for precise search."},{"type":"null","description":"Unique business order identifier. May be used for precise search."}],"description":"Unique business order identifier. May be used for precise search."},"status":{"oneOf":[{"type":"string","description":"Order status filter. Example values: pending, paid, delivered, refunded (no enum constraint due to dynamic business values)."},{"type":"null","description":"Order status filter. Example values: pending, paid, delivered, refunded (no enum constraint due to dynamic business values)."}],"description":"Order status filter. Example values: pending, paid, delivered, refunded (no enum constraint due to dynamic business values)."},"payment_method":{"oneOf":[{"type":"string","description":"Payment method code filter (e.g., card, deposit, coupon)."},{"type":"null","description":"Payment method code filter (e.g., card, deposit, coupon)."}],"description":"Payment method code filter (e.g., card, deposit, coupon)."},"submitted_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for orders submitted after or on this datetime (inclusive, ISO8601 format)."},{"type":"null","format":"date-time","description":"Filter for orders submitted after or on this datetime (inclusive, ISO8601 format)."}],"description":"Filter for orders submitted after or on this datetime (inclusive, ISO8601 format)."},"submitted_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for orders submitted before or on this datetime (inclusive, ISO8601)."},{"type":"null","format":"date-time","description":"Filter for orders submitted before or on this datetime (inclusive, ISO8601)."}],"description":"Filter for orders submitted before or on this datetime (inclusive, ISO8601)."},"sort_by":{"oneOf":[{"type":"string","description":"Field to sort by (e.g., submitted_at, order_number)."},{"type":"null","description":"Field to sort by (e.g., submitted_at, order_number)."}],"description":"Field to sort by (e.g., submitted_at, order_number)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order: asc (ascending) or desc (descending). Optional."},{"const":"desc","description":"Sort order: asc (ascending) or desc (descending). Optional."},{"type":"null","enum":["asc","desc"],"description":"Sort order: asc (ascending) or desc (descending). Optional."}],"description":"Sort order: asc (ascending) or desc (descending). Optional."}},"description":"Request body for searching and paginating AI Shop orders (ai_shop_orders). Contains common filtering, sorting, and pagination fields for retrieving specific sets of order records, grounded in strict property correspondence with Prisma schema. All fields are optional and may be null—specified only when business logic dictates refined search.","required":[]},"IPageAiShopOrder":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for current order page (see standard IPage.IPagination component for structure)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrder"},"description":"Array of order records for this page."}},"required":["pagination","data"],"description":"Paginated results of ai_shop_orders records. Contains pagination information and an array of order records as defined by main ai_shop_orders schema."},"IAiShopOrder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Globally unique system identifier for this order."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer who placed the order (FK to ai_shop_customers.id)."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Seller fulfilling the order (FK to ai_shop_sellers.id)."},"ai_shop_cart_id":{"type":"string","format":"uuid","description":"Associated shopping cart containing purchased items (FK to ai_shop_carts.id)."},"order_number":{"type":"string","description":"Human/biz-recognizable unique order number (unique constraint, externally visible)."},"status":{"type":"string","description":"Order lifecycle status (e.g., pending, paid, shipped, delivered, refunded, cancelled). String; accepted values determined by business/domain rules."},"submitted_at":{"type":"string","format":"date-time","description":"Timestamp when the order was submitted/created; immutable after creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the order's last update."},"payment_method":{"type":"string","description":"Code representing the payment method chosen (e.g., card, deposit, coupon, mileage). String value as provided on order."},"customer_memo":{"oneOf":[{"type":"string","description":"Optional memo provided by the customer (e.g., special shipping instructions). Nullable."},{"type":"null","description":"Optional memo provided by the customer (e.g., special shipping instructions). Nullable."}],"description":"Optional memo provided by the customer (e.g., special shipping instructions). Nullable."},"admin_note":{"oneOf":[{"type":"string","description":"Optional admin-internal note/memo about this order. Null unless used by admin."},{"type":"null","description":"Optional admin-internal note/memo about this order. Null unless used by admin."}],"description":"Optional admin-internal note/memo about this order. Null unless used by admin."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete field: timestamp if the order is deleted, or null if not. Used for compliance audit/recovery."},{"type":"null","format":"date-time","description":"Soft delete field: timestamp if the order is deleted, or null if not. Used for compliance audit/recovery."}],"description":"Soft delete field: timestamp if the order is deleted, or null if not. Used for compliance audit/recovery."}},"required":["id","ai_shop_customer_id","ai_shop_seller_id","ai_shop_cart_id","order_number","status","submitted_at","updated_at","payment_method"],"description":"AI Shop Order schema. Represents a business order as recorded in ai_shop_orders. All fields directly reflect those in the Prisma DB entity. Includes FK references, audit fields, payment, status, and soft delete. This structure underpins all order record serialization for API responses."},"IAiShopOrder.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"FK to ai_shop_customers.id; required for order creation."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK to ai_shop_sellers.id; required for creation."},"ai_shop_cart_id":{"type":"string","format":"uuid","description":"FK to ai_shop_carts.id; records cart context/order provenance."},"order_number":{"type":"string","description":"Unique order number assigned/business logic to generate as required."},"status":{"type":"string","description":"Order status at creation. Must be one of allowed business values (e.g., pending, paid)."},"submitted_at":{"type":"string","format":"date-time","description":"Creation timestamp as ISO 8601 string."},"updated_at":{"type":"string","format":"date-time","description":"Initial updated timestamp; often same as submitted_at on creation."},"payment_method":{"type":"string","description":"Code of payment method selected (e.g., card, deposit, coupon, mileage)."},"customer_memo":{"oneOf":[{"type":"string","description":"Optional memo provided by customer. Nullable."},{"type":"null","description":"Optional memo provided by customer. Nullable."}],"description":"Optional memo provided by customer. Nullable."},"admin_note":{"oneOf":[{"type":"string","description":"Admin-only note at creation. Nullable."},{"type":"null","description":"Admin-only note at creation. Nullable."}],"description":"Admin-only note at creation. Nullable."}},"required":["ai_shop_customer_id","ai_shop_seller_id","ai_shop_cart_id","order_number","status","submitted_at","updated_at","payment_method"],"description":"Create DTO for new ai_shop_orders record. Requires all mandatory fields as per Prisma schema except id (which is system-generated). Nullables are optional."},"IAiShopOrder.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update customer reference (normally immutable; for admin correction only)."},{"type":"null","format":"uuid","description":"Update customer reference (normally immutable; for admin correction only)."}],"description":"Update customer reference (normally immutable; for admin correction only)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update seller reference. Optional; caution for business logic."},{"type":"null","format":"uuid","description":"Update seller reference. Optional; caution for business logic."}],"description":"Update seller reference. Optional; caution for business logic."},"ai_shop_cart_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update cart reference. Rarely changed."},{"type":"null","format":"uuid","description":"Update cart reference. Rarely changed."}],"description":"Update cart reference. Rarely changed."},"order_number":{"oneOf":[{"type":"string","description":"Update external order number; changes should be audited."},{"type":"null","description":"Update external order number; changes should be audited."}],"description":"Update external order number; changes should be audited."},"status":{"oneOf":[{"type":"string","description":"Change order status. Must be allowed by business workflow."},{"type":"null","description":"Change order status. Must be allowed by business workflow."}],"description":"Change order status. Must be allowed by business workflow."},"submitted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Change creation timestamp. Rare."},{"type":"null","format":"date-time","description":"Change creation timestamp. Rare."}],"description":"Change creation timestamp. Rare."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set order's update time at modification."},{"type":"null","format":"date-time","description":"Set order's update time at modification."}],"description":"Set order's update time at modification."},"payment_method":{"oneOf":[{"type":"string","description":"Update payment method code."},{"type":"null","description":"Update payment method code."}],"description":"Update payment method code."},"customer_memo":{"oneOf":[{"type":"string","description":"Change customer-provided memo."},{"type":"null","description":"Change customer-provided memo."}],"description":"Change customer-provided memo."},"admin_note":{"oneOf":[{"type":"string","description":"Update internal admin memo."},{"type":"null","description":"Update internal admin memo."}],"description":"Update internal admin memo."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set soft delete timestamp to soft delete/undelete the order."},{"type":"null","format":"date-time","description":"Set soft delete timestamp to soft delete/undelete the order."}],"description":"Set soft delete timestamp to soft delete/undelete the order."}},"required":[],"description":"Update DTO for mutating an ai_shop_orders record. All fields are optional and nullable. DTO is used to support admins and business process. System constraints enforce which fields are allowed to be edited depending on business logic."},"IAiShopOrderItem.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional)."},{"type":"null","description":"Page number for pagination (optional)."}],"description":"Page number for pagination (optional)."},"limit":{"oneOf":[{"type":"integer","description":"Results per page (optional; defaults at platform-level)."},{"type":"null","description":"Results per page (optional; defaults at platform-level)."}],"description":"Results per page (optional; defaults at platform-level)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order containing the item (FK to ai_shop_orders.id; used for filtering items within an order)."},{"type":"null","format":"uuid","description":"Order containing the item (FK to ai_shop_orders.id; used for filtering items within an order)."}],"description":"Order containing the item (FK to ai_shop_orders.id; used for filtering items within an order)."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Product identifier (FK to ai_shop_products.id) for filtering itemized SKUs."},{"type":"null","format":"uuid","description":"Product identifier (FK to ai_shop_products.id) for filtering itemized SKUs."}],"description":"Product identifier (FK to ai_shop_products.id) for filtering itemized SKUs."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"SKU/variant FK (nullable; null if item not tied to variant)."},{"type":"null","format":"uuid","description":"SKU/variant FK (nullable; null if item not tied to variant)."}],"description":"SKU/variant FK (nullable; null if item not tied to variant)."},"product_name":{"oneOf":[{"type":"string","description":"Filter by product name (atomic snapshot at time of order). May use full/partial string match according to implementation."},{"type":"null","description":"Filter by product name (atomic snapshot at time of order). May use full/partial string match according to implementation."}],"description":"Filter by product name (atomic snapshot at time of order). May use full/partial string match according to implementation."},"variant_name":{"oneOf":[{"type":"string","description":"Filter by variant display name (nullable; as snapshot at order time)."},{"type":"null","description":"Filter by variant display name (nullable; as snapshot at order time)."}],"description":"Filter by variant display name (nullable; as snapshot at order time)."},"quantity":{"oneOf":[{"type":"integer","description":"Filter by quantity (exact match or range depending on request body convention)."},{"type":"null","description":"Filter by quantity (exact match or range depending on request body convention)."}],"description":"Filter by quantity (exact match or range depending on request body convention)."},"unit_price":{"oneOf":[{"type":"number","description":"Filter by purchase unit price (exact match or min/max; JSON Schema supports only simple types here)."},{"type":"null","description":"Filter by purchase unit price (exact match or min/max; JSON Schema supports only simple types here)."}],"description":"Filter by purchase unit price (exact match or min/max; JSON Schema supports only simple types here)."},"currency":{"oneOf":[{"type":"string","description":"Currency code filter (e.g., USD, KRW, JPY—use appropriate string code)."},{"type":"null","description":"Currency code filter (e.g., USD, KRW, JPY—use appropriate string code)."}],"description":"Currency code filter (e.g., USD, KRW, JPY—use appropriate string code)."},"seller_memo":{"oneOf":[{"type":"string","description":"Filter by seller-side note (optional, nullable)."},{"type":"null","description":"Filter by seller-side note (optional, nullable)."}],"description":"Filter by seller-side note (optional, nullable)."}},"required":[],"description":"Request DTO for searching or paginating order items (ai_shop_order_items). All filter/sort fields correspond strictly to schema columns. All properties are optional or nullable for maximal flexibility."},"IPageAiShopOrderItem":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination info for current page—see shared description for IPage.IPagination."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderItem"},"description":"Current page's array of order items."}},"required":["pagination","data"],"description":"Paginated result set for order item records (ai_shop_order_items). Contains list and associated pagination info."},"IAiShopOrderItem":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of order item record."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK reference to ai_shop_orders.id (owning order)."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"FK reference to ai_shop_products.id."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"FK reference to ai_shop_product_variants.id (nullable if order line not tied to variant)."},{"type":"null","format":"uuid","description":"FK reference to ai_shop_product_variants.id (nullable if order line not tied to variant)."}],"description":"FK reference to ai_shop_product_variants.id (nullable if order line not tied to variant)."},"product_name":{"type":"string","description":"Product name at purchase (snapshot, not current name to guarantee historical traceability)."},"variant_name":{"oneOf":[{"type":"string","description":"Variant display name at purchase (snapshot, nullable)."},{"type":"null","description":"Variant display name at purchase (snapshot, nullable)."}],"description":"Variant display name at purchase (snapshot, nullable)."},"quantity":{"type":"integer","description":"Ordered quantity of this line item."},"unit_price":{"type":"number","description":"Unit price for this order line (float, as at purchase time)."},"currency":{"type":"string","description":"Currency code (e.g., USD/KRW/JPY); string only."},"seller_memo":{"oneOf":[{"type":"string","description":"Seller-side memo field for this line (nullable)."},{"type":"null","description":"Seller-side memo field for this line (nullable)."}],"description":"Seller-side memo field for this line (nullable)."}},"required":["id","ai_shop_order_id","ai_shop_product_id","product_name","quantity","unit_price","currency"],"description":"Order item schema (ai_shop_order_items). Describes a specific product (and optional variant) and relates it to order, quantity, price/currency, seller memo, etc. Used for listing all items of an order or filtering at SKU/variant granularity."},"IAiShopOrderItem.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Parent order ID; FK to ai_shop_orders.id."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"FK to ai_shop_products.id; which product is included in this item."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable SKU/variant; maps to ai_shop_product_variants.id. Null if the item is for a product without variants."},{"type":"null","format":"uuid","description":"Nullable SKU/variant; maps to ai_shop_product_variants.id. Null if the item is for a product without variants."}],"description":"Nullable SKU/variant; maps to ai_shop_product_variants.id. Null if the item is for a product without variants."},"product_name":{"type":"string","description":"Snapshot of product name at purchase (an audit field, not FK)."},"variant_name":{"oneOf":[{"type":"string","description":"Optional snapshot of the variant name at purchase (nullable)."},{"type":"null","description":"Optional snapshot of the variant name at purchase (nullable)."}],"description":"Optional snapshot of the variant name at purchase (nullable)."},"quantity":{"type":"integer","description":"How many of this SKU/variant were ordered in this item line."},"unit_price":{"type":"number","description":"Unit price at time of purchase."},"currency":{"type":"string","description":"3-letter currency code at point of sale."},"seller_memo":{"oneOf":[{"type":"string","description":"Memo attached by seller to this order item. Nullable."},{"type":"null","description":"Memo attached by seller to this order item. Nullable."}],"description":"Memo attached by seller to this order item. Nullable."}},"required":["ai_shop_order_id","ai_shop_product_id","product_name","quantity","unit_price","currency"],"description":"Create DTO for inserting a new order item record (ai_shop_order_items). Each order item must relate to an order, product, (optionally) a variant, and carry pricing details. FKs must be validated externally. All fields must map directly to schema."},"IAiShopOrderItems.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update parent order reference for the item (rare)."},{"type":"null","format":"uuid","description":"Update parent order reference for the item (rare)."}],"description":"Update parent order reference for the item (rare)."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update product id for the item line."},{"type":"null","format":"uuid","description":"Update product id for the item line."}],"description":"Update product id for the item line."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update SKU/variant association for this line (nullable, optional)."},{"type":"null","format":"uuid","description":"Update SKU/variant association for this line (nullable, optional)."}],"description":"Update SKU/variant association for this line (nullable, optional)."},"product_name":{"oneOf":[{"type":"string","description":"Update snapshot of product name (rare, for correction only)."},{"type":"null","description":"Update snapshot of product name (rare, for correction only)."}],"description":"Update snapshot of product name (rare, for correction only)."},"variant_name":{"oneOf":[{"type":"string","description":"Update the snapshot of variant name (nullable, correct only in edge cases)."},{"type":"null","description":"Update the snapshot of variant name (nullable, correct only in edge cases)."}],"description":"Update the snapshot of variant name (nullable, correct only in edge cases)."},"quantity":{"oneOf":[{"type":"integer","description":"Update the quantity of this order item."},{"type":"null","description":"Update the quantity of this order item."}],"description":"Update the quantity of this order item."},"unit_price":{"oneOf":[{"type":"number","description":"Change in unit price (e.g., after discount adjustment or correction)."},{"type":"null","description":"Change in unit price (e.g., after discount adjustment or correction)."}],"description":"Change in unit price (e.g., after discount adjustment or correction)."},"currency":{"oneOf":[{"type":"string","description":"Update the currency code."},{"type":"null","description":"Update the currency code."}],"description":"Update the currency code."},"seller_memo":{"oneOf":[{"type":"string","description":"Update seller's note (can clear with null or update as needed)."},{"type":"null","description":"Update seller's note (can clear with null or update as needed)."}],"description":"Update seller's note (can clear with null or update as needed)."}},"description":"Update DTO for ai_shop_order_items. Any field can be set to null if needed (for clarity/correction); required fields enforced by service layer. Use for PATCH/PUT-based update of order line content.","required":[]},"IAiShopOrderItems":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the order item."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"Reference to order ID (FK to ai_shop_orders.id)."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product ID (FK to ai_shop_products.id)."},"ai_shop_product_variant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Variant (SKU) ID (nullable)."},{"type":"null","format":"uuid","description":"Variant (SKU) ID (nullable)."}],"description":"Variant (SKU) ID (nullable)."},"product_name":{"type":"string","description":"Product name at time of purchase."},"variant_name":{"oneOf":[{"type":"string","description":"Variant name (nullable, as at purchase/audit time)."},{"type":"null","description":"Variant name (nullable, as at purchase/audit time)."}],"description":"Variant name (nullable, as at purchase/audit time)."},"quantity":{"type":"integer","description":"Purchased quantity."},"unit_price":{"type":"number","description":"Unit price for the order item line."},"currency":{"type":"string","description":"Currency code for this order item."},"seller_memo":{"oneOf":[{"type":"string","description":"Seller's note (nullable)."},{"type":"null","description":"Seller's note (nullable)."}],"description":"Seller's note (nullable)."}},"description":"Order item record, fully normalized as in ai_shop_order_items. Mirrors the database row structure for each individual order line.","required":[]},"IAiShopOrderStatusHistories.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional, for list endpoints)."},{"type":"null","description":"Page number for pagination (optional, for list endpoints)."}],"description":"Page number for pagination (optional, for list endpoints)."},"limit":{"oneOf":[{"type":"integer","description":"Number of records per page (optional; platform-level default if not set)."},{"type":"null","description":"Number of records per page (optional; platform-level default if not set)."}],"description":"Number of records per page (optional; platform-level default if not set)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order ID (FK to ai_shop_orders.id) to filter status histories for a specific order."},{"type":"null","format":"uuid","description":"Order ID (FK to ai_shop_orders.id) to filter status histories for a specific order."}],"description":"Order ID (FK to ai_shop_orders.id) to filter status histories for a specific order."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter for status changes made by a particular admin (FK to ai_shop_admins.id)."},{"type":"null","format":"uuid","description":"Filter for status changes made by a particular admin (FK to ai_shop_admins.id)."}],"description":"Filter for status changes made by a particular admin (FK to ai_shop_admins.id)."},"from_status":{"oneOf":[{"type":"string","description":"Filter by the status value prior to the change (string; flexible, depends on workflow/enum in business logic)."},{"type":"null","description":"Filter by the status value prior to the change (string; flexible, depends on workflow/enum in business logic)."}],"description":"Filter by the status value prior to the change (string; flexible, depends on workflow/enum in business logic)."},"to_status":{"oneOf":[{"type":"string","description":"Filter by status value after the change (string)."},{"type":"null","description":"Filter by status value after the change (string)."}],"description":"Filter by status value after the change (string)."},"changed_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for changes after or at this datetime (inclusive, ISO8601)."},{"type":"null","format":"date-time","description":"Filter for changes after or at this datetime (inclusive, ISO8601)."}],"description":"Filter for changes after or at this datetime (inclusive, ISO8601)."},"changed_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter for changes before or at this datetime (inclusive, ISO8601)."},{"type":"null","format":"date-time","description":"Filter for changes before or at this datetime (inclusive, ISO8601)."}],"description":"Filter for changes before or at this datetime (inclusive, ISO8601)."},"change_reason":{"oneOf":[{"type":"string","description":"Filter for status changes with a specific reason substring/filter."},{"type":"null","description":"Filter for status changes with a specific reason substring/filter."}],"description":"Filter for status changes with a specific reason substring/filter."}},"description":"Request DTO for filtering/listing order status history (ai_shop_order_status_histories). Supports all fields present in schema, with all properties optional.","required":[]},"IPageIAiShopOrderStatusHistories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderStatusHistories"}}},"required":["pagination","data"],"description":"A paginated set of order status history records. Used for efficient listing, filtering, and reporting of status changes throughout order workflows in the AI Shop backend. Complies with requirements for auditability, traceability, and business analytics.\n\nPagination provides details on the current offset/page and total available records. The data property contains the actual history records, each representing a single workflow change event for an order."},"IAiShopOrderStatusHistories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the order status history record. Uniquely identifies each status change for audit/compliance. Referenced in workflow audit trails.\n\nMust be a valid UUID."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"References the order entity (ai_shop_orders.id) to which this status change applies. Enables linking back to the parent transaction for complete traceability.\n\nEnforces referential integrity in audit queries."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional admin identifier who initiated the status change. Points to ai_shop_admins.id if this update was performed by an administrator; otherwise null for automated or system-driven events.\n\nCrucial for compliance and privilege escalations in operational flows."},{"type":"null","format":"uuid","description":"Optional admin identifier who initiated the status change. Points to ai_shop_admins.id if this update was performed by an administrator; otherwise null for automated or system-driven events.\n\nCrucial for compliance and privilege escalations in operational flows."}],"description":"Optional admin identifier who initiated the status change. Points to ai_shop_admins.id if this update was performed by an administrator; otherwise null for automated or system-driven events.\n\nCrucial for compliance and privilege escalations in operational flows."},"from_status":{"type":"string","description":"Order status (freeform string) that the order WAS in prior to this change. Enables precise tracking of workflow transitions in the lifecycle. Typical values: 'pending', 'paid', etc.\n\nRequired for rollback and audit processes."},"to_status":{"type":"string","description":"Order status value transitioned TO by this event. Important for synchronizing customer and seller experiences as well as compliance reporting.\n\nRecord is atomic and normalized; enumerated values stored as they appeared at time of change."},"changed_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when this status change occurred. Immutable for audit/compliance.\n\nAlways set by the system at the precise moment of the transaction, with timezone information preserved."},"change_reason":{"oneOf":[{"type":"string","description":"Optional field explaining why the status change was made. Typically supplied by an admin during manual transitions, or left null for automated/system events. Aids business analytics of cancellation, complaint, or refund workflows."},{"type":"null","description":"Optional field explaining why the status change was made. Typically supplied by an admin during manual transitions, or left null for automated/system events. Aids business analytics of cancellation, complaint, or refund workflows."}],"description":"Optional field explaining why the status change was made. Typically supplied by an admin during manual transitions, or left null for automated/system events. Aids business analytics of cancellation, complaint, or refund workflows."}},"required":["id","ai_shop_order_id","from_status","to_status","changed_at"],"description":"Order status history record. Represents an atomic, audited change in the progression of an order's status. Implements the history/audit trail requirements from Cart and Order System and order management documentation.\n\nIncludes: order reference, status before, status after, admin actor (optional), timestamp, and optional business justification (e.g. refund/cancel reason). Used in compliance, rollback, analytics, and process design."},"IAiShopOrderStatusHistories.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"References the order (ai_shop_orders.id) that this status change is part of. Required for inserting a new history record."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional admin acting as the agent of status change. Set to the admin id for manual changes, null for system/automated events."},{"type":"null","format":"uuid","description":"Optional admin acting as the agent of status change. Set to the admin id for manual changes, null for system/automated events."}],"description":"Optional admin acting as the agent of status change. Set to the admin id for manual changes, null for system/automated events."},"from_status":{"type":"string","description":"State value the order was in prior to this change."},"to_status":{"type":"string","description":"State value after the workflow transition."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp of this change. Set automatically if not provided."},"change_reason":{"oneOf":[{"type":"string","description":"Optional explanation or annotation for this transition. Used for moderation or complaint flows."},{"type":"null","description":"Optional explanation or annotation for this transition. Used for moderation or complaint flows."}],"description":"Optional explanation or annotation for this transition. Used for moderation or complaint flows."}},"required":["ai_shop_order_id","from_status","to_status","changed_at"],"description":"DTO for creating a new order status change record. Used in workflow automation or admin processes when acknowledging a transition in an order.\n\nAll properties strictly map to columns in ai_shop_order_status_histories; referential links and auditability are enforced."},"IAiShopOrderStatusHistories.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Order identifier for full tracking. REMAINS IMMUTABLE, but included for compliance/visibility in full replace operations."},"changed_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Admin id of actor for status change (can be null for automated events)."},{"type":"null","format":"uuid","description":"Admin id of actor for status change (can be null for automated events)."}],"description":"Admin id of actor for status change (can be null for automated events)."},"from_status":{"type":"string","description":"Previous state for this status snapshot."},"to_status":{"type":"string","description":"New/later state after transition event."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp when status changed. Should not be updated in practice except for rare audit corrections."},"change_reason":{"oneOf":[{"type":"string","description":"Optional annotation explaining transition."},{"type":"null","description":"Optional annotation explaining transition."}],"description":"Optional annotation explaining transition."}},"required":["ai_shop_order_id","from_status","to_status","changed_at"],"description":"DTO for updating a complete order status change record. Enables audit correction for rare super-admin or compliance use-cases (NOT intended for routine use).\n\nAll fields must reflect the schema definition. Use with caution, audit trail must be complete and accurate."},"IAiShopOrderRefunds.IRequest":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Filter by referenced ai_shop_orders.id slot if required. Used for searching only refund entries tied to a specific order."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"Filter by customer requesting the refund, ai_shop_customers.id."},"refund_reason":{"type":"string","description":"Optional filter on textual refund reason or substring thereof."},"refund_status":{"type":"string","description":"Workflow state of refund request. Used to search by status value for business reporting or resolution workflow. Example: 'requested', 'approved', 'denied', etc."},"requested_at":{"type":"string","format":"date-time","description":"Filter start/end by refund submission datetime. For temporal reporting, sorting, or data mining."},"processed_at":{"type":"string","format":"date-time","description":"Filter by time of refund processing (if present)."}},"description":"DTO for complex paging, search, or filter of order refund records (ai_shop_order_refunds). All filters aligned with normalized schema columns. Used in audit, analytics, or admin console search flows.","required":[]},"IPageIAiShopOrderRefunds":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderRefunds"}}},"required":["pagination","data"],"description":"Paginated list of order refund records for auditing/user experience reporting in AI Shop. Combines pagination metadata and array of atomic refund entries."},"IAiShopOrderRefunds":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the refund request entry. Business/audit reference for the unique transaction."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"References order (ai_shop_orders.id) this refund is tied to. Essential for data joins/audit."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"References customer (ai_shop_customers.id) requesting the refund. Enforces business traceability and aligns with data privacy logs."},"refund_reason":{"type":"string","description":"Textual description or motif for refund, as provided by the customer at request time. Used for dispute resolution or compliance reporting."},"refund_status":{"type":"string","description":"Enumerated workflow status (freeform string); typical values include 'requested', 'approved', 'denied', 'completed'. Used in administrative workflow and analytics."},"requested_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when refund was requested. Used for SLA, audit tracking, and analytics reporting."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable ISO8601 timestamp indicating when refund was finalized/processed (if at all). Null if incomplete/cancelled."},{"type":"null","format":"date-time","description":"Nullable ISO8601 timestamp indicating when refund was finalized/processed (if at all). Null if incomplete/cancelled."}],"description":"Nullable ISO8601 timestamp indicating when refund was finalized/processed (if at all). Null if incomplete/cancelled."},"admin_note":{"oneOf":[{"type":"string","description":"Optional note visible to administrators for compliance, internal audit, or workflow annotation."},{"type":"null","description":"Optional note visible to administrators for compliance, internal audit, or workflow annotation."}],"description":"Optional note visible to administrators for compliance, internal audit, or workflow annotation."}},"required":["id","ai_shop_order_id","requested_by_customer_id","refund_reason","refund_status","requested_at"],"description":"Order refund record. Implements core audit and workflow tracking for refund lifecycle in the commerce platform. Data structure follows business and compliance rules for customer-initiated refunds and admin handling."},"IAiShopOrderRefunds.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"References the order (ai_shop_orders.id) for which refund is being requested."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"ID of the customer requesting refund, referencing ai_shop_customers.id."},"refund_reason":{"type":"string","description":"Description provided by customer for refund request."},"refund_status":{"type":"string","description":"Initial workflow state of refund as assigned at the moment of creation ('requested', 'pending', etc.)."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp of refund submission (set by system or provided by user action)."},"admin_note":{"oneOf":[{"type":"string","description":"Auditing or compliance-related annotation for internal admin use."},{"type":"null","description":"Auditing or compliance-related annotation for internal admin use."}],"description":"Auditing or compliance-related annotation for internal admin use."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Processed/finalized time for immediate finalization on creation (optional)."},{"type":"null","format":"date-time","description":"Processed/finalized time for immediate finalization on creation (optional)."}],"description":"Processed/finalized time for immediate finalization on creation (optional)."}},"required":["ai_shop_order_id","requested_by_customer_id","refund_reason","refund_status","requested_at"],"description":"DTO for creating a new order refund record in AI Shop. Used at refund request workflows and admin/lawful adjustments. Adheres strictly to required refund audit fields in schema."},"IAiShopOrderRefunds.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"ID of target order for which refund record is held."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"ID of customer requesting refund."},"refund_reason":{"type":"string","description":"Customer-provided explanation for refund."},"refund_status":{"type":"string","description":"Updated status in admin workflow ('requested', 'approved', etc.)."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when request initiated."},"admin_note":{"oneOf":[{"type":"string","description":"Admin-visible annotation to justify workflow, or support documentation."},{"type":"null","description":"Admin-visible annotation to justify workflow, or support documentation."}],"description":"Admin-visible annotation to justify workflow, or support documentation."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When (if at all) refund request was finalized/closed."},{"type":"null","format":"date-time","description":"When (if at all) refund request was finalized/closed."}],"description":"When (if at all) refund request was finalized/closed."}},"required":["ai_shop_order_id","requested_by_customer_id","refund_reason","refund_status","requested_at"],"description":"DTO for full update/replace of an order refund record, aligning all audit fields and compliance data. For rare admin, legal, or compliance corrections. NOT for ordinary client-side use."},"IAiShopReturnRequest.IRequest":{"type":"object","properties":{"requested_by_customer_id":{"type":"string","format":"uuid","description":"Filter for returns requested by a given customer (FK to ai_shop_customers.id)."},"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"Filter to only returns for a specific order line (FK to ai_shop_order_items.id)."},"return_reason":{"type":"string","description":"Substring or text filter on return reason, enabling analytics, admin search, or dispute review."},"return_status":{"type":"string","description":"Current state of return process/workflow. E.g., 'requested', 'approved', 'denied', 'completed', etc."},"requested_at":{"type":"string","format":"date-time","description":"Datetime filter window for when return was requested."},"processed_at":{"type":"string","format":"date-time","description":"Datetime filter for when return request was finalized/process completed."},"admin_note":{"type":"string","description":"Search filter on internal admin annotation, if present."}},"description":"DTO for paginated/filtering/list request for return requests (ai_shop_return_requests). Allows all filter/sort/search fields directly mapped to atomic schema fields for returns.","required":[]},"IPageAiShopReturnRequest":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReturnRequest"}}},"required":["pagination","data"],"description":"Paginated response type for return requests (ai_shop_return_requests). Contains metadata for paging and full batch of atomic return request records."},"IAiShopReturnRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the return request, unique per row."},"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"References the specific order line item (ai_shop_order_items.id) this return relates to. Ensures one return per item. Provides traceability for analytics and inventory adjustments."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"References customer requesting the return (ai_shop_customers.id), must match actor of the request."},"return_reason":{"type":"string","description":"Text content for the reason behind the return. Business/audit purpose for regulatory and analytics flows."},"return_status":{"type":"string","description":"Lifecycle/business workflow status—freeform. Examples: 'requested', 'approved', 'denied', 'completed', 'received', etc."},"requested_at":{"type":"string","format":"date-time","description":"ISO timestamp for when the return was initiated. Audit/compliance relevance."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO timestamp for when the return workflow was processed/concluded (may be null for in-progress returns)."},{"type":"null","format":"date-time","description":"ISO timestamp for when the return workflow was processed/concluded (may be null for in-progress returns)."}],"description":"ISO timestamp for when the return workflow was processed/concluded (may be null for in-progress returns)."},"admin_note":{"oneOf":[{"type":"string","description":"Internal admin-side annotation for legal, dispute, or compliance documentation."},{"type":"null","description":"Internal admin-side annotation for legal, dispute, or compliance documentation."}],"description":"Internal admin-side annotation for legal, dispute, or compliance documentation."}},"required":["id","ai_shop_order_item_id","requested_by_customer_id","return_reason","return_status","requested_at"],"description":"Atomic return request entity. Holds all fields per order item return, as required for the commerce platform's compliance and analytics needs. Mapped to ai_shop_return_requests schema. Adheres to workflow, dispute resolution, and legal tracking."},"IAiShopReturnRequest.ICreate":{"type":"object","properties":{"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"The unique identifier of the order item being returned. Required to establish a normalized, auditable link to the line-level item in the original order. Follows strict 3NF principles. References {@link ai_shop_order_items.id} (UUID string).\n\nRefer to the Prisma column: ai_shop_order_item_id."},"requested_by_customer_id":{"type":"string","format":"uuid","description":"The unique identifier of the customer who is submitting the return request. Fulfills traceability for audit, compliance, and customer service.\n\nRefer to the Prisma column: requested_by_customer_id on ai_shop_return_requests."},"return_reason":{"type":"string","description":"A required field describing the business/process reason stated for initiating the return. Captures customer-provided context necessary for compliance, analytics, and dispute resolution workflows. Typically entered via customer-facing UI when initiating the return, stored as an atomic and normalized value in the schema.\n\nRefer to the Prisma column: return_reason."},"return_status":{"type":"string","description":"The workflow status of the return request at creation. Typically initialized as 'requested' or similar (enum defined at application level: requested, approved, denied, completed, received, etc.). Alignment to compliance workflow required.\n\nRefer to the Prisma column: return_status on ai_shop_return_requests."},"requested_at":{"type":"string","format":"date-time","description":"ISO 8601 datetime when the return was initiated by the customer. Used for workflow SLAs, compliance deadlines, and audit reporting. Must be set at creation.\n\nRefer to the Prisma column: requested_at."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"nullable. Timestamp when the return was processed or closed in the workflow. Remains null until such action is taken. Kept atomic for normalization and time auditing.\n\nRefer to the Prisma column: processed_at (nullable on ai_shop_return_requests)."},{"type":"null"}],"description":"nullable. Timestamp when the return was processed or closed in the workflow. Remains null until such action is taken. Kept atomic for normalization and time auditing.\n\nRefer to the Prisma column: processed_at (nullable on ai_shop_return_requests)."},"admin_note":{"oneOf":[{"type":"string","description":"Admin/audit note for workflow history or compliance. Serves as input-only, atomic commentary not derived from any other field. Used by operations, fulfillment, or moderation workflows internally. Nullable.\n\nRefer to the Prisma column: admin_note (nullable on ai_shop_return_requests)."},{"type":"null"}],"description":"Admin/audit note for workflow history or compliance. Serves as input-only, atomic commentary not derived from any other field. Used by operations, fulfillment, or moderation workflows internally. Nullable.\n\nRefer to the Prisma column: admin_note (nullable on ai_shop_return_requests)."}},"required":["ai_shop_order_item_id","requested_by_customer_id","return_reason","return_status","requested_at"],"description":"Request body for creating a new return request entry. Matches the ai_shop_return_requests Prisma model for atomic, 3NF-compliant creation of a return request. Used in both customer-facing and admin-initiated flows. Includes all relevant audit fields and relationships for a return action."},"IAiShopReturnRequest.IUpdate":{"type":"object","properties":{"return_reason":{"type":"string","description":"Updated reason for the return. Can be edited by admin or customer in certain workflows. Required for compliance, dispute resolution, and audit corrections."},"return_status":{"type":"string","description":"Updated workflow status for the return request (e.g., 'approved', 'denied', 'completed', 'received' etc.). Only acceptable values are those supported by business logic and application-level enums."},"processed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the return request moves from incomplete to processed state. Can be set by admin, automated process, or fulfillment system. Remains null if unprocessed. Nullable according to the schema."},{"type":"null"}],"description":"When the return request moves from incomplete to processed state. Can be set by admin, automated process, or fulfillment system. Remains null if unprocessed. Nullable according to the schema."},"admin_note":{"oneOf":[{"type":"string","description":"Administrative, moderation, or business note providing workflow/decision commentary. Input-only, kept atomic. Nullable on schema."},{"type":"null"}],"description":"Administrative, moderation, or business note providing workflow/decision commentary. Input-only, kept atomic. Nullable on schema."}},"required":[],"description":"Update body for modifying an existing return request. Allows atomic changes to any field that is not immutable by business logic (e.g., reason correction, status update, audit notes, or marking as processed). Only properties that are supported by the Prisma model are included. All changes comply with legal, workflow, and normalization requirements."},"IAiShopOrderAbandonment.IRequest":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"The identifier for the order that is considered abandoned. Use to filter/search for all abandonment logs attached to a single order. Maps to ai_shop_order_abandonments.ai_shop_order_id (UUID)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"The customer whose behavior/flow triggered an abandonment. Use for dashboards, behavioral analytics, or customer service queries. Maps to ai_shop_order_abandonments.ai_shop_customer_id (UUID)."},"abandoned_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower bound filter for abandoned_at. Used for date range search. Only logs after this timestamp are returned."},"abandoned_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper bound filter for abandoned_at. Used for date range search. Only logs before this timestamp are returned."},"detection_method":{"type":"string","description":"(Optional) Restrict query to logs matching a certain detection method (business code such as 'timeout', 'payment_fail', etc.)."},"limit":{"type":"integer","description":"(Optional, default by implementation) Maximum records to return in a page. Used for pagination."},"page":{"type":"integer","description":"(Optional, default to 1) Which page of results to return for paging/filtering use cases."}},"required":[],"description":"Request body for searching/paginating ai_shop_order_abandonments logs. Used for analytics, reporting, dashboard, and admin/business flows. Flexible, supports filtered search, paging, and date range analysis. All properties correspond to 3NF schema and permit atomic queries."},"IPageAiShopOrderAbandonment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Metadata about the page result: current page, per-page limit, total records, number of pages."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderAbandonment"},"description":"Array of ai_shop_order_abandonments records representing atomic log objects for each abandonment event."}},"required":["pagination","data"],"description":"Standard paginated response for ai_shop_order_abandonments results. Conforms to IPage<T> conventions for listing, paging, and dashboard reporting. Array of atomic log records plus page metadata."},"IAiShopOrderAbandonment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the abandonment log row. Required by schema for uniqueness, traceability, and deduplication."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK to the abandoned order. Links log to ai_shop_orders.id. Used for reporting, audit, or analytics on abandoned orders."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer associated with the abandoned order (atomic, normalized, direct FK)."},"abandoned_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of when the abandonment event was recognized by the platform. Atomic, normalized, required for compliance and reporting."},"detection_method":{"type":"string","description":"Business process code identifying how the abandonment was detected (e.g., 'timeout', 'customer_cancel', 'payment_fail'). Atomic string, supports advanced campaign/event reporting and analytics."}},"required":["id","ai_shop_order_id","ai_shop_customer_id","abandoned_at","detection_method"],"description":"Atomic log row for each order abandonment event as defined by ai_shop_order_abandonments schema. Used for reporting, analytics, behavioral triggers, compliance, and customer service insight. Strictly 3NF normalized."},"IAiShopOrderAbandonment.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK to order, must match ai_shop_orders.id. Required at row creation for audit, linking, and behavioral analysis."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer owning the abandoned order/event. FK to ai_shop_customers.id. Required for report, business rules, and compliance."},"abandoned_at":{"type":"string","format":"date-time","description":"Atomic time the abandonment was discovered by the platform. ISO 8601 datetime string required at row creation."},"detection_method":{"type":"string","description":"Required code representing how the platform detected the abandonment (e.g., 'timeout', 'customer_cancel', 'browser_exit', 'payment_fail'). Must comply with business logic/app-level enums. Required at insert."}},"required":["ai_shop_order_id","ai_shop_customer_id","abandoned_at","detection_method"],"description":"Creation DTO for new ai_shop_order_abandonments rows. All fields are atomic per 3NF and required for audit, compliance, and campaign analytics on platform activity. Used by backend, BI, and platform detection integrations."},"IAiShopOrderAbandonment.IUpdate":{"type":"object","properties":{"abandoned_at":{"type":"string","format":"date-time","description":"If needed, correction or adjustment to when the abandonment was recorded. Required when business, analytic, or audit logic requires historic fix or SLA adjustment. Optional if not being changed."},"detection_method":{"type":"string","description":"Allows reclassification of the abandonment event's detection method (if error/bug/logic fix needed). Required if detection method is to be changed; otherwise, omit."}},"required":[],"description":"DTO for updating an existing ai_shop_order_abandonments row. Only atomic, normalized fields are permitted for update. Used in error correction, analytics fix, or admin override/forensics. Only allows valid schema fields and never invents non-existent columns."},"IAiShopOrderDelivery.IRequest":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"The identifier for the order being delivered. Restricts retrieval to deliveries for a given order record. FK to ai_shop_orders.id."},"ai_shop_order_item_id":{"type":"string","format":"uuid","description":"Optionally restricts result set to deliveries tied to a specific order item (split/partial delivery). FK to ai_shop_order_items.id."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"Filter by the seller responsible for fulfillment of the delivery. FK to ai_shop_sellers.id."},"delivery_status":{"type":"string","description":"Restricts search to delivery records with this business status (pending, ready, shipped, delivered, returned, etc.). Must match one of supported workflow enums (app-level controlled)."},"tracking_number":{"type":"string","description":"Restricts results to a single parcel or shipment identifier (atomic, unique to courier or business timeline). Often used by admin support queries."},"shipper_code":{"type":"string","description":"(Optional) Filter results to a specific shipper/courier service (e.g., 'CJ', 'FEDEX', app-level code/alias)."},"shipped_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower-bound filter for shipped_at timestamp. Used for range-based or date-filtering in shipping dashboards."},"shipped_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper-bound filter for shipped_at timestamp. Used for end/range-based time-based querying."},"delivered_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower-bound for delivered_at timestamp (use for delivery-time KPIs and analytics)."},"delivered_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper-bound for delivered_at filtering (used for dashboard analytics or SLA compliance reporting)."},"seller_memo":{"type":"string","description":"(Optional) Filter to deliveries where seller memo matches or contains provided value (typically search in admin dashboards)."},"admin_note":{"type":"string","description":"(Optional) Filter to deliveries where admin has left a note (support for specific review/forensics workflows)."},"limit":{"type":"integer","description":"(Optional) Page limit for result set size in pagination."},"page":{"type":"integer","description":"(Optional) Result page number (pagination, 1-based)."}},"required":[],"description":"Query parameters for listing, filtering, and searching ai_shop_order_deliveries records for admin, seller, or dashboard use. Supports detailed workflow, SLA, analytics, and forensics queries strictly on schema-present attributes. Flexible and normalized for backoffice and operational use."},"IPageAiShopOrderDelivery":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard page meta object: shows current page, how many records per page, total records, and total page count."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopOrderDelivery"},"description":"Array of delivery records matching query: each is an atomic row from ai_shop_order_deliveries, mapped to schema fields."}},"required":["pagination","data"],"description":"Paginated response for list/search of order deliveries from ai_shop_order_deliveries. Contains page meta and array of atomic delivery records. Used by admin, seller, and BI dashboards as standard list DTO."},"IAiShopOrderDelivery":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique identifier for this delivery entry (primary key). Atomic, generated, and persists for audit trails and shipment references."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"FK to parent ai_shop_orders row for which this delivery record is attached."},"ai_shop_order_item_id":{"oneOf":[{"type":"string","format":"uuid","description":"Nullable FK to ai_shop_order_items (optional for split/partial delivery; null means full-order delivery)."},{"type":"null"}],"description":"Nullable FK to ai_shop_order_items (optional for split/partial delivery; null means full-order delivery)."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK to the seller who fulfilled the delivery or whose warehouse was the logistics source."},"delivery_status":{"type":"string","description":"Business process status for delivery: one of set of enum strings (pending, ready, shipped, delivered, returned, etc.), required for workflow, reporting, and SLA logic."},"tracking_number":{"oneOf":[{"type":"string","description":"Nullable. Globally unique tracking or parcel code. Supplied by seller/courier platform, app business-unique. Used in shipping status/parcel searches."},{"type":"null"}],"description":"Nullable. Globally unique tracking or parcel code. Supplied by seller/courier platform, app business-unique. Used in shipping status/parcel searches."},"shipper_code":{"type":"string","description":"Shipment/courier alias or business code (e.g., 'CJ', 'FEDEX', 'INHOUSE'). Determined by business/compliance processes."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable timestamp (ISO 8601) marking when package/parcel left fulfillment site. Provided by seller/courier/fulfillment automation."},{"type":"null"}],"description":"Nullable timestamp (ISO 8601) marking when package/parcel left fulfillment site. Provided by seller/courier/fulfillment automation."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable timestamp (ISO 8601) when delivery was completed to end recipient. Populated by platform, courier push, or admin action. Used for SLA enforcement, auditing, compliance."},{"type":"null"}],"description":"Nullable timestamp (ISO 8601) when delivery was completed to end recipient. Populated by platform, courier push, or admin action. Used for SLA enforcement, auditing, compliance."},"seller_memo":{"oneOf":[{"type":"string","description":"Nullable, atomic, input-only string for seller fulfillment notes to aid in logistics, support auditing, or customer correspondence."},{"type":"null"}],"description":"Nullable, atomic, input-only string for seller fulfillment notes to aid in logistics, support auditing, or customer correspondence."},"admin_note":{"oneOf":[{"type":"string","description":"Nullable, persists admin/internal business note for audit trails, workflow explanations, and compliance. Only updated by admin/ops UI or automated business event handlers."},{"type":"null"}],"description":"Nullable, persists admin/internal business note for audit trails, workflow explanations, and compliance. Only updated by admin/ops UI or automated business event handlers."}},"required":["id","ai_shop_order_id","ai_shop_seller_id","delivery_status","shipper_code"],"description":"Atomic, 3NF-compliant object representing a shipment, delivery, or fulfillment of an order or order item. Used in reporting, auditing, admin dashboards, SLA compliance, and fulfillment integrations. All fields map directly to those in ai_shop_order_deliveries; no non-schema or denormalized attributes included."},"aiShopOrderDeliveries.ICreate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"Order (ai_shop_orders.id) this delivery is related to, required on creation. FK, must be existing order."},"ai_shop_order_item_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional. If this delivery is for a single line-item only (split shipment), provide the item id. Null for entire-order fulfillment."},{"type":"null"}],"description":"Optional. If this delivery is for a single line-item only (split shipment), provide the item id. Null for entire-order fulfillment."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"FK to ai_shop_sellers.id for the fulfillment provider/seller. Required on create for audit/compliance."},"delivery_status":{"type":"string","description":"Initial business status on creation (enum: pending, ready, shipped, delivered, returned, etc.) as defined by logistics workflow."},"tracking_number":{"oneOf":[{"type":"string","description":"Optional, string for shipment/parcel tracking carrier ID or code. May be assigned by seller, platform, or courier. Nullable."},{"type":"null"}],"description":"Optional, string for shipment/parcel tracking carrier ID or code. May be assigned by seller, platform, or courier. Nullable."},"shipper_code":{"type":"string","description":"Assigned business/courier/integrator code for logistics and cross-system referencing (e.g., 'CJ', 'FEDEX'). Required on creation by shipping workflow."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable. When item(s) leave fulfillment (warehouse, seller, etc.). Required by business logic on shipment. Nullable on initial creation."},{"type":"null"}],"description":"Nullable. When item(s) leave fulfillment (warehouse, seller, etc.). Required by business logic on shipment. Nullable on initial creation."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Nullable. When item(s) are delivered to recipient. Null until completion of delivery. Set by platform or shipping push/completion event."},{"type":"null"}],"description":"Nullable. When item(s) are delivered to recipient. Null until completion of delivery. Set by platform or shipping push/completion event."},"seller_memo":{"oneOf":[{"type":"string","description":"(Optional) Seller’s fulfillment or packing note: preserved for audit or workflow query, atomic, not shown externally."},{"type":"null"}],"description":"(Optional) Seller’s fulfillment or packing note: preserved for audit or workflow query, atomic, not shown externally."},"admin_note":{"oneOf":[{"type":"string","description":"(Optional) Admin/internal fulfillment note: provides additional context, investigation, compliance info. Not visible to external users. Nullable."},{"type":"null"}],"description":"(Optional) Admin/internal fulfillment note: provides additional context, investigation, compliance info. Not visible to external users. Nullable."}},"required":["ai_shop_order_id","ai_shop_seller_id","delivery_status","shipper_code"],"description":"Atomic creation object for new ai_shop_order_deliveries record, strictly following 3NF. Used in insertion of single delivery fulfillment event, mapping required relationships. All business/workflow logic for populated fields is enforced at the service layer."},"aiShopOrderDeliveries":{"$ref":"#/components/schemas/IAiShopOrderDelivery","description":"Atomic, persisted delivery/fulfillment entity for an order or its item. All values defined by ai_shop_order_deliveries. Used as detailed resource or single record fetch, not for creation. Contains no additional computed, derived, or non-schema fields. Fully 3NF normalized."},"aiShopOrderDeliveries.IUpdate":{"type":"object","properties":{"ai_shop_order_id":{"type":"string","format":"uuid","description":"The unique ID of the related order. Foreign key referencing ai_shop_orders.id. Used to associate this delivery with a specific order."},"ai_shop_order_item_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional reference to the order item if this delivery is not for the whole order. Foreign key referencing ai_shop_order_items.id. Nullable; null means full-order delivery."},{"type":"null","format":"uuid","description":"Optional reference to the order item if this delivery is not for the whole order. Foreign key referencing ai_shop_order_items.id. Nullable; null means full-order delivery."}],"description":"Optional reference to the order item if this delivery is not for the whole order. Foreign key referencing ai_shop_order_items.id. Nullable; null means full-order delivery."},"ai_shop_seller_id":{"type":"string","format":"uuid","description":"The unique ID of the seller responsible for this delivery. Foreign key referencing ai_shop_sellers.id."},"delivery_status":{"type":"string","description":"Status of the delivery. Business logic may support values like 'pending', 'ready', 'shipped', 'delivered', 'returned'. Check enum or app constraints for exact permitted values."},"tracking_number":{"oneOf":[{"type":"string","description":"Tracking number for the parcel or shipment, if available. Nullable; may not be known at all stages."},{"type":"null","description":"Tracking number for the parcel or shipment, if available. Nullable; may not be known at all stages."}],"description":"Tracking number for the parcel or shipment, if available. Nullable; may not be known at all stages."},"shipper_code":{"type":"string","description":"Business courier code for the shipping provider. Example: 'CJ', 'FEDEX', etc."},"shipped_at":{"oneOf":[{"type":"string","format":"date-time","description":"Date-time when order/parcel was shipped. Nullable if not yet shipped."},{"type":"null","format":"date-time","description":"Date-time when order/parcel was shipped. Nullable if not yet shipped."}],"description":"Date-time when order/parcel was shipped. Nullable if not yet shipped."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Date-time when order was delivered. Nullable if not yet delivered."},{"type":"null","format":"date-time","description":"Date-time when order was delivered. Nullable if not yet delivered."}],"description":"Date-time when order was delivered. Nullable if not yet delivered."},"seller_memo":{"oneOf":[{"type":"string","description":"Optional memo/note for the seller on delivery. Nullable; used for internal comments."},{"type":"null","description":"Optional memo/note for the seller on delivery. Nullable; used for internal comments."}],"description":"Optional memo/note for the seller on delivery. Nullable; used for internal comments."},"admin_note":{"oneOf":[{"type":"string","description":"Optional internal admin note for auditing, troubleshooting, or workflow explanation. Nullable; may not be set."},{"type":"null","description":"Optional internal admin note for auditing, troubleshooting, or workflow explanation. Nullable; may not be set."}],"description":"Optional internal admin note for auditing, troubleshooting, or workflow explanation. Nullable; may not be set."}},"required":["ai_shop_order_id","ai_shop_seller_id","delivery_status","shipper_code"],"description":"Update schema for an order delivery entry (ai_shop_order_deliveries). Updates can be made to status, memo fields, tracking number, timestamps, as well as seller or order/item references. All fields exactly match database columns, and nullability reflects 3NF, audit, and business process granularity. Refer to the Orders schema documentation for business context and constraints. Admin and seller notes are for internal purposes only. Provides compliance for logistics workflows, audit trails, and external integrations."},"aiShopCoupons.IRequest":{"type":"object","properties":{"search":{"oneOf":[{"type":"string","description":"Full text or fuzzy search parameter across coupon code, description, or other text fields."},{"type":"null","description":"Full text or fuzzy search parameter across coupon code, description, or other text fields."}],"description":"Full text or fuzzy search parameter across coupon code, description, or other text fields."},"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter to restrict list to a specific promotion campaign by its UUID."},{"type":"null","format":"uuid","description":"Optional filter to restrict list to a specific promotion campaign by its UUID."}],"description":"Optional filter to restrict list to a specific promotion campaign by its UUID."},"code":{"oneOf":[{"type":"string","description":"Filter to coupons matching this exact code."},{"type":"null","description":"Filter to coupons matching this exact code."}],"description":"Filter to coupons matching this exact code."},"type":{"oneOf":[{"type":"string","description":"Filter for coupon type (e.g., 'single_use','multi_use','stackable','exclusive')."},{"type":"null","description":"Filter for coupon type (e.g., 'single_use','multi_use','stackable','exclusive')."}],"description":"Filter for coupon type (e.g., 'single_use','multi_use','stackable','exclusive')."},"is_active":{"oneOf":[{"type":"boolean","description":"Optionally filter by whether the coupon is currently active or not."},{"type":"null","description":"Optionally filter by whether the coupon is currently active or not."}],"description":"Optionally filter by whether the coupon is currently active or not."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (starts at 1)."},{"type":"null","description":"Page number for pagination (starts at 1)."}],"description":"Page number for pagination (starts at 1)."},"limit":{"oneOf":[{"type":"integer","description":"Number of results per page for pagination."},{"type":"null","description":"Number of results per page for pagination."}],"description":"Number of results per page for pagination."}},"required":[],"description":"Request schema for searching/filtering/paginating coupon records as defined in ai_shop_coupons. All fields are optional. Used for search UX, admin panels, campaign overviews, and reporting as required by Discount and Payment System requirements."},"IPageAiShopCoupons":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCoupons"}}},"required":["pagination","data"],"description":"Paginated response schema for coupon searches/listing in the AI Shop system. Includes pagination metadata and an array of coupon records. Applies to discount, campaign, or code management as described in requirements and database model."},"aiShopCoupons":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique coupon identifier (primary key in ai_shop_coupons)."},"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"Promotion or campaign ID (optional, if part of a campaign)."},{"type":"null","format":"uuid","description":"Promotion or campaign ID (optional, if part of a campaign)."}],"description":"Promotion or campaign ID (optional, if part of a campaign)."},"code":{"type":"string","description":"Unique coupon code string. Used for redemption and tracking. Imposes strict uniqueness at database level."},"type":{"type":"string","description":"Coupon type string. Example values: 'single_use', 'multi_use', 'stackable', 'exclusive'."},"description":{"oneOf":[{"type":"string","description":"Optional human-readable explanation for the coupon. Nullable, assists UX and reporting."},{"type":"null","description":"Optional human-readable explanation for the coupon. Nullable, assists UX and reporting."}],"description":"Optional human-readable explanation for the coupon. Nullable, assists UX and reporting."},"valid_from":{"type":"string","format":"date-time","description":"Start time of coupon validity period, in ISO 8601 date-time format."},"valid_until":{"type":"string","format":"date-time","description":"End time of coupon validity period, in ISO 8601 date-time format. After this, coupon is invalid."},"max_uses":{"oneOf":[{"type":"integer","description":"Maximum total number of uses before expiration. Nullable if unlimited."},{"type":"null","description":"Maximum total number of uses before expiration. Nullable if unlimited."}],"description":"Maximum total number of uses before expiration. Nullable if unlimited."},"max_uses_per_customer":{"oneOf":[{"type":"integer","description":"Maximum uses per individual customer. Nullable for unlimited."},{"type":"null","description":"Maximum uses per individual customer. Nullable for unlimited."}],"description":"Maximum uses per individual customer. Nullable for unlimited."},"min_purchase_amount":{"oneOf":[{"type":"number","description":"Optional minimum order value for coupon to be eligible. Can be null for no constraint."},{"type":"null","description":"Optional minimum order value for coupon to be eligible. Can be null for no constraint."}],"description":"Optional minimum order value for coupon to be eligible. Can be null for no constraint."},"discount_amount":{"oneOf":[{"type":"number","description":"Fixed absolute discount provided by this coupon (e.g. $5 off). Null if only percent discount applies."},{"type":"null","description":"Fixed absolute discount provided by this coupon (e.g. $5 off). Null if only percent discount applies."}],"description":"Fixed absolute discount provided by this coupon (e.g. $5 off). Null if only percent discount applies."},"discount_percent":{"oneOf":[{"type":"number","description":"Discount amount as percentage (e.g. 10 for 10%). Null if only absolute amount applies."},{"type":"null","description":"Discount amount as percentage (e.g. 10 for 10%). Null if only absolute amount applies."}],"description":"Discount amount as percentage (e.g. 10 for 10%). Null if only absolute amount applies."},"is_active":{"type":"boolean","description":"Whether the coupon is currently active and can be redeemed."},"created_at":{"type":"string","format":"date-time","description":"Coupon creation timestamp. UTC/ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to coupon record."}},"required":["id","code","type","valid_from","valid_until","is_active","created_at","updated_at"],"description":"AI Shop coupon entity. Implements all requirements for digital campaign codes, promotions, customer discount tracking, soft business logic for payment and redemption in compliance with Discount and Payment System plan. Strictly maps ai_shop_coupons table. All nullable fields correspond to flexible/optional parameters for modern campaign logic."},"aiShopCoupons.ICreate":{"type":"object","properties":{"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Promotion/campaign ID if coupon is part of a campaign."},{"type":"null","format":"uuid","description":"(Optional) Promotion/campaign ID if coupon is part of a campaign."}],"description":"(Optional) Promotion/campaign ID if coupon is part of a campaign."},"code":{"type":"string","description":"Unique coupon code string."},"type":{"type":"string","description":"Coupon type string ('single_use','multi_use','stackable','exclusive')."},"description":{"oneOf":[{"type":"string","description":"Human-readable explanation for coupon (optional)."},{"type":"null","description":"Human-readable explanation for coupon (optional)."}],"description":"Human-readable explanation for coupon (optional)."},"valid_from":{"type":"string","format":"date-time","description":"Start date/time for coupon validity (UTC ISO8601)."},"valid_until":{"type":"string","format":"date-time","description":"End date/time for coupon validity (UTC ISO8601)."},"max_uses":{"oneOf":[{"type":"integer","description":"Global maximum uses (optional/unlimited)."},{"type":"null","description":"Global maximum uses (optional/unlimited)."}],"description":"Global maximum uses (optional/unlimited)."},"max_uses_per_customer":{"oneOf":[{"type":"integer","description":"Max uses per customer (optional/unlimited)."},{"type":"null","description":"Max uses per customer (optional/unlimited)."}],"description":"Max uses per customer (optional/unlimited)."},"min_purchase_amount":{"oneOf":[{"type":"number","description":"Minimum purchase amount (optional)."},{"type":"null","description":"Minimum purchase amount (optional)."}],"description":"Minimum purchase amount (optional)."},"discount_amount":{"oneOf":[{"type":"number","description":"Fixed (absolute) discount value (optional)."},{"type":"null","description":"Fixed (absolute) discount value (optional)."}],"description":"Fixed (absolute) discount value (optional)."},"discount_percent":{"oneOf":[{"type":"number","description":"Percent discount value (optional)."},{"type":"null","description":"Percent discount value (optional)."}],"description":"Percent discount value (optional)."},"is_active":{"type":"boolean","description":"Whether this coupon is currently active and redeemable."}},"required":["code","type","valid_from","valid_until","is_active"],"description":"Schema for creation of an AI Shop coupon. Maps to all required and optional fields for campaign/promotion logic and business workflows. See Discount and Payment System plan and ai_shop_coupons table for use and audit guidelines."},"aiShopCoupons.IUpdate":{"type":"object","properties":{"ai_shop_promotion_id":{"oneOf":[{"type":"string","format":"uuid","description":"Promotion/campaign ID (optional)."},{"type":"null","format":"uuid","description":"Promotion/campaign ID (optional)."}],"description":"Promotion/campaign ID (optional)."},"code":{"type":"string","description":"Coupon code string."},"type":{"type":"string","description":"Coupon type string."},"description":{"oneOf":[{"type":"string","description":"Human-readable description (optional)."},{"type":"null","description":"Human-readable description (optional)."}],"description":"Human-readable description (optional)."},"valid_from":{"type":"string","format":"date-time","description":"Start of coupon validity (UTC ISO8601)."},"valid_until":{"type":"string","format":"date-time","description":"End of coupon validity (UTC ISO8601)."},"max_uses":{"oneOf":[{"type":"integer","description":"Maximum uses overall (optional/unlimited)."},{"type":"null","description":"Maximum uses overall (optional/unlimited)."}],"description":"Maximum uses overall (optional/unlimited)."},"max_uses_per_customer":{"oneOf":[{"type":"integer","description":"Maximum uses per customer (optional/unlimited)."},{"type":"null","description":"Maximum uses per customer (optional/unlimited)."}],"description":"Maximum uses per customer (optional/unlimited)."},"min_purchase_amount":{"oneOf":[{"type":"number","description":"Minimum purchase amount (optional)."},{"type":"null","description":"Minimum purchase amount (optional)."}],"description":"Minimum purchase amount (optional)."},"discount_amount":{"oneOf":[{"type":"number","description":"Fixed discount amount (optional)."},{"type":"null","description":"Fixed discount amount (optional)."}],"description":"Fixed discount amount (optional)."},"discount_percent":{"oneOf":[{"type":"number","description":"Percent discount (optional)."},{"type":"null","description":"Percent discount (optional)."}],"description":"Percent discount (optional)."},"is_active":{"type":"boolean","description":"Is coupon currently active."}},"required":["code","type","valid_from","valid_until","is_active"],"description":"Schema for updating an AI Shop coupon. Contains all updatable fields as per business logic, campaign management, and compliance requirements. Maps directly to ai_shop_coupons table."},"aiShopCouponAssignments.IRequest":{"type":"object","properties":{"ai_shop_coupon_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for a specific coupon assignment by the coupon's UUID."},{"type":"null","format":"uuid","description":"Optional filter for a specific coupon assignment by the coupon's UUID."}],"description":"Optional filter for a specific coupon assignment by the coupon's UUID."},"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter by customer UUID."},{"type":"null","format":"uuid","description":"Optional filter by customer UUID."}],"description":"Optional filter by customer UUID."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for assignments associated with a specific order (if coupon was redeemed in an order)."},{"type":"null","format":"uuid","description":"Optional filter for assignments associated with a specific order (if coupon was redeemed in an order)."}],"description":"Optional filter for assignments associated with a specific order (if coupon was redeemed in an order)."},"assigned_at_start":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: assigned_at greater than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: assigned_at greater than or equal to this date/time."}],"description":"Filter: assigned_at greater than or equal to this date/time."},"assigned_at_end":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: assigned_at less than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: assigned_at less than or equal to this date/time."}],"description":"Filter: assigned_at less than or equal to this date/time."},"redeemed_at_start":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: redeemed_at greater than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: redeemed_at greater than or equal to this date/time."}],"description":"Filter: redeemed_at greater than or equal to this date/time."},"redeemed_at_end":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: redeemed_at less than or equal to this date/time."},{"type":"null","format":"date-time","description":"Filter: redeemed_at less than or equal to this date/time."}],"description":"Filter: redeemed_at less than or equal to this date/time."},"state":{"oneOf":[{"type":"string","description":"Assignment state filter (e.g., 'assigned', 'redeemed', 'expired')."},{"type":"null","description":"Assignment state filter (e.g., 'assigned', 'redeemed', 'expired')."}],"description":"Assignment state filter (e.g., 'assigned', 'redeemed', 'expired')."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination."},{"type":"null","description":"Page number for pagination."}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Number of results per page."},{"type":"null","description":"Number of results per page."}],"description":"Number of results per page."}},"required":[],"description":"Request schema to search/filter coupon assignments. Used for admin, compliance, and customer dashboard logic. All fields are optional and support complex search across assignment and redemption history."},"IPageAiShopCouponAssignments":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/aiShopCouponAssignments"}}},"required":["pagination","data"],"description":"Paginated response page for coupon assignment search/listing. Returns pagination metadata and results array of aiShopCouponAssignments records."},"aiShopCouponAssignments":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for the coupon assignment."},"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"The coupon's UUID referenced by this assignment. Foreign key."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer assigned this coupon (UUID). Foreign key."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order associated with coupon use, if redeemed (nullable)."},{"type":"null","format":"uuid","description":"Order associated with coupon use, if redeemed (nullable)."}],"description":"Order associated with coupon use, if redeemed (nullable)."},"assigned_at":{"type":"string","format":"date-time","description":"Timestamp when this assignment was created (coupon assigned to customer)."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when coupon was redeemed (if used). Nullable."},{"type":"null","format":"date-time","description":"Timestamp when coupon was redeemed (if used). Nullable."}],"description":"Timestamp when coupon was redeemed (if used). Nullable."},"state":{"type":"string","description":"Current assignment state. Example: 'assigned', 'redeemed', 'expired'."}},"required":["id","ai_shop_coupon_id","ai_shop_customer_id","assigned_at","state"],"description":"Entity representing an assignment of a coupon to a customer (may or may not be redeemed/used). Implements Discount and Payment System assignment, usage, and compliance tracking logic. Maps ai_shop_coupon_assignments table, as required by audit/trace and campaign logic."},"aiShopCouponAssignments.ICreate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"UUID of the coupon being assigned (required)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"UUID of customer to whom coupon is assigned (required)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"If redeemed at order, the order's UUID (optional/nullable)."},{"type":"null","format":"uuid","description":"If redeemed at order, the order's UUID (optional/nullable)."}],"description":"If redeemed at order, the order's UUID (optional/nullable)."},"assigned_at":{"type":"string","format":"date-time","description":"Assignment timestamp (UTC ISO8601)."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Redemption timestamp (nullable, set on redemption only)."},{"type":"null","format":"date-time","description":"Redemption timestamp (nullable, set on redemption only)."}],"description":"Redemption timestamp (nullable, set on redemption only)."},"state":{"type":"string","description":"Assignment state. E.g., 'assigned', 'redeemed', 'expired'."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","assigned_at","state"],"description":"Schema for assigning a coupon to a customer, as part of campaign, event, or admin flow. Required for compliance and redemption audits, as per Discount/Payment System requirements. All nullable fields support deferred or conditional population."},"aiShopCouponAssignments.IUpdate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"Coupon UUID to assign (required on update)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"UUID of customer assigned to (required on update)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order UUID (nullable, for assignment to order or redemption tracking)."},{"type":"null","format":"uuid","description":"Order UUID (nullable, for assignment to order or redemption tracking)."}],"description":"Order UUID (nullable, for assignment to order or redemption tracking)."},"assigned_at":{"type":"string","format":"date-time","description":"Timestamp when assignment record was created."},"redeemed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp on redemption (nullable, optional for update if not redeemed)."},{"type":"null","format":"date-time","description":"Timestamp on redemption (nullable, optional for update if not redeemed)."}],"description":"Timestamp on redemption (nullable, optional for update if not redeemed)."},"state":{"type":"string","description":"Assignment state: 'assigned', 'redeemed', 'expired', etc."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","assigned_at","state"],"description":"Schema for updating coupon assignment tracking and lifecycle, as part of Discount and Payment System use case. Supports both redemption and admin-correction flows for compliance."},"IAiShopPromotions.IRequest":{"type":"object","properties":{"name":{"oneOf":[{"type":"string","description":"Text/substring or fuzzy search within campaign/promotion name."},{"type":"null","description":"Text/substring or fuzzy search within campaign/promotion name."}],"description":"Text/substring or fuzzy search within campaign/promotion name."},"type":{"oneOf":[{"type":"string","description":"Promotion/campaign type (e.g., 'bulk_coupon', 'auto_discount', etc.)."},{"type":"null","description":"Promotion/campaign type (e.g., 'bulk_coupon', 'auto_discount', etc.)."}],"description":"Promotion/campaign type (e.g., 'bulk_coupon', 'auto_discount', etc.)."},"is_active":{"oneOf":[{"type":"boolean","description":"Whether the campaign is currently active and visible."},{"type":"null","description":"Whether the campaign is currently active and visible."}],"description":"Whether the campaign is currently active and visible."},"start_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns starting after this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns starting after this date/time."}],"description":"Filter: campaigns starting after this date/time."},"start_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns starting before this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns starting before this date/time."}],"description":"Filter: campaigns starting before this date/time."},"end_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns ending after this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns ending after this date/time."}],"description":"Filter: campaigns ending after this date/time."},"end_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: campaigns ending before this date/time."},{"type":"null","format":"date-time","description":"Filter: campaigns ending before this date/time."}],"description":"Filter: campaigns ending before this date/time."},"page":{"oneOf":[{"type":"integer","description":"Requested page for pagination."},{"type":"null","description":"Requested page for pagination."}],"description":"Requested page for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Number of records per page."},{"type":"null","description":"Number of records per page."}],"description":"Number of records per page."}},"required":[],"description":"Request body for listing/searching promotions/campaigns as per ai_shop_promotions. All fields are optional and support admin campaign table UX, analytics, or service logic."},"IPageAiShopPromotions":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information for paginated results, including current page, limit, total records, and total pages. This aligns with standard pagination requirements in listing operations across the platform."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopPromotions"},"description":"List of promotion campaign entities returned in this page result."}},"required":["pagination","data"],"description":"Paginated result list for AI Shop promotions (campaigns). Includes both pagination metadata and a list of promotion records. This structure follows the standard IPage pattern across the platform and refers to the business requirement for paginable campaign search in the backend marketing/coupon system.\n\nAll results provide a slice of the full promotion dataset, tied to page/limit parameters supplied in the request."},"IAiShopPromotions":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique ID for a promotion campaign. As per Prisma schema ai_shop_promotions.id, this UUID is used as the reference for campaign logic, edit, and hard deletion."},"name":{"type":"string","description":"Promotion title (e.g., 'Summer 2025 Campaign'). Used for display and differentiation in the admin UI and public listings. Must be unique for each start date. (ai_shop_promotions.name)"},"description":{"oneOf":[{"type":"string","description":"Optional human-friendly explanation. Used for admin operations and customer transparency. (ai_shop_promotions.description)"},{"type":"null"}],"description":"Optional human-friendly explanation. Used for admin operations and customer transparency. (ai_shop_promotions.description)"},"type":{"type":"string","description":"Type of promotion ('bulk_coupon', 'auto_discount', 'event', etc.). Dictates campaign automation and eligibility logic. (ai_shop_promotions.type)"},"start_at":{"type":"string","format":"date-time","description":"Timestamp for campaign start. ISO string, required by campaign activation logic. (ai_shop_promotions.start_at)"},"end_at":{"type":"string","format":"date-time","description":"Timestamp for campaign end. ISO string, for scheduled deactivation/expiration. (ai_shop_promotions.end_at)"},"is_active":{"type":"boolean","description":"Is this campaign currently active and visible? Controls eligibility and frontend rendering. (ai_shop_promotions.is_active)"},"created_at":{"type":"string","format":"date-time","description":"Campaign creation audit timestamp per ai_shop_promotions. Used for sorting/audit/history."},"updated_at":{"type":"string","format":"date-time","description":"Last campaign update timestamp per ai_shop_promotions. Required by audit trail, admin correction, and campaign dashboard."}},"required":["id","name","type","start_at","end_at","is_active","created_at","updated_at"],"description":"AI Shop promotion campaign entity, representing a discount, event, or auto-discount business event. Each row in this schema provides the core information and metadata for a campaign or event supporting the coupon and auto-promotion system.\n\nEach field is strictly atomic and normalized, following the requirements for compliance, traceability, and multichannel compatibility. This DTO aligns to both backend and UI representations for campaign management."},"IAiShopPromotions.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"Name/title of the campaign, must be unique for each starting time period. Required."},"description":{"oneOf":[{"type":"string","description":"Optional human-facing explanation of the campaign, for admin or customer explanation."},{"type":"null"}],"description":"Optional human-facing explanation of the campaign, for admin or customer explanation."},"type":{"type":"string","description":"Promotion category ('bulk_coupon', 'auto_discount', 'event', etc.). Dictates business logic."},"start_at":{"type":"string","format":"date-time","description":"Start time for the campaign (ISO date-time, e.g., '2025-06-01T00:00:00Z'). Required."},"end_at":{"type":"string","format":"date-time","description":"End time for the campaign (ISO date-time, e.g., '2025-06-30T23:59:59Z'). Required."},"is_active":{"type":"boolean","description":"Whether this campaign is currently active and visible for eligibility and display."}},"required":["name","type","start_at","end_at","is_active"],"description":"Request DTO for creating a new promotion campaign (ai_shop_promotions) as per marketing requirements. All fields are normalized, with consistent ISO date types for scheduling. Description is optional but recommended for UX transparency and admin clarity."},"IAiShopPromotions.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Updated campaign name/title. Optional for partial update, but required for full replacement."},"description":{"oneOf":[{"type":"string","description":"Optional new campaign description. Can be null to clear or omitted to retain current value."},{"type":"null"}],"description":"Optional new campaign description. Can be null to clear or omitted to retain current value."},"type":{"type":"string","description":"Campaign type/category. Required for campaign logic. E.g., 'bulk_coupon', 'auto_discount', 'event'."},"start_at":{"type":"string","format":"date-time","description":"Updated start time of campaign (ISO 8601 string)."},"end_at":{"type":"string","format":"date-time","description":"Updated end time of campaign (ISO 8601 string)."},"is_active":{"type":"boolean","description":"Whether this campaign is active for eligibility/display."}},"required":["name","type","start_at","end_at","is_active"],"description":"Request DTO for updating a promotion campaign (ai_shop_promotions). Used for administrative campaign changes, extension of business events, or marketing schedule updates. As per requirements, all main fields are required and use atomic, normalized types. Description is optional to support legacy or minimal campaigns."},"IAiShopDeposits.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter by the ID of the customer whose deposit ledger is being queried."},{"type":"null"}],"description":"Optionally filter by the ID of the customer whose deposit ledger is being queried."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter by the recipient seller associated with the deposit (null for platform-only deposits)."},{"type":"null"}],"description":"Optionally filter by the recipient seller associated with the deposit (null for platform-only deposits)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter/search by an order associated with the deposit event."},{"type":"null"}],"description":"Optionally filter/search by an order associated with the deposit event."},"type":{"oneOf":[{"type":"string","description":"Filter deposits by type (e.g., 'credit','debit','reward'), matching ai_shop_deposits.type."},{"type":"null"}],"description":"Filter deposits by type (e.g., 'credit','debit','reward'), matching ai_shop_deposits.type."},"amount_min":{"oneOf":[{"type":"number","description":"Optional lower boundary for deposit amount range queries. If provided, only include ledger entries with amount >= this value."},{"type":"null"}],"description":"Optional lower boundary for deposit amount range queries. If provided, only include ledger entries with amount >= this value."},"amount_max":{"oneOf":[{"type":"number","description":"Optional upper boundary for deposit amount range queries. Only returns entries with amount <= this value."},{"type":"null"}],"description":"Optional upper boundary for deposit amount range queries. Only returns entries with amount <= this value."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"ISO date-time lower boundary for creation filtering."},{"type":"null"}],"description":"ISO date-time lower boundary for creation filtering."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"ISO date-time upper boundary for creation filtering."},{"type":"null"}],"description":"ISO date-time upper boundary for creation filtering."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Requested page number for pagination (>=1)."},{"type":"null"}],"description":"Requested page number for pagination (>=1)."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Result count per page (for paging, >=1)."},{"type":"null"}],"description":"Result count per page (for paging, >=1)."}},"description":"Request DTO for searching, filtering, and paginating deposit entries in ai_shop_deposits. Used by admin dashboards, user account ledgers, or business intelligence workflows. Filtering is always optional; pagination fields (page, limit) control result slicing. All filters map directly to atomic schema or business-analytic requirements. Designed to reflect normalized, audit-friendly backend operations.","required":[]},"IPageAiShopDeposits":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Standard paging information representing this result set's bounds, total count, and navigation info."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopDeposits"},"description":"Page of deposit ledger result objects. All fields correspond to ai_shop_deposits atomic values."}},"required":["pagination","data"],"description":"Paginated response DTO for deposit ledger result sets. Includes both the paging metadata and an array of deposit entry objects. Used by business intelligence, audit, and user-facing account screens.\n\nEach data entry matches the loan/deposit atomic record schema; pagination is as per IPage."},"IAiShopDeposits":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key, UUID of this deposit ledger entry."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"ID of the customer related to the deposit."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Seller beneficiary, if this deposit is for a merchant. Null if a platform-only event."},{"type":"null"}],"description":"Seller beneficiary, if this deposit is for a merchant. Null if a platform-only event."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked order, if relevant to the deposit entry. Null for meta or customer-initiated deposits."},{"type":"null"}],"description":"Linked order, if relevant to the deposit entry. Null for meta or customer-initiated deposits."},"type":{"type":"string","description":"Deposit record type or classification (e.g., 'credit','debit','reward')."},"amount":{"type":"number","description":"Deposit value (double precision float)."},"description":{"oneOf":[{"type":"string","description":"Optional event or business memo/description for the ledger entry."},{"type":"null"}],"description":"Optional event or business memo/description for the ledger entry."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this deposit was journaled."}},"required":["id","ai_shop_customer_id","type","amount","created_at"],"description":"Deposit ledger record entity representing a credit/debit/loyalty event on the platform. Per ai_shop_deposits atomic schema, each row is a fully normalized accounting record for the customer (required), optionally linking to a merchant and/or order, with audit-timeliness enforced for legal reporting. Each field is precisely atomic, tied to the originating event and supporting business reconciliation. Audit, compliance, and reward flows all use this atomic structure for deposit/event analysis."},"IAiShopDeposits.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer for whom the deposit is journaled."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Merchant beneficiary for this deposit (nullable if platform-only)."},{"type":"null"}],"description":"Merchant beneficiary for this deposit (nullable if platform-only)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked order if applicable (nullable for external deposit events)."},{"type":"null"}],"description":"Linked order if applicable (nullable for external deposit events)."},"type":{"type":"string","description":"Type/class (e.g., 'credit','debit','reward') describing the event. Required."},"amount":{"type":"number","description":"Numeric value for the deposit event (positive/negative by business logic)."},"description":{"oneOf":[{"type":"string","description":"Optional business/ledger memo; recommended for audit or compliance. (nullable)"},{"type":"null"}],"description":"Optional business/ledger memo; recommended for audit or compliance. (nullable)"}},"required":["ai_shop_customer_id","type","amount"],"description":"Request DTO for creation of a deposit ledger record in ai_shop_deposits. All data are atomic and normalized for accounting/legal compliance. Foreign keys may be null for platform operations, but must reference existing entities for order/customer/seller relationships. Each field is documented in the schema for external system integration and validation. Desc field is input-only for event context, not for audit trail, which is handled by audit log tables."},"IAiShopDeposits.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer related to this deposit for update (may not change in most cases, but needed if customer-facing correction is supported)."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update recipient seller (nullable if removing merchant link for platform-driven deposit)."},{"type":"null"}],"description":"Update recipient seller (nullable if removing merchant link for platform-driven deposit)."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Update associated order (nullable if unlinking ledger from specific transaction)."},{"type":"null"}],"description":"Update associated order (nullable if unlinking ledger from specific transaction)."},"type":{"type":"string","description":"Update for classification/type. Must use platform-supported codes, e.g., 'credit','debit','reward'."},"amount":{"type":"number","description":"Update deposit amount. Should match audit and payment requirements for float types."},"description":{"oneOf":[{"type":"string","description":"Replace ledger memo (e.g., business correction, compliance update)."},{"type":"null"}],"description":"Replace ledger memo (e.g., business correction, compliance update)."}},"required":["ai_shop_customer_id","type","amount"],"description":"DTO for updating a deposit ledger record in ai_shop_deposits. All changes must stay normalized and compliant to accounting principles. Non-required fields (seller, order, description) can be nullified. Changes may be tracked in audit logs or audit trigger tables for compliance."},"IAiShopMileages.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter for the targeted customer whose mileage transactions are being queried."},{"type":"null"}],"description":"Optional filter for the targeted customer whose mileage transactions are being queried."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optionally filter by order related to the mileage/loyalty transaction."},{"type":"null"}],"description":"Optionally filter by order related to the mileage/loyalty transaction."},"type":{"oneOf":[{"type":"string","description":"Type of mileage flow event ('earn', 'redeem', 'adjust', 'expire', etc.). Allows query by single kind."},{"type":"null"}],"description":"Type of mileage flow event ('earn', 'redeem', 'adjust', 'expire', etc.). Allows query by single kind."},"amount_min":{"oneOf":[{"type":"integer","description":"Minimum mileage value to filter (inclusive)."},{"type":"null"}],"description":"Minimum mileage value to filter (inclusive)."},"amount_max":{"oneOf":[{"type":"integer","description":"Maximum mileage value to filter (inclusive)."},{"type":"null"}],"description":"Maximum mileage value to filter (inclusive)."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Lower date boundary for created_at filter (ISO 8601 string)."},{"type":"null"}],"description":"Lower date boundary for created_at filter (ISO 8601 string)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Upper date boundary for created_at filter (ISO 8601 string)."},{"type":"null"}],"description":"Upper date boundary for created_at filter (ISO 8601 string)."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Requested results page for pagination (starts at 1)."},{"type":"null"}],"description":"Requested results page for pagination (starts at 1)."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Number of results per page in pagination (>=1)."},{"type":"null"}],"description":"Number of results per page in pagination (>=1)."}},"description":"Query and filter parameters for searching and paginating ai_shop_mileages (loyalty point transactions). This structure is used for both admin and user loyalty point/lifetime value dashboards. NULL properties expand the query; non-null values are strict filters.","required":[]},"IPageAiShopMileages":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging metadata to describe page, total count, and navigation reference for results."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopMileage"},"description":"Array of ai_shop_mileages entity records on this page."}},"required":["pagination","data"],"description":"Paginated set of result objects and paging metadata for ai_shop_mileages (loyalty points, rewards). Each entry maps to a single atomic mileage/point/loyalty event for a customer. Each data property element matches the IAiShopMileage structure, and the pagination property defines page offset, totals, and navigation controls."},"IAiShopMileage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the ai_shop_mileages transaction entry."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer associated with this mileage entry."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"Order linked to this mileage event. Null if not earned or spent on a specific order."},{"type":"null"}],"description":"Order linked to this mileage event. Null if not earned or spent on a specific order."},"type":{"type":"string","description":"Event type (earn, redeem, adjust, expire, etc.), as specified in platform loyalty logic."},"amount":{"type":"integer","description":"Points/miles value for this entry. Positive for earn, negative for redeem/expire/adjust as per event."},"description":{"oneOf":[{"type":"string","description":"Business memo/notepad about the points event. Displayed in user/admin ledgers."},{"type":"null"}],"description":"Business memo/notepad about the points event. Displayed in user/admin ledgers."},"created_at":{"type":"string","format":"date-time","description":"Timestamp this points event was registered. Used for audit and reporting."}},"required":["id","ai_shop_customer_id","type","amount","created_at"],"description":"Atomic record for a loyalty/mileage points event (ai_shop_mileages). Each row is normalized, and supports audit/compliance/reverse/reissue logic as needed for full financial system traceability. All fields reference the normalized schema supplied in requirements and the ai_shop_mileages Prisma model."},"IAiShopMileage.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객을 명확히 식별하는 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_customer_id' 컬럼에 해당하며, 마일리지를 적립/사용할 실소유 고객의 고유 식별자입니다. 본 필드는 외래키 제약조건이 있으며, 반드시 선행으로 고객이 등록되어 있어야 유효합니다. 예시: \"ecebc453-1150-4e37-b181-cd336323b788\""},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"마일리지 적립 또는 차감이 특정 주문과 연관된 경우에 해당 주문의 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_order_id' 컬럼입니다. null일 수 있는데, 자체 이벤트(가입 축하 등)에서는 주문과 무관할 수 있습니다."},{"type":"null","format":"uuid","description":"마일리지 적립 또는 차감이 특정 주문과 연관된 경우에 해당 주문의 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_order_id' 컬럼입니다. null일 수 있는데, 자체 이벤트(가입 축하 등)에서는 주문과 무관할 수 있습니다."}],"description":"마일리지 적립 또는 차감이 특정 주문과 연관된 경우에 해당 주문의 UUID입니다.\n\nPrisma DB 스키마의 'ai_shop_order_id' 컬럼입니다. null일 수 있는데, 자체 이벤트(가입 축하 등)에서는 주문과 무관할 수 있습니다."},"type":{"type":"string","description":"마일리지 트랜잭션 유형입니다 (‘earn’,‘redeem’,‘adjust’,‘expire’ 등).\n\nPrisma 스키마 컬럼의 값 그대로 사용하며, 업무 로직상 적립/사용/조정/만료 등 케이스를 구분합니다."},"amount":{"type":"integer","description":"해당 트랜잭션으로 증감되는 마일리지 포인트 변동값입니다. 정수이며, 적립일 땐 양수, 차감일 땐 음수도 허용합니다.\n\nPrisma DB의 'amount' 컬럼 참조."},"description":{"oneOf":[{"type":"string","description":"마일리지 적립/사용 사유 및 설명입니다.\n\nPrisma DB 스키마의 'description' 컬럼에 해당(선택사항, null 허용). 예: \"구매적립 2025-07-22\", \"이벤트 만료회수\" 등."},{"type":"null","description":"마일리지 적립/사용 사유 및 설명입니다.\n\nPrisma DB 스키마의 'description' 컬럼에 해당(선택사항, null 허용). 예: \"구매적립 2025-07-22\", \"이벤트 만료회수\" 등."}],"description":"마일리지 적립/사용 사유 및 설명입니다.\n\nPrisma DB 스키마의 'description' 컬럼에 해당(선택사항, null 허용). 예: \"구매적립 2025-07-22\", \"이벤트 만료회수\" 등."}},"required":["ai_shop_customer_id","type","amount"],"description":"마일리지 적립/차감 등 트랜잭션 행위 생성 시 사용하는 객체입니다.\n\nPrisma DB 'ai_shop_mileages'의 컬럼 정의와 일치하며, 고객ID/적립&주문ID/유형/금액/사유를 명확히 정의합니다. 고객 식별자, 유형, 금액은 필수; 주문ID/설명은 선택적입니다."},"IAiShopMileage.IUpdate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 UUID (외래키), 기존 트랜잭션의 소유자 교정 등에서 사용합니다."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"연관 주문 UUID (nullable), 수정이나 추가시 활용. ex. 주문 환불 등."},{"type":"null","format":"uuid","description":"연관 주문 UUID (nullable), 수정이나 추가시 활용. ex. 주문 환불 등."}],"description":"연관 주문 UUID (nullable), 수정이나 추가시 활용. ex. 주문 환불 등."},"type":{"type":"string","description":"마일리지 트랜잭션 유형 ('earn','redeem','adjust','expire'). 업무 사유 변경 등에서 사용."},"amount":{"type":"integer","description":"수정할 마일리지 증감값 (정수), 기존적립 내역 교정 등에서 사용."},"description":{"oneOf":[{"type":"string","description":"마일리지 적립, 차감 내역에 대한 설명을 변경할 때 사용합니다."},{"type":"null","description":"마일리지 적립, 차감 내역에 대한 설명을 변경할 때 사용합니다."}],"description":"마일리지 적립, 차감 내역에 대한 설명을 변경할 때 사용합니다."}},"required":["ai_shop_customer_id","type","amount"],"description":"마일리지 내역을 수정시 사용하는 객체로, Prisma ai_shop_mileages의 컬럼과 맵핑됩니다. 필수값은 고객ID, 유형, 금액이고 주문ID 및 설명은 변경 가능 시 선택적입니다."},"IVoid":{"type":"object","description":"반환값이 없음을 명시적으로 나타냅니다. 성공/실패만 판별하며 별도 데이터는 포함하지 않습니다. REST API의 DELETE 등에서 활용.","properties":{},"required":[]},"IAiShopDonationCoupon.IRequest":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"도네이션과 연결된 쿠폰의 UUID. Prisma DB의 'ai_shop_coupon_id' 컬럼 기반. 특정 쿠폰 기반의 도네이션 내역 조회에 사용."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 UUID. 'ai_shop_customer_id' 컬럼으로, 특정 고객의 도네이션 내역 조회시에 사용."},"ai_shop_order_id":{"type":"string","format":"uuid","description":"관련 주문의 UUID (nullable 가능). Prisma에 따라 실제로 null도 허용됨."},"donation_type":{"type":"string","description":"도네이션 방식 유형. 'seller_funded','platform_match','customer_opt_in' 등 업무에서 정한 문자열 값입니다."},"created_at_from":{"type":"string","format":"date-time","description":"조회 시작일(From). ISO 8601로, 도네이션 생성일 기준 필터링에 사용. 예: '2025-07-01T00:00:00Z'"},"created_at_to":{"type":"string","format":"date-time","description":"조회 종료일(To). ISO 8601로, 도네이션 생성일 기준 필터링 범위 끝. 예: '2025-07-31T23:59:59Z'"}},"required":[],"description":"AI Shop 도네이션 쿠폰 내역 조회/검색 요청 객체.\n\nPrisma 'ai_shop_donation_coupons'의 컬럼 기준으로 다양한 필터(쿠폰, 고객, 주문, 도네이션 유형, 기간 등)를 복합적으로 지정할 수 있습니다. 모든 필드는 선택사항이며, 미지정시 전체 범위 조회."},"IPageAiShopDonationCoupon":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopDonationCoupon"}}},"required":["pagination","data"],"description":"AI Shop 도네이션 쿠폰 페이지네이션 결과.\n\nPrisma 'ai_shop_donation_coupons' 레코드 목록을 실제 요청 파라미터 기반으로 페이지 처리하여 반환합니다. pagination은 현재 페이지, 총 레코드수, 한페이지당 레코드 등. data 배열은 실제 도네이션 쿠폰 레코드 객체 배열입니다."},"IAiShopDonationCoupon":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"도네이션-쿠폰 row의 PK UUID.\n\nPrisma DB의 'id' 컬럼 (식별자 및 API 리소스 PK)."},"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"연결 쿠폰의 UUID (FK). Prisma 'ai_shop_coupon_id' 컬럼 참조."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"도네이션(기부)을 실행한 고객의 UUID, FK. Prisma 'ai_shop_customer_id' 컬럼."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"donation이 특정 주문과 연관될 경우 주문 UUID. 'ai_shop_order_id' 컬럼, null 허용."},{"type":"null","format":"uuid","description":"donation이 특정 주문과 연관될 경우 주문 UUID. 'ai_shop_order_id' 컬럼, null 허용."}],"description":"donation이 특정 주문과 연관될 경우 주문 UUID. 'ai_shop_order_id' 컬럼, null 허용."},"amount_donated":{"type":"number","format":"double","description":"실제 기부된/적립된 금액 단위(소수점 포함). Prisma DB의 'amount_donated' 컬럼."},"donation_type":{"type":"string","description":"도네이션 유형 - 'seller_funded','platform_match','customer_opt_in' 등 정의된 유형 문자열. Prisma 컬럼명: 'donation_type'."},"created_at":{"type":"string","format":"date-time","description":"생성일시(UTC ISO8601), Prisma 'created_at'"}},"required":["id","ai_shop_coupon_id","ai_shop_customer_id","amount_donated","donation_type","created_at"],"description":"AI Shop에서 도네이션 쿠폰 redemption시 생성되는 atomic 도네이션 정보 객체.\n\nPrisma 'ai_shop_donation_coupons' 테이블의 칼럼 매핑에 따라 기부금액/연결 쿠폰/주문/고객/pk/기부유형/생성일 등이 포함됩니다. 모든 id는 UUID이며 금액은 실수형(double)입니다."},"IAiShopDonationCoupon.ICreate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"연동 쿠폰의 UUID(PK, FK).\n\nPrisma 'ai_shop_coupon_id' 컬럼으로 연결 쿠폰 정보를 지정. 기부성 쿠폰일 경우 반드시 필요."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"도네이션 전송(주체) 고객의 UUID(PK, FK). 기부의 소유주 명확화."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"관련 주문 UUID. null일 수 있음, 이벤트성 도네이션은 주문 무관."},{"type":"null","format":"uuid","description":"관련 주문 UUID. null일 수 있음, 이벤트성 도네이션은 주문 무관."}],"description":"관련 주문 UUID. null일 수 있음, 이벤트성 도네이션은 주문 무관."},"amount_donated":{"type":"number","format":"double","description":"실제 기부된 금액단위(원화 등, double).\n\nPrisma DB기준 amount_donated 컬럼."},"donation_type":{"type":"string","description":"도네이션 방식(유형) - 'seller_funded', 'platform_match', 'customer_opt_in'등 업무 정의 문자열."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","amount_donated","donation_type"],"description":"도네이션 쿠폰 사용(기부) 정보를 신규 입력할 때 사용하는 생성 객체.\n\nPrisma 'ai_shop_donation_coupons' 테이블의 생성 컬럼 조건과 동일하게, 쿠폰ID, 고객ID, 기부유형, 금액은 필수; 주문ID는 옵션입니다."},"IAiShopDonationCoupon.IUpdate":{"type":"object","properties":{"ai_shop_coupon_id":{"type":"string","format":"uuid","description":"연동 쿠폰 UUID(PK, FK). 도네이션 쿠폰 변경 시 사용."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객ID(PK, FK). 도네이션 소유주 변경 용."},"ai_shop_order_id":{"oneOf":[{"type":"string","format":"uuid","description":"주문 UUID(변경시), null 허용."},{"type":"null","format":"uuid","description":"주문 UUID(변경시), null 허용."}],"description":"주문 UUID(변경시), null 허용."},"amount_donated":{"type":"number","format":"double","description":"기부 금액(실수), 업무상 기부액 수정시 사용."},"donation_type":{"type":"string","description":"도네이션 방식/유형. 업무정책상 변경 용."}},"required":["ai_shop_coupon_id","ai_shop_customer_id","amount_donated","donation_type"],"description":"도네이션 쿠폰 정보 수정시 사용하는 객체. Prisma 테이블의 실제 컬럼과 일치하며, 기부액/쿠폰ID/고객ID/주문ID/유형에 대해 교정 또는 갱신을 지원합니다."},"IAiShopInquiry.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 FK(문의글 소유자). Prisma 'ai_shop_customer_id' 컬럼 참조."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"상품 문의시 해당 상품의 FK. Prisma DB 'ai_shop_product_id', null 가능."},{"type":"null","format":"uuid","description":"상품 문의시 해당 상품의 FK. Prisma DB 'ai_shop_product_id', null 가능."}],"description":"상품 문의시 해당 상품의 FK. Prisma DB 'ai_shop_product_id', null 가능."},"title":{"type":"string","description":"문의 제목/제목 키워드. 부분검색 및 리스트 검색에 활용."},"status":{"type":"string","description":"문의 상태 필터. 예: 'open','answered','closed' 등."},"created_at_from":{"type":"string","format":"date-time","description":"생성일(From, ISO8601 기준) 필터 범위 시작값."},"created_at_to":{"type":"string","format":"date-time","description":"생성일(To, ISO8601 기준) 필터 범위 끝값."}},"required":[],"description":"고객 문의 리스트/검색을 위한 요청 파라미터 객체.\n\nPrisma DB의 'ai_shop_inquiries' 모든 컬럼에 대해 복합 필터(고객, 상품, 상태, 제목, 기간 등) 지정 시 사용합니다. 모든 필드는 선택적으로, 상세 조건을 지정하지 않은 경우 전체 조회입니다."},"IPageAiShopInquiry":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInquiry"}}},"required":["pagination","data"],"description":"고객 문의(ai_shop_inquiries) 페이징 조회 결과 객체입니다.\n\npagination에는 현페이지/총레코드/한페이지크기 등 페이지 운용 정보가, data 배열에는 문의 레코드 배열이 들어갑니다. 각 원소는 IAiShopInquiry로 상세 정의되어 있습니다."},"IAiShopInquiry":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"고객 문의(PK, UUID). Prisma DB 'id' 컬럼."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 FK(문의 주체, UUID). Prisma 'ai_shop_customer_id'"},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"프러덕트(상품) FK - 어떤 상품에 대한 문의인 경우에만 지정됩니다. Prisma 'ai_shop_product_id' (nullable)"},{"type":"null","format":"uuid","description":"프러덕트(상품) FK - 어떤 상품에 대한 문의인 경우에만 지정됩니다. Prisma 'ai_shop_product_id' (nullable)"}],"description":"프러덕트(상품) FK - 어떤 상품에 대한 문의인 경우에만 지정됩니다. Prisma 'ai_shop_product_id' (nullable)"},"title":{"type":"string","description":"문의 제목(텍스트). Prisma 'title' 컬럼."},"body":{"type":"string","description":"문의본문(텍스트). Prisma 'body' 컬럼(길이제한 없음)."},"status":{"type":"string","description":"문의 상태코드('open','answered','closed' 등).\n\nPrisma 'status' 컬럼."},"created_at":{"type":"string","format":"date-time","description":"문의 생성일시(ISO 8601)."},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"최종 편집/수정시각(ISO8601). null이면 변경사항 없음. Prisma 'updated_at'"},{"type":"null","format":"date-time","description":"최종 편집/수정시각(ISO8601). null이면 변경사항 없음. Prisma 'updated_at'"}],"description":"최종 편집/수정시각(ISO8601). null이면 변경사항 없음. Prisma 'updated_at'"}},"required":["id","ai_shop_customer_id","title","body","status","created_at"],"description":"고객 문의(Post) 상세 정보.\n\nPrisma 'ai_shop_inquiries'의 각 컬럼과 1:1 매핑되는 객체로, 문의글 고유번호/고객ID/상품ID/제목/본문/상태/생성일/수정일 등이 포함됩니다. updated_at은 null 허용입니다."},"IAiShopInquiry.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"문의 만든 고객의 UUID (FK, 필수). Prisma 'ai_shop_customer_id'."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"문의 대상 상품ID. 상품과 무관한 문의는 null로 설정 또는 미입력. Prisma 'ai_shop_product_id'"},{"type":"null","format":"uuid","description":"문의 대상 상품ID. 상품과 무관한 문의는 null로 설정 또는 미입력. Prisma 'ai_shop_product_id'"}],"description":"문의 대상 상품ID. 상품과 무관한 문의는 null로 설정 또는 미입력. Prisma 'ai_shop_product_id'"},"title":{"type":"string","description":"문의글의 제목(텍스트). Prisma 'title' 컬럼, 필수."},"body":{"type":"string","description":"본문 텍스트(내용), 필수. Prisma 'body' 컬럼."},"status":{"type":"string","description":"문의 상태. 예: 'open', 'answered', 'closed'. Prisma 'status' 컬럼 정의."}},"required":["ai_shop_customer_id","title","body","status"],"description":"새로운 고객 문의 등록시 클라이언트 또는 서비스단에서 요청 body로 사용하는 객체.\n\n문의한 고객ID, (옵션:상품ID), 제목, 본문, 상태코드가 들어가며, Prisma DB 'ai_shop_inquiries' 생성조건과 일치합니다."},"ai_shopIAiShopInquiry.IUpdate":{"type":"object","description":"업데이트용 문의 엔티티 객체(IAiShopInquiry.IUpdate)로, ai_shop_inquiries에 정의된 필드만을 포함해 업데이트 요청에 사용한다.\n\n업데이트 가능한 필드는 제목(title), 본문(body), 상태(status), 참조곡 ai_shop_product_id 등이 있으며, 모두 스키마에 명시된 것들이다. deleted_at 등 소프트 삭제 관련 필드는 존재하지 않는다. 대부분의 필드는 선택적으로 제공 가능하며, id는 경로 파라미터로 전달된다. 본 타입은 PUT 요청 Body에 사용된다.","properties":{"title":{"type":"string","description":"문의 제목. 사용자가 남긴 질문 또는 요구의 요약을 제공하며 관리자가 또는 답변자가 한눈에 내용을 파악할 수 있도록 한다.\n\n예시: '배송 지연 관련 문의', '상품 사이즈 문의' 등."},"body":{"type":"string","description":"문의 본문. 문의의 상세 내용을 기록한다.\n\n예시: '상품이 언제 출고되는지 궁금합니다.'"},"status":{"type":"string","description":"문의 상태 (예: 'open', 'answered', 'closed'). 워크플로 관리 및 상태 변경 용도로 사용된다.\n\n상태에 따른 비즈니스 규칙에 따라 처리된다."},"ai_shop_product_id":{"oneOf":[{"type":"string","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."},{"type":"null","format":"uuid","description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}],"description":"관련 상품의 고유식별자(UUID). 문의가 특정 상품에 대한 것일 시 명확히 연결된다.\n\n상품 선택형 문의가 아니면 null로 둘 수 있다."}},"required":["title","body","status"]},"ai_shopIAiShopInquiryReply.IRequest":{"type":"object","description":"문의 답변 엔티티 리스트 조회 및 검색 요청 바디. ai_shop_inquiry_replies 스키마 내에서 검색이 허용되는 필드만을 기준으로 검색/필터링/페이징 한다.\n\n예: 답변 리스트, 조건부 조회, 페이징, 정렬/필터/검색 쿼리에 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"본 답변이 소속된 문의 엔티티의 고유식별자(UUID). 특정 문의에 종속 replies만 조회하고자 할 때 사용한다."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."}],"description":"답변 작성 셀러(있는 경우)의 UUID. 셀러 계정 기준 답변 검색 등에 활용할 수 있다."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},{"type":"null","format":"uuid","description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."}],"description":"답변 작성 관리자(있는 경우)의 UUID. 관리자 답변 만을 필터링할 때 쓸 수 있다."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."}],"description":"상위(부모) 답변의 UUID. 트리 구조 지원. 특정 parent 하위 replies만 검색할 때 필터링 값으로 넣는다."},"body":{"type":"string","description":"답변 본문 전체/부분 검색 시 사용."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 시작일(YYYY-MM-DDTHH:mm:ssZ)."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},{"type":"null","format":"date-time","description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."}],"description":"쿼리 기준 종료일(YYYY-MM-DDTHH:mm:ssZ)."},"page":{"type":"integer","description":"조회 페이지 넘버. 1-based."},"limit":{"type":"integer","description":"한 페이지에 가져올 최대 결과수. 기본 100."},"sort":{"type":"string","description":"정렬 방식 결정 예: 'created_at_desc', 'created_at_asc'. 지원하는 컬럼명+방향 조합만 허용."}},"required":["ai_shop_inquiry_id"]},"ai_shopIPageIAiShopInquiryReply":{"type":"object","description":"페이징된 문의 답변 리스트 컨테이너 타입. 각 엔티티는 ai_shop_inquiry_replies에서 정규화된 reply 오브젝트 형태로 반환된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/ai_shopIAiShopInquiryReply"},"description":"답변 리스트(한 페이지의 데이터 배열)"}},"required":["pagination","data"]},"ai_shopIAiShopInquiryReply":{"type":"object","description":"문의 답변 상세 정보 객체. ai_shop_inquiry_replies 내 실제 row를 반환한다.\n\n답변은 문의 ai_shop_inquiries에 종속적이며 seller, admin의 참조, 그리고 parent_id(트리구조) 등을 명확히 포함한다.","properties":{"id":{"type":"string","format":"uuid","description":"답변의 고유 식별자 (UUID)"},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 속한 문의 id."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 셀러 id."},{"type":"null","format":"uuid","description":"답변 작성 셀러 id."}],"description":"답변 작성 셀러 id."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 작성 관리자 id."},{"type":"null","format":"uuid","description":"답변 작성 관리자 id."}],"description":"답변 작성 관리자 id."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},{"type":"null","format":"uuid","description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."}],"description":"상위(부모) 답변의 id – 트리 구조의 경우에만 사용."},"body":{"type":"string","description":"답변 내용."},"created_at":{"type":"string","format":"date-time","description":"작성일시 (ISO8601)"}},"required":["id","ai_shop_inquiry_id","body","created_at"]},"ai_shopIAiShopInquiryReply.ICreate":{"type":"object","description":"AI Shop 문의 답변 등록 body용 타입. 필수 필드는 문의 id, 내용(body) – 그 외는 작성자의 역할에 따라 셀러, 관리자 id, 부모 id(트리형 답글) 등 사용한다.","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"답변이 달릴 문의의 id. 필수."},"ai_shop_seller_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},{"type":"null","format":"uuid","description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."}],"description":"답변 셀러 id. 작성자가 셀러일 때만 세팅."},"ai_shop_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."},{"type":"null","format":"uuid","description":"답변 관리자인 경우. 관리자 답변만 세팅."}],"description":"답변 관리자인 경우. 관리자 답변만 세팅."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},{"type":"null","format":"uuid","description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."}],"description":"상위(부모) 답변 id. 트리형 답변 구조일 때 부모를 등록."},"body":{"type":"string","description":"답변 본문(필수)"}},"required":["ai_shop_inquiry_id","body"]},"ai_shopIAiShopInquiryReply.IUpdate":{"type":"object","description":"문의 답변 수정(업데이트) DTO 타입. 수정 가능한 필드는 본문(body), 부모(parent_id) 등이고, 작성자 id는 원칙적으로 변경하지 않는다.","properties":{"body":{"type":"string","description":"수정될 답변 본문(필수)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."},{"type":"null","format":"uuid","description":"변경될 상위(부모) 답변 id(필요시)."}],"description":"변경될 상위(부모) 답변 id(필요시)."}},"required":["body"]},"ai_shopIAiShopReview.IRequest":{"type":"object","description":"상품 리뷰 검색 및 페이징 요청 타입 (리스트 조회 request DTO). ai_shop_reviews 테이블 내 실제 컬럼 기준으로만 필터/정렬/검색/페이징을 실시한다.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자(고객) id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"rating":{"type":"integer","description":"리뷰의 평가 점수(1~5의 범위)로 필터링."},"status":{"type":"string","description":"리뷰의 상태값으로 검색. 가능한 값: 'pending', 'approved', 'rejected'"},"body":{"type":"string","description":"내용(본문) 부분검색용"},"created_at_from":{"type":"string","format":"date-time","description":"작성시작일(쿼리 기준)"},"created_at_to":{"type":"string","format":"date-time","description":"작성종료일(쿼리 기준)"},"page":{"type":"integer","description":"페이지 번호(1-base), 생략시 1"},"limit":{"type":"integer","description":"1페이지 데이터 최대 개수(생략시 100)"},"sort":{"type":"string","description":"정렬 기준칼럼+방향('created_at_desc', 'rating_asc' 등)"}},"required":[]},"ai_shopIPageIAiShopReview":{"type":"object","description":"상품 리뷰 리스트의 페이징 결과 컨테이너. metadata 및 data 배열이 페어로 구성된다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/ai_shopIAiShopReview"},"description":"상품 리뷰 데이터 배열(한 페이지)"}},"required":["pagination","data"]},"ai_shopIAiShopReview":{"type":"object","description":"단일 상품 리뷰 row를 표현하는 객체 DTO. ai_shop_reviews 테이블 필드에 대응(고객, 상품, 본문, 평점, 상태, timestamps 등).","properties":{"id":{"type":"string","format":"uuid","description":"리뷰의 고유 식별자(UUID)"},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객(작성자)의 id"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"대상 상품 id"},"body":{"type":"string","description":"리뷰 본문 내용"},"rating":{"type":"integer","description":"리뷰의 별점(평가점수, 1~5 한정)"},"status":{"type":"string","description":"리뷰 상태. 'pending'|'approved'|'rejected' 등 워크플로우에 따라 변동"},"created_at":{"type":"string","format":"date-time","description":"작성일시(ISO8601), 등록시 자동 생성"},"updated_at":{"oneOf":[{"type":"string","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"},{"type":"null","format":"date-time","description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}],"description":"수정/갱신일시(ISO8601). 최초 작성이면 null"}},"required":["id","ai_shop_customer_id","ai_shop_product_id","body","rating","status","created_at"]},"ai_shopIAiShopReview.ICreate":{"type":"object","description":"상품 리뷰 등록용 바디. ai_shop_reviews 테이블의 필수 필드에 대응(고객, 상품, 본문, 평점, 상태). 작성일시는 생략시 서버생성.","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"리뷰 작성자의 id(UUID)"},"ai_shop_product_id":{"type":"string","format":"uuid","description":"리뷰가 달릴 상품 id(UUID)"},"body":{"type":"string","description":"리뷰 내용"},"rating":{"type":"integer","description":"별점(평가점수, 1~5)"},"status":{"type":"string","description":"리뷰 상태값. 작성시 기본 'pending', 즉시 노출이면 'approved' 등"}},"required":["ai_shop_customer_id","ai_shop_product_id","body","rating","status"]},"ai_shopIAiShopReview.IUpdate":{"type":"object","description":"리뷰 수정용 DTO 타입. ai_shop_reviews 기준으로 본문, 점수, 상태에 대해 수정 가능하다.","properties":{"body":{"type":"string","description":"수정 후 리뷰 본문"},"rating":{"type":"integer","description":"수정 후 별점(1~5)"},"status":{"type":"string","description":"변경될 리뷰 상태 (예: 'pending', 'approved', 'rejected')"}},"required":[]},"ai_shopIAiShopReviewModerations.IRequest":{"type":"object","description":"리뷰 모더레이션(관리자 승인/반려/플래그) 검색/리스트/필터링 바디. ai_shop_review_moderations 테이블의 실제 컬럼만 사용하며, 리뷰id, 관리자id, 작업타입, 사유, 시점 등으로 검색/정렬/페이징을 지원한다.","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"타겟 리뷰 id"},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"처리 관리자 id"},"action":{"type":"string","description":"리뷰에 대한 관리 작업 코드('approve', 'reject', 'flag' 등)"},"reason":{"type":"string","description":"모더레이션 또는 작업 사유"},"created_at_from":{"type":"string","format":"date-time","description":"시작일 기준 검색"},"created_at_to":{"type":"string","format":"date-time","description":"종료일 기준 검색"},"page":{"type":"integer","description":"페이징: 페이지 번호(1-base)"},"limit":{"type":"integer","description":"페이징: 페이지 크기"},"sort":{"type":"string","description":"정렬(칼럼+_asc|desc) 예시: 'created_at_desc'"}},"required":[]},"IAiShopReviewModerations.IRequest":{"type":"object","description":"리뷰 관리(모더레이션) 검색/목록 조회 요청 DTO입니다.\n\nai_shop_review_moderations 테이블에 대한 필터, 정렬, 페이지네이션 조건을 포함하며, 'admin', 'action', 'reason', 'created_at' 등 schema에 정의된 필드로 필터링이 가능합니다. 대규모 리뷰 관리/감사 대시보드, 워크플로우, 역할별 검색에 활용합니다.","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"관리 대상이 되는 리뷰의 고유 ID (ai_shop_reviews.id)."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"조치(모더레이션)한 관리자(어드민)의 고유 ID (ai_shop_admins.id)."},"action":{"type":"string","description":"모더레이션 액션 타입, 예시: 'approve', 'reject', 'flag'(ai_shop_review_moderations.action)."},"reason":{"type":"string","description":"모더레이션 사유, 예: '부적절', '로봇 탐지', '악성 댓글', '리포트 수신' 등"},"created_at_from":{"type":"string","format":"date-time","description":"조회 기간(시작 시간) - ISO 8601 형식"},"created_at_to":{"type":"string","format":"date-time","description":"조회 기간(종료 시간) - ISO 8601 형식"},"page":{"type":"integer","description":"페이지네이션: 요청 페이지 번호"},"limit":{"type":"integer","description":"페이지네이션: 한 페이지 반환 개수(최대 100 등)"},"sort":{"type":"string","description":"정렬 기준 ('created_at desc', etc)"},"search":{"type":"string","description":"액션, 사유, 관리자 등 통합 텍스트 검색어"}},"required":[]},"IPageAiShopReviewModerations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the review moderation list.\n\nContains the current page, limit, total record count, and total page count for the paginated review moderation query."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReviewModerations"},"description":"List of ai_shop_review_moderations records for the current page.\n\nEach record contains the detailed moderation audit data for a single review moderation operation."}},"required":["pagination","data"],"description":"A paginated result set for review moderation actions (ai_shop_review_moderations).\n\nThis result contains both the list of moderation actions for the current page and the encapsulated pagination metadata.\n\nThis schema enables consistent paginated access for admin/moderator tools and audit reporting on review moderation events."},"IAiShopReviewModerations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the review moderation action.\n\nAuto-generated unique identifier for each moderation record, used to reference exact audit entries in the moderation flow.\n\nReferenced from the ai_shop_review_moderations.id column."},"ai_shop_review_id":{"type":"string","format":"uuid","description":"Reference to the target review being moderated (foreign key to ai_shop_reviews).\n\nThis field links the moderation action to the specific product review it was taken against.\n\nMatches the ai_shop_review_moderations.ai_shop_review_id column."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"Reference to the admin user who performed the moderation action (foreign key to ai_shop_admins).\n\nThis records which administrator acted on the review (for compliance and audit).\n\nMatches the ai_shop_review_moderations.ai_shop_admin_id column."},"action":{"type":"string","description":"Moderation action taken: 'approve', 'reject', or 'flag'.\n\nThis string captures the result/outcome of the moderation operation.\n\nCorresponds to ai_shop_review_moderations.action."},"reason":{"type":"string","description":"Reason or justification for the moderation action.\n\nMay include free-text explanation for the audit trail, such as 'Spam', 'Offensive Language', or policy reference.\n\nCorresponds to ai_shop_review_moderations.reason."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the moderation action occurred.\n\nIndicates the audit event time for compliance records.\n\nMatches ai_shop_review_moderations.created_at."}},"required":["id","ai_shop_review_id","ai_shop_admin_id","action","reason","created_at"],"description":"Review moderation action entity for ai_shop_review_moderations.\n\nRepresents a single moderation event (approve, reject, flag, etc) executed by an admin on a customer review.\n\nAuditable and immutable for compliance. Used to record moderation workflow, trace history, and compliance response to flagged or disputed reviews."},"IAiShopReviewModerations.ICreate":{"type":"object","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"ID of the review to be moderated (foreign key to ai_shop_reviews).\n\nDetermines which review the moderation action targets.\n\nMust match an existing ai_shop_reviews.id value."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"ID of the administrator taking the moderation action (foreign key to ai_shop_admins).\n\nIndicates which admin initiated the moderation event.\n\nMust match an existing ai_shop_admins.id value."},"action":{"type":"string","description":"Moderation action to apply: 'approve', 'reject', or 'flag'.\n\nDetermines the moderation state to set for the review.\n\nCommon values include: 'approve', 'reject', 'flag'."},"reason":{"type":"string","description":"Required justification for the moderation action, referencing the business/compliance reason or free text.\n\nCorresponds to ai_shop_review_moderations.reason column."}},"required":["ai_shop_review_id","ai_shop_admin_id","action","reason"],"description":"Payload to create a review moderation action for ai_shop_review_moderations.\n\nRepresents an auditable action by an administrator to approve, flag, or reject a specific review with required justification (reason).\n\nUsed for admin system, compliance logic, or moderation automation integrations."},"IAiShopReviewModerations.IUpdate":{"type":"object","properties":{"action":{"type":"string","description":"Updated moderation action value, such as 'approve', 'reject', or 'flag'.\n\nMust be consistent with ai_shop_review_moderations.action requirements."},"reason":{"type":"string","description":"Updated moderation reason or justification, corresponding to the new moderation decision.\n\nMay be used to append further explanation to the moderation action."}},"required":["action","reason"],"description":"Update payload for review moderation actions (ai_shop_review_moderations).\n\nThis object allows an admin to correct, annotate, or update the moderation decision and justification for an existing moderation audit record."},"IAiShopReviewRatings.IRequest":{"type":"object","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"ID of the review for helpfulness voting (foreign key to ai_shop_reviews).\n\nUsed to filter or select ratings relating to a specific product review."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"ID of the customer casting the helpfulness vote (foreign key to ai_shop_customers).\n\nUsed to filter for helpfulness votes from or by a particular customer."},"helpful":{"type":"boolean","description":"Whether the helpfulness vote is an upvote (true) or a downvote (false).\n\nUsed to filter upvoted or downvoted review ratings."},"created_at":{"type":"string","format":"date-time","description":"Date/time when the vote was cast.\n\nMay be used for filtering by creation window in search APIs."}},"required":[],"description":"Filter/search request schema for paginated listing of review helpfulness ratings in ai_shop_review_ratings.\n\nUsed in analytics dashboards and admin tools to search, filter, or sort customer helpfulness voting records."},"IPageAiShopReviewRatings":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for review ratings list.\n\nIncludes paging state, total count, and current page for the review helpfulness rating search."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopReviewRatings"},"description":"Array of ai_shop_review_ratings records listed for this page.\n\nEach object details one customer's upvote/downvote on a specific product review."}},"required":["pagination","data"],"description":"Paginated result set for review helpfulness ratings (ai_shop_review_ratings).\n\nReturned by query/search endpoints to provide both current page of results and detailed pagination metadata."},"IAiShopReviewRatings":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for a review rating record.\n\nMaps to ai_shop_review_ratings.id—identifies one helpfulness vote."},"ai_shop_review_id":{"type":"string","format":"uuid","description":"Product review being rated (foreign key to ai_shop_reviews).\n\nLinks vote to specific customer review.\n\nMatches ai_shop_review_ratings.ai_shop_review_id."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer providing the upvote/downvote (foreign key to ai_shop_customers).\n\nSignifies who rated the review as helpful or not."},"helpful":{"type":"boolean","description":"True if the vote is an upvote (helpful), false if downvote (not helpful).\n\nAtomic boolean for analytics, fraud prevention, and review ranking.\n\nCorresponds to ai_shop_review_ratings.helpful."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when this rating was cast (audit/replay support).\n\nPopulated from ai_shop_review_ratings.created_at."}},"required":["id","ai_shop_review_id","ai_shop_customer_id","helpful","created_at"],"description":"atomic record for a single customer review helpfulness vote (ai_shop_review_ratings).\n\nThis entity records a customer marking a review as helpful (true/upvote) or not helpful (false/downvote). Used for engagement metrics, fraud/scam detection, and powering product feedback analytics.\n\nStrictly atomic: One row per customer/review pair; multiple votes result in updating or overwriting the current record."},"IAiShopReviewRatings.ICreate":{"type":"object","properties":{"ai_shop_review_id":{"type":"string","format":"uuid","description":"The ID of the review being rated (foreign key to ai_shop_reviews).\n\nDetermines the review for which the helpfulness vote is being registered."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"The ID of the customer providing the helpfulness vote (foreign key to ai_shop_customers).\n\nSpecifies which user cast the upvote/downvote."},"helpful":{"type":"boolean","description":"Whether this is a positive (upvote, true) or negative (downvote, false) rating for the review.\n\nCorresponds to ai_shop_review_ratings.helpful."}},"required":["ai_shop_review_id","ai_shop_customer_id","helpful"],"description":"Creation payload for adding a review helpfulness rating (ai_shop_review_ratings).\n\nRepresents a customer marking a review as either helpful or unhelpful."},"IAiShopReviewRatings.IUpdate":{"type":"object","properties":{"helpful":{"type":"boolean","description":"Updated boolean value for the helpfulness vote.\n\nSet to true for upvote/helpful or false for downvote/not helpful.\n\nCorresponds to ai_shop_review_ratings.helpful."}},"required":["helpful"],"description":"Update schema for review helpfulness rating (ai_shop_review_ratings).\n\nAllows a customer to change their previous helpful/unhelpful vote on a review."},"IAiShopInquiryModerations.IRequest":{"type":"object","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"The inquiry being moderated (foreign key to ai_shop_inquiries).\n\nUsed to filter results for moderation logs of a single inquiry."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"The administrator performing the moderation action (foreign key to ai_shop_admins).\n\nUsed to filter moderation actions by responsible moderator."},"action":{"type":"string","description":"Type of moderation action performed: 'approve', 'flag', or 'delete'.\n\nUsed to filter by moderation type."},"reason":{"type":"string","description":"Business/compliance explanation for the moderation decision.\n\nMay be used in search for logs by cause or outcome."},"created_at":{"type":"string","format":"date-time","description":"Date/time when the moderation action was performed.\n\nSupports search or reporting use cases for moderation event logs."}},"required":[],"description":"Filter/search schema for paginated listing of inquiry moderation logs (ai_shop_inquiry_moderations).\n\nUsed in admin UI, compliance search, or moderation dashboards."},"IPageAiShopInquiryModerations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Paging state information for the inquiry moderation log list.\n\nProvides current page number, record limit, total record count, and page count."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopInquiryModerations"},"description":"Page of inquiry moderation actions (ai_shop_inquiry_moderations) matching the search query, for the current result set."}},"required":["pagination","data"],"description":"Paginated result structure for inquiry moderation logs (ai_shop_inquiry_moderations).\n\nUsed by compliance/Audit dashboards to present lists or search results for moderation actions across inquiries."},"IAiShopInquiryModerations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID for this moderation log entry.\n\nUnambiguously identifies the moderation action in system records."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"The inquiry (ai_shop_inquiries) being moderated.\n\nIndicates which inquiry was the subject of the moderation process."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"Reference to the administrator (ai_shop_admins) who performed the moderation.\n\nEvery moderation event logs the actor for compliance.\n\nMaps to ai_shop_inquiry_moderations.ai_shop_admin_id."},"action":{"type":"string","description":"Type of moderation action taken (e.g., 'approve', 'flag', 'delete').\n\nThis field captures the moderation decision made on the inquiry."},"reason":{"type":"string","description":"Moderator-supplied explanation or cause for moderation.\n\nUsed in audit trails to provide compliance rationale.\n\nMatches ai_shop_inquiry_moderations.reason."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of the moderation event (audit trail column).\n\nPopulated by system on event creation.\n\nMaps to ai_shop_inquiry_moderations.created_at."}},"required":["id","ai_shop_inquiry_id","ai_shop_admin_id","action","reason","created_at"],"description":"Entity for a single inquiry moderation event (ai_shop_inquiry_moderations).\n\nCaptures a single audit record of an admin moderation action on a customer inquiry, including actor, action, explanation, and event timestamp."},"IAiShopInquiryModerations.ICreate":{"type":"object","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Unique identifier of the inquiry being moderated. This field links the moderation action to the specific ai_shop_inquiries entity.\n\nReflects business requirement for audit and compliance: every moderation action must be traceable to its inquiry object."},"ai_shop_admin_id":{"type":"string","format":"uuid","description":"Unique identifier of the admin performing the moderation action. This field establishes the responsible actor for compliance, audit, and traceability.\n\nCorresponds directly to admin user database record and is required for accountability."},"action":{"type":"string","description":"Moderation action type that was performed. This value describes what operation took place: e.g., 'approve', 'flag', or 'delete'.\n\nSupported values are governed by the application layer, reflecting business logic for moderation flows (approve/flag/delete)."},"reason":{"type":"string","description":"Rationale or explanation for why the moderation action was taken. Required for audit, transparency, and regulatory compliance.\n\nExample: 'Spam content', 'Off-topic', 'Abusive language'. Clarifies the context of the moderation decision."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp indicating when the moderation action was made. Required for audit trail, SLAs, and workflow timelining.\n\nSet at creation time; not modifiable afterwards."}},"required":["ai_shop_inquiry_id","ai_shop_admin_id","action","reason","created_at"],"description":"Creation payload for an inquiry moderation action. Required for AI Shop audit/compliance and workflow history. All fields correspond to normalized database columns and are required by business rules."},"IAiShopInquiryModerations.IUpdate":{"type":"object","properties":{"action":{"type":"string","description":"The updated moderation action (e.g., approve, flag, delete). Changing this value must be a justified business or compliance correction only; changes are audit-logged externally."},"reason":{"type":"string","description":"The revised justification or annotation for the moderation action. Permitted updates only to clarify or correct moderation rationale for business/policy compliance."}},"required":["action","reason"],"description":"Update payload for an inquiry moderation action. Supports correction/annotation of moderation record in AI Shop system; only allowed fields per strict schema normalization."},"IAiShopFavoritesProducts.IListRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Unique identifier of the customer whose favorites are to be listed. Required for scoping search and enforcing access control—the result set includes only favorites for this user.\n\nBusiness context: user-centered engagement, personalization, and compliance. Typically set by authentication/session context."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Optional filter: Only favorites for a specific product. Allows targeted querying for a user's favorite status regarding a particular catalog item.\n\nNull if not filtering by product."},"created_at_before":{"type":"string","format":"date-time","description":"Optional: Only favorites added before this ISO8601 timestamp are included. Enables historic reporting or business logic for time-dependent personalization. Null if omitted."},"created_at_after":{"type":"string","format":"date-time","description":"Optional: Only favorites added after this ISO8601 timestamp are returned. Enables querying for recent additions (e.g., for activity feeds, batch syncs). Null if omitted."},"limit":{"type":"integer","format":"int32","description":"Maximum number of results to return in this page. Used for pagination and UI efficiency; default/maximum enforced at service level."},"offset":{"type":"integer","format":"int32","description":"Number of objects to skip before returning results. Used for pagination flows; default is 0."}},"required":["ai_shop_customer_id"],"description":"Filter, query, and pagination parameters for listing product favorites in ai_shop_favorites_products. Used for personalized engagement and analytics."},"IPageIAiShopFavoritesProducts":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata (current page, limit, records, pages). Standard format for tabular/paged API responses in AI Shop."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesProducts"},"description":"List of favorite product records (links between user and product) in this page of results. Each record corresponds to the strict schema normalization of ai_shop_favorites_products."}},"required":["pagination","data"],"description":"Page result type for ai_shop_favorites_products record searches/listing. Bundles pagination info and product favorite records for listing endpoints."},"IAiShopFavoritesProducts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for this favorite product entry. Used for update/delete by resource."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Owner's unique customer id. Links to the customer in ai_shop_customers."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Favorited product id. Links to the ai_shop_products catalog table."},"created_at":{"type":"string","format":"date-time","description":"Datetime set at creation time; when product was favorited by the user."}},"required":["id","ai_shop_customer_id","ai_shop_product_id","created_at"],"description":"Atomic record mapping a user's 'favorite' relationship to a product. Strictly normalized, matches ai_shop_favorites_products table for AI Shop—supports auditing, personalization, engagement scoring."},"IAiShopFavoritesProducts.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer (user) adding the product to favorites. FK to ai_shop_customers."},"ai_shop_product_id":{"type":"string","format":"uuid","description":"Product that is being favorited. FK to ai_shop_products."},"created_at":{"type":"string","format":"date-time","description":"Datetime the product is favorited by the user. Set by client or system; always included for audit/analytics."}},"required":["ai_shop_customer_id","ai_shop_product_id","created_at"],"description":"Create payload for a new user-product favorite relation. Strictly schema-bound for compliance."},"IAiShopFavoritesProducts.IUpdate":{"type":"object","properties":{"ai_shop_product_id":{"type":"string","format":"uuid","description":"The new product id to favorite (if moving favorite to another product). FK to ai_shop_products. \n\nUpdate only permitted for correcting user error or changing product context in business flows."},"created_at":{"type":"string","format":"date-time","description":"Update the favorited-at timestamp in audit situations (rare, business-exception only). Usually not altered except to correct for timezone/late adjustment."}},"required":["ai_shop_product_id","created_at"],"description":"Update payload for an existing favorite product record. Mutations are rare except for historical corrections or business exceptions; modification permitted only on defined schema fields."},"IAiShopFavoritesInquiries.IListRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"User id whose inquiry favorites are being listed. Required for owner-scoping, access control, and compliance. Must match authenticated or managed user's id."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Optional filter: Only return favorite entries for specified inquiry. Enables dashboard, analytics, or detail UI use cases."},"created_at_before":{"type":"string","format":"date-time","description":"Optional: Filter for favorites added before a certain ISO8601 timestamp; for cold-storage, reporting, or personal history flows."},"created_at_after":{"type":"string","format":"date-time","description":"Optional: Favorites after a certain ISO8601 timestamp only; for activity feeds or engagement analytics."},"limit":{"type":"integer","format":"int32","description":"Page size (maximum items returned). Used for UI or platform pagination flow."},"offset":{"type":"integer","format":"int32","description":"Page offset (for cursor/skip pagination). Start of this result window."}},"required":["ai_shop_customer_id"],"description":"Filter, query, and pagination parameters for listing inquiry favorites for a given user in ai_shop_favorites_inquiries. Used for dashboard/engagement flows."},"IPageIAiShopFavoritesInquiries":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesInquiries"}}},"required":["pagination","data"],"description":"Response schema for a paged result of inquiry favorites listing (ai_shop_favorites_inquiries records). Bundles records with pagination and metadata."},"IAiShopFavoritesInquiries":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for favorite entry (id of ai_shop_favorites_inquiries)."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Customer id who favorited this inquiry (FK to ai_shop_customers)."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"The inquiry id being favorited (FK to ai_shop_inquiries)."},"created_at":{"type":"string","format":"date-time","description":"When this inquiry was favorited (audit window/engagement measure)."}},"required":["id","ai_shop_customer_id","ai_shop_inquiry_id","created_at"],"description":"Entity record mapping between a customer's favorites and a specific inquiry/question. Used for analytics, engagement, and compliance; strictly schema aligned."},"IAiShopFavoritesInquiries.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"Unique ID of owner (customer/user) making this favorite."},"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Unique ID of the inquiry being favorited."},"created_at":{"type":"string","format":"date-time","description":"Datetime of action (when favorited); audit-required and set by system or client."}},"required":["ai_shop_customer_id","ai_shop_inquiry_id","created_at"],"description":"Payload for creating a new user-inquiry favorite relationship; atomic per schema for full normalization and audit logging."},"IAiShopFavoritesInquiries.IUpdate":{"type":"object","properties":{"ai_shop_inquiry_id":{"type":"string","format":"uuid","description":"Allows reassignment of favorite to a different inquiry (correction only, rare). FK to ai_shop_inquiries."},"created_at":{"type":"string","format":"date-time","description":"Correction of created_at for audit/engagement measurement. Only modifiable as business exception."}},"required":["ai_shop_inquiry_id","created_at"],"description":"Update payload for an inquiry favorite record; only schema-modifiable fields permitted, used for business exceptions or audit corrections."},"IAiShopFavoritesAddresses.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객 ID입니다. 즐겨찾는 주소를 조회하는 요청에 사용됩니다. 각 고객은 여러 배송지(프로필)를 즐겨찾기로 등록할 수 있으며, 이 필드를 통해 특정 고객의 즐겨찾기 주소들만 필터링해 조회할 수 있습니다.\n\nPrisma 스키마 ai_shop_favorites_addresses 테이블의 ai_shop_customer_id 컬럼을 참조합니다."},"ai_shop_profile_id":{"type":"string","format":"uuid","description":"고객 주소 프로필 ID입니다. 특정 프로필(배송지)이 즐겨찾기에 추가되었는지 조회할 때 사용합니다.\n\nPrisma 스키마 ai_shop_favorites_addresses 테이블의 ai_shop_profile_id 컬럼을 참조합니다."},"created_at_from":{"type":"string","format":"date-time","description":"주소 즐겨찾기 추가 일자(이후)를 기준으로 필터링할 때 사용합니다. ISO8601 datetime 포맷이어야 하며, 예를 들어 특정 기간 내 추가된 주소만 조회할 때 활용합니다."},"created_at_to":{"type":"string","format":"date-time","description":"주소 즐겨찾기 추가 일자(이전)를 기준으로 필터링할 때 사용합니다. ISO8601 datetime 포맷이어야 하며, 기간 종료 조건으로 사용합니다."},"page":{"type":"integer","format":"int32","minimum":1,"description":"페이지네이션 시 사용할 페이지 번호입니다. 1 이상의 값이어야 하며, 기본값은 1입니다."},"limit":{"type":"integer","format":"int32","minimum":1,"maximum":200,"description":"한 페이지당 조회할 즐겨찾기 주소 개수. 최대 200까지 지정 가능합니다. 기본값은 20 등 서비스 정책에 맞게 처리하세요."}},"description":"즐겨찾기(배송지) 조회, 필터, 페이징 요청 DTO. 고객별, 프로필별, 기간별로 즐겨찾기 주소를 검색/조회하기 위해 사용합니다.\n\n각 필드는 Prisma의 ai_shop_favorites_addresses와 연관되며, 고객 ID 및 주소 프로필 ID로 필터링, 추가 시점으로 기간검색, 페이지네이션을 지원합니다.","required":["page","limit"]},"IPageAiShopFavoritesAddresses":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesAddresses"},"description":"조회된 즐겨찾기 주소 리스트입니다. 각 항목이 ai_shop_favorites_addresses 단일 레코드를 의미합니다."}},"required":["pagination","data"],"description":"페이지네이션 기반의 즐겨찾기(배송지) 주소 조회 결과 객체.\n\n프론트엔드, 관리자 UI, 통합 데이터 서비스가 페이징 처리가 필요한 목록 조회 시 사용합니다."},"IAiShopFavoritesAddresses":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"즐겨찾기 주소 고유 ID, ai_shop_favorites_addresses 테이블의 PK입니다."},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"해당 즐겨찾기 주소를 소유한 고객의 고유 ID(PK).\nPrisma 스키마 참조: ai_shop_favorites_addresses.ai_shop_customer_id"},"ai_shop_profile_id":{"type":"string","format":"uuid","description":"즐겨찾기 대상으로 지정된 고객 주소 프로필 ID.\nPrisma 스키마 참조: ai_shop_favorites_addresses.ai_shop_profile_id"},"created_at":{"type":"string","format":"date-time","description":"이 즐겨찾기 주소가 등록된 일시(ISO8601 포맷)."}},"required":["id","ai_shop_customer_id","ai_shop_profile_id","created_at"],"description":"고객의 즐겨찾는 주소를 나타내는 단일 엔터티. 각 row가 고객 - 주소프로필 간의 favorite 관계를 나타냄.\n\nPrisma의 ai_shop_favorites_addresses 테이블 컬럼과 직접 매핑되며, DB 단 에서 unique(customer_id, profile_id)로 관리됨."},"IAiShopFavoritesAddresses.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"즐겨찾기 주소를 추가하는 주체 고객의 고유 ID입니다. 필수이며, 외래키 제약이 있습니다."},"ai_shop_profile_id":{"type":"string","format":"uuid","description":"즐겨찾기에 추가할 배송지(고객프로필) ID입니다. 필수이며, ai_shop_customer_profiles 테이블의 id와 연결됩니다."}},"required":["ai_shop_customer_id","ai_shop_profile_id"],"description":"즐겨찾기 주소 생성(추가) 요청 DTO. 고객 및 프로필 ID만 있으면 등록 가능하며, 중복(unique) 제약이 있습니다."},"IAiShopFavoritesAddresses.IUpdate":{"type":"object","properties":{"ai_shop_profile_id":{"type":"string","format":"uuid","description":"수정 시 새로운 배송지(프로필)로 변경할 경우 사용. 기존 ai_shop_customer_id는 변경 불가."}},"required":["ai_shop_profile_id"],"description":"즐겨찾기 주소 정보(주소 프로필 ID) 수정 요청 객체. PK 기반으로 수정하며, 실제 변경은 프로필 ID 교체만 가능합니다."},"IAiShopFavoritesNotifications.IRequest":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"고객의 고유 ID. 본인이 즐겨찾기한 알림만 조회하도록 특정 고객으로 제한할 때 사용합니다."},"ai_shop_notification_id":{"type":"string","format":"uuid","description":"즐겨찾기된 알림의 고유 ID. 특정 알림이 즐겨찾기에 등록되어 있는지 체크할 때 사용합니다."},"created_at_from":{"type":"string","format":"date-time","description":"즐겨찾기 알림 추가(등록) 일자 기준 - 시작. ISO8601 datetime, 기간 필터에 활용."},"created_at_to":{"type":"string","format":"date-time","description":"즐겨찾기 알림 추가(등록) 일자 기준 - 종료. ISO8601 datetime, 기간 필터에 활용."},"page":{"type":"integer","format":"int32","minimum":1,"description":"페이지 번호(1 이상), 기본 1"},"limit":{"type":"integer","format":"int32","minimum":1,"maximum":200,"description":"페이지당 반환할 레코드 수. 최대 200. 기본값은 20 등 서비스 정책에 맞춤."}},"required":["page","limit"],"description":"고객의 즐겨찾기 알림(Notification) 조회, 검색, 필터, 페이징 요청 DTO.\n\n고객ID, 알림ID, 즐겨찾기 등록기간, 페이징 옵션을 받아 필터링함."},"IPageAiShopFavoritesNotifications":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFavoritesNotifications"},"description":"조회된 즐겨찾기 알림(Notification) 목록"}},"required":["pagination","data"],"description":"페이지네이션/필터 기반 즐겨찾기 알림 목록 조회 응답 DTO. data는 알림 즐겨찾기 엔터티 배열."},"IAiShopFavoritesNotifications":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"알림 즐겨찾기 레코드 고유 ID (PK)"},"ai_shop_customer_id":{"type":"string","format":"uuid","description":"알림 즐겨찾기를 등록한 고객의 고유 식별자 (PK, FK)"},"ai_shop_notification_id":{"type":"string","format":"uuid","description":"고객이 즐겨찾기로 지정한 특정 알림(시스템, 캠페인, 정보, 트랜잭션 등)의 고유 ID"},"created_at":{"type":"string","format":"date-time","description":"이 즐겨찾기 알림이 등록된 시각 (ISO8601)"}},"required":["id","ai_shop_customer_id","ai_shop_notification_id","created_at"],"description":"고객-알림 간 즐겨찾기 관계를 나타내는 엔티티. ai_shop_favorites_notifications 테이블 row에 해당됨."},"IAiShopFavoritesNotifications.ICreate":{"type":"object","properties":{"ai_shop_customer_id":{"type":"string","format":"uuid","description":"알림 즐겨찾기를 추가하는 고객의 ID. 필수, FK 관계 존재"},"ai_shop_notification_id":{"type":"string","format":"uuid","description":"즐겨찾기에 등록할 알림(notification)의 고유 ID. 필수, 외부 시스템/DB 참조"}},"required":["ai_shop_customer_id","ai_shop_notification_id"],"description":"알림 즐겨찾기 등록(추가) 요청 DTO. 고객은 자신에게 온 알림을 즐겨찾기로 지정할 수 있습니다."},"IAiShopFavoritesNotifications.IUpdate":{"type":"object","properties":{"ai_shop_notification_id":{"type":"string","format":"uuid","description":"(선택) 즐겨찾기 알림을 다른 알림 ID로 변경할 때 사용."}},"required":["ai_shop_notification_id"],"description":"알림 즐겨찾기 정보(알림ID) 수정 요청 DTO. PK 기반으로, 알림 ID만 교체 가능."}},"authorization":[{"name":"customer","description":"A user who browses, registers, purchases, leaves reviews, and manages personal info. Can authenticate via API for shopping and order management."},{"name":"seller","description":"A member who is permitted to sell products, manage inventory, analyze sales metrics, handle orders, and manage product content. API authentication required for seller dashboard and shop management."},{"name":"admin","description":"Manages the backend system, oversees users and sellers, configures channels, audits logs, handles disputes, ensures compliance and business rule enforcement. API authentication mandatory for system administration."}]}},"created_at":"2025-07-23T07:04:52.889Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":5946783,"input":{"total":5731997,"cached":0},"output":{"total":214786,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}}]