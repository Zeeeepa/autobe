[{"event":{"type":"interfaceStart","created_at":"2025-07-24T09:06:21.423Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceEndpoints","endpoints":[{"path":"/aiShop/channels","method":"post"},{"path":"/aiShop/channels","method":"patch"},{"path":"/aiShop/channels/{id}","method":"get"},{"path":"/aiShop/channels/{id}","method":"put"},{"path":"/aiShop/channels/{id}","method":"delete"},{"path":"/aiShop/sections","method":"post"},{"path":"/aiShop/sections","method":"patch"},{"path":"/aiShop/sections/{id}","method":"get"},{"path":"/aiShop/sections/{id}","method":"put"},{"path":"/aiShop/sections/{id}","method":"delete"},{"path":"/aiShop/configurations","method":"post"},{"path":"/aiShop/configurations","method":"patch"},{"path":"/aiShop/configurations/{id}","method":"get"},{"path":"/aiShop/configurations/{id}","method":"put"},{"path":"/aiShop/configurations/{id}","method":"delete"},{"path":"/aiShop/categories","method":"post"},{"path":"/aiShop/categories","method":"patch"},{"path":"/aiShop/categories/{id}","method":"get"},{"path":"/aiShop/categories/{id}","method":"put"},{"path":"/aiShop/categories/{id}","method":"delete"},{"path":"/aiShop/files","method":"post"},{"path":"/aiShop/files","method":"patch"},{"path":"/aiShop/files/{id}","method":"get"},{"path":"/aiShop/files/{id}","method":"put"},{"path":"/aiShop/files/{id}","method":"delete"},{"path":"/aiShop/auditLogs","method":"post"},{"path":"/aiShop/auditLogs","method":"patch"},{"path":"/aiShop/auditLogs/{id}","method":"get"},{"path":"/aiShop/auditLogs/{id}","method":"put"},{"path":"/aiShop/auditLogs/{id}","method":"delete"}],"created_at":"2025-07-24T09:06:21.424Z","step":0},"tokenUsage":{"facade":{"aggregate":{"total":55524,"input":{"total":55100,"cached":0},"output":{"total":424,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":55524,"input":{"total":55100,"cached":0},"output":{"total":424,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":55524,"input":{"total":55100,"cached":0},"output":{"total":424,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":55524,"input":{"total":55100,"cached":0},"output":{"total":424,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Creates a new shop channel in the ai_shop_channels table. Only the fields defined in the Prisma schema are allowed. The channel has a unique 'code' (programmatic identifier), a human-readable 'name', an 'enabled' status, a 'sort_order', and audit fields 'created_at' and 'updated_at'. No extra or soft-deletion fields exist. The API returns the created channel object.","description":"This API creates a new entry in the ai_shop_channels table. The request body must include the required fields: 'code' (unique string), 'name' (display string), 'enabled' (boolean status), and 'sort_order' (int for UI ordering). The server will set the audit fields 'created_at' and 'updated_at' to the current time. Channel 'code' must be globally unique. Only fields present in the actual Prisma schema are referenced. No soft delete; deleting will be hard delete. All field validations follow the schema specification strictly.","summary":"Create a new channel in ai_shop_channels.","parameters":[],"requestBody":{"description":"Information to create the channel. Only schema-defined fields allowed.","typeName":"IAiShopChannels.ICreate"},"responseBody":{"description":"The created channel object.","typeName":"IAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels","method":"post"},{"specification":"Fetch a list of shop channels from ai_shop_channels with advanced search or filtering. No request fields or filters should reference non-existent schema fields. Uses pagination, search by 'name' or 'code', and filters by 'enabled' as allowed. Only schema fields are referenced in the operation and response.","description":"This API returns a paginated, searchable list of ai_shop_channels records using only the fields defined in the schema. Supports filtering by 'enabled', searching by 'name' (partial text), and 'code' (exact or partial). The response includes only defined fields such as 'id', 'code', 'name', 'enabled', 'sort_order', 'created_at', and 'updated_at'. There are no deleted_at, created_by, or extra status fields beyond those explicitly listed in the Prisma schema. Pagination and sorting are supported through request parameters, aligning strictly to the schema contents.","summary":"Search and list ai_shop_channels records.","parameters":[],"requestBody":{"description":"Search, filter, and pagination information. Only schema fields allowed.","typeName":"IAiShopChannels.IRequest"},"responseBody":{"description":"Paginated list of channel objects conforming to the Prisma schema.","typeName":"IPageIAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels","method":"patch"},{"specification":"Retrieve a single channel from the ai_shop_channels table by its unique id. Only fields present in the schema can be used. No audit fields other than 'created_at' and 'updated_at'. No soft-delete: if the record is missing, it does not exist. The id must be a valid UUID.","description":"This API fetches a single ai_shop_channels record by its 'id' field. The path parameter 'id' must be a valid UUID matching an existing record. Returns all fields defined in the schema, including 'id', 'code', 'name', 'enabled', 'sort_order', 'created_at', and 'updated_at'. No extra or deleted_at fields. If no record exists for the given id, a 404 is returned. All references and field usages are strictly verified against the schema.","summary":"Get details for a single ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique id for the channel (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specified channel, according to the schema.","typeName":"IAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels/{id}","method":"get"},{"specification":"Update an existing channel in ai_shop_channels by id. Only fields from the schema may be updated (code, name, enabled, sort_order). Audit fields 'created_at' and 'updated_at' are managed by the system. No soft delete field exists; updates are applied directly to live data.","description":"This API updates the given ai_shop_channels record (matching the specified 'id'). The fields allowed for update are only those defined in the schema: 'code', 'name', 'enabled', and 'sort_order'. 'created_at' and 'updated_at' are not directly updatable. If the record exists, the update is performed and the server-managed 'updated_at' field is changed. If not found, a 404 is returned. No extra or soft delete fields are referenced.","summary":"Update the specified ai_shop_channels record by id.","parameters":[{"name":"id","description":"Unique id (UUID) of the channel to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for update—only those permitted by the schema.","typeName":"IAiShopChannels.IUpdate"},"responseBody":{"description":"The updated channel object.","typeName":"IAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels/{id}","method":"put"},{"specification":"Delete a channel by id from the ai_shop_channels table. There is no soft delete field (such as deleted_at) in the schema, so this operation is a hard delete (permanently removes the row). Only the 'id' parameter is required, which must be a UUID. Operation strictly references existing schema fields; no creative or inferred deletion logic.","description":"This API permanently removes the channel with the specified 'id' from the ai_shop_channels table. As the schema does not include a soft delete (deleted_at) or logical status field, deletion will physically erase the row. The operation accepts a single 'id' (UUID) parameter as the path argument. If not found, returns a 404. No soft delete semantics are described, only definitive removal as per the schema.","summary":"Hard delete the specified ai_shop_channels record by id.","parameters":[{"name":"id","description":"Unique UUID for the channel to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"No content—operation deletes the resource or returns 404 if not found.","typeName":"null"},"authorizationRole":"admin","path":"/aiShop/channels/{id}","method":"delete"},{"specification":"Create a new shop section in ai_shop_sections. Only schema-defined fields (including foreign key channel_id, code, name, sort_order, enabled, created_at, updated_at) are included. No soft delete or extraneous audit fields exist. The API returns the section object upon successful creation.","description":"This API endpoint registers a new record in the ai_shop_sections table, creating a section within an existing channel. The request body must include valid values for 'ai_shop_channel_id' (UUID foreign key to the parent channel), 'code', 'name', 'sort_order', 'enabled'. 'created_at' and 'updated_at' are system-assigned. No deleted_at, is_deleted, or creator fields exist and must not be referenced. Only fields from the actual Prisma schema are permitted. The API responds with the newly created section object using all allowable fields.","summary":"Create a new shop section in ai_shop_sections.","parameters":[],"requestBody":{"description":"Fields to create a new section—schema only.","typeName":"IAiShopSections.ICreate"},"responseBody":{"description":"The created section object per schema.","typeName":"IAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections","method":"post"},{"specification":"Fetch a filtered, paginated list of sections from ai_shop_sections. Used for admin or system-level management. Only supports searching/filtering using schema-defined fields such as code, name, enabled, ai_shop_channel_id, etc. No deleted_at or is_deleted logic is present. Can return sections from all channels if desired.","description":"This endpoint provides a list of shop sections based on defined filter, search, pagination, and sort parameters, all referencing only actual fields in the ai_shop_sections schema: 'id', 'ai_shop_channel_id', 'code', 'name', 'sort_order', 'enabled', 'created_at', 'updated_at'. Filtering by 'enabled', search by 'name', and filtering by parent channel id is supported. No fields outside the schema or non-existent soft-delete logic are supported. The output returns all defined section properties; no calculated or inferred fields. Pagination and result sorting must only use schema-defined fields.","summary":"Paginated, filtered search for ai_shop_sections.","parameters":[],"requestBody":{"description":"Request contains pagination/filter/search info—schema fields only.","typeName":"IAiShopSections.IRequest"},"responseBody":{"description":"Paginated, filtered list per the ai_shop_sections schema.","typeName":"IPageIAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections","method":"patch"},{"specification":"Retrieve a single section by its unique id from ai_shop_sections. Only existing fields may be fetched. No soft delete. The id is a required path parameter (UUID).","description":"Fetches a single ai_shop_sections record using the 'id' field. Path parameter must be a valid UUID corresponding to the desired section. Returns only the exact schema-defined fields: 'id', 'ai_shop_channel_id', 'code', 'name', 'sort_order', 'enabled', 'created_at', and 'updated_at'. No deleted_at, is_deleted, or creator fields are present. If not found, returns a 404. No field outside those present in the schema is included in response or validation. Operation is strictly scoped to the existing schema.","summary":"Get a specified ai_shop_sections record by id.","parameters":[{"name":"id","description":"Unique id for the section (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified section record by id.","typeName":"IAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections/{id}","method":"get"},{"specification":"Update a shop section in ai_shop_sections by unique id. Supports changing code, name, enabled, sort_order, and ai_shop_channel_id. No deleted_at, is_deleted, or extra audit fields exist. All updates use only schema-allowed fields; audit (created_at, updated_at) fields are managed internally.","description":"Updates the section entry in ai_shop_sections that matches the given 'id'. The request body may modify 'ai_shop_channel_id', 'code', 'name', 'sort_order', and 'enabled'. System-managed audit fields are not directly modifiable. There are no deleted_at or is_deleted fields for logical removal—operation only allows update of schema-defined attributes. Response returns the fully updated record only using schema-defined fields.","summary":"Update a section by id in ai_shop_sections.","parameters":[{"name":"id","description":"Unique section id (UUID) to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update—schema only.","typeName":"IAiShopSections.IUpdate"},"responseBody":{"description":"The updated section record per the schema.","typeName":"IAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections/{id}","method":"put"},{"specification":"Delete a section from ai_shop_sections by its unique id. No soft delete (e.g. deleted_at) or logical removal exists in the schema, so this is a hard delete. Uses only the id (UUID) as path parameter. Operation and error handling strictly refer to schema-defined attributes.","description":"This operation performs a hard delete (physical row removal) for the specified ai_shop_sections entry by 'id'. Because there is no deleted_at or logical status field for soft delete, deletion is permanent. Only the path parameter 'id' (UUID) is allowed or required. If the target does not exist, a 404 is returned. No other field, status, or extra logic is present. The endpoint and its response are limited only to the existing ai_shop_sections schema.","summary":"Hard delete the specified ai_shop_sections record by id.","parameters":[{"name":"id","description":"Unique UUID for the section to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"No content—resource deleted or 404 if not found.","typeName":"null"},"authorizationRole":"admin","path":"/aiShop/sections/{id}","method":"delete"}],"completed":10,"total":30,"step":0,"created_at":"2025-07-24T09:07:04.863Z"},"tokenUsage":{"facade":{"aggregate":{"total":116490,"input":{"total":113432,"cached":0},"output":{"total":3058,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":116490,"input":{"total":113432,"cached":0},"output":{"total":3058,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":116490,"input":{"total":113432,"cached":0},"output":{"total":3058,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":116490,"input":{"total":113432,"cached":0},"output":{"total":3058,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a new ai_shop_configurations record. This operation is associated with the ai_shop_configurations table from the Prisma schema. It allows an admin or authorized user to add a new global/system configuration parameter for the AI Shop platform at runtime. Each configuration consists of an atomic name-value pair with a human-readable description, and records creation and update timestamps. All fields referenced (param_name, param_value, description, created_at, updated_at) must exist in the schema. The configuration's param_name must be unique. Audit trail requirements are satisfied by the created_at and updated_at fields.","description":"This endpoint creates a new platform configuration parameter as a single key/value setting. According to the ai_shop_configurations schema, the API consumer must provide a unique param_name, its param_value (as a string), and optionally a description. The operation also records created_at and updated_at timestamps, allowing traceability as required by business and compliance. Typical uses include platform toggles (\"maintenance_mode\", \"max_cart_items\"), AI settings, or feature activation flags. Only the defined fields (param_name, param_value, description, created_at, updated_at) are allowed—do not include undeclared fields. Uniqueness of param_name is enforced by the schema's unique constraint. Any attempt to use a duplicate param_name will return a conflict error. On success, the created configuration is returned.","summary":"Create a new platform configuration (ai_shop_configurations table).","parameters":[],"requestBody":{"description":"Settings and core parameters for a new configuration record.","typeName":"IAiShopConfigurations.ICreate"},"responseBody":{"description":"The newly created configuration record.","typeName":"IAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations","method":"post"},{"specification":"Fetch a paginated and searchable list of ai_shop_configurations entries. This operation is based on the ai_shop_configurations table, allowing retrieval of all configuration parameters that govern the AI shop's global behavior. All fields referenced (id, param_name, param_value, description, created_at, updated_at) must exist in the schema. Supports advanced filtering, sorting, and search for administrative use.","description":"Retrieves a list of configuration parameters stored in ai_shop_configurations, including names, values, and audit timestamps. This endpoint supports pagination, search (e.g., by param_name or description), and sorting (by created_at, updated_at, or param_name). All returned data strictly reflects actual schema columns. Use this endpoint to audit or administer global/platform settings. No extra or virtual fields will be included. This endpoint typically requires admin-level authorization since modifying configuration is a sensitive operation. Error handling includes pagination out-of-range, invalid sort keys, and permission issues.","summary":"List and search configurations (ai_shop_configurations table).","parameters":[],"requestBody":{"description":"Request object for pagination, search, and sort for configurations.","typeName":"IAiShopConfigurations.IRequest"},"responseBody":{"description":"Paginated result set of configuration records.","typeName":"IPageAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations","method":"patch"},{"specification":"Retrieve a single configuration record by id for ai_shop_configurations. The 'id' path parameter must match a value in the id column of the ai_shop_configurations table. This operation is intended for configuration detail inspection or editing by an administrator.","description":"Fetches a detailed configuration parameter using its unique id. Only fields present in the ai_shop_configurations schema will be returned (id, param_name, param_value, description, created_at, updated_at). This operation is intended for admins to review/edit a specific parameter in detail. The id must be a valid UUID matching an existing configuration, otherwise a not-found error is returned. All timestamps and string fields are reported as stored in the DB.","summary":"Get a specific configuration by id (ai_shop_configurations table).","parameters":[{"name":"id","description":"The UUID of the configuration parameter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detail of the configuration setting.","typeName":"IAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations/{id}","method":"get"},{"specification":"Update an existing configuration in ai_shop_configurations by id. This operation allows modification of a configuration parameter's value, description, or name according to actual schema fields. The 'id' parameter targets the configuration to update. Only updatable fields found in the ai_shop_configurations table may be referenced.","description":"Edits an existing configuration parameter in ai_shop_configurations by its unique id. Admins may update param_name, param_value, or description. The id must be a valid UUID and must exist in the table, else a not-found error is returned. All changes are tracked by the updated_at timestamp. No undeclared or virtual fields may be referenced or updated. Uniqueness constraints on param_name apply, so duplicate names are not allowed. This endpoint supports auditability by recording the time of update.","summary":"Update a configuration by id (ai_shop_configurations table).","parameters":[{"name":"id","description":"The UUID of the configuration setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update info for the configuration parameter.","typeName":"IAiShopConfigurations.IUpdate"},"responseBody":{"description":"The updated configuration parameter.","typeName":"IAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations/{id}","method":"put"},{"specification":"Delete a configuration in ai_shop_configurations by id. This operation permanently removes a configuration, as there is NO soft delete field present in the Prisma schema (no deleted_at column for ai_shop_configurations). The 'id' parameter is required and must reference an existing configuration.","description":"Permanently removes a configuration record from ai_shop_configurations by its id. Because there is no deleted_at field in the schema, deletions are hard and irreversible—the record is fully deleted from the database. Only the id field is used to locate the target row. Any attempt to delete a non-existent id will return a not-found error. This operation should be restricted to admin users, as mis-operation will remove system-critical parameters.","summary":"Hard delete a configuration by id (ai_shop_configurations table).","parameters":[{"name":"id","description":"The UUID of the configuration record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/configurations/{id}","method":"delete"},{"specification":"Create a new ai_shop_categories record. This operation creates a product/category taxonomy record for use in product cataloging and shopfront navigation. All columns referenced in the operation must exist in the ai_shop_categories Prisma schema. The fields required are ai_shop_channel_id, parent_id (nullable), code, name, sort_order, enabled, created_at, and updated_at. Relationships must be respected (e.g., channel_id, parent_id).","description":"Adds a new product category to the system by creating a row in ai_shop_categories. The operation requires the parent channel's id (ai_shop_channel_id), parent_id (can be null for root categories), category code, display name, sorting order, the enabled boolean, and audit timestamps. This endpoint helps admins or authorized users manage the catalog taxonomy. Uniqueness of (ai_shop_channel_id, parent_id, code) is enforced in the schema. All inputs must correspond to actually defined fields; there is no support for undocumented or virtual attributes.","summary":"Create a new category (ai_shop_categories table).","parameters":[],"requestBody":{"description":"Creation data for a new product category.","typeName":"IAiShopCategories.ICreate"},"responseBody":{"description":"Detail of the newly created product category.","typeName":"IAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories","method":"post"},{"specification":"List ai_shop_categories with filtering, pagination, and sorting. This operation retrieves multiple taxonomy entries for use in product catalog, admin UI, or search selectors. Only fields and query options defined in the schema are allowed. Supports filtering by parent, channel, code, name, enabled status, etc.","description":"Returns a paginated, optionally filtered and sorted list of categories from ai_shop_categories. Query can filter by parent (parent_id), channel (ai_shop_channel_id), code, enabled flag, or name, using precise or fuzzy matching (e.g., gin_trgm_ops indices for fast text search). Provides audit fields for compliance (created_at, updated_at). Does not expose any derived, computed, or virtual fields—only actual schema columns. For root category listing, parent_id is null. Access typically restricted to admin users or role with catalog management rights.","summary":"Search and list categories (ai_shop_categories table).","parameters":[],"requestBody":{"description":"Options for pagination, search, and sort for category listing.","typeName":"IAiShopCategories.IRequest"},"responseBody":{"description":"Paginated set of category records.","typeName":"IPageAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories","method":"patch"},{"specification":"Retrieve a category by its id from ai_shop_categories. The id parameter is required and must match the exact PK format in the schema. Returns only fields present (id, ai_shop_channel_id, parent_id, code, name, sort_order, enabled, created_at, updated_at).","description":"Gets full details of a category from ai_shop_categories by its id. This is used for viewing or editing a single taxonomy node. If the id record does not exist, an error is returned. Returned columns are strictly those from the actual table definition; no computed or joined fields are included. The id parameter must be a UUID.","summary":"Get a single category by id (ai_shop_categories table).","parameters":[{"name":"id","description":"The UUID of the category to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The retrieved category record.","typeName":"IAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories/{id}","method":"get"},{"specification":"Update an existing category by id for ai_shop_categories. This allows admins to alter fields defined in the table: channel, parent, code, name, sort_order, enabled, etc. Only the exact columns may be changed—never reference undefined fields. id parameter must be a valid UUID for an existing record.","description":"Edits a taxonomy/category entry by id in ai_shop_categories. Permitted update fields are ai_shop_channel_id, parent_id, code, name, sort_order, enabled, as reflected in the schema. The endpoint also updates updated_at for audit purposes. Uniqueness constraints for (ai_shop_channel_id, parent_id, code) are enforced—duplicate code in the same hierarchy is not allowed. Only data present in the schema may be altered. Returns the updated detail on success or not-found/validation error otherwise.","summary":"Update a category by id (ai_shop_categories table).","parameters":[{"name":"id","description":"The UUID of the category to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the selected category.","typeName":"IAiShopCategories.IUpdate"},"responseBody":{"description":"Detail of the updated product category.","typeName":"IAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories/{id}","method":"put"},{"specification":"Delete a category by id from ai_shop_categories. According to the schema, there is NO soft-delete field (deleted_at), so this will PERMANENTLY remove the category from the database. Only id is required in the path. All other foreign key and uniqueness constraints are handled internally.","description":"Permanently deletes a product category by its id from ai_shop_categories. The operation is a hard delete since the model does not declare a deleted_at field for soft deletion. This requires careful usage: deleted categories cannot be restored and all relationships/fks are checked for referential integrity. If the id does not exist, a not-found error results. Only the id path parameter is used; request/response body is not required.","summary":"Hard delete a category by id (ai_shop_categories table).","parameters":[{"name":"id","description":"The UUID of the product category to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/categories/{id}","method":"delete"}],"completed":20,"total":30,"step":0,"created_at":"2025-07-24T09:08:49.690Z"},"tokenUsage":{"facade":{"aggregate":{"total":387094,"input":{"total":371412,"cached":0},"output":{"total":15682,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":387094,"input":{"total":371412,"cached":0},"output":{"total":15682,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":387094,"input":{"total":371412,"cached":0},"output":{"total":15682,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":387094,"input":{"total":371412,"cached":0},"output":{"total":15682,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceOperations","operations":[{"specification":"Create a file entity in the ai_shop_files table. This operation allows uploading a new file metadata record, storing atomic details about files uploaded by users, such as original file name, storage URI, MIME type, size, and optional uploader info. Audit and file access metadata are fully normalized. The only source of file info is the explicit fields in the ai_shop_files schema: id, original_name, uri, mime_type, size_bytes, uploader_name, and uploaded_at. There is no soft-deletion functionality defined for ai_shop_files; any delete would be a permanent record removal. This endpoint enables UI or system integrations to register uploaded files for later access or attachment to posts, comments, etc.","description":"This endpoint registers a new file metadata record in the ai_shop_files table.\n\nClients must provide the original uploaded file name (original_name), a unique storage URI or path (uri), the MIME type, size in bytes, and the precise time of upload (uploaded_at) as required by the schema. Optionally, the name of the uploader can be included (uploader_name). All fields are directly mapped to the schema and are used for later file lookup, attachment to domain entities, and audit trails.\n\nThe API does not support hidden or soft-deletion; uploaded files must be referenced only by the explicit schema fields. Any missing or extra fields are not permitted. Error handling includes enforcing uniqueness of URI and required fields.\n\nNo status or workflow field is managed; external logic determines validation, storage, and access control. Related endpoints include update, retrieval, and hard delete of files.","summary":"Register a new file entity in ai_shop_files (normalized file metadata).","parameters":[],"requestBody":{"description":"The required and optional metadata for file upload and registration.","typeName":"IAiShopFiles.ICreate"},"responseBody":{"description":"The uploaded file's metadata, as inserted into ai_shop_files.","typeName":"IAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files","method":"post"},{"specification":"Retrieve a list of file entities from the ai_shop_files table. This operation implements file searching and browsing for audit, attachment, or display purposes. Search, filter, and pagination are handled via request body, allowing clients to specify criteria like file name, MIME type, size, uploaded_at, or uploader_name. Results include only explicit fields in the ai_shop_files schema: id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at. No support for deleted/hidden state or workflow fields. This endpoint supports use cases such as attachment selection or compliance reporting.","description":"This API allows searching and listing file metadata records in ai_shop_files.\n\nQuery parameters are sent via the request body and may include filtering by original file name, MIME type, file size range, uploader_name, and upload timestamp. Only existing schema fields can be searched or returned. Pagination and sorting criteria are included for large-scale browsing needs. This enables compliance with storage, audit, and selection requirements from multiple domain modules (e.g., posts, product images).\n\nNo workflow or status field exists for files; results are limited to explicit schema fields. The endpoint can be used by both user interfaces and background/admin processes. Error handling includes invalid field names, formats, or pagination/sorting errors. Related endpoints: create, read single file, update, and delete.\n","summary":"Search and list files in ai_shop_files table (with filters, pagination, and sorting).","parameters":[],"requestBody":{"description":"Criteria for searching, filtering, and paginating list of file records.","typeName":"IAiShopFiles.IRequest"},"responseBody":{"description":"A paginated list of file metadata records matching search criteria.","typeName":"IPageAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files","method":"patch"},{"specification":"Retrieve a specific file metadata record by unique file ID from the ai_shop_files table. This endpoint implements file lookup for download, audit, or display by referencing the id field as a UUID path parameter. Only explicit fields from the ai_shop_files schema (id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at) are returned. No additional metadata or deleted/hidden logic exists on this entity. Error if id not found.","description":"This endpoint retrieves metadata for the file identified by its unique id from the ai_shop_files table.\n\nThe client must provide the file's UUID in the path parameter. The response includes only schema-defined fields: id, original_name, uri, mime_type, size_bytes, uploader_name, and uploaded_at. No workflow or logical deletion field exists; a missing file returns a not found error. This endpoint is essential for viewing, downloading, or referencing uploaded files.\n\nError handling covers invalid UUID format and file not found. Related endpoints: file create, update, delete, and listing APIs.","summary":"Retrieve file metadata by unique id from ai_shop_files.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the file to be retrieved from ai_shop_files.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The metadata of the requested file record, if found.","typeName":"IAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files/{id}","method":"get"},{"specification":"Update an existing file metadata record in the ai_shop_files table. The update operation allows modifying atomic file metadata: supporting only the fields defined explicitly in the ai_shop_files schema (original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at). File id is referenced in the path. No logical deletion, workflow or extra fields are present; only updatable fields are modified as per the schema. The operation enforces unique constraints and field-level validations, triggering errors on rule violation.","description":"Update file metadata for the record identified by its unique id. The API accepts updates to schema-defined fields: original_name, uri, mime_type, size_bytes, uploader_name, and uploaded_at. The id field must be provided in the path, acting as the primary key for the update operation.\n\nUnique constraints (e.g., uri) and field validation (e.g., type, length) are enforced. No workflow or hidden/deleted logic is present in the schema; only the specified atomic attributes can be updated. This endpoint can be used for correcting file info or migration tasks.\n\nError outcomes include non-existent id, unique constraint violations, and invalid input. Related endpoints are create, retrieve, and delete for files.","summary":"Update a file metadata entity in ai_shop_files by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the file record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The atomic metadata fields to update for this file record.","typeName":"IAiShopFiles.IUpdate"},"responseBody":{"description":"Updated file metadata record after successful update.","typeName":"IAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files/{id}","method":"put"},{"specification":"Delete a file metadata record from the ai_shop_files table, permanently removing the file's record based on its id. The ai_shop_files schema does NOT provide a soft deletion field or workflow; therefore, the deletion is a hard delete—file metadata is erased from the database. The operation will only succeed if the file id exists, otherwise returns not found. This endpoint should be protected by role or resource ownership enforcement if required by business rules.","description":"Permanently remove the file record specified by id from ai_shop_files. This operation performs a hard delete (permanent removal) since there is no soft delete or deleted_at field in the table. The API acts only on the id (UUID) of the target row.\n\nThis endpoint is restricted to authorized users and should be accompanied by logical checks for reference or attachment dependencies elsewhere in the system. No data will be recoverable after deletion. Related endpoints: create, update, retrieve, and search for files.","summary":"Hard-delete a file metadata entity from ai_shop_files by id (permanent removal).","parameters":[{"name":"id","description":"Unique identifier (UUID) of the file record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/files/{id}","method":"delete"},{"specification":"Insert an audit log record into the ai_shop_audit_logs table. This operation supports compliance and traceability by registering system/user actions with explicit metadata. All fields must correspond to existing columns of the ai_shop_audit_logs schema: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. There is no soft/delete or workflow field; removal (delete) is always hard. This enables system compliance audit logs for every critical business event (order change, admin actions, etc.) as required by design documentation.","description":"Create a new audit log entry, as required for compliance, traceability, and forensics.\n\nClients must provide the explicit metadata fields: event_id, event_type, actor_id (nullable), actor_role (nullable), target_table (nullable), target_id (nullable), details (nullable), and the timestamp (created_at). The response returns the created audit log entity, which captures a single event for reproducible audit trails and reporting.\n\nNo workflow or soft delete function exists for audit logs. Error cases include duplicate event_id or invalid/missing required field values. Related endpoints: update, retrieve, search, and hard delete for audit logs.","summary":"Insert a new audit/trail log in ai_shop_audit_logs (compliance, system events).","parameters":[],"requestBody":{"description":"The metadata for creating a compliance/audit event.","typeName":"IAiShopAuditLogs.ICreate"},"responseBody":{"description":"The created audit log event record.","typeName":"IAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs","method":"post"},{"specification":"Search and list audit log entries from the ai_shop_audit_logs table, supporting filtering, pagination, and sorting for compliance and forensic reporting. Only explicit fields defined in the ai_shop_audit_logs schema (id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at) can be filtered and returned. No workflow or deleted/hidden logic exists for audit logs—results are atomic event records. Request body should encapsulate search criteria, sort, and pagination parameters for large-scale reporting or admin UI use.","description":"Search and retrieve a paginated list of audit log event records, optionally filtered by event_type, actor_id, actor_role, target_table, event_id, created_at, or other schema fields. All output fields are atomic and only reflect schema-defined columns.\n\nFiltering and sorting are governed exclusively by the request body's specification, which covers supported schema fields. The endpoint is essential for compliance auditing, system analytics, and dispute response for admin or audit users. Errors include invalid criteria or unsupported fields.\n\nNo soft/hard logic is present on result rows; all event logs are atomic and immutable. Related endpoints are event log insert, update, retrieve by id, and hard delete.","summary":"Search and list audit/event logs in ai_shop_audit_logs with filtering and pagination.","parameters":[],"requestBody":{"description":"Filtering, sorting, and paging criteria for audit log list/search.","typeName":"IAiShopAuditLogs.IRequest"},"responseBody":{"description":"Paginated list of audit log events from ai_shop_audit_logs.","typeName":"IPageAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs","method":"patch"},{"specification":"Retrieve a specific audit log entry from ai_shop_audit_logs by unique id (UUID). Provides access to atomic event log detail for compliance, dispute handling, or forensic UI. Only defined schema fields (id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at) are returned, with no workflow, logical deletion, or extra metadata. Returns not found if id missing or not found.","description":"Fetch the audit/event log record for the specified id/UUID from ai_shop_audit_logs.\n\nThe client supplies the UUID in the path; the response contains only atomic schema fields: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. No workflow or deleted/hidden flag exists; the record is either returned or not found.\n\nRelated endpoints are creation, update, search, and delete event logs.","summary":"Retrieve a single audit log event by id from ai_shop_audit_logs.","parameters":[{"name":"id","description":"UUID of the audit log record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete audit/event record matching the requested id.","typeName":"IAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs/{id}","method":"get"},{"specification":"Update the explicit fields of a given audit log entry in ai_shop_audit_logs using its unique id. Only atomic field edits for schema-defined attributes are supported: event_id, event_type, actor_id (nullable), actor_role (nullable), target_table (nullable), target_id (nullable), details (nullable), and created_at. Logical/soft deletion is not supported; only field replacements on direct columns. Update logic must enforce unique and required constraints per schema. Errors occur for violations or id not found.","description":"Edit/update an audit log entry in ai_shop_audit_logs by UUID id.\n\nOnly allowed fields are those directly mapped in the schema: event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. No workflow or status, deleted/hidden flag, or extra metadata exists. The record is updated in-place and the response contains the new state of fields. Related endpoints are create, retrieve, search, and hard delete for audit logs.","summary":"Update an audit log event entity in ai_shop_audit_logs by id.","parameters":[{"name":"id","description":"UUID (id) of the audit log event record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the audit log entry, for only explicit schema-defined columns.","typeName":"IAiShopAuditLogs.IUpdate"},"responseBody":{"description":"Audit/event record after applied updates.","typeName":"IAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs/{id}","method":"put"},{"specification":"Delete an audit log event from ai_shop_audit_logs by id, permanently removing the record. The ai_shop_audit_logs schema does NOT offer a logical or soft deletion field—delete is permanent and immediate. Only records with an existing id will be removed; non-existent id yields not found error. This action should be heavily authorized and generally only available to system administrators or compliance leads for data minimization policy reasons.","description":"Permanently erase the event log record with the specified id from ai_shop_audit_logs. This is a hard delete and cannot be undone, as there is no deleted_at or status field. Use with extreme caution and ensure cascade/compliance controls outside the core schema. Only id is referenced in the path (UUID). Related endpoints: create, retrieve, update, search for audit/event logs.","summary":"Hard-delete an audit log event from ai_shop_audit_logs by id (irreversible).","parameters":[{"name":"id","description":"UUID id of the audit log row to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/auditLogs/{id}","method":"delete"}],"completed":30,"total":30,"step":0,"created_at":"2025-07-24T09:11:36.357Z"},"tokenUsage":{"facade":{"aggregate":{"total":521953,"input":{"total":499613,"cached":0},"output":{"total":22340,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":521953,"input":{"total":499613,"cached":0},"output":{"total":22340,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":521953,"input":{"total":499613,"cached":0},"output":{"total":22340,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":521953,"input":{"total":499613,"cached":0},"output":{"total":22340,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopConfigurations.ICreate":{"type":"object","properties":{"param_name":{"type":"string","description":"Configuration parameter name - uniquely identifies a global/system setting. Normalized as an atomic key for accessing platform configuration. Referenced in the Prisma schema with @@unique([param_name]). Example: 'max_cart_size', 'maintenance_mode'. Must be unique."},"param_value":{"type":"string","description":"Parameter value. Holds the value for the global setting or feature toggle. Can be a scalar (number as string), boolean as string ('true'/'false'), or stringified JSON. Must respect the actual configuration's expected use. Example: '50', 'true', '{\"enabled\":true}'."},"description":{"oneOf":[{"type":"string","description":"Human-readable description of what this config controls. Optional, may be null. Used for admin/audit comprehension according to Prisma schema."},{"type":"null"}],"description":"Human-readable description of what this config controls. Optional, may be null. Used for admin/audit comprehension according to Prisma schema."}},"required":["param_name","param_value"],"description":"Input object for creating a new configuration row in ai_shop_configurations. All properties and constraints are directly mapped from the Prisma schema's column documentation. The server sets 'created_at' and 'updated_at'."},"IAiShopConfigurations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for each configuration row. Set by the DB, UUID format. See Prisma @id."},"param_name":{"type":"string","description":"Configuration parameter name - uniquely identifies each system/platform-wide setting. Refer to Prisma schema documentation for uniqueness."},"param_value":{"type":"string","description":"Parameter value for this configuration setting. String (can be JSON stringified) according to platform config requirements."},"description":{"oneOf":[{"type":"string","description":"Optional admin/audit description, for human-readable guidance. Nullable; not required by DB."},{"type":"null"}],"description":"Optional admin/audit description, for human-readable guidance. Nullable; not required by DB."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this configuration row was created. Used for audit and rollback. Set by DB."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this configuration was last updated. Set by system. Used for auditing and synchronization."}},"required":["id","param_name","param_value","created_at","updated_at"],"description":"The primary entity type for a configuration entry (ai_shop_configurations). Contains all columns as documented in corresponding Prisma schema table, for compliance and transparency."},"IAiShopConfigurations.IRequest":{"type":"object","properties":{"filter_param_name":{"oneOf":[{"type":"string","description":"Optional: Filter by configuration key (param_name) partial or exact text. Used to locate a specific setting."},{"type":"null"}],"description":"Optional: Filter by configuration key (param_name) partial or exact text. Used to locate a specific setting."},"filter_description":{"oneOf":[{"type":"string","description":"Optional: Filter by 'description' text, using gin_trgm_ops for fast search (see Prisma index)."},{"type":"null"}],"description":"Optional: Filter by 'description' text, using gin_trgm_ops for fast search (see Prisma index)."},"sort_by":{"oneOf":[{"const":"param_name","description":"Optional: Column to sort results by. Only allowed fields per schema."},{"const":"created_at","description":"Optional: Column to sort results by. Only allowed fields per schema."},{"const":"updated_at","description":"Optional: Column to sort results by. Only allowed fields per schema."},{"type":"null"}],"description":"Optional: Column to sort results by. Only allowed fields per schema."},"sort_order":{"oneOf":[{"const":"asc","description":"Optional: Sorting direction (ascending/descending)."},{"const":"desc","description":"Optional: Sorting direction (ascending/descending)."},{"type":"null"}],"description":"Optional: Sorting direction (ascending/descending)."},"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Pagination: which page number to fetch (starting at 1)."},{"type":"null"}],"description":"Pagination: which page number to fetch (starting at 1)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"default":100,"description":"Pagination: number of records per page. Default is 100."},{"type":"null"}],"description":"Pagination: number of records per page. Default is 100."}},"description":"Request model for searching, filtering, and paginating ai_shop_configurations. Fields used only for administrative search/sort - do not supply DB properties directly. Strict mapping to allowed filter/sort keys.","required":[]},"IPageAiShopConfigurations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopConfigurations"}}},"required":["pagination","data"],"description":"Paginated result container for listing collections of configuration settings. Uses standard IPage<T> contract."},"IAiShopConfigurations.IUpdate":{"type":"object","properties":{"param_name":{"type":"string","description":"(Optional) Override parameter name. Must be unique if changed."},"param_value":{"type":"string","description":"(Optional) New value for the setting. Must conform to business or feature type."},"description":{"oneOf":[{"type":"string","description":"(Optional) Admin/audit description update."},{"type":"null"}],"description":"(Optional) Admin/audit description update."}},"description":"Input object for updating a configuration. All fields optional for patch semantics. Maps only to fields allowed by the Prisma schema. At least one field must be supplied.","required":[]},"IAiShopCategories.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"UUID of parent channel. FK to ai_shop_channels.id. Required for multi-channel catalog. See Prisma relationship."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) UUID of parent category (for nested taxonomy). Root categories must set this to null. See index/relationship in Prisma."},{"type":"null"}],"description":"(Optional) UUID of parent category (for nested taxonomy). Root categories must set this to null. See index/relationship in Prisma."},"code":{"type":"string","description":"Category code, unique within (ai_shop_channel_id, parent_id). Must be unique per tree layer (Prisma: @@unique([ai_shop_channel_id, parent_id, code]))."},"name":{"type":"string","description":"Category display name for UI/admin search and browse."},"sort_order":{"type":"integer","description":"Display ordering among siblings (same parent, channel)."},"enabled":{"type":"boolean","description":"Whether category is currently active/displayed."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"Creation DTO for ai_shop_categories entity. Typed according to Prisma schema definition."},"IAiShopCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique for each category as defined in Prisma."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"The channel to which this category belongs (FK). Maintains referential and business channel context (Prisma schema: category_channel)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"If present, UUID references parent category for tree structure; null indicates root."},{"type":"null"}],"description":"If present, UUID references parent category for tree structure; null indicates root."},"code":{"type":"string","description":"Programmatic/unique within parent/channel. Used for search, navigation, and catalog logic."},"name":{"type":"string","description":"Display name, human-readable, for admin and site navigation."},"sort_order":{"type":"integer","description":"Sibling order value (used for UI/browser)."},"enabled":{"type":"boolean","description":"Whether shown to end users (Prisma schema, indexed for search/UI filter)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when category was created (DB-supplied). Used for auditing, compliance."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp last category was updated."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Main entity type for ai_shop_categories, as defined by the table and Prisma model. All properties match the database schema for strict normalization and compliance."},"IAiShopCategories.IRequest":{"type":"object","properties":{"ai_shop_channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Only categories within this channel (UUID of ai_shop_channels) are returned."},{"type":"null"}],"description":"(Optional) Only categories within this channel (UUID of ai_shop_channels) are returned."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Only categories with this parent_id (null for roots)."},{"type":"null"}],"description":"(Optional) Only categories with this parent_id (null for roots)."},"code":{"oneOf":[{"type":"string","description":"(Optional) Filter by code, partial or exact."},{"type":"null"}],"description":"(Optional) Filter by code, partial or exact."},"name":{"oneOf":[{"type":"string","description":"(Optional) Filter by name (display), partial or fuzzy search supported."},{"type":"null"}],"description":"(Optional) Filter by name (display), partial or fuzzy search supported."},"enabled":{"oneOf":[{"type":"boolean","description":"(Optional) Only include categories with matching enabled flag."},{"type":"null"}],"description":"(Optional) Only include categories with matching enabled flag."},"sort_by":{"oneOf":[{"const":"name","description":"(Optional) Sort column key."},{"const":"created_at","description":"(Optional) Sort column key."},{"const":"updated_at","description":"(Optional) Sort column key."},{"const":"sort_order","description":"(Optional) Sort column key."},{"type":"null"}],"description":"(Optional) Sort column key."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction if sorting supplied."},{"const":"desc","description":"Sort direction if sorting supplied."},{"type":"null"}],"description":"Sort direction if sorting supplied."},"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Which page (pagination), starting at 1."},{"type":"null"}],"description":"Which page (pagination), starting at 1."},"limit":{"oneOf":[{"type":"integer","minimum":1,"default":100,"description":"How many records per page (default 100)."},{"type":"null"}],"description":"How many records per page (default 100)."}},"description":"Query/filter/sort/pagination input type for listing ai_shop_categories (according to fields available in schema and admin UI needs).","required":[]},"IPageAiShopCategories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCategories"}}},"required":["pagination","data"],"description":"Paginated result for a list of ai_shop_categories, using standard IPage<T> contract."},"IAiShopCategories.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"(Optional) Update the category's parent channel ID (FK to ai_shop_channels)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Set or update parent category or make root (null)."},{"type":"null"}],"description":"(Optional) Set or update parent category or make root (null)."},"code":{"type":"string","description":"(Optional) Edit code (catalog key, must obey uniqueness rule per channel/parent)."},"name":{"type":"string","description":"(Optional) Update the display name."},"sort_order":{"type":"integer","description":"(Optional) Sibling order."},"enabled":{"type":"boolean","description":"(Optional) Turn on/off display for public site."}},"description":"DTO for patch/update to ai_shop_categories. Only fields declared in Prisma table/ERD. At least one field must be provided.","required":[]},"IAiShopFiles.ICreate":{"type":"object","properties":{"original_name":{"type":"string","description":"Original file name as uploaded by user (e.g., for UI/admin display)."},"uri":{"type":"string","description":"Persistent storage URI or path for unique file retrieval. (Prisma: @unique([uri]) constraint, must be unique and persistent.)"},"mime_type":{"type":"string","description":"File MIME type. e.g., image/png, application/pdf. Used for content validation, display, preview, and API attachments."},"size_bytes":{"type":"integer","description":"File size in bytes, as reported by storage/upload event (for audit/quota)."},"uploader_name":{"oneOf":[{"type":"string","description":"Name of uploader, if available (optional tracked metadata for audit or cross-reference)."},{"type":"null"}],"description":"Name of uploader, if available (optional tracked metadata for audit or cross-reference)."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp when file was uploaded (required per audit trail, as per Prisma schema)."}},"required":["original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"DTO for file creation according to ai_shop_files. Maps precisely to Prisma model column definitions. No extra fields allowed."},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":1,"description":"Current page number.","example":1},"limit":{"type":"integer","minimum":1,"default":100,"description":"Number of records per page. Default is 100.","example":100},"records":{"type":"integer","minimum":0,"description":"Total number of records in DB for this query/app.","example":512},"pages":{"type":"integer","minimum":1,"description":"Total number of result pages.","example":6}},"required":["current","limit","records","pages"],"description":"Pagination block for paginated responses. Copied from standard IPage<T> contract."}}},"completed":11,"total":31,"step":0,"created_at":"2025-07-24T09:12:07.864Z"},"tokenUsage":{"facade":{"aggregate":{"total":584993,"input":{"total":560148,"cached":0},"output":{"total":24845,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":584993,"input":{"total":560148,"cached":0},"output":{"total":24845,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":584993,"input":{"total":560148,"cached":0},"output":{"total":24845,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":584993,"input":{"total":560148,"cached":0},"output":{"total":24845,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopFiles":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"고유 파일 식별자입니다. 업로드된 각 파일을 전역적으로 식별합니다.\n\nPrisma 스키마의 id 컬럼을 참조합니다. 데이터베이스에서 UUID로 저장됩니다."},"original_name":{"type":"string","description":"파일이 업로드 시 사용자가 제공한 원래 이름입니다.\n\nPrisma 스키마의 original_name 컬럼을 참조합니다. 사용자나 관리자가 UI에서 파일을 인식하는 데 도움이 됩니다."},"uri":{"type":"string","description":"파일의 고유 저장 경로 또는 URI입니다. 예시: 'files/2025/07/report.pdf'. 시스템 내부적으로 파일 접근에 사용됩니다.\n\nPrisma 스키마의 uri 컬럼(80000자 제한)과 고유 제약조건을 따릅니다."},"mime_type":{"type":"string","description":"파일의 MIME 타입입니다. 예시: 'image/png', 'application/pdf'.\n\nPrisma 스키마의 mime_type 컬럼을 참조합니다. 미리보기 및 컨텐츠 검증에 활용됩니다."},"size_bytes":{"type":"integer","description":"파일의 크기(바이트 단위)입니다.\n\nPrisma 스키마의 size_bytes 컬럼을 참조하며 업로드 제한·감사에 사용됩니다."},"uploader_name":{"oneOf":[{"type":"string","description":"업로더의 이름(선택값).\n\nPrisma 스키마의 uploader_name 컬럼을 참조하며, 파일 업로드 시 기록 가능합니다. 비어있을 수 있습니다."},{"type":"null"}],"description":"업로더의 이름(선택값).\n\nPrisma 스키마의 uploader_name 컬럼을 참조하며, 파일 업로드 시 기록 가능합니다. 비어있을 수 있습니다."},"uploaded_at":{"type":"string","format":"date-time","description":"업로드된 시각의 타임스탬프입니다.\n\nPrisma 스키마 uploaded_at 컬럼을 ISO 8601 포맷(UTC)으로 변환해 사용합니다."}},"required":["id","original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"AI Shop 파일 메타데이터 모델입니다. 플랫폼 내 파일 업로드 시 원본 파일명, 고유 저장 위치, 유형, 크기, 업로더 정보, 업로드 시간을 저장합니다.\n\nPrisma의 ai_shop_files 테이블 주석을 참조하였으며, 모든 컬럼이 명확히 설계 목적과 비즈니스 규칙을 반영합니다.\n\n파일 업로드/다운로드, 첨부 기능, 관리자 감사 및 기록 관리에 사용됩니다."},"IAiShopFiles.IRequest":{"type":"object","properties":{"original_name":{"type":"string","description":"파일 원본명(선택적으로 검색 필터로 사용)."},"mime_type":{"type":"string","description":"MIME 타입(선택적, 예: 'image/png')."},"uploader_name":{"type":"string","description":"업로더 이름(선택적, 문자열)."},"uploaded_at_from":{"type":"string","format":"date-time","description":"업로드 시각 범위 시작(선택적, ISO8601)."},"uploaded_at_to":{"type":"string","format":"date-time","description":"업로드 시각 범위 종료(선택적, ISO8601)."},"page":{"type":"integer","description":"페이지 번호(0부터 시작)\n\n표준 IPage.IRequest 구문과 동일. 미지정 시 0페이지."},"limit":{"type":"integer","description":"페이지당 레코드 개수(기본값 100, 최대 제한 적용 필요)."}},"required":["page","limit"],"description":"파일 검색/조회/페이징용 요청객체입니다.\n\nai_shop_files에서 검색/목록에 사용되며, 파일명, MIME, 업로더, 업로드시간 범위 등으로 필터링할 수 있습니다.\n\n표준 페이지네이션 파라미터(page, limit)를 포함합니다."},"IPageAiShopFiles":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFiles"},"description":"이 페이지에 포함된 파일 메타 레코드 리스트입니다."}},"required":["pagination","data"],"description":"파일 엔티티(IAiShopFiles) 페이지네이션 컨테이너 타입입니다.\n\n표준 IPage 구조를 따르며, 여러 파일 엔티티를 페이징/리스트 형태로 반환합니다.\n\n목록 endpoint(patch /aiShop/files 등)에서 사용됩니다."},"IAiShopFiles.IUpdate":{"type":"object","properties":{"original_name":{"type":"string","description":"파일의 원래 이름 변경시 사용(옵션)."},"uri":{"type":"string","description":"저장위치(URI) 변경시 사용(드물게 활용됨)."},"mime_type":{"type":"string","description":"MIME 타입 변경시 사용. 일반적으로 파일 내용 변경이 동반될 때만 허용됨."},"size_bytes":{"type":"integer","description":"파일 크기(바이트). 값이 변경되면 정확한 데이터 동기화가 필요."},"uploader_name":{"oneOf":[{"type":"string","description":"업로더 이름(선택적, null 가능)."},{"type":"null"}],"description":"업로더 이름(선택적, null 가능)."},"uploaded_at":{"type":"string","format":"date-time","description":"업로드 시각을 보정하거나 수정할 때 사용."}},"description":"파일 데이터 수정용 요청 타입입니다. ai_shop_files 테이블의 변경 가능한 컬럼만 포함하며 주로 관리자가 메타/오류 정보를 보정 시 활용합니다.\n\n수정 가능한 컬럼은 original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at 등이며, 모든 필드는 선택적입니다.","required":[]},"IAiShopAuditLogs.ICreate":{"type":"object","properties":{"event_id":{"type":"string","description":"이 로그 이벤트의 고유 식별자입니다.\n\nPrisma의 event_id 컬럼—시스템/비즈니스 이벤트 코드를 유일하게 만듭니다."},"event_type":{"type":"string","description":"이벤트 유형 코드를 명시합니다. 예: 'USER_LOGIN', 'ORDER_CANCELED'.\n\nPrisma의 event_type 컬럼—빠른 질의/감사를 위한 필수 정보입니다."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"행위자 ID (user/seller/admin 등, null 가능).\n\nPrisma의 actor_id 컬럼—시스템/자동화 이벤트의 경우 null일 수 있습니다."},{"type":"null"}],"description":"행위자 ID (user/seller/admin 등, null 가능).\n\nPrisma의 actor_id 컬럼—시스템/자동화 이벤트의 경우 null일 수 있습니다."},"actor_role":{"oneOf":[{"type":"string","description":"행위자의 역할. 예: 'customer', 'seller', 'admin' 혹은 null(시스템).\n\nPrisma의 actor_role 컬럼."},{"type":"null"}],"description":"행위자의 역할. 예: 'customer', 'seller', 'admin' 혹은 null(시스템).\n\nPrisma의 actor_role 컬럼."},"target_table":{"oneOf":[{"type":"string","description":"이 이벤트로 영향을 받은 테이블명. 예: 'ai_shop_orders', null 가능.\n\nPrisma의 target_table 컬럼."},{"type":"null"}],"description":"이 이벤트로 영향을 받은 테이블명. 예: 'ai_shop_orders', null 가능.\n\nPrisma의 target_table 컬럼."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"이벤트 영향을 받은 행의 ID(UUID). null 허용.\n\nPrisma의 target_id 컬럼."},{"type":"null"}],"description":"이벤트 영향을 받은 행의 ID(UUID). null 허용.\n\nPrisma의 target_id 컬럼."},"details":{"oneOf":[{"type":"string","description":"이벤트에 대한 상세정보. 예: 상태변경 전후(JSON). 비어있을 수 있음.\n\nPrisma의 details 컬럼."},{"type":"null"}],"description":"이벤트에 대한 상세정보. 예: 상태변경 전후(JSON). 비어있을 수 있음.\n\nPrisma의 details 컬럼."},"created_at":{"type":"string","format":"date-time","description":"로그 이벤트가 기록된 시각. ISO8601(UTC) 표준 준수.\n\nPrisma의 created_at 컬럼—정확한 감사/분석에 필수적."}},"required":["event_id","event_type","created_at"],"description":"감사/트레일 로그 생성 요청 타입입니다. ai_shop_audit_logs 테이블에 새로운 이벤트/액션을 기록할 때 사용합니다.\n\n모든 필드는 Prisma DB 테이블과 완전히 일치하며, 역할(행위자)/타깃 테이블/상세 내용은 필요에 따라 null을 허용합니다.\n\n데이터 추적/감사/컴플라이언스 목적상 생성 시각(created_at)은 반드시 포함되어야 합니다."},"IAiShopAuditLogs":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. 감사 로그 이벤트의 고유 식별자입니다.\n\nPrisma id 컬럼입니다."},"event_id":{"type":"string","description":"이벤트 고유 식별자. 시스템 내 특정 비즈니스/시스템 이벤트의 유일한 코드. 예: 'ORD20250722-38'.\n\nPrisma event_id 컬럼."},"event_type":{"type":"string","description":"이벤트 유형 코드. 예: 'USER_LOGIN', 'ORDER_CANCELED'.\n\nPrisma event_type 컬럼."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"액터(행위자)의 ID(UUID). null이면 시스템/자동화 이벤트임을 의미.\n\nPrisma actor_id 컬럼."},{"type":"null"}],"description":"액터(행위자)의 ID(UUID). null이면 시스템/자동화 이벤트임을 의미.\n\nPrisma actor_id 컬럼."},"actor_role":{"oneOf":[{"type":"string","description":"행위자의 역할(예: 'customer', 'seller', 'admin', null).\n\nPrisma actor_role 컬럼."},{"type":"null"}],"description":"행위자의 역할(예: 'customer', 'seller', 'admin', null).\n\nPrisma actor_role 컬럼."},"target_table":{"oneOf":[{"type":"string","description":"이벤트가 적용된 테이블명(예: 'ai_shop_orders'). null 가능.\n\nPrisma target_table 컬럼."},{"type":"null"}],"description":"이벤트가 적용된 테이블명(예: 'ai_shop_orders'). null 가능.\n\nPrisma target_table 컬럼."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"이벤트 대상 행 ID(UUID). null 가능.\n\nPrisma target_id 컬럼."},{"type":"null"}],"description":"이벤트 대상 행 ID(UUID). null 가능.\n\nPrisma target_id 컬럼."},"details":{"oneOf":[{"type":"string","description":"이벤트의 상세 JSON(상태 변화, before/after 등). null 가능.\n\nPrisma details 컬럼."},{"type":"null"}],"description":"이벤트의 상세 JSON(상태 변화, before/after 등). null 가능.\n\nPrisma details 컬럼."},"created_at":{"type":"string","format":"date-time","description":"이 로그가 생성된 시각(ISO 8601). Prisma created_at 컬럼."}},"required":["id","event_id","event_type","created_at"],"description":"감사 로그 엔티티의 메인 타입(응답). ai_shop_audit_logs의 모든 컬럼을 포함합니다.\n\n생성/수정/조회 등 시스템 내 모든 중요한 이벤트를 기억하며, 법적 감사와 포렌식, 이상 행위 추적에 활용됩니다."},"IAiShopAuditLogs.IRequest":{"type":"object","properties":{"event_type":{"type":"string","description":"이벤트 유형 코드로 검색(부분/정확 매칭, 선택적)."},"actor_id":{"type":"string","description":"행위자 UUID로 필터(선택적)."},"actor_role":{"type":"string","description":"행위자 역할로 필터(선택적, 'customer' 등)."},"target_table":{"type":"string","description":"적용 대상 테이블로 필터."},"created_at_from":{"type":"string","format":"date-time","description":"로그 이벤트 발생 시점(검색 범위 시작)."},"created_at_to":{"type":"string","format":"date-time","description":"로그 이벤트 발생 시점(검색 범위 종료)."},"page":{"type":"integer","description":"페이지 번호(0부터 시작)."},"limit":{"type":"integer","description":"페이지 자르기/최대 레코드 수(기본 100)."}},"required":["page","limit"],"description":"감사 로그 목록(검색/페이징) 요청 타입입니다.\n\nai_shop_audit_logs의 event_type, actor, 대상 테이블, 시간범위 등으로 필터할 수 있으며 표준 페이지네이션 파라미터 포함합니다."},"IPageAiShopAuditLogs":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopAuditLogs"},"description":"이 페이지에 해당하는 감사 로그 레코드 배열입니다."}},"required":["pagination","data"],"description":"감사 로그(IAiShopAuditLogs) 페이징/리스트 결과 컨테이너입니다. 표준 IPage 구조를 따르며, 다수 감사 이벤트를 페이지 단위로 조회합니다."},"IAiShopAuditLogs.IUpdate":{"type":"object","properties":{"event_id":{"type":"string","description":"이벤트 식별자(수정 시 유지/교정)."},"event_type":{"type":"string","description":"이벤트 유형(필요 시 보정)."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"행위자 UUID(보정 가능)."},{"type":"null"}],"description":"행위자 UUID(보정 가능)."},"actor_role":{"oneOf":[{"type":"string","description":"행위자 역할(보정 가능)."},{"type":"null"}],"description":"행위자 역할(보정 가능)."},"target_table":{"oneOf":[{"type":"string","description":"적용 대상 테이블(보정 가능)."},{"type":"null"}],"description":"적용 대상 테이블(보정 가능)."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"대상 행 UUID(보정 가능)."},{"type":"null"}],"description":"대상 행 UUID(보정 가능)."},"details":{"oneOf":[{"type":"string","description":"이벤트 상세 내용(JSON 등, 보정 가능)."},{"type":"null"}],"description":"이벤트 상세 내용(JSON 등, 보정 가능)."},"created_at":{"type":"string","format":"date-time","description":"이벤트 발생 시간(보정 가능, ISO8601)."}},"description":"감사 로그(AI Shop Audit Log) 수정 요청 타입입니다. ai_shop_audit_logs의 주요 컬럼(event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at)에 대해 수정이 필요한 경우 사용합니다. 모든 필드는 선택적입니다.","required":[]},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호 (uint32)"},"limit":{"type":"integer","description":"페이지당 레코드 제한 (기본값 100, uint32)"},"records":{"type":"integer","description":"전체 DB 내 레코드 수 (uint32)"},"pages":{"type":"integer","description":"현 쿼리로 계산된 전체 페이지 수 (uint32)"},"hasNext":{"type":"boolean","description":"다음 페이지 존재 여부"}},"required":["current","limit","records","pages"],"description":"페이징 정보 표준 타입. 현재 페이지, 리밋, 전체 갯수, 페이지 수, 다음 페이지 유무를 제공합니다."}}},"completed":20,"total":31,"step":0,"created_at":"2025-07-24T09:13:07.909Z"},"tokenUsage":{"facade":{"aggregate":{"total":648608,"input":{"total":620670,"cached":0},"output":{"total":27938,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":648608,"input":{"total":620670,"cached":0},"output":{"total":27938,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":648608,"input":{"total":620670,"cached":0},"output":{"total":27938,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":648608,"input":{"total":620670,"cached":0},"output":{"total":27938,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComponents","components":{"schemas":{"IAiShopChannels.ICreate":{"type":"object","description":"ai_shop_channels 엔터티의 생성 요청 바디 타입 정의.\n\nPrisma 스키마 'ai_shop_channels'의 컬럼 정의와 비즈니스 로직을 기준으로, 채널 생성 시 필요한 필드만 포함합니다. 'id', 'created_at', 'updated_at' 등 시스템에서 자동 생성되는 필드는 제외됩니다. 'code'(채널의 고유 문자열), 'name'(채널 표시 이름), 'enabled'(활성화 여부), 'sort_order'(UI 정렬 순서)만 허용합니다.\n\n중복 또는 잘못된 필드는 허용되지 않으며, 모든 컬럼 설명은 Prisma의 상세 주석을 따릅니다.","properties":{"code":{"type":"string","description":"고유 채널 코드. Prisma 스키마의 code 필드에 해당. 'main', 'event2025' 등으로 샵 내 채널을 식별합니다.\n\n예: 'main', 'mobile' 등. 전역적으로 유일해야 하며, 비즈니스 및 API 연동에서 중요한 역할을 합니다."},"name":{"type":"string","description":"채널 표시 이름. Prisma 스키마의 name 필드에 해당.\n\n사람이 읽기 쉬운 문자열로, 관리자/프론트에서 채널 셀렉터 및 안내에 사용됩니다. ex) 'Main Shop', 'Mobile 전용' 등."},"enabled":{"type":"boolean","description":"채널 활성화 여부. Prisma의 enabled 필드.\n\n채널 서비스 가능 여부를 표시하는 지원 컬럼. 'true'면 노출, 'false'면 숨김."},"sort_order":{"type":"integer","description":"UI 내 채널 정렬순서. Prisma 스키마 sort_order 필드.\n\n쇼핑몰/관리자 UI에서의 정렬 제어에 사용합니다."}},"required":["code","name","enabled","sort_order"]},"IAiShopChannels":{"type":"object","description":"ai_shop_channels 엔티티의 대표 응답 객체.\n\nPrisma 스키마의 모든 필드를 포함합니다. 보안상 공개해도 되는 필드만 노출하며, 패스워드/민감정보 등은 존재하지 않습니다. 모든 필드의 타입, 역할, 제약조건은 Prisma 주석을 기준으로 상세 설명합니다.\n\n각 컬럼은 쇼핑몰 채널의 비즈니스 기능과 일치하며, 외부 노출이 허락된 데이터임을 보장합니다.","properties":{"id":{"type":"string","format":"uuid","description":"채널 PK입니다. Prisma 스키마의 id 필드(고유 UUID)와 일치.\n\n각 채널을 고유하게 식별합니다."},"code":{"type":"string","description":"고유 채널 코드. 생성/수정 불변 컬럼이며, 프로그램적 참조와 동적 구분에 활용합니다."},"name":{"type":"string","description":"채널의 표기명. 관리자 및 UI에서 노출되는 표시 텍스트. 중복 허용."},"enabled":{"type":"boolean","description":"채널 사용 가능 상태 여부. true면 활성중임을 나타내며, business enable/disable 제어용."},"sort_order":{"type":"integer","description":"채널의 노출 순서(작을수록 우선)."},"created_at":{"type":"string","format":"date-time","description":"채널 생성 시각. 시스템상 자동 기록. 감사(log) 등에 활용."},"updated_at":{"type":"string","format":"date-time","description":"채널 데이터의 마지막 수정 시각. 관리/프론트 화면에서의 동기화/변경점 확인용."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"]},"IAiShopChannels.IRequest":{"type":"object","description":"ai_shop_channels 목록/검색 API의 필터, 검색, 페이징 요청 타입.\n\nPrisma 엔터티의 실제 컬럼 및 인덱싱된 필드만 지원하며, soft-delete 등 불필요 컬럼이 포함되지 않습니다. 전체 목록 또는 enabled, code, name 등 조건 검색에 사용됩니다.","properties":{"page":{"type":"integer","description":"페이지 번호(0부터 시작). 생략 시 기본값 적용."},"limit":{"type":"integer","description":"페이지 단위 목록 수. default=100"},"enabled":{"type":"boolean","description":"enabled값에 따라 필터링, Prisma 컬럼 연동. (선택)"},"code":{"type":"string","description":"code 정확/일부일치 검색 옵셔널. gin_trgm_ops 인덱스 지원."},"name":{"type":"string","description":"이름 부분 검색(ex. gin_trgm_ops)에 활용. (선택)"}},"required":[]},"IPageIAiShopChannels":{"type":"object","description":"ai_shop_channels 목록에 대한 표준 페이지네이션 결과 타입.\n\n목록 결과 + 페이지 정보(현재, 전체, 페이지수, 한페이지내 리스트)만 포함. 각 항목은 IAiShopChannels 타입을 따른다. 표준 IPage 구조를 확장.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"페이지 정보(현재 페이지/레코드 수/전체 페이지/limit)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopChannels"},"description":"ai_shop_channels 목록. 각 항목은 단일 채널 엔터티 전체 정보."}},"required":["pagination","data"]},"IAiShopChannels.IUpdate":{"type":"object","description":"ai_shop_channels 단건수정(put)용 스키마.\n\nPrisma 엔터티에서 사용자가 수정 가능한 필드만 포함(code, name, enabled, sort_order). PK(id), 생성일/수정일(created_at/updated_at)은 서버 자동 관리됨. soft-delete 등은 없음. 옵셔널 property로 전달되며, 적어도 하나는 필수 미만임.","properties":{"code":{"type":"string","description":"채널 코드, 수정 가능. 중복 불가."},"name":{"type":"string","description":"채널 표시 이름(수정 가능)"},"enabled":{"type":"boolean","description":"채널 활성화 여부(수정 가능)"},"sort_order":{"type":"integer","description":"UI 내 정렬순서(변경 가능)"}},"required":[]},"null":{"type":"object","description":"DELETE 등에서 컨텐츠가 없음을 의미. 반환 데이터 없이 성공 처리(204) 용도.","properties":{},"required":[]},"IAiShopSections.ICreate":{"type":"object","description":"ai_shop_sections 엔터티의 생성 요청 바디 스키마.\n\nPrisma의 section 채널영역관리 요건을 구현. 생성시 필요한 필드(ai_shop_channel_id, code, name, sort_order, enabled)만 포함. id, created_at, updated_at 등은 시스템 처리되므로 요청 body에 없다.","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 ai_shop_channels.id. Foreign Key. Prisma 주석의 section_channel 필드와 상응. 연관 채널 연결 필수(UUID)."},"code":{"type":"string","description":"section 전용 코드. 채널 내 유니크, 프로그램적/비즈니스용 참조."},"name":{"type":"string","description":"section 명칭. UI, 관리자 화면에 사용."},"sort_order":{"type":"integer","description":"채널 내 표시/정렬 우선순위. ascending 정렬 기준."},"enabled":{"type":"boolean","description":"section 노출 여부. true: 활성화, false: 숨김."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"]},"IAiShopSections":{"type":"object","description":"ai_shop_sections의 대표 응답 스키마.\n\nPrisma 스키마 컬럼 id, ai_shop_channel_id, code, name, sort_order, enabled, created_at, updated_at을 모두 포함. 모든 데이터는 외부 열람, 관리 인터페이스 노출 전제. 삭제정보/deleted_at 등은 없음.","properties":{"id":{"type":"string","format":"uuid","description":"section의 PK(UUID). 각 섹션을 고유하게 식별."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 ai_shop_channels.id. 채널에 속한 section임을 보장(참조키)."},"code":{"type":"string","description":"section 전용 프로그램식 코드(채널 내 유니크). 안내/검색/운영에 활용."},"name":{"type":"string","description":"section의 표시명. UI 및 관리 화면 등 인적 접근용."},"sort_order":{"type":"integer","description":"section 정렬순서. 낮을수록 먼저 노출."},"enabled":{"type":"boolean","description":"section 활성화 여부(비활성 시 숨김 처리)."},"created_at":{"type":"string","format":"date-time","description":"section 생성일시. 감사 등 이력관리 목적."},"updated_at":{"type":"string","format":"date-time","description":"마지막 수정일시. 동기화/현행화 체크용."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"]},"IAiShopSections.IRequest":{"type":"object","description":"ai_shop_sections 목록/검색/필터/페이징 요청에 사용하는 스키마.\n\n상위 채널, 활성화, 이름/코드, 정렬 등 파라미터 지정 옵션. soft-delete/deleted_at은 없음. Prisma의 실제 인덱스/컬럼 조건만 허용.","properties":{"page":{"type":"integer","description":"조회할 페이지 번호(0부터), 생략 시 기본값 적용."},"limit":{"type":"integer","description":"한 페이지에 노출할 최대 섹션 수. default=100"},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"해당 채널내 sections 조회시 UUID 지정. (선택)"},"enabled":{"type":"boolean","description":"section 노출여부(활성화) bool 필터."},"code":{"type":"string","description":"프로그래밍 참조용 코드 일부/정확 검색."},"name":{"type":"string","description":"section 명칭(부분검색, gin_trgm_ops 등 활용)"}},"required":[]},"IPageIAiShopSections":{"type":"object","description":"ai_shop_sections 목록 페이징 결과 오브젝트.\n\n페이징 정보+실제 데이터 배열(IAiShopSections 타입)로 응답함. 각 property 및 구조는 IPage 표준을 따른다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"현재페이지, 총개수, 한 페이지당 데이터수 등 표준 정보."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopSections"},"description":"section 단위 데이터 각각의 목록."}},"required":["pagination","data"]},"IAiShopSections.IUpdate":{"type":"object","description":"ai_shop_sections 엔터티 단건수정용 PUT 요청 스키마.\n\n수정 가능한 필드(ai_shop_channel_id, code, name, sort_order, enabled)만 선택 포함. id, created_at, updated_at 등은 서버 관리. soft-delete 등 논리 삭제 없음. 옵셔널 property로 patch와 달리 전체 프로퍼티 포함 가능.","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"section이 속한 상위 채널 아이디(UUID, 수정 가능)"},"code":{"type":"string","description":"section 코드 값(채널 내 유니크, 수정 가능)"},"name":{"type":"string","description":"section 표시명(수정용)"},"sort_order":{"type":"integer","description":"채널 내 정렬번호, 적용순서(수정 가능)"},"enabled":{"type":"boolean","description":"활성/비활성 여부"}},"required":[]},"IPage.IPagination":{"type":"object","description":"페이지네이션 정보(IPage 등에서 사용)\n\nPrisma 스키마 및 표준 API 문서의 가이드에 따라 현황값/전체갯수/1페이지당 데이터수/총페이지 등이 포함.","properties":{"current":{"type":"integer","description":"현재 페이지 번호(0부터)."},"limit":{"type":"integer","description":"페이지당 최대 데이터 수. 기본값 100."},"records":{"type":"integer","description":"전체 건수."},"pages":{"type":"integer","description":"전체 페이지 수(올림 계산)."}},"required":["current","limit","records","pages"]}}},"completed":31,"total":31,"step":0,"created_at":"2025-07-24T09:13:45.978Z"},"tokenUsage":{"facade":{"aggregate":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}},{"event":{"type":"interfaceComplete","document":{"operations":[{"specification":"Creates a new shop channel in the ai_shop_channels table. Only the fields defined in the Prisma schema are allowed. The channel has a unique 'code' (programmatic identifier), a human-readable 'name', an 'enabled' status, a 'sort_order', and audit fields 'created_at' and 'updated_at'. No extra or soft-deletion fields exist. The API returns the created channel object.","description":"This API creates a new entry in the ai_shop_channels table. The request body must include the required fields: 'code' (unique string), 'name' (display string), 'enabled' (boolean status), and 'sort_order' (int for UI ordering). The server will set the audit fields 'created_at' and 'updated_at' to the current time. Channel 'code' must be globally unique. Only fields present in the actual Prisma schema are referenced. No soft delete; deleting will be hard delete. All field validations follow the schema specification strictly.","summary":"Create a new channel in ai_shop_channels.","parameters":[],"requestBody":{"description":"Information to create the channel. Only schema-defined fields allowed.","typeName":"IAiShopChannels.ICreate"},"responseBody":{"description":"The created channel object.","typeName":"IAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels","method":"post"},{"specification":"Fetch a list of shop channels from ai_shop_channels with advanced search or filtering. No request fields or filters should reference non-existent schema fields. Uses pagination, search by 'name' or 'code', and filters by 'enabled' as allowed. Only schema fields are referenced in the operation and response.","description":"This API returns a paginated, searchable list of ai_shop_channels records using only the fields defined in the schema. Supports filtering by 'enabled', searching by 'name' (partial text), and 'code' (exact or partial). The response includes only defined fields such as 'id', 'code', 'name', 'enabled', 'sort_order', 'created_at', and 'updated_at'. There are no deleted_at, created_by, or extra status fields beyond those explicitly listed in the Prisma schema. Pagination and sorting are supported through request parameters, aligning strictly to the schema contents.","summary":"Search and list ai_shop_channels records.","parameters":[],"requestBody":{"description":"Search, filter, and pagination information. Only schema fields allowed.","typeName":"IAiShopChannels.IRequest"},"responseBody":{"description":"Paginated list of channel objects conforming to the Prisma schema.","typeName":"IPageIAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels","method":"patch"},{"specification":"Retrieve a single channel from the ai_shop_channels table by its unique id. Only fields present in the schema can be used. No audit fields other than 'created_at' and 'updated_at'. No soft-delete: if the record is missing, it does not exist. The id must be a valid UUID.","description":"This API fetches a single ai_shop_channels record by its 'id' field. The path parameter 'id' must be a valid UUID matching an existing record. Returns all fields defined in the schema, including 'id', 'code', 'name', 'enabled', 'sort_order', 'created_at', and 'updated_at'. No extra or deleted_at fields. If no record exists for the given id, a 404 is returned. All references and field usages are strictly verified against the schema.","summary":"Get details for a single ai_shop_channels record by id.","parameters":[{"name":"id","description":"The unique id for the channel (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the specified channel, according to the schema.","typeName":"IAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels/{id}","method":"get"},{"specification":"Update an existing channel in ai_shop_channels by id. Only fields from the schema may be updated (code, name, enabled, sort_order). Audit fields 'created_at' and 'updated_at' are managed by the system. No soft delete field exists; updates are applied directly to live data.","description":"This API updates the given ai_shop_channels record (matching the specified 'id'). The fields allowed for update are only those defined in the schema: 'code', 'name', 'enabled', and 'sort_order'. 'created_at' and 'updated_at' are not directly updatable. If the record exists, the update is performed and the server-managed 'updated_at' field is changed. If not found, a 404 is returned. No extra or soft delete fields are referenced.","summary":"Update the specified ai_shop_channels record by id.","parameters":[{"name":"id","description":"Unique id (UUID) of the channel to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for update—only those permitted by the schema.","typeName":"IAiShopChannels.IUpdate"},"responseBody":{"description":"The updated channel object.","typeName":"IAiShopChannels"},"authorizationRole":"admin","path":"/aiShop/channels/{id}","method":"put"},{"specification":"Delete a channel by id from the ai_shop_channels table. There is no soft delete field (such as deleted_at) in the schema, so this operation is a hard delete (permanently removes the row). Only the 'id' parameter is required, which must be a UUID. Operation strictly references existing schema fields; no creative or inferred deletion logic.","description":"This API permanently removes the channel with the specified 'id' from the ai_shop_channels table. As the schema does not include a soft delete (deleted_at) or logical status field, deletion will physically erase the row. The operation accepts a single 'id' (UUID) parameter as the path argument. If not found, returns a 404. No soft delete semantics are described, only definitive removal as per the schema.","summary":"Hard delete the specified ai_shop_channels record by id.","parameters":[{"name":"id","description":"Unique UUID for the channel to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"No content—operation deletes the resource or returns 404 if not found.","typeName":"null"},"authorizationRole":"admin","path":"/aiShop/channels/{id}","method":"delete"},{"specification":"Create a new shop section in ai_shop_sections. Only schema-defined fields (including foreign key channel_id, code, name, sort_order, enabled, created_at, updated_at) are included. No soft delete or extraneous audit fields exist. The API returns the section object upon successful creation.","description":"This API endpoint registers a new record in the ai_shop_sections table, creating a section within an existing channel. The request body must include valid values for 'ai_shop_channel_id' (UUID foreign key to the parent channel), 'code', 'name', 'sort_order', 'enabled'. 'created_at' and 'updated_at' are system-assigned. No deleted_at, is_deleted, or creator fields exist and must not be referenced. Only fields from the actual Prisma schema are permitted. The API responds with the newly created section object using all allowable fields.","summary":"Create a new shop section in ai_shop_sections.","parameters":[],"requestBody":{"description":"Fields to create a new section—schema only.","typeName":"IAiShopSections.ICreate"},"responseBody":{"description":"The created section object per schema.","typeName":"IAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections","method":"post"},{"specification":"Fetch a filtered, paginated list of sections from ai_shop_sections. Used for admin or system-level management. Only supports searching/filtering using schema-defined fields such as code, name, enabled, ai_shop_channel_id, etc. No deleted_at or is_deleted logic is present. Can return sections from all channels if desired.","description":"This endpoint provides a list of shop sections based on defined filter, search, pagination, and sort parameters, all referencing only actual fields in the ai_shop_sections schema: 'id', 'ai_shop_channel_id', 'code', 'name', 'sort_order', 'enabled', 'created_at', 'updated_at'. Filtering by 'enabled', search by 'name', and filtering by parent channel id is supported. No fields outside the schema or non-existent soft-delete logic are supported. The output returns all defined section properties; no calculated or inferred fields. Pagination and result sorting must only use schema-defined fields.","summary":"Paginated, filtered search for ai_shop_sections.","parameters":[],"requestBody":{"description":"Request contains pagination/filter/search info—schema fields only.","typeName":"IAiShopSections.IRequest"},"responseBody":{"description":"Paginated, filtered list per the ai_shop_sections schema.","typeName":"IPageIAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections","method":"patch"},{"specification":"Retrieve a single section by its unique id from ai_shop_sections. Only existing fields may be fetched. No soft delete. The id is a required path parameter (UUID).","description":"Fetches a single ai_shop_sections record using the 'id' field. Path parameter must be a valid UUID corresponding to the desired section. Returns only the exact schema-defined fields: 'id', 'ai_shop_channel_id', 'code', 'name', 'sort_order', 'enabled', 'created_at', and 'updated_at'. No deleted_at, is_deleted, or creator fields are present. If not found, returns a 404. No field outside those present in the schema is included in response or validation. Operation is strictly scoped to the existing schema.","summary":"Get a specified ai_shop_sections record by id.","parameters":[{"name":"id","description":"Unique id for the section (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified section record by id.","typeName":"IAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections/{id}","method":"get"},{"specification":"Update a shop section in ai_shop_sections by unique id. Supports changing code, name, enabled, sort_order, and ai_shop_channel_id. No deleted_at, is_deleted, or extra audit fields exist. All updates use only schema-allowed fields; audit (created_at, updated_at) fields are managed internally.","description":"Updates the section entry in ai_shop_sections that matches the given 'id'. The request body may modify 'ai_shop_channel_id', 'code', 'name', 'sort_order', and 'enabled'. System-managed audit fields are not directly modifiable. There are no deleted_at or is_deleted fields for logical removal—operation only allows update of schema-defined attributes. Response returns the fully updated record only using schema-defined fields.","summary":"Update a section by id in ai_shop_sections.","parameters":[{"name":"id","description":"Unique section id (UUID) to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update—schema only.","typeName":"IAiShopSections.IUpdate"},"responseBody":{"description":"The updated section record per the schema.","typeName":"IAiShopSections"},"authorizationRole":"admin","path":"/aiShop/sections/{id}","method":"put"},{"specification":"Delete a section from ai_shop_sections by its unique id. No soft delete (e.g. deleted_at) or logical removal exists in the schema, so this is a hard delete. Uses only the id (UUID) as path parameter. Operation and error handling strictly refer to schema-defined attributes.","description":"This operation performs a hard delete (physical row removal) for the specified ai_shop_sections entry by 'id'. Because there is no deleted_at or logical status field for soft delete, deletion is permanent. Only the path parameter 'id' (UUID) is allowed or required. If the target does not exist, a 404 is returned. No other field, status, or extra logic is present. The endpoint and its response are limited only to the existing ai_shop_sections schema.","summary":"Hard delete the specified ai_shop_sections record by id.","parameters":[{"name":"id","description":"Unique UUID for the section to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"No content—resource deleted or 404 if not found.","typeName":"null"},"authorizationRole":"admin","path":"/aiShop/sections/{id}","method":"delete"},{"specification":"Create a new ai_shop_configurations record. This operation is associated with the ai_shop_configurations table from the Prisma schema. It allows an admin or authorized user to add a new global/system configuration parameter for the AI Shop platform at runtime. Each configuration consists of an atomic name-value pair with a human-readable description, and records creation and update timestamps. All fields referenced (param_name, param_value, description, created_at, updated_at) must exist in the schema. The configuration's param_name must be unique. Audit trail requirements are satisfied by the created_at and updated_at fields.","description":"This endpoint creates a new platform configuration parameter as a single key/value setting. According to the ai_shop_configurations schema, the API consumer must provide a unique param_name, its param_value (as a string), and optionally a description. The operation also records created_at and updated_at timestamps, allowing traceability as required by business and compliance. Typical uses include platform toggles (\"maintenance_mode\", \"max_cart_items\"), AI settings, or feature activation flags. Only the defined fields (param_name, param_value, description, created_at, updated_at) are allowed—do not include undeclared fields. Uniqueness of param_name is enforced by the schema's unique constraint. Any attempt to use a duplicate param_name will return a conflict error. On success, the created configuration is returned.","summary":"Create a new platform configuration (ai_shop_configurations table).","parameters":[],"requestBody":{"description":"Settings and core parameters for a new configuration record.","typeName":"IAiShopConfigurations.ICreate"},"responseBody":{"description":"The newly created configuration record.","typeName":"IAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations","method":"post"},{"specification":"Fetch a paginated and searchable list of ai_shop_configurations entries. This operation is based on the ai_shop_configurations table, allowing retrieval of all configuration parameters that govern the AI shop's global behavior. All fields referenced (id, param_name, param_value, description, created_at, updated_at) must exist in the schema. Supports advanced filtering, sorting, and search for administrative use.","description":"Retrieves a list of configuration parameters stored in ai_shop_configurations, including names, values, and audit timestamps. This endpoint supports pagination, search (e.g., by param_name or description), and sorting (by created_at, updated_at, or param_name). All returned data strictly reflects actual schema columns. Use this endpoint to audit or administer global/platform settings. No extra or virtual fields will be included. This endpoint typically requires admin-level authorization since modifying configuration is a sensitive operation. Error handling includes pagination out-of-range, invalid sort keys, and permission issues.","summary":"List and search configurations (ai_shop_configurations table).","parameters":[],"requestBody":{"description":"Request object for pagination, search, and sort for configurations.","typeName":"IAiShopConfigurations.IRequest"},"responseBody":{"description":"Paginated result set of configuration records.","typeName":"IPageAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations","method":"patch"},{"specification":"Retrieve a single configuration record by id for ai_shop_configurations. The 'id' path parameter must match a value in the id column of the ai_shop_configurations table. This operation is intended for configuration detail inspection or editing by an administrator.","description":"Fetches a detailed configuration parameter using its unique id. Only fields present in the ai_shop_configurations schema will be returned (id, param_name, param_value, description, created_at, updated_at). This operation is intended for admins to review/edit a specific parameter in detail. The id must be a valid UUID matching an existing configuration, otherwise a not-found error is returned. All timestamps and string fields are reported as stored in the DB.","summary":"Get a specific configuration by id (ai_shop_configurations table).","parameters":[{"name":"id","description":"The UUID of the configuration parameter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detail of the configuration setting.","typeName":"IAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations/{id}","method":"get"},{"specification":"Update an existing configuration in ai_shop_configurations by id. This operation allows modification of a configuration parameter's value, description, or name according to actual schema fields. The 'id' parameter targets the configuration to update. Only updatable fields found in the ai_shop_configurations table may be referenced.","description":"Edits an existing configuration parameter in ai_shop_configurations by its unique id. Admins may update param_name, param_value, or description. The id must be a valid UUID and must exist in the table, else a not-found error is returned. All changes are tracked by the updated_at timestamp. No undeclared or virtual fields may be referenced or updated. Uniqueness constraints on param_name apply, so duplicate names are not allowed. This endpoint supports auditability by recording the time of update.","summary":"Update a configuration by id (ai_shop_configurations table).","parameters":[{"name":"id","description":"The UUID of the configuration setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update info for the configuration parameter.","typeName":"IAiShopConfigurations.IUpdate"},"responseBody":{"description":"The updated configuration parameter.","typeName":"IAiShopConfigurations"},"authorizationRole":"admin","path":"/aiShop/configurations/{id}","method":"put"},{"specification":"Delete a configuration in ai_shop_configurations by id. This operation permanently removes a configuration, as there is NO soft delete field present in the Prisma schema (no deleted_at column for ai_shop_configurations). The 'id' parameter is required and must reference an existing configuration.","description":"Permanently removes a configuration record from ai_shop_configurations by its id. Because there is no deleted_at field in the schema, deletions are hard and irreversible—the record is fully deleted from the database. Only the id field is used to locate the target row. Any attempt to delete a non-existent id will return a not-found error. This operation should be restricted to admin users, as mis-operation will remove system-critical parameters.","summary":"Hard delete a configuration by id (ai_shop_configurations table).","parameters":[{"name":"id","description":"The UUID of the configuration record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/configurations/{id}","method":"delete"},{"specification":"Create a new ai_shop_categories record. This operation creates a product/category taxonomy record for use in product cataloging and shopfront navigation. All columns referenced in the operation must exist in the ai_shop_categories Prisma schema. The fields required are ai_shop_channel_id, parent_id (nullable), code, name, sort_order, enabled, created_at, and updated_at. Relationships must be respected (e.g., channel_id, parent_id).","description":"Adds a new product category to the system by creating a row in ai_shop_categories. The operation requires the parent channel's id (ai_shop_channel_id), parent_id (can be null for root categories), category code, display name, sorting order, the enabled boolean, and audit timestamps. This endpoint helps admins or authorized users manage the catalog taxonomy. Uniqueness of (ai_shop_channel_id, parent_id, code) is enforced in the schema. All inputs must correspond to actually defined fields; there is no support for undocumented or virtual attributes.","summary":"Create a new category (ai_shop_categories table).","parameters":[],"requestBody":{"description":"Creation data for a new product category.","typeName":"IAiShopCategories.ICreate"},"responseBody":{"description":"Detail of the newly created product category.","typeName":"IAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories","method":"post"},{"specification":"List ai_shop_categories with filtering, pagination, and sorting. This operation retrieves multiple taxonomy entries for use in product catalog, admin UI, or search selectors. Only fields and query options defined in the schema are allowed. Supports filtering by parent, channel, code, name, enabled status, etc.","description":"Returns a paginated, optionally filtered and sorted list of categories from ai_shop_categories. Query can filter by parent (parent_id), channel (ai_shop_channel_id), code, enabled flag, or name, using precise or fuzzy matching (e.g., gin_trgm_ops indices for fast text search). Provides audit fields for compliance (created_at, updated_at). Does not expose any derived, computed, or virtual fields—only actual schema columns. For root category listing, parent_id is null. Access typically restricted to admin users or role with catalog management rights.","summary":"Search and list categories (ai_shop_categories table).","parameters":[],"requestBody":{"description":"Options for pagination, search, and sort for category listing.","typeName":"IAiShopCategories.IRequest"},"responseBody":{"description":"Paginated set of category records.","typeName":"IPageAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories","method":"patch"},{"specification":"Retrieve a category by its id from ai_shop_categories. The id parameter is required and must match the exact PK format in the schema. Returns only fields present (id, ai_shop_channel_id, parent_id, code, name, sort_order, enabled, created_at, updated_at).","description":"Gets full details of a category from ai_shop_categories by its id. This is used for viewing or editing a single taxonomy node. If the id record does not exist, an error is returned. Returned columns are strictly those from the actual table definition; no computed or joined fields are included. The id parameter must be a UUID.","summary":"Get a single category by id (ai_shop_categories table).","parameters":[{"name":"id","description":"The UUID of the category to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The retrieved category record.","typeName":"IAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories/{id}","method":"get"},{"specification":"Update an existing category by id for ai_shop_categories. This allows admins to alter fields defined in the table: channel, parent, code, name, sort_order, enabled, etc. Only the exact columns may be changed—never reference undefined fields. id parameter must be a valid UUID for an existing record.","description":"Edits a taxonomy/category entry by id in ai_shop_categories. Permitted update fields are ai_shop_channel_id, parent_id, code, name, sort_order, enabled, as reflected in the schema. The endpoint also updates updated_at for audit purposes. Uniqueness constraints for (ai_shop_channel_id, parent_id, code) are enforced—duplicate code in the same hierarchy is not allowed. Only data present in the schema may be altered. Returns the updated detail on success or not-found/validation error otherwise.","summary":"Update a category by id (ai_shop_categories table).","parameters":[{"name":"id","description":"The UUID of the category to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the selected category.","typeName":"IAiShopCategories.IUpdate"},"responseBody":{"description":"Detail of the updated product category.","typeName":"IAiShopCategories"},"authorizationRole":"admin","path":"/aiShop/categories/{id}","method":"put"},{"specification":"Delete a category by id from ai_shop_categories. According to the schema, there is NO soft-delete field (deleted_at), so this will PERMANENTLY remove the category from the database. Only id is required in the path. All other foreign key and uniqueness constraints are handled internally.","description":"Permanently deletes a product category by its id from ai_shop_categories. The operation is a hard delete since the model does not declare a deleted_at field for soft deletion. This requires careful usage: deleted categories cannot be restored and all relationships/fks are checked for referential integrity. If the id does not exist, a not-found error results. Only the id path parameter is used; request/response body is not required.","summary":"Hard delete a category by id (ai_shop_categories table).","parameters":[{"name":"id","description":"The UUID of the product category to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/categories/{id}","method":"delete"},{"specification":"Create a file entity in the ai_shop_files table. This operation allows uploading a new file metadata record, storing atomic details about files uploaded by users, such as original file name, storage URI, MIME type, size, and optional uploader info. Audit and file access metadata are fully normalized. The only source of file info is the explicit fields in the ai_shop_files schema: id, original_name, uri, mime_type, size_bytes, uploader_name, and uploaded_at. There is no soft-deletion functionality defined for ai_shop_files; any delete would be a permanent record removal. This endpoint enables UI or system integrations to register uploaded files for later access or attachment to posts, comments, etc.","description":"This endpoint registers a new file metadata record in the ai_shop_files table.\n\nClients must provide the original uploaded file name (original_name), a unique storage URI or path (uri), the MIME type, size in bytes, and the precise time of upload (uploaded_at) as required by the schema. Optionally, the name of the uploader can be included (uploader_name). All fields are directly mapped to the schema and are used for later file lookup, attachment to domain entities, and audit trails.\n\nThe API does not support hidden or soft-deletion; uploaded files must be referenced only by the explicit schema fields. Any missing or extra fields are not permitted. Error handling includes enforcing uniqueness of URI and required fields.\n\nNo status or workflow field is managed; external logic determines validation, storage, and access control. Related endpoints include update, retrieval, and hard delete of files.","summary":"Register a new file entity in ai_shop_files (normalized file metadata).","parameters":[],"requestBody":{"description":"The required and optional metadata for file upload and registration.","typeName":"IAiShopFiles.ICreate"},"responseBody":{"description":"The uploaded file's metadata, as inserted into ai_shop_files.","typeName":"IAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files","method":"post"},{"specification":"Retrieve a list of file entities from the ai_shop_files table. This operation implements file searching and browsing for audit, attachment, or display purposes. Search, filter, and pagination are handled via request body, allowing clients to specify criteria like file name, MIME type, size, uploaded_at, or uploader_name. Results include only explicit fields in the ai_shop_files schema: id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at. No support for deleted/hidden state or workflow fields. This endpoint supports use cases such as attachment selection or compliance reporting.","description":"This API allows searching and listing file metadata records in ai_shop_files.\n\nQuery parameters are sent via the request body and may include filtering by original file name, MIME type, file size range, uploader_name, and upload timestamp. Only existing schema fields can be searched or returned. Pagination and sorting criteria are included for large-scale browsing needs. This enables compliance with storage, audit, and selection requirements from multiple domain modules (e.g., posts, product images).\n\nNo workflow or status field exists for files; results are limited to explicit schema fields. The endpoint can be used by both user interfaces and background/admin processes. Error handling includes invalid field names, formats, or pagination/sorting errors. Related endpoints: create, read single file, update, and delete.\n","summary":"Search and list files in ai_shop_files table (with filters, pagination, and sorting).","parameters":[],"requestBody":{"description":"Criteria for searching, filtering, and paginating list of file records.","typeName":"IAiShopFiles.IRequest"},"responseBody":{"description":"A paginated list of file metadata records matching search criteria.","typeName":"IPageAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files","method":"patch"},{"specification":"Retrieve a specific file metadata record by unique file ID from the ai_shop_files table. This endpoint implements file lookup for download, audit, or display by referencing the id field as a UUID path parameter. Only explicit fields from the ai_shop_files schema (id, original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at) are returned. No additional metadata or deleted/hidden logic exists on this entity. Error if id not found.","description":"This endpoint retrieves metadata for the file identified by its unique id from the ai_shop_files table.\n\nThe client must provide the file's UUID in the path parameter. The response includes only schema-defined fields: id, original_name, uri, mime_type, size_bytes, uploader_name, and uploaded_at. No workflow or logical deletion field exists; a missing file returns a not found error. This endpoint is essential for viewing, downloading, or referencing uploaded files.\n\nError handling covers invalid UUID format and file not found. Related endpoints: file create, update, delete, and listing APIs.","summary":"Retrieve file metadata by unique id from ai_shop_files.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the file to be retrieved from ai_shop_files.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The metadata of the requested file record, if found.","typeName":"IAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files/{id}","method":"get"},{"specification":"Update an existing file metadata record in the ai_shop_files table. The update operation allows modifying atomic file metadata: supporting only the fields defined explicitly in the ai_shop_files schema (original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at). File id is referenced in the path. No logical deletion, workflow or extra fields are present; only updatable fields are modified as per the schema. The operation enforces unique constraints and field-level validations, triggering errors on rule violation.","description":"Update file metadata for the record identified by its unique id. The API accepts updates to schema-defined fields: original_name, uri, mime_type, size_bytes, uploader_name, and uploaded_at. The id field must be provided in the path, acting as the primary key for the update operation.\n\nUnique constraints (e.g., uri) and field validation (e.g., type, length) are enforced. No workflow or hidden/deleted logic is present in the schema; only the specified atomic attributes can be updated. This endpoint can be used for correcting file info or migration tasks.\n\nError outcomes include non-existent id, unique constraint violations, and invalid input. Related endpoints are create, retrieve, and delete for files.","summary":"Update a file metadata entity in ai_shop_files by id.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the file record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The atomic metadata fields to update for this file record.","typeName":"IAiShopFiles.IUpdate"},"responseBody":{"description":"Updated file metadata record after successful update.","typeName":"IAiShopFiles"},"authorizationRole":"admin","path":"/aiShop/files/{id}","method":"put"},{"specification":"Delete a file metadata record from the ai_shop_files table, permanently removing the file's record based on its id. The ai_shop_files schema does NOT provide a soft deletion field or workflow; therefore, the deletion is a hard delete—file metadata is erased from the database. The operation will only succeed if the file id exists, otherwise returns not found. This endpoint should be protected by role or resource ownership enforcement if required by business rules.","description":"Permanently remove the file record specified by id from ai_shop_files. This operation performs a hard delete (permanent removal) since there is no soft delete or deleted_at field in the table. The API acts only on the id (UUID) of the target row.\n\nThis endpoint is restricted to authorized users and should be accompanied by logical checks for reference or attachment dependencies elsewhere in the system. No data will be recoverable after deletion. Related endpoints: create, update, retrieve, and search for files.","summary":"Hard-delete a file metadata entity from ai_shop_files by id (permanent removal).","parameters":[{"name":"id","description":"Unique identifier (UUID) of the file record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/files/{id}","method":"delete"},{"specification":"Insert an audit log record into the ai_shop_audit_logs table. This operation supports compliance and traceability by registering system/user actions with explicit metadata. All fields must correspond to existing columns of the ai_shop_audit_logs schema: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. There is no soft/delete or workflow field; removal (delete) is always hard. This enables system compliance audit logs for every critical business event (order change, admin actions, etc.) as required by design documentation.","description":"Create a new audit log entry, as required for compliance, traceability, and forensics.\n\nClients must provide the explicit metadata fields: event_id, event_type, actor_id (nullable), actor_role (nullable), target_table (nullable), target_id (nullable), details (nullable), and the timestamp (created_at). The response returns the created audit log entity, which captures a single event for reproducible audit trails and reporting.\n\nNo workflow or soft delete function exists for audit logs. Error cases include duplicate event_id or invalid/missing required field values. Related endpoints: update, retrieve, search, and hard delete for audit logs.","summary":"Insert a new audit/trail log in ai_shop_audit_logs (compliance, system events).","parameters":[],"requestBody":{"description":"The metadata for creating a compliance/audit event.","typeName":"IAiShopAuditLogs.ICreate"},"responseBody":{"description":"The created audit log event record.","typeName":"IAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs","method":"post"},{"specification":"Search and list audit log entries from the ai_shop_audit_logs table, supporting filtering, pagination, and sorting for compliance and forensic reporting. Only explicit fields defined in the ai_shop_audit_logs schema (id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at) can be filtered and returned. No workflow or deleted/hidden logic exists for audit logs—results are atomic event records. Request body should encapsulate search criteria, sort, and pagination parameters for large-scale reporting or admin UI use.","description":"Search and retrieve a paginated list of audit log event records, optionally filtered by event_type, actor_id, actor_role, target_table, event_id, created_at, or other schema fields. All output fields are atomic and only reflect schema-defined columns.\n\nFiltering and sorting are governed exclusively by the request body's specification, which covers supported schema fields. The endpoint is essential for compliance auditing, system analytics, and dispute response for admin or audit users. Errors include invalid criteria or unsupported fields.\n\nNo soft/hard logic is present on result rows; all event logs are atomic and immutable. Related endpoints are event log insert, update, retrieve by id, and hard delete.","summary":"Search and list audit/event logs in ai_shop_audit_logs with filtering and pagination.","parameters":[],"requestBody":{"description":"Filtering, sorting, and paging criteria for audit log list/search.","typeName":"IAiShopAuditLogs.IRequest"},"responseBody":{"description":"Paginated list of audit log events from ai_shop_audit_logs.","typeName":"IPageAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs","method":"patch"},{"specification":"Retrieve a specific audit log entry from ai_shop_audit_logs by unique id (UUID). Provides access to atomic event log detail for compliance, dispute handling, or forensic UI. Only defined schema fields (id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at) are returned, with no workflow, logical deletion, or extra metadata. Returns not found if id missing or not found.","description":"Fetch the audit/event log record for the specified id/UUID from ai_shop_audit_logs.\n\nThe client supplies the UUID in the path; the response contains only atomic schema fields: id, event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. No workflow or deleted/hidden flag exists; the record is either returned or not found.\n\nRelated endpoints are creation, update, search, and delete event logs.","summary":"Retrieve a single audit log event by id from ai_shop_audit_logs.","parameters":[{"name":"id","description":"UUID of the audit log record to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete audit/event record matching the requested id.","typeName":"IAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs/{id}","method":"get"},{"specification":"Update the explicit fields of a given audit log entry in ai_shop_audit_logs using its unique id. Only atomic field edits for schema-defined attributes are supported: event_id, event_type, actor_id (nullable), actor_role (nullable), target_table (nullable), target_id (nullable), details (nullable), and created_at. Logical/soft deletion is not supported; only field replacements on direct columns. Update logic must enforce unique and required constraints per schema. Errors occur for violations or id not found.","description":"Edit/update an audit log entry in ai_shop_audit_logs by UUID id.\n\nOnly allowed fields are those directly mapped in the schema: event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at. No workflow or status, deleted/hidden flag, or extra metadata exists. The record is updated in-place and the response contains the new state of fields. Related endpoints are create, retrieve, search, and hard delete for audit logs.","summary":"Update an audit log event entity in ai_shop_audit_logs by id.","parameters":[{"name":"id","description":"UUID (id) of the audit log event record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the audit log entry, for only explicit schema-defined columns.","typeName":"IAiShopAuditLogs.IUpdate"},"responseBody":{"description":"Audit/event record after applied updates.","typeName":"IAiShopAuditLogs"},"authorizationRole":"admin","path":"/aiShop/auditLogs/{id}","method":"put"},{"specification":"Delete an audit log event from ai_shop_audit_logs by id, permanently removing the record. The ai_shop_audit_logs schema does NOT offer a logical or soft deletion field—delete is permanent and immediate. Only records with an existing id will be removed; non-existent id yields not found error. This action should be heavily authorized and generally only available to system administrators or compliance leads for data minimization policy reasons.","description":"Permanently erase the event log record with the specified id from ai_shop_audit_logs. This is a hard delete and cannot be undone, as there is no deleted_at or status field. Use with extreme caution and ensure cascade/compliance controls outside the core schema. Only id is referenced in the path (UUID). Related endpoints: create, retrieve, update, search for audit/event logs.","summary":"Hard-delete an audit log event from ai_shop_audit_logs by id (irreversible).","parameters":[{"name":"id","description":"UUID id of the audit log row to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","path":"/aiShop/auditLogs/{id}","method":"delete"}],"components":{"schemas":{"IAiShopChannels.ICreate":{"type":"object","description":"ai_shop_channels 엔터티의 생성 요청 바디 타입 정의.\n\nPrisma 스키마 'ai_shop_channels'의 컬럼 정의와 비즈니스 로직을 기준으로, 채널 생성 시 필요한 필드만 포함합니다. 'id', 'created_at', 'updated_at' 등 시스템에서 자동 생성되는 필드는 제외됩니다. 'code'(채널의 고유 문자열), 'name'(채널 표시 이름), 'enabled'(활성화 여부), 'sort_order'(UI 정렬 순서)만 허용합니다.\n\n중복 또는 잘못된 필드는 허용되지 않으며, 모든 컬럼 설명은 Prisma의 상세 주석을 따릅니다.","properties":{"code":{"type":"string","description":"고유 채널 코드. Prisma 스키마의 code 필드에 해당. 'main', 'event2025' 등으로 샵 내 채널을 식별합니다.\n\n예: 'main', 'mobile' 등. 전역적으로 유일해야 하며, 비즈니스 및 API 연동에서 중요한 역할을 합니다."},"name":{"type":"string","description":"채널 표시 이름. Prisma 스키마의 name 필드에 해당.\n\n사람이 읽기 쉬운 문자열로, 관리자/프론트에서 채널 셀렉터 및 안내에 사용됩니다. ex) 'Main Shop', 'Mobile 전용' 등."},"enabled":{"type":"boolean","description":"채널 활성화 여부. Prisma의 enabled 필드.\n\n채널 서비스 가능 여부를 표시하는 지원 컬럼. 'true'면 노출, 'false'면 숨김."},"sort_order":{"type":"integer","description":"UI 내 채널 정렬순서. Prisma 스키마 sort_order 필드.\n\n쇼핑몰/관리자 UI에서의 정렬 제어에 사용합니다."}},"required":["code","name","enabled","sort_order"]},"IAiShopChannels":{"type":"object","description":"ai_shop_channels 엔티티의 대표 응답 객체.\n\nPrisma 스키마의 모든 필드를 포함합니다. 보안상 공개해도 되는 필드만 노출하며, 패스워드/민감정보 등은 존재하지 않습니다. 모든 필드의 타입, 역할, 제약조건은 Prisma 주석을 기준으로 상세 설명합니다.\n\n각 컬럼은 쇼핑몰 채널의 비즈니스 기능과 일치하며, 외부 노출이 허락된 데이터임을 보장합니다.","properties":{"id":{"type":"string","format":"uuid","description":"채널 PK입니다. Prisma 스키마의 id 필드(고유 UUID)와 일치.\n\n각 채널을 고유하게 식별합니다."},"code":{"type":"string","description":"고유 채널 코드. 생성/수정 불변 컬럼이며, 프로그램적 참조와 동적 구분에 활용합니다."},"name":{"type":"string","description":"채널의 표기명. 관리자 및 UI에서 노출되는 표시 텍스트. 중복 허용."},"enabled":{"type":"boolean","description":"채널 사용 가능 상태 여부. true면 활성중임을 나타내며, business enable/disable 제어용."},"sort_order":{"type":"integer","description":"채널의 노출 순서(작을수록 우선)."},"created_at":{"type":"string","format":"date-time","description":"채널 생성 시각. 시스템상 자동 기록. 감사(log) 등에 활용."},"updated_at":{"type":"string","format":"date-time","description":"채널 데이터의 마지막 수정 시각. 관리/프론트 화면에서의 동기화/변경점 확인용."}},"required":["id","code","name","enabled","sort_order","created_at","updated_at"]},"IAiShopChannels.IRequest":{"type":"object","description":"ai_shop_channels 목록/검색 API의 필터, 검색, 페이징 요청 타입.\n\nPrisma 엔터티의 실제 컬럼 및 인덱싱된 필드만 지원하며, soft-delete 등 불필요 컬럼이 포함되지 않습니다. 전체 목록 또는 enabled, code, name 등 조건 검색에 사용됩니다.","properties":{"page":{"type":"integer","description":"페이지 번호(0부터 시작). 생략 시 기본값 적용."},"limit":{"type":"integer","description":"페이지 단위 목록 수. default=100"},"enabled":{"type":"boolean","description":"enabled값에 따라 필터링, Prisma 컬럼 연동. (선택)"},"code":{"type":"string","description":"code 정확/일부일치 검색 옵셔널. gin_trgm_ops 인덱스 지원."},"name":{"type":"string","description":"이름 부분 검색(ex. gin_trgm_ops)에 활용. (선택)"}},"required":[]},"IPageIAiShopChannels":{"type":"object","description":"ai_shop_channels 목록에 대한 표준 페이지네이션 결과 타입.\n\n목록 결과 + 페이지 정보(현재, 전체, 페이지수, 한페이지내 리스트)만 포함. 각 항목은 IAiShopChannels 타입을 따른다. 표준 IPage 구조를 확장.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"페이지 정보(현재 페이지/레코드 수/전체 페이지/limit)."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopChannels"},"description":"ai_shop_channels 목록. 각 항목은 단일 채널 엔터티 전체 정보."}},"required":["pagination","data"]},"IAiShopChannels.IUpdate":{"type":"object","description":"ai_shop_channels 단건수정(put)용 스키마.\n\nPrisma 엔터티에서 사용자가 수정 가능한 필드만 포함(code, name, enabled, sort_order). PK(id), 생성일/수정일(created_at/updated_at)은 서버 자동 관리됨. soft-delete 등은 없음. 옵셔널 property로 전달되며, 적어도 하나는 필수 미만임.","properties":{"code":{"type":"string","description":"채널 코드, 수정 가능. 중복 불가."},"name":{"type":"string","description":"채널 표시 이름(수정 가능)"},"enabled":{"type":"boolean","description":"채널 활성화 여부(수정 가능)"},"sort_order":{"type":"integer","description":"UI 내 정렬순서(변경 가능)"}},"required":[]},"null":{"type":"object","description":"DELETE 등에서 컨텐츠가 없음을 의미. 반환 데이터 없이 성공 처리(204) 용도.","properties":{},"required":[]},"IAiShopSections.ICreate":{"type":"object","description":"ai_shop_sections 엔터티의 생성 요청 바디 스키마.\n\nPrisma의 section 채널영역관리 요건을 구현. 생성시 필요한 필드(ai_shop_channel_id, code, name, sort_order, enabled)만 포함. id, created_at, updated_at 등은 시스템 처리되므로 요청 body에 없다.","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 ai_shop_channels.id. Foreign Key. Prisma 주석의 section_channel 필드와 상응. 연관 채널 연결 필수(UUID)."},"code":{"type":"string","description":"section 전용 코드. 채널 내 유니크, 프로그램적/비즈니스용 참조."},"name":{"type":"string","description":"section 명칭. UI, 관리자 화면에 사용."},"sort_order":{"type":"integer","description":"채널 내 표시/정렬 우선순위. ascending 정렬 기준."},"enabled":{"type":"boolean","description":"section 노출 여부. true: 활성화, false: 숨김."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"]},"IAiShopSections":{"type":"object","description":"ai_shop_sections의 대표 응답 스키마.\n\nPrisma 스키마 컬럼 id, ai_shop_channel_id, code, name, sort_order, enabled, created_at, updated_at을 모두 포함. 모든 데이터는 외부 열람, 관리 인터페이스 노출 전제. 삭제정보/deleted_at 등은 없음.","properties":{"id":{"type":"string","format":"uuid","description":"section의 PK(UUID). 각 섹션을 고유하게 식별."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"상위 ai_shop_channels.id. 채널에 속한 section임을 보장(참조키)."},"code":{"type":"string","description":"section 전용 프로그램식 코드(채널 내 유니크). 안내/검색/운영에 활용."},"name":{"type":"string","description":"section의 표시명. UI 및 관리 화면 등 인적 접근용."},"sort_order":{"type":"integer","description":"section 정렬순서. 낮을수록 먼저 노출."},"enabled":{"type":"boolean","description":"section 활성화 여부(비활성 시 숨김 처리)."},"created_at":{"type":"string","format":"date-time","description":"section 생성일시. 감사 등 이력관리 목적."},"updated_at":{"type":"string","format":"date-time","description":"마지막 수정일시. 동기화/현행화 체크용."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"]},"IAiShopSections.IRequest":{"type":"object","description":"ai_shop_sections 목록/검색/필터/페이징 요청에 사용하는 스키마.\n\n상위 채널, 활성화, 이름/코드, 정렬 등 파라미터 지정 옵션. soft-delete/deleted_at은 없음. Prisma의 실제 인덱스/컬럼 조건만 허용.","properties":{"page":{"type":"integer","description":"조회할 페이지 번호(0부터), 생략 시 기본값 적용."},"limit":{"type":"integer","description":"한 페이지에 노출할 최대 섹션 수. default=100"},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"해당 채널내 sections 조회시 UUID 지정. (선택)"},"enabled":{"type":"boolean","description":"section 노출여부(활성화) bool 필터."},"code":{"type":"string","description":"프로그래밍 참조용 코드 일부/정확 검색."},"name":{"type":"string","description":"section 명칭(부분검색, gin_trgm_ops 등 활용)"}},"required":[]},"IPageIAiShopSections":{"type":"object","description":"ai_shop_sections 목록 페이징 결과 오브젝트.\n\n페이징 정보+실제 데이터 배열(IAiShopSections 타입)로 응답함. 각 property 및 구조는 IPage 표준을 따른다.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"현재페이지, 총개수, 한 페이지당 데이터수 등 표준 정보."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopSections"},"description":"section 단위 데이터 각각의 목록."}},"required":["pagination","data"]},"IAiShopSections.IUpdate":{"type":"object","description":"ai_shop_sections 엔터티 단건수정용 PUT 요청 스키마.\n\n수정 가능한 필드(ai_shop_channel_id, code, name, sort_order, enabled)만 선택 포함. id, created_at, updated_at 등은 서버 관리. soft-delete 등 논리 삭제 없음. 옵셔널 property로 patch와 달리 전체 프로퍼티 포함 가능.","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"section이 속한 상위 채널 아이디(UUID, 수정 가능)"},"code":{"type":"string","description":"section 코드 값(채널 내 유니크, 수정 가능)"},"name":{"type":"string","description":"section 표시명(수정용)"},"sort_order":{"type":"integer","description":"채널 내 정렬번호, 적용순서(수정 가능)"},"enabled":{"type":"boolean","description":"활성/비활성 여부"}},"required":[]},"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","description":"현재 페이지 번호 (uint32)"},"limit":{"type":"integer","description":"페이지당 레코드 제한 (기본값 100, uint32)"},"records":{"type":"integer","description":"전체 DB 내 레코드 수 (uint32)"},"pages":{"type":"integer","description":"현 쿼리로 계산된 전체 페이지 수 (uint32)"},"hasNext":{"type":"boolean","description":"다음 페이지 존재 여부"}},"required":["current","limit","records","pages"],"description":"페이징 정보 표준 타입. 현재 페이지, 리밋, 전체 갯수, 페이지 수, 다음 페이지 유무를 제공합니다."},"IAiShopConfigurations.ICreate":{"type":"object","properties":{"param_name":{"type":"string","description":"Configuration parameter name - uniquely identifies a global/system setting. Normalized as an atomic key for accessing platform configuration. Referenced in the Prisma schema with @@unique([param_name]). Example: 'max_cart_size', 'maintenance_mode'. Must be unique."},"param_value":{"type":"string","description":"Parameter value. Holds the value for the global setting or feature toggle. Can be a scalar (number as string), boolean as string ('true'/'false'), or stringified JSON. Must respect the actual configuration's expected use. Example: '50', 'true', '{\"enabled\":true}'."},"description":{"oneOf":[{"type":"string","description":"Human-readable description of what this config controls. Optional, may be null. Used for admin/audit comprehension according to Prisma schema."},{"type":"null"}],"description":"Human-readable description of what this config controls. Optional, may be null. Used for admin/audit comprehension according to Prisma schema."}},"required":["param_name","param_value"],"description":"Input object for creating a new configuration row in ai_shop_configurations. All properties and constraints are directly mapped from the Prisma schema's column documentation. The server sets 'created_at' and 'updated_at'."},"IAiShopConfigurations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for each configuration row. Set by the DB, UUID format. See Prisma @id."},"param_name":{"type":"string","description":"Configuration parameter name - uniquely identifies each system/platform-wide setting. Refer to Prisma schema documentation for uniqueness."},"param_value":{"type":"string","description":"Parameter value for this configuration setting. String (can be JSON stringified) according to platform config requirements."},"description":{"oneOf":[{"type":"string","description":"Optional admin/audit description, for human-readable guidance. Nullable; not required by DB."},{"type":"null"}],"description":"Optional admin/audit description, for human-readable guidance. Nullable; not required by DB."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this configuration row was created. Used for audit and rollback. Set by DB."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this configuration was last updated. Set by system. Used for auditing and synchronization."}},"required":["id","param_name","param_value","created_at","updated_at"],"description":"The primary entity type for a configuration entry (ai_shop_configurations). Contains all columns as documented in corresponding Prisma schema table, for compliance and transparency."},"IAiShopConfigurations.IRequest":{"type":"object","properties":{"filter_param_name":{"oneOf":[{"type":"string","description":"Optional: Filter by configuration key (param_name) partial or exact text. Used to locate a specific setting."},{"type":"null"}],"description":"Optional: Filter by configuration key (param_name) partial or exact text. Used to locate a specific setting."},"filter_description":{"oneOf":[{"type":"string","description":"Optional: Filter by 'description' text, using gin_trgm_ops for fast search (see Prisma index)."},{"type":"null"}],"description":"Optional: Filter by 'description' text, using gin_trgm_ops for fast search (see Prisma index)."},"sort_by":{"oneOf":[{"const":"param_name","description":"Optional: Column to sort results by. Only allowed fields per schema."},{"const":"created_at","description":"Optional: Column to sort results by. Only allowed fields per schema."},{"const":"updated_at","description":"Optional: Column to sort results by. Only allowed fields per schema."},{"type":"null"}],"description":"Optional: Column to sort results by. Only allowed fields per schema."},"sort_order":{"oneOf":[{"const":"asc","description":"Optional: Sorting direction (ascending/descending)."},{"const":"desc","description":"Optional: Sorting direction (ascending/descending)."},{"type":"null"}],"description":"Optional: Sorting direction (ascending/descending)."},"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Pagination: which page number to fetch (starting at 1)."},{"type":"null"}],"description":"Pagination: which page number to fetch (starting at 1)."},"limit":{"oneOf":[{"type":"integer","minimum":1,"default":100,"description":"Pagination: number of records per page. Default is 100."},{"type":"null"}],"description":"Pagination: number of records per page. Default is 100."}},"description":"Request model for searching, filtering, and paginating ai_shop_configurations. Fields used only for administrative search/sort - do not supply DB properties directly. Strict mapping to allowed filter/sort keys.","required":[]},"IPageAiShopConfigurations":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopConfigurations"}}},"required":["pagination","data"],"description":"Paginated result container for listing collections of configuration settings. Uses standard IPage<T> contract."},"IAiShopConfigurations.IUpdate":{"type":"object","properties":{"param_name":{"type":"string","description":"(Optional) Override parameter name. Must be unique if changed."},"param_value":{"type":"string","description":"(Optional) New value for the setting. Must conform to business or feature type."},"description":{"oneOf":[{"type":"string","description":"(Optional) Admin/audit description update."},{"type":"null"}],"description":"(Optional) Admin/audit description update."}},"description":"Input object for updating a configuration. All fields optional for patch semantics. Maps only to fields allowed by the Prisma schema. At least one field must be supplied.","required":[]},"IAiShopCategories.ICreate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"UUID of parent channel. FK to ai_shop_channels.id. Required for multi-channel catalog. See Prisma relationship."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) UUID of parent category (for nested taxonomy). Root categories must set this to null. See index/relationship in Prisma."},{"type":"null"}],"description":"(Optional) UUID of parent category (for nested taxonomy). Root categories must set this to null. See index/relationship in Prisma."},"code":{"type":"string","description":"Category code, unique within (ai_shop_channel_id, parent_id). Must be unique per tree layer (Prisma: @@unique([ai_shop_channel_id, parent_id, code]))."},"name":{"type":"string","description":"Category display name for UI/admin search and browse."},"sort_order":{"type":"integer","description":"Display ordering among siblings (same parent, channel)."},"enabled":{"type":"boolean","description":"Whether category is currently active/displayed."}},"required":["ai_shop_channel_id","code","name","sort_order","enabled"],"description":"Creation DTO for ai_shop_categories entity. Typed according to Prisma schema definition."},"IAiShopCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique for each category as defined in Prisma."},"ai_shop_channel_id":{"type":"string","format":"uuid","description":"The channel to which this category belongs (FK). Maintains referential and business channel context (Prisma schema: category_channel)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"If present, UUID references parent category for tree structure; null indicates root."},{"type":"null"}],"description":"If present, UUID references parent category for tree structure; null indicates root."},"code":{"type":"string","description":"Programmatic/unique within parent/channel. Used for search, navigation, and catalog logic."},"name":{"type":"string","description":"Display name, human-readable, for admin and site navigation."},"sort_order":{"type":"integer","description":"Sibling order value (used for UI/browser)."},"enabled":{"type":"boolean","description":"Whether shown to end users (Prisma schema, indexed for search/UI filter)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when category was created (DB-supplied). Used for auditing, compliance."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp last category was updated."}},"required":["id","ai_shop_channel_id","code","name","sort_order","enabled","created_at","updated_at"],"description":"Main entity type for ai_shop_categories, as defined by the table and Prisma model. All properties match the database schema for strict normalization and compliance."},"IAiShopCategories.IRequest":{"type":"object","properties":{"ai_shop_channel_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Only categories within this channel (UUID of ai_shop_channels) are returned."},{"type":"null"}],"description":"(Optional) Only categories within this channel (UUID of ai_shop_channels) are returned."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Only categories with this parent_id (null for roots)."},{"type":"null"}],"description":"(Optional) Only categories with this parent_id (null for roots)."},"code":{"oneOf":[{"type":"string","description":"(Optional) Filter by code, partial or exact."},{"type":"null"}],"description":"(Optional) Filter by code, partial or exact."},"name":{"oneOf":[{"type":"string","description":"(Optional) Filter by name (display), partial or fuzzy search supported."},{"type":"null"}],"description":"(Optional) Filter by name (display), partial or fuzzy search supported."},"enabled":{"oneOf":[{"type":"boolean","description":"(Optional) Only include categories with matching enabled flag."},{"type":"null"}],"description":"(Optional) Only include categories with matching enabled flag."},"sort_by":{"oneOf":[{"const":"name","description":"(Optional) Sort column key."},{"const":"created_at","description":"(Optional) Sort column key."},{"const":"updated_at","description":"(Optional) Sort column key."},{"const":"sort_order","description":"(Optional) Sort column key."},{"type":"null"}],"description":"(Optional) Sort column key."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction if sorting supplied."},{"const":"desc","description":"Sort direction if sorting supplied."},{"type":"null"}],"description":"Sort direction if sorting supplied."},"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Which page (pagination), starting at 1."},{"type":"null"}],"description":"Which page (pagination), starting at 1."},"limit":{"oneOf":[{"type":"integer","minimum":1,"default":100,"description":"How many records per page (default 100)."},{"type":"null"}],"description":"How many records per page (default 100)."}},"description":"Query/filter/sort/pagination input type for listing ai_shop_categories (according to fields available in schema and admin UI needs).","required":[]},"IPageAiShopCategories":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopCategories"}}},"required":["pagination","data"],"description":"Paginated result for a list of ai_shop_categories, using standard IPage<T> contract."},"IAiShopCategories.IUpdate":{"type":"object","properties":{"ai_shop_channel_id":{"type":"string","format":"uuid","description":"(Optional) Update the category's parent channel ID (FK to ai_shop_channels)."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Optional) Set or update parent category or make root (null)."},{"type":"null"}],"description":"(Optional) Set or update parent category or make root (null)."},"code":{"type":"string","description":"(Optional) Edit code (catalog key, must obey uniqueness rule per channel/parent)."},"name":{"type":"string","description":"(Optional) Update the display name."},"sort_order":{"type":"integer","description":"(Optional) Sibling order."},"enabled":{"type":"boolean","description":"(Optional) Turn on/off display for public site."}},"description":"DTO for patch/update to ai_shop_categories. Only fields declared in Prisma table/ERD. At least one field must be provided.","required":[]},"IAiShopFiles.ICreate":{"type":"object","properties":{"original_name":{"type":"string","description":"Original file name as uploaded by user (e.g., for UI/admin display)."},"uri":{"type":"string","description":"Persistent storage URI or path for unique file retrieval. (Prisma: @unique([uri]) constraint, must be unique and persistent.)"},"mime_type":{"type":"string","description":"File MIME type. e.g., image/png, application/pdf. Used for content validation, display, preview, and API attachments."},"size_bytes":{"type":"integer","description":"File size in bytes, as reported by storage/upload event (for audit/quota)."},"uploader_name":{"oneOf":[{"type":"string","description":"Name of uploader, if available (optional tracked metadata for audit or cross-reference)."},{"type":"null"}],"description":"Name of uploader, if available (optional tracked metadata for audit or cross-reference)."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp when file was uploaded (required per audit trail, as per Prisma schema)."}},"required":["original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"DTO for file creation according to ai_shop_files. Maps precisely to Prisma model column definitions. No extra fields allowed."},"IAiShopFiles":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"고유 파일 식별자입니다. 업로드된 각 파일을 전역적으로 식별합니다.\n\nPrisma 스키마의 id 컬럼을 참조합니다. 데이터베이스에서 UUID로 저장됩니다."},"original_name":{"type":"string","description":"파일이 업로드 시 사용자가 제공한 원래 이름입니다.\n\nPrisma 스키마의 original_name 컬럼을 참조합니다. 사용자나 관리자가 UI에서 파일을 인식하는 데 도움이 됩니다."},"uri":{"type":"string","description":"파일의 고유 저장 경로 또는 URI입니다. 예시: 'files/2025/07/report.pdf'. 시스템 내부적으로 파일 접근에 사용됩니다.\n\nPrisma 스키마의 uri 컬럼(80000자 제한)과 고유 제약조건을 따릅니다."},"mime_type":{"type":"string","description":"파일의 MIME 타입입니다. 예시: 'image/png', 'application/pdf'.\n\nPrisma 스키마의 mime_type 컬럼을 참조합니다. 미리보기 및 컨텐츠 검증에 활용됩니다."},"size_bytes":{"type":"integer","description":"파일의 크기(바이트 단위)입니다.\n\nPrisma 스키마의 size_bytes 컬럼을 참조하며 업로드 제한·감사에 사용됩니다."},"uploader_name":{"oneOf":[{"type":"string","description":"업로더의 이름(선택값).\n\nPrisma 스키마의 uploader_name 컬럼을 참조하며, 파일 업로드 시 기록 가능합니다. 비어있을 수 있습니다."},{"type":"null"}],"description":"업로더의 이름(선택값).\n\nPrisma 스키마의 uploader_name 컬럼을 참조하며, 파일 업로드 시 기록 가능합니다. 비어있을 수 있습니다."},"uploaded_at":{"type":"string","format":"date-time","description":"업로드된 시각의 타임스탬프입니다.\n\nPrisma 스키마 uploaded_at 컬럼을 ISO 8601 포맷(UTC)으로 변환해 사용합니다."}},"required":["id","original_name","uri","mime_type","size_bytes","uploaded_at"],"description":"AI Shop 파일 메타데이터 모델입니다. 플랫폼 내 파일 업로드 시 원본 파일명, 고유 저장 위치, 유형, 크기, 업로더 정보, 업로드 시간을 저장합니다.\n\nPrisma의 ai_shop_files 테이블 주석을 참조하였으며, 모든 컬럼이 명확히 설계 목적과 비즈니스 규칙을 반영합니다.\n\n파일 업로드/다운로드, 첨부 기능, 관리자 감사 및 기록 관리에 사용됩니다."},"IAiShopFiles.IRequest":{"type":"object","properties":{"original_name":{"type":"string","description":"파일 원본명(선택적으로 검색 필터로 사용)."},"mime_type":{"type":"string","description":"MIME 타입(선택적, 예: 'image/png')."},"uploader_name":{"type":"string","description":"업로더 이름(선택적, 문자열)."},"uploaded_at_from":{"type":"string","format":"date-time","description":"업로드 시각 범위 시작(선택적, ISO8601)."},"uploaded_at_to":{"type":"string","format":"date-time","description":"업로드 시각 범위 종료(선택적, ISO8601)."},"page":{"type":"integer","description":"페이지 번호(0부터 시작)\n\n표준 IPage.IRequest 구문과 동일. 미지정 시 0페이지."},"limit":{"type":"integer","description":"페이지당 레코드 개수(기본값 100, 최대 제한 적용 필요)."}},"required":["page","limit"],"description":"파일 검색/조회/페이징용 요청객체입니다.\n\nai_shop_files에서 검색/목록에 사용되며, 파일명, MIME, 업로더, 업로드시간 범위 등으로 필터링할 수 있습니다.\n\n표준 페이지네이션 파라미터(page, limit)를 포함합니다."},"IPageAiShopFiles":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopFiles"},"description":"이 페이지에 포함된 파일 메타 레코드 리스트입니다."}},"required":["pagination","data"],"description":"파일 엔티티(IAiShopFiles) 페이지네이션 컨테이너 타입입니다.\n\n표준 IPage 구조를 따르며, 여러 파일 엔티티를 페이징/리스트 형태로 반환합니다.\n\n목록 endpoint(patch /aiShop/files 등)에서 사용됩니다."},"IAiShopFiles.IUpdate":{"type":"object","properties":{"original_name":{"type":"string","description":"파일의 원래 이름 변경시 사용(옵션)."},"uri":{"type":"string","description":"저장위치(URI) 변경시 사용(드물게 활용됨)."},"mime_type":{"type":"string","description":"MIME 타입 변경시 사용. 일반적으로 파일 내용 변경이 동반될 때만 허용됨."},"size_bytes":{"type":"integer","description":"파일 크기(바이트). 값이 변경되면 정확한 데이터 동기화가 필요."},"uploader_name":{"oneOf":[{"type":"string","description":"업로더 이름(선택적, null 가능)."},{"type":"null"}],"description":"업로더 이름(선택적, null 가능)."},"uploaded_at":{"type":"string","format":"date-time","description":"업로드 시각을 보정하거나 수정할 때 사용."}},"description":"파일 데이터 수정용 요청 타입입니다. ai_shop_files 테이블의 변경 가능한 컬럼만 포함하며 주로 관리자가 메타/오류 정보를 보정 시 활용합니다.\n\n수정 가능한 컬럼은 original_name, uri, mime_type, size_bytes, uploader_name, uploaded_at 등이며, 모든 필드는 선택적입니다.","required":[]},"IAiShopAuditLogs.ICreate":{"type":"object","properties":{"event_id":{"type":"string","description":"이 로그 이벤트의 고유 식별자입니다.\n\nPrisma의 event_id 컬럼—시스템/비즈니스 이벤트 코드를 유일하게 만듭니다."},"event_type":{"type":"string","description":"이벤트 유형 코드를 명시합니다. 예: 'USER_LOGIN', 'ORDER_CANCELED'.\n\nPrisma의 event_type 컬럼—빠른 질의/감사를 위한 필수 정보입니다."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"행위자 ID (user/seller/admin 등, null 가능).\n\nPrisma의 actor_id 컬럼—시스템/자동화 이벤트의 경우 null일 수 있습니다."},{"type":"null"}],"description":"행위자 ID (user/seller/admin 등, null 가능).\n\nPrisma의 actor_id 컬럼—시스템/자동화 이벤트의 경우 null일 수 있습니다."},"actor_role":{"oneOf":[{"type":"string","description":"행위자의 역할. 예: 'customer', 'seller', 'admin' 혹은 null(시스템).\n\nPrisma의 actor_role 컬럼."},{"type":"null"}],"description":"행위자의 역할. 예: 'customer', 'seller', 'admin' 혹은 null(시스템).\n\nPrisma의 actor_role 컬럼."},"target_table":{"oneOf":[{"type":"string","description":"이 이벤트로 영향을 받은 테이블명. 예: 'ai_shop_orders', null 가능.\n\nPrisma의 target_table 컬럼."},{"type":"null"}],"description":"이 이벤트로 영향을 받은 테이블명. 예: 'ai_shop_orders', null 가능.\n\nPrisma의 target_table 컬럼."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"이벤트 영향을 받은 행의 ID(UUID). null 허용.\n\nPrisma의 target_id 컬럼."},{"type":"null"}],"description":"이벤트 영향을 받은 행의 ID(UUID). null 허용.\n\nPrisma의 target_id 컬럼."},"details":{"oneOf":[{"type":"string","description":"이벤트에 대한 상세정보. 예: 상태변경 전후(JSON). 비어있을 수 있음.\n\nPrisma의 details 컬럼."},{"type":"null"}],"description":"이벤트에 대한 상세정보. 예: 상태변경 전후(JSON). 비어있을 수 있음.\n\nPrisma의 details 컬럼."},"created_at":{"type":"string","format":"date-time","description":"로그 이벤트가 기록된 시각. ISO8601(UTC) 표준 준수.\n\nPrisma의 created_at 컬럼—정확한 감사/분석에 필수적."}},"required":["event_id","event_type","created_at"],"description":"감사/트레일 로그 생성 요청 타입입니다. ai_shop_audit_logs 테이블에 새로운 이벤트/액션을 기록할 때 사용합니다.\n\n모든 필드는 Prisma DB 테이블과 완전히 일치하며, 역할(행위자)/타깃 테이블/상세 내용은 필요에 따라 null을 허용합니다.\n\n데이터 추적/감사/컴플라이언스 목적상 생성 시각(created_at)은 반드시 포함되어야 합니다."},"IAiShopAuditLogs":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. 감사 로그 이벤트의 고유 식별자입니다.\n\nPrisma id 컬럼입니다."},"event_id":{"type":"string","description":"이벤트 고유 식별자. 시스템 내 특정 비즈니스/시스템 이벤트의 유일한 코드. 예: 'ORD20250722-38'.\n\nPrisma event_id 컬럼."},"event_type":{"type":"string","description":"이벤트 유형 코드. 예: 'USER_LOGIN', 'ORDER_CANCELED'.\n\nPrisma event_type 컬럼."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"액터(행위자)의 ID(UUID). null이면 시스템/자동화 이벤트임을 의미.\n\nPrisma actor_id 컬럼."},{"type":"null"}],"description":"액터(행위자)의 ID(UUID). null이면 시스템/자동화 이벤트임을 의미.\n\nPrisma actor_id 컬럼."},"actor_role":{"oneOf":[{"type":"string","description":"행위자의 역할(예: 'customer', 'seller', 'admin', null).\n\nPrisma actor_role 컬럼."},{"type":"null"}],"description":"행위자의 역할(예: 'customer', 'seller', 'admin', null).\n\nPrisma actor_role 컬럼."},"target_table":{"oneOf":[{"type":"string","description":"이벤트가 적용된 테이블명(예: 'ai_shop_orders'). null 가능.\n\nPrisma target_table 컬럼."},{"type":"null"}],"description":"이벤트가 적용된 테이블명(예: 'ai_shop_orders'). null 가능.\n\nPrisma target_table 컬럼."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"이벤트 대상 행 ID(UUID). null 가능.\n\nPrisma target_id 컬럼."},{"type":"null"}],"description":"이벤트 대상 행 ID(UUID). null 가능.\n\nPrisma target_id 컬럼."},"details":{"oneOf":[{"type":"string","description":"이벤트의 상세 JSON(상태 변화, before/after 등). null 가능.\n\nPrisma details 컬럼."},{"type":"null"}],"description":"이벤트의 상세 JSON(상태 변화, before/after 등). null 가능.\n\nPrisma details 컬럼."},"created_at":{"type":"string","format":"date-time","description":"이 로그가 생성된 시각(ISO 8601). Prisma created_at 컬럼."}},"required":["id","event_id","event_type","created_at"],"description":"감사 로그 엔티티의 메인 타입(응답). ai_shop_audit_logs의 모든 컬럼을 포함합니다.\n\n생성/수정/조회 등 시스템 내 모든 중요한 이벤트를 기억하며, 법적 감사와 포렌식, 이상 행위 추적에 활용됩니다."},"IAiShopAuditLogs.IRequest":{"type":"object","properties":{"event_type":{"type":"string","description":"이벤트 유형 코드로 검색(부분/정확 매칭, 선택적)."},"actor_id":{"type":"string","description":"행위자 UUID로 필터(선택적)."},"actor_role":{"type":"string","description":"행위자 역할로 필터(선택적, 'customer' 등)."},"target_table":{"type":"string","description":"적용 대상 테이블로 필터."},"created_at_from":{"type":"string","format":"date-time","description":"로그 이벤트 발생 시점(검색 범위 시작)."},"created_at_to":{"type":"string","format":"date-time","description":"로그 이벤트 발생 시점(검색 범위 종료)."},"page":{"type":"integer","description":"페이지 번호(0부터 시작)."},"limit":{"type":"integer","description":"페이지 자르기/최대 레코드 수(기본 100)."}},"required":["page","limit"],"description":"감사 로그 목록(검색/페이징) 요청 타입입니다.\n\nai_shop_audit_logs의 event_type, actor, 대상 테이블, 시간범위 등으로 필터할 수 있으며 표준 페이지네이션 파라미터 포함합니다."},"IPageAiShopAuditLogs":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAiShopAuditLogs"},"description":"이 페이지에 해당하는 감사 로그 레코드 배열입니다."}},"required":["pagination","data"],"description":"감사 로그(IAiShopAuditLogs) 페이징/리스트 결과 컨테이너입니다. 표준 IPage 구조를 따르며, 다수 감사 이벤트를 페이지 단위로 조회합니다."},"IAiShopAuditLogs.IUpdate":{"type":"object","properties":{"event_id":{"type":"string","description":"이벤트 식별자(수정 시 유지/교정)."},"event_type":{"type":"string","description":"이벤트 유형(필요 시 보정)."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"행위자 UUID(보정 가능)."},{"type":"null"}],"description":"행위자 UUID(보정 가능)."},"actor_role":{"oneOf":[{"type":"string","description":"행위자 역할(보정 가능)."},{"type":"null"}],"description":"행위자 역할(보정 가능)."},"target_table":{"oneOf":[{"type":"string","description":"적용 대상 테이블(보정 가능)."},{"type":"null"}],"description":"적용 대상 테이블(보정 가능)."},"target_id":{"oneOf":[{"type":"string","format":"uuid","description":"대상 행 UUID(보정 가능)."},{"type":"null"}],"description":"대상 행 UUID(보정 가능)."},"details":{"oneOf":[{"type":"string","description":"이벤트 상세 내용(JSON 등, 보정 가능)."},{"type":"null"}],"description":"이벤트 상세 내용(JSON 등, 보정 가능)."},"created_at":{"type":"string","format":"date-time","description":"이벤트 발생 시간(보정 가능, ISO8601)."}},"description":"감사 로그(AI Shop Audit Log) 수정 요청 타입입니다. ai_shop_audit_logs의 주요 컬럼(event_id, event_type, actor_id, actor_role, target_table, target_id, details, created_at)에 대해 수정이 필요한 경우 사용합니다. 모든 필드는 선택적입니다.","required":[]}},"authorization":[{"name":"customer","description":"A user who browses, registers, purchases, leaves reviews, and manages personal info. Can authenticate via API for shopping and order management."},{"name":"seller","description":"A member who is permitted to sell products, manage inventory, analyze sales metrics, handle orders, and manage product content. API authentication required for seller dashboard and shop management."},{"name":"admin","description":"Manages the backend system, oversees users and sellers, configures channels, audits logs, handles disputes, ensures compliance and business rule enforcement. API authentication mandatory for system administration."}]}},"created_at":"2025-07-24T09:06:21.423Z","reason":"Step to the interface designing after DB schema generation","step":0},"tokenUsage":{"facade":{"aggregate":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"analyze":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"prisma":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"interface":{"aggregate":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":711899,"input":{"total":681202,"cached":0},"output":{"total":30697,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"test":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}},"realize":{"aggregate":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"initialize":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"select":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"cancel":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"call":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}},"describe":{"total":0,"input":{"total":0,"cached":0},"output":{"total":0,"reasoning":0,"accepted_prediction":0,"rejected_prediction":0}}}}}]