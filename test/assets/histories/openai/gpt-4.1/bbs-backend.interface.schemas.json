{"IDiscussionBoardAdmin.ILogin,[object Object]":["IVoidSuccess",{"type":"object","description":"Standard operation result indicating successful completion of an endpoint with no additional response payload. Used for DELETE and logout endpoints that have no business data to return. No properties are present; the existence of this object itself signals success.","properties":{},"required":[]}],"IDiscussionBoardComment.IRequest,[object Object]":["IPageIDiscussionBoardComment.ISummary",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata: current page, limit, total records, and total pages."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IDiscussionBoardComment.ISummary"},"description":"List of comment summary objects for this page. Each object provides thread, author, status, and meta fields."}},"required":["pagination","data"],"description":"Paginated result set for comment summary records in a comment list view. Follows generic IPage pattern."}],"IDiscussionBoardExternalAuthLog.ICreate,[object Object]":["IDiscussionBoardExternalAuthLog.IUpdate",{"type":"object","properties":{"discussion_board_member_id":{"oneOf":[{"type":"string","format":"uuid","description":"Reference to the associated member's UUID, if mapped. Nullable if the event was not mapped to a member."},{"type":"null","format":"uuid","description":"Reference to the associated member's UUID, if mapped. Nullable if the event was not mapped to a member."}],"description":"Reference to the associated member's UUID, if mapped. Nullable if the event was not mapped to a member."},"auth_channel":{"type":"string","description":"External authentication channel, such as 'kakao', 'naver', 'google', 'email', etc."},"external_user_id":{"oneOf":[{"type":"string","description":"External provider's user ID if applicable. Nullable."},{"type":"null","description":"External provider's user ID if applicable. Nullable."}],"description":"External provider's user ID if applicable. Nullable."},"subject_email":{"type":"string","description":"Email address involved in the authentication flow. Must be valid."},"issued_at":{"type":"string","format":"date-time","description":"Datetime (ISO8601) representing when the login/auth attempt was initiated."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime (ISO8601) when flow completed, or null if not finished."},{"type":"null","format":"date-time","description":"Datetime (ISO8601) when flow completed, or null if not finished."}],"description":"Datetime (ISO8601) when flow completed, or null if not finished."},"success":{"type":"boolean","description":"Result: whether the authentication attempt succeeded (true) or failed (false)."},"error_code":{"oneOf":[{"type":"string","description":"Machine-friendly error code from provider or local flow. Nullable."},{"type":"null","description":"Machine-friendly error code from provider or local flow. Nullable."}],"description":"Machine-friendly error code from provider or local flow. Nullable."},"error_message":{"oneOf":[{"type":"string","description":"Human-readable error message or context from provider or local process. Nullable."},{"type":"null","description":"Human-readable error message or context from provider or local process. Nullable."}],"description":"Human-readable error message or context from provider or local process. Nullable."}},"description":"Update payload for an existing external auth log. Allows partial modification of error, status, member linkage, or result. Only fields provided will be updated. Used for correcting or augmenting audit log entries.","required":[]}],"IPageIDiscussionBoardPermissionMatrix,[object Object]":["IDiscussionBoardPermissionMatrix",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique system-wide identifier for the permission matrix record. Primary key for update and retrieval operations."},"role_name":{"type":"string","description":"Name of the system user role to which this permission mapping applies (e.g. 'admin', 'moderator', 'member', 'guest')"},"resource":{"type":"string","description":"Target system resource string over which this permission applies (e.g. 'post', 'comment', 'report', 'policy')."},"action":{"type":"string","description":"Action or operation this permission applies to (e.g. 'read', 'write', 'delete', 'approve', 'review')."},"allowed":{"type":"boolean","description":"Whether this role/resource/action is explicitly allowed (true) or denied (false)."},"effective_from":{"type":"string","format":"date-time","description":"Datetime when this permission mapping becomes effective. Used for versioning or policy scheduling; ISO 8601 UTC format."},"effective_to":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime when this permission mapping ceases to be effective (null if currently valid). ISO 8601 UTC format."},{"type":"null","format":"date-time","description":"Datetime when this permission mapping ceases to be effective (null if currently valid). ISO 8601 UTC format."}],"description":"Datetime when this permission mapping ceases to be effective (null if currently valid). ISO 8601 UTC format."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp for audit purposes (UTC, ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for audit purposes and version tracking."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp. Null if record is currently active; set when record is logically deleted for audit/compliance."},{"type":"null","format":"date-time","description":"Soft deletion timestamp. Null if record is currently active; set when record is logically deleted for audit/compliance."}],"description":"Soft deletion timestamp. Null if record is currently active; set when record is logically deleted for audit/compliance."}},"required":["id","role_name","resource","action","allowed","effective_from","created_at","updated_at"],"description":"Grants or denies a single role type a specific action over a named resource. Used for RBAC configuration, enforcement, and audit. Contains full audit and temporal tracking data for compliance and system introspection."}],"IDiscussionBoardPlatformConfig.IRequest,[object Object]":["IPageIDiscussionBoardPlatformConfig",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IDiscussionBoardPlatformConfig"}}},"required":["pagination","data"],"description":"Paginated container of DiscussionBoardPlatformConfig records, along with standard pagination information. Used as response for search/list endpoints over discussion_board_platform_configs. See also IPage.IPagination. Data is the array of full configuration objects."}],"IDiscussionBoardMember.IChangePassword,[object Object]":["IModerator.SignUp",{"type":"object","properties":{"email":{"type":"string","format":"email","description":"The moderator's unique email address. Used for correspondence, login, and matching to existing records. Must not duplicate any record in the moderator table."},"assigned_by_admin_email":{"type":"string","format":"email","description":"The email address of the admin assigning this moderator role. Serves as an audit trail and role assignment origin. Must correspond to a valid admin account."},"password":{"type":"string","description":"Plain-text password for the moderator account (to be securely hashed before storage). Subject to platform password strength and uniqueness policies."}},"required":["email","assigned_by_admin_email","password"],"description":"Payload for registering a new moderator. Contains moderator identity, role assignment, and credentials. All fields are required on creation. Used only by admins with privileged access."}],"IDiscussionBoardCommentVote,[object Object]":["IDiscussionBoardCommentVote.ICreate",{"type":"object","properties":{"discussion_board_comment_id":{"type":"string","format":"uuid","description":"ID of the comment to vote on. Required and must refer to an existing, non-deleted comment."},"is_upvote":{"type":"boolean","description":"Whether to upvote (true) or downvote (false) this comment."}},"required":["discussion_board_comment_id","is_upvote"],"description":"Request payload for creating a new vote (upvote or downvote) on a comment. Member identity is taken from authentication context."}],"IDiscussionBoardPostMetric,[object Object]":["IDiscussionBoardPostMetric.ICreate",{"type":"object","properties":{"discussion_board_post_id":{"type":"string","format":"uuid","description":"Target post's unique id for which the metrics are being initialized."},"views_count":{"type":"integer","description":"Initial number of views to set. Usually zero or appropriate if restoring from backup/ETL."},"comments_count":{"type":"integer","description":"Initial number of comments. Defaults to zero."},"votes_up_count":{"type":"integer","description":"Initial upvotes count. Defaults to zero for new posts."},"votes_down_count":{"type":"integer","description":"Initial downvotes count. Defaults to zero for new posts."},"reports_count":{"type":"integer","description":"Initial report count; likely zero unless importing/restoring data."},"last_activity_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for last activity. May be null when initializing or specified in backfill."},{"type":"null","format":"date-time","description":"Timestamp for last activity. May be null when initializing or specified in backfill."}],"description":"Timestamp for last activity. May be null when initializing or specified in backfill."}},"required":["discussion_board_post_id","views_count","comments_count","votes_up_count","votes_down_count","reports_count"],"description":"Request body for creating a new post metrics tracker in 'discussion_board_post_metrics'. Used for initializing counters when a new post is created or restoring data from backups."}],"IDiscussionBoardOperationLog.IRequest,[object Object]":["IPageIDiscussionBoardOperationLog.ISummary",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IDiscussionBoardOperationLog.ISummary"},"description":"Summary items for each operation log entry in this page."}},"required":["pagination","data"],"description":"A paginated collection of system operation log summary entries, as returned from search endpoints. Includes page navigation data and an array of operation log summary records. Used for dashboards, compliance, and incident review interfaces."}],"IDiscussionBoardPolicyDocument,[object Object]":["IDiscussionBoardPolicyDocument.ICreate",{"type":"object","properties":{"title":{"type":"string","description":"Title (unique per active version). Required."},"body":{"type":"string","description":"Full document content, in markdown or HTML. Required."},"version":{"type":"integer","description":"Version number (increases with each edit). Required."},"is_active":{"type":"boolean","description":"Whether this document version is active. Required."},"created_by_admin_id":{"type":"string","format":"uuid","description":"UUID referencing the admin that authored this policy document. Required for initial author attribution."}},"required":["title","body","version","is_active","created_by_admin_id"],"description":"Request schema for creating a new policy document entry."}],"IDiscussionBoardDailyStats.IUpdate,[object Object]":["IGuestAuthGuestSignInRequest",{"type":"object","description":"Request to issue a guest JWT token. Collects minimal data to track session and rate limit guests on signup. No user PII collected—just tracking metadata.","properties":{"user_agent":{"type":"string","description":"User agent string from the browser/device for session identification. Required."},"ip_address":{"type":"string","description":"Requestor's IP address as seen by the backend. Required; used for abuse prevention, rate-limiting."}},"required":["user_agent","ip_address"]}],"IDiscussionBoardCommentReport.IUpdate,[object Object]":["IDiscussionBoardUserSanction.IRequest",{"type":"object","properties":{"sanctioned_member_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter: Target member UUID being searched. Refers to discussion_board_user_sanctions.sanctioned_member_id. Optional."},{"type":"null","format":"uuid","description":"Filter: Target member UUID being searched. Refers to discussion_board_user_sanctions.sanctioned_member_id. Optional."}],"description":"Filter: Target member UUID being searched. Refers to discussion_board_user_sanctions.sanctioned_member_id. Optional."},"sanction_type":{"oneOf":[{"type":"string","description":"Filter: Sanction type code (e.g., 'warning', 'temporary_ban', 'permanent_ban'). Based on discussion_board_user_sanctions.sanction_type. Optional."},{"type":"null","description":"Filter: Sanction type code (e.g., 'warning', 'temporary_ban', 'permanent_ban'). Based on discussion_board_user_sanctions.sanction_type. Optional."}],"description":"Filter: Sanction type code (e.g., 'warning', 'temporary_ban', 'permanent_ban'). Based on discussion_board_user_sanctions.sanction_type. Optional."},"active":{"oneOf":[{"type":"boolean","description":"Filter: Whether the sanction is currently in effect. From discussion_board_user_sanctions.active. Optional."},{"type":"null","description":"Filter: Whether the sanction is currently in effect. From discussion_board_user_sanctions.active. Optional."}],"description":"Filter: Whether the sanction is currently in effect. From discussion_board_user_sanctions.active. Optional."},"timeline_start_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional: Start of effective date window (ISO). Used for filtering. Not a DB column, but used to filter timeline_start."},{"type":"null","format":"date-time","description":"Optional: Start of effective date window (ISO). Used for filtering. Not a DB column, but used to filter timeline_start."}],"description":"Optional: Start of effective date window (ISO). Used for filtering. Not a DB column, but used to filter timeline_start."},"timeline_start_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional: End of effective date window (ISO). Used for filtering by timeline_start."},{"type":"null","format":"date-time","description":"Optional: End of effective date window (ISO). Used for filtering by timeline_start."}],"description":"Optional: End of effective date window (ISO). Used for filtering by timeline_start."},"sanctioning_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Filter: Admin UUID who imposed the sanction. Maps to sanctioning_admin_id. Optional."},{"type":"null","format":"uuid","description":"Filter: Admin UUID who imposed the sanction. Maps to sanctioning_admin_id. Optional."}],"description":"Filter: Admin UUID who imposed the sanction. Maps to sanctioning_admin_id. Optional."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination. Optional."},{"type":"null","description":"Page number for pagination. Optional."}],"description":"Page number for pagination. Optional."},"limit":{"oneOf":[{"type":"integer","description":"Records per page (pagination). Optional."},{"type":"null","description":"Records per page (pagination). Optional."}],"description":"Records per page (pagination). Optional."},"orderBy":{"oneOf":[{"type":"string","description":"Name of column to sort (e.g., 'created_at', 'timeline_start'). Optional."},{"type":"null","description":"Name of column to sort (e.g., 'created_at', 'timeline_start'). Optional."}],"description":"Name of column to sort (e.g., 'created_at', 'timeline_start'). Optional."},"direction":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' (ascending) or 'desc' (descending). Optional."},{"const":"desc","description":"Sort direction: 'asc' (ascending) or 'desc' (descending). Optional."},{"type":"null","enum":["asc","desc"],"description":"Sort direction: 'asc' (ascending) or 'desc' (descending). Optional."}],"description":"Sort direction: 'asc' (ascending) or 'desc' (descending). Optional."}},"description":"Search filters and options for discussion_board_user_sanctions search APIs. All fields are optional. Used for dashboard filtering/pagination.","required":[]}],"IPageIDiscussionBoardModerator.ISummary,[object Object]":["IDiscussionBoardModerator.ISummary",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the moderator account, corresponding to the 'id' primary key in the discussion_board_moderators table."},"email":{"type":"string","description":"Moderator's email address, unique. Used as login and contact method."},"status":{"type":"string","description":"Moderator status: expected values are 'active', 'revoked', 'suspended' (discussed in schema and business policy)."},"assigned_at":{"type":"string","format":"date-time","description":"Datetime the moderator role was assigned to this account."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime when moderator privileges were revoked, if applicable."},{"type":"null","format":"date-time","description":"Datetime when moderator privileges were revoked, if applicable."}],"description":"Datetime when moderator privileges were revoked, if applicable."},"assigned_by_admin_email":{"type":"string","description":"Email address of admin who created or assigned this moderator role."}},"required":["id","email","status","assigned_at","assigned_by_admin_email"],"description":"Summary view of a moderator for listing/search result. Includes only the core identification, role, and assignment status fields."}]}