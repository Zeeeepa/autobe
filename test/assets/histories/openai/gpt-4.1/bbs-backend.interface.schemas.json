{"IPolEcoBoardAdminAuth.RefreshTokenResponse,[object Object]":["IPolEcoBoardAdminAuth.ActiveSessions",{"type":"object","description":"Response structure for an admin's current active authentication sessions. Returned by the endpoint /auth/admin/sessions, which lists all unexpired, unrevoked sessions for the requesting admin. Each session represents a device/browser login, with details for device hygiene, security, audit, and user awareness. This DTO is critical for security-conscious admin users to review all their valid authentication tokens and sessions across multiple devices. Sessions excluded here are those already revoked or expired. The returned property 'sessions' is a required array of session summaries for each active session, used for device management UIs and admin dashboards.","properties":{"sessions":{"type":"array","description":"A list of all currently active (unrevoked, unexpired) sessions for the admin user. Each item is a session summary with essential metadata to support session management, device awareness, and audit. The exact structure is per IPolEcoBoardAuthSession.ISummary; see below.","items":{"$ref":"#/components/schemas/IPolEcoBoardAuthSession.ISummary"}}},"required":["sessions"]}],"IMemberAuthenticationMemberChangePasswordResult,[object Object]":["IMemberAuthenticationMemberRefreshToken",{"type":"object","properties":{"refreshToken":{"type":"string","description":"Refresh token (JWT or securely generated opaque value) issued at authentication and used to obtain new access tokens. Must be valid, non-expired, and match a session record for this member."}},"required":["refreshToken"],"description":"Request body for refreshing a member's authentication token/session. Contains the refresh token to validate and exchange for new access/refresh tokens."}],"IPolEcoBoardModeratorTokenRefresh.ICreate,[object Object]":["IPolEcoBoardModeratorTokenRefresh.IResponse",{"type":"object","description":"Response payload returned upon successful refresh of a moderator JWT. Contains newly issued access and refresh tokens (usually intended for assignment to httpOnly cookies or Authorization headers).\n\nsetHeaders is an object containing the exact HTTP headers (Authorization, Set-Cookie) the client must apply for follow-on authenticated requests with new tokens. Access token values are never shown directly in API or UI output after this operation, except as part of the setHeaders bundle. The client must respect all expiry and security constraints.","properties":{"setHeaders":{"$ref":"#/components/schemas/IJwtSetHeaders"}},"required":["setHeaders"]}],"IPolEcoBoardServiceSettings,[object Object]":["IPolEcoBoardServiceSettings.IUpdate",{"type":"object","properties":{"registration_enabled":{"type":"boolean","description":"Update for platform-wide registration enablement flag."},"max_post_length":{"type":"integer","description":"Update for maximum allowed characters in posts."},"max_comment_length":{"type":"integer","description":"Update for maximum allowed characters in comments."},"default_board_visibility":{"type":"boolean","description":"Update for default is_public for new boards."},"data_retention_days":{"type":"integer","description":"Update for new minimum data retention period in days."}},"required":[],"description":"Patch/update object for the singleton IPolEcoBoardServiceSettings. Only settings present in the body will be updated. All properties optional; properties not included remain unchanged."}],"IPolEcoBoardCategory.IRequest,[object Object]":["IPageIPolEcoBoardCategory",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IPolEcoBoardCategory"}}},"required":["pagination","data"],"description":"Paginated list container for board categories, including page metadata and array of category records."}],"IPolEcoBoardAttachment.IUpdate,[object Object]":["IPolEcoBoardReport.IRequest",{"type":"object","properties":{"post_id":{"type":"string","format":"uuid","description":"If provided, only reports related to this post are included in the results."},"comment_id":{"type":"string","format":"uuid","description":"If provided, only reports related to this comment are queried (mutually exclusive with post_id if not null)."},"reason_code":{"type":"string","description":"Filter reports by reported reason code (e.g., 'abuse', 'spam', 'hate', etc.), matching pol_eco_board_reports.reason_code."},"created_at_start":{"type":"string","format":"date-time","description":"ISO 8601 timestamp. Only include reports created after this date/time. Used for filtering by time window."},"created_at_end":{"type":"string","format":"date-time","description":"ISO 8601 timestamp. Only include reports created at or before this date/time."},"reporter_member_id":{"type":"string","format":"uuid","description":"If set, filter reports to only those submitted by this member."},"page":{"type":"integer","description":"The page number for pagination (starting from 1)."},"limit":{"type":"integer","description":"Max records per page, typically 10 - 100 for business logic."}},"required":[],"description":"Request filter and pagination for searching user abuse/moderation reports (pol_eco_board_reports table). Supports advanced filter fields for post_id, comment_id, reason_code, and date range. Used to power moderation dashboards and audit retrievals."}],"IPolEcoBoardOperationalLog,[object Object]":["IPolEcoBoardOperationalLog.ICreate",{"type":"object","properties":{"log_level":{"type":"string","description":"Log level for severity (e.g., INFO, WARNING, ERROR, CRITICAL)."},"logged_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when the log entry occurred."},"message":{"type":"string","description":"Main log message summarizing the event."},"context":{"oneOf":[{"type":"string","description":"Optional structured event metadata/context as JSON string. Null if not present."},{"type":"null","description":"Optional structured event metadata/context as JSON string. Null if not present."}],"description":"Optional structured event metadata/context as JSON string. Null if not present."},"actor_id":{"oneOf":[{"type":"string","format":"uuid","description":"User UUID responsible or affected. Null if auto/system log."},{"type":"null","format":"uuid","description":"User UUID responsible or affected. Null if auto/system log."}],"description":"User UUID responsible or affected. Null if auto/system log."},"event_code":{"type":"string","description":"Short business or technical code identifying the log event type."}},"required":["log_level","logged_at","message","event_code"],"description":"Payload for creating a new operational log entry for the polEcoBoard event history. Reference the pol_eco_board_operational_logs schema documentation."}],"IPolEcoBoardModerationAction.IRequest,[object Object]":["IPageIPolEcoBoardModerationAction.ISummary",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata returned with the current page of results."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IPolEcoBoardModerationAction.ISummary"},"description":"An array containing summary records of moderation actions for the current page."}},"required":["pagination","data"],"description":"A paginated response container for moderation action summary objects, with pagination metadata and an array of summaries."}],"IPageIPolEcoBoardNotificationFailure,[object Object]":["IPolEcoBoardNotificationFailure",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this notification failure event in pol_eco_board_notification_failures table."},"notification_id":{"type":"string","format":"uuid","description":"Foreign key referencing the notification (pol_eco_board_notifications.id) for which this failure was recorded."},"provider_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional foreign key referencing the notification provider, or null if the failure is internal/system."},{"type":"null","format":"uuid","description":"Optional foreign key referencing the notification provider, or null if the failure is internal/system."}],"description":"Optional foreign key referencing the notification provider, or null if the failure is internal/system."},"failure_code":{"type":"string","description":"Short string error code (from provider/system) describing the cause of the notification delivery failure."},"failure_message":{"type":"string","description":"Detailed, human-readable message describing why delivery of the notification failed."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when the failure was recorded."},"resolution_status":{"type":"string","description":"Current status of the failure eventâ€”e.g., 'pending', 'resolved', 'permanent_failure', for dashboard and retry logic."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (for audit)."},"updated_at":{"type":"string","format":"date-time","description":"Last update time for record (e.g., retry, status update, etc.)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp for compliance/audit lifecycle, or null if active."},{"type":"null","format":"date-time","description":"Soft deletion timestamp for compliance/audit lifecycle, or null if active."}],"description":"Soft deletion timestamp for compliance/audit lifecycle, or null if active."}},"required":["id","notification_id","failure_code","failure_message","occurred_at","resolution_status","created_at","updated_at"],"description":"A single notification failure delivery event, capturing all business, error, and audit details for reporting and compliance. Used for operational dashboards, compliance reviews, and incident diagnostics."}],"IPolEcoBoardAppeal.IUpdate,[object Object]":["IPolEcoBoardNotification.IRequest",{"type":"object","properties":{"recipient_member_id":{"type":"string","format":"uuid","description":"UUID of the notification recipient user. Used for filtering notifications for a specific member."},"status":{"type":"string","description":"Notification delivery status filter. E.g., 'pending', 'delivered', 'failed', etc."},"event_type":{"type":"string","description":"Business event type code to filter notifications (e.g., 'reply', 'moderation_action', 'report_status', 'admin_notice')."},"channel":{"type":"string","description":"Delivery channel ('email', 'push', 'in_app', 'sms'), if provider/channel logic applies."},"created_from":{"type":"string","format":"date-time","description":"ISO 8601 datetime string to filter notifications created after or equal to this timestamp."},"created_to":{"type":"string","format":"date-time","description":"ISO 8601 datetime string to filter notifications created before or equal to this timestamp."},"page":{"type":"integer","description":"Page number for pagination, starting from 1.","minimum":1},"limit":{"type":"integer","description":"Number of notifications per page (pagination).","minimum":1}},"required":[],"description":"Request body used for searching and paging notification events (pol_eco_board_notifications). Defines various filtering and pagination options. All properties are optional; default sort is most recent first."}],"IPolEcoBoardVote,[object Object]":["IPolEcoBoardVote.ICreate",{"type":"object","properties":{"vote_value":{"oneOf":[{"const":1,"description":"Value of the vote: 1 for upvote or -1 for downvote. No other values are allowed. Required at vote creation; enforced by application business logic and the enum constraint."},{"const":-1,"description":"Value of the vote: 1 for upvote or -1 for downvote. No other values are allowed. Required at vote creation; enforced by application business logic and the enum constraint."}],"description":"Value of the vote: 1 for upvote or -1 for downvote. No other values are allowed. Required at vote creation; enforced by application business logic and the enum constraint."}},"required":["vote_value"],"description":"Specifies the required payload to create a vote for a post or comment. Only vote_value is provided directly by the client. User identity and target post/comment association are derived from route/context.\n\nSecurity rule: Only authenticated members may vote; the voter identity is never taken from client payload. Enum restrictions ensure only valid values per platform business logic."}],"IPolEcoBoardAuthSession.IUpdate,[object Object]":["IPolEcoBoardRoleTransition.IRequest",{"type":"object","properties":{"account_id":{"oneOf":[{"type":"string","format":"uuid","description":"If specified, limits results to role transitions affecting this account."},{"type":"null","format":"uuid","description":"If specified, limits results to role transitions affecting this account."}],"description":"If specified, limits results to role transitions affecting this account."},"approved_by_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"If set, restricts search to transitions approved by the specified admin."},{"type":"null","format":"uuid","description":"If set, restricts search to transitions approved by the specified admin."}],"description":"If set, restricts search to transitions approved by the specified admin."},"origin_role":{"oneOf":[{"type":"string","description":"Filters events where the starting role matches. Example: 'member'."},{"type":"null","description":"Filters events where the starting role matches. Example: 'member'."}],"description":"Filters events where the starting role matches. Example: 'member'."},"destination_role":{"oneOf":[{"type":"string","description":"Filters events to those where the destination role (e.g., 'moderator', 'admin') matches the supplied value."},{"type":"null","description":"Filters events to those where the destination role (e.g., 'moderator', 'admin') matches the supplied value."}],"description":"Filters events to those where the destination role (e.g., 'moderator', 'admin') matches the supplied value."},"reason":{"oneOf":[{"type":"string","description":"Searches role transitions by textual rationale. Partial and full-text matches supported."},{"type":"null","description":"Searches role transitions by textual rationale. Partial and full-text matches supported."}],"description":"Searches role transitions by textual rationale. Partial and full-text matches supported."},"status":{"oneOf":[{"type":"string","description":"Filter by the transition status ('pending', 'completed', 'rejected', etc.)."},{"type":"null","description":"Filter by the transition status ('pending', 'completed', 'rejected', etc.)."}],"description":"Filter by the transition status ('pending', 'completed', 'rejected', etc.)."},"requested_after":{"oneOf":[{"type":"string","format":"date-time","description":"ISO 8601/RFC 3339 timestamp. Restrict results to those requested after this point in time."},{"type":"null","format":"date-time","description":"ISO 8601/RFC 3339 timestamp. Restrict results to those requested after this point in time."}],"description":"ISO 8601/RFC 3339 timestamp. Restrict results to those requested after this point in time."},"requested_before":{"oneOf":[{"type":"string","format":"date-time","description":"ISO 8601/RFC 3339. Restrict results to transitions requested before this time."},{"type":"null","format":"date-time","description":"ISO 8601/RFC 3339. Restrict results to transitions requested before this time."}],"description":"ISO 8601/RFC 3339. Restrict results to transitions requested before this time."},"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (1-based)."},{"type":"null","description":"Page number for pagination (1-based)."}],"description":"Page number for pagination (1-based)."},"limit":{"oneOf":[{"type":"integer","description":"Page limit for pagination. Defaults to standard system value if null."},{"type":"null","description":"Page limit for pagination. Defaults to standard system value if null."}],"description":"Page limit for pagination. Defaults to standard system value if null."},"orderBy":{"oneOf":[{"type":"string","description":"Property to order results by (e.g., 'requested_at')."},{"type":"null","description":"Property to order results by (e.g., 'requested_at')."}],"description":"Property to order results by (e.g., 'requested_at')."},"orderDirection":{"oneOf":[{"const":"asc","description":"Sort order: 'asc' for ascending, 'desc' for descending."},{"const":"desc","description":"Sort order: 'asc' for ascending, 'desc' for descending."},{"type":"null","enum":["asc","desc"],"description":"Sort order: 'asc' for ascending, 'desc' for descending."}],"description":"Sort order: 'asc' for ascending, 'desc' for descending."}},"required":[],"description":"Query object for searching the role transition history table with support for filtering, ordering, and pagination."}],"IPolEcoBoardConsentStatus.IRequest,[object Object]":["IPageIPolEcoBoardConsentStatus",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination information for the result set."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IPolEcoBoardConsentStatus"},"description":"List of consent status records returned by the query."}},"required":["pagination","data"],"description":"A paginated list container for consent status records from the polEcoBoard platform. Provides a collection of consent events along with pagination information for compliance, operational reporting, or analytics."}],"IPolEcoBoardThirdPartyAuditLog.ICreate,[object Object]":["IPolEcoBoardThirdPartyAuditLog.IUpdate",{"type":"object","description":"Update payload for a third-party integration audit log entry in polEcoBoard. Allows correction or supplementing of provider event details, result code, or correlation info. See pol_eco_board_third_party_audit_logs in schema for mapping. Business policy restricts updates to mutable fields only.","properties":{"event_type":{"type":"string","description":"The (updated) category/type of event for this log record, if correction/classification is required after initial entry."},"event_payload":{"type":"string","description":"New or corrected event payload to be stored for the log. Should be rich enough for audit and compliance analysis."},"result_code":{"type":"string","description":"Corrected/internal result code to indicate business, technical, or compliance result of the integration event."},"correlation_id":{"oneOf":[{"type":"string","description":"Corrected or updated correlation/tracing ID for cross-system linkage."},{"type":"null","description":"Corrected or updated correlation/tracing ID for cross-system linkage."}],"description":"Corrected or updated correlation/tracing ID for cross-system linkage."}},"required":[]}],"IPolEcoBoardModerator.IRequest,[object Object]":["IPageIPolEcoBoardModerator",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IPolEcoBoardModerator"}}},"required":["pagination","data"],"description":"Page container for moderator records, with pagination result and array of IPolEcoBoardModerator full objects. Used for admin/dashboard index of moderation accounts."}],"IPolEcoBoardComment.IRequest,[object Object]":["IPageIPolEcoBoardComment.ISummary",{"type":"object","description":"Container for paginated comment summary results, supporting listing and UI rendering on post/comment pages. Follows the standard IPageT pattern for pagination results. Each data record is a summary of a comment entity, omitting large or sensitive fields. Used by member, moderator, and admin interfaces for efficient list display and navigation.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Pagination metadata including current page, limit per page, total records, and total pages. Used for navigation and UI controls."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IPolEcoBoardComment.ISummary"},"description":"List of comment summaries for the current page. Summaries omit large text, internal, or audit-only fields for performance."}},"required":["pagination","data"]}],"IPageIPolEcoBoardBoardStatus.ISummary,[object Object]":["IPolEcoBoardBoardStatus.ISummary",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the board status event. Always a UUID."},"pol_eco_board_board_id":{"type":"string","format":"uuid","description":"The unique ID of the board whose status was changed by this event."},"status_type":{"type":"string","description":"Type of board status change (e.g., open, locked, archived, visible, hidden, merging, splitting)."},"effective_at":{"type":"string","format":"date-time","description":"Timestamp when the status became effective."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of status event record creation."}},"required":["id","pol_eco_board_board_id","status_type","effective_at","created_at"],"description":"Summary view of a board status change for pagination/listing APIs. Includes minimal fields required for status list rendering or audit trail tables."}],"IPolEcoBoardSanction,[object Object]":["IPolEcoBoardSanction.ICreate",{"type":"object","properties":{"moderation_action_id":{"type":"string","format":"uuid","description":"Reference (UUID) to the moderation action that led to this sanction. Required for auditability and operational linkage; must exist in moderation actions."},"sanctioned_user_id":{"type":"string","format":"uuid","description":"UUID of the member to be sanctioned. This field is required and must reference an active user. Used for account restriction logic and analytics."},"sanction_type":{"type":"string","description":"Enumerated business string describing which type of sanction is to be issued ('ban', 'suspension', 'warning', 'cooldown', etc.). Must follow business-enforced list."},"status":{"type":"string","description":"Initial status/state of the sanction at creation; required ('active', 'pending', etc.). Standard values only (validated by business logic)."},"rationale":{"type":"string","description":"Short text field giving the business reason or moderator justification for the sanction. Mandatory for compliance. 1000 chars max."},"start_at":{"type":"string","format":"date-time","description":"When the sanction will start/take effect. Required for operational scheduling and audit compliance."},"end_at":{"oneOf":[{"type":"string","format":"date-time","description":"Scheduled end time of the sanction, or null for indefinite/permanent. Required if a time-limited sanction, null if permanent/unspecified."},{"type":"null","format":"date-time","description":"Scheduled end time of the sanction, or null for indefinite/permanent. Required if a time-limited sanction, null if permanent/unspecified."}],"description":"Scheduled end time of the sanction, or null for indefinite/permanent. Required if a time-limited sanction, null if permanent/unspecified."}},"required":["moderation_action_id","sanctioned_user_id","sanction_type","status","rationale","start_at"],"description":"Payload for creating a new user sanction as the result of a moderation action. Specifies the target moderation_action_id, sanctioned_user_id, sanction_type, status, business rationale, and time boundaries. Used by admin/moderator operations for sanctions workflow."}],"IPageIPolEcoBoardBusinessReport.ISummary,[object Object]":["IPolEcoBoardBusinessReport.ISummary",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique business report identifier (UUID)."},"report_code":{"type":"string","description":"Short string code or business key identifying the report (e.g., WEEKLY_METRICS_20240810, INCIDENT_EXPORT_20250515)."},"report_type":{"type":"string","description":"Business categorization of the report (e.g., METRICS, AUDIT, INCIDENTS, EXPORT, SLA, LEGAL, COMPLIANCE)."},"status":{"type":"string","description":"Report status in the report lifecycle (e.g., PENDING, COMPLETED, FAILED, DELIVERED)."},"requested_by_id":{"type":"string","format":"uuid","description":"ID of the admin or system account who requested or triggered this report."},"triggered_at":{"type":"string","format":"date-time","description":"Timestamp when this report was requested/generated."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when report was delivered/made available, or null if pending."},{"type":"null"}],"description":"Timestamp when report was delivered/made available, or null if pending."},"failure_reason":{"oneOf":[{"type":"string","description":"Reason if report generation failed; otherwise null."},{"type":"null"}],"description":"Reason if report generation failed; otherwise null."}},"required":["id","report_code","report_type","status","requested_by_id","triggered_at"],"description":"Summary view of a business report for paginated listings, listing major status and identification fields for analytics or dashboards."}],"IPolEcoBoardModeratorBoardAssignment.ICreate,[object Object]":["IPolEcoBoardModeratorBoardAssignment.IUpdate",{"type":"object","properties":{"ended_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when the moderator-board assignment ended. Null if still active. Used to terminate responsibility and revoke permissions from the assigned moderator. Constrained by business policy on assignment duration and revocation logic."},{"type":"null","format":"date-time","description":"Timestamp when the moderator-board assignment ended. Null if still active. Used to terminate responsibility and revoke permissions from the assigned moderator. Constrained by business policy on assignment duration and revocation logic."}],"description":"Timestamp when the moderator-board assignment ended. Null if still active. Used to terminate responsibility and revoke permissions from the assigned moderator. Constrained by business policy on assignment duration and revocation logic."},"role_transfer_log":{"oneOf":[{"type":"string","description":"Free-form string for administrative updates or corrections to the assignment log. Used to document corrective actions, escalation, or specific assignment incidents."},{"type":"null","description":"Free-form string for administrative updates or corrections to the assignment log. Used to document corrective actions, escalation, or specific assignment incidents."}],"description":"Free-form string for administrative updates or corrections to the assignment log. Used to document corrective actions, escalation, or specific assignment incidents."}},"required":[],"description":"Payload to update mutable fields of a moderator-board assignment event. Only 'ended_at' and 'role_transfer_log' are updatable post-creation. Used for privilege revocation, assignment documentation, and operational correction. Audit logging and privilege validation apply to all update actions."}],"IPolEcoBoardMaintenanceWindow.IRequest,[object Object]":["IPageIPolEcoBoardMaintenanceWindow.ISummary",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IPolEcoBoardMaintenanceWindow.ISummary"}}},"required":["pagination","data"],"description":"Page of maintenance window summaries reflecting result set and pagination info."}]}