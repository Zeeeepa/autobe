{"IDiscussionBoardCommentVote,[object Object]":["IDiscussionBoardCommentVote.ICreate",{"type":"object","properties":{"discussion_board_comment_id":{"type":"string","format":"uuid","description":"The ID of the comment to vote on."},"upvote":{"type":"boolean","description":"True for upvote, false for downvote."}},"required":["discussion_board_comment_id","upvote"],"description":"Payload to create a new vote (upvote or downvote) on a comment. Only authenticated members may use this, and user identity is inferred from the authentication context (member ID is NOT accepted directly, per schema policies)."}],"IDiscussionBoardAdmin.IUpdate,[object Object]":["IPageIDiscussionBoardModerator",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IDiscussionBoardModerator"}}},"required":["pagination","data"],"description":"Paginated result container for moderator entities. Includes page metadata and a data array of moderator objects."}],"IPageIDiscussionBoardCategory,[object Object]":["IDiscussionBoardCategory.IRequest",{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"uint32","description":"Page number for pagination. Integer value, 1-based. Null if default."},{"type":"null","format":"uint32","description":"Page number for pagination. Integer value, 1-based. Null if default."}],"description":"Page number for pagination. Integer value, 1-based. Null if default."},"limit":{"oneOf":[{"type":"integer","format":"uint32","description":"Number of records per page (paginated query). Default 100."},{"type":"null","format":"uint32","description":"Number of records per page (paginated query). Default 100."}],"description":"Number of records per page (paginated query). Default 100."},"name":{"oneOf":[{"type":"string","description":"Filter by category name (partial or exact match). Used for advanced search or power-user queries. Nullable."},{"type":"null","description":"Filter by category name (partial or exact match). Used for advanced search or power-user queries. Nullable."}],"description":"Filter by category name (partial or exact match). Used for advanced search or power-user queries. Nullable."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Filter categories by creation date (start range - ISO 8601 format). Nullable."},{"type":"null","format":"date-time","description":"Filter categories by creation date (start range - ISO 8601 format). Nullable."}],"description":"Filter categories by creation date (start range - ISO 8601 format). Nullable."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Filter categories by creation date (end range - ISO 8601 format). Nullable."},{"type":"null","format":"date-time","description":"Filter categories by creation date (end range - ISO 8601 format). Nullable."}],"description":"Filter categories by creation date (end range - ISO 8601 format). Nullable."},"include_deleted":{"oneOf":[{"type":"boolean","description":"Whether to include soft-deleted categories in results. Only admins/moderators may set true; otherwise ignored. Null/absent means false."},{"type":"null","description":"Whether to include soft-deleted categories in results. Only admins/moderators may set true; otherwise ignored. Null/absent means false."}],"description":"Whether to include soft-deleted categories in results. Only admins/moderators may set true; otherwise ignored. Null/absent means false."}},"description":"Search/filter/pagination request data structure for category queries. Supports name filtering, date range, and soft-delete visibility as allowed by business logic.","required":[]}],"IDiscussionBoardComment.IRequest,[object Object]":["IDiscussionBoardComment",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the comment, as generated in the discussion_board_comments table. Used for unique identification, linking, editing, deleting, and referencing comments in threads."},"discussion_board_member_id":{"type":"string","format":"uuid","description":"Foreign key to the authoring member's account. References the id in discussion_board_members. Used to attribute authorship of the comment."},"discussion_board_post_id":{"type":"string","format":"uuid","description":"Foreign key to the post being commented on. References id in discussion_board_posts. Ensures comment is part of the correct post thread."},"parent_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional UUID of the parent comment if this is a reply. Supports nested/threaded comment structures. Null when comment is top-level in thread."},{"type":"null","format":"uuid","description":"Optional UUID of the parent comment if this is a reply. Supports nested/threaded comment structures. Null when comment is top-level in thread."}],"description":"Optional UUID of the parent comment if this is a reply. Supports nested/threaded comment structures. Null when comment is top-level in thread."},"body":{"type":"string","description":"Main text/content of the comment. Submitted by a member, may be filtered for profanity, length, or prohibited content. Mutable during editing."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the comment was created. Automatically set; used for audit log/tracking/chronological rendering."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update/edit to this comment. Enables audit trail, moderation, and version history features."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp if this comment has been soft-deleted (marked as deleted but not purged from DB). Null when active, else ISO date-time. Used for audit, compliance, and moderation purposes."},{"type":"null","format":"date-time","description":"Timestamp if this comment has been soft-deleted (marked as deleted but not purged from DB). Null when active, else ISO date-time. Used for audit, compliance, and moderation purposes."}],"description":"Timestamp if this comment has been soft-deleted (marked as deleted but not purged from DB). Null when active, else ISO date-time. Used for audit, compliance, and moderation purposes."}},"required":["id","discussion_board_member_id","discussion_board_post_id","body","created_at","updated_at"],"description":"Detailed comment entity from discussion_board_comments table. Includes thread info, authorship, soft-deletion, full auditability per schema and compliance requirements."}],"IDiscussionBoardCategoryTag,[object Object]":["IDiscussionBoardCategoryTag.ICreate",{"type":"object","properties":{"discussion_board_category_id":{"type":"string","format":"uuid","description":"UUID of the existing category to which the tag will be assigned. This must match an existing discussion_board_categories.id. Required for all assignment creation. From client input or workflow selection."},"discussion_board_tag_id":{"type":"string","format":"uuid","description":"UUID of the tag to assign to the category. Must match an existing discussion_board_tags.id. Required for all assignment creation."}},"required":["discussion_board_category_id","discussion_board_tag_id"],"description":"Input structure for creating a new tag-to-category assignment. Only foreign key fields are required; timestamps/audit handled at persistence."}],"IDiscussionBoardPostCategory.ICreate,[object Object]":["IDiscussionBoardPostCategory.IUpdate",{"type":"object","properties":{"discussion_board_post_id":{"type":"string","format":"uuid","description":"If provided, updates the reference to the associated post for this assignment. Used for correcting mismatches or transfer operations between posts."},"discussion_board_category_id":{"type":"string","format":"uuid","description":"If provided, updates the linked category for this assignment, enabling correction or transfer between categories. Must remain unique with respect to the post and category pair."}},"required":[],"description":"DTO for updating an existing post-category assignment. Allows changing the category or post reference of a given assignment, subject to unique constraint on the pair. Used in rare administrative operations or data corrections."}],"IPageIDiscussionBoardGuest.ISummary,[object Object]":["IDiscussionBoardGuest.ISummary",{"type":"object","description":"A summary view object for a discussion board guest session. This type provides an overview of guest visitation: the session id, IP address, token, and entry timestamp. It is suitable for browsing listings, analytics, abuse investigations, and operational dashboards, as referenced in the project requirements.\n\nEvery property here is derived directly from a column in the discussion_board_guests schema. No sensitive data is present, and detail is limited to what's necessary for identification and summary analytics.\n\nUsed in arrays within paginated guest listings or detail expansion UIs.","properties":{"id":{"type":"string","format":"uuid","description":"The unique UUID identifying the guest session as defined by discussion_board_guests.id. Used for reference, detailed lookups, and analytics traceability."},"guest_ip":{"type":"string","description":"IP address associated with this guest session. Used for minimal audit and abuse tracking in compliance workflows."},"session_token":{"type":"string","description":"Session token or browser fingerprint associated with the guest for deduplication and basic repeat-visitor analysis."},"entered_at":{"type":"string","format":"date-time","description":"Timestamp at which the guest entered (session started, ISO8601 as generated by the database). Supports auditing and chronological browsing."}},"required":["id","guest_ip","session_token","entered_at"]}],"IPageIDiscussionBoardAuthToken,[object Object]":["IDiscussionBoardAuthToken.IRequest",{"type":"object","description":"Request object for advanced search, filtering, and pagination of authentication token records in the discussion board system.\n\nSupports querying by actor type, status, issue/expiry period, token value, and related actor/user ids. Used in administrative or security workflows that require fine-grained access and filtering of token data for audit, compliance, or investigation.\n\nAll fields align with atomic properties of the IDiscussionBoardAuthToken model and support multi-criteria queries for regulatory and business security requirements.","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for paginated results. Set to null or unspecified for default behavior."},{"type":"null","description":"Page number for paginated results. Set to null or unspecified for default behavior."}],"description":"Page number for paginated results. Set to null or unspecified for default behavior."},"limit":{"oneOf":[{"type":"integer","description":"Limit of records per page. Null or omitted for default per system policy."},{"type":"null","description":"Limit of records per page. Null or omitted for default per system policy."}],"description":"Limit of records per page. Null or omitted for default per system policy."},"actor_type":{"oneOf":[{"type":"string","description":"Actor role type to filter tokens for ('admin','moderator','member','guest', or null for all)"},{"type":"null","description":"Actor role type to filter tokens for ('admin','moderator','member','guest', or null for all)"}],"description":"Actor role type to filter tokens for ('admin','moderator','member','guest', or null for all)"},"revoked":{"oneOf":[{"type":"boolean","description":"Whether to retrieve only revoked (true), only active (false), or all (null) tokens."},{"type":"null","description":"Whether to retrieve only revoked (true), only active (false), or all (null) tokens."}],"description":"Whether to retrieve only revoked (true), only active (false), or all (null) tokens."},"issued_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Lower bound (inclusive) on issue time for filtering tokens. ISO 8601 datetime string."},{"type":"null","format":"date-time","description":"Lower bound (inclusive) on issue time for filtering tokens. ISO 8601 datetime string."}],"description":"Lower bound (inclusive) on issue time for filtering tokens. ISO 8601 datetime string."},"issued_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Upper bound (inclusive) on issue time for filtering tokens. ISO 8601 datetime string."},{"type":"null","format":"date-time","description":"Upper bound (inclusive) on issue time for filtering tokens. ISO 8601 datetime string."}],"description":"Upper bound (inclusive) on issue time for filtering tokens. ISO 8601 datetime string."},"expires_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Lower bound for filtering tokens by expiry time (ISO 8601 datetime)."},{"type":"null","format":"date-time","description":"Lower bound for filtering tokens by expiry time (ISO 8601 datetime)."}],"description":"Lower bound for filtering tokens by expiry time (ISO 8601 datetime)."},"expires_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Upper bound for filtering tokens by expiry time (ISO 8601 datetime)."},{"type":"null","format":"date-time","description":"Upper bound for filtering tokens by expiry time (ISO 8601 datetime)."}],"description":"Upper bound for filtering tokens by expiry time (ISO 8601 datetime)."},"admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Uuid of the admin whose tokens to include in results."},{"type":"null","format":"uuid","description":"Uuid of the admin whose tokens to include in results."}],"description":"Uuid of the admin whose tokens to include in results."},"moderator_id":{"oneOf":[{"type":"string","format":"uuid","description":"Uuid of the moderator whose tokens to include."},{"type":"null","format":"uuid","description":"Uuid of the moderator whose tokens to include."}],"description":"Uuid of the moderator whose tokens to include."},"member_id":{"oneOf":[{"type":"string","format":"uuid","description":"Uuid of the member whose tokens to include."},{"type":"null","format":"uuid","description":"Uuid of the member whose tokens to include."}],"description":"Uuid of the member whose tokens to include."},"guest_id":{"oneOf":[{"type":"string","format":"uuid","description":"Uuid of the guest whose tokens to include."},{"type":"null","format":"uuid","description":"Uuid of the guest whose tokens to include."}],"description":"Uuid of the guest whose tokens to include."}},"required":[]}],"IDiscussionBoardPostEdit.IUpdate,[object Object]":["IPageIDiscussionBoardContentReport",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IDiscussionBoardContentReport"},"description":"Array of content moderation report records. Each element is a unique abuse/moderation report, see IDiscussionBoardContentReport for full documentation."}},"required":["pagination","data"],"description":"Paginated results container for content moderation reports (IPage<IContentReport>). Used for administrative report dashboards, queues, and analytics tools in moderation workflows. Aligns with 3NF and Prisma schema definitions for board moderation."}],"IDiscussionBoardAppeal.IRequest,[object Object]":["IPageIDiscussionBoardAppeal",{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination"},"data":{"type":"array","items":{"$ref":"#/components/schemas/IDiscussionBoardAppeal"},"description":"Array of appeal records for this page. See IDiscussionBoardAppeal for schema."}},"required":["pagination","data"],"description":"A page of moderation action appeals. Contains pagination meta (IPage.IPagination) and data records array representing moderation action appeals (IDiscussionBoardAppeal). Standard structure for paginated results across API."}],"IDiscussionBoardAuditLog.ICreate,[object Object]":["IDiscussionBoardAuditLog.IUpdate",{"type":"object","properties":{"action_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Mutable for corrections only) The unique ID of the moderation action associated with this log entry, if being corrected. Nullable if unchanged. Used in rare correction scenarios with audit policy."},{"type":"null","format":"uuid","description":"(Mutable for corrections only) The unique ID of the moderation action associated with this log entry, if being corrected. Nullable if unchanged. Used in rare correction scenarios with audit policy."}],"description":"(Mutable for corrections only) The unique ID of the moderation action associated with this log entry, if being corrected. Nullable if unchanged. Used in rare correction scenarios with audit policy."},"actor_admin_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Mutable only for correction) The admin actor's UUID, if correcting/assigning missing links. Nullable if no admin or unchanged."},{"type":"null","format":"uuid","description":"(Mutable only for correction) The admin actor's UUID, if correcting/assigning missing links. Nullable if no admin or unchanged."}],"description":"(Mutable only for correction) The admin actor's UUID, if correcting/assigning missing links. Nullable if no admin or unchanged."},"actor_moderator_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Mutable only for correction) The moderator actor's UUID, if correcting/assigning missing links. Nullable if no moderator or unchanged."},{"type":"null","format":"uuid","description":"(Mutable only for correction) The moderator actor's UUID, if correcting/assigning missing links. Nullable if no moderator or unchanged."}],"description":"(Mutable only for correction) The moderator actor's UUID, if correcting/assigning missing links. Nullable if no moderator or unchanged."},"actor_member_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Mutable only for correction) The member actor's UUID, if correcting/assigning missing links. Nullable if no member or unchanged."},{"type":"null","format":"uuid","description":"(Mutable only for correction) The member actor's UUID, if correcting/assigning missing links. Nullable if no member or unchanged."}],"description":"(Mutable only for correction) The member actor's UUID, if correcting/assigning missing links. Nullable if no member or unchanged."},"actor_guest_id":{"oneOf":[{"type":"string","format":"uuid","description":"(Mutable only for correction) The guest actor's UUID, if correcting/assigning missing links. Nullable if no guest or unchanged."},{"type":"null","format":"uuid","description":"(Mutable only for correction) The guest actor's UUID, if correcting/assigning missing links. Nullable if no guest or unchanged."}],"description":"(Mutable only for correction) The guest actor's UUID, if correcting/assigning missing links. Nullable if no guest or unchanged."},"action_type":{"oneOf":[{"type":"string","description":"Type of audit log event, if needs to be corrected (e.g., miss-classification). Nullable if unchanged."},{"type":"null","description":"Type of audit log event, if needs to be corrected (e.g., miss-classification). Nullable if unchanged."}],"description":"Type of audit log event, if needs to be corrected (e.g., miss-classification). Nullable if unchanged."},"context":{"oneOf":[{"type":"string","description":"Updated or corrected event context for additional details, rationale, or legal note. Nullable if unchanged."},{"type":"null","description":"Updated or corrected event context for additional details, rationale, or legal note. Nullable if unchanged."}],"description":"Updated or corrected event context for additional details, rationale, or legal note. Nullable if unchanged."}},"required":[],"description":"Audit log update DTO.\n\nAllows legal or compliance-driven correction of audit events, such as reassignment of actor fields or context for regulatory purposes. All fields optional and mutable only under strict business logic. Audit logs are otherwise intended to be immutable."}]}