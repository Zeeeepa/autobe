[{"specification":"This operation retrieves a paginated and filtered list of all shopping mall sections (sub-stores/virtual storefronts) from the shoppingMallAi platform. It leverages the shopping_mall_ai_sections table for data retrieval, supporting advanced filtering (such as by code, name, and is_active), search, and sorting capabilities. The response provides an overview including display properties, business code, activation status, and audit fields, to support backoffice management, multi-store navigation, and section-level mappings. This endpoint enables administrators and platform operators to efficiently manage and monitor store sections at scale while enforcing role-based visibility and business constraints.","path":"/shoppingMallAi/administrator/sections","method":"patch","description":"Retrieve a filtered, searchable, and paginated list of shopping mall sections defined in the shopping_mall_ai_sections table. This enables administrators and authorized users to list and find section records using various criteria such as section code, display name, is_active status, and date range filters. Supports advanced search via partial matching for names and descriptions and allows sorting based on display_order, creation date, and update date. All results are constrained by permission and logical deletion visibility—only sections not soft-deleted (deleted_at is NULL) are returned by default unless otherwise requested. The returned result includes all necessary display, audit, and business configuration fields needed for front and backoffice UI. Security policy enforces that only users with appropriate admin or backoffice privileges can access this list; read operations are audit-logged for compliance.","summary":"Search, filter, and paginate shopping mall sections (shopping_mall_ai_sections).","parameters":[],"requestBody":{"description":"Filter and pagination options to search sections. Includes criteria for code, name, is_active, and date ranges.","typeName":"IShoppingMallAiSection.IRequest"},"responseBody":{"description":"Paginated section search result set with summaries for each matched row.","typeName":"IPageIShoppingMallAiSection.ISummary"},"authorizationRole":"administrator","name":"search","authorizationRoles":["administrator"]},{"specification":"This operation retrieves detail information for a specific shopping mall section (sub-store) by its unique sectionId, referencing the shopping_mall_ai_sections table. It provides all section fields such as display name, business code, activation status, description, display priority, and audit timestamps. The endpoint is intended for administrators and system operators to view or inspect configuration, status, and audit trail for a single section. Relationship to mapped products, discounts, and channel associations may be referenced for integration or UI display. Access is restricted to users with appropriate permissions; output complies with permission rules and audit requirements.","path":"/shoppingMallAi/administrator/sections/{sectionId}","method":"get","description":"Get full details of a single section/sub-store from shopping_mall_ai_sections by specifying the sectionId path parameter. This returns all fields maintained for the section, such as name, unique code, description, activation status (is_active), display order, and lifecycle audit fields (created_at, updated_at, updated_at, deleted_at). Only available to authorized users (administrators and system operators). If sectionId does not exist or has been soft deleted (deleted_at is not null), a not-found error is returned. Read audit is performed for compliance.","summary":"Get detailed information for a specific section (shopping_mall_ai_sections).","parameters":[{"name":"sectionId","description":"Unique identifier of the target section (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed section information object as persisted in the database.","typeName":"IShoppingMallAiSection"},"authorizationRole":"administrator","name":"at","authorizationRoles":["administrator"]},{"specification":"This operation creates and persists a new shopping mall section (sub-store/virtual shopfront) in the shoppingMallAi platform by inserting a new record into shopping_mall_ai_sections. All mandatory fields—name, business code (globally unique), is_active, and display_order—must be provided, with optional description allowed. Admin or system operator role is required. The new section is instantly available for mapping to products, channels, and discounts, supporting multi-store business models and dynamic marketplace expansion. Creation is logged for audit/compliance, with uniqueness constraints enforced on code.","path":"/shoppingMallAi/administrator/sections","method":"post","description":"Register a new section/sub-store by creating an entry in shopping_mall_ai_sections. Required fields: name (display name), code (unique business code), is_active (activation flag), and display_order (UI/listing priority). Description is optional. After creation, the new section can be managed, mapped, or made visible on the platform. System enforces uniqueness for section code and validation for core fields. Only authorized users (administrator, operator) may access this endpoint. Successful creation returns the newly inserted section DTO. Creation is audit-logged for legal/dispute reasons. Attempts with duplicate codes or missing required fields result in logical validation errors.","summary":"Create/register a new shopping mall section (shopping_mall_ai_sections).","parameters":[],"requestBody":{"description":"Creation info for new section, including required and optional section fields.","typeName":"IShoppingMallAiSection.ICreate"},"responseBody":{"description":"The newly created section, as persisted in the system.","typeName":"IShoppingMallAiSection"},"authorizationRole":"administrator","name":"create","authorizationRoles":["administrator"]},{"specification":"This operation updates an existing shopping mall section (sub-store) identified by sectionId, patching the corresponding record in shopping_mall_ai_sections. Fields that can be updated include: name, code (unique), description, is_active, and display_order. It enforces constraints on business code uniqueness and validates proper data for all fields. Admin or operator privilege is required. Updates refresh the updated_at timestamp and are logged for audit. Fields not included in request are not changed, preserving existing values.","path":"/shoppingMallAi/administrator/sections/{sectionId}","method":"put","description":"Update the details of a specific section/sub-store by specifying its sectionId path parameter. Permitted updatable fields: name, code (must remain unique), description, is_active status, display_order. All changes are validated for permission, unique business rules, and data integrity. Only authorized users (administrator role) may update section configuration. If the specified section does not exist or is soft-deleted, an error is returned. Successful update is logged for compliance, returns the new persisted section state. Attempts to update with a code that is not unique will result in a logical validation error.","summary":"Update a section's configuration and data (shopping_mall_ai_sections).","parameters":[{"name":"sectionId","description":"Unique identifier for the section to update (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating a section configuration; only specified fields will be patched.","typeName":"IShoppingMallAiSection.IUpdate"},"responseBody":{"description":"The updated section data after applying the changes.","typeName":"IShoppingMallAiSection"},"authorizationRole":"administrator","name":"update","authorizationRoles":["administrator"]},{"specification":"This operation soft deletes (logically deletes) a section (sub-store) identified by sectionId by setting deleted_at in shopping_mall_ai_sections. The section is no longer visible to regular users or available for mapping, but retained for audit and compliance. Only users with administrator or operator privilege may perform this deletion. If the section does not exist or has already been deleted, an error is returned. This operation is strongly audit-logged, and associated business logic ensures related mappings (products/channels) are appropriately handled per business rules.","path":"/shoppingMallAi/administrator/sections/{sectionId}","method":"delete","description":"Soft delete a section/sub-store by setting deleted_at for the specified sectionId. The section is then hidden from public and business views but the record persists for compliance and audit. Only administrators may delete sections. Attempts to delete a non-existent or already deleted section result in an error. Deletion event is logged for traceability and business/legal history.","summary":"Soft delete (logical delete) a section (shopping_mall_ai_sections).","parameters":[{"name":"sectionId","description":"Unique identifier of the section to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","name":"erase","authorizationRoles":["administrator"]},{"specification":"This operation searches, filters, and paginates the list of business channels (top-level sales, affiliate or promotional entities) from shopping_mall_ai_channels. It supports advanced search criteria like channel code, name, activation status, and region, with sorting and pagination for UI and backoffice use. Output delivers overviews for each matched channel, including metadata needed for navigation, mapping, and channel-specific rules. Intended for administrators and business operators managing channel configurations and mapping channels to products, categories, and sections.","path":"/shoppingMallAi/administrator/channels","method":"patch","description":"Search, filter, and paginate business channels in shopping_mall_ai_channels. Supports criteria such as channel code, display name, is_active status, and region_code, as well as partial matches and advanced sorting (display_order, created_at, updated_at). Results deliver summaries structured for front/backoffice use, including all fields required for mapping and display. Only administrators can access this endpoint. Query and response are audit-logged for policy and compliance.","summary":"Search and filter shopping mall channels (shopping_mall_ai_channels).","parameters":[],"requestBody":{"description":"Request criteria for searching/filtering channels, supports pagination, search, and sorting.","typeName":"IShoppingMallAiChannel.IRequest"},"responseBody":{"description":"Paginated list of channel summaries matching search criteria.","typeName":"IPageIShoppingMallAiChannel.ISummary"},"authorizationRole":"administrator","name":"search","authorizationRoles":["administrator"]},{"specification":"This operation fetches the complete details for a single channel (business, sales, event, affiliate, or regional) by its channelId, referencing shopping_mall_ai_channels. Returns all persisted fields such as name, code, region_code, description, activation state, and display_order, plus audit dates. Used by administrators for configuration, mapping, and status inspection; also for UI population of channel detail screens. Only available to administrators. Output is subject to existence/soft deletion checks and full access audit logging.","path":"/shoppingMallAi/administrator/channels/{channelId}","method":"get","description":"Get a single channel's full database record by specifying its unique channelId. Returns all fields for the channel, including name, code, region, description, is_active, display_order, and audit timestamps. Only available to admin users or higher. Errors are raised if channel does not exist or is soft-deleted. Usage is logged for compliance.","summary":"Retrieve detailed channel information (shopping_mall_ai_channels).","parameters":[{"name":"channelId","description":"Unique identifier of the target channel (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed persisted channel record.","typeName":"IShoppingMallAiChannel"},"authorizationRole":"administrator","name":"at","authorizationRoles":["administrator"]},{"specification":"This operation registers a new business channel within the shoppingMallAi platform by creating a record in shopping_mall_ai_channels table. Required details include display name, code (globally unique), is_active status, display_order, and optionally region_code and description. Creation is restricted to administrators, with required field validation and uniqueness checks on code. On success, a complete DTO is returned and the event is audit-logged. This enables expansion or reconfiguration of platform channel offerings.","path":"/shoppingMallAi/administrator/channels","method":"post","description":"Create a new business channel for the shopping mall platform by inserting a record into shopping_mall_ai_channels. Required fields: name, code, display_order, is_active. Optional fields: description, region_code. Enforces uniqueness of code and validates required data for each field. Only administrators may use this endpoint. On success returns the newly created persisted channel object. Errors are triggered for validation failures or code duplicates.","summary":"Create/register a new channel entity (shopping_mall_ai_channels).","parameters":[],"requestBody":{"description":"Required and optional fields to create a new channel entity.","typeName":"IShoppingMallAiChannel.ICreate"},"responseBody":{"description":"Detailed object for the new channel as inserted.","typeName":"IShoppingMallAiChannel"},"authorizationRole":"administrator","name":"create","authorizationRoles":["administrator"]},{"specification":"This operation updates an existing business channel identified by channelId, applying changes to fields such as name, code, description, is_active, display_order, and region_code. Updater must enforce uniqueness of business code and proper data validation. Intended for administrator-level roles managing business channels for navigation, mapping, and operational control. Changes update the updated_at field and are logged for audit. Entity must exist and not be soft deleted for update to succeed.","path":"/shoppingMallAi/administrator/channels/{channelId}","method":"put","description":"Update a specified channel, by channelId, with new data for any modifiable field (name, code, description, is_active, display_order, region_code). Operation requires admin privileges and checks business code uniqueness and value constraints. Only available for channels that are not soft deleted. Updates return the refreshed persisted channel DTO and are logged for compliance.","summary":"Update a business channel (shopping_mall_ai_channels).","parameters":[{"name":"channelId","description":"Unique identifier for the target channel (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for channel update/patch; non-included fields remain unchanged.","typeName":"IShoppingMallAiChannel.IUpdate"},"responseBody":{"description":"Channel record after the update is applied.","typeName":"IShoppingMallAiChannel"},"authorizationRole":"administrator","name":"update","authorizationRoles":["administrator"]},{"specification":"This operation logically (soft) deletes a business channel entity by its channelId by setting the deleted_at timestamp in shopping_mall_ai_channels. Entity remains for audit, but is no longer accessible or visible in front or backoffice UIs. Deletion is restricted to administrators and must verify existence/not already deleted. Deletion is fully audit-logged and related business mappings (products, sections, discounts) are handled per business logic. Attempts to delete a non-existent or already deleted channel will error.","path":"/shoppingMallAi/administrator/channels/{channelId}","method":"delete","description":"Logically (soft) delete a channel by updating deleted_at for the specified channelId. Entity is removed from all business/UI processes, only retained for legal/audit. Administrators only. If channel not found or previously deleted, error is returned. Deletion event is logged for compliance.","summary":"Soft delete (logical delete) a channel entry (shopping_mall_ai_channels).","parameters":[{"name":"channelId","description":"Unique identifier for the channel to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","name":"erase","authorizationRoles":["administrator"]},{"specification":"This operation allows administrators to search, filter, and paginate channel-specific categories as defined in shopping_mall_ai_channel_categories. It supports criteria such as channel_id, category code, name, parent_id, is_active, and display_order for hierarchical/faceted searching. Results can be sorted and are suited for category management UIs, mapping, and navigation in multi-channel environments. Only users with administrator privileges may access. Audit logging is enforced. Pagination allows efficient large-scale taxonomy management.","path":"/shoppingMallAi/administrator/channelCategories","method":"patch","description":"Search and filter categories specific to a business channel (shopping_mall_ai_channel_categories). Operation supports search by channel, code, name, parent category, is_active, and display_order. Used for admin or operator configuration of product navigation structures, channel-based taxonomies, and business rules. Data visibility and access are audit-logged. Results support pagination for UI and admin needs.","summary":"Search and filter channel-specific category records (shopping_mall_ai_channel_categories).","parameters":[],"requestBody":{"description":"Request criteria for category search, filtering, sorting, and pagination.","typeName":"IShoppingMallAiChannelCategory.IRequest"},"responseBody":{"description":"Paginated list of channel category records matching the search criteria.","typeName":"IPageIShoppingMallAiChannelCategory.ISummary"},"authorizationRole":"administrator","name":"search","authorizationRoles":["administrator"]},{"specification":"Fetch the full persisted details for a single channel category by channelCategoryId. Accesses the shopping_mall_ai_channel_categories table to return all category-specific fields such as name, code, channel reference, parent_id, is_active, display_order, and generated audit timestamps. Only accessible by admin role or higher for compliance. Category must exist and not be soft-deleted; otherwise, an error is returned. Result may be referenced for mapping, UI configuration, or navigation logic.","path":"/shoppingMallAi/administrator/channelCategories/{channelCategoryId}","method":"get","description":"Get a single persisted channel category using the unique channelCategoryId path parameter. Returns all per-category fields, including the associated channel, code, name, hierarchy (parent_id), is_active flag, display priority, and audit data. Admin or platform operators only. Soft-deleted, missing, or unauthorized queries produce an error. Access is audit-logged for compliance.","summary":"Get detailed channel category info (shopping_mall_ai_channel_categories).","parameters":[{"name":"channelCategoryId","description":"Unique identifier for the channel category (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed DTO of the found channel category record.","typeName":"IShoppingMallAiChannelCategory"},"authorizationRole":"administrator","name":"at","authorizationRoles":["administrator"]},{"specification":"This operation creates a new channel-category association in the shoppingMallAi platform. It corresponds to the shopping_mall_ai_channel_categories Prisma DB table, allowing administrators to add new categories within a specific sales channel. The request body captures details like the channel reference, category name, code, hierarchy, priority, description, and activation flag. All business and validation rules (such as unique channel+code constraint) are enforced server-side. Use cases include adding navigation categories for special campaigns or new product lines within a channel.","path":"/shoppingMallAi/administrator/channelCategories","method":"post","description":"Create a new channel-specific category. This operation requires administrator role, as only platform admins can manage channel category structures. Each category must belong to a valid channel (shopping_mall_ai_channel_id), with a unique code scoped to that channel context. The request validates all required fields: name, code, parent_id (optional for hierarchical structure), display order, optional description, and whether the category is active. All inputs are validated for business compliance and uniqueness constraints before creation. Errors are returned for duplicate codes, invalid parent linkage, or conflicts with category trees. Once created, the category appears in navigation and product assignment UIs for the specified channel. Related APIs include updating, deleting, and searching channel categories. Audit and snapshot logs automatically track the creation event for compliance. On success, returns the created channel category object.","summary":"Create a new channel-specific category (shopping_mall_ai_channel_categories table) by admin.","parameters":[],"requestBody":{"description":"Channel-specific category creation payload.","typeName":"IShoppingMallAiChannelCategory.ICreate"},"responseBody":{"description":"Created channel category record.","typeName":"IShoppingMallAiChannelCategory"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"This operation updates an existing channel category identified by its unique ID. It operates on the shopping_mall_ai_channel_categories Prisma table. Administrators can change details such as name, description, parent, display order, active status, and other business attributes. This ensures the category information is current, navigation trees stay optimized, and business/merchandising needs are reflected promptly.","path":"/shoppingMallAi/administrator/channelCategories/{channelCategoryId}","method":"put","description":"Update an existing channel category in the platform. This endpoint requires administrator permissions, ensuring only authorized platform staff can modify functional navigation structures. All updateable fields—name, code (where allowed), parent_id, display_order, is_active, and description—are validated according to uniqueness and business policies. Soft validation prevents cycles in the category tree. The operation automatically snapshots the previous state for audit and compliance. Errors are returned for invalid references, duplicate codes, or violations of business constraints. All changes are reflected in real time in channel/category navigation, product assignment, and business logic flows.","summary":"Update an existing channel category (shopping_mall_ai_channel_categories table) by admin.","parameters":[{"name":"channelCategoryId","description":"Unique identifier of the channel category to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for the channel category. Only provided fields will be modified as allowed by business rules.","typeName":"IShoppingMallAiChannelCategory.IUpdate"},"responseBody":{"description":"The updated channel category record.","typeName":"IShoppingMallAiChannelCategory"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This operation deletes (soft delete) a channel-specific category by its unique ID. It corresponds to the shopping_mall_ai_channel_categories table. Only administrators are permitted. If the category is referenced (child categories/products), cascading and integrity checks occur before marking as deleted. The record is retained for auditing and historical reference but hidden from business navigation/product assignment.","path":"/shoppingMallAi/administrator/channelCategories/{channelCategoryId}","method":"delete","description":"Soft-delete a channel category. This admin-only action marks the specified category as deleted by setting the deleted_at timestamp. The operation checks for hierarchical integrity—if the category has children, deletion may be prevented, or child categories will be reparented according to business policy. Categories in use for product assignment are handled per system rules (either block deletion or flag as deleted for business logic). The operation fully preserves audit history and disables the category across all active channel navigation trees upon successful execution.","summary":"Soft-delete a channel category (shopping_mall_ai_channel_categories table) by admin.","parameters":[{"name":"channelCategoryId","description":"Unique identifier of the channel category to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"This operation searches and lists channel-category-to-global-category mappings with full filtering, pagination, and sorting support. It operates on the shopping_mall_ai_channel_category_maps table, allowing admins to analyze or audit category mapping configurations across the system. Advanced filtering can be done by channel, global category, timestamps, and mapping criteria.","path":"/shoppingMallAi/administrator/channelCategoryMaps","method":"patch","description":"List and search channel category mappings. Only administrators can query full mapping configurations due to audit and system maintenance sensitivity. Request body allows filters such as channel_category_id, shopping_mall_ai_category_id, date range, sorting, and page/size controls. The response is a paginated list of mappings with summary information. This operation is essential for maintaining correct global-to-channel navigational category linkage, localization rules, and reference integrity. Related APIs include map creation, update, detail GET, and deletion. Error handling includes invalid filters and out-of-range pagination.","summary":"Search and list channel-category-to-global-category mappings with filters (shopping_mall_ai_channel_category_maps table).","parameters":[],"requestBody":{"description":"Search/filter criteria and pagination options for listing mappings.","typeName":"IShoppingMallAiChannelCategoryMap.IRequest"},"responseBody":{"description":"Paginated list of channel category mappings matching the search criteria.","typeName":"IPageIShoppingMallAiChannelCategoryMap"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves details of a single channel-category-to-global-category mapping by its unique map ID. It operates on the shopping_mall_ai_channel_category_maps table. Provides all business fields and references, allowing admins to audit or inspect navigation configuration for troubleshooting or system management purposes.","path":"/shoppingMallAi/administrator/channelCategoryMaps/{channelCategoryMapId}","method":"get","description":"Get details of a channel category map. Admin only. Requires a valid mapping ID. Returns information such as related channel-category, global-category, creation time, and status. Ensures traceability of category mapping logic in multi-store, multi-channel catalog environments. Returns errors for missing or invalid mapping IDs, and if the mapping has been deleted or is no longer accessible by business policy.","summary":"Retrieve details of a channel-category-to-global-category mapping (shopping_mall_ai_channel_category_maps table).","parameters":[{"name":"channelCategoryMapId","description":"Unique identifier of the channel-category mapping entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the channel category mapping entry.","typeName":"IShoppingMallAiChannelCategoryMap"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"This operation creates a new mapping between a channel category and a global category, allowing category trees to be customized per channel in the shoppingMallAi platform. It operates on the shopping_mall_ai_channel_category_maps table and enforces all reference integrity and uniqueness rules. Mapping maintenance is essential for supporting multi-channel product navigation and localized taxonomy needs.","path":"/shoppingMallAi/administrator/channelCategoryMaps","method":"post","description":"Create a new channel category mapping. Enables associating a channel-specific category (channel_category_id) with a global category (shopping_mall_ai_category_id). Admin only. Input validation includes reference checks for both IDs and duplicate/overlapping mapping detection. Audit and creation logs ensure all mapping events are fully traceable. Errors include invalid references, duplicate mappings, or integrity rule violations. Once created, mapping is visible for business logic, search, and UI components tied to channel/category navigation.","summary":"Create new mapping between channel and global categories (shopping_mall_ai_channel_category_maps table).","parameters":[],"requestBody":{"description":"Mapping creation payload associating a channel category and global category.","typeName":"IShoppingMallAiChannelCategoryMap.ICreate"},"responseBody":{"description":"The newly created channel category mapping record.","typeName":"IShoppingMallAiChannelCategoryMap"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"This operation updates an existing mapping between a channel-specific category and a global category by map ID. Only administrators can execute it. The shopping_mall_ai_channel_category_maps table's entry is modified, allowing correction of linkages, change of priorities, or update of mapping notes. Proper reference validation is enforced. All update actions are logged for compliance, and audit trails are maintained per platform requirements.","path":"/shoppingMallAi/administrator/channelCategoryMaps/{channelCategoryMapId}","method":"put","description":"Update a channel category mapping. Admin only. The mapping is identified by its unique map ID, and allowed fields for update include new target category associations, display priority, and other business meta fields if the system design allows. This keeps navigation/category linkage compliant with evolving channel requirements. Errors are returned for invalid references, integrity violations, or attempts to duplicate existing mappings. Operations are fully auditable and update history is preserved for review.","summary":"Update mapping between channel and global categories (shopping_mall_ai_channel_category_maps table).","parameters":[{"name":"channelCategoryMapId","description":"Unique identifier of the channel-category map to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Mapping update payload; only specified fields are changed if valid.","typeName":"IShoppingMallAiChannelCategoryMap.IUpdate"},"responseBody":{"description":"The updated channel category mapping record.","typeName":"IShoppingMallAiChannelCategoryMap"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This operation deletes (soft deletes) an existing mapping between a channel-specific category and a global category, by map ID. It modifies the shopping_mall_ai_channel_category_maps table, marking the mapping entry as deleted (with timestamp). Only administrators can delete these mappings. Deletion is prevented where the mapping is in critical use; all actions are logged for traceability and compliance.","path":"/shoppingMallAi/administrator/channelCategoryMaps/{channelCategoryMapId}","method":"delete","description":"Delete a channel category mapping by ID. This admin-only operation marks the mapping as deleted via a deleted_at timestamp but retains the row for audit/compliance. Before deletion, assesses mapping impact and reference use (product/category trees). Returns errors if references block the soft delete action. Operations are fully auditable and detected deletions affect platform category navigation/rendering where mapping is removed.","summary":"Soft-delete a channel category mapping (shopping_mall_ai_channel_category_maps table).","parameters":[{"name":"channelCategoryMapId","description":"Unique identifier of the channel-category map to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"This operation lists and searches all configuration key-value pairs for platform-wide or scoped system settings in the shoppingMallAi platform. It operates on the shopping_mall_ai_configurations table and supports advanced filtering, sorting, and pagination based on config scope, key, or value. This is a core administrative audit and system maintenance endpoint for assessing active/inactive, deprecated, and rollout configuration options.","path":"/shoppingMallAi/administrator/configurations","method":"patch","description":"Search and list configuration entries. Administrator only. Request body allows filtering by scope, key, status, and supports paginated/sorted response outcomes. Returns configuration metadata for business rule, system audit, and rollout control. Errors include out-of-range pagination/parameters. Related endpoints include configuration detail, creation, update, and deletion APIs. Audit trails are maintained for all configuration queries/views. Sensitive configuration values may be masked in the response depending on policy.","summary":"Search and list configuration settings (shopping_mall_ai_configurations table) for platform/system management.","parameters":[],"requestBody":{"description":"Search/filter options and pagination for configurations.","typeName":"IShoppingMallAiConfiguration.IRequest"},"responseBody":{"description":"Paginated list of configuration entries matching criteria.","typeName":"IPageIShoppingMallAiConfiguration"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves a detailed configuration entry by unique configuration ID from the shopping_mall_ai_configurations table. Admin-only. Returns all business key/value/meta fields, allowing full inspection of current platform settings, rollout toggles, and audit data. Validates existence, status, and access authorization. Fully auditable for compliance.","path":"/shoppingMallAi/administrator/configurations/{configurationId}","method":"get","description":"Get details of a configuration entry. Admin only. Requires a valid configuration ID. Response includes all config attributes: scope, key, value, description, is_active, timestamps, and any additional meta fields. Errors returned for invalid or unauthorized access. Supports audit trail integration and configuration history tracking for platform compliance.","summary":"Retrieve detailed configuration by ID (shopping_mall_ai_configurations table).","parameters":[{"name":"configurationId","description":"Unique ID of the configuration entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration record for the provided ID.","typeName":"IShoppingMallAiConfiguration"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"This operation creates a new configuration key-value entry in the shopping_mall_ai_configurations table. Only admins can create these entries. Used for system/business logic flags, toggles, and cross-domain platform controls. Enforces uniqueness per scope+key and validates all provided values. Returns the full created configuration object for platform audit and immediate use.","path":"/shoppingMallAi/administrator/configurations","method":"post","description":"Create a new configuration entry (system-wide or scoped). Admin only. Request validates the scope, key, and value according to platform policy (unique within scope) and sets required optional fields (description, is_active). Supported for system configuration, module/platform toggles, and business logic. Snapshots and logs are created for audit trail. Errors returned for duplicates or policy constraint violations. On success, returns the full configuration entry detail for immediate business or technical rollout.","summary":"Create new configuration (shopping_mall_ai_configurations table) for system/platform management.","parameters":[],"requestBody":{"description":"Payload for new configuration creation: scope, key, value, and meta fields.","typeName":"IShoppingMallAiConfiguration.ICreate"},"responseBody":{"description":"The newly created configuration record.","typeName":"IShoppingMallAiConfiguration"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"This operation updates an existing configuration entry identified by unique configuration ID in the shopping_mall_ai_configurations table. Admin only. Updates allowed fields such as value, description, and active flag (scope/key are updatable only based on system policy). Ensures all business constraints and audit logs are enforced. Provides updated configuration on success. All updates are tracked for rollback/audit. Errors returned for invalid IDs, integrity failures or constraint violations.","path":"/shoppingMallAi/administrator/configurations/{configurationId}","method":"put","description":"Update an existing configuration entry (by ID). Admin only. The request allows modifying value, description, activation status, and possibly scope/key as allowed by business policy. All changes are validated for system/business logic and uniqueness. Changes to critical configuration (system toggles, compliance rules) are snapshotted and tracked for rollback and audit review. Returns the updated configuration entity. Errors include invalid ID or attempting to change a unique constraint-protected value (scope+key duplicate).","summary":"Update configuration (shopping_mall_ai_configurations table) for system/platform management by ID.","parameters":[{"name":"configurationId","description":"Unique ID of the configuration entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the configuration entity; only supplied attributes are changed.","typeName":"IShoppingMallAiConfiguration.IUpdate"},"responseBody":{"description":"The updated configuration record.","typeName":"IShoppingMallAiConfiguration"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This API endpoint performs a hard delete of a system configuration entry in the shopping_mall_ai_configurations table. It is used by administrators to permanently remove configuration options from the platform. The operation enforces referential integrity and business rules: once deleted, the configuration's settings and any associated feature toggles or cross-domain dependencies will be permanently lost, except as retained in audit logs. No soft deletion is performed; the configuration is physically erased if the deleted_at field is not utilized, making this a non-reversible operation. Only users with the administrator role have permissions to use this endpoint, and all actions are logged for audit purposes.","description":"Delete a configuration record from the shopping_mall_ai_configurations table. This operation is strictly reserved for administrator use as it permanently removes the record and its effects from the system's operational scope.\n\nReferential data such as relationships to feature toggles, system domain rules, and observed configuration effects are irrecoverable after deletion, except through any separate audit trail completion. The operation validates the existence of the configurationId and ensures no orphan data patterns. Security is paramount: only authenticated administrators may invoke this, and every call is immutably recorded for compliance.\n\nIf an attempt is made to erase a configuration that controls fundamental system features, the API should clearly reject and return actionable error details, encouraging administrators to review dependencies and apply an orderly decommissioning process rather than unplanned deletion.","summary":"Permanently delete a configuration from shopping_mall_ai_configurations table.","path":"/shoppingMallAi/administrator/configurations/{configurationId}","method":"delete","parameters":[{"name":"configurationId","description":"Unique identifier of the system configuration to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Retrieve a filtered, paginated list of customers from the shopping_mall_ai_customers table with support for advanced search and sorting. This API is essential for administrators to conduct audits, manage user accounts, perform compliance checks, or support operational monitoring. The endpoint supports pagination, fuzzy searching by name/email/nickname, filtering by account status (e.g., active, suspended, withdrawn), and sorting by registration date or last login.","description":"This operation fetches a paginated, filtered, and sorted list of customer records from the platform database. It allows administrators to query customers based on a comprehensive set of criteria, including email, nickname, account status, registration period, and verification flags.\n\nResults can be sorted and paginated according to request preferences, supporting operational dashboard building, compliance investigations, and business intelligence use cases. Sensitive information is masked or access is restricted according to the requesting administrator's authority, ensuring privacy and legal compliance.\n\nMisuse or excessive querying may trigger audit alerts or require additional verification steps. The operation aligns closely with the business mandate for granular, role-based user management.","summary":"Search, filter, and paginate shopping_mall_ai_customers user list.","path":"/shoppingMallAi/administrator/customers","method":"patch","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for searching customers.","typeName":"IShoppingMallAiCustomer.IRequest"},"responseBody":{"description":"Paginated customer user list matching the search and filter criteria.","typeName":"IPageIShoppingMallAiCustomer"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Get the full details for a specific customer from the shopping_mall_ai_customers table using their unique customerId. This endpoint retrieves all non-sensitive customer fields for the purpose of operational support or account management. It is used by administrators to inspect, monitor, or provide support for individual user accounts. Sensitive fields like password_hash are never returned. The operation requires strict permissions.","description":"Retrieve the complete profile of a customer by their unique customerId. This includes registration data (email, nickname), account status, verification flags (is_email_verified, is_mobile_verified), contact details (if permitted), and last login. Sensitive authentication data such as password hashes or OAuth tokens are never exposed.\n\nAdministrators can use this API to monitor customer compliance, investigate support issues, or perform targeted audits. Access to personal data is governed by the administrator's permission scope and all actions are auditable.\n\nIf the specified customerId does not exist or the user no longer has an active account, the API should return a not found response or a clear error indicating account state.","summary":"Retrieve detailed profile for a specific customer by customerId.","path":"/shoppingMallAi/administrator/customers/{customerId}","method":"get","parameters":[{"name":"customerId","description":"Unique identifier of the shopping_mall_ai_customer to be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the specified customer account.","typeName":"IShoppingMallAiCustomer"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Update profile information for an existing customer in the shopping_mall_ai_customers table based on the unique customerId. Administrators can edit non-sensitive fields such as nickname, status, and verification flags as allowed by business rules. Changes to email/mobile may require additional verification workflows. All changes are snapshotted for audit and rollback.","description":"Update a customer's account profile and status by referencing their unique customerId. Administrators can modify editable fields such as nickname, status (e.g., active, suspended), and verification flags. Policy may require that changes to email or mobile trigger re-verification or other compliance checks.\n\nAll updates are snapshotted before/after for compliance and audit trails. Unauthorized, sensitive, or irreversible changes are prohibited. Any attempt to update fields outside administrator scope or to change immutable fields (e.g., password_hash) will be rejected with a clear error message.\n\nThe operation ensures that customer data remains consistent and compliant with all role and regulatory business rules.","summary":"Modify customer profile/account details for a given customerId.","path":"/shoppingMallAi/administrator/customers/{customerId}","method":"put","parameters":[{"name":"customerId","description":"Unique identifier of the customer to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Customer account update information (nickname, status, verification flags, etc.)","typeName":"IShoppingMallAiCustomer.IUpdate"},"responseBody":{"description":"Updated details for the specified customer account.","typeName":"IShoppingMallAiCustomer"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Erase (hard or soft delete based on deleted_at presence) a customer record from the shopping_mall_ai_customers table given their unique customerId. If soft delete is supported (deleted_at present), the record will be logically deleted and personal data may be anonymized for compliance. All deletions are snapshotted for audit and future legal evidence. This operation is restricted to administrators only.","description":"Permanently or logically delete a customer account for a given customerId. When the deleted_at field is present in the database schema, a logical (soft) deletion is performed and personal fields are anonymized if required by business policy. If no soft delete field exists, the customer is hard-deleted from the platform.\n\nOnly users with administrator privilege may invoke this API, and deletion is strictly audited for compliance, dispute handling, and regulatory tracking. Attempts to delete an account that does not exist, is already deleted, or is protected by business policy will return a detailed error.\n\nThis operation should trigger a snapshot of the customer record state for evidence and downstream compliance—ensuring long-term audit trails and rollback options if permissible by policy.","summary":"Delete (hard/soft) a specific customer account by customerId.","path":"/shoppingMallAi/administrator/customers/{customerId}","method":"delete","parameters":[{"name":"customerId","description":"Unique identifier of the customer account to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Get a filtered, sorted, and paginated list of sellers from the shopping_mall_ai_sellers table. Used mainly by administrators for compliance, onboarding management, support investigations, or vendor segmentation. Supports a variety of search modes: by email, display name, account status (active, pending, suspended, withdrawn, etc.), verification status, registration period, and other relevant fields.","description":"Retrieve a paginated, search-filtered, and sorted list of seller accounts from the shopping_mall_ai_sellers table. Filters include display name, status (active, pending, verified, suspended, withdrawn), onboarding date, contact information, and business registration details.\n\nPurpose is for administrators to audit marketplace integrity, review onboarding pipelines, or facilitate bulk actions. Sellers flagged by compliance or legal/procedural processes may be filtered or require extra verification. Sensitive data is available only to users with sufficient privileges—others receive masked or redacted details.\n\nUsage patterns are rate-limited and logged for compliance, protecting against bulk extraction or misuse. Extensive audit trails are enabled for each search operation.","summary":"Search, filter, and paginate seller accounts for marketplace administration.","path":"/shoppingMallAi/administrator/sellers","method":"patch","parameters":[],"requestBody":{"description":"Search, filter, and pagination options for querying sellers.","typeName":"IShoppingMallAiSeller.IRequest"},"responseBody":{"description":"Paginated result set of sellers matching the criteria.","typeName":"IPageIShoppingMallAiSeller"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Get all available profile, business, and compliance details for a specific seller by their sellerId. The API retrieves attributes from shopping_mall_ai_sellers, including both identity and business registration fields, but never exposes sensitive secrets such as password_hash. Provides all permitted info for support, audit, and onboarding oversight by authorized administrators.","description":"Retrieve the complete record for a seller using their unique sellerId. Returns both general fields (display_name, business_name, status, is_verified, business_registration_number, email, mobile, etc.) and status details. Does not include confidential authentication data.\n\nAdministrators can use this information to verify seller credentials, manage onboarding, enforce compliance policies, or conduct operational support. Attempts to access records that do not exist or are restricted by business rules yield actionable errors.\n\nAll access is transparently logged for audit and administrative accountability. Successful queries must obey all privacy and business logic constraints as reflected in administrator permission sets.","summary":"Get full seller profile, business, and status for a sellerId.","path":"/shoppingMallAi/administrator/sellers/{sellerId}","method":"get","parameters":[{"name":"sellerId","description":"UUID identifying the target seller account.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record for the specified seller account.","typeName":"IShoppingMallAiSeller"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Update editable fields (display name, business status, verification flag, contact, etc.) for an existing seller in the shopping_mall_ai_sellers table, identified by sellerId. This enables administrators to make compliance or support-driven changes to seller records. All changes are snapshotted for audit trails. Does not permit modifications to protected credentials or history fields.","description":"Modify a seller record identified by sellerId. Permitted modifications include display name, contact info, status (active, pending, withdrawn, suspended, etc.), and is_verified flag. Sensitive or immutable fields (business_registration_number, password_hash) may not be edited except as allowed by privileged administrators, and any attempted update outside permitted policy returns a detailed error.\n\nAll updates are snapshotted (before/after) for legal compliance and audit history. Administrator privilege is required to invoke this API; every call is immutable-logged for traceability. Updates that affect business policies or regulatory info may trigger workflows for re-verification or compliance checks.","summary":"Update editable seller profile fields by sellerId.","path":"/shoppingMallAi/administrator/sellers/{sellerId}","method":"put","parameters":[{"name":"sellerId","description":"Unique identifier of the seller to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload for seller profile/status update.","typeName":"IShoppingMallAiSeller.IUpdate"},"responseBody":{"description":"Updated profile and status of the specified seller account.","typeName":"IShoppingMallAiSeller"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Delete (hard or soft, reflecting deleted_at implementation) a seller from the shopping_mall_ai_sellers table given their sellerId. Supports logical deletion if schema includes deleted_at; otherwise, record is fully erased. Intended to administratively remove, anonymize, or disable a seller who is no longer permitted to participate in the marketplace. All such actions are logged and snapshotted for audit and legal evidence.","description":"Erase a seller record, which disables or removes the seller account attached to a given sellerId. If soft-deletion is supported by the schema (using deleted_at), logical deletion and business field anonymization is performed; otherwise the record is hard deleted. Deletions are strictly permissioned to administrator roles and all erasure events are snapshotted for policy/legal retention.\n\nAny attempted deletion of non-existent or protected (regulatory/audit) records is rejected with descriptive, actionable feedback. Downstream cleanup or anonymization of associated business data (listings, orders, etc.) is performed according to system business policies.","summary":"Hard or soft (anonymizing) delete seller account by sellerId.","path":"/shoppingMallAi/administrator/sellers/{sellerId}","method":"delete","parameters":[{"name":"sellerId","description":"UUID of the seller to erase from the platform.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Query all system-wide administrator accounts with filtering, sorting, and pagination capabilities from shopping_mall_ai_administrators table. This endpoint supports operational management, compliance, and access auditing. Administrators can search by display name, email, system status (active, suspended, withdrawn, banned), or role (e.g. superadmin, support) to enforce business controls or perform reviews.","description":"Retrieve a full list of all administrator accounts in the platform system, matching optional filtering on display name, email, status, or role. Paginated, searchable, and sortable per request preferences, supporting operational reviews, role assignment management, and incident/audit investigations. All returned administrator details exclude authentication secrets. Advanced privacy or security policies are enforced on returned data according to calling user authority; only permitted data is shared for auditing, monitoring, or access review activities.\n\nUsage and all calls are recorded for audit and operational analytics. Results returned will reflect current system state, subject to pagination, status filtering, and search preferences provided in the request body.","summary":"List, search, paginate, and filter administrator accounts.","path":"/shoppingMallAi/administrator/administrators","method":"patch","parameters":[],"requestBody":{"description":"Filtering, search keywords, pagination, and sorting options for administrators.","typeName":"IShoppingMallAiAdministrator.IRequest"},"responseBody":{"description":"Paginated result of administrators meeting requested criteria.","typeName":"IPageIShoppingMallAiAdministrator"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve detailed administrator account information for a specific administratorId from the shopping_mall_ai_administrators table. Returns permissioned fields and excludes authentication secrets such as password_hash. Enables targeted account management or support review actions and account verification.","description":"Get all current, non-secret profile data for an administrator by their administratorId. Exposes display name, email (where permitted), assigned role, status (active, suspended, withdrawn, banned), and relevant account audit fields for compliance context.\n\nUse cases include auditing, incident review, permissions checks, and operational troubleshooting. The operation returns a not found or access error for IDs that do not exist or are outside the permission scope. All access is logged; any sensitive or privileged fields are omitted according to calling administrator role and system policy.\n\nThis endpoint is strictly limited to administrator users for compliance and platform security reasons.","summary":"Fetch detailed administrator profile by unique identifier.","path":"/shoppingMallAi/administrator/administrators/{administratorId}","method":"get","parameters":[{"name":"administratorId","description":"Unique UUID referencing the administrator account to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full profile for the referenced administrator.","typeName":"IShoppingMallAiAdministrator"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Update editable fields on a specified administrator record in shopping_mall_ai_administrators by administratorId. Administrators with privilege may change profile details, status, display_name, or role (within policy), for access management, operational control, or audit purposes. All changes are snapshotted for compliance evidence.","description":"Modify administrator profile, role, or status fields as permitted by the business role matrix. Possible editable fields include display name, system status (active, suspended, withdrawn, banned), and role. Direct manipulation of authentication secrets is not permitted, and any attempt to update restricted fields will result in an error. Updates to role or status may trigger additional compliance processes (multi-admin approval, incident log). All changes are audited, and the API is restricted to privileged administrator users only. Strict compliance and operational traceability are enforced.","summary":"Update role, profile/status of existing administrator by administratorId.","path":"/shoppingMallAi/administrator/administrators/{administratorId}","method":"put","parameters":[{"name":"administratorId","description":"Unique identifier for the administrator account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Administrator account profile/status/role update details.","typeName":"IShoppingMallAiAdministrator.IUpdate"},"responseBody":{"description":"Updated administrator account profile and authority information.","typeName":"IShoppingMallAiAdministrator"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This operation performs a hard deletion of an administrator record from the shopping mall AI platform, operating directly on the shopping_mall_ai_administrators table. The administrator entity represents platform superusers or operators, each uniquely identified by a UUID. Deletion permanently removes the record, as there is no soft deletion timestamp field in the schema. This operation requires admin privileges and must ensure that the administrator is not the last remaining active account for operational compliance. All related audit trails and moderation logs referencing this administrator remain intact for legal and compliance history.","path":"/shoppingMallAi/administrator/administrators/{administratorId}","method":"delete","description":"Delete an administrator by UUID, permanently removing the administrator record from the platform. The operation is not reversible and is subject to business rules preventing deletion of the last active administrator. Uses the shopping_mall_ai_administrators table, which manages superuser credentials and roles. The absence of a soft-deletion mechanism means this is a hard delete. Direct references in related logs will persist for compliance. Error handling will block removal if the target administrator is referenced as the sole holder of platform control. Only other administrators or system processes with proper authority may invoke this endpoint.","summary":"Delete an administrator from the shopping_mall_ai_administrators table (hard delete).","parameters":[{"name":"administratorId","description":"Unique identifier of the administrator to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"This operation enables advanced, paginated search and filtering of attachment records, covering all business files, images, and uploads stored in the shopping_mall_ai_attachments table. It supports complex queries on metadata, uploader, business domain, legal hold flags, and retention policies. Results are returned in a paginated form and can be sorted or filtered by various attachment criteria for administrative, compliance, audit, or business linkage scenario.","path":"/shoppingMallAi/administrator/attachments","method":"patch","description":"Retrieve a list of attachments with support for pagination, sorting, and multi-criteria filtering. The attachments entity records metadata for all uploaded files, including business usage context, uploader, retention and legal status, and access control. This operation is essential for administrative oversight, audit defensibility, legal discovery, and business process integration. Results include attachment summaries optimized for grid or list display. Access is generally restricted to administrators and business roles with audit, compliance, or operational scope.","summary":"Advanced search and retrieval of attachments with filtering and pagination.","parameters":[],"requestBody":{"description":"Complex query, search, and pagination criteria for attachment listing.","typeName":"IShoppingMallAiAttachment.IRequest"},"responseBody":{"description":"Paginated response with a list of attachment summaries matching search criteria.","typeName":"IPageIShoppingMallAiAttachment.ISummary"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves detailed metadata information about a specific attachment record by its UUID, based on the shopping_mall_ai_attachments table. It provides audit data on the file, uploader, business linkage context, and legal compliance status, but does not deliver the file itself. Used for audit inspection, compliance retrieval, and operational business logic. The operation ensures user has sufficient privilege to access attachment details given role-based ACL and business domain rules.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}","method":"get","description":"Return full metadata and business context for a specific attachment, including uploader, file size, domain, access control, retention policy, and legal flags. The attachment entity tracks file metadata, audit information, and links to version history. Retrieval is subject to ACL and business domain validation. Does not provide the raw file for download, but supports compliance, audit, and reference for cross-module integration. All access events must be logged for evidence.","summary":"Retrieve details of a specific attachment by its UUID from attachments table.","parameters":[{"name":"attachmentId","description":"Unique UUID of the target attachment record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Metadata and detail for the attachment record.","typeName":"IShoppingMallAiAttachment"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"This operation creates a new attachment record in the shopping_mall_ai_attachments table, registering metadata and file control attributes for an uploaded business asset. It captures file identification, business domain, access control, uploader, legal/retention status, and initial versioning. Actual file storage and URI generation are handled by the storage backend; this operation is for record management and metadata registration, not raw file transfer. Only properly authenticated administrators, sellers, or customers may create attachments, typically via secure internal upload workflows or business process automation.","path":"/shoppingMallAi/administrator/attachments","method":"post","description":"Register metadata for a newly uploaded attachment, including file name, size, domain context (e.g., product image, evidence), storage URI, uploader identity, retention/ACL flags, and legal compliance information. Links to the appropriate user (customer, seller, or administrator) depending on upload role, and initializes version history. The operation does not support direct file uploading but expects a valid file URI already written to storage as precondition. Used for all file/attachment management across catalog, compliance, evidence, and business documentation in the platform.","summary":"Register a new attachment's metadata in shopping_mall_ai_attachments.","parameters":[],"requestBody":{"description":"Metadata for the attachment to register (file already uploaded).","typeName":"IShoppingMallAiAttachment.ICreate"},"responseBody":{"description":"Details of the created attachment record.","typeName":"IShoppingMallAiAttachment"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"This operation creates a new attachment record in the shopping_mall_ai_attachments table, registering metadata and file control attributes for an uploaded business asset. It captures file identification, business domain, access control, uploader, legal/retention status, and initial versioning. Actual file storage and URI generation are handled by the storage backend; this operation is for record management and metadata registration, not raw file transfer. Only properly authenticated administrators, sellers, or customers may create attachments, typically via secure internal upload workflows or business process automation.","path":"/shoppingMallAi/seller/attachments","method":"post","description":"Register metadata for a newly uploaded attachment, including file name, size, domain context (e.g., product image, evidence), storage URI, uploader identity, retention/ACL flags, and legal compliance information. Links to the appropriate user (customer, seller, or administrator) depending on upload role, and initializes version history. The operation does not support direct file uploading but expects a valid file URI already written to storage as precondition. Used for all file/attachment management across catalog, compliance, evidence, and business documentation in the platform.","summary":"Register a new attachment's metadata in shopping_mall_ai_attachments.","parameters":[],"requestBody":{"description":"Metadata for the attachment to register (file already uploaded).","typeName":"IShoppingMallAiAttachment.ICreate"},"responseBody":{"description":"Details of the created attachment record.","typeName":"IShoppingMallAiAttachment"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"This operation updates an existing attachment's metadata in the shopping_mall_ai_attachments table. Modifiable fields include business_domain, access_acl, legal_hold, retention_policy_code, but not physical file storage attributes. Use cases include adjusting compliance status, updating business linkage, and managing access controls. Strict audit and versioning of each change is required to support evidence tracking and chain-of-custody compliance. Actual file content modifications must use the attachment version endpoint, not this general update.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}","method":"put","description":"Update metadata and business flags for an attachment by UUID. Fields includable for update are the business usage domain, access control, legal retention status, and related compliance flags. The operation directly updates the attachment's record, with all changes tracked in immutable audit logs via a business rule. Used for compliance management, business process corrections, or role-based access ACL updates. File content changes require different endpoint for version upload. Operation validation includes verifying attachment existence and user permission for update based on attachment's current domain and uploader linkage.","summary":"Update attachment metadata (not file) for a given attachment by UUID.","parameters":[{"name":"attachmentId","description":"UUID for the attachment record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated attachment metadata (ACL, compliance flags, business domain).","typeName":"IShoppingMallAiAttachment.IUpdate"},"responseBody":{"description":"Updated details for the attachment record.","typeName":"IShoppingMallAiAttachment"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This operation deletes (soft delete) an attachment record in shopping_mall_ai_attachments by setting deleted=true and deleted_at. It does not remove the physical file immediately, supporting business/audit recovery and evidence chain-of-custody. Lifecycle and legal flags are enforced to block deletion if the file is under legal hold. The operation is allowed for administrators only. A deleted attachment is excluded from the search/index. Changes are tracked in audit logs for compliance.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}","method":"delete","description":"Soft delete an attachment by setting deleted=true and marking deleted_at. This retains the file record for audit and regulatory purposes, and does not immediately clear the storage asset (CDN/persistent storage). Legal hold or compliance retention is checked before allowing operation; if present, deletion is blocked and an audit log is created. The file is no longer returned in regular searches but can be restored under business process. Only administrators are allowed to perform this operation.","summary":"Soft delete an attachment (not raw file removal) by attachment UUID.","parameters":[{"name":"attachmentId","description":"UUID of the target attachment record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Performs advanced paginated search and filter queries to list all versions of a given attachment (by attachmentId) using shopping_mall_ai_attachment_versions. Supports audit trails, compliance review, and change/version analysis. Enables administrators or business auditors to review full modification and custody chain for an asset, and ensures lifecycle history is complete for legal evidence. Filters allow searching by metadata, actor, version number, or status, with results presented in paginated summary format.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/versions","method":"patch","description":"Retrieve a paginated list of all versions for a specific attachment, with full history for chain-of-custody, compliance, legal evidence, and audit. The endpoint allows searching and filtering on version number, modifier, timestamps, and deletion status. All version events are immutable and reflect the forensic history of the file asset. Results support investigative analysis for forensic audit and business recovery scenarios. Access restricted to administrators or business process owners with appropriate permissions.","summary":"Search and retrieve paginated list of attachment version history for an attachment.","parameters":[{"name":"attachmentId","description":"UUID of the base attachment whose versions are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search parameters for attachment version records paging, filtering, actor, etc.","typeName":"IShoppingMallAiAttachmentVersion.IRequest"},"responseBody":{"description":"Paginated version history result for the attachment.","typeName":"IPageIShoppingMallAiAttachmentVersion.ISummary"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieves full metadata for a specific version of an attachment (attachment_versions table) by attachmentId and versionId. Supplies accountability detail including file URI, size, actor, diff comment, and legal compliance flags at the version time. This operation is central for forensic recovery, incident event inspection, and legal evidence traceability, and is particularly important for audit or compliance reviews. Direct file retrieval is not covered: only metadata and version status is returned.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/versions/{versionId}","method":"get","description":"Retrieve metadata and chain-of-custody information for a particular attachment version, including file URI, size, creator, timestamps, diff note, and deletion status. Intended for compliance, incident, and forensic audit situations. All accesses are logged for evidence and legal review. Attaches to business or legal event workflows for document management and regulatory traceability. Only authorized professionals (admin, compliance, or business process auditor) with appropriate access may use this as per attachment context ACL.","summary":"Get metadata/details for a specific attachment version by versionId (and attachmentId).","parameters":[{"name":"attachmentId","description":"UUID of the parent attachment of the version.","schema":{"type":"string","format":"uuid"}},{"name":"versionId","description":"UUID of the attachment version to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Attachment version metadata and detail for forensics and audit.","typeName":"IShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Register a newly uploaded file as a new version of an existing attachment (attachment_versions table). Used for overwrites, legal redaction, or incremental business process update, while preserving prior chain-of-custody. Requires providing storage URI, size, and modifier identity. Versioned asset is attached to the given attachmentId. Does not change the main (latest) attachment metadata directly; only version records and audit trail are updated. Only administrators or original file owners may create versions. Raw file upload is out of scope; assume the file is already present in storage.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/versions","method":"post","description":"Create a new version record for a given attachment, updating history and chain-of-custody for audit, legal, or incremental content changes. The API only registers the new version metadata: modifier, business context, file URI, and any diff comment or legal status changes. Prior versions are preserved, deleted status is set as required for legal or regulatory workflow. All changes are tracked for evidence and compliance. This operation does not deliver or serve files, only updates metadata/state.","summary":"Register a new version of an attachment in the version history table.","parameters":[{"name":"attachmentId","description":"UUID of the attached file to version.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New version metadata, including file URI, size, modifier, diff comment, etc.","typeName":"IShoppingMallAiAttachmentVersion.ICreate"},"responseBody":{"description":"Detail of the newly created attachment version record.","typeName":"IShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update metadata about a prior version of an attachment (attachment_versions table), typically for correcting diff comment, updating deleted flag, or compliance status note. Physical file content cannot be altered. All modifications are strictly logged and prior state is immutable for evidence. Used for regulatory note corrections, redactions (logical), or evidence status changes by authorized actors only. Parent attachment must exist and be accessible to the actor.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/versions/{versionId}","method":"put","description":"Update metadata fields on an attachment version—such as diff_comment, deleted flag (for redaction), or role-compliance notes. Changes are audited and must not alter file URI or contents once a version is sealed. Actor must have permission for the attachment and version in question. Used only for business, legal, correction, or compliance workflows as dictated by strict audit process. Parent attachment reference remains unchanged; only the version's record is altered.","summary":"Update metadata for an attachment version (diff_comment, compliance info, deletion).","parameters":[{"name":"attachmentId","description":"UUID for the parent attachment record.","schema":{"type":"string","format":"uuid"}},{"name":"versionId","description":"UUID for the attachment version record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated metadata fields for the version record (no file content change).","typeName":"IShoppingMallAiAttachmentVersion.IUpdate"},"responseBody":{"description":"Updated details of the attachment version record.","typeName":"IShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Permanently deletes a specific version of an attachment from the attachment_versions table (hard delete), based on versionId/attachmentId combination. This operation is destructive: history for this version is lost, with business logs updated accordingly. Compliance and evidence chain must be checked—action is not permitted if version is under legal hold, is the only version remaining, or business rules prohibit erasure due to regulatory retention policy. Only administrators with appropriate rights may perform the operation. Error/block if hard delete is not legally permitted.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/versions/{versionId}","method":"delete","description":"Hard delete an attachment version record by UUID, which permanently removes the version record and breaks the chain-of-custody for forensic analysis. Compliance and retention rules are checked before allowing deletion, with business rules enforcing minimum required history. Operation is strictly limited, requiring legal justification in audit logs. Not permitted if legal hold is active or deletion would violate business/industry compliance requirements.","summary":"Permanently/hard delete a specific version of an attachment by versionId (and attachmentId).","parameters":[{"name":"attachmentId","description":"UUID of the parent attachment whose version is to be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"versionId","description":"UUID of the attachment version to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Performs a paginated, filtered search for business links associated with a particular attachment. This operation reads from the shopping_mall_ai_attachment_business_links table, supporting investigative reporting, audit trails, or cross-domain evidence management. Retrieval is filterable by business domain (e.g., product, order, review), user, or event context, supporting compliance scenarios that demand comprehensive linkage review for a file. Results are formatted for administrative and audit-facing grid views. Access is controlled by strict authorization policies based on business use case.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/businessLinks","method":"patch","description":"Search and return all business object linkages for a specified attachment. Business links are linkage records which bind the attachment to specific business domains—such as products, orders, reviews, seller docs, compliance events, or evidence chains. Full results provide both link context and business identifiers. Used for audit, chain-of-custody tracing, and general cross-domain evidence management in business process workflows. Access is limited to business process owners or administrators for compliance and integrity enforcement.","summary":"Paginated search query for an attachment's business links (attachment_business_links table).","parameters":[{"name":"attachmentId","description":"UUID of the attachment for which to retrieve business links.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query, filter, and pagination config for business link search.","typeName":"IShoppingMallAiAttachmentBusinessLink.IRequest"},"responseBody":{"description":"Paginated list of business link records for the attachment.","typeName":"IPageIShoppingMallAiAttachmentBusinessLink.ISummary"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves a specific business link (attachment-business record relationship) by its unique ID for a given attachment. It directly correlates to the shopping_mall_ai_attachment_business_links table, which links attachments to business entities such as products, orders, or evidence. The call allows detailed inspection of the metadata, ownership, business domain linkage, and audit information associated with a particular attachment. This endpoint is essential for permission checks, legal investigations, and compliance audits, as well as for UI display workflows where users or administrators wish to understand a file's business relationships.","description":"Retrieve a single attachment-to-business link entity by its ID, providing complete metadata for permission checks, business logic, audit, or display. This operation references the shopping_mall_ai_attachment_business_links table, which maintains all file-to-business domain associations across the platform. The attachmentId parameter is validated against the shopping_mall_ai_attachments table to ensure the link is being accessed in the proper context. Security is critical: only authorized users (attachment owner or privileged admin) can access this record, with all access logged for compliance.\n\nThis endpoint enables admins, sellers, or system integrations to verify, for example, that a given image is correctly bound to a product, order, review, or other business object. It supports evidence chains for regulatory compliance, legal hold workflows, and helps troubleshoot data lineage or access problems. The response details all core properties (ID, attachment, target domain, target ID, link author, creation time) and any linkage metadata.","summary":"Get details for a specific attachment-business link mapping by linkId and attachmentId.","path":"/shoppingMallAi/customer/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"get","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the target file.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping record between the attachment and a business entity object.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single attachment-business link association, including metadata about the relationship, business domain, author, and timestamps.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"This operation retrieves a specific business link (attachment-business record relationship) by its unique ID for a given attachment. It directly correlates to the shopping_mall_ai_attachment_business_links table, which links attachments to business entities such as products, orders, or evidence. The call allows detailed inspection of the metadata, ownership, business domain linkage, and audit information associated with a particular attachment. This endpoint is essential for permission checks, legal investigations, and compliance audits, as well as for UI display workflows where users or administrators wish to understand a file's business relationships.","description":"Retrieve a single attachment-to-business link entity by its ID, providing complete metadata for permission checks, business logic, audit, or display. This operation references the shopping_mall_ai_attachment_business_links table, which maintains all file-to-business domain associations across the platform. The attachmentId parameter is validated against the shopping_mall_ai_attachments table to ensure the link is being accessed in the proper context. Security is critical: only authorized users (attachment owner or privileged admin) can access this record, with all access logged for compliance.\n\nThis endpoint enables admins, sellers, or system integrations to verify, for example, that a given image is correctly bound to a product, order, review, or other business object. It supports evidence chains for regulatory compliance, legal hold workflows, and helps troubleshoot data lineage or access problems. The response details all core properties (ID, attachment, target domain, target ID, link author, creation time) and any linkage metadata.","summary":"Get details for a specific attachment-business link mapping by linkId and attachmentId.","path":"/shoppingMallAi/seller/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"get","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the target file.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping record between the attachment and a business entity object.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single attachment-business link association, including metadata about the relationship, business domain, author, and timestamps.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"This operation retrieves a specific business link (attachment-business record relationship) by its unique ID for a given attachment. It directly correlates to the shopping_mall_ai_attachment_business_links table, which links attachments to business entities such as products, orders, or evidence. The call allows detailed inspection of the metadata, ownership, business domain linkage, and audit information associated with a particular attachment. This endpoint is essential for permission checks, legal investigations, and compliance audits, as well as for UI display workflows where users or administrators wish to understand a file's business relationships.","description":"Retrieve a single attachment-to-business link entity by its ID, providing complete metadata for permission checks, business logic, audit, or display. This operation references the shopping_mall_ai_attachment_business_links table, which maintains all file-to-business domain associations across the platform. The attachmentId parameter is validated against the shopping_mall_ai_attachments table to ensure the link is being accessed in the proper context. Security is critical: only authorized users (attachment owner or privileged admin) can access this record, with all access logged for compliance.\n\nThis endpoint enables admins, sellers, or system integrations to verify, for example, that a given image is correctly bound to a product, order, review, or other business object. It supports evidence chains for regulatory compliance, legal hold workflows, and helps troubleshoot data lineage or access problems. The response details all core properties (ID, attachment, target domain, target ID, link author, creation time) and any linkage metadata.","summary":"Get details for a specific attachment-business link mapping by linkId and attachmentId.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"get","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the target file.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping record between the attachment and a business entity object.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single attachment-business link association, including metadata about the relationship, business domain, author, and timestamps.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"This operation creates a new business link associating a file attachment with a specific business domain entity (product, order, evidence, etc.). It inserts a record into the shopping_mall_ai_attachment_business_links table, establishing a relationship between an attachment (identified by attachmentId) and its intended target. This is critical for asset management, audit trails, and ensuring all files are properly connected within the business context. The request body must match IShoppingMallAiAttachmentBusinessLink.ICreate to define the target domain, business entity ID, and any additional creation metadata.","description":"Create (link) a new relationship between an existing attachment and a given business entity (product, order, review, etc.), storing the linkage and all required audit metadata in shopping_mall_ai_attachment_business_links. Business domain logic enforces permissions (e.g., seller can only link to own products, admin can link for legal compliance), and linkage uniqueness is enforced per domain/entity. This operation is essential during asset uploads, compliance attachment, or business process (e.g., invoice or review evidence). If the user lacks permission to attach to the target, an explicit error is returned.\n\nUpon success, the platform can allow business workflows, such as displaying the file alongside a product, enabling download on the order page, or preserving evidence for a dispute. All linkage operations are audited.","summary":"Create a new business link (record) between a file attachment and a business entity by attachmentId.","path":"/shoppingMallAi/customer/attachments/{attachmentId}/businessLinks","method":"post","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file being linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details about the business entity to link with the attachment, following business domain permission rules.","typeName":"IShoppingMallAiAttachmentBusinessLink.ICreate"},"responseBody":{"description":"Created attachment-business link with full relationship, author, and linkage metadata.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"customer"},{"specification":"This operation creates a new business link associating a file attachment with a specific business domain entity (product, order, evidence, etc.). It inserts a record into the shopping_mall_ai_attachment_business_links table, establishing a relationship between an attachment (identified by attachmentId) and its intended target. This is critical for asset management, audit trails, and ensuring all files are properly connected within the business context. The request body must match IShoppingMallAiAttachmentBusinessLink.ICreate to define the target domain, business entity ID, and any additional creation metadata.","description":"Create (link) a new relationship between an existing attachment and a given business entity (product, order, review, etc.), storing the linkage and all required audit metadata in shopping_mall_ai_attachment_business_links. Business domain logic enforces permissions (e.g., seller can only link to own products, admin can link for legal compliance), and linkage uniqueness is enforced per domain/entity. This operation is essential during asset uploads, compliance attachment, or business process (e.g., invoice or review evidence). If the user lacks permission to attach to the target, an explicit error is returned.\n\nUpon success, the platform can allow business workflows, such as displaying the file alongside a product, enabling download on the order page, or preserving evidence for a dispute. All linkage operations are audited.","summary":"Create a new business link (record) between a file attachment and a business entity by attachmentId.","path":"/shoppingMallAi/seller/attachments/{attachmentId}/businessLinks","method":"post","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file being linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details about the business entity to link with the attachment, following business domain permission rules.","typeName":"IShoppingMallAiAttachmentBusinessLink.ICreate"},"responseBody":{"description":"Created attachment-business link with full relationship, author, and linkage metadata.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"seller"},{"specification":"This operation creates a new business link associating a file attachment with a specific business domain entity (product, order, evidence, etc.). It inserts a record into the shopping_mall_ai_attachment_business_links table, establishing a relationship between an attachment (identified by attachmentId) and its intended target. This is critical for asset management, audit trails, and ensuring all files are properly connected within the business context. The request body must match IShoppingMallAiAttachmentBusinessLink.ICreate to define the target domain, business entity ID, and any additional creation metadata.","description":"Create (link) a new relationship between an existing attachment and a given business entity (product, order, review, etc.), storing the linkage and all required audit metadata in shopping_mall_ai_attachment_business_links. Business domain logic enforces permissions (e.g., seller can only link to own products, admin can link for legal compliance), and linkage uniqueness is enforced per domain/entity. This operation is essential during asset uploads, compliance attachment, or business process (e.g., invoice or review evidence). If the user lacks permission to attach to the target, an explicit error is returned.\n\nUpon success, the platform can allow business workflows, such as displaying the file alongside a product, enabling download on the order page, or preserving evidence for a dispute. All linkage operations are audited.","summary":"Create a new business link (record) between a file attachment and a business entity by attachmentId.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/businessLinks","method":"post","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file being linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details about the business entity to link with the attachment, following business domain permission rules.","typeName":"IShoppingMallAiAttachmentBusinessLink.ICreate"},"responseBody":{"description":"Created attachment-business link with full relationship, author, and linkage metadata.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update the metadata of an existing attachment-business link record, allowing changes to target domain, business object, or ACL if permitted. This operation directly updates the shopping_mall_ai_attachment_business_links table, maintaining the relationship between a file and its assigned business entity. Strict permission checks enforce that only attachment owners or organization administrators can update business relationships. All updates are versioned for audit purposes.","description":"Modify an existing business link between an attachment and a business entity, allowing for reassignment (e.g., change the linked order/product), update of linking rationale, or adjustment of access controls. Security is strictly enforced: Only users with proper authority can update, and all changes are snapshotted in audit logs. The target record is fetched by businessLinkId and attachmentId (both UUID), ensuring updates only affect the correct relationship. After the update, a new version is stored for evidence and compliance.","summary":"Update the mapping and metadata for an existing attachment-business link by linkId and attachmentId.","path":"/shoppingMallAi/customer/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"put","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file whose link is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the link, following the update schema and business domain rules.","typeName":"IShoppingMallAiAttachmentBusinessLink.IUpdate"},"responseBody":{"description":"Updated business link relationship, including all post-update metadata and link details.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"customer"},{"specification":"Update the metadata of an existing attachment-business link record, allowing changes to target domain, business object, or ACL if permitted. This operation directly updates the shopping_mall_ai_attachment_business_links table, maintaining the relationship between a file and its assigned business entity. Strict permission checks enforce that only attachment owners or organization administrators can update business relationships. All updates are versioned for audit purposes.","description":"Modify an existing business link between an attachment and a business entity, allowing for reassignment (e.g., change the linked order/product), update of linking rationale, or adjustment of access controls. Security is strictly enforced: Only users with proper authority can update, and all changes are snapshotted in audit logs. The target record is fetched by businessLinkId and attachmentId (both UUID), ensuring updates only affect the correct relationship. After the update, a new version is stored for evidence and compliance.","summary":"Update the mapping and metadata for an existing attachment-business link by linkId and attachmentId.","path":"/shoppingMallAi/seller/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"put","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file whose link is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the link, following the update schema and business domain rules.","typeName":"IShoppingMallAiAttachmentBusinessLink.IUpdate"},"responseBody":{"description":"Updated business link relationship, including all post-update metadata and link details.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"seller"},{"specification":"Update the metadata of an existing attachment-business link record, allowing changes to target domain, business object, or ACL if permitted. This operation directly updates the shopping_mall_ai_attachment_business_links table, maintaining the relationship between a file and its assigned business entity. Strict permission checks enforce that only attachment owners or organization administrators can update business relationships. All updates are versioned for audit purposes.","description":"Modify an existing business link between an attachment and a business entity, allowing for reassignment (e.g., change the linked order/product), update of linking rationale, or adjustment of access controls. Security is strictly enforced: Only users with proper authority can update, and all changes are snapshotted in audit logs. The target record is fetched by businessLinkId and attachmentId (both UUID), ensuring updates only affect the correct relationship. After the update, a new version is stored for evidence and compliance.","summary":"Update the mapping and metadata for an existing attachment-business link by linkId and attachmentId.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"put","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file whose link is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the link, following the update schema and business domain rules.","typeName":"IShoppingMallAiAttachmentBusinessLink.IUpdate"},"responseBody":{"description":"Updated business link relationship, including all post-update metadata and link details.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Erase (delete) a business link between an attachment and a business object by its unique businessLinkId and parent attachmentId. Deletes the record from shopping_mall_ai_attachment_business_links, breaking the association for audit or access reasons. The operation may be restricted to attachment owners, administrators, or as contextually required by legal/business rules. Deletion is typically logical/soft, supporting audit traceability and compliance retention requirements.","description":"Erase an existing attachment-business relationship. This is used when an attachment should no longer be displayed, downloaded, or considered part of the business entity's evidence, product, or documentation. This deletion does not remove the attachment itself, only the business link record. The system applies strict permission rules (owner/admin only) and all actions are retained in the audit log for compliance. If business or legal retention policy applies, link is soft-deleted, so it can be restored or audited later as needed. Affected UI and business processes should immediately reflect the removal.","summary":"Delete an attachment-business link (not the file itself) by its linkId and parent attachmentId.","path":"/shoppingMallAi/customer/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"delete","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file whose link is being removed.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"customer"},{"specification":"Erase (delete) a business link between an attachment and a business object by its unique businessLinkId and parent attachmentId. Deletes the record from shopping_mall_ai_attachment_business_links, breaking the association for audit or access reasons. The operation may be restricted to attachment owners, administrators, or as contextually required by legal/business rules. Deletion is typically logical/soft, supporting audit traceability and compliance retention requirements.","description":"Erase an existing attachment-business relationship. This is used when an attachment should no longer be displayed, downloaded, or considered part of the business entity's evidence, product, or documentation. This deletion does not remove the attachment itself, only the business link record. The system applies strict permission rules (owner/admin only) and all actions are retained in the audit log for compliance. If business or legal retention policy applies, link is soft-deleted, so it can be restored or audited later as needed. Affected UI and business processes should immediately reflect the removal.","summary":"Delete an attachment-business link (not the file itself) by its linkId and parent attachmentId.","path":"/shoppingMallAi/seller/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"delete","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file whose link is being removed.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"seller"},{"specification":"Erase (delete) a business link between an attachment and a business object by its unique businessLinkId and parent attachmentId. Deletes the record from shopping_mall_ai_attachment_business_links, breaking the association for audit or access reasons. The operation may be restricted to attachment owners, administrators, or as contextually required by legal/business rules. Deletion is typically logical/soft, supporting audit traceability and compliance retention requirements.","description":"Erase an existing attachment-business relationship. This is used when an attachment should no longer be displayed, downloaded, or considered part of the business entity's evidence, product, or documentation. This deletion does not remove the attachment itself, only the business link record. The system applies strict permission rules (owner/admin only) and all actions are retained in the audit log for compliance. If business or legal retention policy applies, link is soft-deleted, so it can be restored or audited later as needed. Affected UI and business processes should immediately reflect the removal.","summary":"Delete an attachment-business link (not the file itself) by its linkId and parent attachmentId.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/businessLinks/{businessLinkId}","method":"delete","parameters":[{"name":"attachmentId","description":"Attachment's unique identifier (UUID format), referencing the file whose link is being removed.","schema":{"type":"string","format":"uuid"}},{"name":"businessLinkId","description":"Business link's unique identifier (UUID format), referencing the mapping to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Retrieve a filtered, paginated list of shopping cart sessions for customers and guests. This operation interacts with the shopping_mall_ai_carts table, supporting advanced search, status filtering, and sorting by activity or creation date. Permissions are role-driven: customers see only their own carts, sellers/admins can filter across users for troubleshooting, analytics, or debugging concurrent sessions. Enables customer engagement flows, multi-device cart management, and compliance audit.","description":"Search and return a paginated set of cart session records, supporting advanced filtering (by status, last activity, customer ID), and sorting policies. The response includes all metadata for each cart: owner, session status, device fingerprint (if guest), timestamps, and status. Customers will only see their own carts; sellers or admins may filter for monitoring, concurrency incidents, or support scenarios. The operation relies on IShoppingMallAiCart.IRequest for detailed query and IPageIShoppingMallAiCart.ISummary for paginated cart summaries.\n\nBusiness logic supports identification of active, expired, merged, or abandoned carts and helps drive UX flows for cart synchronization or device merges. Security controls and audit logging are applied, especially for cross-user or admin viewing.","summary":"Search and list carts with filtering, pagination, and role-based visibility.","path":"/shoppingMallAi/customer/carts","method":"patch","parameters":[],"requestBody":{"description":"Advanced filtering, search, and pagination options for cart lookup (user/device/guest).","typeName":"IShoppingMallAiCart.IRequest"},"responseBody":{"description":"Paginated list of shopping cart summaries matching the given filters and visibility.","typeName":"IPageIShoppingMallAiCart.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieve a filtered, paginated list of shopping cart sessions for customers and guests. This operation interacts with the shopping_mall_ai_carts table, supporting advanced search, status filtering, and sorting by activity or creation date. Permissions are role-driven: customers see only their own carts, sellers/admins can filter across users for troubleshooting, analytics, or debugging concurrent sessions. Enables customer engagement flows, multi-device cart management, and compliance audit.","description":"Search and return a paginated set of cart session records, supporting advanced filtering (by status, last activity, customer ID), and sorting policies. The response includes all metadata for each cart: owner, session status, device fingerprint (if guest), timestamps, and status. Customers will only see their own carts; sellers or admins may filter for monitoring, concurrency incidents, or support scenarios. The operation relies on IShoppingMallAiCart.IRequest for detailed query and IPageIShoppingMallAiCart.ISummary for paginated cart summaries.\n\nBusiness logic supports identification of active, expired, merged, or abandoned carts and helps drive UX flows for cart synchronization or device merges. Security controls and audit logging are applied, especially for cross-user or admin viewing.","summary":"Search and list carts with filtering, pagination, and role-based visibility.","path":"/shoppingMallAi/seller/carts","method":"patch","parameters":[],"requestBody":{"description":"Advanced filtering, search, and pagination options for cart lookup (user/device/guest).","typeName":"IShoppingMallAiCart.IRequest"},"responseBody":{"description":"Paginated list of shopping cart summaries matching the given filters and visibility.","typeName":"IPageIShoppingMallAiCart.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"Retrieve a filtered, paginated list of shopping cart sessions for customers and guests. This operation interacts with the shopping_mall_ai_carts table, supporting advanced search, status filtering, and sorting by activity or creation date. Permissions are role-driven: customers see only their own carts, sellers/admins can filter across users for troubleshooting, analytics, or debugging concurrent sessions. Enables customer engagement flows, multi-device cart management, and compliance audit.","description":"Search and return a paginated set of cart session records, supporting advanced filtering (by status, last activity, customer ID), and sorting policies. The response includes all metadata for each cart: owner, session status, device fingerprint (if guest), timestamps, and status. Customers will only see their own carts; sellers or admins may filter for monitoring, concurrency incidents, or support scenarios. The operation relies on IShoppingMallAiCart.IRequest for detailed query and IPageIShoppingMallAiCart.ISummary for paginated cart summaries.\n\nBusiness logic supports identification of active, expired, merged, or abandoned carts and helps drive UX flows for cart synchronization or device merges. Security controls and audit logging are applied, especially for cross-user or admin viewing.","summary":"Search and list carts with filtering, pagination, and role-based visibility.","path":"/shoppingMallAi/administrator/carts","method":"patch","parameters":[],"requestBody":{"description":"Advanced filtering, search, and pagination options for cart lookup (user/device/guest).","typeName":"IShoppingMallAiCart.IRequest"},"responseBody":{"description":"Paginated list of shopping cart summaries matching the given filters and visibility.","typeName":"IPageIShoppingMallAiCart.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves detailed metadata for a specific shopping cart by its UUID, referencing the shopping_mall_ai_carts model. It returns all information about the cart's status, ownership (customer or session/device), validity, expiration, and audit fields. Essential for user UX (resuming carts) and for admins/sellers investigating cart anomalies or supporting users.","description":"Retrieve a shopping cart session by its unique cartId (UUID), providing the full contents and metadata of the cart session, including ownership (customer-linked or guest), session/device hash, last activity, expiration, and all associated audit data. Visibility is strictly limited: customers can access only their own carts, sellers or admins can access for support or investigation. Access is controlled and tracked per business compliance rules.","summary":"Get a specific shopping cart's detail by its cartId.","path":"/shoppingMallAi/customer/carts/{cartId}","method":"get","parameters":[{"name":"cartId","description":"Unique UUID string identifying the target cart session.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full cart session metadata for the given cartId, including status, ownership, and audit data.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"This operation retrieves detailed metadata for a specific shopping cart by its UUID, referencing the shopping_mall_ai_carts model. It returns all information about the cart's status, ownership (customer or session/device), validity, expiration, and audit fields. Essential for user UX (resuming carts) and for admins/sellers investigating cart anomalies or supporting users.","description":"Retrieve a shopping cart session by its unique cartId (UUID), providing the full contents and metadata of the cart session, including ownership (customer-linked or guest), session/device hash, last activity, expiration, and all associated audit data. Visibility is strictly limited: customers can access only their own carts, sellers or admins can access for support or investigation. Access is controlled and tracked per business compliance rules.","summary":"Get a specific shopping cart's detail by its cartId.","path":"/shoppingMallAi/seller/carts/{cartId}","method":"get","parameters":[{"name":"cartId","description":"Unique UUID string identifying the target cart session.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full cart session metadata for the given cartId, including status, ownership, and audit data.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"This operation retrieves detailed metadata for a specific shopping cart by its UUID, referencing the shopping_mall_ai_carts model. It returns all information about the cart's status, ownership (customer or session/device), validity, expiration, and audit fields. Essential for user UX (resuming carts) and for admins/sellers investigating cart anomalies or supporting users.","description":"Retrieve a shopping cart session by its unique cartId (UUID), providing the full contents and metadata of the cart session, including ownership (customer-linked or guest), session/device hash, last activity, expiration, and all associated audit data. Visibility is strictly limited: customers can access only their own carts, sellers or admins can access for support or investigation. Access is controlled and tracked per business compliance rules.","summary":"Get a specific shopping cart's detail by its cartId.","path":"/shoppingMallAi/administrator/carts/{cartId}","method":"get","parameters":[{"name":"cartId","description":"Unique UUID string identifying the target cart session.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full cart session metadata for the given cartId, including status, ownership, and audit data.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new shopping cart session for a customer or guest (if supported by business logic). Inserts a record into shopping_mall_ai_carts and initializes status, session fingerprint, expiration policy, and baseline audit metadata. This endpoint supports initiation of new shopping experiences (both guest and authenticated flows) and is required for device merging or onboarding flows.","description":"Initiate a new shopping cart session, optionally linked to a customer (if logged in) or bootstrapped for a new guest/device. The request (IShoppingMallAiCart.ICreate) requires status (default: active), may include a device fingerprint for guest/anonymous users, and sets up activity timestamps, expiration, and ownership fields. Upon success, the response includes all metadata and the cartId for tracking. All actions are logged for business compliance. Uniqueness constraints ensure only one live cart per customer/account.","summary":"Create a new cart session, authenticating customer or as a guest based on business rules.","path":"/shoppingMallAi/customer/carts","method":"post","parameters":[],"requestBody":{"description":"Required session data to initialize a new cart, including owner, session/device data, and metadata.","typeName":"IShoppingMallAiCart.ICreate"},"responseBody":{"description":"The newly created cart session metadata, including identifiers and access info.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"customer"},{"specification":"Create a new shopping cart session for a customer or guest (if supported by business logic). Inserts a record into shopping_mall_ai_carts and initializes status, session fingerprint, expiration policy, and baseline audit metadata. This endpoint supports initiation of new shopping experiences (both guest and authenticated flows) and is required for device merging or onboarding flows.","description":"Initiate a new shopping cart session, optionally linked to a customer (if logged in) or bootstrapped for a new guest/device. The request (IShoppingMallAiCart.ICreate) requires status (default: active), may include a device fingerprint for guest/anonymous users, and sets up activity timestamps, expiration, and ownership fields. Upon success, the response includes all metadata and the cartId for tracking. All actions are logged for business compliance. Uniqueness constraints ensure only one live cart per customer/account.","summary":"Create a new cart session, authenticating customer or as a guest based on business rules.","path":"/shoppingMallAi/seller/carts","method":"post","parameters":[],"requestBody":{"description":"Required session data to initialize a new cart, including owner, session/device data, and metadata.","typeName":"IShoppingMallAiCart.ICreate"},"responseBody":{"description":"The newly created cart session metadata, including identifiers and access info.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"seller"},{"specification":"Create a new shopping cart session for a customer or guest (if supported by business logic). Inserts a record into shopping_mall_ai_carts and initializes status, session fingerprint, expiration policy, and baseline audit metadata. This endpoint supports initiation of new shopping experiences (both guest and authenticated flows) and is required for device merging or onboarding flows.","description":"Initiate a new shopping cart session, optionally linked to a customer (if logged in) or bootstrapped for a new guest/device. The request (IShoppingMallAiCart.ICreate) requires status (default: active), may include a device fingerprint for guest/anonymous users, and sets up activity timestamps, expiration, and ownership fields. Upon success, the response includes all metadata and the cartId for tracking. All actions are logged for business compliance. Uniqueness constraints ensure only one live cart per customer/account.","summary":"Create a new cart session, authenticating customer or as a guest based on business rules.","path":"/shoppingMallAi/administrator/carts","method":"post","parameters":[],"requestBody":{"description":"Required session data to initialize a new cart, including owner, session/device data, and metadata.","typeName":"IShoppingMallAiCart.ICreate"},"responseBody":{"description":"The newly created cart session metadata, including identifiers and access info.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing shopping cart session by its unique cartId. Modifies properties in the shopping_mall_ai_carts table such as status (active, expired, merged), expiration, or device information, following business logic for auditability and compliance. Updates performed by the owner or an authorized admin only.","description":"Proceed to update metadata (such as status, expiration, or last activity) for an active cart session. Validation enforces unique cart per user/session policy and blocks unauthorized or inconsistent state transitions. The operation is highly auditable: every change is snapshotted in history for business and compliance. Owners can update only their own cart, admins can help for device merges, anomaly, or compliance. If input data conflicts with session state or business policy, the operation returns a validation error.","summary":"Update metadata of an existing cart session by cartId.","path":"/shoppingMallAi/customer/carts/{cartId}","method":"put","parameters":[{"name":"cartId","description":"UUID of the cart to update (matches shopping_mall_ai_carts.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the session record, matching IShoppingMallAiCart.IUpdate and business logic/policy constraints.","typeName":"IShoppingMallAiCart.IUpdate"},"responseBody":{"description":"Post-update metadata and status for the modified cart session.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"customer"},{"specification":"Update an existing shopping cart session by its unique cartId. Modifies properties in the shopping_mall_ai_carts table such as status (active, expired, merged), expiration, or device information, following business logic for auditability and compliance. Updates performed by the owner or an authorized admin only.","description":"Proceed to update metadata (such as status, expiration, or last activity) for an active cart session. Validation enforces unique cart per user/session policy and blocks unauthorized or inconsistent state transitions. The operation is highly auditable: every change is snapshotted in history for business and compliance. Owners can update only their own cart, admins can help for device merges, anomaly, or compliance. If input data conflicts with session state or business policy, the operation returns a validation error.","summary":"Update metadata of an existing cart session by cartId.","path":"/shoppingMallAi/seller/carts/{cartId}","method":"put","parameters":[{"name":"cartId","description":"UUID of the cart to update (matches shopping_mall_ai_carts.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the session record, matching IShoppingMallAiCart.IUpdate and business logic/policy constraints.","typeName":"IShoppingMallAiCart.IUpdate"},"responseBody":{"description":"Post-update metadata and status for the modified cart session.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"seller"},{"specification":"Update an existing shopping cart session by its unique cartId. Modifies properties in the shopping_mall_ai_carts table such as status (active, expired, merged), expiration, or device information, following business logic for auditability and compliance. Updates performed by the owner or an authorized admin only.","description":"Proceed to update metadata (such as status, expiration, or last activity) for an active cart session. Validation enforces unique cart per user/session policy and blocks unauthorized or inconsistent state transitions. The operation is highly auditable: every change is snapshotted in history for business and compliance. Owners can update only their own cart, admins can help for device merges, anomaly, or compliance. If input data conflicts with session state or business policy, the operation returns a validation error.","summary":"Update metadata of an existing cart session by cartId.","path":"/shoppingMallAi/administrator/carts/{cartId}","method":"put","parameters":[{"name":"cartId","description":"UUID of the cart to update (matches shopping_mall_ai_carts.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the session record, matching IShoppingMallAiCart.IUpdate and business logic/policy constraints.","typeName":"IShoppingMallAiCart.IUpdate"},"responseBody":{"description":"Post-update metadata and status for the modified cart session.","typeName":"IShoppingMallAiCart"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Erase (logically delete) a shopping cart session by its cartId. Updates shopping_mall_ai_carts.deleted_at and status, removing active session permissions but retaining for audit. This supports customer withdrawal, session expiry cleanup, abandoned cart recovery, and administrator compliance flows.","description":"Remove and deactivate a cart session. Does not remove cart items or business records immediately, but prevents use/resume of this session in business flows. Erasure is typically logical/soft, with the deleted_at timestamp retained for forensics, compliance reporting, or incident recovery. Hard deletion may apply after audit period. Only the cart owner or privileged administrator can erase a cart. If attempted on a non-owned or non-existent cart, the operation returns an authorization or not found error.","summary":"Erase (soft delete) a cart session by cartId, preventing further use.","path":"/shoppingMallAi/customer/carts/{cartId}","method":"delete","parameters":[{"name":"cartId","description":"UUID string of the target cart session to be erased (matches shopping_mall_ai_carts.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"customer"},{"specification":"Erase (logically delete) a shopping cart session by its cartId. Updates shopping_mall_ai_carts.deleted_at and status, removing active session permissions but retaining for audit. This supports customer withdrawal, session expiry cleanup, abandoned cart recovery, and administrator compliance flows.","description":"Remove and deactivate a cart session. Does not remove cart items or business records immediately, but prevents use/resume of this session in business flows. Erasure is typically logical/soft, with the deleted_at timestamp retained for forensics, compliance reporting, or incident recovery. Hard deletion may apply after audit period. Only the cart owner or privileged administrator can erase a cart. If attempted on a non-owned or non-existent cart, the operation returns an authorization or not found error.","summary":"Erase (soft delete) a cart session by cartId, preventing further use.","path":"/shoppingMallAi/seller/carts/{cartId}","method":"delete","parameters":[{"name":"cartId","description":"UUID string of the target cart session to be erased (matches shopping_mall_ai_carts.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"seller"},{"specification":"Erase (logically delete) a shopping cart session by its cartId. Updates shopping_mall_ai_carts.deleted_at and status, removing active session permissions but retaining for audit. This supports customer withdrawal, session expiry cleanup, abandoned cart recovery, and administrator compliance flows.","description":"Remove and deactivate a cart session. Does not remove cart items or business records immediately, but prevents use/resume of this session in business flows. Erasure is typically logical/soft, with the deleted_at timestamp retained for forensics, compliance reporting, or incident recovery. Hard deletion may apply after audit period. Only the cart owner or privileged administrator can erase a cart. If attempted on a non-owned or non-existent cart, the operation returns an authorization or not found error.","summary":"Erase (soft delete) a cart session by cartId, preventing further use.","path":"/shoppingMallAi/administrator/carts/{cartId}","method":"delete","parameters":[{"name":"cartId","description":"UUID string of the target cart session to be erased (matches shopping_mall_ai_carts.id).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"List all cart items (product selections) for a given cart session (shopping_mall_ai_cart_items), with support for filtering (by product, status), pagination, and summary display. This enables product UX (showing cart contents), checkout validation workflows, and compliance/audit purposes. Visibility is permission-bound to cart owners, admins, or sellers for their own carts.","description":"Retrieve a paginated and filtered list of items for a given cartId, supporting user UX (product display), checkout workflows, and backoffice investigations. Response is paginated, showing summary details of each product/variant in the cart, as well as status and audit information. Only the cart owner, relevant seller, or admin can view these items. The operation is compatible with IShoppingMallAiCartItem.IRequest filters (by product, quantity, ordering, etc.), and returns in IPageIShoppingMallAiCartItem.ISummary for performance/scalability.","summary":"Search/list all cart items for a given cartId with advanced filtering.","path":"/shoppingMallAi/customer/carts/{cartId}/items","method":"patch","parameters":[{"name":"cartId","description":"UUID string identifying the cart whose items are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination options for finding cart items.","typeName":"IShoppingMallAiCartItem.IRequest"},"responseBody":{"description":"Paginated set of cart item summaries matching the specified filters for the given cart session.","typeName":"IPageIShoppingMallAiCartItem.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"List all cart items (product selections) for a given cart session (shopping_mall_ai_cart_items), with support for filtering (by product, status), pagination, and summary display. This enables product UX (showing cart contents), checkout validation workflows, and compliance/audit purposes. Visibility is permission-bound to cart owners, admins, or sellers for their own carts.","description":"Retrieve a paginated and filtered list of items for a given cartId, supporting user UX (product display), checkout workflows, and backoffice investigations. Response is paginated, showing summary details of each product/variant in the cart, as well as status and audit information. Only the cart owner, relevant seller, or admin can view these items. The operation is compatible with IShoppingMallAiCartItem.IRequest filters (by product, quantity, ordering, etc.), and returns in IPageIShoppingMallAiCartItem.ISummary for performance/scalability.","summary":"Search/list all cart items for a given cartId with advanced filtering.","path":"/shoppingMallAi/seller/carts/{cartId}/items","method":"patch","parameters":[{"name":"cartId","description":"UUID string identifying the cart whose items are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination options for finding cart items.","typeName":"IShoppingMallAiCartItem.IRequest"},"responseBody":{"description":"Paginated set of cart item summaries matching the specified filters for the given cart session.","typeName":"IPageIShoppingMallAiCartItem.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"List all cart items (product selections) for a given cart session (shopping_mall_ai_cart_items), with support for filtering (by product, status), pagination, and summary display. This enables product UX (showing cart contents), checkout validation workflows, and compliance/audit purposes. Visibility is permission-bound to cart owners, admins, or sellers for their own carts.","description":"Retrieve a paginated and filtered list of items for a given cartId, supporting user UX (product display), checkout workflows, and backoffice investigations. Response is paginated, showing summary details of each product/variant in the cart, as well as status and audit information. Only the cart owner, relevant seller, or admin can view these items. The operation is compatible with IShoppingMallAiCartItem.IRequest filters (by product, quantity, ordering, etc.), and returns in IPageIShoppingMallAiCartItem.ISummary for performance/scalability.","summary":"Search/list all cart items for a given cartId with advanced filtering.","path":"/shoppingMallAi/administrator/carts/{cartId}/items","method":"patch","parameters":[{"name":"cartId","description":"UUID string identifying the cart whose items are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination options for finding cart items.","typeName":"IShoppingMallAiCartItem.IRequest"},"responseBody":{"description":"Paginated set of cart item summaries matching the specified filters for the given cart session.","typeName":"IPageIShoppingMallAiCartItem.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve the details of a single cart item (shopping_mall_ai_cart_items) within a cart session by its itemId (UUID). Returns all metadata required for display, validation, and audit, including references to product, variant, and quantity. Permitted for cart owner or admin only, to support accurate cart rendering and compliance.","description":"Retrieve a single cart item record for a specific cart (cartId) and item (itemId). This is necessary for checkout validation, user UX (product/option preview), or for admins supporting error/fraud investigations. All access is strictly logged for compliance, and only the cart owner or privileged admin can retrieve this record. The result contains full linking context to the cart, product, product variant, quantity, and audit history fields related to the item selection.","summary":"Get details for a specific cart item by itemId within a cart session.","path":"/shoppingMallAi/customer/carts/{cartId}/items/{itemId}","method":"get","parameters":[{"name":"cartId","description":"UUID string identifying the parent cart session.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"UUID string referencing the targeted cart item record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full cart item record including all product, variant, quantity, and selection metadata.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"Retrieve the details of a single cart item (shopping_mall_ai_cart_items) within a cart session by its itemId (UUID). Returns all metadata required for display, validation, and audit, including references to product, variant, and quantity. Permitted for cart owner or admin only, to support accurate cart rendering and compliance.","description":"Retrieve a single cart item record for a specific cart (cartId) and item (itemId). This is necessary for checkout validation, user UX (product/option preview), or for admins supporting error/fraud investigations. All access is strictly logged for compliance, and only the cart owner or privileged admin can retrieve this record. The result contains full linking context to the cart, product, product variant, quantity, and audit history fields related to the item selection.","summary":"Get details for a specific cart item by itemId within a cart session.","path":"/shoppingMallAi/seller/carts/{cartId}/items/{itemId}","method":"get","parameters":[{"name":"cartId","description":"UUID string identifying the parent cart session.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"UUID string referencing the targeted cart item record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full cart item record including all product, variant, quantity, and selection metadata.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieve the details of a single cart item (shopping_mall_ai_cart_items) within a cart session by its itemId (UUID). Returns all metadata required for display, validation, and audit, including references to product, variant, and quantity. Permitted for cart owner or admin only, to support accurate cart rendering and compliance.","description":"Retrieve a single cart item record for a specific cart (cartId) and item (itemId). This is necessary for checkout validation, user UX (product/option preview), or for admins supporting error/fraud investigations. All access is strictly logged for compliance, and only the cart owner or privileged admin can retrieve this record. The result contains full linking context to the cart, product, product variant, quantity, and audit history fields related to the item selection.","summary":"Get details for a specific cart item by itemId within a cart session.","path":"/shoppingMallAi/administrator/carts/{cartId}/items/{itemId}","method":"get","parameters":[{"name":"cartId","description":"UUID string identifying the parent cart session.","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"UUID string referencing the targeted cart item record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full cart item record including all product, variant, quantity, and selection metadata.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Add a new item (product selection) to an existing cart (cartId). Creates a record in shopping_mall_ai_cart_items, asserting ownership, validation of item existence, inventory, and quantity business rules. Required for add-to-cart workflows; supports compliance, audit, and rollback. Item creation is subject to business and inventory policy checks; can only be performed by cart owner or admin.","description":"Add a product, variant, or bundle to a customer's cart, enforcing validation for product existence, stock, purchase limits, and any business-imposed rules (e.g., restricted products). Call inserts a record to shopping_mall_ai_cart_items with quantity and selection data, linked to the parent cartId. The result gives all newly created item metadata and context for downstream UX, checkout, and compliance flows. All additions are fully audited, and permission is strictly enforced.","summary":"Add a new cart item to the specified cart by cartId.","path":"/shoppingMallAi/customer/carts/{cartId}/items","method":"post","parameters":[{"name":"cartId","description":"UUID string specifying the cart to which an item will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required data to create a new cart item selection (product, variant, quantity, etc.), following creation logic.","typeName":"IShoppingMallAiCartItem.ICreate"},"responseBody":{"description":"Created cart item entity with all metadata, business links, and validation results.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"customer"},{"specification":"Add a new item (product selection) to an existing cart (cartId). Creates a record in shopping_mall_ai_cart_items, asserting ownership, validation of item existence, inventory, and quantity business rules. Required for add-to-cart workflows; supports compliance, audit, and rollback. Item creation is subject to business and inventory policy checks; can only be performed by cart owner or admin.","description":"Add a product, variant, or bundle to a customer's cart, enforcing validation for product existence, stock, purchase limits, and any business-imposed rules (e.g., restricted products). Call inserts a record to shopping_mall_ai_cart_items with quantity and selection data, linked to the parent cartId. The result gives all newly created item metadata and context for downstream UX, checkout, and compliance flows. All additions are fully audited, and permission is strictly enforced.","summary":"Add a new cart item to the specified cart by cartId.","path":"/shoppingMallAi/seller/carts/{cartId}/items","method":"post","parameters":[{"name":"cartId","description":"UUID string specifying the cart to which an item will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required data to create a new cart item selection (product, variant, quantity, etc.), following creation logic.","typeName":"IShoppingMallAiCartItem.ICreate"},"responseBody":{"description":"Created cart item entity with all metadata, business links, and validation results.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"seller"},{"specification":"Add a new item (product selection) to an existing cart (cartId). Creates a record in shopping_mall_ai_cart_items, asserting ownership, validation of item existence, inventory, and quantity business rules. Required for add-to-cart workflows; supports compliance, audit, and rollback. Item creation is subject to business and inventory policy checks; can only be performed by cart owner or admin.","description":"Add a product, variant, or bundle to a customer's cart, enforcing validation for product existence, stock, purchase limits, and any business-imposed rules (e.g., restricted products). Call inserts a record to shopping_mall_ai_cart_items with quantity and selection data, linked to the parent cartId. The result gives all newly created item metadata and context for downstream UX, checkout, and compliance flows. All additions are fully audited, and permission is strictly enforced.","summary":"Add a new cart item to the specified cart by cartId.","path":"/shoppingMallAi/administrator/carts/{cartId}/items","method":"post","parameters":[{"name":"cartId","description":"UUID string specifying the cart to which an item will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Required data to create a new cart item selection (product, variant, quantity, etc.), following creation logic.","typeName":"IShoppingMallAiCartItem.ICreate"},"responseBody":{"description":"Created cart item entity with all metadata, business links, and validation results.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing shopping cart item within a specific cart, identified by both cartId and itemId. This operation allows users to modify the quantity or variant of an item already present in the cart. It refers to the shopping_mall_ai_cart_items table in the Prisma schema, which contains details on each cart item including quantity, options, and variant selection. The operation ensures business rules such as inventory validation and variant eligibility are enforced. Only the owner of the cart (customer) or authenticated users with permission can perform this update. Concurrency rules and audit trails are maintained as per specification.","path":"/shoppingMallAi/customer/carts/{cartId}/items/{itemId}","method":"put","description":"This API updates the details of a specific item within a shopping cart. The update can include modifying the quantity or changing the selected variant, provided that the cart item is not already deleted and the update complies with business rules such as inventory availability, valid variant combinations, and per-item purchase limits. The operation checks that the cart belongs to the authenticated customer. It will log the change in an audit trail for traceability and support cart merge or recovery scenarios. Errors such as invalid quantity, out-of-stock, or unauthorized cart access will result in appropriate responses, and no update is performed if constraints are violated. The request is idempotent and only affects the specified item within the specified cart. Only users with valid authorization may access this operation. The API integrates with business validation and concurrency conflict resolution.","summary":"Update an existing cart item in a user's cart (shopping_mall_ai_cart_items table)","parameters":[{"name":"cartId","description":"The unique identifier for the target shopping cart","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"The unique identifier of the cart item to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New cart item update information (e.g., quantity, variant).","typeName":"IShoppingMallAiCartItem.IUpdate"},"responseBody":{"description":"The updated cart item record.","typeName":"IShoppingMallAiCartItem"},"authorizationRoles":["customer"],"name":"update","authorizationRole":"customer"},{"specification":"Remove a specific item from a shopping cart. This operation performs a soft delete of the cart item by setting its deleted_at field if available; otherwise, it deletes the record. It utilizes the shopping_mall_ai_cart_items table. Only the cart owner (customer) or a permitted user can perform this operation. Audit trails record the action for compliance, and it ensures that removal is only possible for existing, non-deleted items, preventing duplicate execution or error in case of stale/deleted state.","path":"/shoppingMallAi/customer/carts/{cartId}/items/{itemId}","method":"delete","description":"This API removes a specific item from the customer's shopping cart. The operation checks that the cart and item both exist, that the customer has ownership, and that the item is not already deleted. Upon successful deletion, the system updates the deleted_at timestamp (soft delete) and logs the event in audit for compliance and recovery capabilities. Errors are handled for cases such as item not found, authorization failure, or item already deleted. Only customers owning the cart or authorized users may call this endpoint. This ensures a seamless and compliant user experience for cart management.","summary":"Remove (soft delete) a specific item from a shopping cart (shopping_mall_ai_cart_items table)","parameters":[{"name":"cartId","description":"Unique identifier for the shopping cart","schema":{"type":"string","format":"uuid"}},{"name":"itemId","description":"Unique identifier of the cart item being removed","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer"],"name":"erase","authorizationRole":"customer"},{"specification":"Retrieve a paginated, filtered list of all cart merge logs in the system. This operation is based on the shopping_mall_ai_cart_merge_logs table, capturing all events where two carts were merged (e.g., guest cart merging with customer cart on login). It supports advanced searching, filtering, and pagination by merge context, customer, date, or other attributes. Only administrators are permitted due to sensitivity of merge history and potential privacy constraints.","path":"/shoppingMallAi/administrator/cartMergeLogs","method":"patch","description":"Returns a paginated list of all cart merge logs. The endpoint allows filtering by merge context (e.g., login_guest_to_auth), involved customer, date range, or other business attributes of shopping_mall_ai_cart_merge_logs. Supports pagination and sorting by merged_at or customer. Only administrators may access this data due to the sensitive, audit, and support-related information it contains. Useful for compliance, support forensics, and analytics of cart merge patterns. Ensures that sensitive data is only accessible to authorized personnel and subject to strict access controls.","summary":"Search and retrieve a paginated list of cart merge log records (shopping_mall_ai_cart_merge_logs table)","parameters":[],"requestBody":{"description":"Filter, pagination, and search criteria for cart merge logs.","typeName":"IShoppingMallAiCartMergeLog.IRequest"},"responseBody":{"description":"Paginated results of cart merge logs matching criteria.","typeName":"IPageIShoppingMallAiCartMergeLog"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve details for a specific cart merge log event by its unique identifier (cartMergeLogId). This operation reads from the shopping_mall_ai_cart_merge_logs table, providing full context of the cart sources, target, customer, and merge parameters. Used for support, compliance, and forensic analysis. Access restricted to administrators.","path":"/shoppingMallAi/administrator/cartMergeLogs/{cartMergeLogId}","method":"get","description":"Returns detailed information about a specific cart merge log, identified by its unique cartMergeLogId. Fields include source and target cart, possibly involved customer, merge context, item counts, event timestamp, and related business metadata. Only administrators are permitted due to privacy and compliance scope. Used for internal support, dispute resolution, and detailed audit review of cart session behaviors.","summary":"Get details about a specific cart merge log event (shopping_mall_ai_cart_merge_logs)","parameters":[{"name":"cartMergeLogId","description":"The unique identifier for the cart merge log event to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed cart merge log event record.","typeName":"IShoppingMallAiCartMergeLog"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new cart merge log event, typically recording the merging of guest and authenticated carts. This operation writes to the shopping_mall_ai_cart_merge_logs table, requiring all key event fields. Only administrators or the server may create logs (in response to business processes), not end-users directly.","path":"/shoppingMallAi/administrator/cartMergeLogs","method":"post","description":"Creates a new cart merge log entry, documenting the event where two carts (typically guest and customer) are merged. The request must include source and target cart IDs, merge context, involved customer (if any), and final item counts. Only administrators or dedicated server-side integrations may call this directly, as normal merges are automated. The created log supports auditing, forensics, and business analysis of merge patterns, and is always included in compliance history.","summary":"Create a new cart merge log event (shopping_mall_ai_cart_merge_logs table)","parameters":[],"requestBody":{"description":"Data for the new cart merge log entry (source, target carts, context, etc).","typeName":"IShoppingMallAiCartMergeLog.ICreate"},"responseBody":{"description":"The created cart merge log record.","typeName":"IShoppingMallAiCartMergeLog"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing cart merge log entry by ID. This operation is mainly for administrative correction of log metadata, such as merge context, rationale, or correct counts. Only administrators may update, and the operation is subject to audit. Originates from the shopping_mall_ai_cart_merge_logs table. Ensures data integrity and compliance with system-wide audit policies.","path":"/shoppingMallAi/administrator/cartMergeLogs/{cartMergeLogId}","method":"put","description":"Updates a specific cart merge log record by its unique cartMergeLogId. Includes fields such as merge context, involved customer, or correction of item counts. Only administrators may perform updates, bound by compliance and audit requirements. All updates are versioned and audit-trailed to guarantee log integrity. Used for correcting erroneous logs, appending business context, or handling compliance requests. Returns the updated log record on success.","summary":"Update a specific cart merge log record (shopping_mall_ai_cart_merge_logs table)","parameters":[{"name":"cartMergeLogId","description":"Identifier for the cart merge log event to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New data to update on the cart merge log entry.","typeName":"IShoppingMallAiCartMergeLog.IUpdate"},"responseBody":{"description":"The updated cart merge log record.","typeName":"IShoppingMallAiCartMergeLog"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Delete a specific cart merge log record by ID. This removes the log for compliance or correction. The operation is available only to administrators. If the schema field deleted_at exists, performs a soft delete; otherwise, hard delete. The related table is shopping_mall_ai_cart_merge_logs. All deletions are tracked in the system audit trail.","path":"/shoppingMallAi/administrator/cartMergeLogs/{cartMergeLogId}","method":"delete","description":"Deletes a cart merge log record identified by cartMergeLogId. This action can be used for log correction, handling compliance take-down requests, or maintaining a clean audit trail. Only administrators may perform this operation. Actual removal depends on existence of a soft delete \"deleted_at\" field. Compliance and audit protections are in place, and operation outcome is always logged. No data is returned unless an error occurs.","summary":"Delete a cart merge log record (shopping_mall_ai_cart_merge_logs table)","parameters":[{"name":"cartMergeLogId","description":"The unique identifier of the cart merge log to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Search for a paginated, filtered list of orders across the system from the shopping_mall_ai_orders table. Allows searching by customer, order code, status, date, and more. Response is a paginated list of orders with summary details, as per system's filtering, sorting, and pagination policies. Access controlled for administrators and, where applicable, seller-specific searches. Sensitive financial information is available to authorized users only. Supports advanced filtering for large e-commerce operations.","path":"/shoppingMallAi/administrator/orders","method":"patch","description":"Returns a list of orders matching the specified search, filter, and pagination criteria. This endpoint is based on shopping_mall_ai_orders, supporting filters by customer, date range, seller, order code, and status, as well as sorting by created date or price. Results are paginated and may include summary information or be limited according to the requesting role's scope. Authorization is enforced for privacy and business compliance, ensuring only legitimate users (administrators, sellers for their own orders) can access matching orders. Common use cases include business analytics, order status monitoring, sales reporting, and advanced administrative operations. Sensitive fields are masked for non-privileged requesters. Full access is restricted to administrative roles.","summary":"Paginated, filtered search for orders (shopping_mall_ai_orders table)","parameters":[],"requestBody":{"description":"Search/filter criteria and pagination definition for orders.","typeName":"IShoppingMallAiOrder.IRequest"},"responseBody":{"description":"Paginated list of order summary records matching search criteria.","typeName":"IPageIShoppingMallAiOrder"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Get full details of a specific order by orderId from the shopping_mall_ai_orders table. Returns all information relevant to the order, including items, customer, pricing breakdown, status, fulfillment, and shipping addresses. Used by administrators for order management, analytics, or compliance, and by sellers/customers within their scope. This endpoint protects sensitive and financial fields according to the requesting role's authorization.","path":"/shoppingMallAi/administrator/orders/{orderId}","method":"get","description":"Retrieve full order details for a given orderId. The operation covers all properties in shopping_mall_ai_orders, including customer, items, prices, status, logs, and fulfillment data. Sensitive or personally identifiable information is masked unless the requester has the required role. Access is allowed to the order's customer, the seller (for orders containing their products), and administrators. Full details support workflows such as order management, review, after-service, and compliance. Business logic ensures no cross-role data leaks. Returns an error if the order does not exist or the requester lacks authorization.","summary":"Get details of a specific order (shopping_mall_ai_orders) by orderId","parameters":[{"name":"orderId","description":"Unique order identifier to fetch details","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full order record with items, fulfillment, and status.","typeName":"IShoppingMallAiOrder"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new order record in the shopping_mall_ai_orders table. This operation is invoked after successful cart/checkout validation and payment authorization. The new order must include customer, items, price, payment, address, and related metadata. Upon creation, the operation validates all business and inventory logic, decrements stock, links payment, and triggers notification workflows. Available only for authenticated users (customers) and integrates with transaction logging for compliance.","path":"/shoppingMallAi/customer/orders","method":"post","description":"Creates a new order after a validated checkout. The request must include all key information: customer ID, items, address, payment details, and financial metadata as defined in the Prisma table shopping_mall_ai_orders and related entities. The operation validates product existence, price, inventory, and customer eligibility, and decrements stock. It links with external payment records and triggers order confirmation notifications. After creation, audit trails and logs are updated for compliance and tracing. Sensitive operations are logged and subject to role-based validation and concurrency control. Used during platform checkout and order creation processes.","summary":"Create a new order (shopping_mall_ai_orders table)","parameters":[],"requestBody":{"description":"Definition of order being created, including items, address, and financials.","typeName":"IShoppingMallAiOrder.ICreate"},"responseBody":{"description":"The newly created order record, including items, price, and status.","typeName":"IShoppingMallAiOrder"},"authorizationRoles":["customer"],"name":"create","authorizationRole":"customer"},{"specification":"Update an existing order (shopping_mall_ai_orders table) by orderId. Permits administrative correction and, where business rules allow, updating fields such as shipping address, recipient, or payment information before shipment/fulfillment. All updates are validated for compliance, audit requirements, and status eligibility. Accessible to administrators, and—in cases where payment or address changes are necessary—by the customer who owns the order before shipment. Every change is snapshotted for legal and business compliance. Error scenario if order does not exist or is not modifiable.","path":"/shoppingMallAi/administrator/orders/{orderId}","method":"put","description":"Updates an existing order's permitted fields before fulfillment, using its orderId as the target. Typical fields include correcting shipping address, contact details, or payment on pending or paid orders. Operation tracks all business constraints, allows only eligible status for changes, and logs before/after state for complete auditability. Once order is shipped or in fulfillment, only administrators may update business/audit metadata. Authorization and scope are enforced. An error is returned if rules or status constraints are violated, or if the order is not found.","summary":"Update an order's permitted fields (shopping_mall_ai_orders table) by orderId","parameters":[{"name":"orderId","description":"Order identifier to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order update data (fields to modify on the target order).","typeName":"IShoppingMallAiOrder.IUpdate"},"responseBody":{"description":"Updated order record (shopping_mall_ai_orders table).","typeName":"IShoppingMallAiOrder"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Deletes (soft or hard delete depending on schema) an order identified by orderId in the shopping_mall_ai_orders table. If the \"deleted_at\" field exists, a soft deletion is performed; otherwise, the record is removed from the database. Deletion can only be performed by administrators, and each action is fully audit-trailed for compliance and business rule enforcement. Attempts to delete a non-existent or ineligible order will return an error. Related to order cancellation but differs in that it is an administrative data removal operation—a business rule cancellation flow is handled elsewhere.","path":"/shoppingMallAi/administrator/orders/{orderId}","method":"delete","description":"Deletes (soft or hard) a specific order identified by its orderId. This is an administrative operation for correcting, removing, or archiving order records for compliance reasons. The presence of a deleted_at field triggers soft delete by setting the timestamp; hard delete if absent. All operations are audit-trailed, and role/authorization is strictly enforced. Errors are returned for attempts to delete non-existent or ineligible orders. This does not perform a business flow cancellation (handled separately); it is a data removal operation for corrective or compliance reasons only. Not accessible for normal customer users.","summary":"Delete (archive) an order by orderId (shopping_mall_ai_orders table)","parameters":[{"name":"orderId","description":"Unique identifier of the order to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Retrieve a paginated, filterable list of order items for a specific order. This operation is closely associated with the shopping_mall_ai_order_items table in the Prisma schema. It supports advanced searching, filtering by product, variant, refund status, and viewing query-related details. Useful for order review, fulfillment, customer service, and returns processing. The response references all item-level pricing, snapshot, quantity, and fulfillment records for downstream operations. It also allows for pagination and sorting to efficiently manage large orders.","path":"/shoppingMallAi/customer/orders/{orderId}/orderItems","method":"patch","description":"This operation retrieves a paginated list of order items belonging to a specific order. It is essential for customers, sellers, and administrators to analyze the items that comprise an order, support fulfillment, audit line-level transactions, and resolve after-service scenarios. Each order item is linked to products, product snapshots, and order fulfillment status, leveraging the structure of shopping_mall_ai_order_items and its relationships to shopping_mall_ai_products, shopping_mall_ai_order_items, and shopping_mall_ai_orders.\n\nSecurity is role-governed; customers can only access their orders, sellers can access relevant items for owned orders, and administrators have full access. Auditing and error handling follow platform rules: invalid order ID returns not found, unauthorized access is denied, and malformed search conditions produce validation errors.\n\nThis endpoint supports advanced filtering by product ID, SKU, refund status, date, and full-text search on product name or code, as well as sorting by creation date or financial subtotal. The operation is often followed by retrieval of detail via GET on specific items or upstream order review by administrators.","summary":"Search and retrieve paginated order items for a specific order (shopping_mall_ai_order_items)","parameters":[{"name":"orderId","description":"Unique identifier of the order to retrieve items for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter and pagination parameters for order items in a given order","typeName":"IShoppingMallAiOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order item summaries for the order","typeName":"IPageIShoppingMallAiOrderItem.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieve a paginated, filterable list of order items for a specific order. This operation is closely associated with the shopping_mall_ai_order_items table in the Prisma schema. It supports advanced searching, filtering by product, variant, refund status, and viewing query-related details. Useful for order review, fulfillment, customer service, and returns processing. The response references all item-level pricing, snapshot, quantity, and fulfillment records for downstream operations. It also allows for pagination and sorting to efficiently manage large orders.","path":"/shoppingMallAi/seller/orders/{orderId}/orderItems","method":"patch","description":"This operation retrieves a paginated list of order items belonging to a specific order. It is essential for customers, sellers, and administrators to analyze the items that comprise an order, support fulfillment, audit line-level transactions, and resolve after-service scenarios. Each order item is linked to products, product snapshots, and order fulfillment status, leveraging the structure of shopping_mall_ai_order_items and its relationships to shopping_mall_ai_products, shopping_mall_ai_order_items, and shopping_mall_ai_orders.\n\nSecurity is role-governed; customers can only access their orders, sellers can access relevant items for owned orders, and administrators have full access. Auditing and error handling follow platform rules: invalid order ID returns not found, unauthorized access is denied, and malformed search conditions produce validation errors.\n\nThis endpoint supports advanced filtering by product ID, SKU, refund status, date, and full-text search on product name or code, as well as sorting by creation date or financial subtotal. The operation is often followed by retrieval of detail via GET on specific items or upstream order review by administrators.","summary":"Search and retrieve paginated order items for a specific order (shopping_mall_ai_order_items)","parameters":[{"name":"orderId","description":"Unique identifier of the order to retrieve items for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter and pagination parameters for order items in a given order","typeName":"IShoppingMallAiOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order item summaries for the order","typeName":"IPageIShoppingMallAiOrderItem.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"Retrieve a paginated, filterable list of order items for a specific order. This operation is closely associated with the shopping_mall_ai_order_items table in the Prisma schema. It supports advanced searching, filtering by product, variant, refund status, and viewing query-related details. Useful for order review, fulfillment, customer service, and returns processing. The response references all item-level pricing, snapshot, quantity, and fulfillment records for downstream operations. It also allows for pagination and sorting to efficiently manage large orders.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderItems","method":"patch","description":"This operation retrieves a paginated list of order items belonging to a specific order. It is essential for customers, sellers, and administrators to analyze the items that comprise an order, support fulfillment, audit line-level transactions, and resolve after-service scenarios. Each order item is linked to products, product snapshots, and order fulfillment status, leveraging the structure of shopping_mall_ai_order_items and its relationships to shopping_mall_ai_products, shopping_mall_ai_order_items, and shopping_mall_ai_orders.\n\nSecurity is role-governed; customers can only access their orders, sellers can access relevant items for owned orders, and administrators have full access. Auditing and error handling follow platform rules: invalid order ID returns not found, unauthorized access is denied, and malformed search conditions produce validation errors.\n\nThis endpoint supports advanced filtering by product ID, SKU, refund status, date, and full-text search on product name or code, as well as sorting by creation date or financial subtotal. The operation is often followed by retrieval of detail via GET on specific items or upstream order review by administrators.","summary":"Search and retrieve paginated order items for a specific order (shopping_mall_ai_order_items)","parameters":[{"name":"orderId","description":"Unique identifier of the order to retrieve items for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter and pagination parameters for order items in a given order","typeName":"IShoppingMallAiOrderItem.IRequest"},"responseBody":{"description":"Paginated list of order item summaries for the order","typeName":"IPageIShoppingMallAiOrderItem.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Get the details of a single order item that belongs to a particular order. This operation is based on the shopping_mall_ai_order_items table and its relationships with order, product, variant, and snapshot history. Used for auditing, fulfillment, after-service handling, and granular customer inquiry.","path":"/shoppingMallAi/customer/orders/{orderId}/orderItems/{orderItemId}","method":"get","description":"This operation returns all details of the specified order item within the context of its parent order. The underling schema is shopping_mall_ai_order_items, which contains details such as product and variant references, pricing breakdowns, fulfillment, refund/cancellation, quantity, and related snapshots for traceability.\n\nSecurity is enforced via role/ownership checks: customers can view their items, sellers can view items on their orders, and administrators have full audit access. Validation ensures that the order item belongs to the specified order and access to unrelated records is denied. The response provides a full view of the order item and its relationships, supporting downstream actions such as after-service, refunds, or product detail navigation.","summary":"Retrieve the details of a specific order item (shopping_mall_ai_order_items) by order and item ID","parameters":[{"name":"orderId","description":"Unique identifier of the order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item within the order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested order item including product, variant, and audit fields","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"Get the details of a single order item that belongs to a particular order. This operation is based on the shopping_mall_ai_order_items table and its relationships with order, product, variant, and snapshot history. Used for auditing, fulfillment, after-service handling, and granular customer inquiry.","path":"/shoppingMallAi/seller/orders/{orderId}/orderItems/{orderItemId}","method":"get","description":"This operation returns all details of the specified order item within the context of its parent order. The underling schema is shopping_mall_ai_order_items, which contains details such as product and variant references, pricing breakdowns, fulfillment, refund/cancellation, quantity, and related snapshots for traceability.\n\nSecurity is enforced via role/ownership checks: customers can view their items, sellers can view items on their orders, and administrators have full audit access. Validation ensures that the order item belongs to the specified order and access to unrelated records is denied. The response provides a full view of the order item and its relationships, supporting downstream actions such as after-service, refunds, or product detail navigation.","summary":"Retrieve the details of a specific order item (shopping_mall_ai_order_items) by order and item ID","parameters":[{"name":"orderId","description":"Unique identifier of the order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item within the order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested order item including product, variant, and audit fields","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"Get the details of a single order item that belongs to a particular order. This operation is based on the shopping_mall_ai_order_items table and its relationships with order, product, variant, and snapshot history. Used for auditing, fulfillment, after-service handling, and granular customer inquiry.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderItems/{orderItemId}","method":"get","description":"This operation returns all details of the specified order item within the context of its parent order. The underling schema is shopping_mall_ai_order_items, which contains details such as product and variant references, pricing breakdowns, fulfillment, refund/cancellation, quantity, and related snapshots for traceability.\n\nSecurity is enforced via role/ownership checks: customers can view their items, sellers can view items on their orders, and administrators have full audit access. Validation ensures that the order item belongs to the specified order and access to unrelated records is denied. The response provides a full view of the order item and its relationships, supporting downstream actions such as after-service, refunds, or product detail navigation.","summary":"Retrieve the details of a specific order item (shopping_mall_ai_order_items) by order and item ID","parameters":[{"name":"orderId","description":"Unique identifier of the order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item within the order.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested order item including product, variant, and audit fields","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new order item (e.g., for add-on, administrative correction, or as part of modular/after-service flows) within a given order. The operation maps to the shopping_mall_ai_order_items table in Prisma. Data validity, pricing structure, and referential integrity constraints must be enforced, and operations are strictly role-enforced.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderItems","method":"post","description":"This operation creates a new order item record within a specified order, using the fields defined in the shopping_mall_ai_order_items schema. This can be triggered by admin post-purchase correction, add-on sales, or as part of after-service workflows. Strict integrity checks ensure the new item maps to an existing product (and optionally variant/snapshot), and the parent order is open for item addition. Validation rules ensure SKU, quantity, and pricing are accurate, and the operation is typically available only to administrators or by special workflow trigger for sellers.\n\nSecurity requires that only administrators and eligible sellers may create line items post-order. Customers are not permitted to add items post-purchase via this endpoint. Business logic blocks duplicate SKU+order-item creation and enforces pricing integrity. Error handling returns actionable details for constraint violations or unauthorized access cases.","summary":"Create a new order item for a given order (shopping_mall_ai_order_items)","parameters":[{"name":"orderId","description":"Unique identifier of the order to add an item to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order item creation data including product reference, quantity, pricing, and optional variant/snapshot IDs","typeName":"IShoppingMallAiOrderItem.ICreate"},"responseBody":{"description":"The newly created order item with full details","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"Create a new order item (e.g., for add-on, administrative correction, or as part of modular/after-service flows) within a given order. The operation maps to the shopping_mall_ai_order_items table in Prisma. Data validity, pricing structure, and referential integrity constraints must be enforced, and operations are strictly role-enforced.","path":"/shoppingMallAi/seller/orders/{orderId}/orderItems","method":"post","description":"This operation creates a new order item record within a specified order, using the fields defined in the shopping_mall_ai_order_items schema. This can be triggered by admin post-purchase correction, add-on sales, or as part of after-service workflows. Strict integrity checks ensure the new item maps to an existing product (and optionally variant/snapshot), and the parent order is open for item addition. Validation rules ensure SKU, quantity, and pricing are accurate, and the operation is typically available only to administrators or by special workflow trigger for sellers.\n\nSecurity requires that only administrators and eligible sellers may create line items post-order. Customers are not permitted to add items post-purchase via this endpoint. Business logic blocks duplicate SKU+order-item creation and enforces pricing integrity. Error handling returns actionable details for constraint violations or unauthorized access cases.","summary":"Create a new order item for a given order (shopping_mall_ai_order_items)","parameters":[{"name":"orderId","description":"Unique identifier of the order to add an item to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order item creation data including product reference, quantity, pricing, and optional variant/snapshot IDs","typeName":"IShoppingMallAiOrderItem.ICreate"},"responseBody":{"description":"The newly created order item with full details","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Update an existing order item within a specific order. This operation targets a line item within an order, allowing adjustments to quantity, fulfillment status, or administrative correction. Underpinned by shopping_mall_ai_order_items schema, with strict audit and business rule enforcement for pricing, refund/cancellation state, and audit trail.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderItems/{orderItemId}","method":"put","description":"This operation updates the specified order item within a given order. Typical use cases include administrative correction, fulfillment status modification, or seller-side change requests (for permitted business scenarios such as corrections or legal requirements). The shopping_mall_ai_order_items schema provides the underlying data structure, enforcing referential integrity, pricing/quantity business rules, SKU and fulfillment state validation, and audit logging of before/after states.\n\nOnly administrators and eligible sellers may access this endpoint. Update operations are constrained by order state (e.g., no updates after completion or refund), and all changes are strictly logged for compliance. Error handling provides specific guidance for constraint violations, access errors, or record not found.","summary":"Update a specific order item (shopping_mall_ai_order_items) within an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order item update data including fields permitted for modification (quantity, fulfillment, correction)","typeName":"IShoppingMallAiOrderItem.IUpdate"},"responseBody":{"description":"The updated order item with full details post-modification","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"administrator"},{"specification":"Update an existing order item within a specific order. This operation targets a line item within an order, allowing adjustments to quantity, fulfillment status, or administrative correction. Underpinned by shopping_mall_ai_order_items schema, with strict audit and business rule enforcement for pricing, refund/cancellation state, and audit trail.","path":"/shoppingMallAi/seller/orders/{orderId}/orderItems/{orderItemId}","method":"put","description":"This operation updates the specified order item within a given order. Typical use cases include administrative correction, fulfillment status modification, or seller-side change requests (for permitted business scenarios such as corrections or legal requirements). The shopping_mall_ai_order_items schema provides the underlying data structure, enforcing referential integrity, pricing/quantity business rules, SKU and fulfillment state validation, and audit logging of before/after states.\n\nOnly administrators and eligible sellers may access this endpoint. Update operations are constrained by order state (e.g., no updates after completion or refund), and all changes are strictly logged for compliance. Error handling provides specific guidance for constraint violations, access errors, or record not found.","summary":"Update a specific order item (shopping_mall_ai_order_items) within an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order item update data including fields permitted for modification (quantity, fulfillment, correction)","typeName":"IShoppingMallAiOrderItem.IUpdate"},"responseBody":{"description":"The updated order item with full details post-modification","typeName":"IShoppingMallAiOrderItem"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"seller"},{"specification":"Delete (soft-delete or fully remove) an order item from a given order. This maps directly to the order item rows in shopping_mall_ai_order_items, supporting compliance, after-service, and administrative correction.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderItems/{orderItemId}","method":"delete","description":"Deletes an order item from the specified order. If the shopping_mall_ai_order_items schema includes a deleted_at field, this operation performs a soft-delete, marking the record as deleted for audit and compliance purposes. The operation validates that the item belongs to the order and that removal is business-valid (e.g., only if unfulfilled, or upon admin correction/after-service).\n\nOnly administrators and permitted sellers may perform deletions. Unauthorized access is blocked, and attempts to delete items already fully fulfilled, refunded, or otherwise locked by business rules return errors. Deletion triggers audit logging and may cascade to financial/fulfillment reconciliation if required.","summary":"Delete (soft-delete) a specific order item (shopping_mall_ai_order_items) from an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"administrator"},{"specification":"Delete (soft-delete or fully remove) an order item from a given order. This maps directly to the order item rows in shopping_mall_ai_order_items, supporting compliance, after-service, and administrative correction.","path":"/shoppingMallAi/seller/orders/{orderId}/orderItems/{orderItemId}","method":"delete","description":"Deletes an order item from the specified order. If the shopping_mall_ai_order_items schema includes a deleted_at field, this operation performs a soft-delete, marking the record as deleted for audit and compliance purposes. The operation validates that the item belongs to the order and that removal is business-valid (e.g., only if unfulfilled, or upon admin correction/after-service).\n\nOnly administrators and permitted sellers may perform deletions. Unauthorized access is blocked, and attempts to delete items already fully fulfilled, refunded, or otherwise locked by business rules return errors. Deletion triggers audit logging and may cascade to financial/fulfillment reconciliation if required.","summary":"Delete (soft-delete) a specific order item (shopping_mall_ai_order_items) from an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderItemId","description":"Unique identifier of the order item to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"seller"},{"specification":"Search and obtain a paginated, filterable list of order suborders (split fulfillment, per-seller, etc.) for a given order. Built on shopping_mall_ai_order_suborders schema, this operation enables advanced per-seller, fulfillment, and shipping workflow queries and supports after-service, multi-vendor transactions, and audit.","path":"/shoppingMallAi/customer/orders/{orderId}/orderSuborders","method":"patch","description":"Returns a paginated, filterable list of order suborders attached to a particular order. This operation directly corresponds to the shopping_mall_ai_order_suborders table in Prisma, supporting scenarios such as split fulfillment, multi-seller orders, per-seller logistics, or administrative auditing of complex orders.\n\nFiltering and search include suborder code, seller ID, status, shipping addresses, logistics status, and date/time criteria. Role-based permissions ensure sellers can only access their suborders, customers their own orders, and administrators all records. The operation supports sorting and pagination for efficient audit and workflow management. Error handling follows standard policy for access, validation, and not found conditions.","summary":"Search and retrieve paginated suborders for a specific order (shopping_mall_ai_order_suborders)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which to retrieve suborders.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination request for suborders under an order","typeName":"IShoppingMallAiOrderSuborder.IRequest"},"responseBody":{"description":"Paginated list of suborder summaries for the given order","typeName":"IPageIShoppingMallAiOrderSuborder.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"Search and obtain a paginated, filterable list of order suborders (split fulfillment, per-seller, etc.) for a given order. Built on shopping_mall_ai_order_suborders schema, this operation enables advanced per-seller, fulfillment, and shipping workflow queries and supports after-service, multi-vendor transactions, and audit.","path":"/shoppingMallAi/seller/orders/{orderId}/orderSuborders","method":"patch","description":"Returns a paginated, filterable list of order suborders attached to a particular order. This operation directly corresponds to the shopping_mall_ai_order_suborders table in Prisma, supporting scenarios such as split fulfillment, multi-seller orders, per-seller logistics, or administrative auditing of complex orders.\n\nFiltering and search include suborder code, seller ID, status, shipping addresses, logistics status, and date/time criteria. Role-based permissions ensure sellers can only access their suborders, customers their own orders, and administrators all records. The operation supports sorting and pagination for efficient audit and workflow management. Error handling follows standard policy for access, validation, and not found conditions.","summary":"Search and retrieve paginated suborders for a specific order (shopping_mall_ai_order_suborders)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which to retrieve suborders.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination request for suborders under an order","typeName":"IShoppingMallAiOrderSuborder.IRequest"},"responseBody":{"description":"Paginated list of suborder summaries for the given order","typeName":"IPageIShoppingMallAiOrderSuborder.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"Search and obtain a paginated, filterable list of order suborders (split fulfillment, per-seller, etc.) for a given order. Built on shopping_mall_ai_order_suborders schema, this operation enables advanced per-seller, fulfillment, and shipping workflow queries and supports after-service, multi-vendor transactions, and audit.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderSuborders","method":"patch","description":"Returns a paginated, filterable list of order suborders attached to a particular order. This operation directly corresponds to the shopping_mall_ai_order_suborders table in Prisma, supporting scenarios such as split fulfillment, multi-seller orders, per-seller logistics, or administrative auditing of complex orders.\n\nFiltering and search include suborder code, seller ID, status, shipping addresses, logistics status, and date/time criteria. Role-based permissions ensure sellers can only access their suborders, customers their own orders, and administrators all records. The operation supports sorting and pagination for efficient audit and workflow management. Error handling follows standard policy for access, validation, and not found conditions.","summary":"Search and retrieve paginated suborders for a specific order (shopping_mall_ai_order_suborders)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which to retrieve suborders.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination request for suborders under an order","typeName":"IShoppingMallAiOrderSuborder.IRequest"},"responseBody":{"description":"Paginated list of suborder summaries for the given order","typeName":"IPageIShoppingMallAiOrderSuborder.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Get full details of a specific suborder within a given parent order. Utilizing shopping_mall_ai_order_suborders, this API provides administrative, seller, and customer insight into fulfillment splits and tracking at the suborder level.","path":"/shoppingMallAi/customer/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"get","description":"Returns a comprehensive detail of the specified suborder within the parent order. The data derives from shopping_mall_ai_order_suborders and includes fulfillment and logistics details, suborder code, status, shipping provider and tracking, and associated audit trails. Validation ensures suborder belongs to order; role security restricts access by ownership or admin rights.\n\nThe operation is used for reviewing multi-seller fulfillment, handling after-service, resolving escalations, and managing customer/seller notifications. Error handling enforces integrity, not-found, and unauthorized access rules.","summary":"Retrieve details for a specific suborder (shopping_mall_ai_order_suborders) of an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the order suborder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the order suborder and associated fulfillment/logistics metadata","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"Get full details of a specific suborder within a given parent order. Utilizing shopping_mall_ai_order_suborders, this API provides administrative, seller, and customer insight into fulfillment splits and tracking at the suborder level.","path":"/shoppingMallAi/seller/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"get","description":"Returns a comprehensive detail of the specified suborder within the parent order. The data derives from shopping_mall_ai_order_suborders and includes fulfillment and logistics details, suborder code, status, shipping provider and tracking, and associated audit trails. Validation ensures suborder belongs to order; role security restricts access by ownership or admin rights.\n\nThe operation is used for reviewing multi-seller fulfillment, handling after-service, resolving escalations, and managing customer/seller notifications. Error handling enforces integrity, not-found, and unauthorized access rules.","summary":"Retrieve details for a specific suborder (shopping_mall_ai_order_suborders) of an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the order suborder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the order suborder and associated fulfillment/logistics metadata","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"Get full details of a specific suborder within a given parent order. Utilizing shopping_mall_ai_order_suborders, this API provides administrative, seller, and customer insight into fulfillment splits and tracking at the suborder level.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"get","description":"Returns a comprehensive detail of the specified suborder within the parent order. The data derives from shopping_mall_ai_order_suborders and includes fulfillment and logistics details, suborder code, status, shipping provider and tracking, and associated audit trails. Validation ensures suborder belongs to order; role security restricts access by ownership or admin rights.\n\nThe operation is used for reviewing multi-seller fulfillment, handling after-service, resolving escalations, and managing customer/seller notifications. Error handling enforces integrity, not-found, and unauthorized access rules.","summary":"Retrieve details for a specific suborder (shopping_mall_ai_order_suborders) of an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the order suborder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the order suborder and associated fulfillment/logistics metadata","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new suborder within a parent order for split fulfillment, multi-seller allocation, or administrative needs. Corresponds to shopping_mall_ai_order_suborders in Prisma, demanding integrity of parent linkage, seller association, code, and consistency with overall order structure. Used by admin, occasionally eligible sellers.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderSuborders","method":"post","description":"This operation creates a new suborder under a specific order. Directly builds on the shopping_mall_ai_order_suborders schema, requiring linkage to the order, assignment of seller, fulfillment information, suborder code, and fulfillment/shipping details. Primary use cases are manual intervention for split orders, administrative correction of fulfillment routing, or as part of advanced seller workflows.\n\nOnly administrators or eligible sellers may create suborders post-order; customers cannot run this API. Integrity validation ensures parent order, seller, and suborder status are valid for modification. The response includes all suborder fields as persisted.","summary":"Create a new suborder for an order (shopping_mall_ai_order_suborders)","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Suborder creation fields including seller, code, fulfillment details, status, and delivery info","typeName":"IShoppingMallAiOrderSuborder.ICreate"},"responseBody":{"description":"Created order suborder with full detail","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"Create a new suborder within a parent order for split fulfillment, multi-seller allocation, or administrative needs. Corresponds to shopping_mall_ai_order_suborders in Prisma, demanding integrity of parent linkage, seller association, code, and consistency with overall order structure. Used by admin, occasionally eligible sellers.","path":"/shoppingMallAi/seller/orders/{orderId}/orderSuborders","method":"post","description":"This operation creates a new suborder under a specific order. Directly builds on the shopping_mall_ai_order_suborders schema, requiring linkage to the order, assignment of seller, fulfillment information, suborder code, and fulfillment/shipping details. Primary use cases are manual intervention for split orders, administrative correction of fulfillment routing, or as part of advanced seller workflows.\n\nOnly administrators or eligible sellers may create suborders post-order; customers cannot run this API. Integrity validation ensures parent order, seller, and suborder status are valid for modification. The response includes all suborder fields as persisted.","summary":"Create a new suborder for an order (shopping_mall_ai_order_suborders)","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Suborder creation fields including seller, code, fulfillment details, status, and delivery info","typeName":"IShoppingMallAiOrderSuborder.ICreate"},"responseBody":{"description":"Created order suborder with full detail","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Update the specified suborder under a given parent order, such as for logistics, shipping, or administrative correction. This maps to shopping_mall_ai_order_suborders, enforcing business and referential constraints, with strict audit rules.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"put","description":"Updates an order suborder for a particular parent order. Implementation details use shopping_mall_ai_order_suborders for business structure, supporting field-level updates (fulfillment, shipping data, status). Strict audit and business rule enforcement is required, and all changes are logged for compliance.\n\nPermissions restrict this action to administrators and eligible sellers; customers are not permitted to modify suborders. Attempts to update fulfillment or status in an illegal lifecycle state are blocked by business logic. Error handling delineates validation, access, and state-locked errors.","summary":"Update a specific suborder (shopping_mall_ai_order_suborders) of an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the suborder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for suborder (fulfillment, logistics, status, etc.)","typeName":"IShoppingMallAiOrderSuborder.IUpdate"},"responseBody":{"description":"Updated order suborder with all fields reflecting modification","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"administrator"},{"specification":"Update the specified suborder under a given parent order, such as for logistics, shipping, or administrative correction. This maps to shopping_mall_ai_order_suborders, enforcing business and referential constraints, with strict audit rules.","path":"/shoppingMallAi/seller/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"put","description":"Updates an order suborder for a particular parent order. Implementation details use shopping_mall_ai_order_suborders for business structure, supporting field-level updates (fulfillment, shipping data, status). Strict audit and business rule enforcement is required, and all changes are logged for compliance.\n\nPermissions restrict this action to administrators and eligible sellers; customers are not permitted to modify suborders. Attempts to update fulfillment or status in an illegal lifecycle state are blocked by business logic. Error handling delineates validation, access, and state-locked errors.","summary":"Update a specific suborder (shopping_mall_ai_order_suborders) of an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the suborder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for suborder (fulfillment, logistics, status, etc.)","typeName":"IShoppingMallAiOrderSuborder.IUpdate"},"responseBody":{"description":"Updated order suborder with all fields reflecting modification","typeName":"IShoppingMallAiOrderSuborder"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"seller"},{"specification":"Delete (soft-delete or permanently remove) a suborder under a parent order for cases of fulfillment reversal, administrative correction, or error rectification. Soft-deleted if suborder schema supports deleted_at; hard delete otherwise.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"delete","description":"Deletes the specified suborder under a particular order. Performs a soft-delete by setting deleted_at unless unavailable in schema—in which case, a hard delete is performed. Only administrators and eligible sellers may delete suborders, and business rules strictly enforce allowable states for removal (e.g., unfulfilled, error, or pre-shipment).\n\nAudit logs record all deletions, cascading effects on fulfillment, and related notifications as required by policy. Unauthorized access or attempts to delete suborders in non-deletable states (completed, shipped, etc.) are rejected with explicit error messages.","summary":"Delete (soft-delete) a specific suborder (shopping_mall_ai_order_suborders) from an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the suborder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"administrator"},{"specification":"Delete (soft-delete or permanently remove) a suborder under a parent order for cases of fulfillment reversal, administrative correction, or error rectification. Soft-deleted if suborder schema supports deleted_at; hard delete otherwise.","path":"/shoppingMallAi/seller/orders/{orderId}/orderSuborders/{orderSuborderId}","method":"delete","description":"Deletes the specified suborder under a particular order. Performs a soft-delete by setting deleted_at unless unavailable in schema—in which case, a hard delete is performed. Only administrators and eligible sellers may delete suborders, and business rules strictly enforce allowable states for removal (e.g., unfulfilled, error, or pre-shipment).\n\nAudit logs record all deletions, cascading effects on fulfillment, and related notifications as required by policy. Unauthorized access or attempts to delete suborders in non-deletable states (completed, shipped, etc.) are rejected with explicit error messages.","summary":"Delete (soft-delete) a specific suborder (shopping_mall_ai_order_suborders) from an order","parameters":[{"name":"orderId","description":"Unique identifier of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"orderSuborderId","description":"Unique identifier of the suborder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"seller"},{"specification":"Search and retrieve a paginated, filterable list of order state transition logs for a specific order—including suborder transitions. Leverages shopping_mall_ai_order_state_logs schema in Prisma, supporting per-actor, per-status, and full audit history queries.","path":"/shoppingMallAi/customer/orders/{orderId}/orderStateLogs","method":"patch","description":"Retrieve all state transition events for a specific order (and associated suborders). Uses shopping_mall_ai_order_state_logs for full audit trail, providing details on every actor, prev/new status, transition comment, suborder context, and exact timestamp. Permissions restrict customers/sellers to their own records, administrators to all data. Query parameters enable filtering by actor (admin/user/seller), status transitions, comments, time window, and full-text search on comments. Results are paginated and sorted by timestamp or actor.\n\nThis operation is core to compliance, operational monitoring, and detailed order/suborder lifecycle review. Related endpoints enable downstream state log detail retrieval or upstream order overview/audit.","summary":"Search and retrieve paginated state logs for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which to retrieve state logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"State log search, filter, and pagination parameters against order and suborders","typeName":"IShoppingMallAiOrderStateLog.IRequest"},"responseBody":{"description":"Paginated list of state logs for order/suborders","typeName":"IPageIShoppingMallAiOrderStateLog.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"Search and retrieve a paginated, filterable list of order state transition logs for a specific order—including suborder transitions. Leverages shopping_mall_ai_order_state_logs schema in Prisma, supporting per-actor, per-status, and full audit history queries.","path":"/shoppingMallAi/seller/orders/{orderId}/orderStateLogs","method":"patch","description":"Retrieve all state transition events for a specific order (and associated suborders). Uses shopping_mall_ai_order_state_logs for full audit trail, providing details on every actor, prev/new status, transition comment, suborder context, and exact timestamp. Permissions restrict customers/sellers to their own records, administrators to all data. Query parameters enable filtering by actor (admin/user/seller), status transitions, comments, time window, and full-text search on comments. Results are paginated and sorted by timestamp or actor.\n\nThis operation is core to compliance, operational monitoring, and detailed order/suborder lifecycle review. Related endpoints enable downstream state log detail retrieval or upstream order overview/audit.","summary":"Search and retrieve paginated state logs for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which to retrieve state logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"State log search, filter, and pagination parameters against order and suborders","typeName":"IShoppingMallAiOrderStateLog.IRequest"},"responseBody":{"description":"Paginated list of state logs for order/suborders","typeName":"IPageIShoppingMallAiOrderStateLog.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"Search and retrieve a paginated, filterable list of order state transition logs for a specific order—including suborder transitions. Leverages shopping_mall_ai_order_state_logs schema in Prisma, supporting per-actor, per-status, and full audit history queries.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderStateLogs","method":"patch","description":"Retrieve all state transition events for a specific order (and associated suborders). Uses shopping_mall_ai_order_state_logs for full audit trail, providing details on every actor, prev/new status, transition comment, suborder context, and exact timestamp. Permissions restrict customers/sellers to their own records, administrators to all data. Query parameters enable filtering by actor (admin/user/seller), status transitions, comments, time window, and full-text search on comments. Results are paginated and sorted by timestamp or actor.\n\nThis operation is core to compliance, operational monitoring, and detailed order/suborder lifecycle review. Related endpoints enable downstream state log detail retrieval or upstream order overview/audit.","summary":"Search and retrieve paginated state logs for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which to retrieve state logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"State log search, filter, and pagination parameters against order and suborders","typeName":"IShoppingMallAiOrderStateLog.IRequest"},"responseBody":{"description":"Paginated list of state logs for order/suborders","typeName":"IPageIShoppingMallAiOrderStateLog.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve full details of a single order state log entry, including transition context and actor details. Underpinned by shopping_mall_ai_order_state_logs, this enables full audit, compliance checks, and operational review at the line level.","path":"/shoppingMallAi/customer/orders/{orderId}/orderStateLogs/{orderStateLogId}","method":"get","description":"Get full details for a specific state log within an order. The primary schema is shopping_mall_ai_order_state_logs, which includes transition timestamps, prev/new status, transition comments, and actors (admin/customer/seller). Validation ensures log belongs to order, protects cross-tenant access, and implements full audit trail reporting.\n\nThis operation is critical for compliance audit, forensic review of order/suborder state changes, and role-based operational access. Error handling specifically covers unauthorized access, not found, and invalid path parameter states.","summary":"Retrieve a specific state log entry for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose state log is being accessed.","schema":{"type":"string","format":"uuid"}},{"name":"orderStateLogId","description":"Unique identifier of the order state log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested order state log, including transition actors and timestamps","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"Retrieve full details of a single order state log entry, including transition context and actor details. Underpinned by shopping_mall_ai_order_state_logs, this enables full audit, compliance checks, and operational review at the line level.","path":"/shoppingMallAi/seller/orders/{orderId}/orderStateLogs/{orderStateLogId}","method":"get","description":"Get full details for a specific state log within an order. The primary schema is shopping_mall_ai_order_state_logs, which includes transition timestamps, prev/new status, transition comments, and actors (admin/customer/seller). Validation ensures log belongs to order, protects cross-tenant access, and implements full audit trail reporting.\n\nThis operation is critical for compliance audit, forensic review of order/suborder state changes, and role-based operational access. Error handling specifically covers unauthorized access, not found, and invalid path parameter states.","summary":"Retrieve a specific state log entry for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose state log is being accessed.","schema":{"type":"string","format":"uuid"}},{"name":"orderStateLogId","description":"Unique identifier of the order state log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested order state log, including transition actors and timestamps","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieve full details of a single order state log entry, including transition context and actor details. Underpinned by shopping_mall_ai_order_state_logs, this enables full audit, compliance checks, and operational review at the line level.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderStateLogs/{orderStateLogId}","method":"get","description":"Get full details for a specific state log within an order. The primary schema is shopping_mall_ai_order_state_logs, which includes transition timestamps, prev/new status, transition comments, and actors (admin/customer/seller). Validation ensures log belongs to order, protects cross-tenant access, and implements full audit trail reporting.\n\nThis operation is critical for compliance audit, forensic review of order/suborder state changes, and role-based operational access. Error handling specifically covers unauthorized access, not found, and invalid path parameter states.","summary":"Retrieve a specific state log entry for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose state log is being accessed.","schema":{"type":"string","format":"uuid"}},{"name":"orderStateLogId","description":"Unique identifier of the order state log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested order state log, including transition actors and timestamps","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"This operation creates a new order state log entry for a specific order in the shoppingMallAi platform. It is associated with the `shopping_mall_ai_order_state_logs` table and is used to record state transitions within an order's lifecycle, such as status changes and transitions authored by administrators, customers, or sellers. The operation captures details including previous and new status, the actor's ID, transition comments, and timestamps for auditing and compliance.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderStateLogs","method":"post","description":"Creates a new order state log entry for an order, recording a state transition in the system. This API writes to the `shopping_mall_ai_order_state_logs` table and is intended for tracking status changes by various actors (admin, customer, seller). Each entry captures previous and new statuses, role identification, comments, and the time of transition for full audit history.\n\nSecurity considerations require that only actors with appropriate roles (administrator, customer linked to the order, or responsible seller) can invoke this operation. All business rules around valid transitions and comment requirements must be enforced. If the order is not found or the actor is unauthorized, the operation will return an error.\n\nThis log supports traceability for compliance, risk management, and operational debugging. It is often used together with order detail retrieval endpoints to display an order's full status history.","summary":"Create a new order state transition log for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which the state log is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order state log creation data, including current actor, transition, and reason.","typeName":"IShoppingMallAiOrderStateLog.ICreate"},"responseBody":{"description":"The created order state log entry with transition details.","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["administrator","seller","customer"],"name":"create","authorizationRole":"administrator"},{"specification":"This operation creates a new order state log entry for a specific order in the shoppingMallAi platform. It is associated with the `shopping_mall_ai_order_state_logs` table and is used to record state transitions within an order's lifecycle, such as status changes and transitions authored by administrators, customers, or sellers. The operation captures details including previous and new status, the actor's ID, transition comments, and timestamps for auditing and compliance.","path":"/shoppingMallAi/seller/orders/{orderId}/orderStateLogs","method":"post","description":"Creates a new order state log entry for an order, recording a state transition in the system. This API writes to the `shopping_mall_ai_order_state_logs` table and is intended for tracking status changes by various actors (admin, customer, seller). Each entry captures previous and new statuses, role identification, comments, and the time of transition for full audit history.\n\nSecurity considerations require that only actors with appropriate roles (administrator, customer linked to the order, or responsible seller) can invoke this operation. All business rules around valid transitions and comment requirements must be enforced. If the order is not found or the actor is unauthorized, the operation will return an error.\n\nThis log supports traceability for compliance, risk management, and operational debugging. It is often used together with order detail retrieval endpoints to display an order's full status history.","summary":"Create a new order state transition log for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which the state log is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order state log creation data, including current actor, transition, and reason.","typeName":"IShoppingMallAiOrderStateLog.ICreate"},"responseBody":{"description":"The created order state log entry with transition details.","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["administrator","seller","customer"],"name":"create","authorizationRole":"seller"},{"specification":"This operation creates a new order state log entry for a specific order in the shoppingMallAi platform. It is associated with the `shopping_mall_ai_order_state_logs` table and is used to record state transitions within an order's lifecycle, such as status changes and transitions authored by administrators, customers, or sellers. The operation captures details including previous and new status, the actor's ID, transition comments, and timestamps for auditing and compliance.","path":"/shoppingMallAi/customer/orders/{orderId}/orderStateLogs","method":"post","description":"Creates a new order state log entry for an order, recording a state transition in the system. This API writes to the `shopping_mall_ai_order_state_logs` table and is intended for tracking status changes by various actors (admin, customer, seller). Each entry captures previous and new statuses, role identification, comments, and the time of transition for full audit history.\n\nSecurity considerations require that only actors with appropriate roles (administrator, customer linked to the order, or responsible seller) can invoke this operation. All business rules around valid transitions and comment requirements must be enforced. If the order is not found or the actor is unauthorized, the operation will return an error.\n\nThis log supports traceability for compliance, risk management, and operational debugging. It is often used together with order detail retrieval endpoints to display an order's full status history.","summary":"Create a new order state transition log for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order for which the state log is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Order state log creation data, including current actor, transition, and reason.","typeName":"IShoppingMallAiOrderStateLog.ICreate"},"responseBody":{"description":"The created order state log entry with transition details.","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["administrator","seller","customer"],"name":"create","authorizationRole":"customer"},{"specification":"This operation updates an existing order state log entry identified by orderId and orderStateLogId in the shoppingMallAi platform. It operates on the `shopping_mall_ai_order_state_logs` table and enables amendments to comments or corrections to transition logs, as permitted by business rules and with full auditability. Typical use cases include administrative edits or resolution of disputes, with changes being tracked for compliance.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderStateLogs/{orderStateLogId}","method":"put","description":"Updates a specific order state log entry. This allows authorized roles (typically administrators) to correct or append explanations, comments, or metadata for a status transition event. Data is persisted in the `shopping_mall_ai_order_state_logs` table, ensuring modifications are tracked and auditable.\n\nSecurity is enforced such that only authorized roles may update state logs. Attempting to edit a log that does not exist or when not permitted will result in an error. The operation is designed to support compliance requirements related to order and audit traceability, and should be used in conjunction with audit trail and order history endpoints.\n\nIf the log update is required due to dispute resolution, a comment explaining the rationale must be included.","summary":"Update a specific order state log entry for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order.","schema":{"type":"string","format":"uuid"}},{"name":"orderStateLogId","description":"Unique identifier of the order state log entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating an order state log, such as transition comment.","typeName":"IShoppingMallAiOrderStateLog.IUpdate"},"responseBody":{"description":"The updated order state log entry.","typeName":"IShoppingMallAiOrderStateLog"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This operation removes (soft delete) an order state log entry from the `shopping_mall_ai_order_state_logs` table, identified by orderId and orderStateLogId, for the given order in the shoppingMallAi platform. Deletion is typically restricted to administrators for compliance and audit control purposes, and only soft-delete is allowed, ensuring that historical records remain available for legal and business review.","path":"/shoppingMallAi/administrator/orders/{orderId}/orderStateLogs/{orderStateLogId}","method":"delete","description":"Deletes (soft deletes) a specific order state log entry for an order. This endpoint ensures audit compliance by marking the state log entry as deleted, rather than permanently erasing it, thus preserving the change history for legal or operational review. Access is limited to administrator roles. If the entry does not exist or is already deleted, an error will be returned.\n\nRelated operations include retrieving an order's full history and undeleting logs where business policy allows.","summary":"Soft delete a specific order state log entry for an order (shopping_mall_ai_order_state_logs)","parameters":[{"name":"orderId","description":"Unique identifier of the order.","schema":{"type":"string","format":"uuid"}},{"name":"orderStateLogId","description":"Unique identifier of the order state log entry to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"This operation retrieves a filtered and paginated list of payment records for a specific order, as stored in the `shopping_mall_ai_payments` table. It supports advanced filtering, search, and pagination by properties such as payment status, method, and dates. Its primary usage is for administrators, the customer who placed the order, or, if the order is associated with a seller, the responsible seller.","path":"/shoppingMallAi/administrator/orders/{orderId}/payments","method":"patch","description":"Retrieves a paginated list of payments for the specified order. Key use cases include administrators and order owners reviewing payment history, searching for payment events by status, or exporting payment audit logs. Authorized roles may filter by method, date, or payment status.\n\nThis endpoint enforces strict authorization: customers may only view their own payments, sellers only those for orders fulfilled by them, and administrators all records. Attempts to access payments for unauthorized orders or invalid criteria will result in access denied. Pagination and filtering parameters are supported via the request body model.\n\nNormally used in combination with order detail and financial audit endpoints.","summary":"Search and retrieve a paginated list of payments for an order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose payment records are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for searching payment records.","typeName":"IShoppingMallAiPayment.IRequest"},"responseBody":{"description":"Paginated payment records for the order, matching search criteria.","typeName":"IPageIShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves a filtered and paginated list of payment records for a specific order, as stored in the `shopping_mall_ai_payments` table. It supports advanced filtering, search, and pagination by properties such as payment status, method, and dates. Its primary usage is for administrators, the customer who placed the order, or, if the order is associated with a seller, the responsible seller.","path":"/shoppingMallAi/seller/orders/{orderId}/payments","method":"patch","description":"Retrieves a paginated list of payments for the specified order. Key use cases include administrators and order owners reviewing payment history, searching for payment events by status, or exporting payment audit logs. Authorized roles may filter by method, date, or payment status.\n\nThis endpoint enforces strict authorization: customers may only view their own payments, sellers only those for orders fulfilled by them, and administrators all records. Attempts to access payments for unauthorized orders or invalid criteria will result in access denied. Pagination and filtering parameters are supported via the request body model.\n\nNormally used in combination with order detail and financial audit endpoints.","summary":"Search and retrieve a paginated list of payments for an order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose payment records are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for searching payment records.","typeName":"IShoppingMallAiPayment.IRequest"},"responseBody":{"description":"Paginated payment records for the order, matching search criteria.","typeName":"IPageIShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"seller"},{"specification":"This operation retrieves a filtered and paginated list of payment records for a specific order, as stored in the `shopping_mall_ai_payments` table. It supports advanced filtering, search, and pagination by properties such as payment status, method, and dates. Its primary usage is for administrators, the customer who placed the order, or, if the order is associated with a seller, the responsible seller.","path":"/shoppingMallAi/customer/orders/{orderId}/payments","method":"patch","description":"Retrieves a paginated list of payments for the specified order. Key use cases include administrators and order owners reviewing payment history, searching for payment events by status, or exporting payment audit logs. Authorized roles may filter by method, date, or payment status.\n\nThis endpoint enforces strict authorization: customers may only view their own payments, sellers only those for orders fulfilled by them, and administrators all records. Attempts to access payments for unauthorized orders or invalid criteria will result in access denied. Pagination and filtering parameters are supported via the request body model.\n\nNormally used in combination with order detail and financial audit endpoints.","summary":"Search and retrieve a paginated list of payments for an order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose payment records are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for searching payment records.","typeName":"IShoppingMallAiPayment.IRequest"},"responseBody":{"description":"Paginated payment records for the order, matching search criteria.","typeName":"IPageIShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieves detailed information about a specific payment for a given order in the shoppingMallAi platform. This GET operation targets the `shopping_mall_ai_payments` table and is used for audit, reporting, and user-facing payment verification purposes. Authorizations are enforced so that only administrators, sellers tied to the order, or the purchasing customer can view the payment record.","path":"/shoppingMallAi/administrator/orders/{orderId}/payments/{paymentId}","method":"get","description":"Fetches detailed information about a single payment associated with an order. Provides access to payment metadata, transaction status, financial breakdown, and any reconciliation data attached to the payment record. Only users that have a business reason to access this payment (admin, seller, or purchaser) are allowed.\n\nAttempting to access non-existent or unauthorized payment records will result in an error.\n\nIt is recommended this endpoint be used along with payment history and financial audit APIs for end-to-end reporting.","summary":"Get payment detail for a specific payment and order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the specified payment record.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"administrator"},{"specification":"Retrieves detailed information about a specific payment for a given order in the shoppingMallAi platform. This GET operation targets the `shopping_mall_ai_payments` table and is used for audit, reporting, and user-facing payment verification purposes. Authorizations are enforced so that only administrators, sellers tied to the order, or the purchasing customer can view the payment record.","path":"/shoppingMallAi/seller/orders/{orderId}/payments/{paymentId}","method":"get","description":"Fetches detailed information about a single payment associated with an order. Provides access to payment metadata, transaction status, financial breakdown, and any reconciliation data attached to the payment record. Only users that have a business reason to access this payment (admin, seller, or purchaser) are allowed.\n\nAttempting to access non-existent or unauthorized payment records will result in an error.\n\nIt is recommended this endpoint be used along with payment history and financial audit APIs for end-to-end reporting.","summary":"Get payment detail for a specific payment and order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the specified payment record.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieves detailed information about a specific payment for a given order in the shoppingMallAi platform. This GET operation targets the `shopping_mall_ai_payments` table and is used for audit, reporting, and user-facing payment verification purposes. Authorizations are enforced so that only administrators, sellers tied to the order, or the purchasing customer can view the payment record.","path":"/shoppingMallAi/customer/orders/{orderId}/payments/{paymentId}","method":"get","description":"Fetches detailed information about a single payment associated with an order. Provides access to payment metadata, transaction status, financial breakdown, and any reconciliation data attached to the payment record. Only users that have a business reason to access this payment (admin, seller, or purchaser) are allowed.\n\nAttempting to access non-existent or unauthorized payment records will result in an error.\n\nIt is recommended this endpoint be used along with payment history and financial audit APIs for end-to-end reporting.","summary":"Get payment detail for a specific payment and order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the specified payment record.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"customer"},{"specification":"Creates a new payment record for a specific order, as represented by the `shopping_mall_ai_payments` table. Primarily used by platform administrators or automated order/payment services to record payment events, this endpoint handles entry of all necessary payment information and enforces business rule compliance, including unique transaction codes, legal audit fields, and consistency with order pricing.","path":"/shoppingMallAi/administrator/orders/{orderId}/payments","method":"post","description":"Creates a payment entry for an order. This operation requires entry of all relevant payment fields, such as payment method, provider, status, and amount. The payment will be saved to the `shopping_mall_ai_payments` table and linked to the specified order.\n\nAuthorization is enforced for order ownership (customers), fulfillment responsibility (sellers), and system-wide management (administrators). Payment creation must verify business rules for payment method eligibility, order state, and financial reconciliation. Validation will fail if order is not eligible for payment or data is insufficient.\n\nPayment records created are auditable and used for future reconciliation, refunding, and legal compliance.","summary":"Create a payment entry for the order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order to which payment will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for the new payment record, including method, amount, provider, and status.","typeName":"IShoppingMallAiPayment.ICreate"},"responseBody":{"description":"Created payment record.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"create","authorizationRole":"administrator"},{"specification":"Creates a new payment record for a specific order, as represented by the `shopping_mall_ai_payments` table. Primarily used by platform administrators or automated order/payment services to record payment events, this endpoint handles entry of all necessary payment information and enforces business rule compliance, including unique transaction codes, legal audit fields, and consistency with order pricing.","path":"/shoppingMallAi/seller/orders/{orderId}/payments","method":"post","description":"Creates a payment entry for an order. This operation requires entry of all relevant payment fields, such as payment method, provider, status, and amount. The payment will be saved to the `shopping_mall_ai_payments` table and linked to the specified order.\n\nAuthorization is enforced for order ownership (customers), fulfillment responsibility (sellers), and system-wide management (administrators). Payment creation must verify business rules for payment method eligibility, order state, and financial reconciliation. Validation will fail if order is not eligible for payment or data is insufficient.\n\nPayment records created are auditable and used for future reconciliation, refunding, and legal compliance.","summary":"Create a payment entry for the order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order to which payment will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for the new payment record, including method, amount, provider, and status.","typeName":"IShoppingMallAiPayment.ICreate"},"responseBody":{"description":"Created payment record.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"create","authorizationRole":"seller"},{"specification":"Creates a new payment record for a specific order, as represented by the `shopping_mall_ai_payments` table. Primarily used by platform administrators or automated order/payment services to record payment events, this endpoint handles entry of all necessary payment information and enforces business rule compliance, including unique transaction codes, legal audit fields, and consistency with order pricing.","path":"/shoppingMallAi/customer/orders/{orderId}/payments","method":"post","description":"Creates a payment entry for an order. This operation requires entry of all relevant payment fields, such as payment method, provider, status, and amount. The payment will be saved to the `shopping_mall_ai_payments` table and linked to the specified order.\n\nAuthorization is enforced for order ownership (customers), fulfillment responsibility (sellers), and system-wide management (administrators). Payment creation must verify business rules for payment method eligibility, order state, and financial reconciliation. Validation will fail if order is not eligible for payment or data is insufficient.\n\nPayment records created are auditable and used for future reconciliation, refunding, and legal compliance.","summary":"Create a payment entry for the order (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order to which payment will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for the new payment record, including method, amount, provider, and status.","typeName":"IShoppingMallAiPayment.ICreate"},"responseBody":{"description":"Created payment record.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller","customer"],"name":"create","authorizationRole":"customer"},{"specification":"Updates an existing payment record in the `shopping_mall_ai_payments` table for a specific order and payment ID. This is typically used to correct payment information, update status to reflect reconciliation results, or provide additional details. Operations are strictly authorized to ensure payments remain tamper-evident. All updates are fully tracked for audit and compliance.","path":"/shoppingMallAi/administrator/orders/{orderId}/payments/{paymentId}","method":"put","description":"Updates payment information for a specified order and payment entry. Authorizations are required, typically for administrators or sellers responsible for claims/corrections. Supported update scenarios include status change (reconciled/failed), additional note entry, or minor amount corrections. All actions are audit logged and must meet payment/invoice compliance policies.\n\nUnauthorized or invalid updates will return an error. Updates to core payment information are tightly controlled and often require administrative approval.","summary":"Update a payment record for a specific order and payment (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payment fields to update (e.g., status, notes, reconciliation results).","typeName":"IShoppingMallAiPayment.IUpdate"},"responseBody":{"description":"The updated payment entry.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"administrator"},{"specification":"Updates an existing payment record in the `shopping_mall_ai_payments` table for a specific order and payment ID. This is typically used to correct payment information, update status to reflect reconciliation results, or provide additional details. Operations are strictly authorized to ensure payments remain tamper-evident. All updates are fully tracked for audit and compliance.","path":"/shoppingMallAi/seller/orders/{orderId}/payments/{paymentId}","method":"put","description":"Updates payment information for a specified order and payment entry. Authorizations are required, typically for administrators or sellers responsible for claims/corrections. Supported update scenarios include status change (reconciled/failed), additional note entry, or minor amount corrections. All actions are audit logged and must meet payment/invoice compliance policies.\n\nUnauthorized or invalid updates will return an error. Updates to core payment information are tightly controlled and often require administrative approval.","summary":"Update a payment record for a specific order and payment (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payment fields to update (e.g., status, notes, reconciliation results).","typeName":"IShoppingMallAiPayment.IUpdate"},"responseBody":{"description":"The updated payment entry.","typeName":"IShoppingMallAiPayment"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"seller"},{"specification":"Soft deletes a payment record associated with a specific order and payment ID in the `shopping_mall_ai_payments` table. Intended for administrative or compliance purposes, this operation logically removes payment records from active queries while retaining their audit trail. Business rules ensure only administrators or, in some cases, sellers who owned the order, can perform this deletion, and only when the payment is not legally frozen or tied to ongoing disputes/refunds.","path":"/shoppingMallAi/administrator/orders/{orderId}/payments/{paymentId}","method":"delete","description":"Marks a specific payment entry as deleted for the order in question. This operation performs a soft delete, preserving audit trail and ensuring compliance with financial record retention policies. Only administrators and authorized sellers may use this endpoint, and specific business rules apply to deletion eligibility (e.g., not allowed if under dispute).\n\nAttempting to delete non-existent or protected payment records will result in an error.\n\nCombine with audit trail and payment list endpoints for reconciliation and audit workflows.","summary":"Soft delete a payment record for a specific order and payment (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment record.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"administrator"},{"specification":"Soft deletes a payment record associated with a specific order and payment ID in the `shopping_mall_ai_payments` table. Intended for administrative or compliance purposes, this operation logically removes payment records from active queries while retaining their audit trail. Business rules ensure only administrators or, in some cases, sellers who owned the order, can perform this deletion, and only when the payment is not legally frozen or tied to ongoing disputes/refunds.","path":"/shoppingMallAi/seller/orders/{orderId}/payments/{paymentId}","method":"delete","description":"Marks a specific payment entry as deleted for the order in question. This operation performs a soft delete, preserving audit trail and ensuring compliance with financial record retention policies. Only administrators and authorized sellers may use this endpoint, and specific business rules apply to deletion eligibility (e.g., not allowed if under dispute).\n\nAttempting to delete non-existent or protected payment records will result in an error.\n\nCombine with audit trail and payment list endpoints for reconciliation and audit workflows.","summary":"Soft delete a payment record for a specific order and payment (shopping_mall_ai_payments)","parameters":[{"name":"orderId","description":"Unique identifier of the order containing the payment record.","schema":{"type":"string","format":"uuid"}},{"name":"paymentId","description":"Unique identifier of the payment record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"seller"},{"specification":"This operation retrieves a paginated and filtered list of refunds for a specified order from the `shopping_mall_ai_refunds` table. It enables users to search refunds by status, date, and other criteria. The endpoint is essential for audit reporting, financial reconciliation, and customer service operations, and allows authorized roles to access refund histories for auditing and compliance.","path":"/shoppingMallAi/administrator/orders/{orderId}/refunds","method":"patch","description":"Searches refund records for a given order with advanced filtering and pagination. Key use cases include admins or sellers reconciling refund amounts, customers tracking their refund status, and audit team compiling compliance logs. Search can be filtered by refund status or date, and results are paginated.\n\nAccess is controlled so customers see only their own refunds, sellers only those linked to their orders, and administrators see all. Unauthorized searches or invalid parameters will return errors.\n\nThe endpoint is used alongside order detail and payment/refund audit trails in service workflows.","summary":"Search and retrieve a paginated list of refunds for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose refunds will be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for refund record search.","typeName":"IShoppingMallAiRefund.IRequest"},"responseBody":{"description":"Paginated refund records matching the search criteria.","typeName":"IPageIShoppingMallAiRefund"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves a paginated and filtered list of refunds for a specified order from the `shopping_mall_ai_refunds` table. It enables users to search refunds by status, date, and other criteria. The endpoint is essential for audit reporting, financial reconciliation, and customer service operations, and allows authorized roles to access refund histories for auditing and compliance.","path":"/shoppingMallAi/seller/orders/{orderId}/refunds","method":"patch","description":"Searches refund records for a given order with advanced filtering and pagination. Key use cases include admins or sellers reconciling refund amounts, customers tracking their refund status, and audit team compiling compliance logs. Search can be filtered by refund status or date, and results are paginated.\n\nAccess is controlled so customers see only their own refunds, sellers only those linked to their orders, and administrators see all. Unauthorized searches or invalid parameters will return errors.\n\nThe endpoint is used alongside order detail and payment/refund audit trails in service workflows.","summary":"Search and retrieve a paginated list of refunds for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose refunds will be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for refund record search.","typeName":"IShoppingMallAiRefund.IRequest"},"responseBody":{"description":"Paginated refund records matching the search criteria.","typeName":"IPageIShoppingMallAiRefund"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"seller"},{"specification":"This operation retrieves a paginated and filtered list of refunds for a specified order from the `shopping_mall_ai_refunds` table. It enables users to search refunds by status, date, and other criteria. The endpoint is essential for audit reporting, financial reconciliation, and customer service operations, and allows authorized roles to access refund histories for auditing and compliance.","path":"/shoppingMallAi/customer/orders/{orderId}/refunds","method":"patch","description":"Searches refund records for a given order with advanced filtering and pagination. Key use cases include admins or sellers reconciling refund amounts, customers tracking their refund status, and audit team compiling compliance logs. Search can be filtered by refund status or date, and results are paginated.\n\nAccess is controlled so customers see only their own refunds, sellers only those linked to their orders, and administrators see all. Unauthorized searches or invalid parameters will return errors.\n\nThe endpoint is used alongside order detail and payment/refund audit trails in service workflows.","summary":"Search and retrieve a paginated list of refunds for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order whose refunds will be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for refund record search.","typeName":"IShoppingMallAiRefund.IRequest"},"responseBody":{"description":"Paginated refund records matching the search criteria.","typeName":"IPageIShoppingMallAiRefund"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieves full detail about a specific refund for an order, leveraging the `shopping_mall_ai_refunds` table. This GET operation serves business purposes such as audit, dispute resolution, and customer service inquiries, and is access-controlled to only authorized actors related to the order or refund.","path":"/shoppingMallAi/administrator/orders/{orderId}/refunds/{refundId}","method":"get","description":"Returns detailed information for a particular refund record associated with the given order. Enables administrators, the customer, or the seller managing the order to access status, amount, rationale, and processing details for any refund.\n\nIf the refund does not exist or is not accessible to the current actor, the API returns an error. Used for refund tracking, statement reconciliation, and regulatory record-keeping.","summary":"Get full details of a specific refund for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order for lookup.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record for detail retrieval.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified refund record with full data fields.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"administrator"},{"specification":"Retrieves full detail about a specific refund for an order, leveraging the `shopping_mall_ai_refunds` table. This GET operation serves business purposes such as audit, dispute resolution, and customer service inquiries, and is access-controlled to only authorized actors related to the order or refund.","path":"/shoppingMallAi/seller/orders/{orderId}/refunds/{refundId}","method":"get","description":"Returns detailed information for a particular refund record associated with the given order. Enables administrators, the customer, or the seller managing the order to access status, amount, rationale, and processing details for any refund.\n\nIf the refund does not exist or is not accessible to the current actor, the API returns an error. Used for refund tracking, statement reconciliation, and regulatory record-keeping.","summary":"Get full details of a specific refund for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order for lookup.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record for detail retrieval.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified refund record with full data fields.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieves full detail about a specific refund for an order, leveraging the `shopping_mall_ai_refunds` table. This GET operation serves business purposes such as audit, dispute resolution, and customer service inquiries, and is access-controlled to only authorized actors related to the order or refund.","path":"/shoppingMallAi/customer/orders/{orderId}/refunds/{refundId}","method":"get","description":"Returns detailed information for a particular refund record associated with the given order. Enables administrators, the customer, or the seller managing the order to access status, amount, rationale, and processing details for any refund.\n\nIf the refund does not exist or is not accessible to the current actor, the API returns an error. Used for refund tracking, statement reconciliation, and regulatory record-keeping.","summary":"Get full details of a specific refund for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order for lookup.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record for detail retrieval.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The specified refund record with full data fields.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"customer"},{"specification":"Creates a new refund record for a specific order, saving to the `shopping_mall_ai_refunds` table. The operation records all legal and business-audit fields for refunds. Only authorized roles may execute—typically administrators, or in some cases, sellers responsible for the order. This is critical for maintaining audit trails and supporting financial reconciliation or dispute resolution. Business rules enforce refund eligibility, linkage to payment or order items, and amount verification.","path":"/shoppingMallAi/administrator/orders/{orderId}/refunds","method":"post","description":"Creates a refund record for a specified order. Input details include refund reason, requested and approved amounts, currency, status, and linkage to payment records if relevant. Refunds must pass eligibility rules (e.g., cannot exceed payment amount, not allowed on non-refundable items) and all financial/audit fields are required for compliance.\n\nAuthorization checks are enforced so only permitted users may request or administer refunds. Validation errors or eligibility mismatches will block record creation. The operation returns the created refund record, which can then be tracked for settlement, escalation, or compliance evaluation.","summary":"Create a refund entry for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund will be linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data to create the new refund record, including amount, rationale, and linkage.","typeName":"IShoppingMallAiRefund.ICreate"},"responseBody":{"description":"Created refund record.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"Creates a new refund record for a specific order, saving to the `shopping_mall_ai_refunds` table. The operation records all legal and business-audit fields for refunds. Only authorized roles may execute—typically administrators, or in some cases, sellers responsible for the order. This is critical for maintaining audit trails and supporting financial reconciliation or dispute resolution. Business rules enforce refund eligibility, linkage to payment or order items, and amount verification.","path":"/shoppingMallAi/seller/orders/{orderId}/refunds","method":"post","description":"Creates a refund record for a specified order. Input details include refund reason, requested and approved amounts, currency, status, and linkage to payment records if relevant. Refunds must pass eligibility rules (e.g., cannot exceed payment amount, not allowed on non-refundable items) and all financial/audit fields are required for compliance.\n\nAuthorization checks are enforced so only permitted users may request or administer refunds. Validation errors or eligibility mismatches will block record creation. The operation returns the created refund record, which can then be tracked for settlement, escalation, or compliance evaluation.","summary":"Create a refund entry for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order to which the refund will be linked.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data to create the new refund record, including amount, rationale, and linkage.","typeName":"IShoppingMallAiRefund.ICreate"},"responseBody":{"description":"Created refund record.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Updates an existing refund entry in the `shopping_mall_ai_refunds` table, identified by orderId and refundId. This operation is typically for administrators or eligible sellers to rectify reasons, amounts, or processing statuses. All updates are fully audit-logged, and strict validation rules apply to ensure only authorized users can perform changes and that updates do not violate regulatory requirements.","path":"/shoppingMallAi/administrator/orders/{orderId}/refunds/{refundId}","method":"put","description":"Updates specific fields in a refund entry for a given order. Permitted modifications include rationale correction, adjustment of refunded amounts, and status updates in line with business policy. This supports compliance with refund lifecycle tracking and is access-restricted to administrators or, when appropriate, sellers.\n\nUpdate attempts by unauthorized roles or with invalid values will fail. All updates are audit-logged for financial governance and traceability.","summary":"Update a refund entry for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order for the refund.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Refund entry fields for update, such as status, amount, or rationale.","typeName":"IShoppingMallAiRefund.IUpdate"},"responseBody":{"description":"The updated refund record.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"administrator"},{"specification":"Updates an existing refund entry in the `shopping_mall_ai_refunds` table, identified by orderId and refundId. This operation is typically for administrators or eligible sellers to rectify reasons, amounts, or processing statuses. All updates are fully audit-logged, and strict validation rules apply to ensure only authorized users can perform changes and that updates do not violate regulatory requirements.","path":"/shoppingMallAi/seller/orders/{orderId}/refunds/{refundId}","method":"put","description":"Updates specific fields in a refund entry for a given order. Permitted modifications include rationale correction, adjustment of refunded amounts, and status updates in line with business policy. This supports compliance with refund lifecycle tracking and is access-restricted to administrators or, when appropriate, sellers.\n\nUpdate attempts by unauthorized roles or with invalid values will fail. All updates are audit-logged for financial governance and traceability.","summary":"Update a refund entry for an order (shopping_mall_ai_refunds)","parameters":[{"name":"orderId","description":"Unique identifier of the order for the refund.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"Unique identifier of the refund record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Refund entry fields for update, such as status, amount, or rationale.","typeName":"IShoppingMallAiRefund.IUpdate"},"responseBody":{"description":"The updated refund record.","typeName":"IShoppingMallAiRefund"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"seller"},{"specification":"This API operation deletes a refund record for a specified order and refund. It directly interacts with the shopping_mall_ai_refunds table, which links refunds to orders and, optionally, to payments. The operation will perform a hard delete since the schema only provides a nullable deleted_at for soft deletion; ensure all business rules regarding refund deletion and audit are enforced. This may only be available to administrators for compliance and auditability, and deleted entries should be logged in the audit trail.","path":"/shoppingMallAi/administrator/orders/{orderId}/refunds/{refundId}","method":"delete","description":"Deletes a refund record for a specific order, identified by orderId and refundId. \n\nOnly platform administrators and, in special cases, selected compliance personnel are permitted to permanently remove a refund. Before deletion, the system audits the change and records rationale with full metadata for later review. Refunds are typically soft-deleted via deleted_at, but if hard deletion is executed through this endpoint, it must be logged and irreversible. Any business logic to restrict deletion of completed or ongoing refunds must be enforced, and deletion should be blocked if the refund is tied to unresolved financial or legal processing. Deletion triggers downstream audit logs and updates any referencing records as required. Always check maintainable referential integrity across orders, payments, and audit histories. Error scenarios include attempts to delete refunds in a non-cancelable state, missing order or refund, or insufficient permissions to perform the action.","summary":"Delete a refund record for a specified order and refund (shopping_mall_ai_refunds).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the target order.","schema":{"type":"string","format":"uuid"}},{"name":"refundId","description":"The unique identifier (UUID) of the refund record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Enables advanced searching and filtering of return requests related to a specific order, based on the shopping_mall_ai_returns table. This supports deep filtering (status, customer, item, period) and paginated result sets for management interfaces, allowing administrators, affected sellers, and the customer to review history and status for every return event associated with the order.","path":"/shoppingMallAi/administrator/orders/{orderId}/returns","method":"patch","description":"Retrieves a paginated, filtered list of return requests for the specified order, using advanced filters and search parameters.\n\nAuthorized users (administrator, order owner customer, associated seller) can query all return records attached to the specified orderId. This operation supports filters like status, created_at range, associated item, or customer. Returns detail includes audit-relevant fields (timestamps, status, completion state, associated items), mapped directly from shopping_mall_ai_returns. Security is enforced by role and ownership verification. Error scenarios include missing order, unauthorized attempts, or invalid filter criteria. Pagination is always enforced to support audit and operational efficiency.\n\nThe endpoint supports all business and compliance requirements for visibility and traceability of return records.","summary":"Search and list all return requests for an order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order whose returns are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search filters and pagination options for retrieving order returns. Follows ShoppingMallAiReturn.IRequest format.","typeName":"IShoppingMallAiReturn.IRequest"},"responseBody":{"description":"Paginated list of order return records matching the provided search criteria.","typeName":"IPageIShoppingMallAiReturn"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"administrator"},{"specification":"Enables advanced searching and filtering of return requests related to a specific order, based on the shopping_mall_ai_returns table. This supports deep filtering (status, customer, item, period) and paginated result sets for management interfaces, allowing administrators, affected sellers, and the customer to review history and status for every return event associated with the order.","path":"/shoppingMallAi/seller/orders/{orderId}/returns","method":"patch","description":"Retrieves a paginated, filtered list of return requests for the specified order, using advanced filters and search parameters.\n\nAuthorized users (administrator, order owner customer, associated seller) can query all return records attached to the specified orderId. This operation supports filters like status, created_at range, associated item, or customer. Returns detail includes audit-relevant fields (timestamps, status, completion state, associated items), mapped directly from shopping_mall_ai_returns. Security is enforced by role and ownership verification. Error scenarios include missing order, unauthorized attempts, or invalid filter criteria. Pagination is always enforced to support audit and operational efficiency.\n\nThe endpoint supports all business and compliance requirements for visibility and traceability of return records.","summary":"Search and list all return requests for an order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order whose returns are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search filters and pagination options for retrieving order returns. Follows ShoppingMallAiReturn.IRequest format.","typeName":"IShoppingMallAiReturn.IRequest"},"responseBody":{"description":"Paginated list of order return records matching the provided search criteria.","typeName":"IPageIShoppingMallAiReturn"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"seller"},{"specification":"Enables advanced searching and filtering of return requests related to a specific order, based on the shopping_mall_ai_returns table. This supports deep filtering (status, customer, item, period) and paginated result sets for management interfaces, allowing administrators, affected sellers, and the customer to review history and status for every return event associated with the order.","path":"/shoppingMallAi/customer/orders/{orderId}/returns","method":"patch","description":"Retrieves a paginated, filtered list of return requests for the specified order, using advanced filters and search parameters.\n\nAuthorized users (administrator, order owner customer, associated seller) can query all return records attached to the specified orderId. This operation supports filters like status, created_at range, associated item, or customer. Returns detail includes audit-relevant fields (timestamps, status, completion state, associated items), mapped directly from shopping_mall_ai_returns. Security is enforced by role and ownership verification. Error scenarios include missing order, unauthorized attempts, or invalid filter criteria. Pagination is always enforced to support audit and operational efficiency.\n\nThe endpoint supports all business and compliance requirements for visibility and traceability of return records.","summary":"Search and list all return requests for an order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order whose returns are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search filters and pagination options for retrieving order returns. Follows ShoppingMallAiReturn.IRequest format.","typeName":"IShoppingMallAiReturn.IRequest"},"responseBody":{"description":"Paginated list of order return records matching the provided search criteria.","typeName":"IPageIShoppingMallAiReturn"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieves the detail of a single return request attached to a specific order, leveraging the shopping_mall_ai_returns table. This includes all audit history, linked order or item, customer, and status lifecycle information. Authorized for administrators, the owning customer, and the associated seller.","path":"/shoppingMallAi/administrator/orders/{orderId}/returns/{returnId}","method":"get","description":"Returns detailed data for a specific order return, identified by orderId and returnId. \n\nThe record includes all major fields (status, item, linked order, customer, timestamps, status history) as defined in shopping_mall_ai_returns. Access is granted to administrators, the associated seller, and the customer who created the return. Sensitive or restricted fields may be redacted based on role. Behavior includes full error handling for missing, deleted, or unauthorized returns, enforcing referential and business integrity.","summary":"Get detailed information for a specific order return (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the return record.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"Unique identifier (UUID) of the return record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed return record for the specified order and return ID.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"administrator"},{"specification":"Retrieves the detail of a single return request attached to a specific order, leveraging the shopping_mall_ai_returns table. This includes all audit history, linked order or item, customer, and status lifecycle information. Authorized for administrators, the owning customer, and the associated seller.","path":"/shoppingMallAi/seller/orders/{orderId}/returns/{returnId}","method":"get","description":"Returns detailed data for a specific order return, identified by orderId and returnId. \n\nThe record includes all major fields (status, item, linked order, customer, timestamps, status history) as defined in shopping_mall_ai_returns. Access is granted to administrators, the associated seller, and the customer who created the return. Sensitive or restricted fields may be redacted based on role. Behavior includes full error handling for missing, deleted, or unauthorized returns, enforcing referential and business integrity.","summary":"Get detailed information for a specific order return (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the return record.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"Unique identifier (UUID) of the return record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed return record for the specified order and return ID.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieves the detail of a single return request attached to a specific order, leveraging the shopping_mall_ai_returns table. This includes all audit history, linked order or item, customer, and status lifecycle information. Authorized for administrators, the owning customer, and the associated seller.","path":"/shoppingMallAi/customer/orders/{orderId}/returns/{returnId}","method":"get","description":"Returns detailed data for a specific order return, identified by orderId and returnId. \n\nThe record includes all major fields (status, item, linked order, customer, timestamps, status history) as defined in shopping_mall_ai_returns. Access is granted to administrators, the associated seller, and the customer who created the return. Sensitive or restricted fields may be redacted based on role. Behavior includes full error handling for missing, deleted, or unauthorized returns, enforcing referential and business integrity.","summary":"Get detailed information for a specific order return (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the order containing the return record.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"Unique identifier (UUID) of the return record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed return record for the specified order and return ID.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["administrator","seller","customer"],"name":"at","authorizationRole":"customer"},{"specification":"Creates a new return request for the specified order, inserting a record into shopping_mall_ai_returns. This must validate order state (eligible for return, not already returned/cancelled), customer identity, and all business rules for initiation window, item eligibility, and evidence attachment. The returned object contains the submitted data and return metadata with unique code and status.","path":"/shoppingMallAi/customer/orders/{orderId}/returns","method":"post","description":"Creates a new return request for the order and specified items, as per the business rules defined in shopping_mall_ai_returns.\n\nThe requester must be the owning customer and must supply all mandatory fields, including item(s) to return, reason, and any required evidence or documentation. Business logic enforces return windows, item eligibility, and compliance checks. If validation or eligibility checks fail, an error is returned with actionable guidance. Upon success, a new return object is inserted and relevant audit trails are updated.","summary":"Create a new order return request (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order for which the return is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The return request payload, providing necessary fields and extra context as per platform rules.","typeName":"IShoppingMallAiReturn.ICreate"},"responseBody":{"description":"The created return record including unique code, status, and metadata.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["customer"],"name":"create","authorizationRole":"customer"},{"specification":"Updates the fields of an existing return request in shopping_mall_ai_returns. This endpoint is primarily intended for the customer who created the return, the associated seller, or platform administrators. All changes are audited and logged for compliance, and only permitted fields (comments, status, attached evidence) may be updated after creation. State transitions are subject to business constraints (e.g., completed returns cannot be modified).","path":"/shoppingMallAi/customer/orders/{orderId}/returns/{returnId}","method":"put","description":"Updates an existing return record linked to a given order, using the update data provided in the request body (IShoppingMallAiReturn.IUpdate).\n\nOnly fields which are editable after creation (e.g., contact info, comments, supporting evidence, or status) may be updated—some fields, like completed_at or resolved status, may only be changed by administrators. If the record is locked or outside the update window, an error is returned and the operation is blocked. All modification is captured in the platform's audit trail. Audit and business rules are strictly enforced to prevent unauthorized or invalid state transitions.","summary":"Update an existing return record for a specific order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"The unique identifier (UUID) of the return record to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Return update data with only modifiable fields as per business policy.","typeName":"IShoppingMallAiReturn.IUpdate"},"responseBody":{"description":"The updated return record with revised fields and status.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"customer"},{"specification":"Updates the fields of an existing return request in shopping_mall_ai_returns. This endpoint is primarily intended for the customer who created the return, the associated seller, or platform administrators. All changes are audited and logged for compliance, and only permitted fields (comments, status, attached evidence) may be updated after creation. State transitions are subject to business constraints (e.g., completed returns cannot be modified).","path":"/shoppingMallAi/seller/orders/{orderId}/returns/{returnId}","method":"put","description":"Updates an existing return record linked to a given order, using the update data provided in the request body (IShoppingMallAiReturn.IUpdate).\n\nOnly fields which are editable after creation (e.g., contact info, comments, supporting evidence, or status) may be updated—some fields, like completed_at or resolved status, may only be changed by administrators. If the record is locked or outside the update window, an error is returned and the operation is blocked. All modification is captured in the platform's audit trail. Audit and business rules are strictly enforced to prevent unauthorized or invalid state transitions.","summary":"Update an existing return record for a specific order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"The unique identifier (UUID) of the return record to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Return update data with only modifiable fields as per business policy.","typeName":"IShoppingMallAiReturn.IUpdate"},"responseBody":{"description":"The updated return record with revised fields and status.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"seller"},{"specification":"Updates the fields of an existing return request in shopping_mall_ai_returns. This endpoint is primarily intended for the customer who created the return, the associated seller, or platform administrators. All changes are audited and logged for compliance, and only permitted fields (comments, status, attached evidence) may be updated after creation. State transitions are subject to business constraints (e.g., completed returns cannot be modified).","path":"/shoppingMallAi/administrator/orders/{orderId}/returns/{returnId}","method":"put","description":"Updates an existing return record linked to a given order, using the update data provided in the request body (IShoppingMallAiReturn.IUpdate).\n\nOnly fields which are editable after creation (e.g., contact info, comments, supporting evidence, or status) may be updated—some fields, like completed_at or resolved status, may only be changed by administrators. If the record is locked or outside the update window, an error is returned and the operation is blocked. All modification is captured in the platform's audit trail. Audit and business rules are strictly enforced to prevent unauthorized or invalid state transitions.","summary":"Update an existing return record for a specific order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"The unique identifier (UUID) of the return record to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Return update data with only modifiable fields as per business policy.","typeName":"IShoppingMallAiReturn.IUpdate"},"responseBody":{"description":"The updated return record with revised fields and status.","typeName":"IShoppingMallAiReturn"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Deletes (soft deletes) a return record, setting deleted_at on shopping_mall_ai_returns. This is permitted for administrators for audit/troubleshooting, or for customers only if the return is uncancellable and outside the audit window. All deletions are logged, and attempts are validated against compliance and order completion rules.","path":"/shoppingMallAi/customer/orders/{orderId}/returns/{returnId}","method":"delete","description":"Soft deletes (marks as deleted) a return record linked to a specific order and return identifier. \n\nOnly allowed if permitted by business policy. For customers, allowed only when the return request is in a pre-processed or draft state and not already processed by seller or admin. For administrators, deletion is always audited and never anonymizes legal/audit window records. Sellers may only delete returns for which they are responsible after audit review. Error scenarios include invalid state, unauthorized, or dependencies in related records (refund, after-service, etc.).","summary":"Delete (soft-delete) a return record for a specific order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"The unique identifier (UUID) of the return record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"customer"},{"specification":"Deletes (soft deletes) a return record, setting deleted_at on shopping_mall_ai_returns. This is permitted for administrators for audit/troubleshooting, or for customers only if the return is uncancellable and outside the audit window. All deletions are logged, and attempts are validated against compliance and order completion rules.","path":"/shoppingMallAi/seller/orders/{orderId}/returns/{returnId}","method":"delete","description":"Soft deletes (marks as deleted) a return record linked to a specific order and return identifier. \n\nOnly allowed if permitted by business policy. For customers, allowed only when the return request is in a pre-processed or draft state and not already processed by seller or admin. For administrators, deletion is always audited and never anonymizes legal/audit window records. Sellers may only delete returns for which they are responsible after audit review. Error scenarios include invalid state, unauthorized, or dependencies in related records (refund, after-service, etc.).","summary":"Delete (soft-delete) a return record for a specific order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"The unique identifier (UUID) of the return record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"seller"},{"specification":"Deletes (soft deletes) a return record, setting deleted_at on shopping_mall_ai_returns. This is permitted for administrators for audit/troubleshooting, or for customers only if the return is uncancellable and outside the audit window. All deletions are logged, and attempts are validated against compliance and order completion rules.","path":"/shoppingMallAi/administrator/orders/{orderId}/returns/{returnId}","method":"delete","description":"Soft deletes (marks as deleted) a return record linked to a specific order and return identifier. \n\nOnly allowed if permitted by business policy. For customers, allowed only when the return request is in a pre-processed or draft state and not already processed by seller or admin. For administrators, deletion is always audited and never anonymizes legal/audit window records. Sellers may only delete returns for which they are responsible after audit review. Error scenarios include invalid state, unauthorized, or dependencies in related records (refund, after-service, etc.).","summary":"Delete (soft-delete) a return record for a specific order (shopping_mall_ai_returns).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"returnId","description":"The unique identifier (UUID) of the return record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","seller","administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Advanced search for after-service (AS) requests attached to a specific order, based on shopping_mall_ai_after_service_requests. This allows filtering by AS type, status, created_at, and customer/seller, returning paginated results for management by all authorized roles. Used by platform support, seller order management, and customers checking AS case status.","path":"/shoppingMallAi/administrator/orders/{orderId}/afterServiceRequests","method":"patch","description":"Performs an advanced, paginated search for all after-service requests for the target order. \n\nThis operation supports search filters on AS status, type, creation period, actor, etc., following business and legal rules set forth for after-service management (see shopping_mall_ai_after_service_requests). Pagination and filter structure allow both audit review and operational use. Role-based access permits searches by responsible seller, order-owning customer, and administrators. Error cases include unauthorized access, missing or invalid order, or invalid filter parameters.","summary":"Search and list after-service requests linked to an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order whose after-service requests are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request search/filter and pagination parameters for after-service request search.","typeName":"IShoppingMallAiAfterServiceRequest.IRequest"},"responseBody":{"description":"Paginated after-service request records for the specified order and filters.","typeName":"IPageIShoppingMallAiAfterServiceRequest"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"administrator"},{"specification":"Advanced search for after-service (AS) requests attached to a specific order, based on shopping_mall_ai_after_service_requests. This allows filtering by AS type, status, created_at, and customer/seller, returning paginated results for management by all authorized roles. Used by platform support, seller order management, and customers checking AS case status.","path":"/shoppingMallAi/seller/orders/{orderId}/afterServiceRequests","method":"patch","description":"Performs an advanced, paginated search for all after-service requests for the target order. \n\nThis operation supports search filters on AS status, type, creation period, actor, etc., following business and legal rules set forth for after-service management (see shopping_mall_ai_after_service_requests). Pagination and filter structure allow both audit review and operational use. Role-based access permits searches by responsible seller, order-owning customer, and administrators. Error cases include unauthorized access, missing or invalid order, or invalid filter parameters.","summary":"Search and list after-service requests linked to an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order whose after-service requests are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request search/filter and pagination parameters for after-service request search.","typeName":"IShoppingMallAiAfterServiceRequest.IRequest"},"responseBody":{"description":"Paginated after-service request records for the specified order and filters.","typeName":"IPageIShoppingMallAiAfterServiceRequest"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"seller"},{"specification":"Advanced search for after-service (AS) requests attached to a specific order, based on shopping_mall_ai_after_service_requests. This allows filtering by AS type, status, created_at, and customer/seller, returning paginated results for management by all authorized roles. Used by platform support, seller order management, and customers checking AS case status.","path":"/shoppingMallAi/customer/orders/{orderId}/afterServiceRequests","method":"patch","description":"Performs an advanced, paginated search for all after-service requests for the target order. \n\nThis operation supports search filters on AS status, type, creation period, actor, etc., following business and legal rules set forth for after-service management (see shopping_mall_ai_after_service_requests). Pagination and filter structure allow both audit review and operational use. Role-based access permits searches by responsible seller, order-owning customer, and administrators. Error cases include unauthorized access, missing or invalid order, or invalid filter parameters.","summary":"Search and list after-service requests linked to an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order whose after-service requests are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request search/filter and pagination parameters for after-service request search.","typeName":"IShoppingMallAiAfterServiceRequest.IRequest"},"responseBody":{"description":"Paginated after-service request records for the specified order and filters.","typeName":"IPageIShoppingMallAiAfterServiceRequest"},"authorizationRoles":["administrator","seller","customer"],"name":"search","authorizationRole":"customer"},{"specification":"Get detailed information for a specific after-service request for a given order. Based on shopping_mall_ai_after_service_requests, this fetches all business, status, and audit information for the AS record, including related entities, timelines, and outcomes. Access is checked against user’s role, order ownership, and AS request affiliation.","path":"/shoppingMallAi/administrator/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"get","description":"Retrieves all critical details for a specified after-service request, validating both the orderId and afterServiceRequestId.\n\nDetails returned include request type, status, actor (customer, seller, admin), all audit timestamps, and associated comments (customer, admin-note). Authorization is reviewed against order/customer relationship and business logic on privacy/scope. Error responses are returned for unauthorized or missing requests. Full schema of shopping_mall_ai_after_service_requests is respected.","summary":"Get detail of a specific after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"Unique identifier (UUID) for the after-service request record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed after-service request record for the target order and request ID.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["administrator","customer","seller"],"name":"at","authorizationRole":"administrator"},{"specification":"Get detailed information for a specific after-service request for a given order. Based on shopping_mall_ai_after_service_requests, this fetches all business, status, and audit information for the AS record, including related entities, timelines, and outcomes. Access is checked against user’s role, order ownership, and AS request affiliation.","path":"/shoppingMallAi/customer/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"get","description":"Retrieves all critical details for a specified after-service request, validating both the orderId and afterServiceRequestId.\n\nDetails returned include request type, status, actor (customer, seller, admin), all audit timestamps, and associated comments (customer, admin-note). Authorization is reviewed against order/customer relationship and business logic on privacy/scope. Error responses are returned for unauthorized or missing requests. Full schema of shopping_mall_ai_after_service_requests is respected.","summary":"Get detail of a specific after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"Unique identifier (UUID) for the after-service request record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed after-service request record for the target order and request ID.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["administrator","customer","seller"],"name":"at","authorizationRole":"customer"},{"specification":"Get detailed information for a specific after-service request for a given order. Based on shopping_mall_ai_after_service_requests, this fetches all business, status, and audit information for the AS record, including related entities, timelines, and outcomes. Access is checked against user’s role, order ownership, and AS request affiliation.","path":"/shoppingMallAi/seller/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"get","description":"Retrieves all critical details for a specified after-service request, validating both the orderId and afterServiceRequestId.\n\nDetails returned include request type, status, actor (customer, seller, admin), all audit timestamps, and associated comments (customer, admin-note). Authorization is reviewed against order/customer relationship and business logic on privacy/scope. Error responses are returned for unauthorized or missing requests. Full schema of shopping_mall_ai_after_service_requests is respected.","summary":"Get detail of a specific after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"Unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"Unique identifier (UUID) for the after-service request record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed after-service request record for the target order and request ID.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["administrator","customer","seller"],"name":"at","authorizationRole":"seller"},{"specification":"Create a new after-service (AS) request for the specified order, inserting a new shopping_mall_ai_after_service_requests record. Business rules require only eligible customers, sellers, or administrators initiate AS requests, with request type, status, and context. Request validation ensures correct linkage to order/item and user identity, with proper actor mapping. On creation, a unique as_code, status, and timestamps are assigned.","path":"/shoppingMallAi/customer/orders/{orderId}/afterServiceRequests","method":"post","description":"Creates a new after-service request for the target order, validating all business rules for allowed AS types and actor role. \n\nAll required fields must be present and validated, including item, request_type, and supporting information. Upon successful insert, the created record including unique as_code is returned. The actor role is logged and subject to business and security audit. Error scenarios include ineligible actor, missing order/item, invalid AS type, or legal/contract window violation.","summary":"Create new after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order for which the after-service request is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request payload for new after-service, as per platform rules and audit policies.","typeName":"IShoppingMallAiAfterServiceRequest.ICreate"},"responseBody":{"description":"The created after-service request record for the order.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"customer"},{"specification":"Create a new after-service (AS) request for the specified order, inserting a new shopping_mall_ai_after_service_requests record. Business rules require only eligible customers, sellers, or administrators initiate AS requests, with request type, status, and context. Request validation ensures correct linkage to order/item and user identity, with proper actor mapping. On creation, a unique as_code, status, and timestamps are assigned.","path":"/shoppingMallAi/seller/orders/{orderId}/afterServiceRequests","method":"post","description":"Creates a new after-service request for the target order, validating all business rules for allowed AS types and actor role. \n\nAll required fields must be present and validated, including item, request_type, and supporting information. Upon successful insert, the created record including unique as_code is returned. The actor role is logged and subject to business and security audit. Error scenarios include ineligible actor, missing order/item, invalid AS type, or legal/contract window violation.","summary":"Create new after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order for which the after-service request is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request payload for new after-service, as per platform rules and audit policies.","typeName":"IShoppingMallAiAfterServiceRequest.ICreate"},"responseBody":{"description":"The created after-service request record for the order.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"seller"},{"specification":"Create a new after-service (AS) request for the specified order, inserting a new shopping_mall_ai_after_service_requests record. Business rules require only eligible customers, sellers, or administrators initiate AS requests, with request type, status, and context. Request validation ensures correct linkage to order/item and user identity, with proper actor mapping. On creation, a unique as_code, status, and timestamps are assigned.","path":"/shoppingMallAi/administrator/orders/{orderId}/afterServiceRequests","method":"post","description":"Creates a new after-service request for the target order, validating all business rules for allowed AS types and actor role. \n\nAll required fields must be present and validated, including item, request_type, and supporting information. Upon successful insert, the created record including unique as_code is returned. The actor role is logged and subject to business and security audit. Error scenarios include ineligible actor, missing order/item, invalid AS type, or legal/contract window violation.","summary":"Create new after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the order for which the after-service request is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request payload for new after-service, as per platform rules and audit policies.","typeName":"IShoppingMallAiAfterServiceRequest.ICreate"},"responseBody":{"description":"The created after-service request record for the order.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["customer","seller","administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Updates the fields of an after-service request attached to a specific order, updating the shopping_mall_ai_after_service_requests table via the .IUpdate DTO. Only permitted, role-dependent fields can be changed by different actors, and completed requests may be locked from edits. Every update is logged for compliance and legal audit, and rollback is only possible with administrative intervention.","path":"/shoppingMallAi/customer/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"put","description":"Updates an existing after-service request for an order, applying only allowed field changes as validated per the business policy and role scope. \n\nThe changes are restricted to updateable fields (status, contact_comment, admin_note, etc.) and must always maintain referential integrity to the order and item. If the record is in a locked or completed state, the update is denied. On update, a full audit trail is maintained for compliance. All changes are returned as part of the updated object.","summary":"Update an after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"UUID of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"UUID of the after-service request record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update payload for the after-service request. Only modifiable fields allowed.","typeName":"IShoppingMallAiAfterServiceRequest.IUpdate"},"responseBody":{"description":"The updated after-service request object with all audit information.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"customer"},{"specification":"Updates the fields of an after-service request attached to a specific order, updating the shopping_mall_ai_after_service_requests table via the .IUpdate DTO. Only permitted, role-dependent fields can be changed by different actors, and completed requests may be locked from edits. Every update is logged for compliance and legal audit, and rollback is only possible with administrative intervention.","path":"/shoppingMallAi/seller/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"put","description":"Updates an existing after-service request for an order, applying only allowed field changes as validated per the business policy and role scope. \n\nThe changes are restricted to updateable fields (status, contact_comment, admin_note, etc.) and must always maintain referential integrity to the order and item. If the record is in a locked or completed state, the update is denied. On update, a full audit trail is maintained for compliance. All changes are returned as part of the updated object.","summary":"Update an after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"UUID of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"UUID of the after-service request record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update payload for the after-service request. Only modifiable fields allowed.","typeName":"IShoppingMallAiAfterServiceRequest.IUpdate"},"responseBody":{"description":"The updated after-service request object with all audit information.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"seller"},{"specification":"Updates the fields of an after-service request attached to a specific order, updating the shopping_mall_ai_after_service_requests table via the .IUpdate DTO. Only permitted, role-dependent fields can be changed by different actors, and completed requests may be locked from edits. Every update is logged for compliance and legal audit, and rollback is only possible with administrative intervention.","path":"/shoppingMallAi/administrator/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"put","description":"Updates an existing after-service request for an order, applying only allowed field changes as validated per the business policy and role scope. \n\nThe changes are restricted to updateable fields (status, contact_comment, admin_note, etc.) and must always maintain referential integrity to the order and item. If the record is in a locked or completed state, the update is denied. On update, a full audit trail is maintained for compliance. All changes are returned as part of the updated object.","summary":"Update an after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"UUID of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"UUID of the after-service request record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update payload for the after-service request. Only modifiable fields allowed.","typeName":"IShoppingMallAiAfterServiceRequest.IUpdate"},"responseBody":{"description":"The updated after-service request object with all audit information.","typeName":"IShoppingMallAiAfterServiceRequest"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Deletes (soft deletes) an after-service request for a specific order, setting deleted_at. This is restricted to administrators, or the original customer/seller under specific business rules and only for requests not yet resolved/locked. The operation is logged for compliance and cannot delete any AS tied to unresolved legal/financial/incidence records. The operation respects the existence of the record and any dependencies before deletion.","path":"/shoppingMallAi/administrator/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"delete","description":"Soft deletes an after-service request for an order, marking deleted_at in shopping_mall_ai_after_service_requests. Only permitted by admin, or by customer/seller if the AS is not locked or processed. All deletions are audited and restricted by role and business logic. Resolves only if the after-service request exists, is deletable, and is not referenced in unresolved legal/business processes.","summary":"Delete (soft-delete) an after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"UUID for the after-service request record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","customer","seller"],"name":"erase","authorizationRole":"administrator"},{"specification":"Deletes (soft deletes) an after-service request for a specific order, setting deleted_at. This is restricted to administrators, or the original customer/seller under specific business rules and only for requests not yet resolved/locked. The operation is logged for compliance and cannot delete any AS tied to unresolved legal/financial/incidence records. The operation respects the existence of the record and any dependencies before deletion.","path":"/shoppingMallAi/customer/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"delete","description":"Soft deletes an after-service request for an order, marking deleted_at in shopping_mall_ai_after_service_requests. Only permitted by admin, or by customer/seller if the AS is not locked or processed. All deletions are audited and restricted by role and business logic. Resolves only if the after-service request exists, is deletable, and is not referenced in unresolved legal/business processes.","summary":"Delete (soft-delete) an after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"UUID for the after-service request record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","customer","seller"],"name":"erase","authorizationRole":"customer"},{"specification":"Deletes (soft deletes) an after-service request for a specific order, setting deleted_at. This is restricted to administrators, or the original customer/seller under specific business rules and only for requests not yet resolved/locked. The operation is logged for compliance and cannot delete any AS tied to unresolved legal/financial/incidence records. The operation respects the existence of the record and any dependencies before deletion.","path":"/shoppingMallAi/seller/orders/{orderId}/afterServiceRequests/{afterServiceRequestId}","method":"delete","description":"Soft deletes an after-service request for an order, marking deleted_at in shopping_mall_ai_after_service_requests. Only permitted by admin, or by customer/seller if the AS is not locked or processed. All deletions are audited and restricted by role and business logic. Resolves only if the after-service request exists, is deletable, and is not referenced in unresolved legal/business processes.","summary":"Delete (soft-delete) an after-service request for an order (shopping_mall_ai_after_service_requests).","parameters":[{"name":"orderId","description":"The unique identifier (UUID) of the parent order.","schema":{"type":"string","format":"uuid"}},{"name":"afterServiceRequestId","description":"UUID for the after-service request record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","customer","seller"],"name":"erase","authorizationRole":"seller"},{"specification":"Advanced, paginated search of all issued coupons, active/inactive, across all business and campaign contexts. Operates on shopping_mall_ai_coupons and supports filters on type, scope, issuer, status, campaign, or period. Includes compliance with campaign/issuance scope and platform/business rules for data visibility. Used for admin and seller management of coupon inventories, campaign analytics, and audit.","path":"/shoppingMallAi/administrator/coupons","method":"patch","description":"Retrieves a paginated, filterable listing of all coupons in the system, filtered by type, scope, status, campaign, and issuer as needed. Returns coupon data objects as described by IShoppingMallAiCoupon and matching search/query parameters. Accessible by platform administrators and coupon-issuing sellers.\n\nError cases include unauthorized access, invalid search filters or pagination parameters, and schema validation errors. All business rules for coupon record visibility, business role, and campaign mapping are enforced.","summary":"Advanced search and list of all coupons (shopping_mall_ai_coupons).","parameters":[],"requestBody":{"description":"Advanced search filter payload for coupon listing (supports all properties relevant to coupon business rules).","typeName":"IShoppingMallAiCoupon.IRequest"},"responseBody":{"description":"Paginated coupon records matching filter parameters.","typeName":"IPageIShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"search","authorizationRole":"administrator"},{"specification":"Advanced, paginated search of all issued coupons, active/inactive, across all business and campaign contexts. Operates on shopping_mall_ai_coupons and supports filters on type, scope, issuer, status, campaign, or period. Includes compliance with campaign/issuance scope and platform/business rules for data visibility. Used for admin and seller management of coupon inventories, campaign analytics, and audit.","path":"/shoppingMallAi/seller/coupons","method":"patch","description":"Retrieves a paginated, filterable listing of all coupons in the system, filtered by type, scope, status, campaign, and issuer as needed. Returns coupon data objects as described by IShoppingMallAiCoupon and matching search/query parameters. Accessible by platform administrators and coupon-issuing sellers.\n\nError cases include unauthorized access, invalid search filters or pagination parameters, and schema validation errors. All business rules for coupon record visibility, business role, and campaign mapping are enforced.","summary":"Advanced search and list of all coupons (shopping_mall_ai_coupons).","parameters":[],"requestBody":{"description":"Advanced search filter payload for coupon listing (supports all properties relevant to coupon business rules).","typeName":"IShoppingMallAiCoupon.IRequest"},"responseBody":{"description":"Paginated coupon records matching filter parameters.","typeName":"IPageIShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"search","authorizationRole":"seller"},{"specification":"Retrieve detailed information for a specific coupon by its unique ID, based on the shopping_mall_ai_coupons table. The operation is intended for audit, management, and analytics purposes and provides all metadata (e.g., code, title, status, issuance/redeem quotas, stackability, validity window, campaign linkage, etc.). Only references actual database fields and supports legal compliance and frontend/backoffice display.","path":"/shoppingMallAi/administrator/coupons/{couponId}","method":"get","description":"This API returns all metadata and state fields for a single coupon (shopping_mall_ai_coupons) identified by couponId. It enforces strict business logic, ensuring that only authorized roles (typically administrator or issuing seller) may access full coupon information due to the sensitivity of quotas, issuance windows, and statuses. The endpoint references associated discount campaign linkage, seller/administrator ownership, and audit fields. Returns all current, active, and, if requested, soft-deleted coupons (based on deleted_at presence). Also supports full stackable, scope, and quota exposures per the schema.","summary":"Get full information for a single coupon (shopping_mall_ai_coupons table) by ID.","parameters":[{"name":"couponId","description":"Unique identifier of the target coupon to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete coupon information as defined in the IShoppingMallAiCoupon interface.","typeName":"IShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"at","authorizationRole":"administrator"},{"specification":"Retrieve detailed information for a specific coupon by its unique ID, based on the shopping_mall_ai_coupons table. The operation is intended for audit, management, and analytics purposes and provides all metadata (e.g., code, title, status, issuance/redeem quotas, stackability, validity window, campaign linkage, etc.). Only references actual database fields and supports legal compliance and frontend/backoffice display.","path":"/shoppingMallAi/seller/coupons/{couponId}","method":"get","description":"This API returns all metadata and state fields for a single coupon (shopping_mall_ai_coupons) identified by couponId. It enforces strict business logic, ensuring that only authorized roles (typically administrator or issuing seller) may access full coupon information due to the sensitivity of quotas, issuance windows, and statuses. The endpoint references associated discount campaign linkage, seller/administrator ownership, and audit fields. Returns all current, active, and, if requested, soft-deleted coupons (based on deleted_at presence). Also supports full stackable, scope, and quota exposures per the schema.","summary":"Get full information for a single coupon (shopping_mall_ai_coupons table) by ID.","parameters":[{"name":"couponId","description":"Unique identifier of the target coupon to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete coupon information as defined in the IShoppingMallAiCoupon interface.","typeName":"IShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"at","authorizationRole":"seller"},{"specification":"Create a new coupon entry in the shopping_mall_ai_coupons table. This API enables administrators and verified sellers to define new discount or promotional coupons with specific quotas, types, scope, and window. This operation enforces referential integrity to discount campaigns and the owning seller/administrator.","path":"/shoppingMallAi/administrator/coupons","method":"post","description":"This endpoint allows creation of a coupon with all required business fields (code, title, status, quantity/quota, type, stackability, time window, scope, and linkage to campaign, seller, or administrator). It applies validation logic according to minimum/maximum quota, required dates, and code uniqueness. Only authorized roles may create coupons and assign initial state. The coupon's status is set according to the business flow as described in the schema, with maximum auditability.","summary":"Create a new coupon (shopping_mall_ai_coupons table).","parameters":[],"requestBody":{"description":"Coupon creation fields required to register a new coupon.","typeName":"IShoppingMallAiCoupon.ICreate"},"responseBody":{"description":"Newly created coupon, as a full IShoppingMallAiCoupon entity.","typeName":"IShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"Create a new coupon entry in the shopping_mall_ai_coupons table. This API enables administrators and verified sellers to define new discount or promotional coupons with specific quotas, types, scope, and window. This operation enforces referential integrity to discount campaigns and the owning seller/administrator.","path":"/shoppingMallAi/seller/coupons","method":"post","description":"This endpoint allows creation of a coupon with all required business fields (code, title, status, quantity/quota, type, stackability, time window, scope, and linkage to campaign, seller, or administrator). It applies validation logic according to minimum/maximum quota, required dates, and code uniqueness. Only authorized roles may create coupons and assign initial state. The coupon's status is set according to the business flow as described in the schema, with maximum auditability.","summary":"Create a new coupon (shopping_mall_ai_coupons table).","parameters":[],"requestBody":{"description":"Coupon creation fields required to register a new coupon.","typeName":"IShoppingMallAiCoupon.ICreate"},"responseBody":{"description":"Newly created coupon, as a full IShoppingMallAiCoupon entity.","typeName":"IShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Update an existing coupon by couponId in the shopping_mall_ai_coupons table. Editable fields include status, stackability, quota details, time window, and other business-relevant fields per schema. Supports compliance, audit, and operations workflows as permitted for administrators and issuing sellers.","path":"/shoppingMallAi/administrator/coupons/{couponId}","method":"put","description":"Update the properties of a coupon, strictly limited to fields allowed for mutation (e.g., title, description, status, quotas, window, description, stackability) as defined in the schema. This operation validates status transitions and quota rules and ensures only the coupon's administrator/issuer may update. Full auditability is enforced. The couponId must exist; error returned if nonexistent or if invalid mutation is attempted according to business rules or state (e.g., cannot modify expired or redeemed coupons).","summary":"Update an existing coupon (shopping_mall_ai_coupons table) by ID.","parameters":[{"name":"couponId","description":"Unique identifier of the coupon to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable coupon fields, respecting schema mutability and business constraints.","typeName":"IShoppingMallAiCoupon.IUpdate"},"responseBody":{"description":"Updated coupon, as a full IShoppingMallAiCoupon entity.","typeName":"IShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"administrator"},{"specification":"Update an existing coupon by couponId in the shopping_mall_ai_coupons table. Editable fields include status, stackability, quota details, time window, and other business-relevant fields per schema. Supports compliance, audit, and operations workflows as permitted for administrators and issuing sellers.","path":"/shoppingMallAi/seller/coupons/{couponId}","method":"put","description":"Update the properties of a coupon, strictly limited to fields allowed for mutation (e.g., title, description, status, quotas, window, description, stackability) as defined in the schema. This operation validates status transitions and quota rules and ensures only the coupon's administrator/issuer may update. Full auditability is enforced. The couponId must exist; error returned if nonexistent or if invalid mutation is attempted according to business rules or state (e.g., cannot modify expired or redeemed coupons).","summary":"Update an existing coupon (shopping_mall_ai_coupons table) by ID.","parameters":[{"name":"couponId","description":"Unique identifier of the coupon to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable coupon fields, respecting schema mutability and business constraints.","typeName":"IShoppingMallAiCoupon.IUpdate"},"responseBody":{"description":"Updated coupon, as a full IShoppingMallAiCoupon entity.","typeName":"IShoppingMallAiCoupon"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"seller"},{"specification":"Delete (soft-delete) a coupon entry identified by couponId in the shopping_mall_ai_coupons table. If the coupon supports soft deletion via deleted_at, marks as deleted without physical removal, ensuring legal/audit trail integrity. Only authorized administrators and creators may perform this operation.","path":"/shoppingMallAi/administrator/coupons/{couponId}","method":"delete","description":"This endpoint soft deletes a coupon by setting deleted_at, provided it is not already redeemed or expired (enforcing business and legal constraints). Only permitted for roles with ownership or administrator authority. Physical deletion is never performed due to audit/compliance requirements. Attempts to delete already redeemed/expired coupons are blocked with explicit error messaging as per business rules. All deletions are logged for legal and business traceability.","summary":"Soft-delete a coupon by ID (shopping_mall_ai_coupons table, sets deleted_at).","parameters":[{"name":"couponId","description":"Unique identifier of the coupon to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"administrator"},{"specification":"Delete (soft-delete) a coupon entry identified by couponId in the shopping_mall_ai_coupons table. If the coupon supports soft deletion via deleted_at, marks as deleted without physical removal, ensuring legal/audit trail integrity. Only authorized administrators and creators may perform this operation.","path":"/shoppingMallAi/seller/coupons/{couponId}","method":"delete","description":"This endpoint soft deletes a coupon by setting deleted_at, provided it is not already redeemed or expired (enforcing business and legal constraints). Only permitted for roles with ownership or administrator authority. Physical deletion is never performed due to audit/compliance requirements. Attempts to delete already redeemed/expired coupons are blocked with explicit error messaging as per business rules. All deletions are logged for legal and business traceability.","summary":"Soft-delete a coupon by ID (shopping_mall_ai_coupons table, sets deleted_at).","parameters":[{"name":"couponId","description":"Unique identifier of the coupon to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"seller"},{"specification":"Search and filter coupon issuance logs (shopping_mall_ai_coupon_issuance_logs) for a specific coupon. Supports multi-keyword filtering, pagination, and access audit requirements for campaign, quota, and compliance reporting. Links to coupon/customer as required. Only accessible to roles authorized based on coupon ownership or administrator rights.","path":"/shoppingMallAi/administrator/coupons/{couponId}/issuanceLogs","method":"patch","description":"This endpoint provides advanced search/filter over all issuance events for a specific coupon. Supports filtering by date, method, issued_by_ip, quantity, customer, and audit trails. Pagination, sorting, and quota monitoring are included. Designed for business/compliance audit and coupon campaign effectiveness analysis. Returns paginated list view of issuance summaries and all required business metadata for each log.","summary":"Search and list issuance logs for a coupon (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"ID of coupon whose issuance logs are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination filter for coupon issuance logs.","typeName":"IShoppingMallAiCouponIssuanceLog.IRequest"},"responseBody":{"description":"Paginated issuance log summaries (IPageIShoppingMallAiCouponIssuanceLog.ISummary).","typeName":"IPageIShoppingMallAiCouponIssuanceLog.ISummary"},"authorizationRoles":["administrator","seller"],"name":"search","authorizationRole":"administrator"},{"specification":"Search and filter coupon issuance logs (shopping_mall_ai_coupon_issuance_logs) for a specific coupon. Supports multi-keyword filtering, pagination, and access audit requirements for campaign, quota, and compliance reporting. Links to coupon/customer as required. Only accessible to roles authorized based on coupon ownership or administrator rights.","path":"/shoppingMallAi/seller/coupons/{couponId}/issuanceLogs","method":"patch","description":"This endpoint provides advanced search/filter over all issuance events for a specific coupon. Supports filtering by date, method, issued_by_ip, quantity, customer, and audit trails. Pagination, sorting, and quota monitoring are included. Designed for business/compliance audit and coupon campaign effectiveness analysis. Returns paginated list view of issuance summaries and all required business metadata for each log.","summary":"Search and list issuance logs for a coupon (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"ID of coupon whose issuance logs are to be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination filter for coupon issuance logs.","typeName":"IShoppingMallAiCouponIssuanceLog.IRequest"},"responseBody":{"description":"Paginated issuance log summaries (IPageIShoppingMallAiCouponIssuanceLog.ISummary).","typeName":"IPageIShoppingMallAiCouponIssuanceLog.ISummary"},"authorizationRoles":["administrator","seller"],"name":"search","authorizationRole":"seller"},{"specification":"Retrieve a single, detailed coupon issuance log entry by parent couponId and issuanceLogId using shopping_mall_ai_coupon_issuance_logs. Includes all event metadata, issuance method, actor context, and ties to target user/customer for audit/investigation uses. Used for compliance and quota controls.","path":"/shoppingMallAi/administrator/coupons/{couponId}/issuanceLogs/{issuanceLogId}","method":"get","description":"Returns the metadata and full audit context for an individual coupon issuance log (shopping_mall_ai_coupon_issuance_logs) by both couponId and issuanceLogId. The log includes who issued the coupon, method, quota, issued_at, and all linked customer reference fields. Access restricted to coupon owner, administrator, or compliance auditor roles. Data is immutable and meant strictly for audit, compliance, or support views.","summary":"Retrieve a single coupon issuance log entry by ID (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"ID of parent coupon.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceLogId","description":"Unique identifier of the coupon issuance log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coupon issuance log entry as defined in main interface.","typeName":"IShoppingMallAiCouponIssuanceLog"},"authorizationRoles":["administrator","seller"],"name":"at","authorizationRole":"administrator"},{"specification":"Retrieve a single, detailed coupon issuance log entry by parent couponId and issuanceLogId using shopping_mall_ai_coupon_issuance_logs. Includes all event metadata, issuance method, actor context, and ties to target user/customer for audit/investigation uses. Used for compliance and quota controls.","path":"/shoppingMallAi/seller/coupons/{couponId}/issuanceLogs/{issuanceLogId}","method":"get","description":"Returns the metadata and full audit context for an individual coupon issuance log (shopping_mall_ai_coupon_issuance_logs) by both couponId and issuanceLogId. The log includes who issued the coupon, method, quota, issued_at, and all linked customer reference fields. Access restricted to coupon owner, administrator, or compliance auditor roles. Data is immutable and meant strictly for audit, compliance, or support views.","summary":"Retrieve a single coupon issuance log entry by ID (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"ID of parent coupon.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceLogId","description":"Unique identifier of the coupon issuance log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coupon issuance log entry as defined in main interface.","typeName":"IShoppingMallAiCouponIssuanceLog"},"authorizationRoles":["administrator","seller"],"name":"at","authorizationRole":"seller"},{"specification":"Create a new coupon issuance log for a given couponId, representing manual or campaign-triggered issuance of a coupon to a customer. Uses shopping_mall_ai_coupon_issuance_logs schema and enforces quota, eligibility, uniqueness, and proper business method values.","path":"/shoppingMallAi/administrator/coupons/{couponId}/issuanceLogs","method":"post","description":"This endpoint, restricted to administrator or seller roles, records the issuance of a coupon to a customer. The request must satisfy all business rule validations (quota, uniqueness per customer, correct method, correct audit context). All fields in the IShoppingMallAiCouponIssuanceLog.ICreate schema are required for creation. Quota and method value enforcement occurs before record is created. Adds to audit trail for compliance.","summary":"Create new coupon issuance log (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"ID of the coupon for which issuance is being recorded.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Issuance log creation fields (target user, method, quantity, context, etc).","typeName":"IShoppingMallAiCouponIssuanceLog.ICreate"},"responseBody":{"description":"Created issuance log entry, with all metadata and customer linkage.","typeName":"IShoppingMallAiCouponIssuanceLog"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"Create a new coupon issuance log for a given couponId, representing manual or campaign-triggered issuance of a coupon to a customer. Uses shopping_mall_ai_coupon_issuance_logs schema and enforces quota, eligibility, uniqueness, and proper business method values.","path":"/shoppingMallAi/seller/coupons/{couponId}/issuanceLogs","method":"post","description":"This endpoint, restricted to administrator or seller roles, records the issuance of a coupon to a customer. The request must satisfy all business rule validations (quota, uniqueness per customer, correct method, correct audit context). All fields in the IShoppingMallAiCouponIssuanceLog.ICreate schema are required for creation. Quota and method value enforcement occurs before record is created. Adds to audit trail for compliance.","summary":"Create new coupon issuance log (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"ID of the coupon for which issuance is being recorded.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Issuance log creation fields (target user, method, quantity, context, etc).","typeName":"IShoppingMallAiCouponIssuanceLog.ICreate"},"responseBody":{"description":"Created issuance log entry, with all metadata and customer linkage.","typeName":"IShoppingMallAiCouponIssuanceLog"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Update an existing coupon issuance log entry identified by couponId and issuanceLogId (shopping_mall_ai_coupon_issuance_logs). Allows correction of audit fields permitted by business/compliance process (typically notes, method explanations, possibly quantity if allowed by policy). Edits are strictly logged for audit, and only allowed by owner/administrator within time window and status constraints.","path":"/shoppingMallAi/administrator/coupons/{couponId}/issuanceLogs/{issuanceLogId}","method":"put","description":"This endpoint allows allowable updates to a coupon issuance log (fields such as notes, method, maybe quantity if not yet redeemed or within correction allowance). Full schema validation and business rules enforced. Updates are tracked for audit purposes. Unauthorized or post-issuance log correction attempt outside allowed period/status returns error. Only administrator/seller with authority can update.","summary":"Update coupon issuance log (shopping_mall_ai_coupon_issuance_logs), by ID.","parameters":[{"name":"couponId","description":"Parent coupon ID for the issuance log.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceLogId","description":"ID of the issuance log to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update object for issuance log (fields allowed per business rule/policy).","typeName":"IShoppingMallAiCouponIssuanceLog.IUpdate"},"responseBody":{"description":"Updated log entry as defined in IShoppingMallAiCouponIssuanceLog.","typeName":"IShoppingMallAiCouponIssuanceLog"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"administrator"},{"specification":"Update an existing coupon issuance log entry identified by couponId and issuanceLogId (shopping_mall_ai_coupon_issuance_logs). Allows correction of audit fields permitted by business/compliance process (typically notes, method explanations, possibly quantity if allowed by policy). Edits are strictly logged for audit, and only allowed by owner/administrator within time window and status constraints.","path":"/shoppingMallAi/seller/coupons/{couponId}/issuanceLogs/{issuanceLogId}","method":"put","description":"This endpoint allows allowable updates to a coupon issuance log (fields such as notes, method, maybe quantity if not yet redeemed or within correction allowance). Full schema validation and business rules enforced. Updates are tracked for audit purposes. Unauthorized or post-issuance log correction attempt outside allowed period/status returns error. Only administrator/seller with authority can update.","summary":"Update coupon issuance log (shopping_mall_ai_coupon_issuance_logs), by ID.","parameters":[{"name":"couponId","description":"Parent coupon ID for the issuance log.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceLogId","description":"ID of the issuance log to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update object for issuance log (fields allowed per business rule/policy).","typeName":"IShoppingMallAiCouponIssuanceLog.IUpdate"},"responseBody":{"description":"Updated log entry as defined in IShoppingMallAiCouponIssuanceLog.","typeName":"IShoppingMallAiCouponIssuanceLog"},"authorizationRoles":["administrator","seller"],"name":"update","authorizationRole":"seller"},{"specification":"Delete (logically, for audit) a coupon issuance log entry given couponId and issuanceLogId from shopping_mall_ai_coupon_issuance_logs. Used only for correcting errors where the log was created in error, prior to redemption/activity, and with full legal audit trail. Does not affect past redemptions.","path":"/shoppingMallAi/administrator/coupons/{couponId}/issuanceLogs/{issuanceLogId}","method":"delete","description":"Soft-delete a coupon issuance log entry by ID (couponId and issuanceLogId). Only possible if log isn't associated with an actual redemption or audit lockout. All deletions are audit-logged, and only permitted for administrator/owner roles and within specified business window. Errors are returned if deletion criteria are not met.","summary":"Soft-delete a coupon issuance log (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"Coupon ID to which the issuance log is linked.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceLogId","description":"Issuance log ID to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"administrator"},{"specification":"Delete (logically, for audit) a coupon issuance log entry given couponId and issuanceLogId from shopping_mall_ai_coupon_issuance_logs. Used only for correcting errors where the log was created in error, prior to redemption/activity, and with full legal audit trail. Does not affect past redemptions.","path":"/shoppingMallAi/seller/coupons/{couponId}/issuanceLogs/{issuanceLogId}","method":"delete","description":"Soft-delete a coupon issuance log entry by ID (couponId and issuanceLogId). Only possible if log isn't associated with an actual redemption or audit lockout. All deletions are audit-logged, and only permitted for administrator/owner roles and within specified business window. Errors are returned if deletion criteria are not met.","summary":"Soft-delete a coupon issuance log (shopping_mall_ai_coupon_issuance_logs).","parameters":[{"name":"couponId","description":"Coupon ID to which the issuance log is linked.","schema":{"type":"string","format":"uuid"}},{"name":"issuanceLogId","description":"Issuance log ID to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller"],"name":"erase","authorizationRole":"seller"},{"specification":"Search and filter coupon redemption logs for a specific couponId (shopping_mall_ai_coupon_redemption_logs). Supports advanced search, compliance monitoring, and analysis. Designed for audit, quota, and campaign effectiveness monitoring, as well as fraud and abuse detection. Provides list view with pagination and summary fields for each log.","path":"/shoppingMallAi/administrator/coupons/{couponId}/redemptionLogs","method":"patch","description":"Performs filtering, searching and paginating redemption logs for a given coupon. Search fields include redemption date, status, customer ID, order ID, amount redeemed, notes, and result. Supports audit and business compliance requirements. Only administrator, coupon owners, or compliance staff can access the results. Response is structured as paginated summary data per schema.","summary":"Search and paginate coupon redemption logs (shopping_mall_ai_coupon_redemption_logs).","parameters":[{"name":"couponId","description":"Coupon ID for which to retrieve the redemption logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination filter for coupon redemption logs.","typeName":"IShoppingMallAiCouponRedemptionLog.IRequest"},"responseBody":{"description":"Paginated redemption log summaries (IPageIShoppingMallAiCouponRedemptionLog.ISummary).","typeName":"IPageIShoppingMallAiCouponRedemptionLog.ISummary"},"authorizationRoles":["administrator","seller"],"name":"search","authorizationRole":"administrator"},{"specification":"Search and filter coupon redemption logs for a specific couponId (shopping_mall_ai_coupon_redemption_logs). Supports advanced search, compliance monitoring, and analysis. Designed for audit, quota, and campaign effectiveness monitoring, as well as fraud and abuse detection. Provides list view with pagination and summary fields for each log.","path":"/shoppingMallAi/seller/coupons/{couponId}/redemptionLogs","method":"patch","description":"Performs filtering, searching and paginating redemption logs for a given coupon. Search fields include redemption date, status, customer ID, order ID, amount redeemed, notes, and result. Supports audit and business compliance requirements. Only administrator, coupon owners, or compliance staff can access the results. Response is structured as paginated summary data per schema.","summary":"Search and paginate coupon redemption logs (shopping_mall_ai_coupon_redemption_logs).","parameters":[{"name":"couponId","description":"Coupon ID for which to retrieve the redemption logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination filter for coupon redemption logs.","typeName":"IShoppingMallAiCouponRedemptionLog.IRequest"},"responseBody":{"description":"Paginated redemption log summaries (IPageIShoppingMallAiCouponRedemptionLog.ISummary).","typeName":"IPageIShoppingMallAiCouponRedemptionLog.ISummary"},"authorizationRoles":["administrator","seller"],"name":"search","authorizationRole":"seller"},{"specification":"Get one detailed redemption log for a coupon, by both couponId and redemptionLogId (shopping_mall_ai_coupon_redemption_logs). All event fields, audit context, financial details, linkage to customer and order, and redemption outcome are provided. Supports compliance, business audit, fraud detection, and escalation workflows.","path":"/shoppingMallAi/administrator/coupons/{couponId}/redemptionLogs/{redemptionLogId}","method":"get","description":"Returns a single redemption log entry by couponId and redemptionLogId, including all details in the log record, customer and order references, status, discount amount granted, and full audit context. Audit fields reflect immutable state for compliance investigations and reporting. Restricted to administrator, coupon owner, or compliance roles per business policy.","summary":"Get detailed coupon redemption log (shopping_mall_ai_coupon_redemption_logs) by ID.","parameters":[{"name":"couponId","description":"Coupon ID of the parent coupon.","schema":{"type":"string","format":"uuid"}},{"name":"redemptionLogId","description":"Unique identifier of the redemption log entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Redemption log entry, as defined in IShoppingMallAiCouponRedemptionLog.","typeName":"IShoppingMallAiCouponRedemptionLog"},"authorizationRoles":["administrator","seller"],"name":"at","authorizationRole":"administrator"},{"specification":"Get one detailed redemption log for a coupon, by both couponId and redemptionLogId (shopping_mall_ai_coupon_redemption_logs). All event fields, audit context, financial details, linkage to customer and order, and redemption outcome are provided. Supports compliance, business audit, fraud detection, and escalation workflows.","path":"/shoppingMallAi/seller/coupons/{couponId}/redemptionLogs/{redemptionLogId}","method":"get","description":"Returns a single redemption log entry by couponId and redemptionLogId, including all details in the log record, customer and order references, status, discount amount granted, and full audit context. Audit fields reflect immutable state for compliance investigations and reporting. Restricted to administrator, coupon owner, or compliance roles per business policy.","summary":"Get detailed coupon redemption log (shopping_mall_ai_coupon_redemption_logs) by ID.","parameters":[{"name":"couponId","description":"Coupon ID of the parent coupon.","schema":{"type":"string","format":"uuid"}},{"name":"redemptionLogId","description":"Unique identifier of the redemption log entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Redemption log entry, as defined in IShoppingMallAiCouponRedemptionLog.","typeName":"IShoppingMallAiCouponRedemptionLog"},"authorizationRoles":["administrator","seller"],"name":"at","authorizationRole":"seller"},{"specification":"Create a new redemption log, for a coupon given by couponId (shopping_mall_ai_coupon_redemption_logs). This records a coupon's redemption for a user, order, and transaction context. Creates audit event for financial, quota, and compliance trace. Only issuers/administrator can create. All validations for status, quota, and business logic enforced by schema and backend.","path":"/shoppingMallAi/administrator/coupons/{couponId}/redemptionLogs","method":"post","description":"This endpoint creates a new redemption log for a coupon, linking the coupon to a specific redemption event (user/customer, associated order, timestamp, result, and audit metadata). Business rules enforce quota, uniqueness for single-use, linkages to legitimate orders, and status propagation. Only administrator or seller with proper access can invoke. The request must supply all required fields in IShoppingMallAiCouponRedemptionLog.ICreate, including references, discount amount, and status.","summary":"Create a new coupon redemption log entry (shopping_mall_ai_coupon_redemption_logs).","parameters":[{"name":"couponId","description":"Coupon for which this redemption is being recorded.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Redemption log creation fields (customer, order, amount, status, etc).","typeName":"IShoppingMallAiCouponRedemptionLog.ICreate"},"responseBody":{"description":"Created coupon redemption log entry, as defined by schema.","typeName":"IShoppingMallAiCouponRedemptionLog"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"administrator"},{"specification":"Create a new redemption log, for a coupon given by couponId (shopping_mall_ai_coupon_redemption_logs). This records a coupon's redemption for a user, order, and transaction context. Creates audit event for financial, quota, and compliance trace. Only issuers/administrator can create. All validations for status, quota, and business logic enforced by schema and backend.","path":"/shoppingMallAi/seller/coupons/{couponId}/redemptionLogs","method":"post","description":"This endpoint creates a new redemption log for a coupon, linking the coupon to a specific redemption event (user/customer, associated order, timestamp, result, and audit metadata). Business rules enforce quota, uniqueness for single-use, linkages to legitimate orders, and status propagation. Only administrator or seller with proper access can invoke. The request must supply all required fields in IShoppingMallAiCouponRedemptionLog.ICreate, including references, discount amount, and status.","summary":"Create a new coupon redemption log entry (shopping_mall_ai_coupon_redemption_logs).","parameters":[{"name":"couponId","description":"Coupon for which this redemption is being recorded.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Redemption log creation fields (customer, order, amount, status, etc).","typeName":"IShoppingMallAiCouponRedemptionLog.ICreate"},"responseBody":{"description":"Created coupon redemption log entry, as defined by schema.","typeName":"IShoppingMallAiCouponRedemptionLog"},"authorizationRoles":["administrator","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Update a coupon redemption log record in the shopping_mall_ai_coupon_redemption_logs table. This operation allows administrators to modify the log of a specific coupon redemption, which tracks the association of a coupon, customer, order, redemption date, status, and discount amount. The main purpose is to correct or update historical log information for audit, compliance, or business process corrections. Only administrators are authorized to perform this operation, and all updates are versioned for audit purposes.","path":"/shoppingMallAi/administrator/coupons/{couponId}/redemptionLogs/{redemptionLogId}","method":"put","description":"This operation updates an existing coupon redemption log entry in the shopping_mall_ai_coupon_redemption_logs table. Redemption logs are immutable audit records linking a coupon to a customer, optionally to an order, recording when it was redeemed, its status (success, failed, reversed, abuse_suspected, etc.), and the discount amount granted. This endpoint allows administrators to correct status, update redemption notes, or adjust linked order association for legal or compliance needs. All updates are versioned and tracked, aligning with audit and error-handling rules of the platform.\n\nThe operation requires both couponId (identifying the coupon) and redemptionLogId (identifying the exact log entry), both as UUIDs. The request body contains updated log information according to the IShoppingMallAiCouponRedemptionLog.IUpdate DTO. Only administrators are authorized to invoke this endpoint, and all changes are recorded in the audit trail for non-repudiation.","summary":"Update a coupon redemption log entry (shopping_mall_ai_coupon_redemption_logs table)","parameters":[{"name":"couponId","description":"Unique identifier of the coupon (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"redemptionLogId","description":"Unique identifier of the redemption log entry (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update in the coupon redemption log entry","typeName":"IShoppingMallAiCouponRedemptionLog.IUpdate"},"responseBody":{"description":"The updated coupon redemption log entry","typeName":"IShoppingMallAiCouponRedemptionLog"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"update"},{"specification":"Delete a coupon redemption log record from the shopping_mall_ai_coupon_redemption_logs table. As redemption logs are critical for audit, this operation typically performs a soft delete (setting a deleted_at timestamp) rather than a hard delete. Only administrators are permitted to perform deletion, and each action is recorded in an audit trail to satisfy compliance and rollback needs.","path":"/shoppingMallAi/administrator/coupons/{couponId}/redemptionLogs/{redemptionLogId}","method":"delete","description":"This operation removes a coupon redemption log entry from the shopping_mall_ai_coupon_redemption_logs table. Redemption logs hold critical business and compliance records, so the operation performs a soft delete by marking the log as deleted (by setting deleted_at) instead of physical removal. Only administrators are allowed to initiate the deletion, and every action is tracked in the audit logs. The operation requires couponId as the coupon's UUID and redemptionLogId as the log entry's UUID. After deletion, the log can be restored by authorized personnel if necessary for compliance or audit scenarios.","summary":"Soft-delete a coupon redemption log entry (shopping_mall_ai_coupon_redemption_logs table)","parameters":[{"name":"couponId","description":"Unique identifier of the coupon (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"redemptionLogId","description":"Unique identifier of the redemption log entry (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"erase"},{"specification":"Search for discount campaigns with advanced filtering, pagination, and sorting from the shopping_mall_ai_discount_campaigns table. This operation allows administrators to retrieve a list of discount campaigns based on criteria such as name, description, status, associated administrator or seller, start/end dates, and more. Results are paginated for scalability.","path":"/shoppingMallAi/administrator/discountCampaigns","method":"patch","description":"This operation searches the shopping_mall_ai_discount_campaigns table for discount campaign records. It supports filtering by campaign name, status, description, associated administrator or seller, campaign period, and more. Pagination and sorting options are provided to efficiently navigate through large campaign data sets. Administrators use this endpoint for operational oversight, analytics, or to coordinate with marketing and business development efforts.\n\nThe request body follows the IShoppingMallAiDiscountCampaign.IRequest DTO, encapsulating all search and pagination criteria. Response is a paginated object of campaign summaries (IPageIShoppingMallAiDiscountCampaign.ISummary). Access is restricted to administrators.","summary":"Search discount campaigns (shopping_mall_ai_discount_campaigns table) with pagination and filters","parameters":[],"requestBody":{"description":"Search and filtering criteria, plus pagination settings, for discount campaigns","typeName":"IShoppingMallAiDiscountCampaign.IRequest"},"responseBody":{"description":"Paginated list of discount campaign summaries matching search criteria","typeName":"IPageIShoppingMallAiDiscountCampaign.ISummary"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"search"},{"specification":"Retrieve details of a specific discount campaign by its ID from the shopping_mall_ai_discount_campaigns table. Allows administrators to view all metadata, rules, status, audit fields, and analytic information. The operation requires the discountCampaignId as a UUID.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}","method":"get","description":"This operation retrieves a discount campaign's full details from the shopping_mall_ai_discount_campaigns table. Administrators use this endpoint to view all business properties, such as campaign name, description, organizing administrator or seller, active period, campaign budget, rules, quota, status, and audit timestamps. The result is used for review, update, and compliance auditing. Only administrators are authorized to access this endpoint, which enforces role-based filtering to prevent unauthorized access to sensitive marketing operations.","summary":"Get details of a specific discount campaign by ID (shopping_mall_ai_discount_campaigns table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the selected discount campaign","typeName":"IShoppingMallAiDiscountCampaign"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"at"},{"specification":"Create a new discount campaign in the shopping_mall_ai_discount_campaigns table. The operation adds all necessary campaign metadata, business rules, associated administrator/seller, status, quota, start/end window, and analytic settings. Only administrators are authorized to use this endpoint. Input validation ensures all required campaign properties are populated and unique constraints are enforced.","path":"/shoppingMallAi/administrator/discountCampaigns","method":"post","description":"This operation creates a new discount campaign record in the shopping_mall_ai_discount_campaigns table. The request body (IShoppingMallAiDiscountCampaign.ICreate) defines key campaign information, such as name, description, associated administrator or seller, budget, active window, rule set, and business status. Only administrators can use this endpoint. The response returns the newly created discount campaign record, with all assigned identifiers and timestamps. If any uniqueness or business rule validation fails (e.g., duplicate campaign name), the API returns an explicit error message.","summary":"Create a new discount campaign (shopping_mall_ai_discount_campaigns table)","parameters":[],"requestBody":{"description":"Information for the new discount campaign","typeName":"IShoppingMallAiDiscountCampaign.ICreate"},"responseBody":{"description":"The newly created discount campaign record","typeName":"IShoppingMallAiDiscountCampaign"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"create"},{"specification":"Update a discount campaign by its ID in the shopping_mall_ai_discount_campaigns table. This allows modifying campaign properties, business status, quota/budget, active period, owner/admin/seller, and associated rule set. Uniqueness and business validation rules apply. Only administrators can update campaigns, and all operations are audit trailed.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}","method":"put","description":"This operation updates the details of an existing discount campaign in the shopping_mall_ai_discount_campaigns table. The request body (IShoppingMallAiDiscountCampaign.IUpdate) specifies updated campaign name, description, quota, budget, owner, period, status, or rules. Only administrators are permitted to update discount campaigns. Updates are validated for uniqueness and other business constraints, and every operation is audit logged for compliance and rollback. If constraints fail (e.g., duplicate name), a business error is returned.","summary":"Update a discount campaign by ID (shopping_mall_ai_discount_campaigns table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the discount campaign","typeName":"IShoppingMallAiDiscountCampaign.IUpdate"},"responseBody":{"description":"The updated discount campaign record","typeName":"IShoppingMallAiDiscountCampaign"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"update"},{"specification":"Delete a discount campaign by its ID in the shopping_mall_ai_discount_campaigns table. This operation performs a soft-delete: the campaign is flagged as deleted by setting deleted_at, preserving record for compliance and audit. Only administrators can perform this action, and audit trail is maintained.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}","method":"delete","description":"This operation soft-deletes a discount campaign from the shopping_mall_ai_discount_campaigns table. The record is not physically removed but marked as deleted (deleted_at timestamp set). This supports audit, rollback, and legal compliance needs. Only administrators are allowed to delete discount campaigns, and every action is recorded in the audit logs. After deletion, the campaign is hidden from standard queries but remains available for restoration by authorized users.","summary":"Soft-delete a discount campaign by ID (shopping_mall_ai_discount_campaigns table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"erase"},{"specification":"Search discount rules associated with a discount campaign, supporting advanced filtering, sorting, and pagination. Operates on shopping_mall_ai_discount_rules table, constrained by a parent discount campaign (identified by discountCampaignId). Only administrators can access this endpoint.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}/discountRules","method":"patch","description":"This operation retrieves a filtered, paginated list of discount rules for a given discount campaign from the shopping_mall_ai_discount_rules table. Filtering and search criteria, including type, application target, status, quota, date, and associativity, are accepted through IShoppingMallAiDiscountRule.IRequest request body. The parent campaign is specified by discountCampaignId (UUID). The response delivers paginated discount rule summaries. Only administrators are permitted to use this endpoint, and usage is audit logged.","summary":"Search discount rules for a campaign (shopping_mall_ai_discount_rules table) with pagination and filters","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination parameters for discount rules","typeName":"IShoppingMallAiDiscountRule.IRequest"},"responseBody":{"description":"Paginated list of discount rule summaries matching criteria","typeName":"IPageIShoppingMallAiDiscountRule.ISummary"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"search"},{"specification":"Get details of a specific discount rule by its ID from the shopping_mall_ai_discount_rules table, referencing both parent campaign and rule identifiers. Only administrators are permitted; operation returns all business/audit details, linkage, and constraints of the rule.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}/discountRules/{discountRuleId}","method":"get","description":"Retrieve a detailed view of a single discount rule defined in the shopping_mall_ai_discount_rules table, identified by the rule's UUID (discountRuleId) and parent discount campaign's (discountCampaignId). The operation returns the complete rule definition, including targeting, application type, amount values, stacking, quotas, and audit fields. This endpoint is restricted to administrators and supports business, legal, and operational review needs.","summary":"Get details of a specific discount rule within a campaign (shopping_mall_ai_discount_rules table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"discountRuleId","description":"Unique identifier of the discount rule (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed discount rule record","typeName":"IShoppingMallAiDiscountRule"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"at"},{"specification":"Create a new discount rule within a specific discount campaign, adding a rule to the shopping_mall_ai_discount_rules table. Requires validators for target, quota, dates, amount, type/enums, and cross-field dependencies. Only administrators may add rules, and audit/uniqueness is enforced.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}/discountRules","method":"post","description":"Create a discount rule record associated with a given discount campaign (discountCampaignId) in the shopping_mall_ai_discount_rules table. The rule specifies eligibility, amount, rule type, quota, stackability, application context, and audit properties. The request body conforms to IShoppingMallAiDiscountRule.ICreate, and the response returns the newly created rule record. Only administrators are authorized, and all requests are subject to validation of cross-field dependencies, quotas, and campaign-specific constraints. If rule uniqueness or validation fails, a business error is returned.","summary":"Create a new discount rule for a campaign (shopping_mall_ai_discount_rules table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Discount rule data to create","typeName":"IShoppingMallAiDiscountRule.ICreate"},"responseBody":{"description":"The created discount rule record","typeName":"IShoppingMallAiDiscountRule"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"create"},{"specification":"Update the details of a discount rule for a specific discount campaign by rule ID. Allows administrators to correct quota, amount, target, or timing for operational or business reasons. Only administrators may perform; subject to audit/validation.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}/discountRules/{discountRuleId}","method":"put","description":"Update properties of a given discount rule in the shopping_mall_ai_discount_rules table under a given discount campaign, identified by both discountCampaignId and discountRuleId. Request body follows IShoppingMallAiDiscountRule.IUpdate. Updatable properties include rule type, amount, applicability, quota, stacking, window, and audit fields. All updates are validated for consistency and cross-field rules, and every operation is recorded in the audit logs for compliance. Only administrators have access to this endpoint.","summary":"Update a discount rule's details for a campaign (shopping_mall_ai_discount_rules table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"discountRuleId","description":"Unique identifier of the discount rule (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated discount rule information","typeName":"IShoppingMallAiDiscountRule.IUpdate"},"responseBody":{"description":"The updated discount rule record","typeName":"IShoppingMallAiDiscountRule"},"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"update"},{"specification":"Delete (soft delete) a discount rule from a given campaign by its IDs, updating the deleted_at field in the shopping_mall_ai_discount_rules table. Soft deletion retains rule for audit/compliance. Only administrators may perform this operation, and all actions are audit trailed.","path":"/shoppingMallAi/administrator/discountCampaigns/{discountCampaignId}/discountRules/{discountRuleId}","method":"delete","description":"Perform a soft delete on a discount rule from the shopping_mall_ai_discount_rules table by marking the record as deleted (setting deleted_at timestamp) instead of physically removing the record. Both discountCampaignId (parent campaign) and discountRuleId (rule to delete) as UUIDs are required. Only administrators are allowed; audit logs capture every deletion for compliance and restoration. The rule is hidden from normal queries but retained for legal and business review.","summary":"Soft-delete a discount rule from a campaign (shopping_mall_ai_discount_rules table)","parameters":[{"name":"discountCampaignId","description":"Unique identifier of the discount campaign (UUID)","schema":{"type":"string","format":"uuid"}},{"name":"discountRuleId","description":"Unique identifier of the discount rule (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","authorizationRoles":["administrator"],"name":"erase"},{"specification":"This API operation retrieves a paginated, filtered, and sorted list of deposit accounts from the database. It uses the shopping_mall_ai_deposit_accounts table, enabling administrators to search and review user deposit accounts. Pagination, filtering by status, customer, and creation date, and sorting by balance or date are supported. This operation is suitable for compliance monitoring, account verification, and financial reporting as described in platform requirements.","path":"/shoppingMallAi/administrator/depositAccounts","method":"patch","description":"Retrieve a paginated and optionally filtered list of all deposit accounts on the platform.\n\nThis API allows platform administrators to audit, monitor, and manage deposit accounts for all customers. Information available includes balances, account status, creation/update timestamps, and association to customer IDs. The endpoint supports advanced filtering on account status, searching by customer email, and sorting by account balance or creation date.\n\nStrict role-based permissions ensure sensitive financial data is returned only to authorized users, as mandated for compliance and audit purposes.\n\nAdministrators may use this endpoint in combination with detailed account views and transaction logs to investigate discrepancies and track user activities. Error handling includes validation of filter criteria, and any unauthorized or malformed requests are rejected with descriptive error messages.","summary":"Search and paginate all deposit accounts for administrative review.","parameters":[],"requestBody":{"description":"Search parameters, filters, and pagination options for querying deposit accounts.","typeName":"IShoppingMallAiDepositAccount.IRequest"},"responseBody":{"description":"Paginated list of deposit account summaries matching the search criteria.","typeName":"IPageIShoppingMallAiDepositAccount.ISummary"},"authorizationRole":"administrator","name":"search"},{"specification":"This API operation retrieves detailed information for a single deposit account, given its unique ID. It operates on the shopping_mall_ai_deposit_accounts table, providing administrators with account-level insights, including balance, status, customer linkage, and transaction summaries. It is vital for audits, individual account review, and account maintenance.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}","method":"get","description":"Retrieve detailed data for a specific deposit account by its unique identifier.\n\nThis operation provides all available information about a deposit account, including owner metadata, balance, account creation and update timestamps, status, and current deletion state. Linked customer data may be included for context.\n\nOnly administrators are authorized to access this endpoint, as it contains sensitive financial information. Comprehensive error handling ensures that invalid or unauthorized requests are rejected with clear error messages. This endpoint should be used in conjunction with transaction logs for a full audit trail.","summary":"Retrieve details of a single deposit account by account ID.","parameters":[{"name":"depositAccountId","description":"Unique identifier of the target deposit account.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the selected deposit account, including balance and status.","typeName":"IShoppingMallAiDepositAccount"},"authorizationRole":"administrator","name":"at"},{"specification":"This operation creates a new deposit account record in the shopping_mall_ai_deposit_accounts table. It enables the platform to initialize deposit tracking for a customer during onboarding, or by administrative action. All fields are validated against business rules concerning account uniqueness and compliance.","path":"/shoppingMallAi/administrator/depositAccounts","method":"post","description":"Create a new deposit account for a customer on the platform.\n\nThis endpoint assigns a deposit account to a given customer, ensuring uniqueness per customer and initializing balance and status appropriately. Only administrators may perform this operation, and business rules are enforced to prevent duplicate accounts or invalid initial state.\n\nUsed typically during customer onboarding or through explicit admin action. Errors due to duplicate association, invalid data, or business rule conflicts are handled with precise error messages. The newly created account is immediately available for transaction activity and audit.","summary":"Create a deposit account for a customer.","parameters":[],"requestBody":{"description":"Details for creating a new deposit account, including related customer and account settings.","typeName":"IShoppingMallAiDepositAccount.ICreate"},"responseBody":{"description":"The newly created deposit account, including assigned ID and initial status.","typeName":"IShoppingMallAiDepositAccount"},"authorizationRole":"administrator","name":"create"},{"specification":"This API operation updates an existing deposit account, modifying allowed fields such as status, balance (if manual/admin adjustment is permitted), or compliance notes. It operates on shopping_mall_ai_deposit_accounts and enforces that only administrators may update financial account information.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}","method":"put","description":"Update editable fields of a specific deposit account identified by its unique ID.\n\nPermitted updates include changing the account status (active, frozen, closed), applying administrative adjustments, or updating compliance-related metadata under strict business rule enforcement. The endpoint validates all incoming changes for business integrity and platform policy adherence.\n\nOnly administrators with appropriate privileges can access this operation. Typical use cases include handling account freezes, reactivations, or investigation of discrepancies. Attempts to modify immutable fields or unauthorized updates are rejected with detailed error messages.","summary":"Update a deposit account's status or related attributes.","parameters":[{"name":"depositAccountId","description":"Unique identifier of the target deposit account.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to be updated for the deposit account, such as status or compliance properties.","typeName":"IShoppingMallAiDepositAccount.IUpdate"},"responseBody":{"description":"The updated deposit account record after changes are applied.","typeName":"IShoppingMallAiDepositAccount"},"authorizationRole":"administrator","name":"update"},{"specification":"This operation deletes a deposit account by its unique identifier. As the shopping_mall_ai_deposit_accounts schema supports a deleted_at field, this operation performs a soft delete, updating the account's deleted_at timestamp and disabling its activity, for audit/compliance retention. Only administrators may execute this operation.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}","method":"delete","description":"Soft delete (logical deletion) of a deposit account identified by its ID.\n\nWhen this operation is executed, the account's deleted_at timestamp is set and its status is updated, but the record is retained for auditing and legal compliance. The operation enforces business rules preventing deletion in cases with unresolved transactions or open investigations.\n\nOnly administrators may perform deletion actions on deposit accounts; all such actions are strictly logged. If account is ineligible for deletion (e.g., active disputes), a clear error message is returned.","summary":"Soft-delete a deposit account by setting its deleted_at timestamp.","parameters":[{"name":"depositAccountId","description":"Unique identifier of the target deposit account.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","name":"erase"},{"specification":"This API retrieves a paginated, filtered, and sorted list of deposit transactions for a specific deposit account, using the shopping_mall_ai_deposit_transactions table. Administrators can filter by transaction type, date, or status, and sort by amount or time. Adequate for compliance review, forensic accounting, or account-level transaction history.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}/depositTransactions","method":"patch","description":"Retrieve a paginated, filterable list of deposit transactions for a given deposit account.\n\nThis endpoint enables administrators to review and audit the full transaction history for a customer's deposit account. It supports filtering by transaction type (credit, debit, refund), date ranges, and sorting methods. Only administrators may access this detailed financial history, as required for financial oversight and legal compliance.\n\nCombined with account-level APIs, this operation is used to investigate discrepancies, reconstruct history, and support user or compliance inquiries. Errors in filter parameters or unauthorized access will result in explicit error messages.","summary":"List deposit transactions for a specific account with filter and pagination support.","parameters":[{"name":"depositAccountId","description":"Unique identifier of the parent deposit account.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for transaction history retrieval, including pagination options.","typeName":"IShoppingMallAiDepositTransaction.IRequest"},"responseBody":{"description":"Paginated transaction records matching search/filter on the account.","typeName":"IPageIShoppingMallAiDepositTransaction"},"authorizationRole":"administrator","name":"search"},{"specification":"This API retrieves details of an individual deposit transaction under a specific deposit account, using shopping_mall_ai_deposit_transactions. Used by administrators for audit, review, and ledger integrity verification.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}/depositTransactions/{depositTransactionId}","method":"get","description":"Fetch complete details of a deposit transaction by its unique ID within the context of a deposit account.\n\nThis operation allows administrators to review the specifics of a particular deposit transaction, including amount, type, resulting balance, references to related orders/payments, and complete audit trail links. This is essential for resolving disputes, auditing account activity, and verifying compliance.\n\nOnly administrators have access due to the sensitivity of transactional data; improper requests (invalid ID, mismatched account) are handled securely with business-context error reporting.","summary":"Retrieve a specific deposit transaction in a deposit account by its ID.","parameters":[{"name":"depositAccountId","description":"Unique identifier of the parent deposit account.","schema":{"type":"string","format":"uuid"}},{"name":"depositTransactionId","description":"Unique identifier of the target deposit transaction.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the selected deposit transaction record.","typeName":"IShoppingMallAiDepositTransaction"},"authorizationRole":"administrator","name":"at"},{"specification":"This API operation creates a new deposit transaction (credit, debit, refund, etc.) within a specific deposit account. It writes a new record to shopping_mall_ai_deposit_transactions, supporting all business-process-driven financial events: manual adjustment, refund, deposit, etc. Strict administrator restrictions apply.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}/depositTransactions","method":"post","description":"Create a new deposit transaction record for a specific deposit account, such as credit, debit, or adjustment.\n\nThis endpoint allows administrators and authorized financial operators to record a financial event in the ledger of a customer's deposit account. The operation validates transaction type, ensures resulting balances remain logically correct, and applies all compliance constraints. Supported transaction types and rules must fit business logic.\n\nTypical use cases include administrative credits, corrections, refund processing, or manual debits for compliance settlements. Only administrators can call this endpoint. All transactions are recorded with full audit logs and, if logical/business rule constraints are violated, detailed errors are returned.","summary":"Add a new transaction to a deposit account's ledger.","parameters":[{"name":"depositAccountId","description":"Unique identifier of the parent deposit account.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details for the new deposit transaction, including type, amount, and business context.","typeName":"IShoppingMallAiDepositTransaction.ICreate"},"responseBody":{"description":"The created deposit transaction, with assigned ID and resulting balance.","typeName":"IShoppingMallAiDepositTransaction"},"authorizationRole":"administrator","name":"create"},{"specification":"This API updates modifiable fields on an existing deposit transaction, such as status or correction notes. Only administrators may update transactions, and all changes are validated and auditable in shopping_mall_ai_deposit_transactions.","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}/depositTransactions/{depositTransactionId}","method":"put","description":"Update an existing deposit transaction in a deposit account by transaction ID.\n\nAdministrators may correct supported fields, such as manual adjustment reasons or transactional status, within business-permitted update scope. Sensitive fields such as amount or account link may be restricted from modification post-creation for audit integrity.\n\nBusiness rules enforce all changes, and attempted unauthorized modifications result in detailed errors. Used in special cases of correction, reversal, or administrative adjustment, always with full audit trail.","summary":"Update allowed fields of a deposit transaction record.","parameters":[{"name":"depositAccountId","description":"Parent deposit account unique ID.","schema":{"type":"string","format":"uuid"}},{"name":"depositTransactionId","description":"Unique identifier for the deposit transaction to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Modifications to be applied to the deposit transaction, such as correction status or notes.","typeName":"IShoppingMallAiDepositTransaction.IUpdate"},"responseBody":{"description":"Updated deposit transaction record after changes.","typeName":"IShoppingMallAiDepositTransaction"},"authorizationRole":"administrator","name":"update"},{"specification":"This API operation deletes (soft delete) a deposit transaction record in a given deposit account, using the deleted_at nullable field in shopping_mall_ai_deposit_transactions. Actions are logged and only permitted when business rules allow (e.g., no open audit or compliance lock).","path":"/shoppingMallAi/administrator/depositAccounts/{depositAccountId}/depositTransactions/{depositTransactionId}","method":"delete","description":"Soft deletes a deposit transaction within a specified deposit account by marking it as deleted.\n\nThe operation updates the deleted_at timestamp of the transaction, disabling it from normal ledgers but retaining the record for audit and compliance purposes. Deletion is permitted only for administrators, and strict business rules prevent deletion in the case of open disputes or compliance holds. Attempts to delete immutable or ineligible transactions result in explicit business errors.\n\nAll soft deletions are fully audit-trailed per platform compliance requirements.","summary":"Soft-delete a deposit transaction by ID within a deposit account.","parameters":[{"name":"depositAccountId","description":"Parent deposit account unique ID.","schema":{"type":"string","format":"uuid"}},{"name":"depositTransactionId","description":"Unique identifier of the transaction to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"administrator","name":"erase"},{"specification":"This API provides paginated search, filtering, and sorting for all mileage accounts using the shopping_mall_ai_mileage_accounts table. It supports audit, compliance, and operational review. Administrators can search by customer, account status, and track balance or creation date for internal reporting and monitoring.","path":"/shoppingMallAi/administrator/mileageAccounts","method":"patch","description":"List and filter all mileage accounts on the platform, returning paginated, summarized data for review.\n\nThis endpoint delivers a comprehensive, filtered list of mileage accounts for all customers, suitable for compliance, audit, and account management purposes. Features include search by customer, filtering by status, and sorting by balance or creation time.\n\nOnly administrators have access. Used in conjunction with detail and transaction endpoints for full mileage account lifecycle oversight. Errors in query parameters or unauthorized attempts are explicitly handled and returned to callers.","summary":"Search and paginate all mileage accounts for compliance and admin reporting.","parameters":[],"requestBody":{"description":"Search, filter, and pagination options for querying mileage accounts.","typeName":"IShoppingMallAiMileageAccount.IRequest"},"responseBody":{"description":"Paginated summary results of matching mileage accounts.","typeName":"IPageIShoppingMallAiMileageAccount.ISummary"},"authorizationRole":"administrator","name":"search"},{"specification":"This API returns complete detailed information for a single mileage account identified by its unique ID, from the shopping_mall_ai_mileage_accounts table. Intended for administrator use only, such as in detailed reviews or investigations.","path":"/shoppingMallAi/administrator/mileageAccounts/{mileageAccountId}","method":"get","description":"Retrieve full details about a specific mileage account by its unique identifier.\n\nDetailed account information includes balance, status, owner customer ID, creation and update timestamps, and soft deletion state. Only administrators can use this endpoint, which is primarily used when investigating specific customer issues or supporting audit processes.\n\nUnauthorized access or invalid account ID requests will result in business-reasoned error messages linked to compliance requirements.","summary":"Get complete details of a mileage account by ID.","parameters":[{"name":"mileageAccountId","description":"Unique identifier of the mileage account to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed mileage account record for the specified ID.","typeName":"IShoppingMallAiMileageAccount"},"authorizationRole":"administrator","name":"at"},{"specification":"This operation creates a new mileage account for an individual customer on the platform. It maps directly to the shopping_mall_ai_mileage_accounts table in the Prisma schema. The account will be associated with a single customer, and used to track all mileage (reward points) activity, including accrual, redemption, and expiry. This endpoint is critical for onboarding customers to the mileage system and enabling real-time tracking of their reward balances. Automatic status assignment and audit logging should occur upon account creation. The account maintains a unique relationship with the customer (one-to-one per shopping_mall_ai_customer_id), and any balance changes are managed via transaction logs.","path":"/shoppingMallAi/administrator/mileageAccounts","method":"post","description":"Register a new mileage account for a platform customer. This API operation creates an entry in the shopping_mall_ai_mileage_accounts table, assigning it to a specified customer and initializing with default values (balance, status, timestamps). The endpoint enforces one-to-one uniqueness between mileage accounts and customers, verifying that the customer does not already possess another mileage account. Business validation also checks the account status and legal compliance at the time of creation.\n\nSecurity is enforced so only customers themselves (for self-registration), administrators, or authorized system roles may use this endpoint. Sensitive account data is appropriately logged and access is limited following platform privacy and audit requirements.\n\nAll subsequent activity—including reward point accrual, redemption, and auditing—will reference this foundational account record. Error conditions include attempts to create duplicate accounts for the same customer or using invalid customer IDs.","summary":"Create a mileage account for a platform customer (shopping_mall_ai_mileage_accounts table).","parameters":[],"requestBody":{"description":"Information for creating a mileage account, including required customer reference and account status.","typeName":"IShoppingMallAiMileageAccount.ICreate"},"responseBody":{"description":"The created mileage account information, as stored in the system.","typeName":"IShoppingMallAiMileageAccount"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update details of an existing mileage account, such as account status or balance adjustments (where allowed by business logic). This endpoint is tied to the shopping_mall_ai_mileage_accounts table, supporting lifecycle actions including freezing, closing, or reactivating an account. Balance edits are typically not allowed via this endpoint—such changes should come through transaction records—but status or metadata may be changed here. Full audit and compliance rules apply for all changes. The account is identified by its unique UUID.","path":"/shoppingMallAi/administrator/mileageAccounts/{mileageAccountId}","method":"put","description":"Modify an existing mileage account's metadata or status, as found in shopping_mall_ai_mileage_accounts. Only administrative or customer-initiated update flows are permitted. This operation requires the unique mileage account ID as a path parameter. The operation validates any update against business rules, ensuring the customer's account remains unique and that only allowable properties are changed (typically status-related properties, not direct balance mutation).\n\nAll update actions create an audit trail record for compliance. Ownership and permission checks are performed to restrict access to the account owner, administrative roles, or designated finance operators. Edits affecting balance must still use the transaction API.\n\nError handling covers attempts to update nonexistent accounts, unauthorized access, or invalid status transitions. Success returns the updated mileage account object.","summary":"Update metadata or status for an existing mileage account (shopping_mall_ai_mileage_accounts).","parameters":[{"name":"mileageAccountId","description":"Unique identifier of the target mileage account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the mileage account (status, metadata, but not raw balance).","typeName":"IShoppingMallAiMileageAccount.IUpdate"},"responseBody":{"description":"The updated mileage account information, reflecting the latest state.","typeName":"IShoppingMallAiMileageAccount"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Delete a mileage account from the platform, referencing the shopping_mall_ai_mileage_accounts table and triggered by a unique UUID. This operation performs a soft deletion by setting the deleted_at timestamp and, if defined in business policy, changing the status to reflect closure. All associated mileage transactions remain for audit history, compliance, and legal review. Hard deletion is prohibited except through administrative override procedures. Permissions restrict this operation to owners or platform finance/administrative roles. Audit logging is mandatory.","path":"/shoppingMallAi/administrator/mileageAccounts/{mileageAccountId}","method":"delete","description":"Logically delete (soft-delete) a mileage account using its UUID. This sets the deleted_at field and, optionally, changes status for closure on the shopping_mall_ai_mileage_accounts record. Business rules block deletion if open transactions or pending compliance holds exist. The endpoint is for account owner (customer) or admin-initiated closures, with all actions fully audited. Associated transactions and ledgers are retained for compliance.\n\nSecurity enforces role and identity checks, as well as legal and audit policy. Hard deletion (full record purge) is not supported at this endpoint—all deletions are logical unless escalated to higher admin workflows.","summary":"Soft-delete (close) a mileage account (shopping_mall_ai_mileage_accounts table).","parameters":[{"name":"mileageAccountId","description":"UUID that identifies the mileage account to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Retrieve a paginated, filtered list of all mileage transactions for a specific mileage account, as stored in the shopping_mall_ai_mileage_transactions table. Supports advanced search/filtering (by date, type, related order/coupon, etc.) and sort/pagination requests. This endpoint is strictly contextual to a single mileage account (parent path param). Only the mileage account owner, administrators, or authorized finance operators may retrieve this data. Pagination and summary counts facilitate reporting and dashboard integration.","path":"/shoppingMallAi/customer/mileageAccounts/{mileageAccountId}/mileageTransactions","method":"patch","description":"Search and retrieve mileage transactions for a single mileage account, using advanced criteria such as date range, type (earn/redeem/expire), or related business context. This operation supports paginated retrieval for reporting, analytics, and compliance scenarios. Path parameter enforces scoping to one account. Only permitted to the account owner or platform administrative/finance roles. Business logic ensures no leakage of sensitive or unauthorized data. Returns a paginated result of mileage transaction summaries, with current pagination and metadata.\n\nError handling covers invalid account, authorization failures, and parameter validation. Paginates results for performance with typical default and max sizes enforced.","summary":"Search and paginate mileage transactions for a mileage account (shopping_mall_ai_mileage_transactions).","parameters":[{"name":"mileageAccountId","description":"UUID for the specific mileage account whose transactions are queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request criteria for searching, filtering, and paginating mileage transactions.","typeName":"IShoppingMallAiMileageTransaction.IRequest"},"responseBody":{"description":"Paginated list of mileage transaction summaries for the account, as per query.","typeName":"IPageIShoppingMallAiMileageTransaction.ISummary"},"authorizationRoles":["customer"],"name":"search","authorizationRole":"customer"},{"specification":"Fetch a single mileage transaction record by its unique ID within the context of a specific mileage account. This operation accesses the shopping_mall_ai_mileage_transactions table, returning the full detail of the given transaction for reporting, user review, or audit. This endpoint is path-scoped to both the owning account and the transaction for permission validation. Only permitted for the account owner, admin, or authorized finance staff.","path":"/shoppingMallAi/customer/mileageAccounts/{mileageAccountId}/mileageTransactions/{mileageTransactionId}","method":"get","description":"Retrieve the detailed information for one mileage transaction, validated against the parent mileage account. Both the account and transaction IDs must be provided as path parameters. This exposes transaction details such as accrual/redemption amount, related order/coupon, resulting balance, and timestamp. Role and ownership checks ensure only authorized users can access this record. Used for transaction history display and compliance audits.\n\nErrors are returned if either ID does not exist or if access is denied by business rules.","summary":"Get a single mileage transaction for a mileage account (shopping_mall_ai_mileage_transactions).","parameters":[{"name":"mileageAccountId","description":"UUID of the mileage account owning the transaction.","schema":{"type":"string","format":"uuid"}},{"name":"mileageTransactionId","description":"UUID of the mileage transaction to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed mileage transaction object for the account.","typeName":"IShoppingMallAiMileageTransaction"},"authorizationRoles":["customer"],"name":"at","authorizationRole":"customer"},{"specification":"Create a new mileage transaction within a given mileage account, corresponding to an entry in shopping_mall_ai_mileage_transactions. Used for accruals, redemptions, expiries, or manual adjustments. Business logic strictly validates type, amount (must not result in negative balance), and all account state constraints before acceptance. After successful creation, account balance, logs, and audit trails are updated atomically.","path":"/shoppingMallAi/administrator/mileageAccounts/{mileageAccountId}/mileageTransactions","method":"post","description":"Create a new mileage transaction for the specified mileage account. Includes handling of all types of mileage transactions (e.g., earn, redeem, expire, adjust). Validates against account’s current balance to preserve system consistency (no negative balances). The request is atomic: balance, transaction record, and audit log are all updated as one operation. Permission checks restrict creation to finance/admin or, when allowed, to the account owner. Used for both automated and manual mileage events, adhering to audit/compliance and business restrictions.","summary":"Create a mileage transaction for a mileage account (shopping_mall_ai_mileage_transactions).","parameters":[{"name":"mileageAccountId","description":"UUID of the account for which the transaction is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Transaction creation payload specifying amount, type, and related entities.","typeName":"IShoppingMallAiMileageTransaction.ICreate"},"responseBody":{"description":"The created mileage transaction object, reflecting the new account balance.","typeName":"IShoppingMallAiMileageTransaction"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update (correct) a specific mileage transaction for a mileage account. Corresponds to the shopping_mall_ai_mileage_transactions table and requires both account and transaction UUIDs. This is typically used for rare business corrections or adjustments, not for general transaction history edits. It ensures the updated record maintains full audit integrity, and the account balance is recalculated if needed, following business policies for corrections.","path":"/shoppingMallAi/administrator/mileageAccounts/{mileageAccountId}/mileageTransactions/{mileageTransactionId}","method":"put","description":"Edit an existing mileage transaction for a given account. Only used for legitimate correction scenarios, not for ordinary business flows. Both account and transaction IDs must be path specified to enforce contextual correctness. Update validations prevent violations of business rules, such as negative balances or audit gaps. All correction actions are strictly logged for compliance. Ownership, role, and context logic prevent unauthorized editing. Success returns the revised transaction object. Rarely used and access is highly restricted.","summary":"Update a mileage transaction (business/financial correction only, not general use).","parameters":[{"name":"mileageAccountId","description":"UUID for the parent mileage account.","schema":{"type":"string","format":"uuid"}},{"name":"mileageTransactionId","description":"UUID of the mileage transaction to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the transaction correction. Allowable only as per business/audit rules.","typeName":"IShoppingMallAiMileageTransaction.IUpdate"},"responseBody":{"description":"The updated transaction record reflecting applied corrections.","typeName":"IShoppingMallAiMileageTransaction"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Soft-delete (logically remove) a single mileage transaction from a specific mileage account. This operation only sets the deleted_at flag for the transaction in the shopping_mall_ai_mileage_transactions table, ensuring the event is retained for audit and compliance. This is not a hard deletion, as legal regulations require permanent retention of some financial records. Permissioning is limited to admin or finance roles, and all actions are comprehensively audited.","path":"/shoppingMallAi/administrator/mileageAccounts/{mileageAccountId}/mileageTransactions/{mileageTransactionId}","method":"delete","description":"Soft-delete a mileage transaction from a mileage account, marking it with a deleted_at timestamp but otherwise retaining full history and audit trace. Permitted only for business corrections, audit, or compliance needs, with access controls strictly applied. This operation is not for general use; legal restrictions prevent full purging of financial data. All deletion events are logged.","summary":"Soft-delete a mileage transaction for a mileage account (audit deletion only).","parameters":[{"name":"mileageAccountId","description":"UUID of the mileage account holding the transaction.","schema":{"type":"string","format":"uuid"}},{"name":"mileageTransactionId","description":"UUID of the specific transaction to soft-delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Paginated and filterable retrieval of all financial audit logs recorded in shopping_mall_ai_financial_audit_logs. Supports advanced search by actor, affected entity/table, action type, time range, rationale, or audit target. Access restricted to administrative or financial audit roles (no customer/general user exposure). Key for compliance reporting, business analysis, and regulatory investigation. Returns paginated summaries for dashboard/report integration.","path":"/shoppingMallAi/administrator/financialAuditLogs","method":"patch","description":"Search and retrieve business/financial audit records, using advanced filter conditions such as actor, model name, action type, rationale, or date range. Used by finance and compliance teams for real-time or historical analysis of deposit/mileage/account activity. Only accessible to users with explicit audit/reporting permissions. Results are paginated for performance and user experience.","summary":"Search and paginate financial audit logs (shopping_mall_ai_financial_audit_logs).","parameters":[],"requestBody":{"description":"Filtering and pagination criteria for financial audit log retrieval.","typeName":"IShoppingMallAiFinancialAuditLog.IRequest"},"responseBody":{"description":"Paginated set of audit log summaries for compliance/reporting.","typeName":"IPageIShoppingMallAiFinancialAuditLog.ISummary"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Fetch full details of a specific financial audit log entry by its unique ID from shopping_mall_ai_financial_audit_logs. Used in compliance, legal, or financial analysis scenarios. Exposes all details in the record, including actors, before/after snapshots, and rationale. Only accessible by audit/compliance administrators or appropriate finance personnel. Errors if record not found or access unauthorized.","path":"/shoppingMallAi/administrator/financialAuditLogs/{financialAuditLogId}","method":"get","description":"Retrieve the comprehensive audit information for one financial log entry, as referenced by its UUID. Shows all relevant fields (actor, action type, affected entity, before/after values, rationale, timestamps) for full traceability. Critically used for audit records, compliance verification, or external/legal investigations. Path parameter identifies which audit record to return.\n\nRestricted to finance audit and admin roles due to sensitive data exposure.","summary":"Retrieve detailed information for one financial audit log entry.","parameters":[{"name":"financialAuditLogId","description":"UUID uniquely identifying the target financial audit log entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The complete financial audit log record as stored.","typeName":"IShoppingMallAiFinancialAuditLog"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Admin/finance endpoint to create a new financial audit log entry in shopping_mall_ai_financial_audit_logs. Used to log business-impacting account, deposit, or mileage actions not automatically recorded by other flows, or to document special/manual interventions for legal/compliance. Creates a full, immutable audit record, linking actor (admin, customer, seller), target business entity, before/after values, justification, and timestamp. Audit logs are append-only. Only privileged roles may invoke this endpoint.","path":"/shoppingMallAi/administrator/financialAuditLogs","method":"post","description":"Create a new financial audit log entry, explicitly documenting a business, legal, or compliance event involving deposit/mileage/account operations. Used for exceptional, manual, or administratively-mandated audit entries not automatically recorded. The payload provides actor (role and ID), the affected business table and row, before/after state, rationale, and other required fields. Result is an immutable, audit-compliant record for system and policy review.","summary":"Create a financial audit log record (manual/legal audit event) in shopping_mall_ai_financial_audit_logs.","parameters":[],"requestBody":{"description":"Full business/legal context to create a financial audit log entry.","typeName":"IShoppingMallAiFinancialAuditLog.ICreate"},"responseBody":{"description":"The created audit log record, including all event and context data.","typeName":"IShoppingMallAiFinancialAuditLog"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Edit/correct an existing financial audit log entry for business/administrative reasons, as found in shopping_mall_ai_financial_audit_logs. Permitted only for strict scenarios (e.g., correction of manual entry error, additional rationale). All corrections are fully audited and the record retains prior versions for audit trail. Only privileged admin or finance roles may use this endpoint.","path":"/shoppingMallAi/administrator/financialAuditLogs/{financialAuditLogId}","method":"put","description":"Update an existing financial audit log entry. This is used only for strict reasons (e.g., typo correction, add more context to rationale), not for fundamental event property changes. Correction is audited, so prior and current values are versioned. Permissions tightly restrict to finance or admin with explicit corrective business case. Path parameter identifies the audit log to update; business rules block editing immutable event data (only context fields such as rationale can generally be changed). Returns the revised object.","summary":"Update context or rationale for a financial audit log entry (strict correction only).","parameters":[{"name":"financialAuditLogId","description":"UUID referencing the specific audit log entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields allowed to update (e.g., rationale, context) in audit log correction.","typeName":"IShoppingMallAiFinancialAuditLog.IUpdate"},"responseBody":{"description":"The updated audit log entry, recording the applied corrections.","typeName":"IShoppingMallAiFinancialAuditLog"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Deletes a financial audit log entry by its unique identifier. This operation performs a hard delete on the specified record in the shopping_mall_ai_financial_audit_logs table. The log entry contains critical financial action records including before/after values, rationale, and actor, used for compliance and traceability. As the schema supports only hard delete (there is no soft-delete field except deleted_at, which is not used for logical exclusion of access after the fact), this operation will fully remove the record upon successful authorization. Only administrators with sufficient permissions are allowed to execute this operation. The operation may fail if the targeted log does not exist, is already deleted, or if an invalid or unauthorized request is made.","path":"/shoppingMallAi/administrator/financialAuditLogs/{financialAuditLogId}","method":"delete","description":"Delete a specified financial audit log from the shopping_mall_ai_financial_audit_logs table. This operation permanently removes the target record from the system. Only administrators are permitted to perform this deletion, which is a hard delete as the model uses deleted_at for soft deletion but the operation is intended to fully remove access for compliance reasons. All related references (such as actor or target objects) will remain in the database for audit. Security and authorization are strictly enforced to prevent unauthorized log deletion. Error responses are provided when the log is not found or deletion is attempted without required privileges.","summary":"Delete a specific financial audit log by ID (hard delete).","parameters":[{"name":"financialAuditLogId","description":"Unique identifier of the financial audit log to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Retrieves a paginated, filtered list of reviews from the shopping_mall_ai_reviews table. Supports full-text search, filtering by product, customer, visible/reported state, rating, and status. This operation returns review summaries optimized for administrative, seller, and analytics UI. Only authorized users (administrator, seller, customer—see permissions) can access data; customers can only see their own or public reviews. Supports configurable pagination and sorting. Designed for scalable list queries and operational dashboards.","path":"/shoppingMallAi/customer/reviews","method":"patch","description":"Fetch a paginated, filtered list of reviews from the shopping_mall_ai_reviews table. Supports search by product, customer, rating, state, date, and text content. Implements visibility and role-based field redaction per user permission—customers see their reviews and public reviews; sellers see reviews on their products; administrators see all. Returns summaries for performance, with options for detailed expansion via related endpoints. Security and parameter validation are strictly enforced. Error handling provides actionable messages for bad queries or permission denials.","summary":"Search, filter, and paginate reviews with full role-based access control.","parameters":[],"requestBody":{"description":"Criteria for search/filter/pagination of reviews, including allowed fields such as product ID, customer ID, rating, state, visibility, reported flag, and date range.","typeName":"IShoppingMallAiReview.IRequest"},"responseBody":{"description":"Paginated, filtered list of review summaries fitting the search criteria.","typeName":"IPageIShoppingMallAiReview.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieves a paginated, filtered list of reviews from the shopping_mall_ai_reviews table. Supports full-text search, filtering by product, customer, visible/reported state, rating, and status. This operation returns review summaries optimized for administrative, seller, and analytics UI. Only authorized users (administrator, seller, customer—see permissions) can access data; customers can only see their own or public reviews. Supports configurable pagination and sorting. Designed for scalable list queries and operational dashboards.","path":"/shoppingMallAi/seller/reviews","method":"patch","description":"Fetch a paginated, filtered list of reviews from the shopping_mall_ai_reviews table. Supports search by product, customer, rating, state, date, and text content. Implements visibility and role-based field redaction per user permission—customers see their reviews and public reviews; sellers see reviews on their products; administrators see all. Returns summaries for performance, with options for detailed expansion via related endpoints. Security and parameter validation are strictly enforced. Error handling provides actionable messages for bad queries or permission denials.","summary":"Search, filter, and paginate reviews with full role-based access control.","parameters":[],"requestBody":{"description":"Criteria for search/filter/pagination of reviews, including allowed fields such as product ID, customer ID, rating, state, visibility, reported flag, and date range.","typeName":"IShoppingMallAiReview.IRequest"},"responseBody":{"description":"Paginated, filtered list of review summaries fitting the search criteria.","typeName":"IPageIShoppingMallAiReview.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"Retrieves a paginated, filtered list of reviews from the shopping_mall_ai_reviews table. Supports full-text search, filtering by product, customer, visible/reported state, rating, and status. This operation returns review summaries optimized for administrative, seller, and analytics UI. Only authorized users (administrator, seller, customer—see permissions) can access data; customers can only see their own or public reviews. Supports configurable pagination and sorting. Designed for scalable list queries and operational dashboards.","path":"/shoppingMallAi/administrator/reviews","method":"patch","description":"Fetch a paginated, filtered list of reviews from the shopping_mall_ai_reviews table. Supports search by product, customer, rating, state, date, and text content. Implements visibility and role-based field redaction per user permission—customers see their reviews and public reviews; sellers see reviews on their products; administrators see all. Returns summaries for performance, with options for detailed expansion via related endpoints. Security and parameter validation are strictly enforced. Error handling provides actionable messages for bad queries or permission denials.","summary":"Search, filter, and paginate reviews with full role-based access control.","parameters":[],"requestBody":{"description":"Criteria for search/filter/pagination of reviews, including allowed fields such as product ID, customer ID, rating, state, visibility, reported flag, and date range.","typeName":"IShoppingMallAiReview.IRequest"},"responseBody":{"description":"Paginated, filtered list of review summaries fitting the search criteria.","typeName":"IPageIShoppingMallAiReview.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieves a single review by its unique identifier from the shopping_mall_ai_reviews table. The review includes author, product, order (if any), title, body, rating, visibility, and reported status. View permissions are strictly enforced: customers can view their own and public reviews, sellers can view reviews of their products, administrators can view any review.","path":"/shoppingMallAi/customer/reviews/{reviewId}","method":"get","description":"Fetch a specific review by its unique identifier. Returns all fields in the review record, including relations to customer, product, and optionally order. Enforces role-based access: customers may view their own and public reviews, sellers can only access reviews on their SKUs, and administrators have unrestricted access. Attempts to view a non-existent, deleted, or restricted review result in error or access denied.","summary":"Retrieve a specific review by ID with field-level access control.","parameters":[{"name":"reviewId","description":"Unique identifier of the review to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested review.","typeName":"IShoppingMallAiReview"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"Retrieves a single review by its unique identifier from the shopping_mall_ai_reviews table. The review includes author, product, order (if any), title, body, rating, visibility, and reported status. View permissions are strictly enforced: customers can view their own and public reviews, sellers can view reviews of their products, administrators can view any review.","path":"/shoppingMallAi/seller/reviews/{reviewId}","method":"get","description":"Fetch a specific review by its unique identifier. Returns all fields in the review record, including relations to customer, product, and optionally order. Enforces role-based access: customers may view their own and public reviews, sellers can only access reviews on their SKUs, and administrators have unrestricted access. Attempts to view a non-existent, deleted, or restricted review result in error or access denied.","summary":"Retrieve a specific review by ID with field-level access control.","parameters":[{"name":"reviewId","description":"Unique identifier of the review to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested review.","typeName":"IShoppingMallAiReview"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieves a single review by its unique identifier from the shopping_mall_ai_reviews table. The review includes author, product, order (if any), title, body, rating, visibility, and reported status. View permissions are strictly enforced: customers can view their own and public reviews, sellers can view reviews of their products, administrators can view any review.","path":"/shoppingMallAi/administrator/reviews/{reviewId}","method":"get","description":"Fetch a specific review by its unique identifier. Returns all fields in the review record, including relations to customer, product, and optionally order. Enforces role-based access: customers may view their own and public reviews, sellers can only access reviews on their SKUs, and administrators have unrestricted access. Attempts to view a non-existent, deleted, or restricted review result in error or access denied.","summary":"Retrieve a specific review by ID with field-level access control.","parameters":[{"name":"reviewId","description":"Unique identifier of the review to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested review.","typeName":"IShoppingMallAiReview"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Creates a new review in the shopping_mall_ai_reviews table. Permitted for customers who completed a purchase of the target product and are within the allowed review window. The request must provide product ID, optional order ID, title, body, and numeric rating. Upon validation, a new review record is created with field-level access controls and visibility status determined by policy and moderation workflow. Error scenarios include duplicate submission, unauthorized attempt, or business rule violation (such as not having purchased the product).","path":"/shoppingMallAi/customer/reviews","method":"post","description":"Create a new product review after successful purchase. Verifies eligibility by confirming product purchase, order completion, and review window. Records title, body, rating, product ID, customer ID (from authenticated user), and visibility status. Automatically enforces 1-review-per-product-per-order-per-customer. After creation, the review may enter moderation or be published immediately based on business policy. Errors are returned on business rule violations, duplicate attempts, or missing required fields.","summary":"Submit a new review for a purchased product.","parameters":[],"requestBody":{"description":"Payload needed to create a new review—includes product ID, optional order ID, title, review body, and rating value, plus any required metadata.","typeName":"IShoppingMallAiReview.ICreate"},"responseBody":{"description":"The newly created review with full details and current status.","typeName":"IShoppingMallAiReview"},"authorizationRoles":["customer"],"name":"create","authorizationRole":"customer"},{"specification":"Updates (edits) an existing review by its unique identifier in the shopping_mall_ai_reviews table. The operation allows the review author (customer) or administrators to update the review's title, body, or rating if within the allowed edit window and business rules. Edits by customers result in a new immutable snapshot of the previous state. Administrators may moderate and update visibility or reported state as required. Strict field validation; only permitted fields can be set. Error scenarios: edit window expired, unauthorized editor, or locked review.","path":"/shoppingMallAi/customer/reviews/{reviewId}","method":"put","description":"Edit or moderate a specific review. Customers may update their own reviews within the allowable window; administrators can override or moderate as needed (e.g., visibility/report status). Each edit creates a new review snapshot for audit. All field changes are validated against business rules. Unauthorized edits, attempt to alter locked or expired reviews, or invalid data result in error.","summary":"Edit or moderate an existing review (with snapshot).","parameters":[{"name":"reviewId","description":"Unique identifier of the review to edit.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update: title, body, rating, and optionally visibility/report status, depending on editor role.","typeName":"IShoppingMallAiReview.IUpdate"},"responseBody":{"description":"Updated review details after modification and snapshotting.","typeName":"IShoppingMallAiReview"},"authorizationRoles":["customer","administrator"],"name":"update","authorizationRole":"customer"},{"specification":"Updates (edits) an existing review by its unique identifier in the shopping_mall_ai_reviews table. The operation allows the review author (customer) or administrators to update the review's title, body, or rating if within the allowed edit window and business rules. Edits by customers result in a new immutable snapshot of the previous state. Administrators may moderate and update visibility or reported state as required. Strict field validation; only permitted fields can be set. Error scenarios: edit window expired, unauthorized editor, or locked review.","path":"/shoppingMallAi/administrator/reviews/{reviewId}","method":"put","description":"Edit or moderate a specific review. Customers may update their own reviews within the allowable window; administrators can override or moderate as needed (e.g., visibility/report status). Each edit creates a new review snapshot for audit. All field changes are validated against business rules. Unauthorized edits, attempt to alter locked or expired reviews, or invalid data result in error.","summary":"Edit or moderate an existing review (with snapshot).","parameters":[{"name":"reviewId","description":"Unique identifier of the review to edit.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update: title, body, rating, and optionally visibility/report status, depending on editor role.","typeName":"IShoppingMallAiReview.IUpdate"},"responseBody":{"description":"Updated review details after modification and snapshotting.","typeName":"IShoppingMallAiReview"},"authorizationRoles":["customer","administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Deletes a review by its unique identifier from the shopping_mall_ai_reviews table. Deletion is a soft delete; the deleted_at field is set and the review is removed from public/user display but retained for audit and legal compliance. Only the review's author (customer) or administrators may delete a review, and only within policy windows (e.g., before moderation lock or after-service window expires). Attempts to delete a locked, moderated, or expired review will result in errors.","path":"/shoppingMallAi/customer/reviews/{reviewId}","method":"delete","description":"Soft-deletes a review by setting deleted_at in the shopping_mall_ai_reviews table. The operation hides the review from public and user-facing endpoints but retains all data for compliance, audit, or recovery. Only the review's author or administrators may perform this operation and only if the review is still eligible for deletion. Errors occur if deletion is locked or unauthorized.","summary":"Delete (soft delete) a specific review by ID.","parameters":[{"name":"reviewId","description":"Unique identifier of the review to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","administrator"],"name":"erase","authorizationRole":"customer"},{"specification":"Deletes a review by its unique identifier from the shopping_mall_ai_reviews table. Deletion is a soft delete; the deleted_at field is set and the review is removed from public/user display but retained for audit and legal compliance. Only the review's author (customer) or administrators may delete a review, and only within policy windows (e.g., before moderation lock or after-service window expires). Attempts to delete a locked, moderated, or expired review will result in errors.","path":"/shoppingMallAi/administrator/reviews/{reviewId}","method":"delete","description":"Soft-deletes a review by setting deleted_at in the shopping_mall_ai_reviews table. The operation hides the review from public and user-facing endpoints but retains all data for compliance, audit, or recovery. Only the review's author or administrators may perform this operation and only if the review is still eligible for deletion. Errors occur if deletion is locked or unauthorized.","summary":"Delete (soft delete) a specific review by ID.","parameters":[{"name":"reviewId","description":"Unique identifier of the review to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["customer","administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Retrieves history of all snapshots (edits, deletions) for a review, supporting audit, rollback, and legal traceability. The list can be filtered and paginated; returned records show the evolving content, rating, author, action type, and timestamps. Used by administrators, the review author, or (partially) legal authorities for compliance review.","path":"/shoppingMallAi/customer/reviews/{reviewId}/snapshots","method":"patch","description":"Fetches the immutable history of all past versions (snapshots) of a given review. Each snapshot details the action (created, edited, deleted, restored, moderated), the actor and timestamp, and all review state fields at that moment. Permissions are enforced so only review owner, administrators, or compliance users can access the full trace. Errors for non-existent, deleted, or unauthorized reviews.","summary":"List all snapshots (edit/delete history) for a review.","parameters":[{"name":"reviewId","description":"Unique identifier of the target review.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pagination, filtering, and access context for review snapshots history request.","typeName":"IShoppingMallAiReviewSnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical snapshots for the specified review.","typeName":"IPageIShoppingMallAiReviewSnapshot"},"authorizationRoles":["customer","administrator"],"name":"listSnapshots","authorizationRole":"customer"},{"specification":"Retrieves history of all snapshots (edits, deletions) for a review, supporting audit, rollback, and legal traceability. The list can be filtered and paginated; returned records show the evolving content, rating, author, action type, and timestamps. Used by administrators, the review author, or (partially) legal authorities for compliance review.","path":"/shoppingMallAi/administrator/reviews/{reviewId}/snapshots","method":"patch","description":"Fetches the immutable history of all past versions (snapshots) of a given review. Each snapshot details the action (created, edited, deleted, restored, moderated), the actor and timestamp, and all review state fields at that moment. Permissions are enforced so only review owner, administrators, or compliance users can access the full trace. Errors for non-existent, deleted, or unauthorized reviews.","summary":"List all snapshots (edit/delete history) for a review.","parameters":[{"name":"reviewId","description":"Unique identifier of the target review.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pagination, filtering, and access context for review snapshots history request.","typeName":"IShoppingMallAiReviewSnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical snapshots for the specified review.","typeName":"IPageIShoppingMallAiReviewSnapshot"},"authorizationRoles":["customer","administrator"],"name":"listSnapshots","authorizationRole":"administrator"},{"specification":"Retrieves details of a specific snapshot/edited version for a review. Returns the snapshot state, actor, snapshot action (e.g. edited, deleted, restored), and all review content at the time. Only the review author and administrators may access this information for audit, compliance, or personal review. Prime use cases include dispute resolution, legal support, and rollback options.","path":"/shoppingMallAi/customer/reviews/{reviewId}/snapshots/{snapshotId}","method":"get","description":"Returns the details of a specific historical snapshot for a single review, including all previously snapshotted values (title, body, rating, visibility, and actor details). Validates both the owning review and the snapshot existence. Access is strictly read-only, with audit logging.","summary":"Retrieve a specific review snapshot (historical edit version).","parameters":[{"name":"reviewId","description":"Unique identifier for the target review.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"Unique identifier for the specific snapshot to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested review snapshot, reflecting the review state at the action's time.","typeName":"IShoppingMallAiReviewSnapshot"},"authorizationRoles":["customer","administrator"],"name":"atSnapshot","authorizationRole":"customer"},{"specification":"Retrieves details of a specific snapshot/edited version for a review. Returns the snapshot state, actor, snapshot action (e.g. edited, deleted, restored), and all review content at the time. Only the review author and administrators may access this information for audit, compliance, or personal review. Prime use cases include dispute resolution, legal support, and rollback options.","path":"/shoppingMallAi/administrator/reviews/{reviewId}/snapshots/{snapshotId}","method":"get","description":"Returns the details of a specific historical snapshot for a single review, including all previously snapshotted values (title, body, rating, visibility, and actor details). Validates both the owning review and the snapshot existence. Access is strictly read-only, with audit logging.","summary":"Retrieve a specific review snapshot (historical edit version).","parameters":[{"name":"reviewId","description":"Unique identifier for the target review.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"Unique identifier for the specific snapshot to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested review snapshot, reflecting the review state at the action's time.","typeName":"IShoppingMallAiReviewSnapshot"},"authorizationRoles":["customer","administrator"],"name":"atSnapshot","authorizationRole":"administrator"},{"specification":"Retrieve a paginated list of inquiries, allowing filtering by product, order, author role (customer/seller), status, date range, and visibility. The operation provides summary access to the shopping_mall_ai_inquiries table, supporting customer service, seller/support dashboards, and administrative review. Filtering supports all documented business rules (e.g., only accessible inquiries per user role). Includes paging, role-driven field redaction, and supports audit needs.","path":"/shoppingMallAi/customer/inquiries","method":"patch","description":"Fetches a paginated, filtered list of inquiries. Administrators, sellers, and customers see inquiries per their role: customers see their own, sellers see about their products, admins see all. Search criteria include product ID, order ID, author, status, and evidence presence. Paginated, sortable, designed for efficient workflow and operational dashboards.","summary":"Search and retrieve paginated list of inquiries (role-based).","parameters":[],"requestBody":{"description":"Inquiry filtering and pagination input: by product/order, author details, status, evidence present, visibility, and date range.","typeName":"IShoppingMallAiInquiry.IRequest"},"responseBody":{"description":"Paginated, filtered list of inquiries as per criteria, field redacted as per user role.","typeName":"IPageIShoppingMallAiInquiry.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"customer"},{"specification":"Retrieve a paginated list of inquiries, allowing filtering by product, order, author role (customer/seller), status, date range, and visibility. The operation provides summary access to the shopping_mall_ai_inquiries table, supporting customer service, seller/support dashboards, and administrative review. Filtering supports all documented business rules (e.g., only accessible inquiries per user role). Includes paging, role-driven field redaction, and supports audit needs.","path":"/shoppingMallAi/seller/inquiries","method":"patch","description":"Fetches a paginated, filtered list of inquiries. Administrators, sellers, and customers see inquiries per their role: customers see their own, sellers see about their products, admins see all. Search criteria include product ID, order ID, author, status, and evidence presence. Paginated, sortable, designed for efficient workflow and operational dashboards.","summary":"Search and retrieve paginated list of inquiries (role-based).","parameters":[],"requestBody":{"description":"Inquiry filtering and pagination input: by product/order, author details, status, evidence present, visibility, and date range.","typeName":"IShoppingMallAiInquiry.IRequest"},"responseBody":{"description":"Paginated, filtered list of inquiries as per criteria, field redacted as per user role.","typeName":"IPageIShoppingMallAiInquiry.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"seller"},{"specification":"Retrieve a paginated list of inquiries, allowing filtering by product, order, author role (customer/seller), status, date range, and visibility. The operation provides summary access to the shopping_mall_ai_inquiries table, supporting customer service, seller/support dashboards, and administrative review. Filtering supports all documented business rules (e.g., only accessible inquiries per user role). Includes paging, role-driven field redaction, and supports audit needs.","path":"/shoppingMallAi/administrator/inquiries","method":"patch","description":"Fetches a paginated, filtered list of inquiries. Administrators, sellers, and customers see inquiries per their role: customers see their own, sellers see about their products, admins see all. Search criteria include product ID, order ID, author, status, and evidence presence. Paginated, sortable, designed for efficient workflow and operational dashboards.","summary":"Search and retrieve paginated list of inquiries (role-based).","parameters":[],"requestBody":{"description":"Inquiry filtering and pagination input: by product/order, author details, status, evidence present, visibility, and date range.","typeName":"IShoppingMallAiInquiry.IRequest"},"responseBody":{"description":"Paginated, filtered list of inquiries as per criteria, field redacted as per user role.","typeName":"IPageIShoppingMallAiInquiry.ISummary"},"authorizationRoles":["customer","seller","administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieves full details of a single inquiry by its unique identifier. Returns author (customer/seller), target product, order, subject, body, status, evidence, and visibility. Permissions are enforced strictly: customers see their own inquiries, sellers see inquiries to their products or questions addressed to them, administrators see all. Designed for customer support, dispute resolution, and audit.","path":"/shoppingMallAi/customer/inquiries/{inquiryId}","method":"get","description":"Get full details of a specific inquiry by ID. Returns all available fields and relations. Access checks confirm the requester's authority: customers can only see their own, sellers view their inquiries about their goods or business, and admins have unrestricted access. Unauthorized, deleted, or non-existent records result in access denial or error.","summary":"Retrieve a single inquiry by ID (with permissions).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the selected inquiry, subject to permission masking.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"customer"},{"specification":"Retrieves full details of a single inquiry by its unique identifier. Returns author (customer/seller), target product, order, subject, body, status, evidence, and visibility. Permissions are enforced strictly: customers see their own inquiries, sellers see inquiries to their products or questions addressed to them, administrators see all. Designed for customer support, dispute resolution, and audit.","path":"/shoppingMallAi/seller/inquiries/{inquiryId}","method":"get","description":"Get full details of a specific inquiry by ID. Returns all available fields and relations. Access checks confirm the requester's authority: customers can only see their own, sellers view their inquiries about their goods or business, and admins have unrestricted access. Unauthorized, deleted, or non-existent records result in access denial or error.","summary":"Retrieve a single inquiry by ID (with permissions).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the selected inquiry, subject to permission masking.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"seller"},{"specification":"Retrieves full details of a single inquiry by its unique identifier. Returns author (customer/seller), target product, order, subject, body, status, evidence, and visibility. Permissions are enforced strictly: customers see their own inquiries, sellers see inquiries to their products or questions addressed to them, administrators see all. Designed for customer support, dispute resolution, and audit.","path":"/shoppingMallAi/administrator/inquiries/{inquiryId}","method":"get","description":"Get full details of a specific inquiry by ID. Returns all available fields and relations. Access checks confirm the requester's authority: customers can only see their own, sellers view their inquiries about their goods or business, and admins have unrestricted access. Unauthorized, deleted, or non-existent records result in access denial or error.","summary":"Retrieve a single inquiry by ID (with permissions).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the selected inquiry, subject to permission masking.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller","administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Creates a new inquiry (question, ticket, complaint, etc) from a customer or seller. The request must provide target product/order if applicable, subject, body, required author role, and any evidence flags. The system enforces field validation, anti-abuse controls, and assignment routing logic. After creation, the inquiry becomes available to customer service flows, dashboard displays, and moderation. Role and product/order eligibility must be met. Errors result from unauthorized submission, business rule violations, or missing required fields.","path":"/shoppingMallAi/customer/inquiries","method":"post","description":"Submit a new inquiry (product, order, or platform). Validates role eligibility (customer or seller), product or order linkage if present, required fields (subject, body), and optional evidence. Determines default visibility and status. After creation, enters open support queue for customer service, seller, or admin attention. Returns error for missing required fields or violations of inquiry/posting policy.","summary":"Create a new inquiry (customer support, seller, or admin flow).","parameters":[],"requestBody":{"description":"Fields needed to create a new inquiry: author role and contact, target product/order, subject, body, status, evidence flag, plus required authorization.","typeName":"IShoppingMallAiInquiry.ICreate"},"responseBody":{"description":"The newly created inquiry, including IDs, content, and state.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller"],"name":"create","authorizationRole":"customer"},{"specification":"Creates a new inquiry (question, ticket, complaint, etc) from a customer or seller. The request must provide target product/order if applicable, subject, body, required author role, and any evidence flags. The system enforces field validation, anti-abuse controls, and assignment routing logic. After creation, the inquiry becomes available to customer service flows, dashboard displays, and moderation. Role and product/order eligibility must be met. Errors result from unauthorized submission, business rule violations, or missing required fields.","path":"/shoppingMallAi/seller/inquiries","method":"post","description":"Submit a new inquiry (product, order, or platform). Validates role eligibility (customer or seller), product or order linkage if present, required fields (subject, body), and optional evidence. Determines default visibility and status. After creation, enters open support queue for customer service, seller, or admin attention. Returns error for missing required fields or violations of inquiry/posting policy.","summary":"Create a new inquiry (customer support, seller, or admin flow).","parameters":[],"requestBody":{"description":"Fields needed to create a new inquiry: author role and contact, target product/order, subject, body, status, evidence flag, plus required authorization.","typeName":"IShoppingMallAiInquiry.ICreate"},"responseBody":{"description":"The newly created inquiry, including IDs, content, and state.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller"],"name":"create","authorizationRole":"seller"},{"specification":"Updates an existing inquiry, identified by inquiryId, in shopping_mall_ai_inquiries. This is permitted only to the original author (customer or seller) within allowed time and moderation windows; administrators can override or moderate as needed. Updateable fields include subject, body, status, and evidence. All changes create audit/snapshot logs. Unauthorized attempts, updates after moderation lock, or invalid data cause errors. The operation is critical for customer support workflows, dispute resolution, and audit compliance.","path":"/shoppingMallAi/customer/inquiries/{inquiryId}","method":"put","description":"Edit, supplement, or moderate an inquiry by inquiryId. Customer or seller may update their own inquiries if within allowed period and status; admin can override for moderation or support. All field updates are logged via snapshot for compliance. The system validates fields and business/policy constraints. Fails if ineligible, locked, or unauthorized.","summary":"Edit or moderate an inquiry (with audit snapshot/log).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating an inquiry: subject, body, status, evidence flag. Varies by author role and policy.","typeName":"IShoppingMallAiInquiry.IUpdate"},"responseBody":{"description":"Updated inquiry object reflecting all changes and current state.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"customer"},{"specification":"Updates an existing inquiry, identified by inquiryId, in shopping_mall_ai_inquiries. This is permitted only to the original author (customer or seller) within allowed time and moderation windows; administrators can override or moderate as needed. Updateable fields include subject, body, status, and evidence. All changes create audit/snapshot logs. Unauthorized attempts, updates after moderation lock, or invalid data cause errors. The operation is critical for customer support workflows, dispute resolution, and audit compliance.","path":"/shoppingMallAi/seller/inquiries/{inquiryId}","method":"put","description":"Edit, supplement, or moderate an inquiry by inquiryId. Customer or seller may update their own inquiries if within allowed period and status; admin can override for moderation or support. All field updates are logged via snapshot for compliance. The system validates fields and business/policy constraints. Fails if ineligible, locked, or unauthorized.","summary":"Edit or moderate an inquiry (with audit snapshot/log).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating an inquiry: subject, body, status, evidence flag. Varies by author role and policy.","typeName":"IShoppingMallAiInquiry.IUpdate"},"responseBody":{"description":"Updated inquiry object reflecting all changes and current state.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"seller"},{"specification":"Updates an existing inquiry, identified by inquiryId, in shopping_mall_ai_inquiries. This is permitted only to the original author (customer or seller) within allowed time and moderation windows; administrators can override or moderate as needed. Updateable fields include subject, body, status, and evidence. All changes create audit/snapshot logs. Unauthorized attempts, updates after moderation lock, or invalid data cause errors. The operation is critical for customer support workflows, dispute resolution, and audit compliance.","path":"/shoppingMallAi/administrator/inquiries/{inquiryId}","method":"put","description":"Edit, supplement, or moderate an inquiry by inquiryId. Customer or seller may update their own inquiries if within allowed period and status; admin can override for moderation or support. All field updates are logged via snapshot for compliance. The system validates fields and business/policy constraints. Fails if ineligible, locked, or unauthorized.","summary":"Edit or moderate an inquiry (with audit snapshot/log).","parameters":[{"name":"inquiryId","description":"Unique identifier of the inquiry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating an inquiry: subject, body, status, evidence flag. Varies by author role and policy.","typeName":"IShoppingMallAiInquiry.IUpdate"},"responseBody":{"description":"Updated inquiry object reflecting all changes and current state.","typeName":"IShoppingMallAiInquiry"},"authorizationRoles":["customer","seller","administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"This operation deletes an inquiry by its unique system identifier. The operation interacts with the 'shopping_mall_ai_inquiries' table in the Prisma schema, ensuring that the inquiry record is either logically (soft) deleted by setting its 'deleted_at' field or physically removed, depending on business logic and compliance requirements. The deletion must also consider any relationships with snapshots, moderation logs, comments, and evidence file links, ensuring referential integrity and auditability. Soft deletion preserves the record for future audit and compliance, preventing permanent data loss unless formally purged per retention policy.","path":"/shoppingMallAi/customer/inquiries/{inquiryId}","method":"delete","description":"Delete a specific inquiry identified by its system-generated unique ID. This operation marks the inquiry as deleted by setting the 'deleted_at' timestamp in the 'shopping_mall_ai_inquiries' table, supporting auditability and complaint processes. If the inquiry is referenced by moderation logs, comments, or business evidence, those relationships are preserved for compliance review, and the inquiry is not physically deleted. Only actors with sufficient permission, such as the author or an administrator, can perform the delete. Attempts to delete already-deleted records will result in an error. Business errors (e.g., insufficient permissions, dependency violations) are handled with precise feedback.\n\nSecurity is enforced by checking the role and ownership of the requester. Audit events for the deletion are recorded, maintaining the full lifecycle history of the inquiry. Deletion does not break parent-child comment links or evidence file links, and related snapshots are preserved for legal audit. Only administrators and the author (if within the allowed window) are permitted to delete. If the inquiry has pending moderation, the operation may be blocked until resolution.","summary":"Delete an inquiry by its unique system identifier ('shopping_mall_ai_inquiries').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller","customer"],"name":"eraseInquiry","authorizationRole":"customer"},{"specification":"This operation deletes an inquiry by its unique system identifier. The operation interacts with the 'shopping_mall_ai_inquiries' table in the Prisma schema, ensuring that the inquiry record is either logically (soft) deleted by setting its 'deleted_at' field or physically removed, depending on business logic and compliance requirements. The deletion must also consider any relationships with snapshots, moderation logs, comments, and evidence file links, ensuring referential integrity and auditability. Soft deletion preserves the record for future audit and compliance, preventing permanent data loss unless formally purged per retention policy.","path":"/shoppingMallAi/administrator/inquiries/{inquiryId}","method":"delete","description":"Delete a specific inquiry identified by its system-generated unique ID. This operation marks the inquiry as deleted by setting the 'deleted_at' timestamp in the 'shopping_mall_ai_inquiries' table, supporting auditability and complaint processes. If the inquiry is referenced by moderation logs, comments, or business evidence, those relationships are preserved for compliance review, and the inquiry is not physically deleted. Only actors with sufficient permission, such as the author or an administrator, can perform the delete. Attempts to delete already-deleted records will result in an error. Business errors (e.g., insufficient permissions, dependency violations) are handled with precise feedback.\n\nSecurity is enforced by checking the role and ownership of the requester. Audit events for the deletion are recorded, maintaining the full lifecycle history of the inquiry. Deletion does not break parent-child comment links or evidence file links, and related snapshots are preserved for legal audit. Only administrators and the author (if within the allowed window) are permitted to delete. If the inquiry has pending moderation, the operation may be blocked until resolution.","summary":"Delete an inquiry by its unique system identifier ('shopping_mall_ai_inquiries').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller","customer"],"name":"eraseInquiry","authorizationRole":"administrator"},{"specification":"This operation deletes an inquiry by its unique system identifier. The operation interacts with the 'shopping_mall_ai_inquiries' table in the Prisma schema, ensuring that the inquiry record is either logically (soft) deleted by setting its 'deleted_at' field or physically removed, depending on business logic and compliance requirements. The deletion must also consider any relationships with snapshots, moderation logs, comments, and evidence file links, ensuring referential integrity and auditability. Soft deletion preserves the record for future audit and compliance, preventing permanent data loss unless formally purged per retention policy.","path":"/shoppingMallAi/seller/inquiries/{inquiryId}","method":"delete","description":"Delete a specific inquiry identified by its system-generated unique ID. This operation marks the inquiry as deleted by setting the 'deleted_at' timestamp in the 'shopping_mall_ai_inquiries' table, supporting auditability and complaint processes. If the inquiry is referenced by moderation logs, comments, or business evidence, those relationships are preserved for compliance review, and the inquiry is not physically deleted. Only actors with sufficient permission, such as the author or an administrator, can perform the delete. Attempts to delete already-deleted records will result in an error. Business errors (e.g., insufficient permissions, dependency violations) are handled with precise feedback.\n\nSecurity is enforced by checking the role and ownership of the requester. Audit events for the deletion are recorded, maintaining the full lifecycle history of the inquiry. Deletion does not break parent-child comment links or evidence file links, and related snapshots are preserved for legal audit. Only administrators and the author (if within the allowed window) are permitted to delete. If the inquiry has pending moderation, the operation may be blocked until resolution.","summary":"Delete an inquiry by its unique system identifier ('shopping_mall_ai_inquiries').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller","customer"],"name":"eraseInquiry","authorizationRole":"seller"},{"specification":"This operation lists (searches) historical snapshots for a given inquiry, providing a paginated view of all edits, moderation actions, or deletions associated with the inquiry. The operation targets the 'shopping_mall_ai_inquiry_snapshots' table, supporting audit, legal defense, and compliance rollback workflows. Filtering, sorting, and pagination are supported for audit and administrative workflows.","path":"/shoppingMallAi/administrator/inquiries/{inquiryId}/snapshots","method":"patch","description":"Retrieve a paginated, filterable list of inquiry snapshots for a given inquiry. Each snapshot in 'shopping_mall_ai_inquiry_snapshots' contains the historical state of the inquiry at each significant event (creation, edit, moderation, deletion, or restoration). This operation is essential for legal defense, moderation, and compliance, as it ensures non-repudiation and enables detailed rollback or evidence tracking. The request body allows for advanced filtering by snapshot action, actor, or timestamp, as well as pagination and sorting by creation date. Access is restricted to the inquiry author, moderators, and administrators. Attempts to access snapshots for non-existent or unpermitted inquiries are denied with explicit errors.","summary":"List all historical inquiry snapshots for a specific inquiry, with filtering and pagination ('shopping_mall_ai_inquiry_snapshots').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry whose snapshots are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination criteria for searching inquiry snapshots (e.g., action type, actor, timestamp range).","typeName":"IShoppingMallAiInquirySnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical snapshot records for the given inquiry.","typeName":"IPageIShoppingMallAiInquirySnapshot"},"authorizationRoles":["administrator","customer","seller"],"name":"searchInquirySnapshots","authorizationRole":"administrator"},{"specification":"This operation lists (searches) historical snapshots for a given inquiry, providing a paginated view of all edits, moderation actions, or deletions associated with the inquiry. The operation targets the 'shopping_mall_ai_inquiry_snapshots' table, supporting audit, legal defense, and compliance rollback workflows. Filtering, sorting, and pagination are supported for audit and administrative workflows.","path":"/shoppingMallAi/customer/inquiries/{inquiryId}/snapshots","method":"patch","description":"Retrieve a paginated, filterable list of inquiry snapshots for a given inquiry. Each snapshot in 'shopping_mall_ai_inquiry_snapshots' contains the historical state of the inquiry at each significant event (creation, edit, moderation, deletion, or restoration). This operation is essential for legal defense, moderation, and compliance, as it ensures non-repudiation and enables detailed rollback or evidence tracking. The request body allows for advanced filtering by snapshot action, actor, or timestamp, as well as pagination and sorting by creation date. Access is restricted to the inquiry author, moderators, and administrators. Attempts to access snapshots for non-existent or unpermitted inquiries are denied with explicit errors.","summary":"List all historical inquiry snapshots for a specific inquiry, with filtering and pagination ('shopping_mall_ai_inquiry_snapshots').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry whose snapshots are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination criteria for searching inquiry snapshots (e.g., action type, actor, timestamp range).","typeName":"IShoppingMallAiInquirySnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical snapshot records for the given inquiry.","typeName":"IPageIShoppingMallAiInquirySnapshot"},"authorizationRoles":["administrator","customer","seller"],"name":"searchInquirySnapshots","authorizationRole":"customer"},{"specification":"This operation lists (searches) historical snapshots for a given inquiry, providing a paginated view of all edits, moderation actions, or deletions associated with the inquiry. The operation targets the 'shopping_mall_ai_inquiry_snapshots' table, supporting audit, legal defense, and compliance rollback workflows. Filtering, sorting, and pagination are supported for audit and administrative workflows.","path":"/shoppingMallAi/seller/inquiries/{inquiryId}/snapshots","method":"patch","description":"Retrieve a paginated, filterable list of inquiry snapshots for a given inquiry. Each snapshot in 'shopping_mall_ai_inquiry_snapshots' contains the historical state of the inquiry at each significant event (creation, edit, moderation, deletion, or restoration). This operation is essential for legal defense, moderation, and compliance, as it ensures non-repudiation and enables detailed rollback or evidence tracking. The request body allows for advanced filtering by snapshot action, actor, or timestamp, as well as pagination and sorting by creation date. Access is restricted to the inquiry author, moderators, and administrators. Attempts to access snapshots for non-existent or unpermitted inquiries are denied with explicit errors.","summary":"List all historical inquiry snapshots for a specific inquiry, with filtering and pagination ('shopping_mall_ai_inquiry_snapshots').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry whose snapshots are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination criteria for searching inquiry snapshots (e.g., action type, actor, timestamp range).","typeName":"IShoppingMallAiInquirySnapshot.IRequest"},"responseBody":{"description":"Paginated list of historical snapshot records for the given inquiry.","typeName":"IPageIShoppingMallAiInquirySnapshot"},"authorizationRoles":["administrator","customer","seller"],"name":"searchInquirySnapshots","authorizationRole":"seller"},{"specification":"This operation retrieves a specific historical snapshot of an inquiry by both the inquiry and snapshot IDs, returning the detailed state at a point in history. It fetches the record from 'shopping_mall_ai_inquiry_snapshots', ensuring strict auditing and legal compliance. The operation preserves the full content, actor information, snapshot type, and event timestamp, all critical for regulatory purposes and dispute resolution.","path":"/shoppingMallAi/administrator/inquiries/{inquiryId}/snapshots/{snapshotId}","method":"get","description":"Retrieve a specific historical snapshot for an inquiry using its system-generated inquiry ID and the target snapshot's unique ID. The operation queries 'shopping_mall_ai_inquiry_snapshots', returning the immutable historical content, actors, and action metadata for legal/evidence review. Only the inquiry's author, moderators, or platform administrators are allowed access. If the snapshot or inquiry does not exist, or the requester lacks authority, a precise error is returned. All queries are logged for audit.","summary":"Get detailed data for a specific inquiry snapshot by IDs ('shopping_mall_ai_inquiry_snapshots').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry whose snapshot is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"The unique system identifier (UUID) of the inquiry snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed immutable record of the specific inquiry snapshot, including content, actor, and timestamp.","typeName":"IShoppingMallAiInquirySnapshot"},"authorizationRoles":["administrator","customer","seller"],"name":"atInquirySnapshot","authorizationRole":"administrator"},{"specification":"This operation retrieves a specific historical snapshot of an inquiry by both the inquiry and snapshot IDs, returning the detailed state at a point in history. It fetches the record from 'shopping_mall_ai_inquiry_snapshots', ensuring strict auditing and legal compliance. The operation preserves the full content, actor information, snapshot type, and event timestamp, all critical for regulatory purposes and dispute resolution.","path":"/shoppingMallAi/customer/inquiries/{inquiryId}/snapshots/{snapshotId}","method":"get","description":"Retrieve a specific historical snapshot for an inquiry using its system-generated inquiry ID and the target snapshot's unique ID. The operation queries 'shopping_mall_ai_inquiry_snapshots', returning the immutable historical content, actors, and action metadata for legal/evidence review. Only the inquiry's author, moderators, or platform administrators are allowed access. If the snapshot or inquiry does not exist, or the requester lacks authority, a precise error is returned. All queries are logged for audit.","summary":"Get detailed data for a specific inquiry snapshot by IDs ('shopping_mall_ai_inquiry_snapshots').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry whose snapshot is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"The unique system identifier (UUID) of the inquiry snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed immutable record of the specific inquiry snapshot, including content, actor, and timestamp.","typeName":"IShoppingMallAiInquirySnapshot"},"authorizationRoles":["administrator","customer","seller"],"name":"atInquirySnapshot","authorizationRole":"customer"},{"specification":"This operation retrieves a specific historical snapshot of an inquiry by both the inquiry and snapshot IDs, returning the detailed state at a point in history. It fetches the record from 'shopping_mall_ai_inquiry_snapshots', ensuring strict auditing and legal compliance. The operation preserves the full content, actor information, snapshot type, and event timestamp, all critical for regulatory purposes and dispute resolution.","path":"/shoppingMallAi/seller/inquiries/{inquiryId}/snapshots/{snapshotId}","method":"get","description":"Retrieve a specific historical snapshot for an inquiry using its system-generated inquiry ID and the target snapshot's unique ID. The operation queries 'shopping_mall_ai_inquiry_snapshots', returning the immutable historical content, actors, and action metadata for legal/evidence review. Only the inquiry's author, moderators, or platform administrators are allowed access. If the snapshot or inquiry does not exist, or the requester lacks authority, a precise error is returned. All queries are logged for audit.","summary":"Get detailed data for a specific inquiry snapshot by IDs ('shopping_mall_ai_inquiry_snapshots').","parameters":[{"name":"inquiryId","description":"The unique system identifier (UUID) of the inquiry whose snapshot is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"The unique system identifier (UUID) of the inquiry snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed immutable record of the specific inquiry snapshot, including content, actor, and timestamp.","typeName":"IShoppingMallAiInquirySnapshot"},"authorizationRoles":["administrator","customer","seller"],"name":"atInquirySnapshot","authorizationRole":"seller"},{"specification":"This endpoint allows advanced search and retrieval of comments and replies on reviews or inquiries, supporting filtering, sorting, and pagination. It targets 'shopping_mall_ai_comments' and is essential for moderation, dispute resolution, user communication, and evidentiary audit. The operation provides detailed metadata, including author, association, presence of evidence, and visibility status, conforming to the requirements for auditability and transparent moderation.","path":"/shoppingMallAi/administrator/comments","method":"patch","description":"Retrieve a filtered, paginated list of comments for reviews and inquiries using flexible search criteria. The request body specifies filtering by target entity, author, visibility, reported status, evidence presence, and time range, as well as support for sorting and page size. This operation queries 'shopping_mall_ai_comments', returning summary data optimized for moderation, evidence discovery, and user support workflows. Role-based permissions restrict access: platform administrators have system-wide visibility; sellers and customers can view their own or associated records. Attempts to access unauthorized or removed comments are denied.","summary":"Search, filter, and paginate comments/replies for reviews or inquiries ('shopping_mall_ai_comments').","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination criteria for searching comments and replies.","typeName":"IShoppingMallAiComment.IRequest"},"responseBody":{"description":"Paginated list of comment summary records for reviews/inquiries.","typeName":"IPageIShoppingMallAiComment.ISummary"},"authorizationRoles":["administrator","seller","customer"],"name":"searchComments","authorizationRole":"administrator"},{"specification":"This endpoint allows advanced search and retrieval of comments and replies on reviews or inquiries, supporting filtering, sorting, and pagination. It targets 'shopping_mall_ai_comments' and is essential for moderation, dispute resolution, user communication, and evidentiary audit. The operation provides detailed metadata, including author, association, presence of evidence, and visibility status, conforming to the requirements for auditability and transparent moderation.","path":"/shoppingMallAi/seller/comments","method":"patch","description":"Retrieve a filtered, paginated list of comments for reviews and inquiries using flexible search criteria. The request body specifies filtering by target entity, author, visibility, reported status, evidence presence, and time range, as well as support for sorting and page size. This operation queries 'shopping_mall_ai_comments', returning summary data optimized for moderation, evidence discovery, and user support workflows. Role-based permissions restrict access: platform administrators have system-wide visibility; sellers and customers can view their own or associated records. Attempts to access unauthorized or removed comments are denied.","summary":"Search, filter, and paginate comments/replies for reviews or inquiries ('shopping_mall_ai_comments').","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination criteria for searching comments and replies.","typeName":"IShoppingMallAiComment.IRequest"},"responseBody":{"description":"Paginated list of comment summary records for reviews/inquiries.","typeName":"IPageIShoppingMallAiComment.ISummary"},"authorizationRoles":["administrator","seller","customer"],"name":"searchComments","authorizationRole":"seller"},{"specification":"This endpoint allows advanced search and retrieval of comments and replies on reviews or inquiries, supporting filtering, sorting, and pagination. It targets 'shopping_mall_ai_comments' and is essential for moderation, dispute resolution, user communication, and evidentiary audit. The operation provides detailed metadata, including author, association, presence of evidence, and visibility status, conforming to the requirements for auditability and transparent moderation.","path":"/shoppingMallAi/customer/comments","method":"patch","description":"Retrieve a filtered, paginated list of comments for reviews and inquiries using flexible search criteria. The request body specifies filtering by target entity, author, visibility, reported status, evidence presence, and time range, as well as support for sorting and page size. This operation queries 'shopping_mall_ai_comments', returning summary data optimized for moderation, evidence discovery, and user support workflows. Role-based permissions restrict access: platform administrators have system-wide visibility; sellers and customers can view their own or associated records. Attempts to access unauthorized or removed comments are denied.","summary":"Search, filter, and paginate comments/replies for reviews or inquiries ('shopping_mall_ai_comments').","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination criteria for searching comments and replies.","typeName":"IShoppingMallAiComment.IRequest"},"responseBody":{"description":"Paginated list of comment summary records for reviews/inquiries.","typeName":"IPageIShoppingMallAiComment.ISummary"},"authorizationRoles":["administrator","seller","customer"],"name":"searchComments","authorizationRole":"customer"},{"specification":"This operation retrieves detailed data for a specific comment or reply, using its unique identifier. It reads from the 'shopping_mall_ai_comments' table and returns a full comment record, including body, author, visibility, evidence markers, parent/child relationships, and moderation status. This is essential for full transparency, legal/audit review, user support, and threaded discussion display.","path":"/shoppingMallAi/administrator/comments/{commentId}","method":"get","description":"Get a detailed comment/reply object by its unique ID. This operation queries 'shopping_mall_ai_comments', returning full content, author, parent/target linkage, evidence flag, visibility, timestamps, and related moderation info. Access is controlled: platform administrators can access any, sellers/customers only their own or associated records. All queries are logged for compliance. Access to deleted or hidden comments may be restricted unless the requester is an admin.","summary":"Retrieve specific comment or reply detail by ID ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment or reply to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Fully-detailed comment object, including body, author, target associations, evidence presence, and metadata.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"atComment","authorizationRole":"administrator"},{"specification":"This operation retrieves detailed data for a specific comment or reply, using its unique identifier. It reads from the 'shopping_mall_ai_comments' table and returns a full comment record, including body, author, visibility, evidence markers, parent/child relationships, and moderation status. This is essential for full transparency, legal/audit review, user support, and threaded discussion display.","path":"/shoppingMallAi/seller/comments/{commentId}","method":"get","description":"Get a detailed comment/reply object by its unique ID. This operation queries 'shopping_mall_ai_comments', returning full content, author, parent/target linkage, evidence flag, visibility, timestamps, and related moderation info. Access is controlled: platform administrators can access any, sellers/customers only their own or associated records. All queries are logged for compliance. Access to deleted or hidden comments may be restricted unless the requester is an admin.","summary":"Retrieve specific comment or reply detail by ID ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment or reply to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Fully-detailed comment object, including body, author, target associations, evidence presence, and metadata.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"atComment","authorizationRole":"seller"},{"specification":"This operation retrieves detailed data for a specific comment or reply, using its unique identifier. It reads from the 'shopping_mall_ai_comments' table and returns a full comment record, including body, author, visibility, evidence markers, parent/child relationships, and moderation status. This is essential for full transparency, legal/audit review, user support, and threaded discussion display.","path":"/shoppingMallAi/customer/comments/{commentId}","method":"get","description":"Get a detailed comment/reply object by its unique ID. This operation queries 'shopping_mall_ai_comments', returning full content, author, parent/target linkage, evidence flag, visibility, timestamps, and related moderation info. Access is controlled: platform administrators can access any, sellers/customers only their own or associated records. All queries are logged for compliance. Access to deleted or hidden comments may be restricted unless the requester is an admin.","summary":"Retrieve specific comment or reply detail by ID ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment or reply to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Fully-detailed comment object, including body, author, target associations, evidence presence, and metadata.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"atComment","authorizationRole":"customer"},{"specification":"This endpoint allows customers, sellers, or administrators to create new comments or replies on reviews and inquiries, supporting the addition of evidence files and threading. It inserts a record into 'shopping_mall_ai_comments', ensuring referential integrity to the associated review/inquiry, correct author linkage, and evidence/file associations. Input validation covers content rules, allowable parent/target relationship, option for evidence, and permission controls. On success, the comment is visible subject to moderation policy and audit logging.","path":"/shoppingMallAi/administrator/comments","method":"post","description":"Create a new comment or threaded reply on a review or inquiry. This operation accepts content, parent/target reference, author info, and evidence flags, validates against business and content policy, and persists the new comment into 'shopping_mall_ai_comments'. Input validation ensures policy, length, and attachment requirements are enforced. Authorization is role-based; users must have permission to comment on the content. Created comments are visible as allowed by moderation (may be hidden if compliance requires). All events are logged for compliance and audit.","summary":"Create new comment or reply on a review or inquiry ('shopping_mall_ai_comments').","parameters":[],"requestBody":{"description":"Information required to create a new comment or reply, including content, association, evidence indicators, and parent linkage.","typeName":"IShoppingMallAiComment.ICreate"},"responseBody":{"description":"The newly created comment object, including resulting status and moderation/reply info.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"createComment","authorizationRole":"administrator"},{"specification":"This endpoint allows customers, sellers, or administrators to create new comments or replies on reviews and inquiries, supporting the addition of evidence files and threading. It inserts a record into 'shopping_mall_ai_comments', ensuring referential integrity to the associated review/inquiry, correct author linkage, and evidence/file associations. Input validation covers content rules, allowable parent/target relationship, option for evidence, and permission controls. On success, the comment is visible subject to moderation policy and audit logging.","path":"/shoppingMallAi/seller/comments","method":"post","description":"Create a new comment or threaded reply on a review or inquiry. This operation accepts content, parent/target reference, author info, and evidence flags, validates against business and content policy, and persists the new comment into 'shopping_mall_ai_comments'. Input validation ensures policy, length, and attachment requirements are enforced. Authorization is role-based; users must have permission to comment on the content. Created comments are visible as allowed by moderation (may be hidden if compliance requires). All events are logged for compliance and audit.","summary":"Create new comment or reply on a review or inquiry ('shopping_mall_ai_comments').","parameters":[],"requestBody":{"description":"Information required to create a new comment or reply, including content, association, evidence indicators, and parent linkage.","typeName":"IShoppingMallAiComment.ICreate"},"responseBody":{"description":"The newly created comment object, including resulting status and moderation/reply info.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"createComment","authorizationRole":"seller"},{"specification":"This endpoint allows customers, sellers, or administrators to create new comments or replies on reviews and inquiries, supporting the addition of evidence files and threading. It inserts a record into 'shopping_mall_ai_comments', ensuring referential integrity to the associated review/inquiry, correct author linkage, and evidence/file associations. Input validation covers content rules, allowable parent/target relationship, option for evidence, and permission controls. On success, the comment is visible subject to moderation policy and audit logging.","path":"/shoppingMallAi/customer/comments","method":"post","description":"Create a new comment or threaded reply on a review or inquiry. This operation accepts content, parent/target reference, author info, and evidence flags, validates against business and content policy, and persists the new comment into 'shopping_mall_ai_comments'. Input validation ensures policy, length, and attachment requirements are enforced. Authorization is role-based; users must have permission to comment on the content. Created comments are visible as allowed by moderation (may be hidden if compliance requires). All events are logged for compliance and audit.","summary":"Create new comment or reply on a review or inquiry ('shopping_mall_ai_comments').","parameters":[],"requestBody":{"description":"Information required to create a new comment or reply, including content, association, evidence indicators, and parent linkage.","typeName":"IShoppingMallAiComment.ICreate"},"responseBody":{"description":"The newly created comment object, including resulting status and moderation/reply info.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"createComment","authorizationRole":"customer"},{"specification":"This operation updates an existing comment or reply by its unique ID in the 'shopping_mall_ai_comments' table. It permits modification of body text, evidence flags, or visibility status, subject to content validation and business policy (e.g., edit window, moderation restrictions). On success, the comment is updated, a snapshot is recorded, and audit trail is preserved. Only the author or an administrator can perform updates. Moderation state may affect editability. Validation ensures referential integrity, business logic, and snapshot history coverage.","path":"/shoppingMallAi/administrator/comments/{commentId}","method":"put","description":"Update the body, evidence status, or visibility of an existing comment or reply by its unique identifier. This operation enforces author or admin-only modification, validates all input for content restrictions, and updates the record in 'shopping_mall_ai_comments'. Every update event triggers creation of a snapshot for compliance and legal audit. Business rules may limit updates to a certain window, require moderation checks, or restrict certain roles. Attempts to edit non-editable comments are blocked and logged. Validation and audit are strictly enforced on update.","summary":"Update an existing comment or reply by its ID ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment or reply to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update input for the comment body, evidence presence, and visibility.","typeName":"IShoppingMallAiComment.IUpdate"},"responseBody":{"description":"The updated comment object after modification, reflecting all new data and moderation status.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"updateComment","authorizationRole":"administrator"},{"specification":"This operation updates an existing comment or reply by its unique ID in the 'shopping_mall_ai_comments' table. It permits modification of body text, evidence flags, or visibility status, subject to content validation and business policy (e.g., edit window, moderation restrictions). On success, the comment is updated, a snapshot is recorded, and audit trail is preserved. Only the author or an administrator can perform updates. Moderation state may affect editability. Validation ensures referential integrity, business logic, and snapshot history coverage.","path":"/shoppingMallAi/seller/comments/{commentId}","method":"put","description":"Update the body, evidence status, or visibility of an existing comment or reply by its unique identifier. This operation enforces author or admin-only modification, validates all input for content restrictions, and updates the record in 'shopping_mall_ai_comments'. Every update event triggers creation of a snapshot for compliance and legal audit. Business rules may limit updates to a certain window, require moderation checks, or restrict certain roles. Attempts to edit non-editable comments are blocked and logged. Validation and audit are strictly enforced on update.","summary":"Update an existing comment or reply by its ID ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment or reply to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update input for the comment body, evidence presence, and visibility.","typeName":"IShoppingMallAiComment.IUpdate"},"responseBody":{"description":"The updated comment object after modification, reflecting all new data and moderation status.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"updateComment","authorizationRole":"seller"},{"specification":"This operation updates an existing comment or reply by its unique ID in the 'shopping_mall_ai_comments' table. It permits modification of body text, evidence flags, or visibility status, subject to content validation and business policy (e.g., edit window, moderation restrictions). On success, the comment is updated, a snapshot is recorded, and audit trail is preserved. Only the author or an administrator can perform updates. Moderation state may affect editability. Validation ensures referential integrity, business logic, and snapshot history coverage.","path":"/shoppingMallAi/customer/comments/{commentId}","method":"put","description":"Update the body, evidence status, or visibility of an existing comment or reply by its unique identifier. This operation enforces author or admin-only modification, validates all input for content restrictions, and updates the record in 'shopping_mall_ai_comments'. Every update event triggers creation of a snapshot for compliance and legal audit. Business rules may limit updates to a certain window, require moderation checks, or restrict certain roles. Attempts to edit non-editable comments are blocked and logged. Validation and audit are strictly enforced on update.","summary":"Update an existing comment or reply by its ID ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment or reply to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update input for the comment body, evidence presence, and visibility.","typeName":"IShoppingMallAiComment.IUpdate"},"responseBody":{"description":"The updated comment object after modification, reflecting all new data and moderation status.","typeName":"IShoppingMallAiComment"},"authorizationRoles":["administrator","seller","customer"],"name":"updateComment","authorizationRole":"customer"},{"specification":"This operation deletes an existing comment or reply by its unique identifier, marking it as deleted in the 'shopping_mall_ai_comments' table (soft deletion). The operation preserves the immutable audit and snapshot history, ensuring compliance with moderation, content policy, and legal retention rules. Only the comment's author or an administrator can delete comments. Comments that have moderation infractions or are referenced as parent may be subject to further rules. All deletion events are logged in the system audit trail.","path":"/shoppingMallAi/administrator/comments/{commentId}","method":"delete","description":"Delete a comment or reply record by its unique ID. The record is soft deleted by setting the deleted_at field in 'shopping_mall_ai_comments', preserving all content and snapshot/audit trail for legal and compliance requirements. Only the comment's author or administrator can perform the deletion, and blocked by moderation or legal status. Deleting a parent comment with active replies may result in reply visibility restriction. Audit events record all deletion actions. Attempts to delete already deleted or nonexistent comments are refused with clear error codes and explanations.","summary":"Delete a comment or reply by ID, preserving audit and moderation records ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller","customer"],"name":"eraseComment","authorizationRole":"administrator"},{"specification":"This operation deletes an existing comment or reply by its unique identifier, marking it as deleted in the 'shopping_mall_ai_comments' table (soft deletion). The operation preserves the immutable audit and snapshot history, ensuring compliance with moderation, content policy, and legal retention rules. Only the comment's author or an administrator can delete comments. Comments that have moderation infractions or are referenced as parent may be subject to further rules. All deletion events are logged in the system audit trail.","path":"/shoppingMallAi/seller/comments/{commentId}","method":"delete","description":"Delete a comment or reply record by its unique ID. The record is soft deleted by setting the deleted_at field in 'shopping_mall_ai_comments', preserving all content and snapshot/audit trail for legal and compliance requirements. Only the comment's author or administrator can perform the deletion, and blocked by moderation or legal status. Deleting a parent comment with active replies may result in reply visibility restriction. Audit events record all deletion actions. Attempts to delete already deleted or nonexistent comments are refused with clear error codes and explanations.","summary":"Delete a comment or reply by ID, preserving audit and moderation records ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller","customer"],"name":"eraseComment","authorizationRole":"seller"},{"specification":"This operation deletes an existing comment or reply by its unique identifier, marking it as deleted in the 'shopping_mall_ai_comments' table (soft deletion). The operation preserves the immutable audit and snapshot history, ensuring compliance with moderation, content policy, and legal retention rules. Only the comment's author or an administrator can delete comments. Comments that have moderation infractions or are referenced as parent may be subject to further rules. All deletion events are logged in the system audit trail.","path":"/shoppingMallAi/customer/comments/{commentId}","method":"delete","description":"Delete a comment or reply record by its unique ID. The record is soft deleted by setting the deleted_at field in 'shopping_mall_ai_comments', preserving all content and snapshot/audit trail for legal and compliance requirements. Only the comment's author or administrator can perform the deletion, and blocked by moderation or legal status. Deleting a parent comment with active replies may result in reply visibility restriction. Audit events record all deletion actions. Attempts to delete already deleted or nonexistent comments are refused with clear error codes and explanations.","summary":"Delete a comment or reply by ID, preserving audit and moderation records ('shopping_mall_ai_comments').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator","seller","customer"],"name":"eraseComment","authorizationRole":"customer"},{"specification":"This operation lists all historical snapshots of a specific comment, enabling detailed audit, compliance review, moderation rollback, and evidence preservation. The endpoint supports filtering, sorting, and pagination, and leverages the 'shopping_mall_ai_comment_snapshots' table for immutable, time-stamped history. Only the author and platform administrators (and any assigned moderators) have access to the full change history. Each snapshot includes edit data, evidence status, actor information, and when applicable, moderator action. Filtering may include actor, action, timeframe, or status.","path":"/shoppingMallAi/administrator/comments/{commentId}/snapshots","method":"patch","description":"List/edit history (snapshots) of a comment or reply using advanced filters and paginated view. The endpoint returns all immutable historical versions (including creation, edits, deletions, moderation actions) of a comment, as recorded in 'shopping_mall_ai_comment_snapshots'. Details include actor, type of change, timestamps, content, and evidence, facilitating full legal traceability and rollback. The operation restricts access to the author (of the comment), administrators, and assigned moderators. Attempts to access unauthorized or irrelevant snapshots are rejected by explicit error codes.","summary":"Paginated search of comment/reply snapshot history ('shopping_mall_ai_comment_snapshots').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment for which to retrieve the snapshot history.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination settings for comment snapshot search.","typeName":"IShoppingMallAiCommentSnapshot.IRequest"},"responseBody":{"description":"Paginated listing of all historical snapshots for the target comment/reply.","typeName":"IPageIShoppingMallAiCommentSnapshot"},"authorizationRoles":["administrator","seller","customer"],"name":"searchCommentSnapshots","authorizationRole":"administrator"},{"specification":"This operation lists all historical snapshots of a specific comment, enabling detailed audit, compliance review, moderation rollback, and evidence preservation. The endpoint supports filtering, sorting, and pagination, and leverages the 'shopping_mall_ai_comment_snapshots' table for immutable, time-stamped history. Only the author and platform administrators (and any assigned moderators) have access to the full change history. Each snapshot includes edit data, evidence status, actor information, and when applicable, moderator action. Filtering may include actor, action, timeframe, or status.","path":"/shoppingMallAi/seller/comments/{commentId}/snapshots","method":"patch","description":"List/edit history (snapshots) of a comment or reply using advanced filters and paginated view. The endpoint returns all immutable historical versions (including creation, edits, deletions, moderation actions) of a comment, as recorded in 'shopping_mall_ai_comment_snapshots'. Details include actor, type of change, timestamps, content, and evidence, facilitating full legal traceability and rollback. The operation restricts access to the author (of the comment), administrators, and assigned moderators. Attempts to access unauthorized or irrelevant snapshots are rejected by explicit error codes.","summary":"Paginated search of comment/reply snapshot history ('shopping_mall_ai_comment_snapshots').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment for which to retrieve the snapshot history.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination settings for comment snapshot search.","typeName":"IShoppingMallAiCommentSnapshot.IRequest"},"responseBody":{"description":"Paginated listing of all historical snapshots for the target comment/reply.","typeName":"IPageIShoppingMallAiCommentSnapshot"},"authorizationRoles":["administrator","seller","customer"],"name":"searchCommentSnapshots","authorizationRole":"seller"},{"specification":"This operation lists all historical snapshots of a specific comment, enabling detailed audit, compliance review, moderation rollback, and evidence preservation. The endpoint supports filtering, sorting, and pagination, and leverages the 'shopping_mall_ai_comment_snapshots' table for immutable, time-stamped history. Only the author and platform administrators (and any assigned moderators) have access to the full change history. Each snapshot includes edit data, evidence status, actor information, and when applicable, moderator action. Filtering may include actor, action, timeframe, or status.","path":"/shoppingMallAi/customer/comments/{commentId}/snapshots","method":"patch","description":"List/edit history (snapshots) of a comment or reply using advanced filters and paginated view. The endpoint returns all immutable historical versions (including creation, edits, deletions, moderation actions) of a comment, as recorded in 'shopping_mall_ai_comment_snapshots'. Details include actor, type of change, timestamps, content, and evidence, facilitating full legal traceability and rollback. The operation restricts access to the author (of the comment), administrators, and assigned moderators. Attempts to access unauthorized or irrelevant snapshots are rejected by explicit error codes.","summary":"Paginated search of comment/reply snapshot history ('shopping_mall_ai_comment_snapshots').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment for which to retrieve the snapshot history.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination settings for comment snapshot search.","typeName":"IShoppingMallAiCommentSnapshot.IRequest"},"responseBody":{"description":"Paginated listing of all historical snapshots for the target comment/reply.","typeName":"IPageIShoppingMallAiCommentSnapshot"},"authorizationRoles":["administrator","seller","customer"],"name":"searchCommentSnapshots","authorizationRole":"customer"},{"specification":"This operation retrieves a single historical snapshot of a given comment by both comment ID and snapshot ID, ensuring full transparency for audit and legal processes. It accesses the 'shopping_mall_ai_comment_snapshots' table. Returned data includes the original body, actor, evidence presence, and timestamp at that change event. Strict permissions are enforced.","path":"/shoppingMallAi/administrator/comments/{commentId}/snapshots/{snapshotId}","method":"get","description":"Retrieve detailed immutable history for a single snapshot of a comment or reply, using both the parent comment ID and the unique snapshot ID. Returns full content, actor, evidence indicators, action type, and timestamps for precise audit trail. Suitable for dispute, rollback, or legal review. Permissions are restricted to the author, system administrators, and authorized moderators. If either ID is invalid or access is denied, a precise error is issued.","summary":"Get specific comment/reply snapshot by comment and snapshot IDs ('shopping_mall_ai_comment_snapshots').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment to which the snapshot belongs.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"The unique identifier (UUID) of the comment snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the specified comment/reply snapshot, including author, content, event type, and evidence markers.","typeName":"IShoppingMallAiCommentSnapshot"},"authorizationRoles":["administrator","seller","customer"],"name":"atCommentSnapshot","authorizationRole":"administrator"},{"specification":"This operation retrieves a single historical snapshot of a given comment by both comment ID and snapshot ID, ensuring full transparency for audit and legal processes. It accesses the 'shopping_mall_ai_comment_snapshots' table. Returned data includes the original body, actor, evidence presence, and timestamp at that change event. Strict permissions are enforced.","path":"/shoppingMallAi/seller/comments/{commentId}/snapshots/{snapshotId}","method":"get","description":"Retrieve detailed immutable history for a single snapshot of a comment or reply, using both the parent comment ID and the unique snapshot ID. Returns full content, actor, evidence indicators, action type, and timestamps for precise audit trail. Suitable for dispute, rollback, or legal review. Permissions are restricted to the author, system administrators, and authorized moderators. If either ID is invalid or access is denied, a precise error is issued.","summary":"Get specific comment/reply snapshot by comment and snapshot IDs ('shopping_mall_ai_comment_snapshots').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment to which the snapshot belongs.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"The unique identifier (UUID) of the comment snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the specified comment/reply snapshot, including author, content, event type, and evidence markers.","typeName":"IShoppingMallAiCommentSnapshot"},"authorizationRoles":["administrator","seller","customer"],"name":"atCommentSnapshot","authorizationRole":"seller"},{"specification":"This operation retrieves a single historical snapshot of a given comment by both comment ID and snapshot ID, ensuring full transparency for audit and legal processes. It accesses the 'shopping_mall_ai_comment_snapshots' table. Returned data includes the original body, actor, evidence presence, and timestamp at that change event. Strict permissions are enforced.","path":"/shoppingMallAi/customer/comments/{commentId}/snapshots/{snapshotId}","method":"get","description":"Retrieve detailed immutable history for a single snapshot of a comment or reply, using both the parent comment ID and the unique snapshot ID. Returns full content, actor, evidence indicators, action type, and timestamps for precise audit trail. Suitable for dispute, rollback, or legal review. Permissions are restricted to the author, system administrators, and authorized moderators. If either ID is invalid or access is denied, a precise error is issued.","summary":"Get specific comment/reply snapshot by comment and snapshot IDs ('shopping_mall_ai_comment_snapshots').","parameters":[{"name":"commentId","description":"The unique system identifier (UUID) of the comment to which the snapshot belongs.","schema":{"type":"string","format":"uuid"}},{"name":"snapshotId","description":"The unique identifier (UUID) of the comment snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed data for the specified comment/reply snapshot, including author, content, event type, and evidence markers.","typeName":"IShoppingMallAiCommentSnapshot"},"authorizationRoles":["administrator","seller","customer"],"name":"atCommentSnapshot","authorizationRole":"customer"},{"specification":"This operation provides a filtered/paginated list of moderation logs for reviews, inquiries, or comments. It queries the 'shopping_mall_ai_moderation_logs' table and supports advanced searching by entity type, actor, action, period, and result. Used for audit, compliance, and issue tracking. Each log includes actor (administrator), linked entity, action taken, rationale, user note, and timestamp. Filtering and sorting enable efficient review of moderation activity in line with business and compliance requirements. Access is restricted to administrators and permitted moderators.","path":"/shoppingMallAi/administrator/moderationLogs","method":"patch","description":"Search and filter moderation logs (actions, results, notes) for reviews, inquiries, or comments. Returns a list of moderation history records from 'shopping_mall_ai_moderation_logs', each containing actor/admin, target entity, moderation action, rationale, user-facing note, and precise timestamps. Filtering options include type of moderated entity, action, time range, actor administrator, and status. Only platform administrators or assigned moderators may access full logs. Attempts to access records outside permission scope will result in an explicit error.","summary":"Paginated, filtered search of moderation logs/history ('shopping_mall_ai_moderation_logs').","parameters":[],"requestBody":{"description":"Advanced search, filtering, and pagination criteria for moderation logs/history.","typeName":"IShoppingMallAiModerationLog.IRequest"},"responseBody":{"description":"Paginated list of moderation log records matching search criteria.","typeName":"IPageIShoppingMallAiModerationLog"},"authorizationRoles":["administrator"],"name":"searchModerationLogs","authorizationRole":"administrator"},{"specification":"This operation retrieves detailed data for a specific moderation log (action/event) by its unique system identifier. It queries 'shopping_mall_ai_moderation_logs', returning the full record with actor, linked entities (review/inquiry/comment), moderation action, rationale, user note, and timestamp. This endpoint is vital for legal defense, compliance, and evidence in dispute management. Strict access control ensures that only authorized administrators or compliance auditors may access moderation event details (never public).","path":"/shoppingMallAi/administrator/moderationLogs/{moderationLogId}","method":"get","description":"Retrieve a specific moderation log record by its unique ID. Returns data on the actor, moderated entity (review, inquiry, or comment), action type, rationale, user note, and timestamp. All events are logged and strictly access controlled. Attempts to access logs outside authorized scope or for nonexistent logs return explicit errors and are fully audited.","summary":"Get detail of a single moderation log by its unique ID ('shopping_mall_ai_moderation_logs').","parameters":[{"name":"moderationLogId","description":"The unique system identifier (UUID) of the moderation log to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed moderation log record, including actor, action, rationale, affected entity, notes, and full audit metadata.","typeName":"IShoppingMallAiModerationLog"},"authorizationRoles":["administrator"],"name":"atModerationLog","authorizationRole":"administrator"},{"specification":"Creates a new moderation log entry, primarily for administrative or compliance purposes. This operation is anchored in the shopping_mall_ai_moderation_logs table and is responsible for storing detailed moderation events, such as approvals, rejections, hides, sanctions, escalations, and resolutions. Each moderation log entails critical data: the moderator administrator, the moderated entity (could be a review, inquiry, or comment), the moderation action, business rationale, and optionally, notes to the user. This operation guarantees auditability and legal evidence tracking within the broader AI-powered e-commerce environment, as required by compliance and business process enforcement.","description":"Create a new moderation log entry to record an administrative or moderator action taken on a review, inquiry, or comment. The moderation log includes actor metadata, references to the moderated entity, the exact action performed, human-readable business justification, and a timestamp. This helps ensure compliance, evidence preservation, dispute resolution, and transparency for all content and community-related workflows. Security is critical: only users with administrator-level privileges may invoke this endpoint. The log entry will be accessible for legal audit purposes and can be used for root-cause or incident investigation. All references must match the actual entity being moderated, and the system enforces foreign key integrity for cross-entity mapping.","path":"/shoppingMallAi/administrator/moderationLogs","method":"post","parameters":[],"requestBody":{"description":"Moderation log creation payload as required by audit and compliance rules.","typeName":"IShoppingMallAiModerationLog.ICreate"},"responseBody":{"description":"The newly created moderation log record, providing evidence of a moderation event in the platform.","typeName":"IShoppingMallAiModerationLog"},"authorizationRoles":["administrator"],"summary":"Create new moderation log entry (shopping_mall_ai_moderation_logs)","name":"create","authorizationRole":"administrator"},{"specification":"Updates an existing moderation log entry. This operation is anchored in the shopping_mall_ai_moderation_logs table. Moderation logs track the full history of administrative or moderator interventions such as content approval, rejection, sanction imposition, escalation, or policy enforcement on reviews, inquiries, or comments. The operation allows updates for business reasons such as correcting a rationale, updating user communications, or amending moderation action results (without violating audit immutability rules—true previous state changes should result in new append-only records). Any correction is still carefully logged for compliance. This endpoint ensures traceability without violating business policy for audit sealing.","description":"Update fields on an existing moderation log entry. This capability is typically reserved for superadministrators or compliance officers to correct or annotate rationale, user notes, or minor metadata in response to legal or business requests. The moderation log entity includes full references to the affected review, inquiry, or comment, as well as moderator actor and the action taken. Any edit is subject to further audit and may result in additional immutable log entries if critical fields are changed (as required for tamper-evidence). All changes are validated for business integrity, and unauthorized updates are rejected.","path":"/shoppingMallAi/administrator/moderationLogs/{moderationLogId}","method":"put","parameters":[{"name":"moderationLogId","description":"Unique identifier (UUID) of the target moderation log entry.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the moderation log. Typically limited to rationale, user_note, or action comment fields.","typeName":"IShoppingMallAiModerationLog.IUpdate"},"responseBody":{"description":"The updated moderation log entry, with overwritten fields annotated for audit.","typeName":"IShoppingMallAiModerationLog"},"authorizationRoles":["administrator"],"summary":"Update moderation log entry (shopping_mall_ai_moderation_logs)","name":"update","authorizationRole":"administrator"},{"specification":"Deletes a moderation log entry by its unique identifier. The underlying table is shopping_mall_ai_moderation_logs. Moderation logs are ordinarily append-only for compliance, but in rare cases (such as legal erasure requests or audit correction), soft deletion might be allowed. This endpoint marks the moderation log as deleted, retaining its state for audit windows. Hard deletion is only performed under explicit compliance policy, ensuring auditability is preserved unless policy requires otherwise. Deletion can only be executed by platform administrators with sufficient privileges.","description":"Soft deletes a moderation log entry, marking it as removed in a legally-compliant manner. Only accessible to administrators with the highest privilege (such as compliance or legal roles), this endpoint is strictly logged and recorded for legal and dispute defensibility. The operation audits the deletion request and maintains a record of deletion reason and timestamp, ensuring a comprehensive compliance trail. Any attempt to delete a log entry by non-authorized roles is denied and logged as a potential policy violation attempt.","path":"/shoppingMallAi/administrator/moderationLogs/{moderationLogId}","method":"delete","parameters":[{"name":"moderationLogId","description":"Unique identifier (UUID) of the moderation log to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"summary":"Delete (soft) moderation log entry (shopping_mall_ai_moderation_logs)","name":"erase","authorizationRole":"administrator"},{"specification":"Retrieves a paginated and filtered list of all versions for a specific attachment. The shopping_mall_ai_attachment_versions table holds immutable version records for shopping_mall_ai_attachments, providing full chain-of-custody for audit, restoration, or forensic use. This endpoint supports advanced search by metadata, uploader, version number, and creation date. Use this to monitor changes, review previous versions for compliance, or select a backup for file restoration. Pagination and sorting are supported for handling large version histories.","description":"Fetches all historical versions of a particular attachment. Used for compliance, restoration workflows, or forensic review of content changes. Only users with authorized roles, such as administrators or permitted file owners, can access the version history. The response provides paged data, supporting advanced business queries for legal review or technical ops (including search on uploader, version, or diff comments). Each version entry records creation time, version number, and references to the main attachment. Sensitive files or legally-held evidence are further restricted by the underlying ACL. Edge cases (missing attachmentId, invalid permissions) are handled per compliance policy.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentVersions","method":"patch","parameters":[{"name":"attachmentId","description":"Unique identifier (UUID) of the attachment whose versions are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request parameters and filters for searching attachment versions (e.g., by creator, date, or diff comment).","typeName":"IShoppingMallAiAttachmentVersion.IRequest"},"responseBody":{"description":"Paginated list of all attachment version entities for the given attachment (may be filtered by query).","typeName":"IPageIShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"summary":"List/search attachment versions for an attachment (shopping_mall_ai_attachment_versions)","name":"search","authorizationRole":"administrator"},{"specification":"Gets a specific immutable version record of an attachment. This operation retrieves a single historical version by attachmentId and attachmentVersionId from shopping_mall_ai_attachment_versions, supporting file restoration, audit, or evidence workflows. Each version contains links to the original attachment, modifier, file URI, size, and differential comments. Used by admins, compliance officers, or original uploaders for evidence management.","description":"Retrieve the historical metadata and storage references for a specific version of an attachment. Includes full chain-of-custody details for legal and technical analysis, such as who modified it, when, version number, URI, and file size. Access may be limited based on domain permissions (administrator, uploader, or special ACL roles). The entity is used for restoring previous file states, auditing unauthorized changes, or presenting evidence in disputes. Only users with view permissions on this domain or entity may retrieve this resource.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentVersions/{attachmentVersionId}","method":"get","parameters":[{"name":"attachmentId","description":"Parent attachment unique identifier (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"attachmentVersionId","description":"Unique identifier (UUID) of the attachment version to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The requested attachment version record with all relevant metadata and storage info.","typeName":"IShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"summary":"Get a specific attachment version (shopping_mall_ai_attachment_versions)","name":"at","authorizationRole":"administrator"},{"specification":"Creates a new immutable version record for an existing attachment. This endpoint inserts into shopping_mall_ai_attachment_versions, which allows users (with required permissions) to upload a new version or revised metadata for a file. The version entry captures a new file URI, file size, creation info, diff comment, and retention/compliance flags. This operation preserves the history of file modifications for restoration, legal, and forensics purposes. Admins and permitted uploaders use this to maintain compliance with evidence/audit mandates.","description":"Upload or define a new version for an attachment, storing an immutable record of all associated file metadata—file URI, file size, version number, author, and diff comment. Every modification or replacement of a file must use this operation to ensure full evidence chain and compliance. Uploaded versions should be validated for size, type, and domain policies before acceptance. Version creation is restricted to permitted users, mainly administrators, file owners, or system-integrated API users with explicit ACL mapping. All successful entries are time-stamped, and subsequent retrieval is strictly governed by ACL policies for security.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentVersions","method":"post","parameters":[{"name":"attachmentId","description":"UUID identifier for the parent attachment this version belongs to.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for the new version including file URI, file size, author/modifier, version number, and comments. All fields must comply with evidence and compliance rules.","typeName":"IShoppingMallAiAttachmentVersion.ICreate"},"responseBody":{"description":"Created immutable version record for the attachment, as used for compliance or restoration.","typeName":"IShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"summary":"Create new version record for an attachment (shopping_mall_ai_attachment_versions)","name":"create","authorizationRole":"administrator"},{"specification":"Update a specific attachment version's non-immutable metadata (e.g., diff comment for audit or business note). In shopping_mall_ai_attachment_versions, files are never changed, but metadata such as comments may be updated for audit or compliance. This operation supports fixing documentation errors, annotating evidence, or legal interventions. Edits are carefully logged, and any override is tightly restricted to administrators for compliance and traceability.","description":"Update audit or business note fields—such as diff comments—for a recorded file version. This action does not alter the file content or versioned storage, ensuring chain-of-custody integrity. Changes are limited to allowable metadata, may trigger additional audit or compliance logging, and can only be performed by authorized administrators. Entity references, such as version number, author, and file URI, remain immutable. Updates to comments are traceable, with full actor and timestamp records for legal evidence. Requests failing compliance/business rules are rejected outright and audited.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentVersions/{attachmentVersionId}","method":"put","parameters":[{"name":"attachmentId","description":"UUID of the parent attachment.","schema":{"type":"string","format":"uuid"}},{"name":"attachmentVersionId","description":"UUID of the version to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields that may be updated in an attachment version e.g. comments for audit/evidence.","typeName":"IShoppingMallAiAttachmentVersion.IUpdate"},"responseBody":{"description":"Attachment version record with updated metadata as allowed by policy.","typeName":"IShoppingMallAiAttachmentVersion"},"authorizationRoles":["administrator"],"summary":"Update non-immutable metadata on attachment version (shopping_mall_ai_attachment_versions)","name":"update","authorizationRole":"administrator"},{"specification":"Deletes (soft deletes or marks removed) an immutable attachment version record. The operation is performed on shopping_mall_ai_attachment_versions and is typically reserved for compliance, evidentiary, or legal deletion procedures. True file erasure is only performed if allowed by retention and legal hold policies. Only accessible to strict administrator or compliance roles with actions fully logged for audit purposes.","description":"Deletes (marks as deleted) a specific attachment version. While file data is either retained for compliance or removed according to retention policy, this operation removes the logical pointer to the version within platform queries. Legally-sensitive or evidence files are only deleted if no legal hold is present. Deletion reasons and initiator info are fully logged for forensic and compliance review. Non-authorized attempts are blocked and escalated for compliance tracking.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentVersions/{attachmentVersionId}","method":"delete","parameters":[{"name":"attachmentId","description":"UUID of the parent attachment file.","schema":{"type":"string","format":"uuid"}},{"name":"attachmentVersionId","description":"UUID of the specific version to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"summary":"Delete (soft) an immutable attachment version (shopping_mall_ai_attachment_versions)","name":"erase","authorizationRole":"administrator"},{"specification":"Retrieves a paginated and filtered list of business-object links for a specific attachment. Each record references how the attachment is mapped to business domains (product, order, review, etc.), supporting audit and traceability. The underlying table is shopping_mall_ai_attachment_business_links. This operation is essential for evidence tracking, content management, and legal audit work, with support for advanced search and filtering.","description":"Fetches all domain mappings for a given attachment, allowing enterprise search and audit of which business records (e.g. product, order, evidence, etc.) a file is linked to. Each mapping clarifies usage context, reference object, and who created the association. This list supports forensic business queries, compliance reporting, or technical investigation. Access is tightly managed and subject to ACLs as files may be cross-linked among multiple sensitive business objects.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentBusinessLinks","method":"patch","parameters":[{"name":"attachmentId","description":"Unique identifier (UUID) of the attachment for which links are queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced filter, pagination, or business rule search for attachment links (e.g., by target domain, date, creator, etc.).","typeName":"IShoppingMallAiAttachmentBusinessLink.IRequest"},"responseBody":{"description":"Paginated list of all attachment-business-domain links for the file, including domain, targetId, and creation data.","typeName":"IPageIShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["administrator"],"summary":"List/search business links for an attachment (shopping_mall_ai_attachment_business_links)","name":"search","authorizationRole":"administrator"},{"specification":"Retrieve a specific business-object link for an attachment by link id. The operation is performed on a single record in shopping_mall_ai_attachment_business_links, including context such as domain type, target entity reference, and ACL chain. This enables forensic, compliance, or technical validation of why a file is attached to a business entity. Critical for evidence, legal, or business process review workflows.","description":"Fetches the business-object link (context mapping) for a particular attachment and target entity. This detailed response assists in validating evidence chains, reviewing forensic audit, or reconstructing content associations as part of a legal or compliance process. Only users with sufficient administrative or domain-specific ACL permissions may access this resource. Critical for restoring, reviewing, or defending file linkages in business records such as product, order, or review.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentBusinessLinks/{attachmentBusinessLinkId}","method":"get","parameters":[{"name":"attachmentId","description":"UUID identifier for the parent attachment.","schema":{"type":"string","format":"uuid"}},{"name":"attachmentBusinessLinkId","description":"UUID of the specific linkage record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Requested attachment-business link record including target business domain and entity id.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["administrator"],"summary":"Get a specific business link for attachment (shopping_mall_ai_attachment_business_links)","name":"at","authorizationRole":"administrator"},{"specification":"Creates a new attachment-business link mapping a file to a business object (e.g., product, order, evidence). This operation inserts a row into shopping_mall_ai_attachment_business_links. The entity is critical for evidence traceability, catalog management, or content governance. Each mapping records the attachment, business domain, target entity id, actor, and timestamp, enabling queryless lookup and audit enforcement. Only administrators or authorized file managers may create new mappings. All fields must be validated according to business logic and system integrity policies.","description":"Create a business-domain mapping (link) for a specific attachment, such as linking a file to a product, order, or legal evidence record. Each mapping is immutable, includes actor and timestamp information, and supports full traceability for audit or business process workflow. Creation is strictly limited to administrators, authorized file managers, or system-integrated API users with required ACLs. All successful links are visible in audits and can be rescinded by further business logic if necessary (e.g., evidence invalidation or business entity deletion). Validation covers the existence of both attachment and target business object, as well as compliance with retention and domain policies.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentBusinessLinks","method":"post","parameters":[{"name":"attachmentId","description":"UUID for the parent attachment to be linked to the business object.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Association data for the attachment to a business object, including domain, targetId, actor, and creation info.","typeName":"IShoppingMallAiAttachmentBusinessLink.ICreate"},"responseBody":{"description":"Created business link record recording attachment to target entity association for audit/evidence.","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["administrator"],"summary":"Create/record a business link for an attachment (shopping_mall_ai_attachment_business_links)","name":"create","authorizationRole":"administrator"},{"specification":"Updates an existing attachment-business link to correct or annotate metadata (e.g., for legal evidence, audit comment). This operation modifies shopping_mall_ai_attachment_business_links for fields such as user comment or internal annotation, but does not change the attachment or target IDs themselves, maintaining audit-integrity. File associations are always immutable in terms of business object, but extra metadata may support richer compliance and evidence justification. All updates are strictly permissioned and recorded for compliance.","description":"Update business-domain link metadata, such as adding audit notes or evidence comments to the link between a file and a business object. This action is limited to non-structural annotation and must never reassign the target business object for compliance. Only users with administrator/compliance permission for the attachment and business object domain may make updates. All changed records are time-stamped and may be further sealed for legal defense. All attempts at changing immutable references will be rejected and logged as policy violations.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentBusinessLinks/{attachmentBusinessLinkId}","method":"put","parameters":[{"name":"attachmentId","description":"UUID for the parent attachment.","schema":{"type":"string","format":"uuid"}},{"name":"attachmentBusinessLinkId","description":"UUID of the business-domain link to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Annotation fields to update in the attachment-business link (e.g. compliance comment or audit note).","typeName":"IShoppingMallAiAttachmentBusinessLink.IUpdate"},"responseBody":{"description":"Updated business link metadata for the attachment association (non-structural fields only).","typeName":"IShoppingMallAiAttachmentBusinessLink"},"authorizationRoles":["administrator"],"summary":"Update (annotate) business link for attachment (shopping_mall_ai_attachment_business_links)","name":"update","authorizationRole":"administrator"},{"specification":"This operation performs a hard deletion of an attachment-business link on the attachment subsystem. It is associated with the shopping_mall_ai_attachment_business_links table. The endpoint is used to remove the relationship between a file/attachment and a specific business entity (such as a product, order, review, etc.) when the link is no longer relevant. This operation does not soft-delete but removes the mapping permanently, in line with compliance or business policy for referencing attachments.","path":"/shoppingMallAi/administrator/attachments/{attachmentId}/attachmentBusinessLinks/{attachmentBusinessLinkId}","method":"delete","description":"Delete an attachment-business link. This will permanently remove the relationship between a specific attachment and a business object (e.g., product, order, review) from the shopping_mall_ai_attachment_business_links table. This operation should only be performed by an admin or the original uploader with sufficient permissions. Business logic ensures that the referenced attachment and business link exist, and that deleting this mapping is allowed by compliance rules. If the link is crucial for legal or audit reasons, the system should block the operation and return an error.\n\nPermission to invoke this endpoint should be strictly enforced, with audit trails created for every operation for compliance traceability. Related API operations include linking an attachment to a business object, or querying all links for an attachment. Errors include invalid or nonexistent IDs, or attempts to remove links required by policy.","summary":"Delete an attachment's business link (shopping_mall_ai_attachment_business_links) permanently.","parameters":[{"name":"attachmentId","description":"Unique identifier of the attachment whose business link is to be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"attachmentBusinessLinkId","description":"Unique identifier of the attachment-business link to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"eraseBusinessLink","authorizationRole":"administrator"},{"specification":"This operation allows advanced and filtered search over the AI recommendation signal events. It corresponds to the shopping_mall_ai_ai_reco_signals table. This search API enables administrators and system operators to retrieve detailed activity for AI-powered personalization and recommendation actions, filtered by customer, product, signal_type, feedback_type, or session_id. The operation supports paginated results, sorting, and search term filtering. This is essential for system analytics, audit, fraud tracing, and model improvement feedback.","path":"/shoppingMallAi/administrator/aiRecoSignals","method":"patch","description":"Search AI recommendation signals in the shopping_mall_ai_ai_reco_signals table. The operation enables filtering signals by recipient customer, product, signal_type (clicked, purchased, ignored, etc.), session context, and AI model version. Results are paginated, supporting complex queries used by administrators and advanced operator dashboards for analytics, troubleshooting, and model tuning. Security considerations require that only system admins or users with analytics privileges can access this endpoint due to the sensitivity of recommendation and user behavior data. Errors include invalid filters, lack of authorization, or excessive result set size.","summary":"Search and retrieve AI recommendation signals (shopping_mall_ai_ai_reco_signals) with advanced filtering.","parameters":[],"requestBody":{"description":"Criteria for searching and filtering AI recommendation signal events.","typeName":"IShoppingMallAiAiRecoSignal.IRequest"},"responseBody":{"description":"Paginated search results of AI recommendation signals matching criteria.","typeName":"IPageIShoppingMallAiAiRecoSignal"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"This operation retrieves a single AI recommendation signal record by its unique identifier from the shopping_mall_ai_ai_reco_signals table. Used primarily by system operators and administrators for auditing, analytics, or model debugging. This operation supports detailed drill-down into the lifecycle and context of a recommendation signal, including the user, product, input context, AI decision, and feedback lifecycle.","path":"/shoppingMallAi/administrator/aiRecoSignals/{aiRecoSignalId}","method":"get","description":"Retrieve a detailed AI recommendation signal record by its unique signal ID from shopping_mall_ai_ai_reco_signals. The record includes the signal_type, customer, product, behavior context, input and output data, AI model version, feedback, and relevant timestamps. Security and privacy controls ensure only authorized roles with analytics/audit permissions may access this endpoint. Related API operations include listing signals, searching signals, or auditing feedback/responses to recommendations. Error cases include nonexistent or invalid IDs, access without sufficient privilege, or audit-policy constraints blocking retrieval of sensitive records.","summary":"Get full detail of an AI recommendation signal event by ID (shopping_mall_ai_ai_reco_signals).","parameters":[{"name":"aiRecoSignalId","description":"Unique identifier of the AI recommendation signal record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed data record for the specified AI recommendation signal event.","typeName":"IShoppingMallAiAiRecoSignal"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"This operation creates a new AI recommendation signal event record in the shopping_mall_ai_ai_reco_signals table. Intended to be used by internal services, AI/ML engines, or (rarely) administrative dashboards for manual injection of AI event data. This is critical for tracking, analytics, and the feedback loop required for continuous AI improvement and personalization model effectiveness evaluation.","path":"/shoppingMallAi/administrator/aiRecoSignals","method":"post","description":"Create a new AI recommendation signal in shopping_mall_ai_ai_reco_signals. The request body must include all mandatory business data for the signal, such as recipient customer (can be null for guest), product (if contextually relevant), signal_type (home_reco, personalized_top5, similar_product, etc.), input context, recommendation result payload, feedback (if any at creation), AI model version, session context, and precise event timestamp. Creation is allowed only for privileged system components or administrators. Validation errors are returned if key fields are missing or violate data integrity (e.g., non-existent customer/product IDs, unknown signal_type, etc.).","summary":"Create a new AI recommendation signal event (shopping_mall_ai_ai_reco_signals).","parameters":[],"requestBody":{"description":"All AI recommendation signal event data to create a signal record.","typeName":"IShoppingMallAiAiRecoSignal.ICreate"},"responseBody":{"description":"Created AI recommendation signal with full data.","typeName":"IShoppingMallAiAiRecoSignal"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing recommendation signal event with new feedback or corrections. This operation maps to the shopping_mall_ai_ai_reco_signals table and allows updating fields such as feedback_type, output recommendations, or operational corrections (e.g., session_id, model version) for the specified signal. This is crucial for analytics, model debugging, and backfilling behavior outcomes.","path":"/shoppingMallAi/administrator/aiRecoSignals/{aiRecoSignalId}","method":"put","description":"Update a recorded AI recommendation signal event. The request body must include updatable business data, such as feedback_type, updated AI output recommendation, session_id, model version, or administrative corrections. All updatable fields must match current data integrity and compliance rules. This operation may only be performed by administrators or privileged components. The endpoint will validate immutable fields and reject time window violations or invalid state transitions. Related operations include signal creation, audit retrieval, and feedback aggregation for model analysis. Errors include invalid IDs, attempts to update immutable fields, or validation failures.","summary":"Update AI recommendation signal event data (shopping_mall_ai_ai_reco_signals).","parameters":[{"name":"aiRecoSignalId","description":"Unique ID of the AI recommendation signal event to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Business fields permitted to be updated for an existing signal event.","typeName":"IShoppingMallAiAiRecoSignal.IUpdate"},"responseBody":{"description":"AI recommendation signal event after update is applied.","typeName":"IShoppingMallAiAiRecoSignal"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Remove an AI recommendation signal record from shopping_mall_ai_ai_reco_signals. This operation hard-deletes the record, including all analytic, audit, and feedback fields. Used only for admin-level remediation (e.g., test data cleanup, compliance correction, or model retraining error cases). Use with caution due to potential audit and analytics integrity impact.","path":"/shoppingMallAi/administrator/aiRecoSignals/{aiRecoSignalId}","method":"delete","description":"Delete an AI recommendation signal record by its ID. This will permanently erase all information and is reserved for administrators or system maintenance components. The action is logged in the incident/audit trail for compliance. Deletion may be blocked if record is subject to legal hold or ongoing audit. Related APIs include search, get-by-id, create, and update signal operations. Errors include invalid IDs, unauthorized access, or attempt to delete protected records.","summary":"Delete AI recommendation signal event record by ID (shopping_mall_ai_ai_reco_signals).","parameters":[{"name":"aiRecoSignalId","description":"Unique ID of the AI recommendation signal event to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Search and filter user AI personalization profiles for analytics, model tuning, or compliance review. This API maps to the shopping_mall_ai_ai_personalization_profiles table. It is used to find, paginate, and analyze AI-driven segmentation and profile information for users. Filters include profile_type, segment_label, customer ID, update date, and affinity vector content. Results are paginated for operator analysis and dashboard display.","path":"/shoppingMallAi/administrator/aiPersonalizationProfiles","method":"patch","description":"Advanced search of user AI personalization profiles as recorded in shopping_mall_ai_ai_personalization_profiles. Returns paginated, filtered sets of per-customer AI profile data. Security is paramount, as profiles include sensitive preference and segmentation metadata—reserved for authorized platform administrators, AI engineers, or compliance analysts. Related APIs include retrieving a profile by ID, creating/updating profiles, or AI audit trails on user experience personalization. Errors include invalid filter, page size, or access by unauthorized roles.","summary":"Search and retrieve AI personalization profiles (shopping_mall_ai_ai_personalization_profiles) with advanced filtering.","parameters":[],"requestBody":{"description":"Search/filter criteria for AI personalization profile lookup.","typeName":"IShoppingMallAiAiPersonalizationProfile.IRequest"},"responseBody":{"description":"Paginated profile search results for AI personalization analytics.","typeName":"IPageIShoppingMallAiAiPersonalizationProfile"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve an individual user's AI personalization profile by its unique profile ID from shopping_mall_ai_ai_personalization_profiles. Admins use this for resolving analytics issues, audit, or debugging model behavior for a specific user. Contains all explainable details, affinity vectors, and segmentation outputs.","path":"/shoppingMallAi/administrator/aiPersonalizationProfiles/{aiPersonalizationProfileId}","method":"get","description":"Return all details of a user's AI personalization profile by its profile ID. Returns business context (e.g., cluster/segment, vector, explainability data, last update source, etc). Security checks ensure only authorized admins/engineers may access. Errors: not found, forbidden, or audit-locked profiles. Related APIs: profile search, create, update, segment assignment.","summary":"Get full detail of AI personalization profile by ID (shopping_mall_ai_ai_personalization_profiles).","parameters":[{"name":"aiPersonalizationProfileId","description":"Unique ID of the AI personalization profile to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Business object representing the user's AI personalization profile.","typeName":"IShoppingMallAiAiPersonalizationProfile"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Creates a new AI personalization profile for a user. This operation directly maps to the shopping_mall_ai_ai_personalization_profiles table and is intended for use by platform AI modules, administrators, or (rarely) for manual profile correction. The creation event defines the initial segment, affinity vector, profile type, and explainability data.","path":"/shoppingMallAi/administrator/aiPersonalizationProfiles","method":"post","description":"Create a new AI personalization profile in shopping_mall_ai_ai_personalization_profiles. The body must include customer linkage, profile_type, affinity vector data, segment label, exclusions, explainability model output, last update source, and all required business context. Creation is normally performed by system AI modules or by privileged operators. Validation ensures only one profile per customer and profile_type, and that referenced customer exists. Error cases include duplicate profile creation or invalid data.","summary":"Create new user AI personalization profile (shopping_mall_ai_ai_personalization_profiles).","parameters":[],"requestBody":{"description":"All data required to create a user's AI personalization profile.","typeName":"IShoppingMallAiAiPersonalizationProfile.ICreate"},"responseBody":{"description":"Created AI personalization profile object with all business fields.","typeName":"IShoppingMallAiAiPersonalizationProfile"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing user's AI personalization profile. This operation is used for business corrections, model retry outputs, opt-in/out changes, or policy actions as needed. It updates the shopping_mall_ai_ai_personalization_profiles table record for a specific profile ID.","path":"/shoppingMallAi/administrator/aiPersonalizationProfiles/{aiPersonalizationProfileId}","method":"put","description":"Updates a user's AI personalization profile. Admissible fields include affinity vectors, exclusions, last update source, and explainability JSON. Immutable keys—customer and profile_type—cannot be changed. The system enforces per-profile concurrency and data integrity checks. Operation is restricted to admins or designated AI system agents. Error scenarios: non-existent profile, forbidden update, or invalid update payload. Related APIs: create profile, audit/lookup, segmentation assignment.","summary":"Update AI personalization profile (shopping_mall_ai_ai_personalization_profiles).","parameters":[{"name":"aiPersonalizationProfileId","description":"Unique ID of the AI personalization profile to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updatable business fields for an existing AI personalization profile.","typeName":"IShoppingMallAiAiPersonalizationProfile.IUpdate"},"responseBody":{"description":"AI personalization profile after update is applied.","typeName":"IShoppingMallAiAiPersonalizationProfile"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Removes an AI personalization profile record from shopping_mall_ai_ai_personalization_profiles. This action is for admin/AI system maintenance, rarely to be used except for compliance cleanup, model resets, or duplicate anomaly remediation. Hard deletes the record and is logged for audit integrity.","path":"/shoppingMallAi/administrator/aiPersonalizationProfiles/{aiPersonalizationProfileId}","method":"delete","description":"Delete a user's AI personalization profile by profile ID. This removes all affinity, segment, model output, and explainability data for that profile. This is a hard delete and should be used with caution—triggering full audit logging and plausibility checks (e.g., if the profile is referenced by active analytics, deletion may be blocked). Permission enforcement is strict, restricted to admins. Related: create/update/fetch profile. Errors: invalid ID, unauthorized operation, audit-locked profiles.","summary":"Delete an AI personalization profile record by ID (shopping_mall_ai_ai_personalization_profiles).","parameters":[{"name":"aiPersonalizationProfileId","description":"Unique ID of the AI personalization profile to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Advanced search over AI analytics exposure records, allowing aggregation and filtering. This endpoint queries shopping_mall_ai_ai_analytics_exposures for experiment/campaign/test feature exposure events, with filters such as exposure_type, group_assignment, customer, and outcome. Results are paginated, data can power analytics/ab-test dashboards, and supports compliance audits over experiment/test impact and model governance.","path":"/shoppingMallAi/administrator/aiAnalyticsExposures","method":"patch","description":"Search over AI analytics exposure records, pulling campaign, test, or operational exposure events for analysis/model evaluation. Returns paginated lists, filtered by campaign/group/customer/exposure type/outcome. Security is important here, only system admins or specialized AI/analytics operators are allowed access because of privacy and business sensitivity. Related API operations: get-by-id exposure, create/update exposure event, test summary statistics, audit trace. Errors: invalid filter, unprivileged access, excessive result set.","summary":"Search and retrieve AI analytics exposure records (shopping_mall_ai_ai_analytics_exposures) with filters and pagination.","parameters":[],"requestBody":{"description":"Filters and criteria for advanced AI analytics exposure record search.","typeName":"IShoppingMallAiAiAnalyticsExposure.IRequest"},"responseBody":{"description":"Paginated list of analytics exposure events matching criteria.","typeName":"IPageIShoppingMallAiAiAnalyticsExposure"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve a specific AI analytics exposure event by its unique identifier. This operation accesses the shopping_mall_ai_ai_analytics_exposures table, providing detailed information about a tracked exposure, including the customer (if any), exposure type (e.g., 'AI_campaign', 'ab_test'), context, group assignment, metadata, outcomes, and timestamps. It supports compliance requirements for analytics traceability and is critical for administrators and data analysts managing AI-driven user exposure tracking.","path":"/shoppingMallAi/administrator/aiAnalyticsExposures/{aiAnalyticsExposureId}","method":"get","description":"Fetch a detailed AI analytics exposure event by its ID from the shopping_mall_ai_ai_analytics_exposures schema.\n\nThis endpoint allows permitted roles (administrator) to review individual customer or session exposure records, complete with the serialized context and results for audit, analytics, or governance. The response contains all properties related to the given analytics exposure, ensuring full visibility into AI-driven decision making.\n\nAccess is restricted to administrative roles due to the sensitive nature of analytics exposure tracking, satisfying internal policy and compliance auditability requirements.","summary":"Fetch a specific ShoppingMallAiAiAnalyticsExposure by its ID (administrator only)","parameters":[{"name":"aiAnalyticsExposureId","description":"Unique identifier of the AI analytics exposure event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single ShoppingMallAiAiAnalyticsExposure record matching the requested ID.","typeName":"IShoppingMallAiAiAnalyticsExposure"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new AI analytics exposure event. Inserts a record into the shopping_mall_ai_ai_analytics_exposures table with information such as customer (if applicable), exposure type, exposure context (JSON), group assignment, metadata, result outcomes, and creation timestamp. This enables tracking of all exposure events for algorithm transparency, analytics, and regulatory compliance.","path":"/shoppingMallAi/administrator/aiAnalyticsExposures","method":"post","description":"Registers a new analytical AI exposure event in the shopping_mall_ai_ai_analytics_exposures schema. Used for AI-driven recommendation/exposure systems to collect and log every exposure with rich metadata.\n\nRequest must provide all required details for a valid record, establishing traceable logs for every A/B test or AI/ML campaign. Enforces business and regulatory mandates around explainability and trace-level audit.","summary":"Create a new ShoppingMallAiAiAnalyticsExposure event","parameters":[],"requestBody":{"description":"Information required to create a new AI analytics exposure record.","typeName":"IShoppingMallAiAiAnalyticsExposure.ICreate"},"responseBody":{"description":"The created ShoppingMallAiAiAnalyticsExposure record.","typeName":"IShoppingMallAiAiAnalyticsExposure"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing AI analytics exposure event by its unique ID. This operation targets the shopping_mall_ai_ai_analytics_exposures table, enabling administrators to revise exposure context, group assignment, exposure type, result outcomes, or metadata. Critical for ensuring exposure logs remain current and comply with trace correction protocols. Full update is supported, with prior state available for audit recovery.","path":"/shoppingMallAi/administrator/aiAnalyticsExposures/{aiAnalyticsExposureId}","method":"put","description":"Modify details of an existing AI analytics exposure record. Enables updates to exposure context, type, group assignment, result outcome, or metadata for correction, annotation, or compliance purposes.\n\nAll changes are tracked and auditable; restricted to administrative users.","summary":"Update a specific ShoppingMallAiAiAnalyticsExposure event by ID","parameters":[{"name":"aiAnalyticsExposureId","description":"Target AI analytics exposure event ID.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the AI analytics exposure event.","typeName":"IShoppingMallAiAiAnalyticsExposure.IUpdate"},"responseBody":{"description":"The updated ShoppingMallAiAiAnalyticsExposure record.","typeName":"IShoppingMallAiAiAnalyticsExposure"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Delete (hard delete) an AI analytics exposure event by its unique identifier. As there is no soft-delete field in the base schema, the record will be removed permanently. This endpoint enforces system compliance, allows for administratively sanctioned removals, and supports strict audit trail requirements. Only administrators are authorized to perform this action.","path":"/shoppingMallAi/administrator/aiAnalyticsExposures/{aiAnalyticsExposureId}","method":"delete","description":"Permanently remove a single AI analytics exposure record from the shopping_mall_ai_ai_analytics_exposures table. There is no soft-deletion supported; record is erased for regulatory or administrative reasons. Only system administrators may perform this action, and removal is logged for audit.","summary":"Erase an AI analytics exposure record by ID (hard delete)","parameters":[{"name":"aiAnalyticsExposureId","description":"ID of the AI analytics exposure record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Perform advanced search and filtering of AI-driven price optimization events through the shopping_mall_ai_ai_price_optimizations schema. This patch endpoint supports complex queries such as time windows, product/category/channel constraints, optimization types, and result outcomes. Returns a paginated result set to enable analytics, tuning assessments, and compliance dashboards for administrators, pricing analysts, or authorized users.","path":"/shoppingMallAi/administrator/aiPriceOptimizations","method":"patch","description":"Returns a filtered, paginated list of AI price optimization events. This endpoint is meant for administration, audit, and analytics, allowing queries on type, product, channel, result, or date range. Leverages shopping_mall_ai_ai_price_optimizations for compliance and audit. Only administrators may use this endpoint due to price sensitivity.","summary":"Paginated/filtered search for ShoppingMallAiAiPriceOptimization events (admin only)","parameters":[],"requestBody":{"description":"Search/filter criteria and pagination controls for price optimizations.","typeName":"IShoppingMallAiAiPriceOptimization.IRequest"},"responseBody":{"description":"Paginated list of ShoppingMallAiAiPriceOptimization records matching search criteria.","typeName":"IPageIShoppingMallAiAiPriceOptimization"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve a single AI price optimization event by unique ID. Reads from shopping_mall_ai_ai_price_optimizations and returns all business properties, including product, type, original/suggested/final price, rationale, channel, and outcomes/results. Useful for administrators, pricing teams, and compliance officers examining optimization rationale and impacts.","path":"/shoppingMallAi/administrator/aiPriceOptimizations/{aiPriceOptimizationId}","method":"get","description":"Get all details about a single AI-driven price optimization event by its ID as stored in the shopping_mall_ai_ai_price_optimizations schema. Provides complete insight into how and why a pricing adjustment was made by AI or operator, including all metadata, rationales, and outcomes (if any).","summary":"Get a specific ShoppingMallAiAiPriceOptimization event by ID","parameters":[{"name":"aiPriceOptimizationId","description":"Unique identifier of the target AI price optimization event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single ShoppingMallAiAiPriceOptimization record with full event details.","typeName":"IShoppingMallAiAiPriceOptimization"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new AI price optimization event. Inserts a record into shopping_mall_ai_ai_price_optimizations, capturing target product, optimization type, channel, original/suggested/applied price, rationale, acceptance status, and outcome. Used for both manual and AI suggestions, supporting operational and regulatory price management workflow. All operations are strictly auditable.","path":"/shoppingMallAi/administrator/aiPriceOptimizations","method":"post","description":"Insert a new AI-driven price optimization event record. Used to log a system, manual, or AI recommendation for a new pricing event, including rationales and channel context. All operations are subject to compliance and price audit, and only administrators may execute this endpoint.","summary":"Create a new ShoppingMallAiAiPriceOptimization event (admin only)","parameters":[],"requestBody":{"description":"Data for creating a new AI price optimization record.","typeName":"IShoppingMallAiAiPriceOptimization.ICreate"},"responseBody":{"description":"The created ShoppingMallAiAiPriceOptimization record, as stored in the system.","typeName":"IShoppingMallAiAiPriceOptimization"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"Update an existing AI price optimization event, by unique ID. Targets shopping_mall_ai_ai_price_optimizations; supports changes to any field (type, product, channel, price data, rationale, acceptance, or outcomes) for corrections, annotation, or reconciliation. All updates are strictly audited and only administrators can perform modifications.","path":"/shoppingMallAi/administrator/aiPriceOptimizations/{aiPriceOptimizationId}","method":"put","description":"Update a specific AI price optimization record by ID, with new property values according to operational or compliance needs. Tracks all field changes in audit logs, and only system administrators may update these records.","summary":"Update a ShoppingMallAiAiPriceOptimization event by ID (admin only)","parameters":[{"name":"aiPriceOptimizationId","description":"AI price optimization record ID to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New data for the AI price optimization event.","typeName":"IShoppingMallAiAiPriceOptimization.IUpdate"},"responseBody":{"description":"The updated ShoppingMallAiAiPriceOptimization record with revised values.","typeName":"IShoppingMallAiAiPriceOptimization"},"authorizationRoles":["administrator"],"name":"update","authorizationRole":"administrator"},{"specification":"Delete (hard delete) an AI price optimization event by its unique ID. Operates on shopping_mall_ai_ai_price_optimizations, and since there is no soft deletion field, physically erases the record. This is permitted for administrators only, and all deletions are auditable for compliance.","path":"/shoppingMallAi/administrator/aiPriceOptimizations/{aiPriceOptimizationId}","method":"delete","description":"Permanently remove an AI price optimization event record from shopping_mall_ai_ai_price_optimizations by its unique ID. Hard delete only; action is restricted to administrators and is tracked in audit logs for compliance.","summary":"Erase an AI price optimization record by ID (hard delete, admin only)","parameters":[{"name":"aiPriceOptimizationId","description":"Unique ID of the price optimization record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"erase","authorizationRole":"administrator"},{"specification":"Perform an advanced, paginated search for AI fraud risk signals. Allows authorized users to filter, sort, and query shopping_mall_ai_fraud_logs by signal type, score, intervention, customer, event, or status. This endpoint returns full risk/fraud event logs, which are essential for operational risk/fraud monitoring, AI analytics, and compliance reporting.","path":"/shoppingMallAi/administrator/fraudLogs","method":"patch","description":"Search, filter and paginate fraud/AI risk logs in shopping_mall_ai_fraud_logs. Admin-only endpoint supporting investigations, analytics, and compliance, with filtering over customer, event types, scores, interventions, impact levels, and time.\n\nReturns a paginated data structure with matching ShoppingMallAiFraudLog entities for any number of filters/criteria.","summary":"Paginated/filtered search for ShoppingMallAiFraudLog records (admin only)","parameters":[],"requestBody":{"description":"Filter/search and pagination criteria for AI fraud logs.","typeName":"IShoppingMallAiFraudLog.IRequest"},"responseBody":{"description":"Paginated list of ShoppingMallAiFraudLog records matching search criteria.","typeName":"IPageIShoppingMallAiFraudLog"},"authorizationRoles":["administrator"],"name":"search","authorizationRole":"administrator"},{"specification":"Retrieve a single AI fraud log record by its unique event ID. Reads from shopping_mall_ai_fraud_logs; returns all relevant fraud event data, including linked customer/order (if any), event signal type, risk score, evidence, interventions, and outcome metadata. Used for risk analytics, operational audits, and regulatory reporting by administrators only.","path":"/shoppingMallAi/administrator/fraudLogs/{fraudLogId}","method":"get","description":"Fetch one full AI fraud event risk record from shopping_mall_ai_fraud_logs for a specific event by its ID. This provides critical incident and analytic detail for AI and human fraud/risk monitoring functions. Returns all stored data properties of the fraud log event, including root cause, scores, intervention outcomes, and timestamps.","summary":"Retrieve one ShoppingMallAiFraudLog record by ID (admin only)","parameters":[{"name":"fraudLogId","description":"Fraud log record unique identifier to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Returns one complete ShoppingMallAiFraudLog entity and all properties.","typeName":"IShoppingMallAiFraudLog"},"authorizationRoles":["administrator"],"name":"at","authorizationRole":"administrator"},{"specification":"Create a new AI fraud log event. This inserts a new event into shopping_mall_ai_fraud_logs, capturing all properties including linkage to involved customer/order, risk/signal type, scores, analytic evidence, intervention, and outcome. Used exclusively for administrative, security, or AI event tracking; operation is audited for compliance and incident resolution workflows.","path":"/shoppingMallAi/administrator/fraudLogs","method":"post","description":"Creates a new AI/ML or rule-based fraud risk event entry in shopping_mall_ai_fraud_logs. Intended for logging high risk or notable events flagged by either system or administrators during platform operation. All events are subject to compliance and legal audit requirements.","summary":"Create one ShoppingMallAiFraudLog event (admin only)","parameters":[],"requestBody":{"description":"Data to create a new fraud log record (required for compliance/audit).","typeName":"IShoppingMallAiFraudLog.ICreate"},"responseBody":{"description":"Returns the created ShoppingMallAiFraudLog (with assigned event ID).","typeName":"IShoppingMallAiFraudLog"},"authorizationRoles":["administrator"],"name":"create","authorizationRole":"administrator"},{"specification":"This operation updates the details of a specific AI fraud log event in the shoppingMallAi platform. It operates on the shopping_mall_ai_fraud_logs table, allowing administrators to amend fraud/risk scoring results, outcome actions, or final review outcomes based on comprehensive investigation. The update endpoint ensures traceability and history for risk and compliance audit. All mutable fields (such as fraud_signal_type, risk_score, detail_json, intervention_type, final_outcome, and associated customer/order references) can be updated according to investigation results or policy.\n\nStrict authorization is required, as only administrators and risk operators should have access. Each update event is logged for compliance, and changes in risk assessment may also update downstream customer/order status or trigger escalation workflows.\n\nIn cases where a fraud incident is found to be a false positive or requires remediation after further investigation, details may be updated here to reflect the final resolution or the intervention taken by the platform.","path":"/shoppingMallAi/administrator/fraudLogs/{fraudLogId}","method":"put","description":"Update an existing AI-driven fraud log entry in the system by specifying its unique identifier. This API allows authorized administrators to modify the event details such as the fraud signal type, risk score, detailed context, the intervention that was applied, and the final outcome for the case. Updates are recorded and auditable for compliance and traceability. Only authorized users should access this endpoint, as changes may have compliance or legal implications. Related business entities in the shopping_mall_ai_fraud_logs model include customer references, order references, and risk event fields. The platform maintains a history of changes for all fraud logs for transparency and regulatory examination. Processing an update here may also feed into downstream audit, notification, and escalation modules.","summary":"Update a specific AI fraud log entry in shoppingMallAi (shopping_mall_ai_fraud_logs)","parameters":[{"name":"fraudLogId","description":"Unique identifier of the AI fraud log entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fraud log information for the target record.","typeName":"IShoppingMallAiFraudLog.IUpdate"},"responseBody":{"description":"The updated AI fraud log record with all current field values.","typeName":"IShoppingMallAiFraudLog"},"authorizationRoles":["administrator"],"name":"updateFraudLog","authorizationRole":"administrator"},{"specification":"This operation deletes a specific AI fraud log record from the shopping_mall_ai_fraud_logs table. If the schema supports soft deletion (i.e., a deleted_at or deleted boolean), it performs a logical delete, otherwise a hard delete. This is a highly sensitive operation: fraud logs are crucial for compliance and legal review, so only authorized administrators or compliance officers can perform deletions. All delete actions are fully auditable.\n\nDue to the business-critical nature of fraud logs, the system may enforce preconditions on deletion—such as retention windows or legal holds. Upon deletion, the entry may be masked from standard queries but preserved for audit purposes according to platform policy. Deletions are typically rare and should be monitored for security and integrity. Cascade impact on linked analytics and incident logs is also considered.","path":"/shoppingMallAi/administrator/fraudLogs/{fraudLogId}","method":"delete","description":"Delete (logically or physically) a specific fraud log entry in AI business logic by unique ID. This is restricted to administrative and compliance users, with all actions being audited for compliance. The operation makes the identified record inaccessible to normal queries but potentially preserved for legal or audit recovery according to system policy. Deletion is subject to pre-checks such as retention or legal hold enforcement. Linked records in audit trails or analytics modules may also be updated/flagged as a result of this operation.","summary":"Delete a specific AI fraud log entry from shoppingMallAi (shopping_mall_ai_fraud_logs)","parameters":[{"name":"fraudLogId","description":"Unique identifier of the fraud log record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"eraseFraudLog","authorizationRole":"administrator"},{"specification":"This API performs an advanced search, filter, and paginated retrieval of incident logs from the shopping_mall_ai_incident_logs table. Sophisticated criteria may be submitted, including incident_type, impact_level, status, actor, customer identification, time windows, and full-text context searching. Supports business and compliance use-cases for monitoring system-level, security, AI, and business process anomalies/incidents. Returns paginated results using search/filter request object.\n\nAdministrators use this endpoint to analyze, report, or investigate incidents and platform anomalies. The search accommodates compliance, operational review, and diagnostics, tracking all relevant metadata and enabling detailed event tracking. Results may support export, further risk investigation, or root-cause analysis. Only authorized admin roles may access sensitive incident data.","path":"/shoppingMallAi/administrator/incidentLogs","method":"patch","description":"Search and filter incident logs for the AI-powered shopping mall backend system, supporting advanced query parameters (incident type, status, actor, impact level, etc.), and providing paginated results for operational/forensic review. The incident log is essential for business, operational, and compliance traceability. Response data is optimized for dashboard, export, and incident management workflows, referencing shopping_mall_ai_incident_logs. Search parameters and pagination/sorting are provided as part of the request body object. Only authorized administrators may access this endpoint.","summary":"Filter, search, and paginate incident logs (shopping_mall_ai_incident_logs) for admin review","parameters":[],"requestBody":{"description":"Advanced search, filter, and pagination criteria for incident log reporting.","typeName":"IShoppingMallAiIncidentLog.IRequest"},"responseBody":{"description":"Paginated list of incident log summary information matching the requested search/filter parameters.","typeName":"IPageIShoppingMallAiIncidentLog.ISummary"},"authorizationRoles":["administrator"],"name":"searchIncidentLogs","authorizationRole":"administrator"},{"specification":"This API retrieves a detailed single incident log entry by its unique identifier from the shopping_mall_ai_incident_logs table. Used for reviewing, diagnosing, and following up on specific anomalous or critical system/business events, the endpoint provides a comprehensive audit of all tracked metadata—including incident classification, trigger context, actors, impact, current status, timeline, and resolution details.\n\nUsed mainly by administrators and compliance teams, this detail endpoint can be used to review the full event timeline, track investigation progress, and support legal or operational analysis. All responses respect access control and data redaction as per compliance policy.","path":"/shoppingMallAi/administrator/incidentLogs/{incidentLogId}","method":"get","description":"Retrieve a single system/business incident log entry by unique incident ID. Provides complete detail for use in operational, compliance, and forensic review workflows. Returns all tracked entity fields relevant to the particular incident, supporting deep-dive incident tracking. This endpoint is restricted to authorized admin users and supports redaction and masking based on business compliance settings. Targets shopping_mall_ai_incident_logs by PK.","summary":"Get full details for a single incident log (shopping_mall_ai_incident_logs)","parameters":[{"name":"incidentLogId","description":"Unique identifier for the incident log entry being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full incident log entity data with all business, status, impact, and investigation tracking fields.","typeName":"IShoppingMallAiIncidentLog"},"authorizationRoles":["administrator"],"name":"atIncidentLog","authorizationRole":"administrator"},{"specification":"This API creates and records a new incident log event in the shopping_mall_ai_incident_logs table. Incident logs capture anomalous, error, compliance, AI, or operational fault events for audit and incident tracking. The request body specifies all fields necessary for identifying and classifying the incident. The endpoint supports compliance and audit readiness, tracking all required incident metadata for later review and resolution.\n\nAdministrators can use this endpoint as part of incident response, root-cause analysis, and compliance reporting, enabling downstream event escalation and platform resilience. All incident creation events are captured for legal defensibility.","path":"/shoppingMallAi/administrator/incidentLogs","method":"post","description":"Insert a new operational, security, compliance, or AI incident record into the incident logs. Provides full detail for classification, event context, affected actors, assignment, status, and resolution metadata. This endpoint is restricted to admin and system operator roles for reliability. Each creation event is auditable and may trigger downstream alerting or escalation workflows. Targets shopping_mall_ai_incident_logs.","summary":"Create a new incident log entry (shopping_mall_ai_incident_logs)","parameters":[],"requestBody":{"description":"Details and metadata required to define/create the system/business incident log entry.","typeName":"IShoppingMallAiIncidentLog.ICreate"},"responseBody":{"description":"The newly created incident log entry with assigned ID and system metadata.","typeName":"IShoppingMallAiIncidentLog"},"authorizationRoles":["administrator"],"name":"createIncidentLog","authorizationRole":"administrator"},{"specification":"This operation updates an existing incident log record in the shopping_mall_ai_incident_logs table. It allows authorized administrators to modify incident details such as classification, impact level, incident context (JSON), status, timeline, investigation notes, or resolution summary. Every change is tracked for business/compliance audit, and all modifications may trigger notifications or escalations to relevant stakeholders.\n\nUpdating incident logs is essential for closure or ongoing review, ensuring end-to-end traceability and chain of custody. Only admin roles may update such records, and all changes are append-only or versioned to prevent tampering. Handles system, AI, security, or operational incident workflow.","path":"/shoppingMallAi/administrator/incidentLogs/{incidentLogId}","method":"put","description":"Modify an existing incident log entry by its unique identifier. Allows adjustment of incident context, classification, status, and resolution or progress notes, supporting system workflow for incident management and audit. This API ensures that incident life-cycle management is consistently logged and visible to authorized admin/compliance teams. Redaction/versioning is enforced, and change events may be notifiable under compliance policy. Targets shopping_mall_ai_incident_logs by PK.","summary":"Update a given incident log record (shopping_mall_ai_incident_logs)","parameters":[{"name":"incidentLogId","description":"Unique ID of the incident log to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for updating incident classification, context, or resolution details.","typeName":"IShoppingMallAiIncidentLog.IUpdate"},"responseBody":{"description":"The updated full incident log entry with all changed fields merged.","typeName":"IShoppingMallAiIncidentLog"},"authorizationRoles":["administrator"],"name":"updateIncidentLog","authorizationRole":"administrator"},{"specification":"This API deletes (logically or physically) a specific incident log entry from the shopping_mall_ai_incident_logs table. If the schema supports soft deletion (i.e., a deleted_at field), it performs a logical (soft) delete, otherwise, it hard deletes the record. The endpoint is restricted to platform admin or compliance roles, as incident logs are crucial for forensic, legal, and operational review.\n\nWhen a log is deleted, it is either marked as deleted (removable from lists but present for audit) or removed entirely. The system enforces all compliance, retention, and legal hold business rules based on platform configuration. Deleting incident logs may impact downstream references in audit trails or analytics. The action is always recorded in the access log for regulatory and system audit, and may also be subject to pre-deletion policy checks.","path":"/shoppingMallAi/administrator/incidentLogs/{incidentLogId}","method":"delete","description":"Delete (soft or hard erase) an incident log entry identified by unique ID. This operation is only permitted for administrator and compliance roles, as incident logs are subject to audit/retention policy and may hold forensic/legal value. All deletions are recorded in the system audit trail. Affected data becomes inaccessible to standard queries but may remain for legal or business audit where soft delete applies.","summary":"Delete an incident log entry (shopping_mall_ai_incident_logs) from the system","parameters":[{"name":"incidentLogId","description":"ID of the incident log record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"eraseIncidentLog","authorizationRole":"administrator"},{"specification":"This operation allows authorized administrators to perform advanced search, filtering, and paginated retrieval of audit trail log entries from the shopping_mall_ai_audit_trails table. The request body supports granular query on event_type, target_type, actor, target_id, date/time, etc., to facilitate regulatory, business, and forensic audit. Returns paginated audit log results for dashboard, compliance export, or operational support. Only available to admin/compliance roles.\n\nAudit trails capture all important AI, business, security, and operational events related to major platform objects, supporting governance, evidence, and risk analytics. The output may be integrated with SIEM or analytics tooling for continuous monitoring. All queries are themselves auditable for compliance.","path":"/shoppingMallAi/administrator/auditTrails","method":"patch","description":"Search and retrieve a filtered and paginated list of audit trail events for governance, risk, and business investigation. The result covers all tracked audit fields and is intended for compliance and forensic use. Query parameters support event types, business domains, date range, involved actors, and entity IDs. This endpoint enables advanced operational and regulatory audit workflows, referencing shopping_mall_ai_audit_trails. Only authorized admin/compliance users may access this data. All queries are logged for compliance traceability.","summary":"Filter/search audit trails (shopping_mall_ai_audit_trails) for compliance and governance","parameters":[],"requestBody":{"description":"Advanced search, filter, and pagination input for audit trail query.","typeName":"IShoppingMallAiAuditTrail.IRequest"},"responseBody":{"description":"Paginated set of audit trail summary data matching search parameters.","typeName":"IPageIShoppingMallAiAuditTrail.ISummary"},"authorizationRoles":["administrator"],"name":"searchAuditTrail","authorizationRole":"administrator"},{"specification":"This API retrieves a detailed, single audit trail record from the shopping_mall_ai_audit_trails table, referenced by its unique identifier. Used by admin/compliance for review of AI, business, or operational events, this endpoint returns the complete audit entity—including event type, business object references, actor, before/after state, evidence description, and full timestamp information. Useful for governance, compliance evidence, and security incident root cause analysis.\n\nAccess to individual audit log entries is tightly controlled, supporting data redaction and cross-checking with related incident logs or business objects.","path":"/shoppingMallAi/administrator/auditTrails/{auditTrailId}","method":"get","description":"Retrieve details of a specific audit trail log by unique ID. Returns all tracked audit trail properties including entity event type, actor, target type, before/after object state, description, and creation timestamp. This endpoint is restricted to administrative roles due to high sensitivity. Data is referenced directly from shopping_mall_ai_audit_trails. Supports legal audit, governance, and operational root cause research.","summary":"Get a specific audit trail record by ID (shopping_mall_ai_audit_trails) for compliance review","parameters":[{"name":"auditTrailId","description":"Unique audit trail log entry ID for detailed retrieval.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full audit trail entity with all evidence, object state, and reference metadata.","typeName":"IShoppingMallAiAuditTrail"},"authorizationRoles":["administrator"],"name":"atAuditTrail","authorizationRole":"administrator"},{"specification":"This API creates a new audit trail entry in the shopping_mall_ai_audit_trails table. It is invoked for every significant business/AI/operational event to guarantee end-to-end traceability and compliance. Accepts input for all required fields, including event type, target object metadata, actor, before/after data snapshots, evidence, and event description. Generates the unique audit log ID.\n\nAdmin/compliance may use this endpoint for system-injected or manual audit entries. All writes are strictly audited, and audit creation is never allowed by general users. Provides evidence and narrative support for downstream compliance, security, or business investigations.","path":"/shoppingMallAi/administrator/auditTrails","method":"post","description":"Create and record a new audit trail log entry for any significant business/AI/security/governance event. Input must specify event type, actor, affected target, before/after state (as JSON strings), and additional evidence/description if applicable. This endpoint is restricted to administrative roles, ensuring only privileged actors may forge or edit audit records. The creation of audit logs is directly referenced from shopping_mall_ai_audit_trails. All writes are recursively audited and trigger compliance monitoring.","summary":"Create a new audit trail log entry (shopping_mall_ai_audit_trails) in system","parameters":[],"requestBody":{"description":"Structured audit trail event data and metadata required to record a new audit event in the system.","typeName":"IShoppingMallAiAuditTrail.ICreate"},"responseBody":{"description":"Newly created audit trail entity with all stored properties.","typeName":"IShoppingMallAiAuditTrail"},"authorizationRoles":["administrator"],"name":"createAuditTrail","authorizationRole":"administrator"},{"specification":"This operation updates an existing audit trail record in the shopping_mall_ai_audit_trails table identified by its unique ID. Used for post-factum correction of audit descriptions, evidence, or additional details required for compliance or investigation. Only privileged admin/compliance users may make such updates, and all edits are themselves logged for chain-of-custody.\n\nWhenever new evidence is discovered, or further clarification is required on an audit event, use this endpoint to append supporting narrative, correct misrecorded fields, or document external investigation findings. All fields in the audit log may be considered for update unless business rules mandate specific fields as immutable (e.g., event type or original actor). Updates are always auditable, and chain-of-custody is never broken.","path":"/shoppingMallAi/administrator/auditTrails/{auditTrailId}","method":"put","description":"Update/correct details of an existing audit trail log entry using the unique identifier. Allows correction of audit evidence, before/after state JSON, or other event details. Only privileged actors (administrators, compliance) may invoke this operation. All updates are themselves logged for audit and traceability. Mutation is only allowed for fields and state permitted by business-legal policy. Returns full updated record (shopping_mall_ai_audit_trails).","summary":"Update an existing audit trail log entry for compliance correction (shopping_mall_ai_audit_trails)","parameters":[{"name":"auditTrailId","description":"ID of the audit trail log record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Corrected or supplemental data for the audit trail log entry as allowed by business/compliance policy.","typeName":"IShoppingMallAiAuditTrail.IUpdate"},"responseBody":{"description":"Updated audit trail log record with new details.","typeName":"IShoppingMallAiAuditTrail"},"authorizationRoles":["administrator"],"name":"updateAuditTrail","authorizationRole":"administrator"},{"specification":"This API deletes (logical or physical) a specific audit trail record by unique ID from the shopping_mall_ai_audit_trails table. If the schema and policy support soft delete, the operation marks the record as deleted for compliance audit trail, else deletes permanently. Only administrative/governance/compliance users may delete audit records, as they are critical for legal compliance, governance, and security validation. Every deletion is itself tracked in the meta-audit log, and may be gated by additional retention or audit policy.\n\nDeletion may not be permitted if the record is under legal hold or forms part of an open compliance case. Post-deletion, the record becomes inaccessible to business users but remains retrievable by compliance actors if soft delete applies. All delete operations are logged recursively for regulatory integrity.","path":"/shoppingMallAi/administrator/auditTrails/{auditTrailId}","method":"delete","description":"Delete (soft or hard, as per policy) an audit trail log entry identified by unique ID. Reserved for admin/compliance roles, due to legal and governance requirements. Operation is always tracked in the meta-audit trail. Audit logs deleted here become unavailable for further business or operational access but may be preserved for legal hold under retention policy. The operation may be denied if the record or its related entities are under investigation or locked due to ongoing incident response.","summary":"Delete an audit trail log record (shopping_mall_ai_audit_trails) by identifier","parameters":[{"name":"auditTrailId","description":"Audit trail record ID to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["administrator"],"name":"eraseAuditTrail","authorizationRole":"administrator"},{"specification":"Implements JWT-based user registration for the 'customer' role using the shopping_mall_ai_customers table from the Prisma schema. The operation permits creation of a new customer account by collecting unique email, password, and optionally mobile and nickname, storing the hash in 'password_hash', with 'is_email_verified' defaulting to false. Upon successful registration, it issues an initial JWT access token for the customer, delivered in the 'setHeaders' field of the response as { Authorization: string }. Registration is open to the public, with email and nickname uniqueness strictly validated in accordance with schema indexes. The operation does not grant access unless registration completes; status is set as 'pending' until verified. Registration is blocked if a record with the given email or nickname exists or if inputs do not meet business rules stated in column descriptions. The request refers only to explicitly defined fields in the schema. It never invents or assumes fields beyond those in shopping_mall_ai_customers.","description":"This operation registers (signs up) a new customer account in the shoppingMallAi platform, referencing the shopping_mall_ai_customers model. It requires a unique email, password hash, optional mobile number, and desired nickname, as specified by the schema. Registration is always subject to unique constraints on email and nickname, and only valid upon satisfying all requirements in the schema and requirements document.\n\nUpon registration, a password hash is stored in the 'password_hash' column, and the account is provisioned with 'status' set to 'pending' and 'is_email_verified' as false by default. JWT authentication is established immediately if input is valid, with the 'setHeaders' field { Authorization: string } set in the response for client use. Email uniqueness, password format, and any business rules from the schema (such as required mobile for features) are enforced; inconsistencies or conflicts produce a 409 status or validation error. If only OAuth or SSO accounts are created (with null password), the same registration endpoint applies, but provider information must map to the correct schema fields.\n\nRole-based registration means this endpoint is public (no authorizationRole required). It is intended for shopper/consumer onboarding and does not support seller or admin flow. Registration is limited to one active account per email. Related workflows such as post-registration email verification or profile completion may follow but are out of scope here. Errors are handled with clear, actionable messages referencing field and business logic.\n\nThe returned response contains the JWT token in the setHeaders field, plus the registered public profile data (excluding password_hash). The operation may be used in onboarding flows as defined in the requirements.","summary":"Register a new customer (shopping_mall_ai_customers table) and issue JWT access token.","parameters":[],"requestBody":{"description":"Customer registration details including email, password hash, nickname, and optionally mobile; must match schema requirements and enforce email/nickname uniqueness.","typeName":"ICustomerAuth.SignUp"},"responseBody":{"description":"Public profile data for the newly registered customer (excluding password), plus setHeaders for JWT authorization.","typeName":"ICustomerAuth.IRegisterResponse"},"authorizationRole":null,"name":"signUp","path":"/auth/customer/register","method":"post"},{"specification":"Implements email/password authentication for customers based on the shopping_mall_ai_customers table, returning a JWT access token on success. The operation validates the provided email and password against the password_hash column, enforcing status checks (must not be suspended, withdrawn, or banned). Upon authentication success, the generated JWT is set in the response's setHeaders field for API use. Input fields and authentication logic strictly match the schema—no fields or statuses beyond those present are used. This is a public endpoint for customers to log in; no authorization is needed for access. Repeated failed attempts, non-existent emails, or policy blocks will result in authentication errors per requirements document. SSO/OAuth logins are handled via provider fields as per the schema but may require a separate controller if needed.","description":"This operation provides JWT-based login (sign in) for customer users, referencing the shopping_mall_ai_customers table. Customers supply their email and password, which are checked against the stored password_hash. If credentials are valid and the account is neither suspended, withdrawn, nor banned, a JWT is issued, with the Authorization header delivered in the setHeaders field as required by the requirements. This enables secured session establishment for all downstream API calls.\n\nThe login endpoint is strictly for customers as defined by the schema and requirements documents—not for sellers or administrators. All validation, error, and business rule logic is driven by schema constraints and the 'status' column rules. This operation never operates on or reveals fields that do not exist in the schema.\n\nAccount lockout policy for repeated failed attempts and account eligibility checks follow requirements documents; errors include appropriate messages to the client. Success responses provide the JWT authorization for SDK use in setHeaders. The system does not expose password_hash to clients; returned data includes customer public profile and authentication state only.","summary":"Authenticate (sign in) customer by email/password and issue JWT token as per shopping_mall_ai_customers schema.","parameters":[],"requestBody":{"description":"Customer email and password for authentication; validated strictly against schema fields.","typeName":"ICustomerAuth.SignIn"},"responseBody":{"description":"Public profile for authenticated customer and setHeaders with JWT Authorization value.","typeName":"ICustomerAuth.ILoginResponse"},"authorizationRole":null,"name":"signIn","path":"/auth/customer/login","method":"post"},{"specification":"Implements JWT token validation for a customer role using the shopping_mall_ai_customers table. Checks validity and expiration date of supplied JWT, decodes user ID, confirms that the account exists, is enabled (not suspended, withdrawn, or banned), and is not soft-deleted (deleted_at is null). Returns authentication status and optionally a refreshed token—never exposing sensitive fields. All logic is scoped by the schema and requirements; no fictional fields are referenced. No authorization required to call; this is a public endpoint for token verification by client applications.","description":"This operation allows for client-side or SDK validation of an existing customer's JWT access token. The provided token is decoded, and the customer record is located in the shopping_mall_ai_customers table using the embedded user ID. Account status is checked to confirm the user is still eligible and has not been withdrawn, suspended, or deleted. Token expiration and integrity are verified using established JWT policies (requirements document).\n\nIf valid, the operation returns authentication status (e.g., authorized, token expired, user revoked) as well as additional profile metadata. No sensitive database fields are exposed, and the logic is strictly constrained by the schema's columns. There is no authorizationRole required; the endpoint simply validates presented tokens. Any error (invalid token, missing user, etc.), yields a clear status code and cause for SDK/client handling. The endpoint forms part of the platform's recommended authentication workflow, ensuring clients can determine if re-authentication or token refresh is required.","summary":"Validate JWT token for customer (shopping_mall_ai_customers) and return authentication status/profile.","parameters":[],"requestBody":{"description":"JWT token for validation, supplied in Authorization header or body as per integration pattern.","typeName":"ICustomerAuth.ValidateToken"},"responseBody":{"description":"Authentication/authorization status and customer profile if valid.","typeName":"ICustomerAuth.IValidateResponse"},"authorizationRole":null,"name":"validateToken","path":"/auth/customer/validate","method":"post"},{"specification":"Provides password change for an authenticated customer, referencing shopping_mall_ai_customers. The customer must present their current password, new password, and unique email. The operation validates the current password against password_hash, then updates it with the new hash. Change is blocked if password does not meet schema requirements, or if current password is incorrect. All updates are strictly limited to the schema's fields. Only accessible to the authenticated customer account—enforced by the authorizationRole 'customer'. No other user or role may update passwords via this endpoint. Audit and error management follows business rules in the requirements document. No sensitive data (password_hash itself) is returned or exposed. Profile updates or other authentication flows are not handled here.","description":"Allows an authenticated customer to change their platform password. This operation checks that the current password matches the stored password_hash for the given email (using shopping_mall_ai_customers table). If valid, the password_hash is updated with the new value. Only the authenticated customer may do this, enforced with the 'customer' authorizationRole and JWT. Attempts to change another user's password or submit incorrect credentials will yield a 401 or 403 error, with explicit error messaging. Password policies, such as complexity or length, are enforced as per schema descriptions.\n\nAny business rules for password change (timing, notification, failed attempt cooling-off, audit) are enforced. No fields beyond those present in the customer model are referenced. No authentication state is changed except the password. Only intended for logged-in customers, not sellers or admins. Related flows such as SSO password resets or lost password requests may use a different endpoint.","summary":"Change password for authenticated customer (shopping_mall_ai_customers) after verifying current password.","parameters":[],"requestBody":{"description":"Current and new password for the authenticated customer (identity checked by JWT).","typeName":"ICustomerAuth.ChangePassword"},"responseBody":{"description":"Profile data for the customer after password change (excluding password_hash), and operation status.","typeName":"ICustomerAuth.IChangePasswordResponse"},"authorizationRole":"customer","name":"changePassword","path":"/auth/customer/password","method":"put"},{"specification":"Generate each required authentication/authorization API operation for the 'seller' role, based on the Prisma schema for the shopping_mall_ai_sellers table. This table includes fields: email (unique, required for login and notifications), password_hash (required for password-based authentication), display_name, status, is_verified, as well as fields for OAuth login, verification workflow, and admin approval. There is no field for refresh tokens, password reset tokens, or email verification tokens. Thus, only the 4 essential authentication operations are required, following all naming and path conventions: signUp, signIn, validateToken, and changePassword. All business rules for admin approval gating are covered, and JWT-based authentication is fully described referencing only schema-defined fields.","description":"This group of API operations defines the authentication and authorization interface for the seller role on shoppingMallAi. It references the shopping_mall_ai_sellers Prisma schema, which identifies sellers via unique email and manages authentication credentials with password_hash (for internal login) or OAuth (for external login). Other fields include status (business state), is_verified (admin KYC/approval gating), and display_name. \n\nOperation details:\n- signUp (public): Registers a new seller with required fields. Registration issues JWT access tokens and returns setHeaders for SDK assignment. Seller is not eligible for business transactions until is_verified is true.\n- signIn (public): Authenticates a seller using email/password, checks is_verified and status/gating, and issues JWT if credentials and status are valid.\n- validateToken (public): Accepts JWT, validates authenticity/expiry, checks seller status (active, withdrawn, banned) and is_verified gating, and returns current authentication state.\n- changePassword (authenticated): Allows sellers to change their password after verifying the current password. Only allowed if status is active (not withdrawn or banned).\n\nThere are no fields for refresh tokens, email verification, or password resets, so no such operations are generated. Security and business rules are described, error flows are covered, each operation references only schema-defined fields, and endpoints follow all naming conventions required by shoppingMallAi platform requirements (business logic, JWT, and onboarding gating).","summary":"JWT-based authentication and authorization endpoints for 'seller' role (shopping_mall_ai_sellers table): signUp, signIn, validateToken, changePassword. No refresh/email verification/password reset as not present in schema.","parameters":[],"requestBody":null,"responseBody":null,"authorizationRole":"seller","name":"signUp","path":"/auth/seller/register","method":"post"},{"specification":"Login operation for 'seller', authenticating with email and password. Issues JWT tokens and enforces gating via is_verified and status fields. Based on shopping_mall_ai_sellers Prisma schema. No refresh/email confirmation tokens available; uses only schema-defined fields.","description":"Authenticate a seller using email and password as stored in shopping_mall_ai_sellers. Validates status and is_verified, issues JWT access token. Business policy for onboarding and admin approval is described in response, and only schema fields are referenced.","summary":"Seller login endpoint (JWT issuance, business status gating) for shopping_mall_ai_sellers.","parameters":[],"requestBody":null,"responseBody":null,"authorizationRole":"seller","name":"signIn","path":"/auth/seller/login","method":"post"},{"specification":"Validate a JWT token for seller authentication, ensuring the token is authentic and that the seller's status/is_verified fields are satisfied. Relies on schema fields in shopping_mall_ai_sellers.","description":"Accepts a JWT token, verifies cryptographic authenticity/expiry, and checks that the seller status is eligible for access via shopping_mall_ai_sellers fields ('status', 'is_verified'). Returns authentication and authorization state for this session. Only uses schema-defined fields.","summary":"JWT validation for seller role using shopping_mall_ai_sellers schema ('status', 'is_verified').","parameters":[],"requestBody":null,"responseBody":null,"authorizationRole":"seller","name":"validateToken","path":"/auth/seller/validate","method":"post"},{"specification":"Authenticated password change operation for sellers based on shopping_mall_ai_sellers. Requires current and new password. Only allowed if status is active and the account is not withdrawn or banned. Uses only schema fields.","description":"Enables a seller to change password, with current password verification, using shopping_mall_ai_sellers fields: email, password_hash, status. Authenticated endpoint, business and security rules explained using only schema-defined fields.","summary":"Seller password change (verification, update) for shopping_mall_ai_sellers account (JWT required).","parameters":[],"requestBody":null,"responseBody":null,"authorizationRole":"seller","name":"changePassword","path":"/auth/seller/password","method":"put"},{"specification":"Administrator registration endpoint. Allows platform superusers (administrators) to register an account with email, password, and display name. The schema supports: email (unique, non-null), password_hash (credentials), and display_name. Upon creation, status is controlled by 'status' field, and elevated privileges are governed by 'role' field post-registration. No authentication is required for this public endpoint; on success, issues JWT tokens with setHeaders for Authorization. Prisma table: shopping_mall_ai_administrators.","description":"This operation allows a new administrator to register for system-level access using a unique email, password, and display name. The Prisma schema for shopping_mall_ai_administrators defines required fields: email (unique identifier, registration and notification), password_hash (hashed credential storage for internal authentication), and display_name (auditable identifier for admin). \n\nThe JWT implementation for admin registration ensures a secure issuance of both access and refresh tokens on account creation, using only the stored password_hash and role fields present in the schema. No external OAuth provider mechanism is referenced for administrators in this table.\n\nThe registration process for administrators creates an 'active' or 'pending' status (as business logic dictates), managed by the status field. Role-based access comes from 'role', which can be further refined post-registration by other privileged admins. No approval process is automatically triggered on self-registration; elevation to higher admin privileges may require manual adjustment.\n\nSecurity considerations: Only one administrator per email. Passwords are never stored in plaintext, and token scopes are assigned strictly per admin role. Default registration may permit limited admin scope, which is raised after further review. Successful registration triggers audit logging on the principal record. No personal/sensitive user fields outside of administrator identity are stored in the shopping_mall_ai_administrators schema.\n\nThis endpoint is the first step in the administrator authentication workflow and complimented by login, validate, and password change operations for complete admin access management.","summary":"Register a new administrator (shopping_mall_ai_administrators).","parameters":[],"requestBody":{"description":"Registration information for administrator account creation.","typeName":"IAdministrator.SignUp"},"responseBody":{"description":"Registered administrator details with issued JWT tokens and setHeaders for Authorization.","typeName":"IAdministrator.Authenticated"},"authorizationRole":null,"name":"signUp","path":"/auth/administrator/register","method":"post"},{"specification":"Administrator login endpoint. Authenticates administrator against stored credentials (email and password hash) in shopping_mall_ai_administrators. On success, issues new JWT tokens. Only supports password-based authentication, not OAuth/SSO. No login for suspended or withdrawn admins (status field controls).","description":"This operation enables registered administrators to log into the platform using email and password credentials, strictly referencing the email and password_hash fields in shopping_mall_ai_administrators. No OAuth or federated authentication flows are permitted for admin login; only direct password matching is allowed by schema.\n\nUpon successful login, JWT tokens are generated for session management. The login process validates the password_hash from the Prisma table against the submitted credential. The admin's 'status' field (must be 'active') is checked before issuing tokens, refusing login for suspended, withdrawn, or banned administrators. The response structure includes access and refresh tokens (if enabled) for the session, but the setHeaders field is not required for login responses (only for registration and refresh).\n\nThis secure login mechanism restricts login to one admin per unique email and logs all access attempts for audit compliance. Only the basic authentication fields present in the schema (email and password_hash) are referenced in this operation. Related operations include registration, validation, and password management for a complete admin authentication system.","summary":"Login as administrator (shopping_mall_ai_administrators).","parameters":[],"requestBody":{"description":"Admin login credentials (email, password).","typeName":"IAdministrator.SignIn"},"responseBody":{"description":"Successful authentication returns admin JWT tokens and admin info.","typeName":"IAdministrator.Authenticated"},"authorizationRole":null,"name":"signIn","path":"/auth/administrator/login","method":"post"},{"specification":"Administrator JWT token validation endpoint. Accepts a JWT and returns its authentication status. Does not change any persisted data or status. Relies on administrator role and token structure, as per JWT policy.","description":"This operation validates a provided JWT token for an administrator session. It references the 'role' and 'status' fields in the shopping_mall_ai_administrators table to confirm valid, active access. No updates or changes are performed on the admin's record; this endpoint only checks the signature, expiration, and claims of the provided token.\n\nThe JWT implementation leverages admin credentials and permission structure, using only what is available from the Prisma schema (role, status, etc). The operation is important for frontend applications to determine session state and enforce security measures. No authentication is required beyond the presented token.\n\nThis endpoint fits into the overall administrator authentication workflow as a way to check token validity without performing sensitive operations or issuing new tokens. It is designed to be lightweight and stateless, making use of only the fields present in the admin schema and the signed JWT. Error responses are returned if the token is missing, expired, or invalid for administrator role.","summary":"Validate admin JWT token (shopping_mall_ai_administrators).","parameters":[],"requestBody":{"description":"Token validation request (JWT token).","typeName":"IAdministrator.ValidateToken"},"responseBody":{"description":"Token validation response with authentication status.","typeName":"IAdministrator.TokenStatus"},"authorizationRole":null,"name":"validateToken","path":"/auth/administrator/validate","method":"post"},{"specification":"Administrator password change endpoint. Allows an authenticated admin to change their password by providing the current password and a new password. Uses password_hash for update logic. Only email/password authentication is possible for admin by schema; OAuth updates are unsupported here. Requires admin authentication (JWT).","description":"This operation allows an administrator to change their password, directly referencing the password_hash column in shopping_mall_ai_administrators. The request body requires the current password and the new password (to be hashed), enforcing that the requestor must know their existing credentials.\n\nThe JWT authentication policy requires the administrator to be fully authenticated for this operation; it cannot be used by guests or unauthenticated actors. The operation updates only the password_hash field and does not affect the admin's role or status. No support is present for OAuth/SSO authentication or external providers, as the admin schema does not include such mechanisms.\n\nThis endpoint ensures that administrators can update credentials securely and logs change events for audit trail compliance. Related operations include registration, login, and token validation to form a full password management cycle for administrators.","summary":"Change administrator password (shopping_mall_ai_administrators).","parameters":[],"requestBody":{"description":"Password change request (current and new password).","typeName":"IAdministrator.ChangePassword"},"responseBody":{"description":"Confirmation of successful admin password update.","typeName":"IAdministrator.ChangedPassword"},"authorizationRole":"administrator","name":"changePassword","path":"/auth/administrator/password","method":"put"}]