{"void,[object Object]":["ITodoListUser.TokenValidationResult",{"type":"object","properties":{"valid":{"type":"boolean","description":"Indicates whether the provided JWT token is currently valid (not expired, correctly signed, and meeting all business and security rules). Returns true if token is valid, false otherwise. Used for session continuity and renewal logic."},"userId":{"oneOf":[{"type":"string","format":"uuid","description":"Unique identifier of the user account, corresponding to todolist_users.id in the database. Only populated if token is valid and contains a recognized user claim. Null if token is invalid or does not map to an existing user."},{"type":"null"}],"description":"Unique identifier of the user account, corresponding to todolist_users.id in the database. Only populated if token is valid and contains a recognized user claim. Null if token is invalid or does not map to an existing user."},"role":{"oneOf":[{"type":"string","description":"Role claim from JWT payload, typically 'user'. Null if token is invalid."},{"type":"null"}],"description":"Role claim from JWT payload, typically 'user'. Null if token is invalid."},"expiresAt":{"oneOf":[{"type":"string","format":"date-time","description":"UTC ISO 8601 timestamp string indicating when the token will expire. Only present if the token is valid. Null otherwise."},{"type":"null"}],"description":"UTC ISO 8601 timestamp string indicating when the token will expire. Only present if the token is valid. Null otherwise."},"permissions":{"oneOf":[{"type":"array","items":{"type":"string"},"description":"Array of permission names (as strings) derived from the JWT token's payload. Indicates which API operations the token authorizes. Null if token is not valid."},{"type":"null"}],"description":"Array of permission names (as strings) derived from the JWT token's payload. Indicates which API operations the token authorizes. Null if token is not valid."}},"required":["valid"],"description":"Result of token validation for TodoList user sessions. Indicates token validity, user identity, associated role, expiry timestamp, and effective permission set. Used in session checks, login flows, and client-side renewal logic. Does not leak confidential or sensitive information if the token is invalid."}],"ITodoListTask.IRequest,[object Object]":["ITodoListTask.ISummary",{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the todo task. Auto-generated upon task creation and immutable for the task's lifecycle. Used to reference tasks in detail, update, and delete operations as described in the todolist_tasks schema and functional requirements."},"title":{"type":"string","description":"Title of the todo task, trimmed, 1-200 characters. Serves as the main visible label for the task across all list and summary views. Business constraints include maximum length, non-emptiness, and user-owned uniqueness outlined in the validation document."},"status":{"type":"string","description":"The current status of the task: allowed values are 'active', 'completed', or 'deleted'. Corresponds to the task's business state, and is central to list view filters and UI cues for completion or deletion, per business rules."},"due_date":{"oneOf":[{"type":"string","format":"date-time","description":"The due date of the task, optional in creation and maintained in summary view for sort/filter scenarios. Null if no due date is set. Uses ISO 8601 date-time string. Enables user-focused reminders and prioritization (see use cases in functional requirements).\n\nMaps to todolist_tasks.due_date and associated business validation."},{"type":"null","format":"date-time","description":"The due date of the task, optional in creation and maintained in summary view for sort/filter scenarios. Null if no due date is set. Uses ISO 8601 date-time string. Enables user-focused reminders and prioritization (see use cases in functional requirements).\n\nMaps to todolist_tasks.due_date and associated business validation."}],"description":"The due date of the task, optional in creation and maintained in summary view for sort/filter scenarios. Null if no due date is set. Uses ISO 8601 date-time string. Enables user-focused reminders and prioritization (see use cases in functional requirements).\n\nMaps to todolist_tasks.due_date and associated business validation."},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when the task was completed. Null if not completed. Used for analytics, user reporting, and timeline ordering. Date/time is always in ISO 8601 UTC per specification.\n\nRelates to todolist_tasks.completed_at and state transition documentation."},{"type":"null","format":"date-time","description":"Timestamp when the task was completed. Null if not completed. Used for analytics, user reporting, and timeline ordering. Date/time is always in ISO 8601 UTC per specification.\n\nRelates to todolist_tasks.completed_at and state transition documentation."}],"description":"Timestamp when the task was completed. Null if not completed. Used for analytics, user reporting, and timeline ordering. Date/time is always in ISO 8601 UTC per specification.\n\nRelates to todolist_tasks.completed_at and state transition documentation."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when the task was soft-deleted. Null if not deleted. This is crucial for implementing retention and restoration flows as outlined in the business rules. ISO 8601 UTC format.\n\nReferences todolist_tasks.deleted_at and lifecycle policy documentation."},{"type":"null","format":"date-time","description":"Timestamp when the task was soft-deleted. Null if not deleted. This is crucial for implementing retention and restoration flows as outlined in the business rules. ISO 8601 UTC format.\n\nReferences todolist_tasks.deleted_at and lifecycle policy documentation."}],"description":"Timestamp when the task was soft-deleted. Null if not deleted. This is crucial for implementing retention and restoration flows as outlined in the business rules. ISO 8601 UTC format.\n\nReferences todolist_tasks.deleted_at and lifecycle policy documentation."},"created_at":{"type":"string","format":"date-time","description":"Task creation timestamp, immutable, always UTC ISO 8601. Used in UI list ordering, business reporting, and API sort operations.\n\nDirectly references todolist_tasks.created_at field."},"updated_at":{"type":"string","format":"date-time","description":"Most recent update timestamp for the task. Updated on any modification, used for client synchronization and real-time collaboration as allowed by business policy.\n\nMaps to todolist_tasks.updated_at."}},"required":["id","title","status","created_at","updated_at"],"description":"Summary view for todo tasks. Used in list and search responses to provide key task metadata to the user, excluding full description fields. This summary is displayed in UI task lists and widgets as per the minimal, privacy-oriented business policy. Only non-sensitive, essential properties appear. All fields directly map to todolist_tasks schema definitions and are referenced in the functional requirements."}],"IPageITodoListTask.ISummary,[object Object]":["IPage.IPagination",{"type":"object","properties":{"current":{"type":"integer","format":"uint32","description":"Current page number in the result set (1-based index).\n\nIndicates which page of the list the client is viewing or receiving. Always a positive integer. Used as input and output for paginated APIs and essential for restoring scroll/page location in the UI. Enforces 1-based indexing as specified in design conventions and business rules."},"limit":{"type":"integer","format":"uint32","description":"Maximum number of records present per page in the current query.\n\nDefines the paging granularity for UI and API results, supporting tuning of UX and network efficiency. The default is 20, with a documented hard maximum of 50 as per client-side list business rule. Required to honor bounding and limit excess data transfer for rate-control and performance. See business documentation for allowed range and purpose."},"records":{"type":"integer","format":"uint32","description":"Total number of records found for the search or filter criteria, irrespective of current pagination.\n\nUsed for reporting the true set size to the frontend and for building accurate paginators (e.g., \"Showing 1-20 of 143\"). Essential for business analytics and UI correctness. Maps directly to the count(*) across current search constraints for the authenticated user."},"pages":{"type":"integer","format":"uint32","description":"Total number of pages in the entire query result, as determined by the filtered record count and selected page size (limit).\n\nThis value is always ceil(records/limit). Used in UI components to enable/disable pagination controls and provide user feedback about list boundaries. Full formula and policy details are specified in the business rules documentation."}},"required":["current","limit","records","pages"],"description":"Describes the pagination details associated with a paginated result set in the todoList application.\n\nThis structure is used in all paginated API results and includes information about the current page number, page size, total records matched, and total number of available pages. The design provides both business/UX essentials per page as well as accurate analytics alignment, and is documented with cross-references to `IPage` and `IPageITodoListTask.ISummary` for integration and alignment with list/report/view UIs. All properties are mandatory and type/format enforced for API and database alignment."}]}