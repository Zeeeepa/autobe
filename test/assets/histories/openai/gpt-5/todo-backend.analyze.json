[{"type":"userMessage","id":"8ab2a909-60f9-47f6-91e6-7593fe694073","created_at":"2025-08-15T03:49:38.554Z","contents":[{"type":"text","text":"I want to create a Todo list application.\r\n\r\nWhen I build an application, I only want the minimum functionality required for Todo list.\r\n\r\nSince I'm not familiar with programming, please write a requirements analysis report as you see fit."}]},{"id":"b37fc8d0-8259-45fc-bf38-94911b98dfc4","type":"userMessage","contents":[{"type":"text","text":"I want to create a Todo list application.\r\n\r\nWhen I build an application, I only want the minimum functionality required for Todo list.\r\n\r\nSince I'm not familiar with programming, please write a requirements analysis report as you see fit.\n\nMake every determinant by yourself, and just show me the analysis report. call analyze function."}],"created_at":"2025-08-15T03:49:38.558Z"},{"type":"analyze","id":"77f998c4-6704-4f2d-a00e-0a7d820bb044","reason":"User requested a minimal Todo list application and delegated all decisions. Generate a comprehensive requirements analysis report with minimal viable features, user roles, data model, business rules, and APIs suitable for a simple Todo app.","prefix":"todoApp","roles":[{"name":"user","description":"Authenticated end user who manages only their own todo items and account. Can create, read, update, complete, and delete personal tasks. Cannot access or modify other users’ data."},{"name":"admin","description":"Administrative user with full authority to oversee the service. Can manage any user account when necessary for support or policy enforcement, access aggregated analytics, enforce content policies, and configure service-wide settings."}],"files":[{"reason":"Provide a single entry point that lists and links all planning documents. Sets reading order and ensures navigation consistency across the project.","filename":"00-toc.md","documentType":"service-overview","outline":["Document Purpose","How to Use This Documentation","Table of Contents (with descriptive links)","Document Maintenance Policy"],"audience":"general","keyQuestions":["What documents exist for this project?","How should readers navigate them in the correct order?"],"detailLevel":"high-level overview","relatedDocuments":["01-todoApp-service-overview.md","02-todoApp-user-roles-and-authentication.md","03-todoApp-functional-requirements.md","04-todoApp-user-stories-and-personas.md","05-todoApp-user-flows.md","06-todoApp-business-rules.md","07-todoApp-error-handling-and-exception-scenarios.md","08-todoApp-non-functional-requirements.md","09-todoApp-data-lifecycle-and-privacy.md","10-todoApp-acceptance-criteria-and-success-metrics.md"],"constraints":["Must include descriptive relative links to each listed document using the document title as link text","Must place the specified Developer Note blockquote at the very end exactly as provided","Must not include technical implementation details, API specs, or database schemas"],"content":"# todoApp Planning Documentation - Table of Contents\n\nLast updated: 2025-08-15 (KST)\n\n## Document Purpose\nSingle entry point for all planning artifacts of the todoApp service. Establishes the recommended reading order, provides descriptive links to each document, and aligns stakeholders on navigation across the documentation set. Defines business requirements, user scenarios, and process flows in natural language so backend developers can implement with clarity while retaining full autonomy over technical decisions.\n\n## How to Use This Documentation\n- Begin with the service overview to understand vision, scope, and business model. Proceed to roles and authentication to ground access control concepts before diving into the functional scope.\n- Follow the reading order below to reduce ambiguity and ensure terms, rules, and flows are interpreted consistently across teams.\n- Each link uses the document’s title as link text and points to a relative file in this folder for portability.\n- Focus remains on what the system must do from a business perspective. All architectural choices, API designs, and data modeling decisions remain with the development team.\n\n## Table of Contents (with descriptive links)\n1. [todoApp Service Overview](./01-todoApp-service-overview.md)\n   - Establishes vision, scope, and business model for the minimal Todo service; clarifies value proposition, target users, and success metrics.\n2. [todoApp User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md)\n   - Defines complete authentication behaviors, role hierarchy, and permissions in business terms; includes session and token management expectations and EARS-formatted access rules.\n3. [todoApp Functional Requirements (MVP)](./03-todoApp-functional-requirements.md)\n   - Captures the minimum functional scope for a Todo list with testable business requirements; covers CRUD for items, completion/reopening, filtering/sorting, localization, and acceptance criteria in EARS.\n4. [todoApp User Stories and Personas](./04-todoApp-user-stories-and-personas.md)\n   - Describes personas and primary/secondary scenarios to guide prioritization and testing; includes role-based scenarios and acceptance statements.\n5. [todoApp User Flows and Process Diagrams](./05-todoApp-user-flows.md)\n   - Provides visual business flows for core processes (authentication, item lifecycle, error and recovery) using Mermaid with LR orientation, plus narrative explanations.\n6. [todoApp Business Rules Specification](./06-todoApp-business-rules.md)\n   - Codifies validation rules, constraints, ownership rules, rate limits, retention, time zone handling, and rule precedence in measurable terms (EARS where applicable).\n7. [todoApp Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md)\n   - Defines user-facing error conditions, guidance, and recovery paths; covers conflicts, retries, monitoring expectations, and EARS-formatted error requirements.\n8. [todoApp Non-Functional Requirements](./08-todoApp-non-functional-requirements.md)\n   - Sets measurable expectations for performance, security, privacy, availability, scalability, compliance, and operational monitoring; includes EARS-based acceptance criteria.\n9. [todoApp Data Lifecycle and Privacy Requirements](./09-todoApp-data-lifecycle-and-privacy.md)\n   - Describes conceptual information lifecycle, retention and purging policies, portability options, privacy-by-design principles, and right-to-erasure behaviors.\n10. [todoApp Acceptance Criteria and Success Metrics](./10-todoApp-acceptance-criteria-and-success-metrics.md)\n    - Defines go-live readiness, MVP acceptance criteria (EARS), post-launch monitoring plan, user satisfaction approach, KPIs, and risk mitigations.\n\n### Recommended Reading Order and Rationale\n- Foundation: Service overview → roles and authentication → functional requirements. Builds shared context, clarifies permissions, then defines scope.\n- Behavior Details: User stories/personas → user flows → business rules. Translate scope into concrete scenarios, visual flows, and enforceable rules.\n- Quality and Safety: Error handling → non-functional requirements. Define predictable failure behavior and measurable experience goals.\n- Lifecycle and Acceptance: Data lifecycle and privacy → acceptance criteria and success metrics. Cover responsible data handling and evaluation of delivery.\n\n### Role-Based Quick Paths\n- Business stakeholders: Service overview → acceptance criteria and success metrics.\n- Product managers: Service overview → functional requirements → user stories and personas → user flows.\n- Development team: Roles and authentication → functional requirements → business rules → error handling → non-functional requirements → data lifecycle and privacy.\n- QA and compliance: Business rules → error handling → non-functional requirements → data lifecycle and privacy → acceptance criteria and success metrics.\n\n## Document Maintenance Policy\n- Ownership: Product team curates business content; development team may propose clarifications via change requests. A designated documentation owner is accountable for approvals and publication.\n- Update cadence: Update whenever scope, rules, or acceptance criteria change. Update this table of contents immediately when documents are added, renamed, or deprecated.\n- Versioning and change log: Maintain a change log section or commit history within each document describing what changed and why in business terms.\n- Link conventions: Use descriptive link text matching each document title in en-US; keep relative paths within this folder. Do not link to non-existent files.\n- Consistency and traceability: Keep terminology, states, and rule names consistent across documents. Cross-reference related sections using descriptive links where helpful.\n- Decommissioning: If a document is retired, remove its link here and record the successor or reason for removal in the project change log.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"Establish vision, scope, and business model for the minimal Todo service to align stakeholders before detailing requirements.","filename":"01-todoApp-service-overview.md","documentType":"service-overview","outline":["Executive Summary","Problem Definition and Market Gap","Target Users","Core Value Proposition","Service Scope and Out-of-Scope","Business Model","Why This Service Exists","Revenue Strategy","Growth Plan","Success Metrics and KPIs","Assumptions and Dependencies","Glossary of Terms"],"audience":"business stakeholders","keyQuestions":["Why should this service exist and what problem does it solve?","Who is the target user and what value is delivered?","What scope is included for the minimal viable Todo service?","How will success be measured?"],"detailLevel":"high-level overview","relatedDocuments":["00-toc.md","03-todoApp-functional-requirements.md","08-todoApp-non-functional-requirements.md","10-todoApp-acceptance-criteria-and-success-metrics.md"],"constraints":["Focus on business goals and outcomes only","Avoid technical implementation details entirely","Define clear success metrics aligned with business value"],"content":"# todoApp Service Overview\n\n## Executive Summary\nA minimal, reliable, and privacy‑respecting personal task management service enabling individuals to quickly capture, organize, and complete tasks without distraction. The MVP emphasizes core value: todo creation, editing, completion/reopening, and deletion for authenticated users, with explicit ownership and predictable behavior across time zones.\n\nKey outcomes for MVP:\n- Accelerate time‑to‑first‑value: users create their first todo within one minute of registration (median).\n- Establish daily habit loops centered on completion and review.\n- Build trust through privacy‑first defaults and deterministic date/time handling.\n\nEARS guiding objectives:\n- THE todoApp SHALL enable a newly registered user to create a first todo within 60 seconds (median) from completing registration.\n- THE todoApp SHALL keep each user’s todos private by default, with no sharing in MVP.\n- WHEN a user records or modifies a due date, THE todoApp SHALL display and process that due date in the user’s preferred local time consistently.\n- WHEN a user filters their todos, THE todoApp SHALL present results within user‑perceived expectations aligned with the non‑functional targets.\n\nFor deeper specifications, see the [Table of Contents and Navigation Guide](./00-toc.md), the [Functional Requirements for todoApp](./03-todoApp-functional-requirements.md), the [Non‑Functional Requirements for todoApp](./08-todoApp-non-functional-requirements.md), and the [Acceptance Criteria and Success Metrics for MVP](./10-todoApp-acceptance-criteria-and-success-metrics.md).\n\n## Problem Definition and Market Gap\nMany task tools try to satisfy both simple and complex workflows, burdening users who only need essentials. Observed pain points:\n- Over‑featured products delaying time‑to‑first‑value due to configuration overhead.\n- Privacy risk and unclear ownership in team‑oriented tools.\n- Inconsistent due‑date handling across time zones, creating missed or premature deadlines.\n- Reliability gaps in core actions (create, complete, find) that erode trust.\n- Pricing complexity that discourages early adoption.\n\nCompetitor landscape (business characterization):\n- Team‑centric platforms: optimized for collaboration; often complex for personal use; unclear privacy defaults.\n- Power‑user task managers: rich features with steeper learning curves; slower activation for minimal needs.\n- Simple list apps: fast but often lack rigorous ownership rules, retention clarity, and predictable date semantics.\n\nDifferentiation:\n- Purposeful minimalism tied directly to value delivery.\n- Privacy clarity and least‑privilege oversight.\n- Deterministic time and date semantics across locales.\n\n## Target Users\nPrimary audiences:\n- Individual professionals, students, and early‑career knowledge workers who prefer predictability over breadth.\n- Privacy‑conscious individuals seeking control and ownership of personal task data.\n\nSecondary audience:\n- Service administrators who provide user support and enforce policies under least‑privilege constraints.\n\nRoles in service context:\n- User: authenticated end user managing only their own todo items and account.\n- Admin: administrative user performing limited oversight for support/policy enforcement with auditability.\n\n## Core Value Proposition\n- Minimalism with purpose: only capabilities that directly support capture and completion.\n- Predictability: deterministic rules for ownership, visibility, and time semantics.\n- Trust and privacy: personal data is private; no default sharing or exposure in MVP.\n- Fast first value: immediate utility on first login.\n\nBusiness value loop (conceptual):\n\n```mermaid\ngraph LR\n  A[\"Register\"] --> B[\"Create First Todo(≤60s median)\"]\n  B --> C[\"Daily Review & Complete\"]\n  C --> D[\"Completion Satisfaction\"]\n  D --> E[\"Habit & Retention\"]\n  E --> F[\"Sustained Engagement\"]\n```\n\nEARS commitments reinforcing value delivery:\n- WHEN a newly verified account first signs in, THE todoApp SHALL make task capture immediately accessible without mandatory configuration.\n- THE todoApp SHALL avoid features that do not materially improve capture, review, and completion during MVP.\n- WHERE a user lacks a configured time zone, THE todoApp SHALL default to a reasonable locale‑aligned time zone (see non‑functional expectations) and communicate the default in context.\n\n## Service Scope and Out‑of‑Scope\n\n### In Scope (MVP)\n- User accounts: registration, login, logout, email verification, password reset, session revocation (business perspective only).\n- Todo item management: create, read, update, complete, reopen, delete personal items.\n- Optional attributes: description and due date.\n- Filtering and sorting: by completion status and due date; ordering by creation time or due date.\n- Ownership and privacy: strict separation; users access only their data; admins act only for support under audit.\n- Time zone semantics: consistent date/time handling per user preference.\n- Data lifecycle basics: user‑initiated deletion; account deletion with retention policy adherence.\n\n### Out of Scope (MVP)\n- Collaboration: sharing, assignments, comments, team workspaces, mentions.\n- Complex structures: subtasks, tags/labels, priorities, recurring tasks.\n- Media: file/image attachments.\n- Integrations: calendar sync, third‑party automations, external identity providers.\n- Notifications/reminders: push/SMS/email reminders.\n- Advanced analytics dashboards for end users.\n- Public APIs or developer platform guarantees.\n- Client platform specifics (no UI/UX or native app prescriptions).\n\nBoundary EARS:\n- THE todoApp SHALL exclude sharing and collaboration features in MVP.\n- IF a feature introduces privacy ambiguity or increases time‑to‑first‑value beyond 60 seconds (median), THEN THE todoApp SHALL defer it beyond MVP.\n\n## Business Model\nEmphasizes a trust‑first entry with a minimal product, followed by value‑based monetization once habit and trust are validated.\n\nValue creation and capture:\n- Reliable, distraction‑free personal task management that improves completion rate and reduces anxiety.\n- Free tier at launch to maximize adoption and learning; subscription options post‑MVP for power users and small teams while keeping core personal use free.\n\nCost structure (business level):\n- Customer support and content for onboarding and guidance.\n- Operations and compliance appropriate to geography and scale.\n- Privacy and security program proportional to risk and data footprint.\n\nDifferentiation:\n- Privacy clarity and least‑privilege operations.\n- Deterministic time zone semantics and predictable behavior.\n- Purposeful minimalism avoiding feature sprawl.\n\nGuardrails (EARS):\n- THE todoApp SHALL not introduce monetization that blocks basic personal task creation, completion, or deletion during MVP.\n- WHERE monetization is later introduced, THE todoApp SHALL ensure continuity of access to existing data for users who downgrade.\n\n## Why This Service Exists\nMarket need: a simple, dependable system without team constructs or heavy configuration.\nOpportunity: competitors optimize for breadth and collaboration, underserving users seeking speed, clarity, and privacy.\nStrategic fit: a minimal, high‑trust core creates a durable foundation for optional premium extensions without compromising simplicity.\n\nEARS business objectives:\n- THE todoApp SHALL minimize time‑to‑first‑value, targeting first‑todo creation ≤60 seconds (median) after registration.\n- THE todoApp SHALL maintain privacy by default; no exposure of personal tasks to others in MVP.\n- WHERE a free tier is offered, THE todoApp SHALL retain full personal task functionality in that tier during MVP.\n\n## Revenue Strategy\nPhased monetization to follow demonstrated engagement and retention.\n- MVP to early traction: free tier for personal use to maximize adoption and learn from usage patterns.\n- Post‑MVP (contingent on traction):\n  - Individual Pro: advanced filters, export options, and optional productivity insights.\n  - Teams (future): oversight and policy tools only if simplicity is preserved.\n- Pricing principles: transparent, predictable, and free from hidden limits that undermine personal use.\n\nEARS monetization ethics:\n- THE todoApp SHALL avoid paywalls on core personal task operations during MVP.\n- IF a user downgrades from paid to free, THEN THE todoApp SHALL preserve access to all existing personal tasks without data loss.\n\n## Growth Plan\nAcquisition: content marketing on productivity fundamentals; referrals; distribution via student and early‑career communities.\nActivation: frictionless onboarding oriented to first task creation; contextual, minimal guidance.\nRetention: habit loops centered on completion; simple in‑product prompts within MVP scope; weekly reflection content.\nExpansion: optional premium features introduced only after healthy retention; core remains uncluttered.\n\nEARS growth targets:\n- THE todoApp SHALL achieve a median time‑to‑first‑task of ≤60 seconds for newly registered users during MVP.\n- THE todoApp SHALL target 7‑day retention ≥25% within 90 days post‑launch.\n- WHERE a referral mechanism is offered, THE todoApp SHALL allow invitation flows that do not introduce sharing features.\n\n## Success Metrics and KPIs\nDefinitions (business level):\n- Activation rate: % of new registrants creating a todo within 24 hours.\n- Time‑to‑first‑task (median): time from registration to first todo creation.\n- Weekly engaged users: users who created, updated, or completed at least one todo in a 7‑day window.\n- Completion ratio: completed todos / created todos within a period.\n- Churn rate: % of active users who become inactive over 30 days.\n- Support ticket volume per 1,000 MAU: proxy for usability and reliability.\n\nTargets (EARS):\n- THE todoApp SHALL achieve activation rate ≥70% within 90 days post‑launch.\n- THE todoApp SHALL maintain median time‑to‑first‑task ≤60 seconds during MVP.\n- THE todoApp SHALL achieve weekly completion ratio ≥50% for active users within 90 days post‑launch.\n- WHERE support is provided, THE todoApp SHALL keep support ticket volume ≤20 per 1,000 MAU related to core operations.\n\nIllustrative KPI table:\n\n| KPI | Definition | MVP Target |\n|-----|------------|------------|\n| Activation rate | % new users with ≥1 todo in 24h | ≥ 70% |\n| Time‑to‑first‑task | Median time to first todo | ≤ 60 s |\n| Weekly completion ratio | Completed / created (active users) | ≥ 50% |\n| 7‑day retention | Users returning within 7 days | ≥ 25% |\n| Support volume | Tickets per 1,000 MAU | ≤ 20 |\n\n## Assumptions and Dependencies\nAssumptions:\n- Email channel availability for verification and password resets.\n- Baseline compliance (privacy/legal) for operating regions; documented consent for data processing.\n- Stable time zone rules and consistent business semantics for due dates.\n- English‑language product framing for MVP; broader localization later.\n- Reasonable baseline of user devices and connectivity.\n- Administrative oversight limited to support/policy enforcement with least‑privilege principles.\n\nDependencies:\n- Content and onboarding materials to reduce activation friction.\n- Support capacity for early launch weeks to handle inquiries.\n- Monitoring and analytics to measure activation, retention, and completion.\n\nConstraints (EARS):\n- IF email verification is not completed within a defined grace period, THEN THE todoApp SHALL limit access to functions requiring verified identity until verification is complete.\n- WHILE account deletion is in progress, THE todoApp SHALL prevent new content creation to avoid data inconsistency.\n- WHERE privacy policy prohibits data sharing, THE todoApp SHALL avoid features that expose personal content to others during MVP.\n\n## Linkage to Detailed Requirements\nBusiness behavior and acceptance details are elaborated in the [Functional Requirements for todoApp](./03-todoApp-functional-requirements.md). User‑perceived reliability, performance, security, and privacy expectations are set in the [Non‑Functional Requirements for todoApp](./08-todoApp-non-functional-requirements.md). Release readiness and measurable acceptance criteria are defined in the [Acceptance Criteria and Success Metrics for MVP](./10-todoApp-acceptance-criteria-and-success-metrics.md).\n\n## Glossary of Terms\n- Activation: point at which a newly registered user creates the first todo.\n- Admin: role authorized to perform limited oversight for support and policy enforcement with auditability.\n- Completion ratio: completed todos divided by created todos over the same period.\n- Due date: optional date attached to a todo indicating a target completion day in the user’s local time.\n- Habit loop: recurring cycle of capture, review, and completion that fosters retention.\n- MVP: minimal set of features delivering core value and validating the product hypothesis.\n- Ownership: principle that a user’s todos belong exclusively to that user and are not visible to others in MVP.\n- Retention: rate at which users return and interact with the service over time.\n- Time‑to‑first‑task: elapsed time between account registration and first todo creation.\n- User: authenticated end user who manages only their own todo items and account.\n\nBusiness scope statement: This document provides business requirements and outcomes only. All technical implementation decisions (architecture, APIs, database design, infrastructure) are at the discretion of the development team; the content defines WHAT the system should do, not HOW to build it."},{"reason":"Define complete authentication behaviors, role hierarchy, and permissions so access rules are unambiguous from a business perspective.","filename":"02-todoApp-user-roles-and-authentication.md","documentType":"requirement","outline":["Purpose and Scope","Authentication Requirements","Core Authentication Functions (register, login, logout, verify email, reset password, change password, revoke sessions)","User Role Structure","Role Definitions and Capabilities","Permission Matrix (actions by role)","Session and Token Management (business rules for token lifetimes and refresh)","Access Control Rules and Examples (EARS format)","Account Lifecycle (creation, verification, suspension, deletion)","Security and Privacy Considerations","Audit and Activity Logging (business expectations)"],"audience":"development team","keyQuestions":["What roles exist and what can each do?","What authentication features are available to users?","How are sessions and tokens managed from a business standpoint?","What are the access control rules and edge cases?"],"detailLevel":"detailed specification","relatedDocuments":["01-todoApp-service-overview.md","03-todoApp-functional-requirements.md","07-todoApp-error-handling-and-exception-scenarios.md","08-todoApp-non-functional-requirements.md"],"constraints":["Include a clear permission matrix table by role","Write all applicable requirements in EARS format","Describe token management in business terms without API-level specifications","Do not include API endpoints, database schema, or technical architecture"],"content":"# todoApp User Roles and Authentication Requirements\n\nBusiness requirements only. Technical implementation decisions (architecture, APIs, database design, storage, libraries) belong to the development team. Content specifies WHAT the service must do in business terms.\n\n## Purpose and Scope\n- Define authentication behaviors, role hierarchy, and permissions so access rules are unambiguous in business terms.\n- Establish session and token management principles, including lifetimes, rotation, revocation, re‑authentication for sensitive actions, and session listing.\n- Specify account lifecycle stages and expected business outcomes (creation, verification, suspension, deletion and restoration windows).\n- Provide EARS‑formatted, testable requirements for core auth flows and access control.\n- Exclude technical implementation details such as API endpoints, database schemas, or infrastructure choices.\n\n## Authentication Requirements (EARS)\n- THE todoApp SHALL support end‑user authentication with email and password.\n- THE todoApp SHALL require email verification to unlock sensitive account actions and data export.\n- WHEN a person authenticates successfully, THE todoApp SHALL establish a session represented by issued tokens according to token management rules.\n- WHEN a subject without a valid session attempts to access protected resources, THE todoApp SHALL deny access and guide the subject to sign in or verify email as applicable.\n- WHEN administrative assistance is necessary, THE todoApp SHALL allow authorized administrators to perform limited support actions under least‑privilege and full audit.\n\n### Visual Overview of Core Authentication Flows\n```mermaid\ngraph LR\n  subgraph \"Registration and Verification\"\n    A1[\"User Submits Registration(Email, Password)\"] --> A2[\"Validate Input(Format, Policy)\"]\n    A2 --> A3{\"Valid?\"}\n    A3 -->|\"Yes\"| A4[\"Create Account(Pending Verification)\"]\n    A3 -->|\"No\"| A5[\"Inform Validation Errors\"]\n    A4 --> A6[\"Send Verification Email(Link, 24h Expiry)\"]\n    A6 --> A7[\"User Clicks Verification Link\"]\n    A7 --> A8{\"Token Valid and Not Expired?\"}\n    A8 -->|\"Yes\"| A9[\"Mark Email Verified\"]\n    A8 -->|\"No\"| A10[\"Inform Link Invalid or Expired\"]\n  end\n\n  subgraph \"Login and Session Management\"\n    B1[\"User Submits Login(Email, Password)\"] --> B2[\"Validate Credentials\"]\n    B2 --> B3{\"Successful?\"}\n    B3 -->|\"Yes\"| B4[\"Issue Access Token(20m)\"]\n    B3 -->|\"Yes\"| B5[\"Issue Refresh Token(30d, Rotating)\"]\n    B3 -->|\"No\"| B6[\"Increment Failure Counter and Inform\"]\n    B4 --> B7[\"Authorized Access to Own Resources\"]\n    B5 -.-> B8[\"Refresh Flow: Rotate Refresh Token\"]\n    B8 -.-> B4\n  end\n```\n\n## Core Authentication Functions (register, login, logout, verify email, reset password, change password, revoke sessions)\nAll applicable requirements use EARS.\n\n### Registration\n- WHEN a person submits registration details (email, password), THE todoApp SHALL validate format and enforce password policy.\n- IF registration input violates policy, THEN THE todoApp SHALL present the specific validation reason without exposing sensitive checks.\n- WHEN registration is valid, THE todoApp SHALL create the account in unverified status.\n- WHEN an account is created, THE todoApp SHALL send a verification message containing a time‑limited link.\n- THE todoApp SHALL set verification link validity to 24 hours from issuance.\n- WHERE a verification link expires, THE todoApp SHALL allow resend requests up to 3 times within 24 hours.\n\n### Login\n- WHEN a person submits email and password, THE todoApp SHALL validate credentials and provide success or failure within 2 seconds perceived by the user.\n- IF credentials are valid and the account is eligible, THEN THE todoApp SHALL issue an access token (valid 20 minutes) and a refresh token (valid 30 days, rotating on use).\n- IF credentials are invalid, THEN THE todoApp SHALL present a generic failure message that does not disclose which field failed and SHALL encourage secure recovery.\n- WHILE an account is locked under security policy, THE todoApp SHALL deny login and present the unlock time or procedure.\n\n### Logout\n- WHEN a signed‑in user requests logout, THE todoApp SHALL immediately invalidate the active session for that device.\n- WHERE a user chooses “log out from all devices”, THE todoApp SHALL immediately revoke all active sessions and refresh tokens for that user.\n\n### Email Verification\n- WHEN a person clicks a verification link, THE todoApp SHALL validate token integrity and expiry.\n- IF the link is valid and not expired, THEN THE todoApp SHALL mark the account email as verified.\n- IF the link is invalid or expired, THEN THE todoApp SHALL inform verification failure and provide a resend path.\n\n### Reset Password\n- WHEN a person requests password reset by providing an email, THE todoApp SHALL return a standard confirmation that does not disclose whether the email is registered.\n- WHEN reset instructions are dispatched, THE todoApp SHALL attempt delivery within 60 seconds under normal conditions.\n- THE todoApp SHALL limit password reset link validity to 1 hour from issuance.\n- IF a reset token is valid and unexpired, THEN THE todoApp SHALL enforce the current password policy on the new password and, on success, SHALL revoke all existing sessions with an option to preserve the current device session at the user’s choice.\n\n### Change Password (Authenticated)\n- WHEN a signed‑in user requests a password change, THE todoApp SHALL validate the current password and the new password against policy.\n- IF validation succeeds, THEN THE todoApp SHALL update the password and revoke existing device sessions with an option to preserve the current device session at the user’s choice.\n\n### Revoke Sessions\n- WHEN a user performs “revoke all sessions”, THE todoApp SHALL immediately invalidate all active access and refresh tokens for that user.\n- WHEN an administrator revokes a specific user’s sessions for safety or policy reasons, THE todoApp SHALL immediately invalidate all of that user’s sessions and notify the user through an approved communication channel.\n\n## User Role Structure\n- Roles in scope: user, admin.\n- Role hierarchy: admin has elevated privileges relative to user but remains bound by accountability, privacy, and least‑privilege rules.\n- Unauthenticated: a state (guest) with no access to protected resources; not a role.\n\n## Role Definitions and Capabilities\n\n### user\n- Purpose: authenticated end user managing only their own todo items and account.\n- Can: create, read, update, complete, and delete personal items; manage own profile and security; list and revoke own sessions; export own data; delete own account subject to lifecycle policy; request password reset; change password; verify email.\n- Cannot: access or modify other users’ data or sessions; view audit logs; view aggregated analytics; change service‑wide settings; assign roles.\n- Business‑level JWT claims: userId; role=\"user\"; permissions=[\"todo:own:read\", \"todo:own:write\", \"account:own:manage\", \"session:own:manage\", \"export:own\"].\n\n### admin\n- Purpose: administrative user performing oversight for support and policy enforcement.\n- Can: suspend or reactivate user accounts with recorded reason; revoke user sessions; assist with account recovery via approved flows; access aggregated analytics; access audit trails; configure service‑wide settings within policy; trigger user data export upon verified lawful request.\n- Cannot: view or retrieve user passwords; access user content beyond the minimum necessary for support/policy enforcement without explicit justification; impersonate users without an approved process.\n- Business‑level JWT claims: userId; role=\"admin\"; permissions=[\"user:any:manage\", \"session:any:manage\", \"analytics:aggregate:view\", \"audit:trail:view\", \"settings:service:manage\"].\n\n## Permission Matrix (actions by role)\nNote: “Unauthenticated” is a state, not a role.\n\n| Action | Unauthenticated | user | admin |\n|-------|------------------|------|-------|\n| Register account | ✅ | ❌ | ❌ |\n| Login | ✅ | ❌ | ❌ |\n| Verify email | ✅ (via link) | ✅ | ✅ (resend support) |\n| View own todos | ❌ | ✅ | ✅ (for support with justification) |\n| Create/update/delete own todos | ❌ | ✅ | ✅ (for support with justification) |\n| View another user’s todos | ❌ | ❌ | ❌ (unless authorized support action) |\n| View own profile/account | ❌ | ✅ | ✅ |\n| Update own profile/account | ❌ | ✅ | ✅ (for support with authorization) |\n| Change own password | ❌ | ✅ | ✅ |\n| Request password reset | ✅ | ✅ | ✅ (on behalf of user) |\n| List own sessions | ❌ | ✅ | ✅ |\n| Revoke own sessions | ❌ | ✅ | ✅ |\n| Revoke another user’s sessions | ❌ | ❌ | ✅ |\n| Suspend/reactivate user account | ❌ | ❌ | ✅ |\n| Delete own account | ❌ | ✅ | ✅ (upon lawful request) |\n| Access aggregated analytics | ❌ | ❌ | ✅ |\n| Access audit logs | ❌ | ❌ | ✅ |\n| Configure service‑wide settings | ❌ | ❌ | ✅ |\n\n## Session and Token Management (business rules)\n- THE todoApp SHALL use JWT for access and refresh tokens for session representation.\n- THE todoApp SHALL issue access tokens with a validity of 20 minutes.\n- THE todoApp SHALL issue refresh tokens with a validity of 30 days and rotate them on each successful refresh, immediately invalidating the prior refresh token.\n- THE todoApp SHALL bind each session to a logical device/session identifier to enable session listing and selective revocation.\n- WHERE a user changes password, THE todoApp SHALL revoke all existing sessions and refresh tokens, with an option to preserve the current device session only when explicitly chosen by the user.\n- WHERE an administrator enforces a password reset or security hold, THE todoApp SHALL revoke all sessions for that user without exception.\n- THE todoApp SHALL limit concurrent active sessions per user to 10; attempts to establish an 11th SHALL require the user to revoke at least one existing session or accept automatic revocation of the oldest idle session.\n- THE todoApp SHALL provide session metadata for user viewing: creation time, last activity time, device label (if provided by the user), and approximate location derived from coarse signals where permitted by policy.\n- THE todoApp SHALL require recent re‑authentication (within the last 15 minutes) before sensitive actions such as password change, email change, account deletion, or export of personal data.\n- THE todoApp SHALL treat token storage location as a developer decision, requiring that storage be resistant to common attacks appropriate to the platform.\n- THE todoApp SHALL include in each JWT at minimum: userId, role, and a permissions array sufficient for authorization decisions.\n\n## Access Control Rules and Examples (EARS)\n- THE todoApp SHALL enforce least privilege so users access only resources they own unless an administrative support action is justified and recorded.\n- WHEN an unauthenticated subject requests a protected resource, THE todoApp SHALL deny access and guide the subject to authenticate or verify email.\n- WHEN a user attempts to read, modify, or delete another user’s resources, THE todoApp SHALL deny access without revealing resource existence.\n- WHEN an administrator suspends or reactivates an account, THE todoApp SHALL record the reason and notify the affected user.\n- WHEN an administrator must view user data for support, THE todoApp SHALL permit the minimum necessary access within an approved process and SHALL record all actions in audit logs.\n- IF an account email is unverified, THEN THE todoApp SHALL restrict sensitive features (for example, export or account deletion) and guide the user to complete verification first.\n- WHERE abnormal activity is detected by policy (for example, repeated failed logins), THE todoApp SHALL apply additional checks or temporary limits such as cooldowns or step‑up verification.\n\n## Account Lifecycle (creation, verification, suspension, deletion)\n\n### Creation\n- WHEN creating an account, THE todoApp SHALL use email as the unique contact identifier and enforce the current password policy.\n- THE todoApp SHALL limit registration attempt frequency to prevent automated abuse using policy‑based thresholds (for example, per IP or per domain).\n\n### Verification\n- THE todoApp SHALL allow verification link resend subject to 3 requests within any 24‑hour window.\n- IF verification is not completed within 7 days, THEN THE todoApp SHALL require verification at the next login before granting access to sensitive features.\n- WHERE an account remains unverified for 14 days, THE todoApp SHALL purge the unverified account and associated artifacts during the next scheduled purge cycle.\n\n### Suspension\n- WHEN a user requests voluntary deactivation, THE todoApp SHALL restrict sign‑in and convert the account to a reversible inactive state according to retention policy.\n- WHEN an administrator suspends an account for policy violations, THE todoApp SHALL terminate all active sessions immediately and record suspension reason, start time, and review schedule.\n- WHILE an account is suspended, THE todoApp SHALL block write operations and sensitive actions and MAY allow read access to security pages sufficient to complete recovery.\n\n### Deletion\n- WHEN a verified user confirms account deletion, THE todoApp SHALL initiate a 14‑day grace period during which the user may cancel deletion.\n- WHILE the grace period is active, THE todoApp SHALL present a deletion‑cancellation option at sign‑in and restrict normal write operations.\n- IF legal retention obligations apply to specific records, THEN THE todoApp SHALL defer deletion of those records while deleting all other user data and SHALL inform the user within policy limits.\n\n## Security and Privacy Considerations\n\n### Password Policy\n- THE todoApp SHALL require a minimum password length of 8 characters and SHALL accept long passphrases without requiring special characters.\n- THE todoApp SHALL prevent use of commonly compromised passwords using a banned list.\n- THE todoApp SHALL prevent reuse of the previous 5 passwords.\n\n### Rate Limiting and Lockouts\n- THE todoApp SHALL impose a cooldown after 10 failed login attempts within 10 minutes for an account or from a single source; cooldown duration SHALL be at least 5 minutes with clear guidance.\n- THE todoApp SHALL throttle password reset requests to a maximum of 5 per 24 hours per account.\n\n### Privacy by Design\n- THE todoApp SHALL avoid revealing whether an email is registered in responses to registration and password reset requests.\n- THE todoApp SHALL record audit events without storing sensitive secrets (for example, no plaintext passwords, no full tokens in logs).\n- THE todoApp SHALL store audit timestamps in UTC while displaying times to users according to their locale settings where applicable.\n\n### Notifications and Messaging\n- THE todoApp SHALL send verification and password reset emails within 60 seconds under normal operating conditions.\n- THE todoApp SHALL ensure messages avoid sensitive data and provide clear next steps for recovery.\n\n### Administrative Safeguards\n- THE todoApp SHALL require administrators to provide a reason when performing user‑impacting actions (suspension, session revocation, role modification).\n- THE todoApp SHALL restrict access to aggregated analytics to administrators only and ensure data is de‑identified at the individual level.\n\n## Audit and Activity Logging (business expectations)\n- THE todoApp SHALL record at minimum the following categories: registration, email verification initiation/completion, login success/failure, logout, password reset request/completion, password change, session creation/refresh/revocation, account suspension/reactivation, account deletion request/completion, admin configuration changes, and elevated user‑data access by administrators.\n- WHEN an audit event is recorded, THE todoApp SHALL include event type, actor (user or admin), timestamp (UTC), target (if applicable), outcome (success/failure), and reason (if applicable).\n- WHERE an administrator accesses user data, THE todoApp SHALL classify the event as high‑risk and route it to a review queue.\n- THE todoApp SHALL provide each user with access to their own audit history for security‑relevant actions (for example, logins, password changes, session revocations).\n\n## Related Documents\n- Service vision and business model: [todoApp Service Overview](./01-todoApp-service-overview.md)\n- End‑to‑end feature behaviors: [todoApp Functional Requirements](./03-todoApp-functional-requirements.md)\n- Failure behaviors and recovery: [todoApp Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md)\n- Performance, availability, and privacy expectations: [todoApp Non‑Functional Requirements](./08-todoApp-non-functional-requirements.md)\n\n---\n\n## Appendix: Additional EARS Examples for Edge Cases\n- IF a password reset token was already used, THEN THE todoApp SHALL treat the token as invalid and guide the user to request a new one.\n- IF abnormal refresh activity is observed from the same device/session, THEN THE todoApp SHALL terminate the session and require re‑authentication.\n- WHERE a user saves a custom label for a device, THE todoApp SHALL display the label in the session list.\n- WHEN an account deletion grace period ends, THE todoApp SHALL complete permanent deletion and notify the user through the configured channel.\n- WHILE an account is suspended, THE todoApp SHALL block authentication to protected features and present suspension reason and review schedule at the next sign‑in attempt.\n"},{"reason":"Capture the minimum functional scope for a Todo list and write testable business requirements for developers.","filename":"03-todoApp-functional-requirements.md","documentType":"requirement","outline":["Overview of Minimal Feature Set","Todo Item Management (Create, Read, Update, Delete)","Completion and Reopening of Items","Optional Attributes (description, due date)","Filtering and Sorting (business expectations)","Time Zone and Localization Behaviors","Data Ownership and Privacy Rules","Import/Export and Data Portability (optional)","Business Constraints and Limits","Acceptance Criteria (EARS format)"],"audience":"development team","keyQuestions":["What minimum features must the Todo service support?","What fields are required for a todo item and what validations apply?","How should filtering and sorting work from a business perspective?","What are the acceptance criteria for the MVP scope?"],"detailLevel":"detailed specification","relatedDocuments":["01-todoApp-service-overview.md","02-todoApp-user-roles-and-authentication.md","06-todoApp-business-rules.md","07-todoApp-error-handling-and-exception-scenarios.md","08-todoApp-non-functional-requirements.md"],"constraints":["Use EARS format wherever applicable","Do not define any API endpoints or database schemas","Keep scope minimal while ensuring a complete, usable product"],"content":"# todoApp Functional Requirements (MVP)\n\n## Overview of Minimal Feature Set\n\n- Personal Todo lists scoped to authenticated users with strict item ownership and privacy by default.\n- Core item operations: create, read (list and detail), update, delete to trash, restore, and purge per retention policy.\n- State transitions for completion and reopening with timestamp semantics.\n- Optional attributes: description and due date (date-only semantics by default).\n- Business-level filtering and sorting for lists with stable defaults and user-selected variations.\n- Time zone and localization rules: user’s profile time zone governs evaluation and display; DST-safe semantics.\n- Role-aware access control in business terms aligned with the roles and authentication specification.\n- Optional data export for portability (import out-of-scope for MVP).\n- Explicit constraints and limits on fields, inventory, and operation frequency.\n\nRelated references:\n- Business context and KPIs: [todoApp Service Overview](./01-todoApp-service-overview.md)\n- Roles, authentication, and permissions: [todoApp User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md)\n- Cross-cutting rules and state logic: [todoApp Business Rules and Constraints](./06-todoApp-business-rules.md)\n- Error behavior and recovery: [todoApp Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md)\n- Performance, security, and availability targets: [todoApp Non-Functional Requirements](./08-todoApp-non-functional-requirements.md)\n\n## Principles and Scope Notes\n\n- Minimal scope focuses on personal task management with item-level operations. No collaboration, tags, subtasks, reminders, or external integrations in MVP.\n- Business-only specification: requirements expressed in natural language using EARS where applicable; no API endpoints, data schemas, or technology choices.\n- Roles in scope: \"user\" (owns personal items) and \"admin\" (limited oversight for support/policy with audit and least privilege).\n\n## User Roles and Access Context (Business Perspective)\n\n- \"user\": Authenticated end user who can manage only owned items and personal account.\n- \"admin\": Administrative actor who may access a user’s items only for legitimate support or policy enforcement with strict accountability.\n\nEARS requirements:\n- THE todoApp SHALL restrict access to todo items by ownership so that a \"user\" can create, read, update, complete/reopen, trash/restore, and purge only their own items.\n- WHERE administrative oversight is justified for support or policy enforcement, THE todoApp SHALL allow \"admin\" to access the minimum necessary user items for the task under audit.\n\n## Todo Item Management (Create, Read, Update, Delete/Trash/Restore/Purge)\n\n### Data Elements (Business-Level)\n- Title (required): Short text identifying the item.\n- Description (optional): Extended text elaborating the task.\n- Due Date (optional): Target completion date interpreted in the user’s time zone; default date-only semantics (end-of-day).\n- Status (system-managed): \"open\" or \"completed\".\n- Created Time / Updated Time (system-managed): Timestamps captured on create and on each successful edit.\n- Completion Time (system-managed): Timestamp captured when status becomes \"completed\" and cleared on reopen.\n- Owner (system-managed): The user who created the item.\n- Deletion State (system-managed): \"active\" (not trashed), \"trashed\" (soft-deleted), or \"purged\" (irreversible).\n\n### Validation Rules (Business-Level)\n- Title length: 1 to 120 Unicode characters after trimming leading/trailing whitespace; control characters not allowed.\n- Description length: 0 to 2,000 Unicode characters after trimming; control characters not allowed.\n- Due Date range: Not earlier than 1 January 1970 in the user’s time zone; not more than 10 years in the future.\n\nEARS requirements (creation and update):\n- WHEN a \"user\" submits a new todo with a valid title, THE todoApp SHALL create the item with status \"open\" and set Created Time and Updated Time.\n- IF a title is missing or its trimmed length is 0, THEN THE todoApp SHALL reject creation and instruct to provide a valid title of 1–120 characters without control characters.\n- IF a title exceeds 120 characters, THEN THE todoApp SHALL reject creation and instruct to shorten the title to 120 characters or fewer.\n- IF a description exceeds 2,000 characters, THEN THE todoApp SHALL reject creation or update and instruct to reduce the description to 2,000 characters or fewer.\n- IF a due date is provided earlier than 1 January 1970 (user-local) or more than 10 years in the future, THEN THE todoApp SHALL reject the due date and prompt selection of a valid date.\n- THE todoApp SHALL update Updated Time on any successful edit of title, description, due date, or status.\n- THE todoApp SHALL allow a \"user\" to read (list and detail) only items owned by that user.\n- WHERE an \"admin\" views a user’s items for support, THE todoApp SHALL indicate the acting role and subject user context.\n\n### Concurrency and Conflict Handling\n\nEARS requirements:\n- IF a concurrent modification is detected during update, THEN THE todoApp SHALL prevent silent overwrite and require the user to refresh or reconcile prior to saving.\n- WHEN reconciliation is required after a conflict, THE todoApp SHALL present guidance that enables retry with the latest version without losing the user’s attempted edits.\n\n### Deletion, Restoration, and Purging\n\nDefinitions:\n- Trash (soft-delete): Move an item from active/completed to trashed; hidden from normal listings; restorable within retention window.\n- Restore: Return an item from trashed to active state; retain prior fields other than deletion metadata.\n- Purge (hard delete): Irreversibly remove a trashed item after retention or upon explicit user purge.\n\nEARS requirements:\n- WHEN a \"user\" deletes an item they own, THE todoApp SHALL move the item to \"trashed\" and exclude it from normal lists while starting a 30-day retention countdown.\n- WHILE an item is \"trashed\" within retention, THE todoApp SHALL allow the owner to restore it to the \"open\" status with all fields preserved and clear deletion metadata.\n- WHEN a \"trashed\" item reaches the retention deadline, THE todoApp SHALL purge it automatically in the next scheduled purge cycle.\n- WHEN a \"user\" explicitly purges a \"trashed\" item, THE todoApp SHALL remove it irreversibly and exclude it from all user-accessible views.\n- IF a \"user\" attempts to view or modify another user’s trashed items, THEN THE todoApp SHALL deny access and avoid revealing existence.\n\n### Pagination and List Size (Business Expectations)\n\nEARS requirements:\n- THE todoApp SHALL present lists in pages of up to 20 items by default, ordered by the default sort policy.\n- WHERE a user chooses a different page size, THE todoApp SHALL support 10, 20, 50, or 100 items per page and remember the preference per user.\n\n## Completion and Reopening of Items\n\nDefinitions:\n- Complete: Transition status from \"open\" to \"completed\" and record Completion Time.\n- Reopen: Transition status from \"completed\" to \"open\" and clear Completion Time.\n\nEARS requirements:\n- WHEN a \"user\" marks an \"open\" item as completed, THE todoApp SHALL set status to \"completed\" and record Completion Time.\n- IF an item is already \"completed\" and a user attempts to complete it again, THEN THE todoApp SHALL keep status unchanged and inform that the item is already completed.\n- WHEN a \"user\" reopens a \"completed\" item, THE todoApp SHALL set status to \"open\" and clear Completion Time.\n- IF a \"user\" completes an item with a due date in the past, THEN THE todoApp SHALL allow completion and retain the past due date for historical accuracy.\n- THE todoApp SHALL allow editing of title, description, and due date regardless of status unless restricted by policy.\n\n## Optional Attributes (description, due date)\n\nEARS requirements:\n- WHERE a description is provided, THE todoApp SHALL store and present it with the item.\n- WHERE a due date is provided as a date-only value, THE todoApp SHALL interpret it as due by end-of-day in the user’s time zone.\n- IF a due date is removed by the user, THEN THE todoApp SHALL persist the item without a due date and update Updated Time.\n- WHERE no due date is provided, THE todoApp SHALL treat the item as having no scheduling constraint.\n\n## Filtering and Sorting (business expectations)\n\nSupported filters (combinable):\n- Status: open, completed, trashed (optional view), or all non-trashed.\n- Due date window: today, tomorrow, this week (Mon–Sun in user’s locale), next week, overdue (due date earlier than today), or no due date.\n- Text match: case-insensitive contains over title and description.\n- Created/Updated date ranges: calendar-based, using the user’s time zone.\n\nSupported sorting:\n- Default: due date ascending, items without due date ordered last; ties by created time descending.\n- Alternatives: due date descending; created time descending; updated time descending; title ascending.\n\nEARS requirements:\n- THE todoApp SHALL allow a \"user\" to filter by status, due date window, text match, and date ranges simultaneously.\n- THE todoApp SHALL apply the default sorting when no explicit sort is chosen: due date ascending with items without due date last and ties by created time descending.\n- WHERE a user selects a different sort, THE todoApp SHALL apply the selected order consistently across pages.\n- IF filters yield zero results, THEN THE todoApp SHALL present an empty result with guidance to adjust filters.\n- WHILE filters are active, THE todoApp SHALL maintain the active filter set when a user navigates between pages of results.\n\n## Time Zone and Localization Behaviors\n\nBusiness baseline for MVP:\n- Default service time zone: Asia/Seoul (KST, UTC+9) when a profile time zone is not set.\n- User time zone preference: Every date evaluation and display uses the user’s profile time zone if available.\n- Calendar day semantics: Due date represents obligation by the end of the calendar day in the user’s time zone.\n\nEARS requirements:\n- THE todoApp SHALL display Created Time, Updated Time, and Completion Time in the user’s profile time zone where available, otherwise in Asia/Seoul (KST, UTC+9).\n- WHEN determining whether an item is overdue, THE todoApp SHALL compare the due date’s end-of-day boundary to the current date in the user’s time zone.\n- WHERE a user changes the profile time zone, THE todoApp SHALL re-interpret and display existing due dates and timestamps in the new time zone without altering original calendar date values.\n- IF a due date falls on a day affected by DST in the chosen time zone, THEN THE todoApp SHALL maintain end-of-day semantics consistently and adjust non-existent local times to the next valid time.\n\n## Data Ownership and Privacy Rules\n\nEARS requirements:\n- THE todoApp SHALL associate each item with exactly one owner (the creator) and treat it as private by default.\n- IF a \"user\" attempts to view or modify another user’s items (including trashed items), THEN THE todoApp SHALL deny access and avoid revealing existence.\n- WHERE an \"admin\" performs support actions on a user’s items, THE todoApp SHALL record the acting role context and restrict visibility to the minimum necessary data.\n\n## Import/Export and Data Portability (optional)\n\nScope: Export in scope; import out of scope for MVP.\n\nEARS requirements:\n- WHERE a \"user\" requests an export, THE todoApp SHALL provide a file containing all owned items and attributes (title, description, due date if present, status, Created/Updated/Completion Times, deletion state where applicable) in a commonly portable format.\n- IF an export is requested while no items exist, THEN THE todoApp SHALL produce a valid export file containing zero items and an indication that the list is empty.\n- WHERE an export is processed asynchronously, THE todoApp SHALL notify the user upon completion using available communication channels defined in policy.\n\n## Business Constraints and Limits\n\nEARS requirements:\n- THE todoApp SHALL limit title length to 120 characters and description length to 2,000 characters.\n- THE todoApp SHALL limit due dates to within 10 years into the future and not earlier than 1 January 1970 in the user’s time zone.\n- THE todoApp SHALL limit items per page to 10, 20, 50, or 100 with a default of 20.\n- THE todoApp SHALL allow up to 5,000 active (non-trashed) items per user; attempts to exceed this SHALL be denied with guidance to archive, delete, or purge.\n- THE todoApp SHALL allow up to 5,000 trashed items retained per user; where this cap is exceeded, older trashed items SHALL be purged first.\n- THE todoApp SHALL limit total items per user (all states except purged) to 10,000.\n- WHERE operational stability requires, THE todoApp SHALL throttle per-user operation frequency as follows: create up to 30 items/minute; update up to 60 items/minute; complete/reopen up to 120 state changes/minute; trash/restore up to 60 operations/minute; purge up to 30 operations/minute.\n\n## Process Flows (Business-Level)\n\nThe following Mermaid diagrams visualize end-to-end business flows in LR orientation; they express business behavior, not technical design.\n\n### Create Todo Item\n```mermaid\ngraph LR\n  A[\"User Initiates Create\"] --> B[\"Enter Title/Optional Fields\"]\n  B --> C[\"Validate Business Rules\"]\n  C --> D{\"Valid?\"}\n  D -->|\"Yes\"| E[\"Create Item(Status=open)\"]\n  E --> F[\"Set Created/Updated Times\"]\n  F --> G[\"Show Item in List\"]\n  D -->|\"No\"| H[\"Show Validation Guidance\"]\n```\n\n### Complete and Reopen Flow\n```mermaid\ngraph LR\n  A[\"User Selects Item\"] --> B{\"Current Status?\"}\n  B -->|\"open\"| C[\"Mark Completed\"]\n  C --> D[\"Record Completion Time\"]\n  D --> E[\"Reflect Status=completed\"]\n  B -->|\"completed\"| F[\"Reopen Item\"]\n  F --> G[\"Clear Completion Time\"]\n  G --> H[\"Reflect Status=open\"]\n```\n\n### Delete, Restore, and Purge Flow\n```mermaid\ngraph LR\n  A[\"User Selects Item\"] --> B{\"Delete?\"}\n  B -->|\"Yes\"| C[\"Move To Trashed\"]\n  C --> D[\"Hide From Normal Lists\"]\n  C --> E{\"Restore Within Retention?\"}\n  E -->|\"Yes\"| F[\"Restore To Open\"]\n  F --> G[\"Clear Deletion Metadata\"]\n  E -->|\"No\"| H[\"Eligible For Automatic Purge\"]\n  H --> I[\"Purge Irreversibly\"]\n```\n\n### Filtering and Sorting Flow\n```mermaid\ngraph LR\n  A[\"User Opens List\"] --> B[\"Apply Default Sort\"]\n  B --> C[\"User Sets Filters\"]\n  C --> D[\"Combine Filters\"]\n  D --> E[\"Fetch Page(Size per Preference)\"]\n  E --> F{\"Any Results?\"}\n  F -->|\"Yes\"| G[\"Display Items\"]\n  F -->|\"No\"| H[\"Display Empty State Guidance\"]\n```\n\n## Acceptance Criteria (EARS format)\n\nCreation\n- WHEN a \"user\" submits a new item with a valid title (1–120 chars), THE todoApp SHALL create the item with status \"open\" and display it in the list according to current sorting.\n- IF the title is invalid (missing, zero-length after trim, or >120 chars), THEN THE todoApp SHALL block creation and present guidance to correct the title without losing entered data.\n- WHERE a description up to 2,000 chars is provided, THE todoApp SHALL save it verbatim subject to control character restrictions.\n- IF a due date is earlier than 1970-01-01 (user-local) or more than 10 years in the future, THEN THE todoApp SHALL reject the due date with clear guidance.\n\nReading\n- THE todoApp SHALL present items in pages using the user’s preferred page size (default 20), sorted per the active sort rule.\n- WHEN a \"user\" filters by status=\"open\" and due date window=\"today\", THE todoApp SHALL return only the user’s open items due today in the user’s time zone.\n- IF a filter combination results in no matches, THEN THE todoApp SHALL display an empty state with guidance to adjust filters.\n\nUpdating and Conflicts\n- WHEN a \"user\" edits fields, THE todoApp SHALL validate against creation rules and update Updated Time upon success.\n- IF validation fails on update, THEN THE todoApp SHALL preserve existing data and present guidance to correct inputs.\n- IF a concurrent modification is detected, THEN THE todoApp SHALL prevent silent overwrite and require refresh or reconciliation before saving.\n\nDeletion, Restoration, and Purge\n- WHEN a \"user\" deletes an owned item, THE todoApp SHALL move it to \"trashed\" and hide it from normal lists while starting the retention window.\n- WHILE an item is in \"trashed\" state and within retention, THE todoApp SHALL allow restoration to the \"open\" status with prior content intact.\n- WHEN the retention period elapses, THE todoApp SHALL purge the item in the next scheduled purge and remove it irreversibly.\n- WHEN a \"user\" explicitly purges a \"trashed\" item, THE todoApp SHALL remove it irreversibly and it SHALL not appear in any listing or filter thereafter.\n\nCompletion/Reopen\n- WHEN a \"user\" completes an open item, THE todoApp SHALL set status to \"completed\" and record Completion Time; the item SHALL still appear according to filters and sorting.\n- WHEN a \"user\" reopens a completed item, THE todoApp SHALL set status to \"open\" and clear Completion Time; the item SHALL re-enter lists according to filters and sorting.\n\nFiltering and Sorting\n- THE todoApp SHALL support filters: status (open/completed/trashed or non-trashed), due date windows (today/tomorrow/this week/next week/overdue/no due date), text match, and created/updated date ranges.\n- THE todoApp SHALL support sorts: due date ascending (default, none last; tie by created time desc), due date descending, created time desc, updated time desc, title asc.\n\nTime Zone\n- THE todoApp SHALL treat date-only due dates as end-of-day obligations in the user’s time zone and compute overdue accordingly.\n- WHERE no profile time zone is set, THE todoApp SHALL default to Asia/Seoul (KST, UTC+9) for time calculations and displays.\n- IF a due date falls within a DST gap, THEN THE todoApp SHALL adjust to the next valid local time and maintain end-of-day semantics for date-only values.\n\nOwnership & Privacy\n- THE todoApp SHALL ensure a user can access only their own items; admin may access items for support per policy with audit.\n- IF cross-user access is attempted by a non-admin, THEN THE todoApp SHALL deny and present a privacy message.\n\nExport\n- WHERE a user requests export, THE todoApp SHALL produce a portable file containing all owned items and attributes, including timestamps, status, and deletion state, consistent with current time zone display rules.\n- IF no items exist, THEN THE todoApp SHALL produce a valid export file with zero items and a clear indication of emptiness.\n\nLimits and Rate Controls\n- THE todoApp SHALL enforce per-user maxima of 5,000 active items, 5,000 trashed items (purging oldest first when exceeded), and 10,000 total items excluding purged.\n- THE todoApp SHALL enforce per-minute operation limits for create (30), update (60), complete/reopen (120), trash/restore (60), and purge (30), presenting user-friendly guidance when limits are reached.\n\n## Traceability and Related Documents\n\n- Business vision and KPIs: [todoApp Service Overview](./01-todoApp-service-overview.md)\n- Roles, permissions, and authentication: [todoApp User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md)\n- Cross-cutting validations, state logic, and retention: [todoApp Business Rules and Constraints](./06-todoApp-business-rules.md)\n- User-facing failures and recovery: [todoApp Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md)\n- Performance and availability targets: [todoApp Non-Functional Requirements](./08-todoApp-non-functional-requirements.md)\n"},{"reason":"Describe who uses the system and the primary/secondary scenarios to guide requirement prioritization and testing.","filename":"04-todoApp-user-stories-and-personas.md","documentType":"user-story","outline":["Personas","Primary Scenarios (Happy Paths)","Secondary Scenarios and Edge Cases","Role-based Scenarios (user, admin)","Acceptance Tests in Natural Language (EARS where applicable)","Success Indicators per Scenario"],"audience":"product managers","keyQuestions":["Who are the typical users of this service?","What scenarios are most critical to support?","What edge cases must be considered for MVP?"],"detailLevel":"moderate detail","relatedDocuments":["03-todoApp-functional-requirements.md","05-todoApp-user-flows.md","07-todoApp-error-handling-and-exception-scenarios.md"],"constraints":["Avoid UI/UX design details and screen layouts","Use natural language and business logic only","Write acceptance tests in EARS where possible"],"content":"# todoApp User Stories and Personas\n\n## Personas\n\n### Persona 1: Focused Professional (User)\n- Profile: Employed knowledge worker balancing multiple projects and deadlines.\n- Goals: Capture tasks quickly, prioritize by urgency, complete tasks on schedule, review what’s done.\n- Motivations: Reduce mental load, maintain reliability, demonstrate progress.\n- Pain Points: Task sprawl across tools, forgetting deadlines, difficulty filtering by status.\n- Environment: Desktop during work hours; mobile on the go. Intermittent connectivity possible.\n- Success Measures: Can capture a task in under 10 seconds; can find any task within 5 seconds via filtering or search-like mechanisms; misses no critical due date over a week.\n\n### Persona 2: Organized Student (User)\n- Profile: University student juggling classes, assignments, and part-time work.\n- Goals: Track assignments by due dates, mark completed work, reopen items when requirements change.\n- Motivations: Stay ahead of deadlines, visualize workload by due date, avoid penalties.\n- Pain Points: Overdue tracking confusion, accidental deletions, unclear item states.\n- Environment: Mobile-first; occasional desktop sessions in labs or dorm.\n- Success Measures: Keeps assignment list current daily; can see upcoming items due this week within 2 seconds; can undo a completion or correct a mistake without data loss.\n\n### Persona 3: Casual Planner (User)\n- Profile: Non-technical individual using the app occasionally for personal reminders.\n- Goals: Add simple reminders, check off completed items, clear clutter periodically.\n- Motivations: Minimal friction, clarity of state (open vs completed), confidence items aren’t lost.\n- Pain Points: Complexity overload, needlessly required fields, confusing error messages.\n- Environment: Mobile with variable connectivity.\n- Success Measures: Zero confusion about item state; never blocked by optional fields; can delete or archive clutter quickly.\n\n### Persona 4: Support Administrator (Admin)\n- Profile: Service operator ensuring policy compliance and user support.\n- Goals: Assist users with account issues, enforce content and safety policies, monitor basic health indicators at a business level.\n- Motivations: Maintain trust and safety, minimize support burden, resolve issues quickly.\n- Pain Points: Ambiguity around user permissions, incomplete audit trails, difficulty revoking sessions when necessary.\n- Environment: Desktop in secure environment.\n- Success Measures: Can locate a user account within seconds; can revoke sessions and suspend/restore accounts swiftly with clear outcomes; minimal escalations.\n\n## User Stories per Persona\n\n### Focused Professional\n- As a focused professional, I want to capture a new task with only a title so that I can record intent without friction.\n- As a focused professional, I want to filter my list by status and due window so that I can focus on what is actionable today.\n- As a focused professional, I want to complete and later reopen a task so that I can correct mistakes without losing history.\n- As a focused professional, I want to find a specific task quickly so that I can resume work within seconds.\n\nAcceptance intent (business expectations):\n- WHEN a title-only todo is submitted, THE system SHALL create it within 2 seconds and show it in the list.\n- WHEN filters for status and due window are applied, THE system SHALL display only matching items consistently within the session.\n- WHEN a completed task is reopened, THE system SHALL revert the state and remove completion timestamp immediately.\n- WHEN a search-like filter is used, THE system SHALL locate a target item within 5 seconds as perceived by the user.\n\n### Organized Student\n- As an organized student, I want to add a due date to assignments so that I can plan ahead.\n- As an organized student, I want to see items due this week so that I can balance workload.\n- As an organized student, I want to undo a completion so that I can reflect changing requirements.\n- As an organized student, I want to avoid losing data on accidental edits or deletions so that I maintain confidence in the system.\n\nAcceptance intent (business expectations):\n- WHEN a due date is added, THE system SHALL display the due date according to the user’s time zone.\n- WHEN a “this week” filter is set, THE system SHALL return items due within the current week.\n- WHEN a completion is undone, THE system SHALL restore state to open and clear the completion timestamp.\n- IF a deletion or edit is attempted on another user’s item, THEN THE system SHALL deny and provide a permission message.\n\n### Casual Planner\n- As a casual planner, I want minimal required fields so that adding reminders is effortless.\n- As a casual planner, I want clear status labels so that I always know whether an item is open or completed.\n- As a casual planner, I want to remove clutter quickly so that my list stays manageable.\n\nAcceptance intent (business expectations):\n- WHEN only a title is given, THE system SHALL accept it and create the item without requiring optional fields.\n- WHEN I mark an item complete, THE system SHALL indicate completion immediately and allow easy reversal.\n- WHEN I delete an item, THE system SHALL remove it from active lists right away.\n\n### Support Administrator\n- As a support administrator, I want to revoke a user’s sessions so that security incidents can be mitigated quickly.\n- As a support administrator, I want to suspend and restore accounts so that policy compliance is enforced.\n- As a support administrator, I want visibility into account-level activity so that I can resolve support requests efficiently.\n\nAcceptance intent (business expectations):\n- WHEN revoke-all-sessions is executed for a user, THE system SHALL require re-authentication on that user’s devices within 1 minute.\n- WHEN an account suspension is applied, THE system SHALL block protected actions until restored.\n- WHEN administrative actions occur, THE system SHALL record them for audit.\n\n## Primary Scenarios (Happy Paths)\n\n### Scenario A: First-Time Registration and Email Verification (User)\n- Objective: Enable a new user to register and verify ownership of email to start using todoApp.\n- Steps (business flow):\n  1. User provides required registration information (email and password).\n  2. System records a new account in unverified state and initiates email verification.\n  3. User opens the verification link within its validity window.\n  4. System transitions account to verified state; user can sign in and use features.\n- Success Criteria: Verification instruction dispatched within 1 minute; account verified within minutes; user can sign in immediately after verification.\n\n### Scenario B: Create a New Todo (User)\n- Objective: Allow rapid creation of a minimal todo with optional enrichment.\n- Steps (business flow):\n  1. User initiates creation and supplies a title (mandatory), may add description and due date (optional).\n  2. System validates inputs and saves the item as \"open\".\n  3. System associates the item with the creator’s account and sets timestamps.\n- Success Criteria: Item appears in the user’s list immediately; optional fields remain optional without blocking.\n\n### Scenario C: Review and Filter Todos (User)\n- Objective: View own items and limit the list by status and due date expectations.\n- Steps (business flow):\n  1. User requests their todo list.\n  2. System returns items owned by the user with default ordering and business-level filtering controls (e.g., open vs completed).\n  3. User applies filters (e.g., show open only, or items due within next 7 days).\n- Success Criteria: User finds the intended item within 5 seconds; list reflects filter choices consistently.\n\n### Scenario D: Complete and Reopen a Todo (User)\n- Objective: Mark work done, with ability to reverse if needed.\n- Steps (business flow):\n  1. User marks an open item as completed.\n  2. System records completion timestamp and sets state to \"completed\".\n  3. If reopened, system removes the completion timestamp and returns state to \"open\".\n- Success Criteria: State changes are instant; history is consistent.\n\n### Scenario E: Edit a Todo (User)\n- Objective: Adjust details without causing confusion or loss.\n- Steps (business flow):\n  1. User updates title and/or optional fields.\n  2. System validates edits, saves changes, updates last-updated timestamp.\n- Success Criteria: Edits reflect immediately and persist across sessions.\n\n### Scenario F: Delete a Todo (User)\n- Objective: Remove clutter intentionally and safely.\n- Steps (business flow):\n  1. User requests deletion of one of their items.\n  2. System validates ownership and removes the item from active lists.\n- Success Criteria: Item no longer appears in active lists; user cannot access deleted item through normal navigation.\n\n### Scenario G: Administrative Session Revocation (Admin)\n- Objective: End a user’s active sessions for safety or policy reasons.\n- Steps (business flow):\n  1. Admin identifies the relevant user account.\n  2. Admin initiates revoke-all-sessions for that user.\n  3. System invalidates active user sessions.\n- Success Criteria: User’s devices require re-authentication; action is auditable.\n\n### Scenario H: Bulk Complete and Reopen (User)\n- Objective: Update the state of multiple items efficiently.\n- Steps (business flow):\n  1. User selects up to 50 items.\n  2. User triggers bulk complete or bulk reopen.\n  3. System applies state changes to all selected items that are eligible.\n- Success Criteria: Bulk operation completes within 2 seconds perceived by the user for up to 50 items; partial ineligibility is reported with clear guidance.\n\n### Scenario I: Export My Data (User)\n- Objective: Obtain a portable copy of owned todos.\n- Steps (business flow):\n  1. User requests export of own data.\n  2. System prepares a complete package of the user’s items and attributes.\n  3. System notifies the user when the export is ready.\n- Success Criteria: Export includes all owned items and attributes; delivery within a reasonable window as defined in requirements.\n\n### Scenario J: Change Time Zone Preference (User)\n- Objective: Ensure dates and times reflect local expectations after a time zone change.\n- Steps (business flow):\n  1. User changes profile time zone.\n  2. System reinterprets and displays due dates and timestamps in the new time zone.\n- Success Criteria: Intended due calendar dates remain unchanged; timestamps display consistently in the new time zone.\n\n```mermaid\ngraph LR\n  A[\"User Starts\"] --> B[\"Register Account\"]\n  B --> C[\"Email Verification Sent\"]\n  C --> D{\"Verification Link Opened?\"}\n  D -->|\"Yes\"| E[\"Account Verified\"]\n  D -->|\"No\"| F[\"Reminder/Resend Option\"]\n  E --> G[\"Create First Todo\"]\n  G --> H[\"Review & Filter List\"]\n  H --> I[\"Complete Item\"]\n  I --> J{\"Need To Reopen?\"}\n  J -->|\"Yes\"| K[\"Reopen Item\"]\n  J -->|\"No\"| L[\"Continue Working\"]\n```\n\nAdditional lifecycle overview:\n\n```mermaid\ngraph LR\n  U1[\"Start Authenticated Session\"] --> T1[\"Create Todo\"]\n  T1 --> T2[\"Edit Todo\"]\n  T2 --> T3[\"Complete Todo\"]\n  T3 --> Q1{\"Reopen Needed?\"}\n  Q1 -->|\"Yes\"| T5[\"Reopen Todo\"]\n  Q1 -->|\"No\"| T6[\"Proceed\"]\n  T5 --> T2\n  T3 --> T7[\"Delete Todo\"]\n  T7 --> T8[\"Removed from Active Views\"]\n```\n\n## Secondary Scenarios and Edge Cases\n\n- Duplicate Titles:\n  - Business Rule: Titles need not be unique; disambiguation is by context and timestamps.\n- Title Whitespace and Length:\n  - Business Rule: Leading/trailing whitespace is ignored; trimmed length must be within allowed bounds.\n- Description Length and Multi-line Text:\n  - Business Rule: Long descriptions up to the allowed limit are accepted; line breaks are preserved; executable content is not permitted.\n- Due Dates in the Past:\n  - Business Rule: Acceptable for historical capture; system reflects overdue status without blocking.\n- Daylight Saving Time (DST) and Leap Days:\n  - Business Rule: Non-existent times adjust to the next valid time; invalid calendar dates are rejected; due dates represent end-of-day obligations for date-only entries.\n- Time Zone Handling:\n  - Business Rule: Due date interpretation follows the user’s current time zone; changing time zone re-renders dates without altering intended calendar days.\n- Large Lists and Navigation:\n  - Business Expectation: Lists are responsive with pagination; ordering defaults are predictable; filters persist during navigation.\n- Concurrent Edits and Deletes:\n  - Business Rule: Prevent silent overwrites; provide guidance to refresh, reconcile, or retry when conflicts occur; if an item is deleted during edit, inform the user gracefully.\n- Session Expiration During Use:\n  - Business Rule: Persisted data remains; subsequent protected actions require re-authentication.\n- Account Suspension:\n  - Business Rule: Suspended accounts cannot perform protected actions; read-only access may be allowed per policy.\n- Rate Limiting and Abuse Prevention:\n  - Business Rule: Excessive operation frequency may be throttled; communicate limits and retry expectations clearly.\n- Export Size and Frequency:\n  - Business Rule: Exports may be rate-limited; large exports may be processed asynchronously with notification on completion.\n- Accessibility and Clarity:\n  - Business Rule: Messages use unambiguous, plain language that directs users toward successful recovery actions.\n\n## Role-based Scenarios (user, admin)\n\n### User Role: Owned-Data Operations\n- Create Todo: Creates items with required title and optional fields; items belong exclusively to the creator.\n- Read Own Todos: Views only owned items; no leakage of other users’ data.\n- Update Own Todos: Edits only owned items; state transitions are controlled (open ⇄ completed).\n- Delete Own Todos: Removes only owned items from active lists.\n- Export Own Data: Requests export of owned items subject to capacity limits.\n- Account Management: Verifies email, signs in/out, changes password, revokes own sessions.\n\n### Admin Role: Support and Policy Enforcement\n- Locate and Review User Profile: Finds accounts and reviews business-level details needed for support.\n- Revoke User Sessions: Ends all sessions for a user when safety or policy requires; action is auditable.\n- Suspend/Restore Account: Changes account status to restrict or restore access as warranted.\n- Access Aggregated Indicators: Reviews aggregate-level health indicators without exposing personal content beyond the minimum necessary for support.\n- Enforce Policy on Content: Performs support actions on items where justified (e.g., immediate removal of clearly violating content) with audit trail.\n\n## Acceptance Tests in Natural Language (EARS where applicable)\n\n### Registration and Verification\n- WHEN a new user submits valid registration information, THE system SHALL create an unverified account and send a verification instruction within 1 minute.\n- IF a user opens a valid verification link within its validity window, THEN THE system SHALL mark the account as verified immediately.\n- IF a user attempts to sign in before verifying, THEN THE system SHALL prevent access to todo features and direct the user to verify.\n\n### Create Todo\n- WHEN a verified user provides a title and submits a new todo, THE system SHALL create the item as \"open\" and associate it with that user within 2 seconds.\n- IF the user omits description and due date, THEN THE system SHALL still create the item without error.\n- IF the title length exceeds the business-defined limit, THEN THE system SHALL reject the creation with a clear message referencing the limit.\n\n### Review and Filter\n- WHEN a user requests their todo list, THE system SHALL return only items owned by that user ordered by last updated, newest first.\n- WHERE a user applies a filter to show only \"open\" items, THE system SHALL display only items with state \"open\" consistently across navigation within the same session.\n- WHERE a user filters by a due window (today, this week), THE system SHALL compute the window using the user’s time zone and display matching items only.\n\n### Complete and Reopen\n- WHEN a user marks an open item as completed, THE system SHALL set the item state to \"completed\" and record a completion timestamp.\n- IF a user reopens a completed item, THEN THE system SHALL remove the completion timestamp and set state to \"open\".\n- IF a user attempts to complete an already completed item, THEN THE system SHALL keep the state unchanged and provide guidance that it is already completed.\n\n### Edit Todo\n- WHEN a user updates the title of their own item to a valid value, THE system SHALL save the change and update the last-updated timestamp.\n- IF a user attempts to edit another user’s item, THEN THE system SHALL deny the action and inform the user they lack permission.\n\n### Delete Todo\n- WHEN a user requests deletion of their own item, THE system SHALL remove the item from active views.\n- IF a user attempts to delete an item they do not own, THEN THE system SHALL deny the action and provide a clear permission error message.\n\n### Bulk Operations\n- WHEN a user selects up to 50 items and triggers bulk complete, THE system SHALL complete all eligible items within 2 seconds perceived by the user and report any ineligible selections.\n- WHEN a user selects up to 50 items and triggers bulk reopen, THE system SHALL reopen all eligible items within 2 seconds perceived by the user and report any ineligible selections.\n\n### Export\n- WHEN a user requests export of their own items, THE system SHALL prepare a complete, portable package and notify the user upon completion within a reasonable window.\n- IF a user requests export when no items exist, THEN THE system SHALL provide a valid export package indicating zero items.\n\n### Time Zone and Due Dates\n- WHILE the user’s time zone setting differs from the time zone at item creation, THE system SHALL preserve the intended due calendar date when displaying the item.\n- IF a due date is set in the past, THEN THE system SHALL mark the item as overdue without blocking save operations.\n- IF a due date falls into a DST gap in the selected time zone, THEN THE system SHALL adjust to the next valid local time and inform the user.\n\n### Concurrency and Conflicts\n- IF two sessions attempt to update the same item concurrently, THEN THE system SHALL prevent silent overwrite and instruct the user to refresh or reconcile.\n- IF an item is deleted in another session during an edit attempt, THEN THE system SHALL inform that the item is no longer available and preserve the user’s input locally where feasible.\n\n### Administrative Controls\n- WHEN an admin executes revoke-all-sessions for a user, THE system SHALL end the user’s active sessions so that the next action requires re-authentication.\n- WHEN an admin suspends a user account, THE system SHALL block access to todo features for that account until restored and record the action for audit.\n\n### Rate Limiting and Recovery\n- WHERE a user exceeds defined write operation limits, THE system SHALL throttle further writes temporarily and provide guidance on when to retry.\n- WHEN a transient service issue prevents completion of an action, THE system SHALL encourage retry and avoid duplicated creations or updates from a single submitted intent.\n\n## Success Indicators per Scenario\n\n| Scenario | Primary KPI | Target for MVP | Measurement Method |\n|---------|-------------|----------------|--------------------|\n| Registration & Verification | Verification completion rate within 24 hours | ≥ 80% | Ratio of verified/registered within 24h |\n| Create Todo | Median time from intent to saved item | ≤ 10 seconds | Time from create action start to item persistence |\n| Review & Filter | Time-to-find (specific item) | ≤ 5 seconds | Time from list request to visibility of targeted item via filters |\n| Complete/Reopen | State change latency | ≤ 2 seconds | Time from user action to list reflecting new state |\n| Edit Todo | Edit persistence success rate | ≥ 99% | Successful saves / attempts |\n| Delete Todo | Erroneous deletions rate | ≤ 0.1% | Confirmed mistaken deletions / deletions |\n| Admin Session Revocation | Time to invalidate sessions | ≤ 1 minute | Time from revocation to enforced re-authentication |\n| Bulk Complete/Reopen | Completion of eligible items | 100% eligible within 2 seconds | Operation timing and eligibility reporting |\n| Export | Export readiness window | ≤ 24 hours (typical) | Time from request to availability notification |\n| Time Zone Change | Consistency of due calendar day | 100% preserved | Audit sample of items before/after change |\n\n## References to Related Documents\n- See the [Functional Requirements for todoApp](./03-todoApp-functional-requirements.md) for field validations, ownership rules, and acceptance criteria.\n- Review the [User Flows for todoApp](./05-todoApp-user-flows.md) for visual flow details complementing these scenarios.\n- Consult the [Error Handling and Exception Scenarios for todoApp](./07-todoApp-error-handling-and-exception-scenarios.md) for recovery paths and user-facing guidance.\n\n## Scope Clarification\nThis content provides business requirements, personas, stories, and scenarios for todoApp. It focuses on what the system must do from a user and business perspective and does not prescribe technical implementation. All architecture, API design, and database decisions are at the discretion of the development team."},{"reason":"Provide clear, visual business flows for key processes to reduce ambiguity and align teams.","filename":"05-todoApp-user-flows.md","documentType":"user-flow","outline":["Flow Diagram Conventions","Authentication Flow (register, login, reset)","Todo Item Lifecycle Flow (create, update, complete, delete)","Error and Recovery Flow","State Model for Todo Items","Narrative Descriptions of Each Flow"],"audience":"development team","keyQuestions":["What are the step-by-step flows for core processes?","Where do decisions occur and what are the expected outcomes?"],"detailLevel":"moderate detail","relatedDocuments":["02-todoApp-user-roles-and-authentication.md","03-todoApp-functional-requirements.md","07-todoApp-error-handling-and-exception-scenarios.md"],"constraints":["All diagrams must follow the Mermaid rules provided (double quotes for labels, correct arrows)","Use graph LR orientation for readability","Do not include technical architecture diagrams or API sequence diagrams"],"content":"# todoApp User Flows and Business Process Diagrams\n\nThis document provides business requirements only. All technical implementation decisions (architecture, APIs, database design, and related choices) belong to the development team. The content describes WHAT the system should do, not HOW to build it.\n\n- Service prefix: todoApp\n- Roles referenced: user, admin\n- Related references for deeper context:\n  - See the [User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md) for complete role definitions and authentication behaviors.\n  - See the [Functional Requirements (MVP)](./03-todoApp-functional-requirements.md) for field-level validations and acceptance criteria.\n  - See the [Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md) for comprehensive error taxonomies and user recovery.\n\n## Flow Diagram Conventions\n\n- Orientation: Left-to-right (LR) for all flows.\n- Notation: Rectangles represent steps, diamonds represent decisions, rounded shapes represent states or outcomes.\n- Labels: All node and edge labels use double quotes; edge labels denote decision outcomes or key information.\n- Roles context:\n  - \"user\" refers to an authenticated end user managing their own todos and account.\n  - \"admin\" refers to an administrative user performing oversight or support activities.\n- Business semantics:\n  - \"Create\", \"Update\", \"Complete\", \"Reopen\", and \"Delete\" refer to user-visible actions and their business effects.\n  - \"Verification\" refers to email verification for account activation.\n- Performance expectations (user experience level):\n  - Simple actions (register, login, create todo, mark complete) should feel immediate. Where stated, response expectations are provided in seconds as testable criteria.\n\n### Visual Legend (Business-Level)\n\n| Symbol | Meaning |\n|-------|---------|\n| Rectangle | Action or processing step |\n| Diamond | Decision point with labeled outcomes |\n| Rounded Rectangle | Outcome or state |\n| Dotted Arrow | Advisory or guidance path |\n\n## Authentication Flow (register, login, reset)\n\n### Diagram: Registration, Email Verification, Login, Logout, Password Reset (Request + Completion)\n\n```mermaid\ngraph LR\n  subgraph \"User Initiated\"\n    A1[\"Open Registration\"] --> A2[\"Enter Email/Password\"]\n    A3[\"Open Login\"] --> A4[\"Enter Credentials\"]\n    A5[\"Open Password Reset\"] --> A6[\"Submit Reset Request(Email)\"]\n    A7[\"Open Logout\"] --> A8[\"Confirm Logout\"]\n    A9[\"Open Verification Link\"]\n    A10[\"Open Reset Link\"] --> A11[\"Enter New Password\"]\n  end\n\n  subgraph \"Business Processing\"\n    B1[\"Validate Registration Input\"] --> B2{\"Email Available?\"}\n    B2 -->|\"Yes\"| B3[\"Create Account(Pending Verification)\"]\n    B2 -->|\"No\"| E1[\"Inform Duplicate Email\"]\n    B3 --> B4[\"Send Verification Email\"]\n\n    B5[\"Validate Credentials\"] --> B6{\"Account Exists?\"}\n    B6 -->|\"No\"| E2[\"Inform Invalid Login\"]\n    B6 -->|\"Yes\"| B7{\"Email Verified?\"}\n    B7 -->|\"No\"| E3[\"Inform Verification Required\"]\n    B7 -->|\"Yes\"| B8[\"Establish Session\"]\n\n    B9[\"Validate Reset Request\"] --> B10{\"Account Exists?\"}\n    B10 -->|\"No\"| E4[\"Inform Generic Confirmation\"]\n    B10 -->|\"Yes\"| B11[\"Send Reset Instructions\"]\n\n    B12[\"Validate Verification Token\"] --> B13{\"Token Valid?\"}\n    B13 -->|\"Yes\"| B14[\"Activate Account(Verified)\"]\n    B13 -->|\"No\"| E5[\"Inform Invalid/Expired Link\"]\n\n    B15[\"Invalidate Session\"]\n\n    B16[\"Validate Reset Token\"] --> B17{\"Token Valid?\"}\n    B17 -->|\"Yes\"| B18[\"Validate New Password(Policy)\"]\n    B18 --> B19{\"Valid?\"}\n    B19 -->|\"Yes\"| B20[\"Set New Password & Revoke Sessions\"]\n    B19 -->|\"No\"| E6[\"Inform Password Policy Failure\"]\n    B17 -->|\"No\"| E7[\"Inform Invalid/Expired Reset Link\"]\n  end\n\n  subgraph \"Outcomes\"\n    C1[\"Registration Pending\"]\n    C2[\"Registration Complete\"]\n    C3[\"Logged In\"]\n    C4[\"Password Reset Email Sent\"]\n    C5[\"Logged Out\"]\n    C6[\"Password Reset Complete\"]\n  end\n\n  %% Flows\n  A2 --> B1 --> B2\n  B3 --> B4 --> C1\n\n  A9 --> B12 --> B13\n  B14 --> C2\n\n  A4 --> B5 --> B6\n  B8 --> C3\n\n  A6 --> B9 --> B10\n  B11 --> C4\n\n  A8 --> B15 --> C5\n\n  A10 --> B16 --> B17\n  B18 --> B19\n  B20 --> C6\n\n  %% Errors & Guidance\n  E1 -.->|\"Guidance: Use Different Email\"| A2\n  E2 -.->|\"Guidance: Retry or Reset\"| A3\n  E3 -.->|\"Guidance: Check Inbox\"| C1\n  E4 -.->|\"Guidance: If No Account, Register\"| A1\n  E5 -.->|\"Guidance: Request New Link\"| A5\n  E6 -.->|\"Guidance: Follow Password Rules\"| A11\n  E7 -.->|\"Guidance: Request New Reset Link\"| A5\n```\n\n### EARS Requirements — Authentication\n\n- WHEN a person submits valid registration details, THE authentication subsystem SHALL create an account in \"pending verification\" state and send a verification email within 60 seconds.\n- IF the registration email is already in use, THEN THE authentication subsystem SHALL reject the registration and present a message indicating the email is taken.\n- WHEN a person clicks a valid verification link, THE authentication subsystem SHALL activate the account immediately and allow login thereafter.\n- IF a verification link is invalid or expired, THEN THE authentication subsystem SHALL inform the user and provide a path to request a new link.\n- WHEN a verified account submits correct login credentials, THE authentication subsystem SHALL create an authenticated session and reflect the logged-in state within 2 seconds.\n- IF login fails due to unknown account or incorrect credentials, THEN THE authentication subsystem SHALL not reveal which field failed and SHALL encourage retry or password reset.\n- WHEN a user requests a password reset with an email of an existing account, THE authentication subsystem SHALL send reset instructions within 60 seconds and SHALL not disclose whether the email exists to unauthorized parties.\n- WHEN a user opens a valid reset link and enters a new password that meets policy, THE authentication subsystem SHALL set the new password and revoke existing sessions, allowing immediate login with the new password.\n- IF a reset link is invalid or expired, THEN THE authentication subsystem SHALL provide a path to request a new reset link without disclosing account existence.\n- WHEN a user initiates logout, THE authentication subsystem SHALL terminate the active session immediately and reflect the logged-out state.\n- WHERE the actor is an admin assisting a user, THE support process SHALL allow the admin to trigger re-verification or lock/unlock an account according to business policy defined in the role specification and record the reason for audit.\n- WHERE excessive failed login attempts occur, THE authentication subsystem SHALL throttle further attempts temporarily and present recovery guidance consistent with the error handling policy.\n\n## Todo Item Lifecycle Flow (create, update, complete, delete)\n\n### Diagram: Todo Item Lifecycle\n\n```mermaid\ngraph LR\n  subgraph \"User Actions\"\n    T1[\"Start Create Todo\"] --> T2[\"Enter Title(Optional: Description, Due Date)\"]\n    T3[\"Open Todo\"] --> T4[\"Edit Fields\"]\n    T5[\"Mark Complete\"]\n    T6[\"Reopen Item\"]\n    T7[\"Delete Item\"]\n    T8[\"List My Todos\"]\n  end\n\n  subgraph \"Business Rules\"\n    R1[\"Validate Title(Non-Empty, Max Length)\"]\n    R2[\"Validate Optional Fields(Description Length, Due Date Format)\"]\n    R3{\"Item Owned By User?\"}\n    R4{\"Item Editable?\"}\n    R5{\"Item In Active State?\"}\n    R6{\"Item In Completed State?\"}\n  end\n\n  subgraph \"Outcomes\"\n    O1[\"Item Created(Active)\"]\n    O2[\"Item Updated\"]\n    O3[\"Item Completed\"]\n    O4[\"Item Reopened(Active)\"]\n    O5[\"Item Deleted(Permanent)\"]\n    O6[\"User List Returned\"]\n  end\n\n  %% Creation\n  T2 --> R1 --> R2 --> O1\n\n  %% Read/List\n  T8 --> O6\n\n  %% Update\n  T4 --> R3\n  R3 -->|\"Yes\"| R4\n  R3 -->|\"No\"| E1[\"Inform Access Denied\"]\n  R4 -->|\"Yes\"| O2\n  R4 -->|\"No\"| E2[\"Inform Not Editable\"]\n\n  %% Complete\n  T5 --> R3\n  R3 -->|\"Yes\"| R5\n  R5 -->|\"Yes\"| O3\n  R5 -->|\"No\"| E3[\"Inform Already Completed or Invalid State\"]\n\n  %% Reopen\n  T6 --> R3\n  R3 -->|\"Yes\"| R6\n  R6 -->|\"Yes\"| O4\n  R6 -->|\"No\"| E4[\"Inform Not Completed\"]\n\n  %% Delete\n  T7 --> R3\n  R3 -->|\"Yes\"| O5\n  R3 -->|\"No\"| E5[\"Inform Access Denied\"]\n\n  %% Guidance\n  E1 -.->|\"Guidance: Operate Only Own Items\"| T3\n  E2 -.->|\"Guidance: Check State/Fields\"| T3\n  E3 -.->|\"Guidance: No Duplicate Completion\"| T3\n  E4 -.->|\"Guidance: Reopen Only Completed\"| T3\n  E5 -.->|\"Guidance: Ownership Required\"| T3\n```\n\n### EARS Requirements — Todo Lifecycle\n\n- THE todo management subsystem SHALL require a non-empty title up to the maximum length defined in the functional specification.\n- WHERE a description is provided, THE todo management subsystem SHALL accept it up to the maximum length defined in the functional specification.\n- WHERE a due date is provided, THE todo management subsystem SHALL interpret it using the user’s locale and time zone settings as specified in the functional specification.\n- WHEN a user creates a valid todo, THE todo management subsystem SHALL place it in the \"active\" state and make it available in the user’s list immediately.\n- WHEN a user requests to list their todos, THE todo management subsystem SHALL return only items owned by that user, ordered by the current business sorting rule.\n- IF a user attempts to modify a todo they do not own, THEN THE todo management subsystem SHALL deny the action and present an authorization message without exposing other users’ data.\n- WHEN a user edits fields of a todo, THE todo management subsystem SHALL apply the changes immediately if all validations pass and SHALL update the last-updated indicator.\n- WHEN a user marks an active todo as complete, THE todo management subsystem SHALL update its state to \"completed\" and display the completion timestamp according to the user’s time zone.\n- IF a user attempts to complete a todo already in \"completed\" state, THEN THE todo management subsystem SHALL inform that the item is already completed and SHALL not change state.\n- WHEN a user reopens a completed todo, THE todo management subsystem SHALL return it to the \"active\" state and clear any derived completion indicators while preserving historical metadata as defined in the business rules.\n- WHEN a user deletes their own todo, THE todo management subsystem SHALL remove it from the user’s list permanently for MVP scope.\n- WHERE an admin performs moderation, THE administrative process SHALL not alter user todo content except when enforcing policy; any such action SHALL be auditable according to the role specification.\n\n## Error and Recovery Flow\n\n### Diagram: Error Categories and Recovery Paths\n\n```mermaid\ngraph LR\n  subgraph \"Operation Context\"\n    U1[\"Attempt Operation\"] --> D1{\"Auth Error?\"}\n  end\n\n  subgraph \"Authentication/Authorization\"\n    D1 -->|\"Yes\"| A1[\"Show Auth Message\"]\n    A1 --> A2{\"User Intends to Recover?\"}\n    A2 -->|\"Yes\"| A3[\"Prompt Login or Verify Email\"]\n    A2 -->|\"No\"| A4[\"Abort Operation\"]\n  end\n\n  subgraph \"Validation\"\n    D1 -->|\"No\"| D2{\"Validation Error?\"}\n    D2 -->|\"Yes\"| V1[\"Show Field Guidance\"]\n    V1 --> V2{\"Can Retry Immediately?\"}\n    V2 -->|\"Yes\"| V3[\"Allow Correction and Resubmission\"]\n    V2 -->|\"No\"| V4[\"Provide Instructions\"]\n  end\n\n  subgraph \"Not Found / Conflict\"\n    D2 -->|\"No\"| D3{\"Not Found?\"}\n    D3 -->|\"Yes\"| N1[\"Inform Missing Resource\"]\n    D3 -->|\"No\"| D4{\"Conflict?\"}\n    D4 -->|\"Yes\"| C1[\"Inform Concurrent Update\"]\n    C1 --> C2[\"Offer Refresh or Retry\"]\n  end\n\n  subgraph \"Rate Limit / Service Unavailable\"\n    D4 -->|\"No\"| D5{\"Rate Limited?\"}\n    D5 -->|\"Yes\"| R1[\"Show Wait Guidance\"]\n    D5 -->|\"No\"| D6{\"Service Unavailable?\"}\n    D6 -->|\"Yes\"| S1[\"Show Retry Later Guidance\"]\n    D6 -->|\"No\"| S2[\"Proceed to Success\"]\n  end\n```\n\n### EARS Requirements — Error and Recovery\n\n- WHEN an action requires authentication and the user is not authenticated, THE system SHALL present a message to log in or verify and SHALL not proceed with the action.\n- IF a form submission contains invalid fields, THEN THE system SHALL highlight the specific fields and provide actionable guidance for correction.\n- WHEN a missing resource is referenced (e.g., deleted or non-existent todo), THE system SHALL inform the absence without exposing whether the resource ever existed for other users.\n- IF a concurrency conflict occurs due to simultaneous updates, THEN THE system SHALL prevent data loss by rejecting the later change and SHALL offer a path to refresh and retry.\n- WHEN a user exceeds allowed operation frequency, THE system SHALL inform that the rate limit has been reached and SHALL advise when to try again.\n- IF a transient service disruption prevents completing an action, THEN THE system SHALL inform the user and encourage retry after a short interval without blaming user input.\n- WHERE an account is suspended due to policy, THE system SHALL block protected actions and present suspension information upon next sign-in attempt.\n\n## State Model for Todo Items\n\n### Diagram: States and Transitions (Business-Level)\n\n```mermaid\ngraph LR\n  S0[\"Nonexistent\"] -->|\"Create\"| S1[\"Active\"]\n  S1 -->|\"Update Fields\"| S1\n  S1 -->|\"Complete\"| S2[\"Completed\"]\n  S2 -->|\"Reopen\"| S1\n  S1 -->|\"Delete\"| S3[\"Deleted(Permanent)\"]\n  S2 -->|\"Delete\"| S3\n```\n\n### EARS Requirements — State Model\n\n- THE todo item lifecycle SHALL consist of \"active\", \"completed\", and \"deleted\" states for MVP.\n- WHEN a todo is created successfully, THE lifecycle SHALL enter the \"active\" state.\n- WHEN a todo is marked complete from the \"active\" state, THE lifecycle SHALL transition to \"completed\" without modifying non-edited fields.\n- WHEN a completed todo is reopened, THE lifecycle SHALL transition back to \"active\" and clear completion-specific indicators while keeping other fields intact.\n- WHEN a todo is deleted, THE lifecycle SHALL transition to \"deleted\" and SHALL not be available in the user’s list thereafter for MVP.\n\n## Narrative Descriptions of Each Flow\n\n### Authentication Flow Narrative\n\n- Registration and Verification\n  - Trigger: A person attempts to create an account with an email and password.\n  - Decision: If the email is already in use, the registration is rejected and guidance is provided to try another email. Otherwise, the account is created in a pending verification state, and a verification message is sent.\n  - Outcome: On clicking a valid verification link, the account becomes verified and eligible for login.\n  - Non-disclosure: Do not reveal whether a specific email exists to unauthorized parties.\n  - Resend: If the verification link expires, a resend request is available within policy limits.\n\n- Login and Session Establishment\n  - Trigger: A verified user enters credentials.\n  - Decision: If credentials are invalid or the account is unverified, the login is denied with appropriate guidance. Otherwise, a session is established.\n  - Outcome: The user reaches the authenticated state capable of performing todo operations.\n  - Protection: Repeated failed attempts are throttled with clear recovery guidance.\n\n- Password Reset\n  - Request: Any person may initiate a reset request by providing an email; confirmation messaging does not disclose account existence.\n  - Completion: A person opening a valid reset link provides a new password that meets policy, resulting in session revocation and the ability to log in immediately.\n  - Recovery: Invalid or expired reset links result in guidance to request a new link.\n\n- Logout\n  - Trigger: A logged-in user initiates logout.\n  - Outcome: The active session is terminated immediately and the user returns to a non-authenticated state.\n\n- Admin Support Notes\n  - Admins can enforce policies such as locking accounts or re-triggering verification within the constraints and audit expectations defined in the role specification.\n\n### Todo Item Lifecycle Narrative\n\n- Create\n  - Trigger: An authenticated user initiates creation.\n  - Validation: Title must be present and within allowed length; optional description and due date, when provided, must meet length and format rules.\n  - Outcome: A new todo is created in the active state and appears in the user’s list.\n\n- Read\n  - Trigger: A user lists or views their todos.\n  - Authorization: Items are only visible to their owner. Admin oversight of content, when necessary for policy enforcement, is controlled and auditable.\n\n- Update\n  - Trigger: A user edits fields of their own todo.\n  - Decision: If the item is not owned by the user, the operation is denied. If the item is in a state that disallows the requested change (as per business rules), the operation is denied with guidance. Otherwise, the update is applied and the last-updated indicator changes.\n\n- Complete\n  - Trigger: A user marks an active todo as complete.\n  - Decision: If already completed, the operation is rejected with guidance.\n  - Outcome: Item moves to completed state; completion timestamp is recorded for display based on the user’s time zone.\n\n- Reopen\n  - Trigger: A user reopens a completed item.\n  - Outcome: Item moves back to active state; completion-specific indicators are cleared while preserving other details.\n\n- Delete\n  - Trigger: A user deletes their own item.\n  - Outcome: Item is permanently removed from the user’s list for MVP. Future phases may introduce trash/restore according to the business rules document versioning.\n\n### Error and Recovery Narrative\n\n- Authentication and Authorization Errors\n  - Scenario: User attempts actions requiring authentication or proper authorization.\n  - Response: The system blocks the action and presents clear next steps: log in, verify email, or request access as appropriate. No sensitive details are disclosed.\n\n- Validation Errors\n  - Scenario: User submissions fail validations (e.g., missing title, invalid due date format, overly long text fields).\n  - Response: The system identifies specific fields and provides actionable guidance to correct and resubmit while preserving valid inputs.\n\n- Not Found\n  - Scenario: A referenced todo does not exist or is no longer available.\n  - Response: The system informs that the resource is unavailable without exposing historical existence for other users.\n\n- Conflict (Concurrent Updates)\n  - Scenario: Two edits occur to the same todo in close succession.\n  - Response: The system prevents overwriting by rejecting the later change, guiding the user to refresh and retry; options for reconcile/overwrite/discard are governed by the error handling policy.\n\n- Rate Limit\n  - Scenario: Excessive operations in a short period (e.g., repeated create/delete).\n  - Response: The system asks the user to slow down and to try again after a provided interval, describing the applicable limit window in user terms.\n\n- Service Unavailable\n  - Scenario: Temporary outage or degraded service prevents operation completion.\n  - Response: The system encourages retry after a short interval and provides reassurance without implying user error; user-entered data is preserved when feasible for later submission.\n\n## Additional EARS Requirements Spanning Flows\n\n- WHILE a user is authenticated, THE system SHALL maintain a valid session and reflect authorization according to the role’s business permissions.\n- WHERE the actor is \"admin\", THE system SHALL allow actions aligned with oversight and policy enforcement while maintaining auditability and minimal data exposure.\n- WHEN business limits are exceeded (such as rate limits), THE system SHALL communicate the limit and the time window for retry in user terms.\n- WHEN time-sensitive information is presented (such as due dates and completion timestamps), THE system SHALL align display and interpretation with the user’s configured time zone and locale rules defined in the functional specification.\n- WHEN a user signs out voluntarily or due to security action, THE system SHALL invalidate the current session and require re-authentication for protected actions.\n- IF an account is suspended for policy reasons, THEN THE system SHALL block protected actions and present suspension messaging at the next sign-in attempt.\n\n## Traceability and References\n\n- Authentication details and lifecycle expectations: [User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md).\n- Feature-level behaviors and validations: [Functional Requirements (MVP)](./03-todoApp-functional-requirements.md).\n- Error handling categories and user-facing guidance: [Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md).\n\nEnd of document."},{"reason":"Codify validation rules, constraints, and state logic to ensure consistent handling across all features.","filename":"06-todoApp-business-rules.md","documentType":"requirement","outline":["Purpose and Scope","Terminology and States","Todo Item Validation Rules","Ownership and Access Rules","Rate Limits and Operational Constraints (business-level)","Retention and Deletion Rules","Time Zone and Date Handling Rules","Rule Conflict Resolution and Precedence","Traceability to Functional Requirements"],"audience":"development team","keyQuestions":["What validations apply to todo items and accounts?","What limits, if any, exist for operations?","How are conflicts in rules resolved?"],"detailLevel":"detailed specification","relatedDocuments":["03-todoApp-functional-requirements.md","08-todoApp-non-functional-requirements.md","09-todoApp-data-lifecycle-and-privacy.md"],"constraints":["Express rules in testable, measurable terms (use EARS where applicable)","Avoid any database, API, or technical design details"],"content":"# todoApp Business Rules and Constraints\n\n## Purpose and Scope\nProvides business rules, validations, constraints, and state logic for todoApp to ensure consistent behavior across all features and scenarios. Describes WHAT must happen from a business perspective; technical implementation details (architecture, APIs, database design, storage, libraries) are at the discretion of the development team.\n\nScope includes: todo item field validations, item state transitions, ownership and access rules, rate limits and operational constraints, retention and deletion behaviors, time zone and date handling, idempotency and concurrency policies, conflict resolution principles, and traceability to related specifications. Applies to roles: user and admin.\n\nRelated documents for broader context:\n- Refer to the [Functional Requirements for todoApp](./03-todoApp-functional-requirements.md) for end-to-end feature behaviors and acceptance criteria.\n- Refer to the [Non-Functional Requirements for todoApp](./08-todoApp-non-functional-requirements.md) for performance, security, and reliability expectations.\n- Refer to the [Data Lifecycle and Privacy Requirements for todoApp](./09-todoApp-data-lifecycle-and-privacy.md) for conceptual lifecycle and privacy constraints.\n\n## Terminology and States\n- Owner: The authenticated account that created a todo item. Each item has exactly one Owner.\n- Todo Item (Item): A task record with a required title and optional attributes such as description and due date.\n- Active: The normal state of an Item that is not completed and not in trash.\n- Completed: The state indicating the Item has been marked done.\n- Trashed: The state indicating the Item has been deleted by the Owner but is recoverable within the trash retention period.\n- Purged: The state indicating the Item has been irreversibly removed following retention rules.\n- Suspension: An account-level restriction under which write operations are blocked.\n\n### State Model and Allowed Transitions\nItem states and transitions follow the flow below.\n\n```mermaid\ngraph LR\n  subgraph \"Todo Item States\"\n    A[\"Active\"] --> B[\"Completed\"]\n    B --> A\n    A --> C[\"Trashed\"]\n    B --> C\n    C --> A\n    C --> D[\"Purged(Irreversible)\"]\n  end\n```\n\n- Allowed transitions: Active → Completed; Completed → Active (reopen); Active → Trashed; Completed → Trashed; Trashed → Active (restore); Trashed → Purged.\n- Disallowed transitions: Any direct transition to Purged except from Trashed; Purged has no outgoing transitions.\n\nEARS:\n- THE todoApp SHALL constrain Item transitions to those shown in the state model.\n- IF an Item is in \"Purged\", THEN THE todoApp SHALL prevent any further operations on that Item.\n\n## Todo Item Validation Rules\nDefines required and optional fields, permitted value ranges, and behavioral validations for creation, updates, completion, reopening, and deletion. All limits are measured after trimming leading and trailing whitespace where applicable.\n\n### Field-Level Constraints\n- Title (required):\n  - Length: 1 to 120 Unicode characters after trimming.\n  - Content: No control characters; line breaks permitted and normalized.\n  - Uniqueness: Not required; duplicate titles are allowed.\n- Description (optional):\n  - Length: 0 to 1,000 Unicode characters after trimming.\n  - Content: May include line breaks; no active scripts or executable content; no embedded markup execution.\n- Due Date (optional):\n  - Type: Either date-only (no time) or date-time (explicit local time semantics).\n  - Range: Not earlier than the Item’s creation date in the user’s local time; not later than 5 years from the current date in the user’s local time.\n  - Date-only semantics: Interpreted as due at 23:59:59 in the user’s time zone on that calendar date.\n  - Date-time semantics: Interpreted as an exact clock time in the user’s time zone.\n\nEARS (creation/update validation):\n- WHEN an Item is created, THE todoApp SHALL reject titles that are fewer than 1 or greater than 120 characters after trimming.\n- WHEN an Item is created or updated, THE todoApp SHALL reject descriptions longer than 1,000 characters after trimming.\n- WHEN a Due Date is provided, THE todoApp SHALL interpret date-only values as due at 23:59:59 in the user’s time zone on that date.\n- WHEN a Due Date is provided, THE todoApp SHALL reject values earlier than the Item’s creation date or more than 5 years in the future (user-local).\n- IF a field contains control characters or executable content, THEN THE todoApp SHALL reject the operation and indicate the invalid field.\n\n### Behavioral Validations\n- Completion and Reopening:\n  - An Item can be marked Completed only from Active.\n  - A Completed Item can be reopened only back to Active.\n- Deletion (Trash) and Purge:\n  - Only Items in Active or Completed can be moved to Trashed.\n  - Purge is allowed only from Trashed per retention rules.\n\nEARS (state validations):\n- WHEN a user marks an Active Item as Completed, THE todoApp SHALL set it to Completed and record the completion timestamp.\n- IF a user attempts to mark a Completed Item as Completed again, THEN THE todoApp SHALL take no state change and inform the user the Item is already Completed.\n- WHEN a user reopens a Completed Item, THE todoApp SHALL move it to Active and clear the completion timestamp.\n- IF a user attempts to purge an Item not in Trashed, THEN THE todoApp SHALL deny the operation.\n\n### Concurrency, Integrity, and Idempotency (business perspective)\n- Edit consistency: Edits must not silently overwrite more recent changes made by the Owner in another session.\n- Idempotency: Repeated submissions of the same action within a short interval should not create duplicated Items or double-apply state transitions.\n\nEARS (concurrency & idempotency):\n- IF a concurrent modification is detected during update, THEN THE todoApp SHALL prevent the overwrite and require the user to retry with the latest version.\n- WHEN an Item is restored from Trashed, THE todoApp SHALL ensure it re-enters Active with all fields preserved as of the time of trashing.\n- WHERE a create action is retried due to transient conditions, THE todoApp SHALL avoid duplicate Items resulting from the same user action.\n- WHERE a state-change action (complete/reopen) is repeated without intervening changes, THE todoApp SHALL keep the Item’s state consistent and avoid double application.\n\n## Ownership and Access Rules\nRoles: user (standard account) and admin (administrative oversight under policy). Access rules are expressed from a business and privacy standpoint.\n\n### Core Ownership Rules\n- Each Item has exactly one Owner, which is the creating user account.\n- Owners can create, read, update, complete/reopen, trash, restore, and purge their own Items subject to other rules herein.\n- Cross-user access is not permitted for users.\n\n### Administrative Access (Support and Policy)\n- Admins may access a user’s Items only for legitimate support, security, or policy enforcement, with justification and audit logging.\n- Admin operations follow least-privilege: minimum actions necessary for the case and only for the minimum time required.\n\nEARS (access control):\n- WHEN a user requests to read an Item, THE todoApp SHALL allow access only if the user is the Owner or an admin has an active support scope for that user.\n- IF a user attempts to read or modify an Item that they do not own, THEN THE todoApp SHALL deny the operation without revealing the Item’s existence.\n- WHERE an admin has an active support scope for a user, THE todoApp SHALL allow admin read and write actions limited to the scope duration and case context and SHALL record justification in audit data.\n- WHILE an account is under Suspension, THE todoApp SHALL block write operations for that account and allow reads of owned Items.\n- IF an account is deleted, THEN THE todoApp SHALL prevent any further access to Items previously owned by that account and apply retention rules.\n\n## Rate Limits and Operational Constraints (business-level)\nLimits protect system integrity, reduce abuse, and ensure predictable performance. Limits are measured per user account unless stated otherwise and align to non-functional targets.\n\n### Per-Operation and Aggregate Frequency Limits\n- Aggregate write operations (create/update/complete/reopen/trash/restore/purge): up to 60 actions per minute in rolling windows.\n- Aggregate read operations (list/detail/filter): up to 120 actions per minute in rolling windows.\n- Optional finer bounds for user experience consistency:\n  - Create Item: up to 30 per minute.\n  - Complete/Reopen: up to 60 per minute.\n  - Purge: up to 30 per minute.\n\n### Inventory and Size Limits\n- Maximum concurrent Items per user (all states except Purged): 10,000.\n- Pagination sizes: 10, 20, 50, or 100 items per page; default 20.\n- Bulk operations (interactive): up to 50 Items per action (e.g., bulk complete/reopen/purge) to preserve responsiveness.\n\n### Validation and Responsiveness Expectations (business-level)\n- Single-field validation feedback should be perceived as immediate for typical inputs and SHALL align with non-functional performance targets.\n\nEARS (limits & operational constraints):\n- WHERE a user exceeds aggregate write limits, THE todoApp SHALL throttle further writes until the window resets and inform the user of the limit.\n- WHERE a user exceeds aggregate read limits, THE todoApp SHALL throttle further reads until the window resets and inform the user of the limit.\n- IF a user attempts to create an Item when they already have 10,000 non-Purged Items, THEN THE todoApp SHALL reject the creation and indicate the capacity limit.\n- WHERE a bulk operation exceeds the interactive limit of 50 Items, THE todoApp SHALL process the excess via an alternative path or require the user to split the operation.\n\n## Retention and Deletion Rules\nGoverns how Items are retained, restored, and permanently removed (see also the [Data Lifecycle and Privacy Requirements](./09-todoApp-data-lifecycle-and-privacy.md)).\n\n### Trash Retention\n- Trashed Items are retained for 30 calendar days from the time of trashing.\n- Restoration returns the Item to Active with its previous content intact.\n\n### Purging\n- Automatic purge: Items in Trashed are automatically purged after 30 days.\n- Manual purge: The Owner may manually purge a Trashed Item at any time before automatic purge.\n- Purge is irreversible and removes the Item from user-accessible views and recovery.\n\n### Account Deletion and Suspension\n- Account deletion: All Items owned by the account enter Trashed immediately and follow a shortened retention of 7 days before automatic purge.\n- Legal hold: Admins may place a legal or policy hold that prevents purge until the hold is cleared.\n- Suspension: Suspended accounts cannot modify Items; retention timelines continue to elapse normally.\n\nEARS (retention & deletion):\n- WHEN an Item enters Trashed, THE todoApp SHALL set a purge-after timestamp of 30 calendar days from the time of trashing.\n- IF the number of non-Purged Items exceeds 10,000 for a user, THEN THE todoApp SHALL purge the oldest Trashed Items first until the cap is satisfied.\n- WHEN an account is deleted, THE todoApp SHALL move all owned Items to Trashed and set a purge-after timestamp of 7 calendar days.\n- IF a legal hold exists on an Item, THEN THE todoApp SHALL prevent purge until the hold is removed.\n- WHEN a user restores a Trashed Item, THE todoApp SHALL remove the purge-after timestamp and return the Item to Active.\n\n## Time Zone and Date Handling Rules\nEnsures consistent user-local behavior for dates and times while avoiding reliance on device-specific interpretations.\n\n### User-Local Semantics\n- Date-only due dates: Treated as due at 23:59:59 on that calendar date in the user’s selected time zone.\n- Date-time due dates: Interpreted as exact local times in the user’s selected time zone.\n- Default time zone: When no preferred time zone is set, use a reasonable default aligned with the user’s locale; for MVP, Asia/Seoul (KST, UTC+9) is the default baseline.\n\n### Daylight Saving Time (DST) and Calendar Rules\n- DST forward transition (e.g., 01:59:59 → 03:00:00): A local time that does not exist is adjusted to the next valid local time on that date.\n- DST backward transition (hour repeats): A local time in the repeated hour is interpreted as the first occurrence unless the user specifies otherwise.\n- Leap years and month length: Invalid calendar dates are rejected.\n\nEARS (time zone & calendar):\n- WHEN interpreting a date-only due date, THE todoApp SHALL treat it as due at 23:59:59 in the user’s time zone on that date.\n- IF a provided local time falls into a DST gap, THEN THE todoApp SHALL adjust it to the next valid local time on the same date and inform the user.\n- IF a provided date is not a valid calendar date, THEN THE todoApp SHALL reject it and indicate the invalid field.\n\n## Account-Level Validation Rules (business)\nConstraints for account data relevant to using todoApp features.\n\n- Display Name (optional): 1 to 80 Unicode characters after trimming; no control characters.\n- Email (required for registration): Must be unique per account under todoApp policies.\n- Password (required for registration): Minimum 12 characters; at least three of the following categories: uppercase letters, lowercase letters, numbers, special characters; banned-password list enforced; prevent reuse of the last 5 passwords; no spaces at either end after trimming.\n- Email Verification: Accounts may create and manage Items according to policy; sensitive account changes and recovery communications require a verified email.\n\nEARS (account-level):\n- WHEN registering, THE todoApp SHALL reject passwords shorter than 12 characters or lacking at least three of the four required character categories.\n- WHEN registering with an email already in use, THE todoApp SHALL reject the registration and indicate that the email is taken.\n- WHERE an account email is unverified, THE todoApp SHALL restrict recovery communications and sensitive account actions until verification is completed.\n- WHERE a new password matches one of the previous 5 passwords, THE todoApp SHALL reject the change and require a different password.\n\n## Rule Conflict Resolution and Precedence\nResolves conflicts between rules or between rules and context-specific conditions via defined precedence.\n\n### Precedence Order\n1. Legal/Compliance obligations (e.g., legal holds, court orders)\n2. Security and Privacy policies (e.g., least-privilege, non-disclosure of existence)\n3. Account status constraints (e.g., suspension, deletion)\n4. Ownership rules\n5. Retention and deletion rules\n6. Rate limits and operational constraints\n7. User preferences (e.g., time zone selection)\n\nEARS (precedence):\n- IF a legal hold conflicts with a retention rule, THEN THE todoApp SHALL honor the legal hold and defer purge.\n- IF a suspension conflicts with a user’s attempt to modify an Item, THEN THE todoApp SHALL enforce the suspension and deny the modification.\n- WHERE a privacy policy conflicts with an error message that would reveal existence of another user’s Item, THE todoApp SHALL prioritize privacy and not disclose existence.\n\n### Examples\n- Privacy vs. Access Inquiry: If a user tries to open another user’s Item by ID, do not reveal whether it exists; respond as if inaccessible.\n- Rate Limit vs. Urgent Purge: If a purge request exceeds the allowed rate, queue or require retry while ensuring the user can eventually complete the purge.\n- Ownership vs. Admin Oversight: Allow admin access only with explicit, time-limited support scope and justification recorded in audit data.\n\n## Traceability to Functional Requirements\nLinks rule groups to relevant sections of related documents to ensure testability and cross-reference.\n\n| Business Rule Area | Related Functional Section | Notes |\n|---|---|---|\n| Field validations (title, description, due date) | [Todo Item Management in Functional Requirements](./03-todoApp-functional-requirements.md) | Create/update acceptance criteria must align |\n| State transitions (complete, reopen, trash, restore, purge) | [Completion and Reopening in Functional Requirements](./03-todoApp-functional-requirements.md) | Transitions mirror acceptance tests; retention aligns with data lifecycle |\n| Ownership and access | [Data Ownership and Privacy Rules in Functional Requirements](./03-todoApp-functional-requirements.md) | Must be consistent with role capabilities |\n| Rate limits and item caps | [Business Constraints and Limits in Functional Requirements](./03-todoApp-functional-requirements.md) | Limits are measurable and enforceable |\n| Retention and deletion | [Data Lifecycle and Privacy Requirements](./09-todoApp-data-lifecycle-and-privacy.md) | Trash retention and purge windows |\n| Time zone and date handling | [Non-Functional Requirements](./08-todoApp-non-functional-requirements.md) | Local-time correctness and perceived responsiveness |\n| Account-level rules | [User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md) | Password and email uniqueness behaviors |\n\n## Consolidated EARS Index (for test design)\n- THE todoApp SHALL constrain Item transitions to those shown in the state model.\n- IF an Item is in \"Purged\", THEN THE todoApp SHALL prevent any further operations on that Item.\n- WHEN an Item is created, THE todoApp SHALL reject titles that are fewer than 1 or greater than 120 characters after trimming.\n- WHEN an Item is created or updated, THE todoApp SHALL reject descriptions longer than 1,000 characters after trimming.\n- WHEN a Due Date is provided, THE todoApp SHALL interpret date-only values as due at 23:59:59 in the user’s time zone on that date.\n- WHEN a Due Date is provided, THE todoApp SHALL reject values earlier than the Item’s creation date or more than 5 years in the future (user-local).\n- IF a field contains control characters or executable content, THEN THE todoApp SHALL reject the operation and indicate the invalid field.\n- WHEN a user marks an Active Item as Completed, THE todoApp SHALL set it to Completed and record the completion timestamp.\n- IF a user attempts to mark a Completed Item as Completed again, THEN THE todoApp SHALL take no state change and inform the user the Item is already Completed.\n- WHEN a user reopens a Completed Item, THE todoApp SHALL move it to Active and clear the completion timestamp.\n- IF a user attempts to purge an Item not in Trashed, THEN THE todoApp SHALL deny the operation.\n- IF a concurrent modification is detected during update, THEN THE todoApp SHALL prevent the overwrite and require the user to retry with the latest version.\n- WHEN an Item is restored from Trashed, THE todoApp SHALL ensure it re-enters Active with all fields preserved as of the time of trashing.\n- WHERE a create action is retried due to transient conditions, THE todoApp SHALL avoid duplicate Items resulting from the same user action.\n- WHERE a state-change action is repeated without intervening changes, THE todoApp SHALL keep the Item’s state consistent and avoid double application.\n- WHEN a user requests to read an Item, THE todoApp SHALL allow access only if the user is the Owner or an admin has an active support scope for that user.\n- IF a user attempts to read or modify an Item they do not own, THEN THE todoApp SHALL deny the operation without revealing the Item’s existence.\n- WHERE an admin has an active support scope for a user, THE todoApp SHALL allow admin actions limited to scope and duration and SHALL record justification in audit data.\n- WHILE an account is under Suspension, THE todoApp SHALL block write operations for that account and allow reads of owned Items.\n- IF an account is deleted, THEN THE todoApp SHALL prevent any further access to Items previously owned by that account and apply retention rules.\n- WHERE a user exceeds aggregate write limits, THE todoApp SHALL throttle writes until the window resets and inform the user of the limit.\n- WHERE a user exceeds aggregate read limits, THE todoApp SHALL throttle reads until the window resets and inform the user of the limit.\n- IF a user attempts to create an Item when they already have 10,000 non-Purged Items, THEN THE todoApp SHALL reject the creation and indicate the capacity limit.\n- WHERE a bulk operation exceeds 50 Items, THE todoApp SHALL process the excess via an alternative path or require the user to split the operation.\n- WHEN an Item enters Trashed, THE todoApp SHALL set a purge-after timestamp of 30 calendar days from the time of trashing.\n- IF the number of non-Purged Items exceeds 10,000 for a user, THEN THE todoApp SHALL purge the oldest Trashed Items first until the cap is satisfied.\n- WHEN an account is deleted, THE todoApp SHALL move all owned Items to Trashed and set a purge-after timestamp of 7 calendar days.\n- IF a legal hold exists on an Item, THEN THE todoApp SHALL prevent purge until the hold is removed.\n- WHEN a user restores a Trashed Item, THE todoApp SHALL remove the purge-after timestamp and return the Item to Active.\n- WHEN interpreting a date-only due date, THE todoApp SHALL treat it as due at 23:59:59 in the user’s time zone on that date.\n- IF a provided local time falls into a DST gap, THEN THE todoApp SHALL adjust it to the next valid local time on the same date and inform the user.\n- IF a provided date is not a valid calendar date, THEN THE todoApp SHALL reject it and indicate the invalid field.\n- WHEN registering, THE todoApp SHALL reject passwords shorter than 12 characters or lacking at least three of the four character categories.\n- WHEN registering with an email already in use, THE todoApp SHALL reject the registration and indicate that the email is taken.\n- WHERE an account email is unverified, THE todoApp SHALL restrict recovery communications and sensitive account actions until verification is completed.\n- WHERE a new password matches one of the previous 5 passwords, THE todoApp SHALL reject the change and require a different password.\n- IF a legal hold conflicts with a retention rule, THEN THE todoApp SHALL honor the legal hold and defer purge.\n- IF a suspension conflicts with a user’s attempt to modify an Item, THEN THE todoApp SHALL enforce the suspension and deny the modification.\n- WHERE a privacy policy conflicts with an error message that would reveal existence of another user’s Item, THE todoApp SHALL prioritize privacy and not disclose existence.\n\n## Success Criteria\nImplementation is considered successful when:\n- All EARS statements herein pass acceptance tests defined in related documents.\n- Item state transitions are exactly as modeled and enforced in all features.\n- Validation and limit rules produce consistent, user-understandable outcomes across the system.\n- Retention and purge behaviors match specified timelines, including account deletion variations and legal holds.\n- Time zone and DST handling provide correct, predictable due date semantics in user-local time.\n- Idempotency prevents duplicated effects from repeated user submissions.\n\nEnd of document."},{"reason":"Define user-facing error conditions and recovery paths to create predictable behavior under failure.","filename":"07-todoApp-error-handling-and-exception-scenarios.md","documentType":"requirement","outline":["Error Taxonomy (Authentication, Authorization, Validation, Not Found, Conflict, Rate Limit, Service Unavailable)","User-Facing Messages and Guidance","Recovery and Retry Policies","Conflict Resolution for Concurrent Updates (business perspective)","Audit and Monitoring Expectations (business-level)","EARS-Formatted Error Requirements and Acceptance Criteria"],"audience":"development team","keyQuestions":["What errors can occur and how should the system respond for the user?","How can users recover or proceed after an error?","What monitoring is expected from a business standpoint?"],"detailLevel":"detailed specification","relatedDocuments":["02-todoApp-user-roles-and-authentication.md","03-todoApp-functional-requirements.md","05-todoApp-user-flows.md","08-todoApp-non-functional-requirements.md"],"constraints":["Use EARS for all error and exception requirements","Do not reference HTTP codes or API responses; keep user-focused","No technical implementation details"],"content":"# todoApp Error Handling and Exception Scenarios\n\n## Introduction and Scope\nBusiness-level error handling and exception scenarios govern how todoApp behaves under failure from the user’s perspective. Responses include clear messages, actionable guidance, and safe recovery paths that protect user intent and data. Policies below set auditing and monitoring expectations in business terms. Content describes WHAT the system must do in failure conditions, not HOW to implement it.\n\nRelated references for context:\n- [User Roles and Authentication Requirements for todoApp](./02-todoApp-user-roles-and-authentication.md)\n- [Functional Requirements for todoApp](./03-todoApp-functional-requirements.md)\n- [User Flows for todoApp](./05-todoApp-user-flows.md)\n- [Non-Functional Requirements for todoApp](./08-todoApp-non-functional-requirements.md)\n\n## Error Taxonomy\nErrors are grouped into seven user-facing categories. Each category includes representative scenarios, causes, and business expectations for messaging and recovery.\n\n### 1) Authentication Errors\nDefinition: Failures related to verifying identity or session validity.\nExamples:\n- Invalid email or password during sign-in.\n- Attempt to sign in while email remains unverified where verification is required.\n- Expired or invalid session when accessing protected features.\n- Global logout invoked by the same user resulting in session revocation.\nBusiness expectations:\n- Provide neutral, clear messaging without exposing sensitive details.\n- Guide immediate next steps such as retrying, verifying email, or signing in again.\n\n### 2) Authorization Errors\nDefinition: Authenticated identity lacks permission for the requested action.\nExamples:\n- Attempt to access another user’s todo item.\n- Attempt to perform administrative actions without the admin role.\nBusiness expectations:\n- State that the action is not permitted without confirming whether the resource exists.\n- Offer safe alternatives (e.g., return to the user’s list, contact support via approved channels).\n\n### 3) Validation Errors\nDefinition: Submitted input fails business rules.\nRepresentative rules (aligned with functional and business rules):\n- Title: required, 1–120 characters (trimmed).\n- Description: optional, up to 1,000 characters.\n- Due date: optional; if present, must be a valid calendar date-time and not earlier than the creation date in the user’s time zone; not more than 5 years in the future.\n- Completion actions: only allowed on existing, owned items in a valid state for the transition.\nBusiness expectations:\n- Identify each invalid field with a specific reason and a concrete correction.\n- Preserve valid portions of user input where safe.\n\n### 4) Not Found Errors\nDefinition: Requested resource does not exist or is not available to the requesting user.\nExamples:\n- Todo item was deleted or is owned by someone else.\n- Link to an item after the owner’s account was deleted.\nBusiness expectations:\n- Communicate unavailability without confirming ownership or prior existence.\n- Offer navigation to a safe context (e.g., the user’s list) or a refresh suggestion.\n\n### 5) Conflict Errors\nDefinition: Requested change conflicts with the current resource state.\nExamples:\n- Concurrent update: another session or device modified the item between read and write.\n- State conflict: attempting a transition inconsistent with the latest state.\nBusiness expectations:\n- Prevent silent overwrites and provide a guided reconciliation path.\n- Offer clear options that minimize unintended data loss.\n\n### 6) Rate Limit Errors\nDefinition: Action frequency exceeds business-defined safe thresholds.\nExamples:\n- Excessive create/update/delete operations within a short period.\n- Excessive sign-in attempts.\nBusiness expectations:\n- Communicate that limits have been reached, the approximate wait before retry, and safe alternatives.\n\n### 7) Service Unavailable / Degraded Errors\nDefinition: Temporary unavailability or degraded capability of part or all of the service.\nExamples:\n- Planned maintenance window.\n- Transient upstream issue or partial feature outage.\nBusiness expectations:\n- Provide a concise status message and retry guidance.\n- Preserve user-entered data when feasible so users can retry later.\n\n## User-Facing Messages and Guidance\nMessages are short, neutral, and action-oriented. Each includes a succinct title or first sentence, a brief explanation, and a specific next step. Messages avoid technical jargon and do not disclose security-sensitive details. Tone remains consistent across categories.\n\nCanonical message examples (business-level, localization-ready):\n- Authentication (invalid credentials): \"We couldn’t sign you in. Check your email and password and try again.\"\n- Authentication (verification required): \"Please verify your email to continue. We’ve sent a verification message to your inbox.\"\n- Authentication (session expired): \"Your session has ended. Sign in again to continue.\"\n- Authorization: \"You don’t have permission to do that.\"\n- Validation (title missing): \"Title is required and must be between 1 and 120 characters.\"\n- Validation (due date): \"Due date must be valid and not earlier than the creation date.\"\n- Not Found: \"This item is no longer available.\"\n- Conflict: \"This item changed elsewhere. Review updates before saving.\"\n- Rate Limit: \"You’ve reached the limit for this action. Please wait a moment and try again.\"\n- Service Unavailable: \"We’re having trouble right now. Please try again shortly.\"\n\nGuidance patterns:\n- Offer safe navigation (e.g., return to my list) rather than exposing internal details.\n- Preserve unsaved input locally where feasible to honor user intent after recovery.\n- Indicate approximate wait times in natural language (e.g., \"about a minute\") when limits or maintenance apply.\n\n## Recovery and Retry Policies\nBehavior under failure aims to preserve user intent and minimize repeated effort.\n\nGeneral recovery principles:\n- Preserve user intent by maintaining entered data locally where safe.\n- Encourage low-effort retries; if an action is safe to retry, provide a one-step retry affordance.\n- Spread retries to avoid repeated failures and improve success likelihood.\n- Ensure that repeated submissions do not create duplicates or repeated side effects from the user’s perspective.\n\nCategory-specific expectations:\n- Authentication\n  - Invalid credentials: allow immediate retry after correction.\n  - Unverified email: guide to verification; allow retry after verification completes.\n  - Session expired: prompt sign-in; upon success, return the user to the prior action context.\n- Authorization\n  - Do not retry until permissions change; route the user to a safe context.\n- Validation\n  - Allow immediate retry after correcting invalid fields; preserve all valid entries.\n- Not Found\n  - Do not encourage retry; guide to a safe context. If the user expects the item to exist (e.g., just created), suggest refreshing the list.\n- Conflict\n  - Offer reconciliation as described in the conflict section.\n- Rate Limit\n  - Communicate the minimum wait before the next attempt, using natural language.\n- Service Unavailable/Degraded\n  - Suggest retry after a short interval; if planned maintenance is in progress, indicate general timing. Preserve user-entered data for later submission.\n\n### Error Handling Flow (Business-Level)\n```mermaid\ngraph LR\n  subgraph \"User Experience\"\n    A[\"User Attempts Action\"] --> B[\"Evaluate Request State\"]\n    B --> C{\"Is User Authenticated?\"}\n    C -->|\"No\"| D[\"Guide to Sign In or Verify Email\"]\n    C -->|\"Yes\"| E{\"Has Permission?\"}\n    E -->|\"No\"| F[\"Show Not Permitted Message\"]\n    E -->|\"Yes\"| G{\"Is Input Valid?\"}\n    G -->|\"No\"| H[\"Show Field-Specific Guidance\"]\n    G -->|\"Yes\"| I{\"Resource State OK?\"}\n    I -->|\"No\"| J[\"Handle Not Found or Conflict\"]\n    I -->|\"Yes\"| K{\"Service Healthy?\"}\n    K -->|\"No\"| L[\"Show Retry Guidance and Preserve Input\"]\n    K -->|\"Yes\"| M[\"Perform Action Successfully\"]\n  end\n```\n\n## Conflict Resolution for Concurrent Updates (Business Perspective)\nConcurrent edits occur when the same item is open on multiple devices or sessions. Behavior protects user data and ensures clarity.\n\nPrinciples:\n- No silent overwrites; inform users when the item changed elsewhere.\n- Provide options with safe defaults to minimize unintended data loss.\n- Communicate that the item changed and the user’s pending edits may conflict.\n\nResolution options (business-level; not UI design):\n- Review and Merge: update the draft to reflect the latest version and reapply the user’s edits.\n- Overwrite with My Changes: overwrite the current item with the user’s edits.\n- Discard My Edits: discard the user’s edits and accept the latest item state.\n\nExpected behaviors:\n- Pause the save operation upon detecting a conflict and present the options above.\n- For Review and Merge, provide the latest version while retaining the user’s attempted changes for manual reconciliation.\n- For Overwrite, apply the user’s edits and record that overwrite was chosen for audit purposes.\n- For Discard My Edits, revert to the latest version and confirm completion to the user.\n\n### Conflict Handling Flow (Business-Level)\n```mermaid\ngraph LR\n  A[\"User Submits Changes\"] --> B[\"Detect Version Mismatch\"]\n  B --> C{\"Conflict Detected?\"}\n  C -->|\"No\"| D[\"Save Changes\"]\n  C -->|\"Yes\"| E[\"Inform and Offer Options\"]\n  E --> F{\"User Choice\"}\n  F -->|\"Review and Merge\"| G[\"Load Latest and Retain Edits\"]\n  F -->|\"Overwrite\"| H[\"Apply Edits and Mark Overwrite\"]\n  F -->|\"Discard My Edits\"| I[\"Show Latest and Discard Attempt\"]\n  G --> J[\"Complete Reconciliation and Save\"]\n  H --> J\n  I --> K[\"Return to Item View\"]\n```\n\n## Audit and Monitoring Expectations (Business-Level)\nAudit and monitoring provide accountability, security, and service quality without exposing sensitive content.\n\nAudit scope (business events):\n- Sign-in successes and failures (no sensitive secrets retained).\n- Email verification initiation and completion.\n- Session terminations, including user-initiated global logout.\n- Authorization denials for protected actions.\n- Validation denials with categorical reasons (e.g., \"title length\").\n- Not found attempts on protected resources.\n- Conflict detections and chosen resolutions (merge, overwrite, discard).\n- Rate limit denials by action category.\n- Service unavailable or degraded events affecting user actions.\n\nMonitoring scope (business indicators):\n- Error rate by category and action (e.g., percentage of failed creates due to validation).\n- Retry success rates after guidance.\n- Time-to-recovery for transient failures.\n- Distribution of conflict resolution choices.\n- Rate limit incidents per user segment.\n\nPrivacy expectations:\n- Exclude sensitive secrets and private todo text from audit entries; use categorical labels (e.g., \"validation: title length exceeded\").\n- Aggregated, non-identifying analytics may be used to improve service quality.\n\nRetention expectations:\n- Maintain audit records for a period consistent with business and legal requirements. Summarized metrics may be retained longer than raw events where permissible.\n\n## EARS-Formatted Error Requirements and Acceptance Criteria\nAll requirements appear in EARS format to ensure clarity and testability.\n\n### Authentication (EARS)\n- WHEN a user submits invalid credentials, THE todoApp SHALL show the message \"We couldn’t sign you in. Check your email and password and try again.\" and guide immediate retry.\n- WHEN a user attempts to sign in with an unverified email, THE todoApp SHALL present an email verification required message and allow retry after verification completes.\n- WHEN a user’s session has expired, THE todoApp SHALL prompt the user to sign in again and, upon success, return to the prior action context.\n- IF the same user triggers sign out from all devices, THEN THE todoApp SHALL terminate existing sessions and require re-authentication for further actions.\n\nAcceptance criteria (Authentication):\n- THE todoApp SHALL use standard, consistent phrasing for the same situations across the service.\n- THE todoApp SHALL record sign-in failures as auditable, non-sensitive events suitable for monitoring.\n\n### Authorization (EARS)\n- WHEN a user attempts an action without permission, THE todoApp SHALL display \"You don’t have permission to do that.\" and suggest a safe navigation path.\n- IF a user attempts to access another user’s item, THEN THE todoApp SHALL deny access without revealing the item’s existence or ownership.\n\nAcceptance criteria (Authorization):\n- THE todoApp SHALL apply a consistent tone for permission denials.\n- THE todoApp SHALL categorize permission denials in audit logs for monitoring.\n\n### Validation (EARS)\n- WHEN a user attempts to create an item without a title, THE todoApp SHALL present guidance that a title is required and must be 1–120 characters.\n- WHEN a user provides a description longer than 1,000 characters, THE todoApp SHALL indicate the limit and prompt the user to shorten it.\n- WHEN a user provides a due date earlier than the creation date or more than 5 years in the future (user’s time zone), THE todoApp SHALL prompt for a valid due date.\n- WHEN some fields are valid and others are not, THE todoApp SHALL preserve valid inputs and ask the user to correct only the invalid fields.\n\nAcceptance criteria (Validation):\n- THE todoApp SHALL present a single, concrete reason per invalid field.\n- THE todoApp SHALL preserve all valid inputs during correction.\n\n### Not Found (EARS)\n- WHEN a user requests an item that does not exist or is no longer available, THE todoApp SHALL show an unavailability message and suggest returning to the user’s list or refreshing.\n- IF a user follows an outdated link to an item, THEN THE todoApp SHALL suggest refreshing or navigating back to the list without revealing ownership information.\n\nAcceptance criteria (Not Found):\n- THE todoApp SHALL avoid disclosing existence or ownership of resources the user cannot access.\n- THE todoApp SHALL always provide a safe navigation path.\n\n### Conflict (EARS)\n- WHEN concurrent modification is detected, THE todoApp SHALL pause the save and present the options \"Review and Merge\", \"Overwrite\", and \"Discard My Edits\".\n- WHEN the user selects \"Review and Merge\", THE todoApp SHALL load the latest version and retain the user’s attempted changes for manual reconciliation.\n- WHEN the user selects \"Overwrite\", THE todoApp SHALL apply the user’s edits and record the overwrite choice for audit purposes.\n- WHEN the user selects \"Discard My Edits\", THE todoApp SHALL show the latest version and discard the user’s attempted changes.\n\nAcceptance criteria (Conflict):\n- THE todoApp SHALL prevent silent overwrites when a save is in conflict.\n- THE todoApp SHALL make no state change unless the user chooses one of the provided resolution options.\n\n### Rate Limit (EARS)\n- WHERE a single user performs more than 60 write actions (create/update/delete) within 1 minute, THE todoApp SHALL inform the user \"You’ve reached the limit for this action. Please wait a moment and try again.\" and allow retry after approximately 1 minute.\n- WHERE sign-in attempts exceed 10 within 10 minutes for a user, THE todoApp SHALL temporarily block further attempts and present retry guidance and a password reset path.\n- WHERE other sensitive actions are repeated excessively within a short time, THE todoApp SHALL provide clear guidance on usage limits and approximate wait time.\n\nAcceptance criteria (Rate Limit):\n- THE todoApp SHALL communicate an approximate remaining wait time in natural language.\n- THE todoApp SHALL aggregate rate limit incidents for monitoring.\n\n### Service Unavailable / Degraded (EARS)\n- WHEN a temporary service issue prevents completing a request, THE todoApp SHALL present retry guidance and suggest waiting briefly before trying again.\n- WHERE a planned maintenance window is active, THE todoApp SHALL indicate limited availability and suggest retry after maintenance ends.\n- WHILE the service is partially degraded, THE todoApp SHALL name the affected feature areas and suggest alternatives if available.\n- IF a request fails but user-entered data can be preserved safely, THEN THE todoApp SHALL preserve the data so the user can resubmit later.\n\nAcceptance criteria (Service Unavailable / Degraded):\n- THE todoApp SHALL notify failure without losing user-entered data and provide a retry path.\n- THE todoApp SHALL support proactive messages for predictable limitations such as scheduled maintenance.\n\n### Cross-Cutting Error Handling Principles (EARS)\n- THE todoApp SHALL avoid exposing technical internals (e.g., internal error codes or identifiers) in user-facing messages.\n- THE todoApp SHALL use consistent tone and language for the same error situations across the service.\n- THE todoApp SHALL preserve the user’s recent working context where feasible so work can continue after recovery.\n- THE todoApp SHALL provide a one-step retry mechanism for recoverable failures where possible.\n- THE todoApp SHALL emit non-identifying audit and monitoring events for every error category.\n\n## Acceptance Test Scenarios (EARS)\n- WHEN a user submits creation without a title, THE todoApp SHALL display title validation guidance immediately and preserve other entered fields.\n- WHEN a user attempts to complete an item after the session has expired, THE todoApp SHALL prompt for sign-in and, upon success, continue with the completion attempt.\n- WHEN two devices save edits to the same item nearly simultaneously, THE todoApp SHALL commit one save and, for the other, show a conflict message with resolution options.\n- WHEN a user exceeds 60 write attempts within a minute, THE todoApp SHALL limit additional attempts and display wait guidance.\n- WHEN the service is temporarily unavailable, THE todoApp SHALL preserve user-entered input and encourage retry after a short interval.\n\n## Glossary (Business-Level)\n- Authentication: Verifying a user’s identity.\n- Authorization: Determining whether a user has permission for an action.\n- Validation: Checking that input values comply with business rules.\n- Conflict: A situation where attempted changes differ from the current resource state.\n- Rate Limit: A business-defined threshold on action frequency to protect users and the service.\n- Service Degraded/Unavailable: A temporary reduction or loss of service capability.\n\n## Traceability\n- Authentication and authorization behaviors align with the [User Roles and Authentication Requirements for todoApp](./02-todoApp-user-roles-and-authentication.md).\n- Validation and not found behaviors align with the [Functional Requirements for todoApp](./03-todoApp-functional-requirements.md).\n- Conflict handling aligns with the [User Flows for todoApp](./05-todoApp-user-flows.md).\n- Retry and service health expectations align with the [Non-Functional Requirements for todoApp](./08-todoApp-non-functional-requirements.md)."},{"reason":"Set performance, security, privacy, reliability, and compliance expectations in user terms.","filename":"08-todoApp-non-functional-requirements.md","documentType":"requirement","outline":["Performance and Responsiveness Expectations","Security and Privacy Principles","Availability and Reliability Expectations","Scalability Expectations","Compliance and Legal Considerations","Operational Monitoring and Alerting (business expectations)","Non-Functional Acceptance Criteria (EARS)"],"audience":"development team","keyQuestions":["What performance is expected for core operations?","What security and privacy standards must be met?","What availability and reliability targets apply?"],"detailLevel":"detailed specification","relatedDocuments":["01-todoApp-service-overview.md","02-todoApp-user-roles-and-authentication.md","07-todoApp-error-handling-and-exception-scenarios.md"],"constraints":["State measurable targets in user terms (e.g., within N seconds)","Avoid technology choices or architectural prescriptions","Use EARS for acceptance criteria"],"content":"# 08 — todoApp Non-Functional Requirements\n\n## Document Purpose\nBusiness-level non-functional requirements for todoApp specifying measurable expectations for performance, security, privacy, availability, reliability, scalability, compliance, and operational monitoring. Content describes WHAT outcomes must be achieved from user and business perspectives without prescribing HOW to implement them. No API specifications, database schemas, or technology choices are included.\n\n## Related Documents\n- Service objectives and KPIs: [Service Overview for todoApp](./01-todoApp-service-overview.md)\n- Roles, permissions, and session behaviors: [User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md)\n- User-facing failure behaviors and recovery: [Error Handling and Exception Scenarios](./07-todoApp-error-handling-and-exception-scenarios.md)\n\n## Definitions and Assumptions\n- “Interactive action”: user-triggered operations with immediate feedback (e.g., viewing list, creating/updating/completing/deleting a todo item, logging in/out).\n- Time references: seconds (s) or milliseconds (ms) and percentiles (p50, p95, p99) measured at the boundary where the user perceives completion.\n- “Business day”: 09:00–18:00 in Asia/Seoul (KST) unless stated otherwise. Scheduled maintenance references local time in KST.\n- “Sensitive action”: operations that affect account control or privacy (e.g., password change, email change, account deletion, session revocation).\n- “Peak period”: high-usage windows typical of 19:00–23:00 KST on weekdays and 10:00–23:00 KST on weekends.\n- Confidential and personal data: identifiers (e.g., email), authentication factors, and any user-generated content in todo items or metadata.\n\n---\n\n## Performance and Responsiveness Expectations\nTargets are user-perceived. Unless otherwise noted, targets apply to the 95th percentile and must be met under the scale and concurrency assumptions defined in this document.\n\n### Core Interaction Targets\n- List own todos (paginated up to 50 items): p95 ≤ 300 ms; p99 ≤ 600 ms.\n- Create a todo: p95 ≤ 400 ms; p99 ≤ 800 ms.\n- Update a todo (title/description/due date): p95 ≤ 400 ms; p99 ≤ 800 ms.\n- Complete or reopen a todo: p95 ≤ 300 ms; p99 ≤ 600 ms.\n- Delete a todo: p95 ≤ 400 ms; p99 ≤ 800 ms.\n- Bulk complete/reopen up to 50 items: p95 ≤ 1,000 ms; p99 ≤ 2,000 ms.\n- Authentication (enter credentials to signed-in state): p95 ≤ 2,000 ms; p99 ≤ 4,000 ms.\n- Email-based actions (verification or password reset): email dispatched within 60 s p95.\n- Admin lookups for a single user account (non-invasive read): p95 ≤ 800 ms.\n\n### Payload and Result Size Expectations\n- Interactive list retrieval pagination: up to 50 items per request; results include only fields necessary for list view.\n- Todo description length supported up to 1,000 characters without truncation in storage; interactive viewing and editing meet targets above for up to 1,000 characters.\n- Import/export operations that exceed interactive targets SHALL be processed asynchronously with progress or completion notification.\n\n### Throughput and Concurrency Targets (Business-Level)\n- MVP load: sustain 100 requests per second (RPS) aggregate with short bursts up to 300 RPS for 5 minutes without violating p95 targets.\n- Concurrency: support at least 1,000 concurrently active signed-in sessions during peak periods with no degradation beyond p95 targets.\n- Growth headroom: maintain stable performance up to 3× MVP sustained load without user-visible regressions greater than 20% of stated targets.\n\n### Rate Limiting (User-Centric)\n- Write operations (create/update/complete/delete) per account: up to 60 actions per minute without throttling; above this threshold may be rate-limited to protect availability.\n- Read operations (list/search/filter) per account: up to 120 actions per minute without throttling; above this threshold may be rate-limited.\n- Authentication attempts: protections and lockout expectations appear in Security and Privacy.\n\n### Time Zone and Consistency\n- Read-after-write for a user’s own content: subsequent reads reflect changes immediately p95 ≤ 1,000 ms and p99 ≤ 2,000 ms.\n- Cross-device visibility for a user’s own changes: p95 ≤ 3,000 ms.\n\n---\n\n## Security and Privacy Principles\nBusiness-aligned controls for confidentiality, integrity, and proper access, consistent with role definitions and session behaviors in the [User Roles and Authentication Requirements](./02-todoApp-user-roles-and-authentication.md).\n\n### Authentication and Session Management\n- Only verified accounts may perform non-public actions; unverified accounts have strictly limited capabilities per roles policy.\n- Sessions expire after 30 days of inactivity; sensitive actions require recent re-authentication (within the last 15 minutes).\n- Users can revoke all active sessions immediately from an account security control.\n\n### Credential and Account Protection\n- Password policy: minimum 12 characters; acceptance of long passphrases; require at least three of the following: uppercase, lowercase, numbers, special characters; reject top 10,000 common passwords; prevent reuse of the previous 5 passwords.\n- Login protection: after 10 failed attempts within 10 minutes for an account or from a single source, impose a cooling period of 5 minutes with user-facing guidance for secure recovery.\n- Sensitive changes (email/password) require confirmation through a second-factor channel (e.g., a one-time confirmation code via the verified email channel) without prescribing specific technologies.\n\n### Authorization and Least Privilege\n- Users may only access their own content. Admin actions are logged and limited to the minimum necessary for support and policy enforcement.\n- Administrative access is governed by justification and auditability; access beyond minimum necessary is prohibited.\n\n### Data Minimization and Purpose Limitation\n- Collect only data necessary to operate todoApp and provide the service.\n- Prohibit storage of special categories of personal data in system-managed fields (e.g., national ID numbers) and discourage sensitive content in todo text through policy and guidance.\n\n### Data Protection\n- Protect personal data in transit and at rest using strong, industry-accepted safeguards without specifying particular ciphers or libraries.\n- Protect encryption keys and secrets via processes that enforce least privilege, dual control for changes, and auditability.\n\n### Audit Logging and Access Transparency\n- Log security-relevant events: authentication successes/failures, password changes, email changes, session revocations, account deletions, admin support actions, and mass/bulk operations affecting more than 20 items.\n- Provide user-accessible activity history for their own account, retaining at least 90 days of entries.\n\n### Privacy Controls and User Rights\n- Provide accessible Privacy Policy and Terms of Service before account creation and within account settings.\n- Provide self-service account deletion with clear warnings about irreversible effects and data retention timelines.\n- Provide export of user-owned data in a commonly used, machine-readable format within reasonable size limits.\n\n---\n\n## Availability and Reliability Expectations\nUptime, recovery, and continuity behaviors visible to users and administrators.\n\n### Availability Targets\n- Service-level objective (SLO) for user-facing availability: 99.9% monthly.\n- Planned maintenance windows: default window Sundays 02:00–04:00 KST, announced at least 72 hours in advance. Emergency maintenance is allowed with immediate notice and clear user messaging.\n\n### Reliability and Continuity\n- RTO (Recovery Time Objective): critical user operations recover within 60 minutes following an outage.\n- RPO (Recovery Point Objective): no more than 5 minutes of data for committed operations is lost in a disaster scenario.\n- Durability expectation: once a user receives a success confirmation for a write, that data persists and remains retrievable after any transient fault.\n\n### Degradation and Failover Behavior\n- Graceful degradation: non-critical features (e.g., bulk operations, optional analytics) may be temporarily disabled to preserve core CRUD functionality.\n- Read-only mode: during partial outages, the system may enter read-only mode with clear user messaging; write attempts are queued or safely rejected with recovery guidance per the error handling document.\n\n### Consistency and Ordering\n- For a single user’s data, operations that depend on ordering (e.g., marking complete, then deleting) reflect the most recent committed action in subsequent reads.\n- Conflict handling during concurrent updates follows the business rules in the related documents, ensuring users receive clear guidance without exposing technical details.\n\n---\n\n## Scalability Expectations\nPredictable behavior as usage grows.\n\n### Baseline and Growth Assumptions\n- MVP baseline: 50,000 monthly active users (MAU), 5,000 daily active users (DAU), 1,000 peak concurrent sessions, 100 sustained RPS with 300 RPS bursts.\n- Growth: maintain targets up to 3× baseline without user-visible regressions beyond 20% of stated p95 targets and without service downtime for capacity increases.\n\n### Business Limits\n- Maximum todos per user: 10,000 total items across states. Align active-item guidance and caps with the [Business Rules and Constraints](./06-todoApp-business-rules.md) where an active cap of 5,000 may apply.\n- Bulk operations: up to 100 items per interactive bulk action; larger sets are processed asynchronously with user notification upon completion.\n\n### Elasticity and Resource Management\n- Capacity increases and decreases are transparent to users and must not cause outages or data loss.\n\n---\n\n## Compliance and Legal Considerations\nAligned with common privacy frameworks without asserting jurisdiction-specific legal advice.\n\n- Privacy by design: default to the minimum data necessary; privacy-related defaults are the most protective reasonable option.\n- Notice and consent: obtain user consent for optional data uses such as marketing communications; provide easy opt-out.\n- Data subject rights: enable access, rectification, export, and deletion of user data within 30 days of verified request.\n- Child safety: intended for users aged 13+ unless local law imposes a higher age; when required, obtain guardian consent consistent with applicable law.\n- Data retention: business records (e.g., audit logs) retained for 90 days minimum; user data retention after account deletion follows policy in the data lifecycle document.\n- Cross-border data transfer: disclose data processing locations and ensure transfers comply with applicable cross-border requirements.\n\n---\n\n## Operational Monitoring and Alerting (Business Expectations)\nContinuous verification that objectives are met and regressions detected promptly.\n\n### Key Performance Indicators (KPIs)\n- Latency: p50/p95/p99 across core interactions (list, create, update, complete, delete, login).\n- Error rate: percentage of failed interactions per category (authentication, authorization, validation, conflict, not found, service unavailable) as defined in the error handling document.\n- Throughput: sustained and peak RPS; concurrency of active sessions.\n- Availability: monthly uptime against the 99.9% SLO and error budget consumption.\n- Security signals: failed login spikes, password reset spikes, session revocations, admin privileged operations.\n- Data integrity: periodic checks that ensure committed writes are retrievable and uncorrupted.\n\n### Alerting Thresholds and Response Expectations\n- Critical user operation latency breach: if p95 for list/create/update/complete/delete exceeds target by 25% for 5 consecutive minutes, generate a critical alert.\n- Availability breach: if rolling 5-minute availability falls below 99%, generate a critical alert.\n- Error spike: if failed interactions exceed 2% over 10 minutes for any core operation, generate a high-severity alert with categorization.\n- Security anomaly: if there are more than 50 failed logins for a single account or 500 across the service within 10 minutes, generate a high-severity alert and apply protective measures consistent with lockout policy.\n- On-call responsiveness: acknowledge critical alerts within 5 minutes 24/7; initiate mitigation within 15 minutes; communicate user-facing status within 30 minutes of incident start.\n\n### Incident Management Flow\n```mermaid\ngraph LR\n  subgraph \"Detection\"\n    A[\"Monitoring Detects Breach\"] --> B[\"Alert Generated\"]\n  end\n  subgraph \"Triage\"\n    C[\"On-call Acknowledges\"] --> D[\"Severity Classification\"]\n    D --> E[\"User Impact Assessment\"]\n  end\n  subgraph \"Mitigation\"\n    F[\"Apply Safeguards(Degrade/Throttle/Read-only)\"] --> G[\"Restore Core Functions\"]\n  end\n  subgraph \"Communication\"\n    H[\"Post Status Update(KST Time)\"] --> I[\"Customer Support Briefing\"]\n  end\n  subgraph \"Recovery\"\n    J[\"Validate Data Integrity\"] --> K[\"Confirm SLO Recovery\"]\n  end\n  subgraph \"Postmortem\"\n    L[\"Root Cause Analysis\"] --> M[\"Action Items&Owners\"]\n  end\n  B --> C\n  E --> F\n  G --> H\n  H -.-> I\n  G --> J\n  K --> L\n```\n\n---\n\n## Non-Functional Acceptance Criteria (EARS)\nEARS keywords WHEN/WHILE/IF/THEN/WHERE/THE/SHALL remain in English; descriptions are in business terms.\n\n### Performance\n- WHEN a user retrieves a page of their todo list up to 50 items during peak period, THE todoApp SHALL deliver the response within 300 ms at p95 and within 600 ms at p99.\n- WHEN a user creates a todo with title and optional description up to 1,000 characters, THE todoApp SHALL confirm creation within 400 ms at p95 and within 800 ms at p99.\n- WHEN a user completes or reopens a todo, THE todoApp SHALL reflect the change within 300 ms at p95 and within 600 ms at p99.\n- WHEN a user logs in with valid credentials, THE todoApp SHALL transition to a signed-in state within 2,000 ms at p95 and within 4,000 ms at p99.\n- WHERE a bulk action affects up to 50 items, THE todoApp SHALL complete the action within 1,000 ms at p95 and within 2,000 ms at p99.\n- WHERE an operation exceeds interactive thresholds due to size or complexity, THE todoApp SHALL process it asynchronously and notify the user upon completion.\n\n### Consistency and Cross-Device\n- WHEN a user modifies their own todo items, THE todoApp SHALL provide read-after-write consistency for that user with visibility of the change within 1,000 ms at p95 and 2,000 ms at p99.\n- WHILE a user is signed in on multiple devices, THE todoApp SHALL propagate the user’s own changes across devices within 3,000 ms at p95.\n\n### Rate Limiting and Protection\n- WHERE an account issues more than 60 write actions in 1 minute, THE todoApp SHALL apply fair-use throttling and communicate retry guidance without blocking critical security actions.\n- WHERE an account issues more than 120 read actions in 1 minute, THE todoApp SHALL apply fair-use throttling and communicate retry guidance.\n\n### Security and Sessions\n- THE todoApp SHALL require account verification before granting non-public capabilities.\n- WHERE a session has been inactive for 30 days, THE todoApp SHALL require re-authentication before any further non-public actions.\n- IF there are 10 failed login attempts within 10 minutes for an account, THEN THE todoApp SHALL impose a 5-minute cooldown and provide secure recovery guidance to the user.\n- IF a user invokes “revoke all sessions”, THEN THE todoApp SHALL invalidate all existing sessions within 60 seconds and require re-authentication on all devices.\n- WHERE a user initiates a sensitive action, THE todoApp SHALL require recent re-authentication within the last 15 minutes.\n- THE todoApp SHALL enforce a password policy with minimum 12 characters and at least three character classes; banned password list and recent-password reuse prevention apply.\n\n### Data Protection and Privacy\n- THE todoApp SHALL protect personal data in transit and at rest using strong safeguards and prevent unauthorized access by design and policy.\n- WHERE audit logs contain personal data, THE todoApp SHALL minimize and redact sensitive fields and retain logs for at least 90 days.\n- WHEN a verified user requests export of their data up to 1 GB in size, THE todoApp SHALL provide a machine-readable export within 24 hours under normal operating conditions.\n- WHERE a verified user’s export exceeds typical size, THE todoApp SHALL communicate progress and deliver the export as soon as preparation completes.\n- WHEN a verified user requests account deletion, THE todoApp SHALL remove user-accessible content promptly and complete deletion workflows within 30 days except where legal retention is required.\n\n### Availability and Reliability\n- THE todoApp SHALL achieve 99.9% monthly availability for core user operations under the defined load assumptions.\n- WHEN a service incident impacts users, THE todoApp SHALL publish a status update within 30 minutes of detection and provide subsequent updates at least every 60 minutes until resolution.\n- WHERE core functionality is impaired, THE todoApp SHALL prioritize read access and safe queuing or rejection of writes with clear guidance.\n- WHEN service is restored after an outage, THE todoApp SHALL meet the stated p95 performance targets within 15 minutes of recovery.\n- THE todoApp SHALL meet an RTO of 60 minutes and an RPO of 5 minutes for committed user operations.\n\n### Monitoring and Alerts\n- WHEN p95 latency for any core operation exceeds its target by 25% for 5 consecutive minutes, THE todoApp SHALL generate a critical alert for the on-call responder.\n- WHEN failed user interactions exceed 2% of attempts over a 10-minute window for any core operation, THE todoApp SHALL generate a high-severity alert with categorization.\n- WHEN security anomalies occur (e.g., more than 50 failed logins for an account or 500 service-wide within 10 minutes), THE todoApp SHALL generate a high-severity alert and apply protective measures.\n- WHERE a critical alert is generated, THE todoApp SHALL ensure on-call acknowledgment within 5 minutes and user-facing communication within 30 minutes.\n\n### Compliance and Legal\n- THE todoApp SHALL present accessible Terms of Service and Privacy Policy before account creation and within settings.\n- WHEN receiving a verified data subject request, THE todoApp SHALL fulfill access, rectification, export, or deletion within 30 days.\n- WHERE local law requires consent for optional data uses, THE todoApp SHALL capture, honor, and provide revocation of such consent.\n\n---\n\n## Appendices\n\n### A. p95/p99 Target Summary\n\n| Category | p95 | p99 |\n|---|---:|---:|\n| List todos (≤50 items) | 300 ms | 600 ms |\n| Create todo | 400 ms | 800 ms |\n| Update todo | 400 ms | 800 ms |\n| Complete/Reopen todo | 300 ms | 600 ms |\n| Bulk action (≤50 items) | 1,000 ms | 2,000 ms |\n| Login (valid credentials) | 2,000 ms | 4,000 ms |\n\n### B. Additional Non-Functional Targets\n\n| Target | Value |\n|---|---|\n| Email dispatch (verification/reset) | ≤ 60 s at p95 |\n| Availability (monthly) | 99.9% |\n| RTO | 60 minutes |\n| RPO | 5 minutes |\n| Session inactivity expiry | 30 days |\n| Sensitive action re-auth window | 15 minutes |\n| Audit log retention | ≥ 90 days |\n| Export SLA (≤1 GB) | ≤ 24 hours under normal conditions |\n\n---\n\nBusiness-requirements-only scope applies. All technical implementation decisions, including architecture, APIs, and data design, belong to the development team. The content defines outcomes and constraints to be met from user and business perspectives."},{"reason":"Describe how information conceptually moves through its lifecycle and the related privacy requirements.","filename":"09-todoApp-data-lifecycle-and-privacy.md","documentType":"requirement","outline":["Conceptual Data Flow Overview (business-level)","Data Creation, Update, and Deletion Lifecycle","Retention and Purging Policies","User-Controlled Export/Portability (optional)","Privacy-by-Design Principles","Data Minimization and Purpose Limitation","Right to Erasure and Account Deletion Behaviors","Traceability to Business Rules and Non-Functional Requirements"],"audience":"development team","keyQuestions":["How is user data handled from creation to deletion?","What privacy safeguards are required across the lifecycle?"],"detailLevel":"moderate detail","relatedDocuments":["06-todoApp-business-rules.md","08-todoApp-non-functional-requirements.md"],"constraints":["Keep descriptions conceptual; do not define database schemas or storage technologies","Use EARS for lifecycle requirements where applicable"],"content":"# todoApp Data Lifecycle and Privacy Requirements\n\nBusiness requirements only; all technical implementation decisions (architecture, APIs, database design, and storage technologies) belong to the development team. The content defines WHAT todoApp must do for data across its lifecycle, not HOW to implement it.\n\n## 1. Conceptual Data Flow Overview (business‑level)\n\nData categories\n- User Account Data: identity and authentication attributes needed to operate an account, plus preferences strictly necessary to provide the service.\n- Todo Item Data: user‑owned task records with required fields (e.g., title, status) and optional fields (e.g., description, due date) per functional scope.\n- Operational Security Data: verification/reset artifacts, sessions, and related metadata necessary for authentication and authorization.\n- Administrative and Audit Data: minimal event logs and administrative actions required for support, safety, fraud control, and compliance oversight.\n- Aggregated Analytics (Non‑Personal): metrics computed so that they cannot be used to re‑identify individuals.\n\nConceptual flow\n```mermaid\ngraph LR\n  subgraph \"User Initiated\"\n    A[\"Account Creation\"] --> B[\"Email Verification\"]\n    B --> C[\"User Login\"]\n    C --> D[\"Create/Update Todo Items\"]\n    D --> E[\"Complete/Reopen/Delete Todo Items\"]\n    C --> I[\"Request Export\"]\n  end\n\n  subgraph \"System Governance\"\n    F[\"Retention Counters\"] --> G[\"Soft Delete Window\"]\n    G --> H[\"Scheduled Purge\"]\n    J[\"Prepare User Data Export\"] --> K[\"Deliver Export Package\"]\n    L[\"Audit Events\"] --> M[\"Time‑bound Retention\"]\n    N[\"Backups/Snapshots\"] --> O[\"Expiry per Policy\"]\n  end\n\n  A --> P[\"Account Profile\"]\n  D --> Q[\"Todo Dataset\"]\n  E --> Q\n  C --> R[\"Session Lifecycle\"]\n  I --> J\n  H --> S[\"Permanent Deletion\"]\n  M --> T[\"Expiry or Legal Hold\"]\n  Q -.-> U[\"Indexes/Caches(Update)\"]\n```\n\nNotes\n- \"Soft Delete Window\" is a reversible state prior to permanent deletion.\n- \"Scheduled Purge\" removes data permanently when retention conditions are met.\n- \"Backups/Snapshots\" are immutable recovery copies; access is restricted to disaster recovery scenarios and expire per policy.\n\n## 2. Data Creation, Read, Update, Completion/Reopen, and Deletion Lifecycle\n\n### 2.1 Ownership and Access\n- Users (role: user) own and control their account data and todo items.\n- Administrators (role: admin) operate under least‑privilege for support, safety, and policy enforcement. Administrative access to user data is limited to specific, auditable actions justified by a legitimate business need.\n\n### 2.2 Creation Requirements (EARS)\n- THE todoApp SHALL record the creator’s user identifier as the immutable owner of each todo item at creation time.\n- WHEN a user creates a todo item, THE todoApp SHALL store only fields defined as necessary by the functional scope and business rules.\n- IF a creation request omits a required business field, THEN THE todoApp SHALL reject the creation with a clear explanation referencing the missing or invalid field.\n- WHERE optional fields are provided at creation, THE todoApp SHALL validate them against business rules before accepting the item.\n\n### 2.3 Read and Listing Requirements (EARS)\n- THE todoApp SHALL allow a user to view only their own todo items and account data, except where an admin performs a permitted support action under audit.\n- WHEN a user lists todo items, THE todoApp SHALL return only items not permanently deleted and within the user’s ownership scope.\n- WHERE filters and sorting are requested, THE todoApp SHALL apply only supported business‑level filters and sorts as defined in the functional requirements.\n\n### 2.4 Update Requirements (EARS)\n- WHEN a user updates a todo item they own, THE todoApp SHALL validate each changed field against business rules and persist only if all validations pass.\n- IF an update conflicts with a more recent change, THEN THE todoApp SHALL prevent silent overwrites and provide guidance for conflict resolution.\n- THE todoApp SHALL record the time and actor for each successful update in an auditable manner without exposing implementation details to end users.\n\n### 2.5 Completion/Reopen Requirements (EARS)\n- WHEN a user marks an item as completed, THE todoApp SHALL set the item’s status to completed and record the completion timestamp.\n- WHEN a user reopens a completed item, THE todoApp SHALL revert the status and clear or update completion metadata as defined by business rules.\n\n### 2.6 Deletion Requirements (EARS)\n- WHEN a user deletes a todo item, THE todoApp SHALL move the item to a soft‑delete state that hides it from normal listings and starts a retention countdown.\n- WHILE a todo item is in soft‑delete, THE todoApp SHALL allow the owner to restore it within the defined retention window.\n- IF the soft‑delete retention window elapses, THEN THE todoApp SHALL permanently delete the item during the next scheduled purge.\n- WHERE an admin flags content for policy violations, THE todoApp SHALL allow immediate soft‑delete with admin justification recorded in audit data.\n\n## 3. Retention and Purging Policies\n\nRetention is purpose‑driven and time‑bound. Policy durations are business requirements and may be changed only through documented policy updates.\n\n### 3.1 Todo Items (EARS)\n- THE todoApp SHALL retain active todo items indefinitely until the owner deletes them or the account is deleted.\n- WHEN a todo item is soft‑deleted by its owner, THE todoApp SHALL retain it for up to 30 days to allow restoration.\n- IF a soft‑deleted todo item reaches 30 days without restoration, THEN THE todoApp SHALL permanently delete it during the next scheduled purge.\n\n### 3.2 Accounts and Profiles (EARS)\n- WHEN an account is created but not verified within 14 days, THE todoApp SHALL purge the unverified account and associated artifacts.\n- WHEN a verified user requests account deletion, THE todoApp SHALL initiate a 14‑day grace period before permanent deletion to allow reversal.\n- IF the grace period elapses without reversal, THEN THE todoApp SHALL permanently delete the account and all user‑owned todo items during the next scheduled purge.\n\n### 3.3 Operational Security Data (EARS)\n- THE todoApp SHALL limit the lifetime of one‑time email verification artifacts to 24 hours from issuance.\n- THE todoApp SHALL limit the lifetime of password reset artifacts to 1 hour from issuance.\n- THE todoApp SHALL limit the lifetime of user sessions according to the authentication policy defined in the roles and authentication requirements.\n\n### 3.4 Administrative and Audit Data (EARS)\n- THE todoApp SHALL retain minimal audit events necessary to reconstruct security‑ and policy‑relevant actions for 180 days unless a longer retention is mandated by documented legal obligations.\n- WHERE a legal hold is in effect, THE todoApp SHALL suspend purge of affected audit records until the hold is lifted.\n\n### 3.5 Aggregated Analytics (EARS)\n- THE todoApp SHALL keep only aggregated, non‑personal metrics that cannot feasibly be re‑identified.\n- WHERE any analytics processing would require personal data, THE todoApp SHALL either minimize and anonymize the input or forego the processing to protect user privacy.\n\n### 3.6 Purge Execution (EARS)\n- THE todoApp SHALL execute purge processes on a predictable schedule (at least daily) to remove data whose retention windows have expired.\n- IF a purge process fails partially, THEN THE todoApp SHALL retry purging the remaining eligible records without duplicating prior deletions.\n\n### 3.7 Backups and Disaster Recovery Copies (Business‑Level)\n- THE todoApp SHALL maintain immutable backup/snapshot copies only for disaster recovery and service continuity.\n- WHERE user data is deleted from active systems, THE todoApp SHALL ensure that any residual presence in immutable backups is inaccessible for normal operations and expires automatically per backup retention policy.\n- IF a disaster recovery event requires restoration from backups, THEN THE todoApp SHALL re‑apply applicable deletion and retention rules to restored data as soon as operationally feasible.\n\n## 4. User‑Controlled Export/Portability (optional)\n\n### 4.1 Scope\nUser export includes user‑owned account data and todo item content within the user’s ownership scope. Audit logs, administrative justifications, and internal security artifacts are excluded from user export unless required by applicable law.\n\n### 4.2 Export Requirements (EARS)\n- WHEN a user requests an export, THE todoApp SHALL prepare a complete, machine‑readable package of the user’s account data and todo items.\n- THE todoApp SHALL deliver the export within 24 hours of the request under normal operating conditions.\n- WHERE an export is large or complex, THE todoApp SHALL communicate progress and provide the completed package once preparation is finished.\n- THE todoApp SHALL limit export requests to once per rolling 7‑day period per user to manage capacity and abuse risk.\n- WHERE identity verification is required, THE todoApp SHALL complete appropriate verification before releasing an export package.\n\n## 5. Privacy‑by‑Design Principles\n\n### 5.1 Foundational Principles (EARS)\n- THE todoApp SHALL default to the most privacy‑preserving state for all new features and data flows (privacy by default).\n- THE todoApp SHALL enforce least privilege for all role‑based access to user data.\n- THE todoApp SHALL ensure purpose limitation by collecting and processing data only for clearly defined, legitimate purposes necessary to operate todoApp.\n- THE todoApp SHALL ensure transparency by documenting data uses and changes to policy in a user‑accessible location.\n\n### 5.2 Administrative Access Governance (EARS)\n- WHERE an admin must access user data for support or policy enforcement, THE todoApp SHALL require an explicit business justification recorded in audit data.\n- IF an admin action impacts a user’s data materially (e.g., forced deletion for policy), THEN THE todoApp SHALL record the action with actor, time, scope, and justification in audit data.\n\n### 5.3 Security Posture at Business Level (EARS)\n- THE todoApp SHALL protect personal data at rest and in transit using industry‑appropriate safeguards without prescribing specific technologies.\n- THE todoApp SHALL restrict access to personal data to authorized roles only, consistent with the defined permission model.\n\n### 5.4 Review Gates for New Data Uses (EARS)\n- WHERE a new data category or use is proposed, THE todoApp SHALL undergo a privacy review to confirm minimization, purpose limitation, and retention alignment before launch.\n- IF a proposed use cannot meet privacy principles, THEN THE todoApp SHALL block the change until a compliant approach is defined.\n\n## 6. Data Minimization and Purpose Limitation\n\n### 6.1 Data Collection Boundaries (EARS)\n- THE todoApp SHALL collect only the minimum personal data required to operate user accounts and manage todo items (e.g., contact identifier and authentication secrets).\n- WHERE optional data is provided by the user (e.g., description, due date), THE todoApp SHALL use it solely to enhance the todo management experience.\n- THE todoApp SHALL avoid collecting special categories of personal data; if such data is inadvertently submitted in free‑text fields, THE todoApp SHALL treat it with heightened protection and refrain from using it for profiling or analytics.\n\n### 6.2 Data Use Boundaries (EARS)\n- THE todoApp SHALL not sell personal data or share it with third parties for independent marketing purposes.\n- WHERE service providers are engaged to operate core functionality, THE todoApp SHALL ensure they process data only on behalf of todoApp for permitted purposes.\n\n### 6.3 Storage Boundaries (EARS)\n- THE todoApp SHALL not store personal data beyond the retention periods defined in this document unless required by legal obligations documented by policy.\n\n## 7. Right to Erasure and Account Deletion Behaviors\n\n### 7.1 Conceptual Deletion Flow\n```mermaid\ngraph LR\n  subgraph \"User Action\"\n    A[\"User Requests Account Deletion\"] --> B[\"Start 14‑day Grace Period\"]\n    B --> C{\"Login During Grace?\"}\n  end\n\n  subgraph \"System Outcomes\"\n    D[\"Cancel Deletion and Restore Access\"]\n    E[\"Maintain Grace and Restricted Access\"]\n    F[\"Permanent Deletion at Purge\"]\n  end\n\n  C -->|\"Yes\"| D\n  C -->|\"No\"| E\n  E --> G{\"Grace Expired?\"}\n  G -->|\"Yes\"| F\n  G -->|\"No\"| E\n```\n\n### 7.2 Erasure Requirements (EARS)\n- WHEN a verified user requests account deletion, THE todoApp SHALL initiate a 14‑day grace period and notify the user of the effective deletion date.\n- WHILE an account is in the grace period, THE todoApp SHALL restrict access to read‑only export and deletion cancellation; normal write operations SHALL be blocked.\n- IF the user logs in and cancels during the grace period, THEN THE todoApp SHALL restore full access and stop the deletion process immediately.\n- IF the grace period ends without cancellation, THEN THE todoApp SHALL permanently delete the account, user‑owned todo items, and user‑specific preferences during the next scheduled purge.\n- WHERE deletion would impact records under legal hold or unresolved disputes, THE todoApp SHALL defer deletion of those specific records while completing deletion of all other user data.\n\n### 7.3 Exceptions and Residual Data (EARS)\n- THE todoApp SHALL preserve non‑identifying, aggregated analytics after account deletion, provided such aggregates cannot be used to re‑identify the user.\n- WHERE audit records must be retained for security or compliance, THE todoApp SHALL retain only the minimum necessary audit data for the mandated period, decoupled from content details where feasible.\n- WHERE immutable backups exist, THE todoApp SHALL allow residual traces to expire per backup policy and SHALL not restore deleted user data for ordinary requests.\n\n## 8. Additional Lifecycle Topics\n\n### 8.1 Data Lineage and Auditability (EARS)\n- THE todoApp SHALL maintain auditable records for materially significant events: account lifecycle, session lifecycle, item creation/update/deletion, admin access with justification, export requests and deliveries, purge executions, and legal hold changes.\n- WHERE feasible, THE todoApp SHALL include actor, timestamp (UTC), target scope, and outcome in audit entries while avoiding sensitive content.\n- IF an audit entry would expose secrets or personal content, THEN THE todoApp SHALL store categorical labels instead of raw content.\n\n### 8.2 Caching and Indexing Propagation (EARS)\n- WHEN todo items change state (create/update/complete/reopen/delete), THE todoApp SHALL propagate visibility changes to derived representations (e.g., caches, indexes) within a user‑perceived short interval aligned with non‑functional targets.\n- IF an index or cache temporarily presents stale results, THEN THE todoApp SHALL converge to the correct state within the non‑functional consistency window and avoid re‑exposing permanently deleted content.\n\n### 8.3 Non‑Production/Test Data Controls (EARS)\n- THE todoApp SHALL prohibit the use of live personal data in non‑production environments unless de‑identified to a level that prevents re‑identification.\n- WHERE test data is needed, THE todoApp SHALL use synthetic or de‑identified datasets and SHALL destroy them when no longer needed.\n\n### 8.4 Third‑Party Processors and Data Transfers (EARS)\n- WHERE subprocessors are used to provide core capabilities (e.g., email delivery), THE todoApp SHALL ensure they act as processors on behalf of todoApp and process only for permitted purposes.\n- WHERE cross‑border transfer is required to operate the service, THE todoApp SHALL disclose the general regions involved and ensure transfers occur under appropriate safeguards consistent with applicable policy.\n\n### 8.5 Consent and Preference Management (EARS)\n- WHERE optional communications or features require consent, THE todoApp SHALL capture, honor, and allow revocation of consent without degrading core functionality.\n- IF a user revokes consent, THEN THE todoApp SHALL cease the associated processing promptly and update preference records accordingly.\n\n### 8.6 Data Subject Requests Beyond Deletion (EARS)\n- WHEN a verified user requests access to their personal data, THE todoApp SHALL provide a summary of user‑owned data and profile attributes in a human‑readable and machine‑readable form within a reasonable timeframe communicated to the user (target within 30 days unless policy dictates faster timelines).\n- WHEN a verified user requests rectification of inaccurate personal data they control (e.g., display name), THE todoApp SHALL allow correction and reflect changes in derived views and caches within the non‑functional consistency window.\n- WHERE a request is manifestly unfounded or excessive under applicable policy, THE todoApp SHALL provide a business‑level explanation and may decline the request consistent with policy.\n\n### 8.7 Data Breach Response Expectations (Business‑Level)\n- WHEN a data incident is suspected to have impacted personal data, THE todoApp SHALL initiate incident response procedures, assess scope and impact, and provide user‑facing communication consistent with applicable policy and timelines.\n- WHERE notification is required, THE todoApp SHALL communicate in clear, user‑centric language describing what happened, what data may be involved, protective steps users can take, and how todoApp is addressing the issue.\n\n## 9. Traceability to Business Rules and Non‑Functional Requirements\n\n- Refer to the [Business Rules and Validation Guide](./06-todoApp-business-rules.md) for field‑level validations, ownership, trash/restore rules, rate limits, and time‑zone handling that complement lifecycle behaviors.\n- Refer to the [Non‑Functional Requirements and Service Expectations](./08-todoApp-non-functional-requirements.md) for performance, availability, security, and operational monitoring expectations that constrain lifecycle operations.\n\nTraceability highlights\n- Creation, update, and deletion validations: Business Rules → Todo Item Validation Rules and Ownership.\n- Export responsiveness and delivery window: Non‑Functional → Performance targets for asynchronous operations.\n- Audit and monitoring expectations: Non‑Functional → Operational Monitoring and Alerting.\n\n## 10. Business‑Level Acceptance and Monitoring Criteria (EARS)\n\n- THE todoApp SHALL complete visible create, update, and delete operations on user data within 2 seconds under normal operating conditions.\n- THE todoApp SHALL execute daily purge cycles that remove all data past retention within 24 hours of eligibility.\n- WHEN a user requests export, THE todoApp SHALL provide the export within 24 hours under normal operating conditions.\n- WHEN a user initiates account deletion, THE todoApp SHALL enforce the 14‑day grace period and execute permanent deletion at the next scheduled purge thereafter.\n- WHERE legal hold or compliance exceptions apply, THE todoApp SHALL document the scope and duration and prevent deletion of the held records until the hold is removed.\n- WHERE backups contain residual copies, THE todoApp SHALL ensure they are inaccessible for ordinary operations and expire automatically per policy.\n- WHEN a user requests access or rectification, THE todoApp SHALL fulfill the request within a reasonable timeframe communicated to the user (target within 30 days unless policy dictates otherwise).\n\n## 11. Error and Recovery Expectations Across the Lifecycle (EARS)\n\n- IF a user attempts to restore a todo item after the retention window has expired, THEN THE todoApp SHALL inform the user that restoration is no longer possible and the item has been permanently deleted.\n- IF an export preparation exceeds the standard 24‑hour window due to exceptional load, THEN THE todoApp SHALL notify the user of delay and deliver the export as soon as preparation completes.\n- IF a purge process encounters inconsistencies, THEN THE todoApp SHALL isolate affected records, log the issue for investigation, and continue purging unaffected eligible records.\n- IF an admin‑initiated action is missing a documented justification, THEN THE todoApp SHALL block the action and request a valid justification entry.\n- IF derived indexes or caches temporarily lag after deletion, THEN THE todoApp SHALL prevent re‑exposure of deleted content and converge to the correct state within the non‑functional consistency window.\n\n## 12. Data Categorization (Business‑Level)\n\n| Category | Examples | Owner | Primary Uses | Retention (Business Policy) | Purge Path |\n|---|---|---|---|---|---|\n| User Account Data | Email, display name, locale/time zone, verification status | User | Authentication, personalization | Unverified: 14 days; Verified: until deletion request + 14‑day grace | Account deletion purge |\n| Todo Item Data | Title, description, due date, status, timestamps | User | Personal task management | Active: indefinite; Soft‑deleted: 30 days | Soft‑delete → scheduled purge |\n| Operational Security Data | Verification tokens, reset tokens, session metadata | System | Authentication and recovery | Verification: 24h; Reset: 1h; Sessions: per auth policy | Expire on schedule |\n| Administrative and Audit Data | Admin actions, access justifications, security‑relevant events | System | Accountability, safety, compliance | 180 days or per legal hold | Scheduled purge or hold release |\n| Aggregated Analytics | De‑identified usage metrics | System | Service improvement | As needed, non‑reidentifiable | Not applicable (non‑personal) |\n| Backups/Snapshots | Immutable copies for DR only | System | Disaster recovery | Per backup policy (time‑bound) | Automatic expiry; re‑apply deletions post‑restore |\n\n## 13. Additional Visuals\n\n### 13.1 Todo Item Soft‑Delete Lifecycle\n```mermaid\ngraph LR\n  A[\"Active Item\"] --> B[\"User Deletes(Item→Soft‑Delete)\"]\n  B --> C{\"Within 30 Days?\"}\n  C -->|\"Yes\"| D[\"User Restores(Item→Active)\"]\n  C -->|\"No\"| E[\"Scheduled Purge(Permanent Deletion)\"]\n```\n\n### 13.2 Export Request Flow (Business‑Level)\n```mermaid\ngraph LR\n  A[\"User Requests Export\"] --> B[\"Verify Identity\"]\n  B --> C{\"Verified?\"}\n  C -->|\"Yes\"| D[\"Prepare Package(Machine‑Readable)\"]\n  C -->|\"No\"| E[\"Request Verification\"]\n  D --> F{\"Large/Complex?\"}\n  F -->|\"Yes\"| G[\"Communicate Progress\"]\n  F -->|\"No\"| H[\"Deliver Export\"]\n  G --> H\n```\n\n## 14. Glossary (Business‑Level)\n\n- Aggregated Analytics: Non‑personal statistical measures that cannot be traced back to an identifiable individual.\n- Audit Event: A recorded business event capturing actor, time, scope, and outcome without sensitive content.\n- Grace Period: A bounded time during which a user may reverse a pending account deletion.\n- Legal Hold: A suspension of purge and deletion for specific records due to legal or compliance obligations.\n- Personal Data: Any information relating to an identified or identifiable natural person within todoApp’s scope (e.g., email, user‑generated todo content).\n- Pseudonymization: Processing data in a manner that it can no longer be attributed to a specific user without additional information kept separately.\n- Soft Delete: A reversible state in which data is hidden from normal operations and scheduled for purge after a retention window.\n- Permanent Deletion (Hard Delete): Irreversible removal of data from active systems following retention rules.\n- Subprocessor: A service provider engaged to process personal data on behalf of todoApp for permitted purposes.\n\n---\n\nBusiness requirements only; developers have full autonomy to determine the technical architecture, interfaces, storage strategies, and operational mechanisms necessary to satisfy these requirements while adhering to organizational standards and applicable laws."},{"reason":"Define go-live readiness, measurable acceptance criteria, and success metrics to align delivery and evaluation.","filename":"10-todoApp-acceptance-criteria-and-success-metrics.md","documentType":"requirement","outline":["Release Readiness Checklist","MVP Acceptance Criteria (EARS)","Post-Launch Monitoring Plan (business-level)","User Satisfaction and Support Plan","Success Metrics and Reporting Cadence","Risks and Mitigations"],"audience":"business stakeholders","keyQuestions":["What constitutes acceptance for MVP release?","How will success be measured after launch?","What risks exist and how will they be mitigated?"],"detailLevel":"moderate detail","relatedDocuments":["01-todoApp-service-overview.md","03-todoApp-functional-requirements.md","08-todoApp-non-functional-requirements.md"],"constraints":["Acceptance criteria must be specific, measurable, and testable (EARS)","No technical implementation details or API specifications"],"content":"# todoApp – Acceptance Criteria and Success Metrics\n\nDocument date: 2025-08-15 (Asia/Seoul)\n\nBusiness requirements only; all technical implementation decisions (architecture, APIs, database design, libraries, infrastructure) are at the discretion of the development team. Content defines WHAT must be satisfied for go‑live and post‑launch success in business terms, not HOW to build it.\n\n## Related Reading\n- Vision, scope, and model context: [todoApp Service Overview](./01-todoApp-service-overview.md)\n- Feature scope and behaviors: [todoApp Functional Requirements](./03-todoApp-functional-requirements.md)\n- Quality targets and constraints: [todoApp Non‑Functional Requirements](./08-todoApp-non-functional-requirements.md)\n\n## 1) Release Readiness Checklist\nAll items must be satisfied before declaring the MVP “Go‑Live Ready.” Items are business‑measurable and auditable.\n\n1. Scope and Feature Completeness\n   - MVP feature set matches the [todoApp Functional Requirements](./03-todoApp-functional-requirements.md): account registration/login/logout, email verification, password reset/change, session revocation, todo item create/read/update/delete, completion/reopen, optional description and due date, filtering/sorting, timezone handling, data ownership/privacy rules, and optional export.\n   - No open P0/P1 defects affecting core flows: register, verify, login, view list, create todo, edit, complete/reopen, delete, filter/sort.\n   - All acceptance tests in Section 2 pass with documented evidence and traceability to requirements.\n   - Known limitations are documented with mitigation or deferral notes; no hidden scope gaps remain for MVP.\n\n2. Non‑Functional Readiness\n   - Performance sampling under representative load meets p95 ≤ 2 seconds user‑perceived for core actions (register, login, list, add, edit, complete, delete, filter/sort) and aligns with the [todoApp Non‑Functional Requirements](./08-todoApp-non-functional-requirements.md).\n   - Availability plan, on‑call schedule, and escalation matrix prepared for the first 4 weeks; coverage confirmed for the first 72 hours post‑launch.\n   - Monitoring dashboards for KPIs and error categories configured and accessible to stakeholders; alert thresholds tested.\n   - Read‑after‑write and cross‑device visibility behaviors validated against non‑functional targets.\n\n3. Security, Privacy, and Compliance Readiness\n   - Password, rate‑limit, and session policies validated as per [Roles and Authentication] and NFR expectations.\n   - Privacy notices, Terms of Service, and data lifecycle policies published and consistent with [todoApp Data Lifecycle and Privacy Requirements] if applicable.\n   - Audit trail coverage validated for significant account events and todo changes; sampling demonstrates integrity and minimal sensitive exposure.\n   - Access control checks validated for user/admin roles with least‑privilege and justification requirements for admin support access.\n\n4. Operational Readiness\n   - Incident management runbooks completed: severity definitions, triage steps, escalation contacts, user communication templates, and status update cadence.\n   - Backup/restore drill executed successfully within business RTO/RPO expectations defined in NFRs; outcomes documented.\n   - Rollback/disable plan defined at business level: reversible feature toggles or clear revert path available without user‑visible data loss.\n   - Capacity and rate‑limit policies exercised via dry runs; system behavior under throttling meets user‑guidance expectations.\n\n5. Documentation and Training\n   - Stakeholder review of this acceptance set complete; QA test cases trace to EARS acceptance criteria.\n   - User‑facing help content prepared for common tasks and recovery scenarios: registration and verification, login issues, password reset/change, creating and managing todos, completion/reopen, due date/timezone behavior, privacy basics, account deletion, export (if enabled).\n   - Internal support playbooks available for first‑line and admin support actions, including session revocation and account suspension/reinstatement.\n\n6. Launch Logistics\n   - Launch window scheduled with stakeholder sign‑off, including freeze period and change control policy for the launch week.\n   - Pre‑launch dry run executed (day‑in‑the‑life) covering registration‑to‑completion flows with monitoring active; issues resolved.\n   - Communication plan finalized (release notes, internal updates) including MVP scope, known limitations, and support contact channels.\n\n### Go/No‑Go Decision Flow (Business View)\n```mermaid\ngraph LR\n  A[\"All Readiness Items Evaluated\"] --> B{\"All P0/P1 Defects Closed?\"}\n  B -->|\"Yes\"| C{\"Acceptance Tests Passed?\"}\n  B -->|\"No\"| H[\"No‑Go: Fix Critical Defects\"]\n  C -->|\"Yes\"| D{\"Monitoring & Support Ready?\"}\n  C -->|\"No\"| I[\"No‑Go: Complete Tests\"]\n  D -->|\"Yes\"| E{\"Stakeholder Sign‑Off Complete?\"}\n  D -->|\"No\"| J[\"No‑Go: Finalize Ops & Support\"]\n  E -->|\"Yes\"| F[\"Go: Launch Window\"]\n  E -->|\"No\"| G[\"No‑Go: Obtain Approvals\"]\n```\n\n## 2) MVP Acceptance Criteria (EARS)\nKeywords WHEN, WHILE, IF, THEN, WHERE, THE, SHALL remain in English; descriptions are in en‑US.\n\n### 2.1 Authentication and Account Lifecycle\n- WHEN a person registers with valid email and password, THE todoApp SHALL create a new account and send an email verification within 1 minute.\n- IF a person attempts to register with an email already in use, THEN THE todoApp SHALL reject the registration and instruct the person to reset password or use another email.\n- WHEN a person verifies the email within 24 hours, THE todoApp SHALL activate the account and allow login.\n- IF an email verification link is expired, THEN THE todoApp SHALL present a method to request a new verification link.\n- WHEN a user logs in with correct credentials for an active account, THE todoApp SHALL grant access within 2 seconds perceived by the user.\n- IF a user enters incorrect credentials, THEN THE todoApp SHALL deny access and provide actionable guidance to recover (e.g., reset password).\n- WHEN a user logs out, THE todoApp SHALL end the active session immediately from the user perspective.\n- WHEN a user initiates password reset with a registered email, THE todoApp SHALL send reset instructions within 1 minute.\n- IF a password reset token is invalid or expired, THEN THE todoApp SHALL prevent password change and provide a method to request a new reset.\n- WHERE an account is suspended by an admin for policy reasons, THE todoApp SHALL prevent access to protected features and communicate suspension status at next sign‑in attempt.\n- WHEN a user requests account deletion, THE todoApp SHALL schedule deletion in accordance with data lifecycle requirements and confirm request receipt to the user.\n- WHERE a user chooses “revoke all sessions,” THE todoApp SHALL invalidate existing sessions within 60 seconds and require re‑authentication on all devices.\n\n### 2.2 Todo Item Core Operations\n- WHEN a logged‑in user submits a new todo with a non‑empty title up to the allowed length, THE todoApp SHALL create the todo and show it in the user’s list immediately.\n- IF a user attempts to create a todo without a title or exceeding the maximum length, THEN THE todoApp SHALL reject creation and display validation guidance.\n- WHEN a user updates title, description, or due date of their own todo with valid values, THE todoApp SHALL persist the changes and reflect them in the list within 2 seconds perceived by the user.\n- IF a user attempts to update a todo they do not own, THEN THE todoApp SHALL deny the action and retain the original state.\n- WHEN a user marks their own todo as complete, THE todoApp SHALL set the completion state and update list indicators within 2 seconds perceived by the user.\n- WHEN a user reopens a completed todo, THE todoApp SHALL remove the completion state and update the list accordingly within 2 seconds perceived by the user.\n- WHEN a user deletes their own todo, THE todoApp SHALL remove it from the list and confirm deletion within 2 seconds perceived by the user.\n- IF a user attempts to delete a todo they do not own, THEN THE todoApp SHALL deny the action and provide an ownership restriction message.\n\n### 2.3 Filtering, Sorting, and Timezone Behaviors\n- WHEN a user filters todos by status (all, active, completed), THE todoApp SHALL return a filtered list consistent with the selected status within 2 seconds perceived by the user.\n- WHEN a user sorts todos by created time or due date, THE todoApp SHALL present results ordered according to the selected sort within 2 seconds perceived by the user.\n- WHILE a user’s timezone preference is set, THE todoApp SHALL display due dates and times in that timezone consistently in lists and details.\n- IF a due date is provided without time, THEN THE todoApp SHALL interpret it as end‑of‑day in the user’s timezone.\n- IF a due date is invalid or in an unsupported format from the user’s perspective, THEN THE todoApp SHALL reject it and provide clear correction guidance.\n\n### 2.4 Data Ownership, Privacy, and Export\n- THE todoApp SHALL restrict todos so that users can view and modify only their own items.\n- IF an unauthenticated person attempts to access protected todo features, THEN THE todoApp SHALL require authentication before continuing.\n- WHERE an admin needs to assist for support or policy enforcement, THE todoApp SHALL allow admin‑level access to the minimum necessary information for the task and log the access for audit.\n- WHEN a user requests export of their todo data (if enabled in MVP), THE todoApp SHALL provide a complete, human‑readable or machine‑readable export within a timeframe communicated to the user and within 24 hours under normal conditions.\n\n### 2.5 Error Handling and Recovery (Business View)\n- IF an operation fails due to validation errors, THEN THE todoApp SHALL not change data and SHALL present actionable messages enabling the user to correct and retry immediately.\n- IF an operation fails due to conflicting concurrent updates on the same todo, THEN THE todoApp SHALL preserve data integrity and inform the user how to proceed (e.g., refresh to load the latest and reapply changes).\n- IF a temporary service issue prevents completion of a core action, THEN THE todoApp SHALL encourage retry and avoid duplicate creations or updates from a single user action.\n- IF a rate limit is reached, THEN THE todoApp SHALL inform the user in natural language and indicate when they may try again.\n\n### 2.6 Performance and Responsiveness\n- THE todoApp SHALL complete core interactions (login, list load, add, edit, complete, delete, filter/sort) within 2 seconds perceived by the user for the 95th percentile under expected MVP load.\n- WHERE larger lists are present (e.g., 500 todos), THE todoApp SHALL allow the user to access and interact with a subset without undue delay and provide a predictable way to navigate additional items.\n- WHERE a bulk action affects up to 50 items, THE todoApp SHALL complete the action within targets set in NFRs or process asynchronously with clear notification.\n\n### 2.7 Administration (Business Controls)\n- WHEN an admin suspends an account for policy reasons, THE todoApp SHALL prevent further protected actions by that account and record the action for audit.\n- WHEN an admin reinstates a suspended account, THE todoApp SHALL restore access to protected features.\n- WHEN an admin needs to view a user’s account for support, THE todoApp SHALL limit visibility to the minimum necessary data and record the access for audit.\n- WHEN an admin revokes a user’s sessions, THE todoApp SHALL require the user to sign in again on subsequent actions and record the event for audit.\n\n### 2.8 Audit and Activity Logging (Acceptance)\n- THE todoApp SHALL record business‑relevant audit entries for: registration, email verification, login success/failure, logout, password reset request/completion, password change, session creation/refresh/revocation, account suspension/reactivation, account deletion request/completion, admin support access to user data, and modification of more than 20 items in a bulk action.\n- WHEN an audit event is recorded, THE todoApp SHALL capture event type, actor role (user/admin), timestamp (UTC), target (where relevant), outcome (success/failure), and justification (where required) without storing sensitive secrets.\n\n## 3) Post‑Launch Monitoring Plan (Business‑Level)\nMonitoring begins day 0 and relies on dashboards accessible to stakeholders; thresholds initiate incident processes.\n\n1. Availability and Performance (User‑Perceived)\n   - Track success percentage of core actions: login, list, create, update, complete, delete.\n   - Track p95 completion time for core actions; target ≤ 2 seconds; track p99 for regression signals.\n   - Track error rate by category: authentication failures, authorization denials, validation errors, conflicts, rate‑limit denials, temporary service issues.\n   - Track read‑after‑write visibility latency and cross‑device propagation latency per NFR targets.\n\n2. Adoption and Engagement\n   - New accounts per day and percentage verified within 24 hours.\n   - Time‑to‑first‑todo: median ≤ 5 minutes; distribution by cohort.\n   - DAU/WAU/MAU with week‑over‑week growth; engagement distribution across create, update, complete actions.\n   - Task completion ratio: completed/created per cohort; overdue ratio.\n\n3. Data Quality and Privacy Indicators\n   - Ownership violations prevented (successful violations must be zero); denials are counted as attempts and triaged if anomalous.\n   - Admin support accesses with justification logs; outliers flagged for review.\n   - Export delivery success within target windows; export volume trends.\n\n4. Stability and Support Load\n   - Support contacts per 1,000 active users per week; first‑contact resolution rate.\n   - Top 5 user‑reported issues and time‑to‑resolution; recurring themes tracked.\n   - Incident count and duration by severity; availability vs. SLO error budget.\n\nAlerting Thresholds (Business View)\n- WHEN p95 completion time for any core action exceeds 2 seconds for 15 continuous minutes, THE operations process SHALL initiate an incident response and prioritize restoration to target performance.\n- WHEN success rate of any core action drops below 99% for 15 continuous minutes, THE operations process SHALL begin investigation and user communication steps.\n- WHEN verification completion within 24 hours drops below 80% for 2 consecutive days, THE product process SHALL review onboarding guidance and friction points.\n- WHEN rate‑limit denials spike above 2% of attempts in a 10‑minute window, THE product process SHALL evaluate guidance and potential abuse patterns.\n\n## 4) User Satisfaction and Support Plan\n1. Feedback Collection\n   - In‑product lightweight CSAT prompt for key actions (create/complete todo) shown non‑intrusively after completion, no more than once per 30 days per user.\n   - Quarterly NPS and qualitative survey to verified users; open‑ended improvement prompts collected and categorized.\n   - Feedback channels: help center form and dedicated email monitored during business hours; triage categorization aligned to error taxonomy.\n\n2. Support SLAs (Business Commitments)\n   - Severity 1 (core actions unavailable for many users): acknowledgement within 15 minutes; user‑facing update every 60 minutes until resolution.\n   - Severity 2 (significant degradation or feature impairment): acknowledgement within 2 business hours; updates every business day until resolution.\n   - Severity 3 (minor issues or guidance requests): acknowledgement within 2 business days; resolution targeted within 5 business days.\n   - Post‑incident summaries for Sev‑1/Sev‑2 incidents circulated within 5 business days, including user impact and prevention actions.\n\n3. Knowledge and Enablement\n   - Self‑service articles: account creation/verification, login troubleshooting, password reset/change, creating/managing todos, completion/reopen, due date/timezone semantics, privacy/data lifecycle, account deletion, export.\n   - Internal playbooks: admin session revocation and account suspension/reinstatement with justification logging.\n\n4. Launch Support Posture\n   - First 2 weeks: extended support window and increased staffing; proactive monitoring of onboarding funnel and verification completion.\n   - Communication templates ready for common errors and incidents; tone consistent and user‑centric.\n\n## 5) Success Metrics and Reporting Cadence\nTargets for the first 90 days post‑launch; ambitious yet feasible for MVP.\n\n1. Activation and Onboarding\n   - Email verification completion within 24 hours ≥ 85% by day 30; ≥ 90% by day 90.\n   - Time‑to‑first‑todo median ≤ 5 minutes by day 30; ≤ 3 minutes by day 90.\n\n2. Engagement\n   - D7 retention ≥ 25% by day 30; ≥ 30% by day 90.\n   - Task completion ratio (completed/created) ≥ 70% by day 30; ≥ 75% by day 90.\n   - Median todos created per active user per week ≥ 5 by day 90.\n\n3. Satisfaction and Support\n   - CSAT on key actions ≥ 4.3/5 by day 30; ≥ 4.5/5 by day 90.\n   - NPS ≥ +20 by quarter end.\n   - Support contacts ≤ 10 per 1,000 active users per week by day 30; ≤ 7 by day 90; first‑contact resolution ≥ 70% by day 90.\n\n4. Reliability and Performance (User‑Perceived)\n   - p95 completion time for core actions ≤ 2 seconds sustained.\n   - Core action success rate ≥ 99.5% sustained (excluding user‑initiated validation denials).\n   - Zero Sev‑1 incidents in the first 14 days; ≤ 1 Sev‑1 and ≤ 3 Sev‑2 incidents by day 90.\n\nReporting Cadence\n- Weekly: activation, engagement, reliability summary with deltas vs. targets and top issues; action items for the next week.\n- Monthly: cohort analysis, retention and satisfaction trends, export usage, and prioritized improvements.\n- Quarterly: strategic review against Service Overview KPIs and recommendations for roadmap adjustments.\n\n## 6) Risks and Mitigations\nMajor risks relevant to acceptance and sustained success with business mitigations.\n\n1. Performance Risk (User‑Perceived Latency)\n   - Risk: Perceived delays above 2 seconds degrade satisfaction and retention.\n   - Mitigation: Performance budget tracking; phased exposure if needed; prioritize optimization of list load and write actions; temporarily disable non‑critical features during incidents to preserve core actions.\n\n2. Onboarding Friction\n   - Risk: Low email verification rates and complex password resets reduce activation.\n   - Mitigation: Clear messaging for verification; resend link flow; simple reset guidance; monitor verification funnel and test copy improvements.\n\n3. Data Integrity and Concurrency Conflicts\n   - Risk: Lost updates or conflicting edits cause user confusion.\n   - Mitigation: Conflict detection behaviors and user guidance; encourage refresh and reapply; emphasize integrity in acceptance tests.\n\n4. Privacy and Access Control\n   - Risk: Improper access to another user’s data erodes trust.\n   - Mitigation: Strict ownership rules, minimum‑necessary admin access with justification, and audit expectations; periodic review of admin support accesses.\n\n5. Support Overload at Launch\n   - Risk: High contact volume overwhelms support.\n   - Mitigation: Proactive FAQ, clear in‑product guidance for common errors, temporary extended support during first 2 weeks, incident communication templates prepared.\n\n6. Scope Creep Before Go‑Live\n   - Risk: Unplanned features jeopardize schedule and quality.\n   - Mitigation: Enforce MVP scope freeze; redirect additions to post‑MVP backlog with business justification.\n\n7. Insufficient Monitoring or Alert Fatigue\n   - Risk: Missed issues or slow response to degradations.\n   - Mitigation: Focus alerts on user‑perceived metrics (success rate, p95 time); define actionable thresholds; tune based on signal‑to‑noise.\n\n8. Legal/Compliance Changes\n   - Risk: Regulatory changes or regional policies affect privacy, retention, or consent.\n   - Mitigation: Periodic policy reviews; update notices and flows; maintain documented exceptions (e.g., legal hold) as business rules.\n\n9. Dependency Outages\n   - Risk: Email delivery or other third‑party services degrade onboarding or recovery flows.\n   - Mitigation: Transparent user messaging and retry guidance; contingency plans for delayed emails; operational escalation with providers.\n\n---\n\n## Traceability to Acceptance and Success\n- Each acceptance criterion maps to features in the [todoApp Functional Requirements](./03-todoApp-functional-requirements.md) and quality targets in the [todoApp Non‑Functional Requirements](./08-todoApp-non-functional-requirements.md).\n- Release readiness, monitoring, and KPI targets align with the go‑to‑market plan and KPIs in the [todoApp Service Overview](./01-todoApp-service-overview.md).\n\nEnd of document."}],"created_at":"2025-08-15T03:49:52.237Z","completed_at":"2025-08-15T04:02:24.765Z","step":0}]